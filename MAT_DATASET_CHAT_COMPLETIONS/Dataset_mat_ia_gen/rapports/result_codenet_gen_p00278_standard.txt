================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:22:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import bisect

input = sys.stdin.readline

N, Q = map(int, input().split())
scores = [int(input()) for _ in range(N)]

leaders_set = set()
leaders_scores = []

def update_leaders_scores():
    global leaders_scores
    leaders_scores = sorted(scores[i-1] for i in leaders_set)

def count_unreachable(r):
    if not leaders_scores:
        return N
    count = 0
    L = leaders_scores
    for sc in scores:
        # Find leader with score <= sc and leader_score >= sc - r
        # Condition: leader_score <= sc and leader_score >= sc - r
        # So leader_score in [sc - r, sc]
        left = sc - r
        right = sc
        # Find left boundary
        li = bisect.bisect_left(L, left)
        # Find right boundary
        ri = bisect.bisect_right(L, right)
        if li == ri:
            count += 1
    return count

for _ in range(Q):
    query = input().split()
    if query[0] == "ADD":
        a = int(query[1])
        leaders_set.add(a)
        # update leaders_scores
        # Since max leaders 100, just sort every time
        update_leaders_scores()
    elif query[0] == "REMOVE":
        a = int(query[1])
        leaders_set.remove(a)
        update_leaders_scores()
    else:  # CHECK x
        x = int(query[1])
        if not leaders_scores:
            # No leaders, unreachable = N
            print("0" if x >= N else "NA")
            continue
        # Binary search on r: 0 to max_possible
        # max_possible = max score - min score
        left = 0
        right = 10**9
        ans = None
        while left <= right:
            mid = (left + right) // 2
            unreachable = count_unreachable(mid)
            if unreachable <= x:
                ans = mid
                right = mid - 1
            else:
                left = mid + 1
        if ans is None:
            print("NA")
        else:
            print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020771251001860946
    2. 'os' → logprob: -8.500207901000977
    3. ' math' → logprob: -13.375207901000977
    4. ' re' → logprob: -13.750207901000977
    5. '"os' → logprob: -14.250207901000977
    6. ' json' → logprob: -14.750207901000977
    7. '_os' → logprob: -16.375207901000977
    8. ' ' → logprob: -16.500207901000977
    9. ' io' → logprob: -16.625207901000977
    10. '	os' → logprob: -16.875207901000977

Token 5: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -5.7053759519476444e-05
    2. 't' → logprob: -10.250057220458984
    3. 'e' → logprob: -11.375057220458984
    4. 'ected' → logprob: -12.250057220458984
    5. 'ec' → logprob: -13.500057220458984
    6. 'ectl' → logprob: -13.875057220458984
    7. '```' → logprob: -13.875057220458984
    8. 'ection' → logprob: -14.500057220458984
    9. '>' → logprob: -15.500057220458984
    10. 'ector' → logprob: -15.875057220458984

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.15427811443805695
    2. '<|end|>' → logprob: -3.279278039932251
    3. '
' → logprob: -3.529278039932251
    4. '\n' → logprob: -3.904278039932251
    5. 'newline' → logprob: -4.27927827835083
    6. '' → logprob: -4.65427827835083
    7. '

' → logprob: -4.90427827835083
    8. '\' → logprob: -5.15427827835083
    9. 'import' → logprob: -5.40427827835083
    10. '```' → logprob: -5.90427827835083

Token 7: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5449424386024475
    2. '.' → logprob: -1.7949423789978027
    3. '
' → logprob: -2.1699423789978027
    4. 'import' → logprob: -3.2949423789978027
    5. '' → logprob: -3.6699423789978027
    6. '

' → logprob: -4.169942378997803
    7. 'from' → logprob: -4.669942378997803
    8. ',' → logprob: -4.794942378997803
    9. '```' → logprob: -4.794942378997803
    10. '#' → logprob: -5.419942378997803

Token 8: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12152369320392609
    2. '.' → logprob: -2.87152361869812
    3. '=' → logprob: -3.37152361869812
    4. ')' → logprob: -4.621523857116699
    5. '()' → logprob: -5.371523857116699
    6. '_' → logprob: -5.871523857116699
    7. ' =' → logprob: -6.246523857116699
    8. '_data' → logprob: -6.496523857116699
    9. '```' → logprob: -6.996523857116699
    10. '.readline' → logprob: -8.3715238571167

Token 9: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.2209254503250122
    2. ' sys' → logprob: -1.7209254503250122
    3. 'input' → logprob: -3.9709253311157227
    4. ' input' → logprob: -7.720925331115723
    5. '	sys' → logprob: -11.345925331115723
    6. '=sys' → logprob: -12.095925331115723
    7. 'lambda' → logprob: -12.845925331115723
    8. '(sys' → logprob: -13.345925331115723
    9. '```' → logprob: -13.845925331115723
    10. ' ' → logprob: -15.595925331115723

Token 10: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.007117303088307381
    2. '.' → logprob: -5.25711727142334
    3. ' .' → logprob: -7.38211727142334
    4. '.stdout' → logprob: -7.38211727142334
    5. '.argv' → logprob: -8.25711727142334
    6. '.input' → logprob: -8.63211727142334
    7. '.readline' → logprob: -9.13211727142334
    8. '.path' → logprob: -10.25711727142334
    9. '.std' → logprob: -10.88211727142334
    10. '.stderr' → logprob: -11.88211727142334

Token 11: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.07386007905006409
    2. '.read' → logprob: -3.0738601684570312
    3. '.' → logprob: -3.6988601684570312
    4. '.readlines' → logprob: -8.698860168457031
    5. 'read' → logprob: -11.073860168457031
    6. '.Read' → logprob: -11.448860168457031
    7. '.buffer' → logprob: -12.698860168457031
    8. '.reader' → logprob: -13.698860168457031
    9. '```' → logprob: -13.823860168457031
    10. '.write' → logprob: -14.073860168457031

Token 12: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.37608978152275085
    2. '(' → logprob: -1.2510898113250732
    3. '(
' → logprob: -4.251089572906494
    4. '()
' → logprob: -5.251089572906494
    5. 'def' → logprob: -6.126089572906494
    6. '
' → logprob: -7.126089572906494
    7. '()

' → logprob: -7.126089572906494
    8. '(n' → logprob: -7.501089572906494
    9. '()\' → logprob: -7.751089572906494
    10. ')' → logprob: -7.876089572906494

Token 13: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38776811957359314
    2. 'def' → logprob: -1.1377681493759155
    3. 'N' → logprob: -7.762768268585205
    4. 'class' → logprob: -8.637767791748047
    5. 'q' → logprob: -9.262767791748047
    6. '\' → logprob: -9.762767791748047
    7. 't' → logprob: -10.012767791748047
    8. 'from' → logprob: -10.762767791748047
    9. 'd' → logprob: -11.512767791748047
    10. 'a' → logprob: -11.637767791748047

Token 14: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4292301535606384
    2. ' ' → logprob: -1.5542302131652832
    3. '=' → logprob: -2.179230213165283
    4. ',' → logprob: -4.054230213165283
    5. ' ,' → logprob: -6.054230213165283
    6. ')' → logprob: -6.554230213165283
    7. '<|end|>' → logprob: -6.929230213165283
    8. '>' → logprob: -7.929230213165283
    9. '  ' → logprob: -8.054229736328125
    10. '.' → logprob: -8.179229736328125

Token 15: ' Q' (ID: 1486)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9386239647865295
    2. ' K' → logprob: -1.1886239051818848
    3. ' M' → logprob: -1.4386239051818848
    4. 'M' → logprob: -3.5636239051818848
    5. 'K' → logprob: -3.6886239051818848
    6. ' Q' → logprob: -5.313623905181885
    7. 'Q' → logprob: -5.688623905181885
    8. 'int' → logprob: -7.188623905181885
    9. 'space' → logprob: -7.313623905181885
    10. '=' → logprob: -7.438623905181885

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004182279109954834
    2. '=' → logprob: -5.5041823387146
    3. ' ' → logprob: -9.504181861877441
    4. ',' → logprob: -10.754181861877441
    5. ' ,' → logprob: -12.004181861877441
    6. ' =
' → logprob: -14.504181861877441
    7. ' =",' → logprob: -15.004181861877441
    8. ')' → logprob: -15.254181861877441
    9. '<|end|>' → logprob: -16.129182815551758
    10. ' ='' → logprob: -16.254182815551758

Token 17: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.014163628220558167
    2. 'map' → logprob: -4.264163494110107
    3. ' ' → logprob: -16.389163970947266
    4. ' input' → logprob: -16.889163970947266
    5. ' list' → logprob: -17.389163970947266
    6. '	map' → logprob: -17.889163970947266
    7. '(map' → logprob: -18.514163970947266
    8. ' int' → logprob: -18.764163970947266
    9. ' mapa' → logprob: -18.764163970947266
    10. 'input' → logprob: -19.014163970947266

Token 18: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019144734367728233
    2. '(lambda' → logprob: -4.519144535064697
    3. '(int' → logprob: -5.144144535064697
    4. '(str' → logprob: -7.019144535064697
    5. '<|end|>' → logprob: -7.269144535064697
    6. '(
' → logprob: -9.019145011901855
    7. '(input' → logprob: -9.019145011901855
    8. '(tuple' → logprob: -10.269145011901855
    9. '(len' → logprob: -10.394145011901855
    10. '((' → logprob: -10.519145011901855

Token 19: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8746199011802673
    2. ',' → logprob: -0.8746199011802673
    3. ')' → logprob: -2.624619960784912
    4. '(int' → logprob: -2.999619960784912
    5. '(input' → logprob: -4.249619960784912
    6. ',int' → logprob: -4.499619960784912
    7. ',input' → logprob: -4.874619960784912
    8. '<|end|>' → logprob: -5.624619960784912
    9. 'input' → logprob: -6.999619960784912
    10. '(str' → logprob: -7.124619960784912

Token 20: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6931516528129578
    2. ' input' → logprob: -0.6931516528129578
    3. ' sys' → logprob: -13.818151473999023
    4. 'int' → logprob: -14.068151473999023
    5. ',input' → logprob: -14.568151473999023
    6. 'str' → logprob: -14.818151473999023
    7. 'sys' → logprob: -14.818151473999023
    8. '(input' → logprob: -14.943151473999023
    9. ' ' → logprob: -15.068151473999023
    10. ')' → logprob: -15.193151473999023

Token 21: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.016123872250318527
    2. '()' → logprob: -4.3911237716674805
    3. '())' → logprob: -5.6411237716674805
    4. ')' → logprob: -10.89112377166748
    5. '()))' → logprob: -11.26612377166748
    6. '(' → logprob: -11.89112377166748
    7. '()[' → logprob: -12.51612377166748
    8. '()
' → logprob: -12.89112377166748
    9. '()]' → logprob: -13.51612377166748
    10. '('' → logprob: -13.64112377166748

Token 22: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.2538994550704956
    2. 'split' → logprob: -1.5038994550704956
    3. 'rstrip' → logprob: -6.253899574279785
    4. ')' → logprob: -10.378899574279785
    5. ' strip' → logprob: -12.253899574279785
    6. 'read' → logprob: -12.378899574279785
    7. '())' → logprob: -13.128899574279785
    8. ' split' → logprob: -13.253899574279785
    9. '()' → logprob: -15.253899574279785
    10. 'str' → logprob: -15.378899574279785

Token 23: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00045807508286088705
    2. '))' → logprob: -7.750458240509033
    3. '())' → logprob: -10.875457763671875
    4. '()' → logprob: -12.250457763671875
    5. '`)' → logprob: -13.875457763671875
    6. ')`' → logprob: -14.250457763671875
    7. '),' → logprob: -14.500457763671875
    8. '(' → logprob: -14.625457763671875
    9. ' )' → logprob: -15.250457763671875
    10. ')))' → logprob: -15.375457763671875

Token 24: 'scores' (ID: 109945)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.9248905181884766
    2. '```' → logprob: -2.0498905181884766
    3. '
' → logprob: -2.2998905181884766
    4. 'data' → logprob: -2.6748905181884766
    5. 'numbers' → logprob: -2.9248905181884766
    6. ' 
' → logprob: -3.0498905181884766
    7. 'nums' → logprob: -3.1748905181884766
    8. 'array' → logprob: -3.2998905181884766
    9. 'a' → logprob: -3.9248905181884766
    10. '  
' → logprob: -3.9248905181884766

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01824195683002472
    2. '=' → logprob: -4.018241882324219
    3. ',' → logprob: -10.393241882324219
    4. '_' → logprob: -11.143241882324219
    5. ' ' → logprob: -11.143241882324219
    6. '[' → logprob: -11.768241882324219
    7. 's' → logprob: -11.893241882324219
    8. '_list' → logprob: -12.643241882324219
    9. ' =[' → logprob: -12.643241882324219
    10. '_sorted' → logprob: -12.768241882324219

Token 26: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5782875418663025
    2. '[list' → logprob: -1.8282876014709473
    3. '[' → logprob: -2.0782876014709473
    4. '[]' → logprob: -2.2032876014709473
    5. ' list' → logprob: -3.4532876014709473
    6. ' [' → logprob: -4.703287601470947
    7. ' []' → logprob: -6.578287601470947
    8. 'sorted' → logprob: -8.328287124633789
    9. '[int' → logprob: -8.453287124633789
    10. '[-' → logprob: -9.953287124633789

Token 27: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0871807187795639
    2. '0' → logprob: -2.8371806144714355
    3. ']' → logprob: -4.3371806144714355
    4. ']int' → logprob: -4.8371806144714355
    5. ' int' → logprob: -5.8371806144714355
    6. '[int' → logprob: -8.212181091308594
    7. '(int' → logprob: -8.337181091308594
    8. ' ]' → logprob: -8.962181091308594
    9. 'list' → logprob: -9.462181091308594
    10. ']
' → logprob: -9.962181091308594

Token 28: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09196702390909195
    2. '(input' → logprob: -2.5919671058654785
    3. '()' → logprob: -4.8419671058654785
    4. '(x' → logprob: -5.3419671058654785
    5. '()]' → logprob: -8.46696662902832
    6. '(s' → logprob: -10.59196662902832
    7. ']' → logprob: -11.21696662902832
    8. ')' → logprob: -11.46696662902832
    9. '(
' → logprob: -11.46696662902832
    10. '(

' → logprob: -11.71696662902832

Token 29: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0003497666330076754
    2. '().' → logprob: -8.500349998474121
    3. '()' → logprob: -9.625349998474121
    4. '()]' → logprob: -9.750349998474121
    5. '()),' → logprob: -11.250349998474121
    6. '())
' → logprob: -12.250349998474121
    7. '())

' → logprob: -14.000349998474121
    8. ')' → logprob: -14.250349998474121
    9. ' ())' → logprob: -14.250349998474121
    10. '()
' → logprob: -14.375349998474121

Token 30: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1691344827413559
    2. ' for' → logprob: -2.0441343784332275
    3. 'for' → logprob: -3.9191343784332275
    4. ']' → logprob: -5.794134616851807
    5. ')]' → logprob: -5.919134616851807
    6. '()' → logprob: -8.919134140014648
    7. ' ' → logprob: -9.419134140014648
    8. '	for' → logprob: -9.544134140014648
    9. '[' → logprob: -10.169134140014648
    10. ' )' → logprob: -10.544134140014648

Token 31: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24700596928596497
    2. ' _' → logprob: -1.7470059394836426
    3. ' range' → logprob: -3.3720059394836426
    4. ' ' → logprob: -4.747005939483643
    5. 'range' → logprob: -7.747005939483643
    6. ' i' → logprob: -7.997005939483643
    7. ' in' → logprob: -8.1220064163208
    8. '(' → logprob: -8.3720064163208
    9. '()' → logprob: -9.1220064163208
    10. '(range' → logprob: -10.1220064163208

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04619908332824707
    2. 'in' → logprob: -3.171199083328247
    3. 'range' → logprob: -5.796198844909668
    4. ' range' → logprob: -9.046198844909668
    5. '_' → logprob: -11.046198844909668
    6. 'i' → logprob: -11.921198844909668
    7. ' ' → logprob: -12.171198844909668
    8. '  ' → logprob: -12.546198844909668
    9. '	in' → logprob: -13.671198844909668
    10. '   ' → logprob: -14.046198844909668

Token 33: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031777136027812958
    2. ' range' → logprob: -5.753177642822266
    3. '	range' → logprob: -16.878177642822266
    4. '(range' → logprob: -17.878177642822266
    5. ' ' → logprob: -19.128177642822266
    6. '   ' → logprob: -19.628177642822266
    7. '  ' → logprob: -19.753177642822266
    8. 'rang' → logprob: -20.128177642822266
    9. '```' → logprob: -21.253177642822266
    10. 'ran' → logprob: -21.253177642822266

Token 34: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00025549851125106215
    2. '(' → logprob: -8.625255584716797
    3. 'N' → logprob: -9.500255584716797
    4. '(n' → logprob: -14.250255584716797
    5. ' N' → logprob: -15.625255584716797
    6. ')' → logprob: -16.875255584716797
    7. '	N' → logprob: -16.875255584716797
    8. ' (' → logprob: -17.000255584716797
    9. '(
' → logprob: -17.250255584716797
    10. '(Q' → logprob: -17.500255584716797

Token 35: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0018817579839378595
    2. ')' → logprob: -6.7518815994262695
    3. ']' → logprob: -7.2518815994262695
    4. ')]
' → logprob: -14.00188159942627
    5. '])]' → logprob: -14.87688159942627
    6. ')])' → logprob: -15.25188159942627
    7. '])' → logprob: -15.62688159942627
    8. '')]' → logprob: -15.62688159942627
    9. ')
' → logprob: -16.126882553100586
    10. ')],' → logprob: -16.126882553100586

Token 36: 'leaders' (ID: 192319)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.00512275006622076
    2. 'sorted' → logprob: -6.130122661590576
    3. '```' → logprob: -6.880122661590576
    4. 's' → logprob: -7.005122661590576
    5. 'sort' → logprob: -7.505122661590576
    6. ' scores' → logprob: -9.255123138427734
    7. 'score' → logprob: -9.880123138427734
    8. ')' → logprob: -10.130123138427734
    9. '(scores' → logprob: -10.255123138427734
    10. '
' → logprob: -10.880123138427734

Token 37: '_set' (ID: 5451)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006907532922923565
    2. '=' → logprob: -5.0069074630737305
    3. ',' → logprob: -9.88190746307373
    4. '_scores' → logprob: -10.00690746307373
    5. '=[]' → logprob: -10.00690746307373
    6. 's' → logprob: -11.00690746307373
    7. ' ' → logprob: -11.63190746307373
    8. 'scores' → logprob: -12.00690746307373
    9. '_' → logprob: -12.25690746307373
    10. ' =[' → logprob: -13.38190746307373

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014007063582539558
    2. '=' → logprob: -4.389007091522217
    3. '.' → logprob: -6.514007091522217
    4. ',' → logprob: -12.389006614685059
    5. '.add' → logprob: -13.014006614685059
    6. ' ' → logprob: -13.389006614685059
    7. 's' → logprob: -13.389006614685059
    8. '_' → logprob: -13.764006614685059
    9. ')' → logprob: -14.514006614685059
    10. '(' → logprob: -14.514006614685059

Token 39: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.699267566204071
    2. 'set' → logprob: -0.699267566204071
    3. ' {' → logprob: -5.699267387390137
    4. '{' → logprob: -5.949267387390137
    5. ' ' → logprob: -9.699267387390137
    6. '{}' → logprob: -9.949267387390137
    7. '(set' → logprob: -11.324267387390137
    8. ' {}' → logprob: -11.824267387390137
    9. '	set' → logprob: -12.199267387390137
    10. ' []' → logprob: -12.574267387390137

Token 40: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0021609680261462927
    2. '(' → logprob: -6.377161026000977
    3. '(scores' → logprob: -7.877161026000977
    4. '([' → logprob: -10.127161026000977
    5. '([]' → logprob: -11.002161026000977
    6. '(s' → logprob: -11.877161026000977
    7. '()
' → logprob: -12.752161026000977
    8. ' ()' → logprob: -12.877161026000977
    9. '()]' → logprob: -13.127161026000977
    10. '(),' → logprob: -13.502161026000977

Token 41: 'leaders' (ID: 192319)
  Prédit: 'leaders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leaders' → logprob: -0.00933313462883234
    2. 'leader' → logprob: -5.63433313369751
    3. ' leaders' → logprob: -6.38433313369751
    4. 'scores' → logprob: -7.13433313369751
    5. 'rank' → logprob: -7.25933313369751
    6. 'current' → logprob: -7.50933313369751
    7. '```' → logprob: -8.259333610534668
    8. 'sorted' → logprob: -8.259333610534668
    9. 'for' → logprob: -8.759333610534668
    10. 'le' → logprob: -8.884333610534668

Token 42: '_scores' (ID: 63345)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08405526727437973
    2. '=' → logprob: -2.584055185317993
    3. '_' → logprob: -5.459055423736572
    4. '=[]' → logprob: -7.834055423736572
    5. '_list' → logprob: -8.584054946899414
    6. '_scores' → logprob: -8.959054946899414
    7. ',' → logprob: -9.959054946899414
    8. ' ' → logprob: -10.459054946899414
    9. 's' → logprob: -10.459054946899414
    10. '_=' → logprob: -11.584054946899414

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06203266233205795
    2. '=' → logprob: -2.812032699584961
    3. ',' → logprob: -10.687032699584961
    4. ' ' → logprob: -10.812032699584961
    5. '=[]' → logprob: -11.687032699584961
    6. '<|end|>' → logprob: -11.812032699584961
    7. ')' → logprob: -13.687032699584961
    8. '.' → logprob: -13.687032699584961
    9. '[' → logprob: -14.062032699584961
    10. ']' → logprob: -14.312032699584961

Token 44: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.011294909752905369
    2. ' []' → logprob: -4.886294841766357
    3. '[' → logprob: -5.636294841766357
    4. '[]
' → logprob: -10.261295318603516
    5. '[]}' → logprob: -10.386295318603516
    6. '[s' → logprob: -10.886295318603516
    7. 'scores' → logprob: -11.386295318603516
    8. ' [' → logprob: -11.761295318603516
    9. ' scores' → logprob: -12.761295318603516
    10. '[]

' → logprob: -13.386295318603516

Token 45: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0201907679438591
    2. 'current' → logprob: -4.520190715789795
    3. 'leaders' → logprob: -5.645190715789795
    4. 'prev' → logprob: -6.395190715789795
    5. ' for' → logprob: -6.645190715789795
    6. 'cur' → logprob: -7.020190715789795
    7. 'last' → logprob: -7.645190715789795
    8. 'curr' → logprob: -8.520191192626953
    9. 'max' → logprob: -8.520191192626953
    10. 'sorted' → logprob: -8.770191192626953

Token 46: ' update' (ID: 4027)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7630451321601868
    2. ' find' → logprob: -1.638045072555542
    3. ' add' → logprob: -1.888045072555542
    4. ' update' → logprob: -2.388045072555542
    5. ' insert' → logprob: -2.638045072555542
    6. ' binary' → logprob: -4.388045310974121
    7. ' check' → logprob: -5.263045310974121
    8. ' get' → logprob: -7.013045310974121
    9. ' solve' → logprob: -7.263045310974121
    10. ' initialize' → logprob: -7.388045310974121

Token 47: '_le' (ID: 27121)
  Prédit: '_le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_le' → logprob: -0.49004852771759033
    2. '(' → logprob: -1.1150485277175903
    3. '(_' → logprob: -3.365048408508301
    4. '_' → logprob: -3.990048408508301
    5. '(_)' → logprob: -5.990048408508301
    6. '_scores' → logprob: -6.115048408508301
    7. '()' → logprob: -7.990048408508301
    8. '```' → logprob: -8.1150484085083
    9. '_(' → logprob: -8.3650484085083
    10. '(le' → logprob: -8.4900484085083

Token 48: 'aders' (ID: 35288)
  Prédit: 'aders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aders' → logprob: -0.6376377940177917
    2. 'ader' → logprob: -0.7626377940177917
    3. 'ad' → logprob: -5.637637615203857
    4. 'ade' → logprob: -7.012637615203857
    5. 'ading' → logprob: -8.637638092041016
    6. 'a' → logprob: -8.762638092041016
    7. 'ads' → logprob: -10.512638092041016
    8. 'adern' → logprob: -11.012638092041016
    9. '_' → logprob: -11.075138092041016
    10. 'aded' → logprob: -11.575138092041016

Token 49: '_scores' (ID: 63345)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06536675989627838
    2. '(score' → logprob: -3.815366744995117
    3. '():' → logprob: -4.065366744995117
    4. '(scores' → logprob: -4.065366744995117
    5. '(new' → logprob: -5.815366744995117
    6. '(s' → logprob: -7.315366744995117
    7. '(_' → logprob: -7.815366744995117
    8. ' (' → logprob: -7.815366744995117
    9. '(value' → logprob: -8.440366744995117
    10. '(x' → logprob: -8.940366744995117

Token 50: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.49246177077293396
    2. '(' → logprob: -1.7424618005752563
    3. '(score' → logprob: -1.7424618005752563
    4. '(new' → logprob: -4.367461681365967
    5. '(scores' → logprob: -4.617461681365967
    6. ' (' → logprob: -5.242461681365967
    7. '(s' → logprob: -5.367461681365967
    8. ' ():' → logprob: -5.617461681365967
    9. '(value' → logprob: -7.367461681365967
    10. '(x' → logprob: -8.242462158203125

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01649399846792221
    2. ' leaders' → logprob: -5.391493797302246
    3. 'leaders' → logprob: -5.391493797302246
    4. 'global' → logprob: -6.391493797302246
    5. ' for' → logprob: -6.516493797302246
    6. '<|end|>' → logprob: -6.641493797302246
    7. ' global' → logprob: -6.766493797302246
    8. '    ' → logprob: -8.516493797302246
    9. ' pass' → logprob: -8.641493797302246
    10. '    
' → logprob: -8.891493797302246

Token 52: ' global' (ID: 5466)
  Prédit: 'leaders'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leaders' → logprob: -0.23179584741592407
    2. ' leaders' → logprob: -2.7317957878112793
    3. 'global' (adapté à ' global') → logprob: -3.1067957878112793
    4. '   ' → logprob: -3.2317957878112793
    5. ' global' → logprob: -4.231795787811279
    6. ' for' → logprob: -5.106795787811279
    7. 'sorted' → logprob: -5.106795787811279
    8. 'scores' → logprob: -5.231795787811279
    9. ' pass' → logprob: -5.481795787811279
    10. 'pass' → logprob: -5.606795787811279

Token 53: ' leaders' (ID: 13998)
  Prédit: ' leaders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leaders' → logprob: -0.7230814099311829
    2. 'leaders' → logprob: -0.7230814099311829
    3. ' scores' → logprob: -3.973081350326538
    4. 'scores' → logprob: -4.598081588745117
    5. 'le' → logprob: -8.473081588745117
    6. ' le' → logprob: -9.223081588745117
    7. '   ' → logprob: -9.723081588745117
    8. 'leader' → logprob: -10.098081588745117
    9. ' leads' → logprob: -10.348081588745117
    10. '_le' → logprob: -10.473081588745117

Token 54: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -0.0022112776059657335
    2. '_set' → logprob: -6.127211093902588
    3. '_' → logprob: -11.127211570739746
    4. 'scores' → logprob: -11.627211570739746
    5. '_sets' → logprob: -13.752211570739746
    6. '_score' → logprob: -15.252211570739746
    7. '_indices' → logprob: -15.627211570739746
    8. 'set' → logprob: -15.752211570739746
    9. '_points' → logprob: -16.25221061706543
    10. 's' → logprob: -16.62721061706543

Token 55: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9180564880371094
    2. '[:]' → logprob: -1.0430564880371094
    3. '.clear' → logprob: -1.6680564880371094
    4. '
' → logprob: -4.168056488037109
    5. '=' → logprob: -4.418056488037109
    6. '   ' → logprob: -4.793056488037109
    7. '.sort' → logprob: -5.043056488037109
    8. 'scores' → logprob: -5.918056488037109
    9. ':' → logprob: -6.043056488037109
    10. '[:' → logprob: -6.168056488037109

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04490751400589943
    2. 'leaders' → logprob: -4.044907569885254
    3. '    
' → logprob: -4.669907569885254
    4. '
' → logprob: -5.044907569885254
    5. 'scores' → logprob: -5.169907569885254
    6. ' leaders' → logprob: -6.794907569885254
    7. 'sorted' → logprob: -7.294907569885254
    8. ',' → logprob: -7.419907569885254
    9. ')' → logprob: -7.794907569885254
    10. ' =' → logprob: -7.919907569885254

Token 57: ' leaders' (ID: 13998)
  Prédit: 'leaders'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leaders' (adapté à ' leaders') → logprob: -0.01948113739490509
    2. 'sorted' → logprob: -4.894481182098389
    3. 'scores' → logprob: -5.894481182098389
    4. 'if' → logprob: -5.894481182098389
    5. '   ' → logprob: -6.019481182098389
    6. ' leaders' → logprob: -6.769481182098389
    7. 'le' → logprob: -7.144481182098389
    8. 'for' → logprob: -7.519481182098389
    9. 'leader' → logprob: -8.14448070526123
    10. 'temp' → logprob: -9.01948070526123

Token 58: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -0.0014217838179320097
    2. '_' → logprob: -7.001421928405762
    3. '_set' → logprob: -7.626421928405762
    4. 'scores' → logprob: -12.126421928405762
    5. '__' → logprob: -12.376421928405762
    6. '_score' → logprob: -12.626421928405762
    7. ' _' → logprob: -13.376421928405762
    8. '   ' → logprob: -13.876421928405762
    9. '_sets' → logprob: -13.876421928405762
    10. '_indices' → logprob: -14.501421928405762

Token 59: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5977604389190674
    2. '.clear' → logprob: -1.7227604389190674
    3. '.sort' → logprob: -1.8477604389190674
    4. ' =' → logprob: -2.2227604389190674
    5. '.' → logprob: -5.972760200500488
    6. '.append' → logprob: -6.347760200500488
    7. '=[]' → logprob: -7.347760200500488
    8. '[:]' → logprob: -8.722760200500488
    9. '.=' → logprob: -8.847760200500488
    10. ' .' → logprob: -9.222760200500488

Token 60: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.008247648365795612
    2. '[]' → logprob: -5.1332478523254395
    3. '[' → logprob: -6.3832478523254395
    4. 'scores' → logprob: -8.383247375488281
    5. ' sorted' → logprob: -8.383247375488281
    6. 'list' → logprob: -10.008247375488281
    7. '[:]' → logprob: -10.133247375488281
    8. '(sorted' → logprob: -10.508247375488281
    9. '[list' → logprob: -11.383247375488281
    10. '[s' → logprob: -11.508247375488281

Token 61: '(scores' (ID: 154090)
  Prédit: '(le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(le' → logprob: -0.2531120479106903
    2. '(list' → logprob: -2.0031120777130127
    3. '(scores' → logprob: -2.7531120777130127
    4. '(set' → logprob: -3.7531120777130127
    5. '(' → logprob: -7.503111839294434
    6. '(s' → logprob: -7.628111839294434
    7. '([' → logprob: -8.378111839294434
    8. 'scores' → logprob: -9.503111839294434
    9. 'leaders' → logprob: -10.003111839294434
    10. 'le' → logprob: -10.503111839294434

Token 62: '[i' (ID: 1768)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15874943137168884
    2. ',' → logprob: -2.0337493419647217
    3. '[' → logprob: -5.033749580383301
    4. ' ,' → logprob: -5.408749580383301
    5. '[:' → logprob: -6.283749580383301
    6. '[::-' → logprob: -7.158749580383301
    7. ' )' → logprob: -7.533749580383301
    8. 'set' → logprob: -8.2837495803833
    9. ')
' → logprob: -8.5337495803833
    10. ')[' → logprob: -9.0337495803833

Token 63: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04118247330188751
    2. 'for' → logprob: -3.416182518005371
    3. ' for' → logprob: -4.916182518005371
    4. ' ]' → logprob: -9.541182518005371
    5. '
' → logprob: -11.291182518005371
    6. 'nd' → logprob: -11.541182518005371
    7. 's' → logprob: -11.666182518005371
    8. ' ' → logprob: -11.791182518005371
    9. '   ' → logprob: -11.916182518005371
    10. ')' → logprob: -12.041182518005371

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.022188756614923477
    2. ' ' → logprob: -3.897188663482666
    3. ']' → logprob: -6.647188663482666
    4. '])' → logprob: -9.022189140319824
    5. '0' → logprob: -9.647189140319824
    6. '-' → logprob: -11.147189140319824
    7. '10' → logprob: -11.397189140319824
    8. '2' → logprob: -11.397189140319824
    9. ')' → logprob: -11.584689140319824
    10. '  ' → logprob: -11.584689140319824

Token 65: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04515332728624344
    2. ' for' → logprob: -3.7951533794403076
    3. 'for' → logprob: -4.4201531410217285
    4. '])' → logprob: -5.2951531410217285
    5. ' ]' → logprob: -5.7951531410217285
    6. ':' → logprob: -7.4201531410217285
    7. ']+' → logprob: -8.545153617858887
    8. ']==' → logprob: -9.420153617858887
    9. '],' → logprob: -9.545153617858887
    10. ' ])' → logprob: -9.545153617858887

Token 66: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2563464045524597
    2. 'for' → logprob: -1.5063464641571045
    3. ']' → logprob: -5.631346225738525
    4. ' ' → logprob: -7.881346225738525
    5. '])' → logprob: -9.631346702575684
    6. ':' → logprob: -10.006346702575684
    7. '+' → logprob: -10.131346702575684
    8. '	for' → logprob: -10.256346702575684
    9. 'scores' → logprob: -10.506346702575684
    10. ')' → logprob: -10.881346702575684

Token 67: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2519551217556
    2. ' i' → logprob: -1.5019551515579224
    3. ' ' → logprob: -11.501955032348633
    4. ' in' → logprob: -12.126955032348633
    5. '	i' → logprob: -12.251955032348633
    6. '<|end|>' → logprob: -14.001955032348633
    7. '<|end|>' → logprob: -14.251955032348633
    8. 'in' → logprob: -14.376955032348633
    9. ',i' → logprob: -14.751955032348633
    10. '```' → logprob: -14.876955032348633

Token 68: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16024452447891235
    2. 'in' → logprob: -1.9102444648742676
    3. ' ' → logprob: -12.535244941711426
    4. 'import' → logprob: -12.785244941711426
    5. ',' → logprob: -12.910244941711426
    6. '<|end|>' → logprob: -13.097744941711426
    7. '
' → logprob: -13.535244941711426
    8. ' if' → logprob: -14.160244941711426
    9. 'if' → logprob: -14.285244941711426
    10. ' not' → logprob: -14.347744941711426

Token 69: ' leaders' (ID: 13998)
  Prédit: 'leaders'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leaders' → logprob: -0.16397199034690857
    2. ' leaders' → logprob: -2.5389719009399414
    3. ' range' → logprob: -3.0389719009399414
    4. 'range' → logprob: -3.7889719009399414
    5. 'le' → logprob: -7.038971900939941
    6. 'sorted' → logprob: -7.663971900939941
    7. ' sorted' → logprob: -8.413971900939941
    8. ' ' → logprob: -10.038971900939941
    9. 'leader' → logprob: -10.663971900939941
    10. 'list' → logprob: -10.663971900939941

Token 70: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -3.011373155459296e-05
    2. '_' → logprob: -10.625030517578125
    3. 'set' → logprob: -13.500030517578125
    4. ')' → logprob: -13.750030517578125
    5. '_scores' → logprob: -14.000030517578125
    6. ')set' → logprob: -14.625030517578125
    7. '_sets' → logprob: -14.875030517578125
    8. '_)' → logprob: -15.000030517578125
    9. ' _' → logprob: -15.750030517578125
    10. '_s' → logprob: -15.750030517578125

Token 71: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0039983768947422504
    2. ' )' → logprob: -5.628998279571533
    3. ' if' → logprob: -7.878998279571533
    4. 'if' → logprob: -11.503998756408691
    5. '))' → logprob: -12.628998756408691
    6. ')
' → logprob: -13.128998756408691
    7. '   ' → logprob: -13.128998756408691
    8. ' ' → logprob: -14.253998756408691
    9. ')}' → logprob: -15.003998756408691
    10. '())' → logprob: -15.628998756408691

Token 72: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019360359758138657
    2. 'for' → logprob: -4.144360542297363
    3. '```' → logprob: -6.144360542297363
    4. '<|end|>' → logprob: -7.394360542297363
    5. '<|end|>' → logprob: -8.769360542297363
    6. 'prev' → logprob: -9.394360542297363
    7. 'max' → logprob: -10.269360542297363
    8. '
' → logprob: -10.269360542297363
    9. ' for' → logprob: -10.269360542297363
    10. 'current' → logprob: -10.394360542297363

Token 73: ' count' (ID: 3605)
  Prédit: ' update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.024525625631213188
    2. ' add' → logprob: -4.1495256423950195
    3. 'update' → logprob: -5.7745256423950195
    4. ' insert' → logprob: -6.8995256423950195
    5. ' remove' → logprob: -7.0245256423950195
    6. ' find' → logprob: -7.5245256423950195
    7. ' def' → logprob: -7.6495256423950195
    8. ' main' → logprob: -7.7745256423950195
    9. '_update' → logprob: -7.7745256423950195
    10. ' ' → logprob: -7.8995256423950195

Token 74: '_un' (ID: 11119)
  Prédit: '_less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_less' → logprob: -0.9622964262962341
    2. '_' → logprob: -1.587296485900879
    3. '_g' → logprob: -1.712296485900879
    4. '_le' → logprob: -1.962296485900879
    5. '_lower' → logprob: -3.212296485900879
    6. '_scores' → logprob: -4.462296485900879
    7. '_s' → logprob: -4.587296485900879
    8. '_in' → logprob: -4.587296485900879
    9. '_b' → logprob: -5.962296485900879
    10. '_query' → logprob: -6.712296485900879

Token 75: 'reachable' (ID: 101900)
  Prédit: 'der'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'der' → logprob: -0.296233594417572
    2. 'def' → logprob: -2.421233654022217
    3. 'ique' → logprob: -3.046233654022217
    4. 'finished' → logprob: -4.421233654022217
    5. 'be' → logprob: -4.546233654022217
    6. 'leaders' → logprob: -4.671233654022217
    7. 'ders' → logprob: -4.921233654022217
    8. 'sol' → logprob: -5.046233654022217
    9. 'read' → logprob: -5.296233654022217
    10. 'answered' → logprob: -5.421233654022217

Token 76: '(r' (ID: 4729)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.25568926334381104
    2. '_scores' → logprob: -2.0056891441345215
    3. '()' → logprob: -3.2556891441345215
    4. '(' → logprob: -3.2556891441345215
    5. '_players' → logprob: -5.3806891441345215
    6. '(scores' → logprob: -6.2556891441345215
    7. '(score' → logprob: -6.8806891441345215
    8. '_points' → logprob: -6.8806891441345215
    9. '_' → logprob: -7.0056891441345215
    10. '_le' → logprob: -7.3806891441345215

Token 77: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9883296489715576
    2. 'ight' → logprob: -1.3633296489715576
    3. '):' → logprob: -1.9883296489715576
    4. 'ank' → logprob: -2.3633296489715576
    5. 'ights' → logprob: -3.4883296489715576
    6. 'ange' → logprob: -3.6133296489715576
    7. ',' → logprob: -4.488329887390137
    8. '):

' → logprob: -4.488329887390137
    9. 'ating' → logprob: -4.738329887390137
    10. 'e' → logprob: -4.863329887390137

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0051975860260427
    2. ' idx' → logprob: -5.505197525024414
    3. 'idx' → logprob: -7.380197525024414
    4. ' return' → logprob: -9.255197525024414
    5. ' pos' → logprob: -9.380197525024414
    6. ' count' → logprob: -9.880197525024414
    7. 'index' → logprob: -10.255197525024414
    8. ' index' → logprob: -10.380197525024414
    9. '```' → logprob: -10.505197525024414
    10. '    ' → logprob: -10.880197525024414

Token 79: ' if' (ID: 538)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.2764464318752289
    2. 'idx' → logprob: -1.6514464616775513
    3. ' pos' → logprob: -3.9014463424682617
    4. 'pos' → logprob: -4.276446342468262
    5. ' index' → logprob: -5.651446342468262
    6. '   ' → logprob: -5.776446342468262
    7. 'index' → logprob: -6.026446342468262
    8. ' count' → logprob: -6.401446342468262
    9. 'count' → logprob: -6.776446342468262
    10. ' left' → logprob: -6.901446342468262

Token 80: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.16006547212600708
    2. 'not' → logprob: -2.0350654125213623
    3. ' r' → logprob: -5.035065650939941
    4. 'r' → logprob: -5.285065650939941
    5. 'len' → logprob: -5.785065650939941
    6. ' leaders' → logprob: -7.035065650939941
    7. ' len' → logprob: -7.035065650939941
    8. 'leaders' → logprob: -7.535065650939941
    9. ' scores' → logprob: -9.785065650939941
    10. ' ' → logprob: -10.097565650939941

Token 81: ' leaders' (ID: 13998)
  Prédit: ' leaders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leaders' → logprob: -0.11308466643095016
    2. 'leaders' → logprob: -2.238084554672241
    3. ' scores' → logprob: -8.61308479309082
    4. 'le' → logprob: -10.48808479309082
    5. 'scores' → logprob: -11.48808479309082
    6. 'r' → logprob: -11.86308479309082
    7. ' leads' → logprob: -11.86308479309082
    8. 'leader' → logprob: -12.23808479309082
    9. ' ' → logprob: -12.23808479309082
    10. ' r' → logprob: -12.36308479309082

Token 82: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -0.016057245433330536
    2. '_set' → logprob: -4.141057014465332
    3. '_' → logprob: -11.266057014465332
    4. '_sets' → logprob: -12.766057014465332
    5. 'scores' → logprob: -13.641057014465332
    6. '_s' → logprob: -14.016057014465332
    7. '__' → logprob: -14.391057014465332
    8. '_score' → logprob: -14.516057014465332
    9. '_sales' → logprob: -15.016057014465332
    10. '_sc' → logprob: -15.141057014465332

Token 83: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.06987062841653824
    2. ':' → logprob: -2.944870710372925
    3. 'or' → logprob: -4.444870471954346
    4. ':
' → logprob: -5.819870471954346
    5. ':return' → logprob: -9.319870948791504
    6. '   ' → logprob: -10.944870948791504
    7. ')' → logprob: -11.069870948791504
    8. '	or' → logprob: -11.069870948791504
    9. ' :' → logprob: -11.444870948791504
    10. ':
' → logprob: -12.194870948791504

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6593160033226013
    2. '   ' → logprob: -0.7843160033226013
    3. ':' → logprob: -4.409316062927246
    4. ' return' → logprob: -4.659316062927246
    5. ' or' → logprob: -6.034316062927246
    6. ':return' → logprob: -6.784316062927246
    7. ':
' → logprob: -8.284316062927246
    8. ' ' → logprob: -9.034316062927246
    9. '	return' → logprob: -9.034316062927246
    10. 'return' → logprob: -9.284316062927246

Token 85: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7152093648910522
    2. 'return' (adapté à ' return') → logprob: -0.7152093648910522
    3. '   ' → logprob: -4.215209484100342
    4. '       ' → logprob: -4.965209484100342
    5. '	return' → logprob: -10.340209007263184
    6. ' ' → logprob: -11.215209007263184
    7. '
' → logprob: -12.215209007263184
    8. '  ' → logprob: -12.590209007263184
    9. '    ' → logprob: -12.590209007263184
    10. '```' → logprob: -12.715209007263184

Token 86: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.9281191229820251
    2. 'N' → logprob: -1.42811918258667
    3. '0' → logprob: -1.67811918258667
    4. 'len' → logprob: -2.55311918258667
    5. 'r' → logprob: -3.42811918258667
    6. ' r' → logprob: -3.55311918258667
    7. ' len' → logprob: -3.80311918258667
    8. ' ' → logprob: -4.42811918258667
    9. ' Q' → logprob: -6.17811918258667
    10. 'Q' → logprob: -6.92811918258667

Token 87: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43251290917396545
    2. '
' → logprob: -1.182512879371643
    3. '    
' → logprob: -3.8075129985809326
    4. '0' → logprob: -4.9325127601623535
    5. '+' → logprob: -5.3075127601623535
    6. '-' → logprob: -5.9325127601623535
    7. ' -' → logprob: -7.0575127601623535
    8. '
' → logprob: -7.1825127601623535
    9. '  
' → logprob: -7.5575127601623535
    10. '1' → logprob: -7.5575127601623535

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03148875758051872
    2. '    
' → logprob: -3.7814886569976807
    3. '
' → logprob: -5.53148889541626
    4. 'idx' → logprob: -7.03148889541626
    5. 'bis' → logprob: -7.40648889541626
    6. ' bis' → logprob: -7.90648889541626
    7. '   
' → logprob: -8.031488418579102
    8. '  
' → logprob: -8.156488418579102
    9. 'return' → logprob: -8.156488418579102
    10. 'import' → logprob: -8.281488418579102

Token 89: ' count' (ID: 3605)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.7069064974784851
    2. 'idx' → logprob: -1.7069065570831299
    3. 'pos' → logprob: -2.08190655708313
    4. '   ' → logprob: -2.58190655708313
    5. ' pos' → logprob: -2.70690655708313
    6. '
' → logprob: -3.95690655708313
    7. ' if' → logprob: -4.706906318664551
    8. ' index' → logprob: -5.331906318664551
    9. 'index' → logprob: -5.456906318664551
    10. 'if' → logprob: -6.081906318664551

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008048992604017258
    2. '=' → logprob: -4.883049011230469
    3. '_un' → logprob: -8.133049011230469
    4. '_idx' → logprob: -9.883049011230469
    5. '_index' → logprob: -10.508049011230469
    6. 'idx' → logprob: -10.883049011230469
    7. '_' → logprob: -11.133049011230469
    8. ' ' → logprob: -11.758049011230469
    9. ',' → logprob: -12.383049011230469
    10. '   ' → logprob: -12.508049011230469

Token 91: ' ' (ID: 220)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.8105117082595825
    2. ' bis' → logprob: -0.9355117082595825
    3. 'len' → logprob: -2.185511589050293
    4. 'bis' → logprob: -3.185511589050293
    5. ' N' → logprob: -5.310511589050293
    6. ' ' → logprob: -6.060511589050293
    7. '0' → logprob: -6.560511589050293
    8. 'N' → logprob: -8.060511589050293
    9. ' r' → logprob: -10.310511589050293
    10. 'b' → logprob: -10.435511589050293

Token 92: '0' (ID: 15)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.6426219940185547
    2. 'len' → logprob: -0.7676219940185547
    3. 'N' → logprob: -4.892621994018555
    4. ' bis' → logprob: -6.892621994018555
    5. '0' → logprob: -7.642621994018555
    6. ' len' → logprob: -7.767621994018555
    7. ' N' → logprob: -8.142621994018555
    8. 'r' → logprob: -9.267621994018555
    9. ' ' → logprob: -9.267621994018555
    10. 'leaders' → logprob: -11.705121994018555

Token 93: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11595195531845093
    2. ' for' → logprob: -2.9909520149230957
    3. ' 
' → logprob: -3.2409520149230957
    4. 'for' → logprob: -5.115952014923096
    5. '<|end|>' → logprob: -5.490952014923096
    6. 'idx' → logprob: -6.240952014923096
    7. '    
' → logprob: -6.615952014923096
    8. ' ' → logprob: -6.740952014923096
    9. ' idx' → logprob: -6.865952014923096
    10. '  
' → logprob: -6.990952014923096

Token 94: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7951364517211914
    2. ' for' → logprob: -1.2951364517211914
    3. ' idx' → logprob: -1.9201364517211914
    4. 'idx' → logprob: -2.7951364517211914
    5. 'for' → logprob: -3.4201364517211914
    6. '   ' → logprob: -4.420136451721191
    7. 'index' → logprob: -5.420136451721191
    8. '    
' → logprob: -5.670136451721191
    9. ' while' → logprob: -6.295136451721191
    10. ' 
' → logprob: -6.295136451721191

Token 95: ' L' (ID: 451)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.4904550313949585
    2. 'pos' → logprob: -1.7404550313949585
    3. 'for' → logprob: -2.990455150604248
    4. ' idx' → logprob: -3.115455150604248
    5. 'index' → logprob: -3.740455150604248
    6. 'count' → logprob: -3.865455150604248
    7. 'left' → logprob: -3.865455150604248
    8. 'if' → logprob: -4.490455150604248
    9. ' pos' → logprob: -4.865455150604248
    10. ' for' → logprob: -4.990455150604248

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13688930869102478
    2. '=' → logprob: -2.3868892192840576
    3. 'e' → logprob: -3.8868892192840576
    4. ',' → logprob: -5.511889457702637
    5. '_idx' → logprob: -5.511889457702637
    6. 'eft' → logprob: -6.011889457702637
    7. 'ead' → logprob: -7.011889457702637
    8. 'idx' → logprob: -7.511889457702637
    9. '=len' → logprob: -7.886889457702637
    10. '_index' → logprob: -8.011889457702637

Token 97: ' leaders' (ID: 13998)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.26532459259033203
    2. 'bis' → logprob: -2.390324592590332
    3. 'len' → logprob: -2.515324592590332
    4. ' ' → logprob: -3.515324592590332
    5. ' bis' → logprob: -4.390324592590332
    6. 'leaders' → logprob: -4.765324592590332
    7. ' len' → logprob: -5.390324592590332
    8. ' leaders' → logprob: -6.515324592590332
    9. 'r' → logprob: -6.890324592590332
    10. '-' → logprob: -7.827824592590332

Token 98: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -0.0002153378736693412
    2. 'r' → logprob: -10.000215530395508
    3. '_r' → logprob: -10.125215530395508
    4. '_set' → logprob: -10.250215530395508
    5. 'scores' → logprob: -10.250215530395508
    6. '_' → logprob: -10.750215530395508
    7. '_score' → logprob: -11.875215530395508
    8. '_indices' → logprob: -12.375215530395508
    9. '_s' → logprob: -13.250215530395508
    10. '   ' → logprob: -13.375215530395508

Token 99: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1429963111877441
    2. '[' → logprob: -1.2679963111877441
    3. 'bis' → logprob: -1.6429963111877441
    4. '[-' → logprob: -3.267996311187744
    5. ' bis' → logprob: -3.392996311187744
    6. '[::-' → logprob: -4.267996311187744
    7. '-' → logprob: -4.517996311187744
    8. '[r' → logprob: -4.767996311187744
    9. '.r' → logprob: -4.892996311187744
    10. 'r' → logprob: -4.892996311187744

Token 100: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.764552116394043
    2. '   ' → logprob: -1.389552116394043
    3. ',' → logprob: -2.889552116394043
    4. 'ength' → logprob: -3.514552116394043
    5. ' =' → logprob: -3.514552116394043
    6. '<|end|>' → logprob: -3.639552116394043
    7. '[' → logprob: -3.889552116394043
    8. '=' → logprob: -4.014552116394043
    9. '[::-' → logprob: -4.389552116394043
    10. 'idx' → logprob: -4.639552116394043

Token 101: ' for' (ID: 395)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.6980119943618774
    2. 'pos' → logprob: -2.198011875152588
    3. 'for' (adapté à ' for') → logprob: -2.698011875152588
    4. 'count' → logprob: -2.823011875152588
    5. 'index' → logprob: -3.073011875152588
    6. 'while' → logprob: -3.073011875152588
    7. '
' → logprob: -3.698011875152588
    8. 'if' → logprob: -3.698011875152588
    9. 'left' → logprob: -4.323011875152588
    10. '   ' → logprob: -4.573011875152588

Token 102: ' sc' (ID: 1460)
  Prédit: ' score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.8439880013465881
    2. 'score' → logprob: -1.0939879417419434
    3. ' s' → logprob: -2.7189879417419434
    4. ' x' → logprob: -3.4689879417419434
    5. ' i' → logprob: -3.5939879417419434
    6. 'i' → logprob: -3.7189879417419434
    7. ' leader' → logprob: -3.8439879417419434
    8. 'x' → logprob: -4.218987941741943
    9. 'leader' → logprob: -4.343987941741943
    10. 's' → logprob: -4.468987941741943

Token 103: ' in' (ID: 306)
  Prédit: 'ore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ore' → logprob: -0.2642129063606262
    2. ' in' → logprob: -1.5142128467559814
    3. 'in' → logprob: -5.0142130851745605
    4. ' ' → logprob: -6.3892130851745605
    5. 'or' → logprob: -6.5142130851745605
    6. 'ores' → logprob: -6.8892130851745605
    7. 'core' → logprob: -8.014212608337402
    8. '   ' → logprob: -8.264212608337402
    9. '  ' → logprob: -8.389212608337402
    10. 'o' → logprob: -8.764212608337402

Token 104: ' scores' (ID: 18923)
  Prédit: ' scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' scores' → logprob: -0.4986329674720764
    2. 'scores' → logprob: -1.3736329078674316
    3. 'r' → logprob: -2.6236329078674316
    4. ' r' → logprob: -2.9986329078674316
    5. ' range' → logprob: -4.998632907867432
    6. ' L' → logprob: -5.748632907867432
    7. 'L' → logprob: -5.998632907867432
    8. ' leaders' → logprob: -6.498632907867432
    9. 'range' → logprob: -6.998632907867432
    10. ' ' → logprob: -7.748632907867432

Token 105: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31332749128341675
    2. ':
' → logprob: -1.3133275508880615
    3. '   ' → logprob: -10.56332778930664
    4. '[::-' → logprob: -11.43832778930664
    5. ' :' → logprob: -11.68832778930664
    6. '[:' → logprob: -12.18832778930664
    7. ' :
' → logprob: -12.31332778930664
    8. '    ' → logprob: -12.68832778930664
    9. ':
' → logprob: -12.68832778930664
    10. ':

' → logprob: -13.06332778930664

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028627099469304085
    2. ':
' → logprob: -4.278626918792725
    3. ':' → logprob: -4.403626918792725
    4. ',' → logprob: -7.528626918792725
    5. '
' → logprob: -8.153627395629883
    6. ' if' → logprob: -8.403627395629883
    7. '):
' → logprob: -8.403627395629883
    8. '        
' → logprob: -8.403627395629883
    9. '<|end|>' → logprob: -8.528627395629883
    10. '   ' → logprob: -9.528627395629883

Token 107: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08584287017583847
    2. '       ' → logprob: -2.8358428478240967
    3. 'if' → logprob: -4.085843086242676
    4. ' ' → logprob: -6.335843086242676
    5. '           ' → logprob: -6.335843086242676
    6. '   ' → logprob: -6.585843086242676
    7. '    ' → logprob: -6.835843086242676
    8. '
' → logprob: -7.710843086242676
    9. '        ' → logprob: -9.335843086242676
    10. '  ' → logprob: -10.085843086242676

Token 108: ' Find' (ID: 9764)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3596513867378235
    2. 'if' → logprob: -1.2346513271331787
    3. '       ' → logprob: -5.109651565551758
    4. '   ' → logprob: -5.484651565551758
    5. '    ' → logprob: -7.484651565551758
    6. ' ' → logprob: -8.359651565551758
    7. '
' → logprob: -10.359651565551758
    8. 'If' → logprob: -10.484651565551758
    9. '```' → logprob: -10.984651565551758
    10. '           ' → logprob: -11.109651565551758

Token 109: ' leader' (ID: 12554)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.7311803698539734
    2. ' the' → logprob: -1.3561804294586182
    3. 'idx' → logprob: -2.856180429458618
    4. 'pos' → logprob: -2.981180429458618
    5. ' if' → logprob: -3.356180429458618
    6. ' bis' → logprob: -3.356180429458618
    7. ' pos' → logprob: -3.481180429458618
    8. 'bis' → logprob: -4.356180191040039
    9. ' index' → logprob: -4.731180191040039
    10. '   ' → logprob: -4.731180191040039

Token 110: ' with' (ID: 483)
  Prédit: '_score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.8606603741645813
    2. '_index' → logprob: -1.2356603145599365
    3. '_idx' → logprob: -1.4856603145599365
    4. ' index' → logprob: -4.235660552978516
    5. 'score' → logprob: -4.735660552978516
    6. ' =' → logprob: -5.110660552978516
    7. '_scores' → logprob: -5.360660552978516
    8. ' score' → logprob: -5.610660552978516
    9. 'index' → logprob: -5.735660552978516
    10. ' idx' → logprob: -5.860660552978516

Token 111: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.2700181305408478
    2. 'score' → logprob: -1.8950181007385254
    3. ' scores' → logprob: -3.2700181007385254
    4. ' a' → logprob: -3.3950181007385254
    5. 'a' → logprob: -5.395018100738525
    6. 'scores' → logprob: -5.895018100738525
    7. ' sc' → logprob: -6.270018100738525
    8. 'sc' → logprob: -7.020018100738525
    9. ' strictly' → logprob: -7.020018100738525
    10. '>' → logprob: -7.395018100738525

Token 112: ' <=' (ID: 5017)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.2266119420528412
    2. ' >' → logprob: -1.9766119718551636
    3. '>=' → logprob: -3.226611852645874
    4. ' strictly' → logprob: -4.476612091064453
    5. '>' → logprob: -4.851612091064453
    6. 'strict' → logprob: -6.476612091064453
    7. ' greater' → logprob: -6.851612091064453
    8. ' ' → logprob: -7.226612091064453
    9. ' <=' → logprob: -7.226612091064453
    10. ' <' → logprob: -7.726612091064453

Token 113: ' sc' (ID: 1460)
  Prédit: ' sc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sc' → logprob: -0.009769308380782604
    2. ' r' → logprob: -5.134769439697266
    3. 'sc' → logprob: -6.009769439697266
    4. 'r' → logprob: -6.634769439697266
    5. ' ' → logprob: -11.259769439697266
    6. ' ' → logprob: -11.509769439697266
    7. '(sc' → logprob: -11.634769439697266
    8. ' scores' → logprob: -11.634769439697266
    9. '=sc' → logprob: -12.134769439697266
    10. 's' → logprob: -12.259769439697266

Token 114: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7912285923957825
    2. '       ' → logprob: -1.2912285327911377
    3. ' idx' → logprob: -1.5412285327911377
    4. 'idx' → logprob: -3.5412285327911377
    5. ' index' → logprob: -5.041228771209717
    6. ' pos' → logprob: -5.541228771209717
    7. ',' → logprob: -5.666228771209717
    8. 'pos' → logprob: -5.666228771209717
    9. 'index' → logprob: -5.916228771209717
    10. ' =' → logprob: -6.666228771209717

Token 115: ' leader' (ID: 12554)
  Prédit: ' sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sc' → logprob: -0.7850257158279419
    2. ' bis' → logprob: -1.785025715827942
    3. 'r' → logprob: -2.1600255966186523
    4. 'sc' → logprob: -2.4100255966186523
    5. 'bis' → logprob: -2.4100255966186523
    6. ' r' → logprob: -3.0350255966186523
    7. '>' → logprob: -5.660025596618652
    8. ' greater' → logprob: -6.097525596618652
    9. ' ' → logprob: -6.097525596618652
    10. ' >=' → logprob: -6.160025596618652

Token 116: '_score' (ID: 22555)
  Prédit: '_scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -0.35077062249183655
    2. 's' → logprob: -1.4757705926895142
    3. '_score' → logprob: -3.6007707118988037
    4. ''s' → logprob: -4.350770473480225
    5. 'score' → logprob: -4.975770473480225
    6. '_idx' → logprob: -5.100770473480225
    7. '_index' → logprob: -5.975770473480225
    8. 'scores' → logprob: -5.975770473480225
    9. 'index' → logprob: -6.350770473480225
    10. '_' → logprob: -6.725770473480225

Token 117: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.3136454820632935
    2. ' >' → logprob: -1.4386454820632935
    3. '>' → logprob: -1.8136454820632935
    4. ' <' → logprob: -2.063645362854004
    5. '>=' → logprob: -2.188645362854004
    6. 's' → logprob: -2.938645362854004
    7. '<' → logprob: -4.063645362854004
    8. ' <=' → logprob: -5.438645362854004
    9. '<=' → logprob: -5.688645362854004
    10. ' ' → logprob: -6.188645362854004

Token 118: ' sc' (ID: 1460)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.4435523748397827
    2. 'r' → logprob: -1.0685523748397827
    3. ' sc' → logprob: -4.443552494049072
    4. 'sc' → logprob: -6.568552494049072
    5. ' scores' → logprob: -7.693552494049072
    6. ' L' → logprob: -8.193552017211914
    7. 'scores' → logprob: -8.193552017211914
    8. ' ' → logprob: -8.818552017211914
    9. 'L' → logprob: -9.818552017211914
    10. '=' → logprob: -10.006052017211914

Token 119: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6440243721008301
    2. '       ' → logprob: -1.51902437210083
    3. '<|end|>' → logprob: -2.76902437210083
    4. ')' → logprob: -2.89402437210083
    5. ',' → logprob: -3.26902437210083
    6. ':' → logprob: -3.76902437210083
    7. ' ' → logprob: -4.76902437210083
    8. '=' → logprob: -4.76902437210083
    9. '<|end|>' → logprob: -4.89402437210083
    10. ' =' → logprob: -5.26902437210083

Token 120: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5239834785461426
    2. 'r' → logprob: -0.8989834785461426
    3. ' ' → logprob: -7.773983478546143
    4. '1' → logprob: -8.523983001708984
    5. ' (' → logprob: -9.023983001708984
    6. '(r' → logprob: -10.148983001708984
    7. ' ' → logprob: -11.648983001708984
    8. '(' → logprob: -11.898983001708984
    9. '0' → logprob: -12.023983001708984
    10. ' L' → logprob: -12.273983001708984

Token 121: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.189910888671875
    2. ')' → logprob: -1.689910888671875
    3. ':' → logprob: -1.814910888671875
    4. '<|end|>' → logprob: -1.814910888671875
    5. ' ' → logprob: -3.064910888671875
    6. ',' → logprob: -3.314910888671875
    7. ' bis' → logprob: -3.814910888671875
    8. '       ' → logprob: -4.439910888671875
    9. '  ' → logprob: -5.064910888671875
    10. '):' → logprob: -5.314910888671875

Token 122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4376218914985657
    2. '   ' → logprob: -1.187621831893921
    3. '<|end|>' → logprob: -4.3126220703125
    4. ')' → logprob: -5.0626220703125
    5. ' ' → logprob: -5.1876220703125
    6. '    ' → logprob: -5.6876220703125
    7. '        
' → logprob: -5.8126220703125
    8. ',' → logprob: -6.0626220703125
    9. ' 
' → logprob: -6.3126220703125
    10. ':' → logprob: -6.5626220703125

Token 123: ' #' (ID: 1069)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -1.4254240989685059
    2. 'pos' → logprob: -1.6754240989685059
    3. 'idx' → logprob: -1.8004240989685059
    4. ' pass' → logprob: -1.8004240989685059
    5. ' pos' → logprob: -2.050424098968506
    6. '   ' → logprob: -3.550424098968506
    7. 'pass' → logprob: -3.800424098968506
    8. ' i' → logprob: -4.550424098968506
    9. '       ' → logprob: -4.800424098968506
    10. '    ' → logprob: -5.425424098968506

Token 124: ' Condition' (ID: 30255)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -1.5160224437713623
    2. 'pos' → logprob: -1.7660224437713623
    3. 'idx' → logprob: -1.7660224437713623
    4. ' pos' → logprob: -1.7660224437713623
    5. ' left' → logprob: -2.7660224437713623
    6. 'left' → logprob: -2.7660224437713623
    7. '   ' → logprob: -3.1410224437713623
    8. ' lo' → logprob: -3.3910224437713623
    9. 'l' → logprob: -4.141022682189941
    10. 'low' → logprob: -4.766022682189941

Token 125: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11824692040681839
    2. ' <=' → logprob: -3.7432470321655273
    3. '==' → logprob: -3.9932470321655273
    4. ' ==' → logprob: -4.243247032165527
    5. '<|end|>' → logprob: -4.368247032165527
    6. '<=' → logprob: -4.993247032165527
    7. ' =' → logprob: -5.243247032165527
    8. '=' → logprob: -5.243247032165527
    9. ')' → logprob: -5.368247032165527
    10. '   ' → logprob: -5.993247032165527

Token 126: ' leader' (ID: 12554)
  Prédit: ' bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.8991341590881348
    2. ' sc' → logprob: -1.3991341590881348
    3. '   ' → logprob: -2.7741341590881348
    4. 'sc' → logprob: -3.0241341590881348
    5. ' r' → logprob: -3.1491341590881348
    6. 'bis' → logprob: -3.7741341590881348
    7. 'r' → logprob: -3.8991341590881348
    8. ' L' → logprob: -3.8991341590881348
    9. ' leaders' → logprob: -4.024134159088135
    10. ' if' → logprob: -4.274134159088135

Token 127: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.7900813221931458
    2. '_scores' → logprob: -0.7900813221931458
    3. '_idx' → logprob: -3.040081262588501
    4. ' =' → logprob: -4.66508150100708
    5. '_index' → logprob: -4.91508150100708
    6. 's' → logprob: -5.16508150100708
    7. 'score' → logprob: -5.54008150100708
    8. 'scores' → logprob: -5.91508150100708
    9. ' scores' → logprob: -6.66508150100708
    10. '_lower' → logprob: -6.66508150100708

Token 128: ' <=' (ID: 5017)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.3653557598590851
    2. '>=' → logprob: -1.3653557300567627
    3. ' <=' → logprob: -3.8653557300567627
    4. '=' → logprob: -4.240355968475342
    5. '<=' → logprob: -4.865355968475342
    6. ' =' → logprob: -5.490355968475342
    7. ']>=' → logprob: -6.865355968475342
    8. '<|end|>' → logprob: -7.365355968475342
    9. 's' → logprob: -8.115355491638184
    10. ')>=' → logprob: -8.240355491638184

Token 129: ' sc' (ID: 1460)
  Prédit: ' sc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sc' → logprob: -0.38690564036369324
    2. 'sc' → logprob: -1.1369056701660156
    3. '(sc' → logprob: -11.136905670166016
    4. 's' → logprob: -12.011905670166016
    5. '	sc' → logprob: -12.261905670166016
    6. '=sc' → logprob: -12.761905670166016
    7. ' ' → logprob: -13.386905670166016
    8. '.sc' → logprob: -13.511905670166016
    9. '_sc' → logprob: -14.261905670166016
    10. 'score' → logprob: -14.386905670166016

Token 130: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7885992527008057
    2. ' and' → logprob: -2.1635992527008057
    3. 'idx' → logprob: -2.2885992527008057
    4. ',' → logprob: -2.9135992527008057
    5. ')' → logprob: -3.1635992527008057
    6. '<|end|>' → logprob: -3.1635992527008057
    7. '<|end|>' → logprob: -3.4135992527008057
    8. 'index' → logprob: -3.4135992527008057
    9. '
' → logprob: -3.7885992527008057
    10. '       ' → logprob: -4.163599014282227

Token 131: ' leader' (ID: 12554)
  Prédit: 'leader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leader' → logprob: -0.35072287917137146
    2. ' leader' → logprob: -1.2257229089736938
    3. 'sc' → logprob: -6.850722789764404
    4. ' sc' → logprob: -6.975722789764404
    5. ' ' → logprob: -9.350723266601562
    6. ' ' → logprob: -9.975723266601562
    7. 'leaders' → logprob: -10.600723266601562
    8. 'score' → logprob: -11.100723266601562
    9. '   ' → logprob: -11.225723266601562
    10. ' leaders' → logprob: -11.350723266601562

Token 132: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -4.203409844194539e-05
    2. '_scores' → logprob: -10.500041961669922
    3. 'score' → logprob: -12.500041961669922
    4. '_' → logprob: -12.625041961669922
    5. '>=' → logprob: -13.625041961669922
    6. '_s' → logprob: -13.875041961669922
    7. '_sc' → logprob: -14.250041961669922
    8. ' _' → logprob: -14.375041961669922
    9. '>' → logprob: -14.500041961669922
    10. ' >=' → logprob: -14.500041961669922

Token 133: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.12730665504932404
    2. ' >=' → logprob: -2.1273066997528076
    3. ']>=' → logprob: -9.377306938171387
    4. '>' → logprob: -9.877306938171387
    5. '<|end|>' → logprob: -10.127306938171387
    6. ' ' → logprob: -10.252306938171387
    7. ')' → logprob: -10.377306938171387
    8. '≥' → logprob: -10.877306938171387
    9. '```' → logprob: -11.002306938171387
    10. ')>=' → logprob: -11.377306938171387

Token 134: ' sc' (ID: 1460)
  Prédit: ' sc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sc' → logprob: -0.020389825105667114
    2. 'sc' → logprob: -4.395390033721924
    3. '(sc' → logprob: -5.020390033721924
    4. ' (' → logprob: -7.270390033721924
    5. ' ' → logprob: -8.020389556884766
    6. ' ' → logprob: -9.395389556884766
    7. ' f' → logprob: -10.770389556884766
    8. '(' → logprob: -11.145389556884766
    9. '	sc' → logprob: -11.270389556884766
    10. '```' → logprob: -11.270389556884766

Token 135: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2030966728925705
    2. '-' → logprob: -1.703096628189087
    3. '-r' → logprob: -6.453096866607666
    4. ' ' → logprob: -10.328096389770508
    5. '_' → logprob: -11.078096389770508
    6. ' ' → logprob: -11.078096389770508
    7. '-sc' → logprob: -11.203096389770508
    8. ')' → logprob: -12.328096389770508
    9. '_r' → logprob: -12.453096389770508
    10. 'r' → logprob: -12.703096389770508

Token 136: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.4287337064743042
    2. 'r' → logprob: -1.0537337064743042
    3. ' ' → logprob: -10.928733825683594
    4. '_r' → logprob: -12.053733825683594
    5. ' ' → logprob: -12.178733825683594
    6. '```' → logprob: -13.553733825683594
    7. '	r' → logprob: -13.928733825683594
    8. '
' → logprob: -14.553733825683594
    9. '   ' → logprob: -14.928733825683594
    10. '`' → logprob: -15.803733825683594

Token 137: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13952670991420746
    2. '       ' → logprob: -3.389526605606079
    3. '<|end|>' → logprob: -3.514526605606079
    4. ')' → logprob: -3.764526605606079
    5. ':' → logprob: -4.889526844024658
    6. '
' → logprob: -5.014526844024658
    7. '<|end|>' → logprob: -5.014526844024658
    8. ' for' → logprob: -5.139526844024658
    9. ' ' → logprob: -5.639526844024658
    10. ',' → logprob: -5.889526844024658

Token 138: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48039567470550537
    2. '       ' → logprob: -1.3553956747055054
    3. '<|end|>' → logprob: -3.480395793914795
    4. ')' → logprob: -3.605395793914795
    5. ':' → logprob: -4.230395793914795
    6. ' ' → logprob: -4.605395793914795
    7. ' for' → logprob: -4.855395793914795
    8. ',' → logprob: -4.980395793914795
    9. '<|end|>' → logprob: -5.730395793914795
    10. ' 
' → logprob: -6.355395793914795

Token 139: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0252208709716797
    2. ' idx' → logprob: -1.5252208709716797
    3. ' pos' → logprob: -1.6502208709716797
    4. 'pos' → logprob: -2.4002208709716797
    5. 'idx' → logprob: -2.5252208709716797
    6. ' left' → logprob: -4.15022087097168
    7. ' for' → logprob: -4.52522087097168
    8. '       ' → logprob: -4.65022087097168
    9. 'left' → logprob: -5.65022087097168
    10. ' count' → logprob: -6.15022087097168

Token 140: ' So' (ID: 2632)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.7071009278297424
    2. ' idx' → logprob: -1.5821008682250977
    3. 'pos' → logprob: -1.9571008682250977
    4. 'idx' → logprob: -2.5821008682250977
    5. ' left' → logprob: -3.4571008682250977
    6. ' lo' → logprob: -4.332100868225098
    7. 'left' → logprob: -4.582100868225098
    8. 'l' → logprob: -4.957100868225098
    9. '   ' → logprob: -5.207100868225098
    10. ' l' → logprob: -5.957100868225098

Token 141: ' leader' (ID: 12554)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.6536135673522949
    2. ' lo' → logprob: -1.903613567352295
    3. ' idx' → logprob: -2.653613567352295
    4. ' low' → logprob: -2.903613567352295
    5. 'left' → logprob: -3.028613567352295
    6. ' l' → logprob: -3.278613567352295
    7. '   ' → logprob: -3.528613567352295
    8. ',' → logprob: -4.153613567352295
    9. ' lower' → logprob: -4.528613567352295
    10. 'low' → logprob: -4.778613567352295

Token 142: '_score' (ID: 22555)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.3363644480705261
    2. '_scores' → logprob: -1.711364507675171
    3. '_index' → logprob: -3.461364507675171
    4. 's' → logprob: -4.211364269256592
    5. '_score' → logprob: -4.336364269256592
    6. '_pos' → logprob: -4.711364269256592
    7. '_min' → logprob: -4.961364269256592
    8. '_low' → logprob: -5.086364269256592
    9. '_indices' → logprob: -5.836364269256592
    10. 'idx' → logprob: -5.961364269256592

Token 143: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3135218024253845
    2. ' =' → logprob: -2.1885218620300293
    3. '>=' → logprob: -2.6885218620300293
    4. 's' → logprob: -3.1885218620300293
    5. '_idx' → logprob: -5.063521862030029
    6. '_left' → logprob: -5.063521862030029
    7. '<=' → logprob: -5.438521862030029
    8. '_index' → logprob: -5.813521862030029
    9. ')' → logprob: -5.938521862030029
    10. ' >=' → logprob: -5.938521862030029

Token 144: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2919585406780243
    2. ' [' → logprob: -1.9169585704803467
    3. ' range' → logprob: -3.5419585704803467
    4. '[L' → logprob: -3.5419585704803467
    5. 'range' → logprob: -3.6669585704803467
    6. '[s' → logprob: -5.291958332061768
    7. '[r' → logprob: -5.416958332061768
    8. '[max' → logprob: -6.666958332061768
    9. '[b' → logprob: -6.791958332061768
    10. ' L' → logprob: -7.041958332061768

Token 145: 'sc' (ID: 2786)
  Prédit: 'sc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.001310359570197761
    2. ' sc' → logprob: -7.251310348510742
    3. '(sc' → logprob: -8.126310348510742
    4. 'max' → logprob: -8.126310348510742
    5. ' max' → logprob: -12.376310348510742
    6. '
' → logprob: -13.501310348510742
    7. ',' → logprob: -14.001310348510742
    8. '   ' → logprob: -14.751310348510742
    9. '{' → logprob: -14.876310348510742
    10. '(max' → logprob: -15.126310348510742

Token 146: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06405895948410034
    2. '-' → logprob: -3.064059019088745
    3. '-r' → logprob: -4.189058780670166
    4. ',' → logprob: -8.939059257507324
    5. ' ' → logprob: -10.064059257507324
    6. '   ' → logprob: -12.564059257507324
    7. ' ' → logprob: -12.939059257507324
    8. ' ,' → logprob: -12.939059257507324
    9. '
' → logprob: -13.314059257507324
    10. ')' → logprob: -13.564059257507324

Token 147: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.08896596729755402
    2. ' r' → logprob: -2.463965892791748
    3. ',' → logprob: -11.713966369628906
    4. ' ' → logprob: -11.838966369628906
    5. ' ' → logprob: -12.588966369628906
    6. '
' → logprob: -13.463966369628906
    7. '	r' → logprob: -13.463966369628906
    8. '_r' → logprob: -14.338966369628906
    9. ' ,' → logprob: -14.338966369628906
    10. ',r' → logprob: -14.463966369628906

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020640453323721886
    2. ' ,' → logprob: -3.8956403732299805
    3. ',
' → logprob: -10.02064037322998
    4. ' ' → logprob: -10.52064037322998
    5. ']' → logprob: -11.64564037322998
    6. '],' → logprob: -12.14564037322998
    7. '   ' → logprob: -12.39564037322998
    8. ')' → logprob: -13.77064037322998
    9. '  ' → logprob: -14.27064037322998
    10. ',len' → logprob: -14.39564037322998

Token 149: ' sc' (ID: 1460)
  Prédit: ' sc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sc' → logprob: -0.5231615900993347
    2. 'sc' → logprob: -0.8981615900993347
    3. '(sc' → logprob: -11.273161888122559
    4. ',' → logprob: -11.398161888122559
    5. '_sc' → logprob: -12.398161888122559
    6. ' ' → logprob: -12.773161888122559
    7. '	sc' → logprob: -12.898161888122559
    8. ' ' → logprob: -13.773161888122559
    9. '.sc' → logprob: -13.898161888122559
    10. 's' → logprob: -14.273161888122559

Token 150: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024067439138889313
    2. ' -' → logprob: -4.274067401885986
    3. ' ]' → logprob: -4.899067401885986
    4. ' +' → logprob: -7.149067401885986
    5. '+' → logprob: -7.274067401885986
    6. ']
' → logprob: -8.649067878723145
    7. '-' → logprob: -8.774067878723145
    8. ' ' → logprob: -9.024067878723145
    9. '   ' → logprob: -9.149067878723145
    10. ',' → logprob: -9.149067878723145

Token 151: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015562557615339756
    2. '       ' → logprob: -5.640562534332275
    3. 'idx' → logprob: -5.640562534332275
    4. ' idx' → logprob: -5.765562534332275
    5. 'index' → logprob: -7.140562534332275
    6. ')' → logprob: -7.140562534332275
    7. '    
' → logprob: -7.390562534332275
    8. ' for' → logprob: -7.890562534332275
    9. ',' → logprob: -8.015563011169434
    10. ' index' → logprob: -8.640563011169434

Token 152: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.510709285736084
    2. '   ' → logprob: -2.010709285736084
    3. 'l' → logprob: -2.135709285736084
    4. 'idx' → logprob: -3.135709285736084
    5. 'pos' → logprob: -3.510709285736084
    6. 'low' → logprob: -3.510709285736084
    7. 'lo' → logprob: -3.885709285736084
    8. ' left' → logprob: -4.760709285736084
    9. 'start' → logprob: -4.885709285736084
    10. 'lower' → logprob: -6.385709285736084

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5245605111122131
    2. '_idx' → logprob: -1.5245604515075684
    3. '=' → logprob: -1.7745604515075684
    4. '_index' → logprob: -4.024560451507568
    5. '_pos' → logprob: -7.274560451507568
    6. '_' → logprob: -7.524560451507568
    7. 'idx' → logprob: -7.649560451507568
    8. ',' → logprob: -7.649560451507568
    9. '_bound' → logprob: -8.399560928344727
    10. '_ix' → logprob: -8.399560928344727

Token 154: ' sc' (ID: 1460)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.001330360071733594
    2. ' bis' → logprob: -6.626330375671387
    3. '0' → logprob: -12.751330375671387
    4. 'bs' → logprob: -14.501330375671387
    5. '   ' → logprob: -14.876330375671387
    6. 'import' → logprob: -15.251330375671387
    7. 'b' → logprob: -16.12632942199707
    8. ' ' → logprob: -16.25132942199707
    9. '
' → logprob: -16.25132942199707
    10. 'bi' → logprob: -16.50132942199707

Token 155: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07160361111164093
    2. '-' → logprob: -2.696603536605835
    3. '-r' → logprob: -6.446603775024414
    4. ' ' → logprob: -10.196603775024414
    5. ')' → logprob: -11.446603775024414
    6. ',' → logprob: -11.696603775024414
    7. '=' → logprob: -11.946603775024414
    8. 'r' → logprob: -12.696603775024414
    9. '   ' → logprob: -13.196603775024414
    10. 'import' → logprob: -13.321603775024414

Token 156: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0013259568950161338
    2. ' r' → logprob: -6.626326084136963
    3. '_r' → logprob: -18.251325607299805
    4. '	r' → logprob: -18.501325607299805
    5. ' ' → logprob: -18.626325607299805
    6. '   ' → logprob: -19.126325607299805
    7. '
' → logprob: -20.376325607299805
    8. 'int' → logprob: -21.001325607299805
    9. '```' → logprob: -21.126325607299805
    10. '­r' → logprob: -21.251325607299805

Token 157: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.003769874572754
    2. ')
' → logprob: -1.378769874572754
    3. '
' → logprob: -2.003769874572754
    4. ',' → logprob: -2.128769874572754
    5. '   ' → logprob: -2.753769874572754
    6. 'left' → logprob: -3.878769874572754
    7. ',left' → logprob: -5.128769874572754
    8. '<|end|>' → logprob: -5.253769874572754
    9. 'idx' → logprob: -6.003769874572754
    10. ',
' → logprob: -6.003769874572754

Token 158: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034041792154312134
    2. ' right' → logprob: -4.034041881561279
    3. 'right' → logprob: -4.909041881561279
    4. ',' → logprob: -6.284041881561279
    5. '	right' → logprob: -6.409041881561279
    6. '
' → logprob: -6.534041881561279
    7. ',right' → logprob: -6.659041881561279
    8. '    
' → logprob: -7.034041881561279
    9. 'idx' → logprob: -8.409041404724121
    10. ' idx' → logprob: -8.409041404724121

Token 159: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.0016365008195862174
    2. ' right' → logprob: -7.376636505126953
    3. 'l' → logprob: -8.126636505126953
    4. 'left' → logprob: -8.126636505126953
    5. 'hi' → logprob: -8.751636505126953
    6. 'idx' → logprob: -9.001636505126953
    7. 'import' → logprob: -9.751636505126953
    8. 'lo' → logprob: -10.001636505126953
    9. '	right' → logprob: -11.751636505126953
    10. 'pos' → logprob: -12.126636505126953

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06226971000432968
    2. '=' → logprob: -2.812269687652588
    3. ')' → logprob: -8.937270164489746
    4. '   ' → logprob: -9.437270164489746
    5. ',' → logprob: -9.937270164489746
    6. ' =
' → logprob: -11.062270164489746
    7. ' ' → logprob: -12.062270164489746
    8. ')
' → logprob: -12.187270164489746
    9. '=sc' → logprob: -12.562270164489746
    10. '=
' → logprob: -13.187270164489746

Token 161: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.06196824833750725
    2. ' sc' → logprob: -2.8119683265686035
    3. '(sc' → logprob: -15.936967849731445
    4. '	sc' → logprob: -15.936967849731445
    5. 's' → logprob: -16.311967849731445
    6. '   ' → logprob: -16.436967849731445
    7. ' ' → logprob: -17.186967849731445
    8. '=sc' → logprob: -17.561967849731445
    9. '.sc' → logprob: -17.686967849731445
    10. '_sc' → logprob: -17.686967849731445

Token 162: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.42765048146247864
    2. ' +' → logprob: -1.1776504516601562
    3. ')' → logprob: -4.177650451660156
    4. '   ' → logprob: -4.802650451660156
    5. '
' → logprob: -5.177650451660156
    6. ')
' → logprob: -5.552650451660156
    7. '+
' → logprob: -6.302650451660156
    8. ']' → logprob: -6.677650451660156
    9. 'bis' → logprob: -7.302650451660156
    10. ' bis' → logprob: -7.427650451660156

Token 163: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0170678049325943
    2. '       ' → logprob: -4.142067909240723
    3. 'left' → logprob: -7.517067909240723
    4. ' left' → logprob: -8.392067909240723
    5. 'idx' → logprob: -9.767067909240723
    6. 'pos' → logprob: -10.142067909240723
    7. '    
' → logprob: -10.392067909240723
    8. 'start' → logprob: -10.642067909240723
    9. 'index' → logprob: -11.142067909240723
    10. ' idx' → logprob: -11.267067909240723

Token 164: ' #' (ID: 1069)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.14534206688404083
    2. 'left' → logprob: -2.2703421115875244
    3. '   ' → logprob: -3.7703421115875244
    4. 'lo' → logprob: -6.145341873168945
    5. 'start' → logprob: -6.270341873168945
    6. 'idx' → logprob: -6.270341873168945
    7. 'li' → logprob: -6.895341873168945
    8. 'i' → logprob: -7.145341873168945
    9. 'low' → logprob: -7.645341873168945
    10. 'pos' → logprob: -8.770341873168945

Token 165: ' Find' (ID: 9764)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5422778129577637
    2. 'left' → logprob: -0.9172778129577637
    3. 'idx' → logprob: -5.417277812957764
    4. ' l' → logprob: -5.542277812957764
    5. ' left' → logprob: -5.542277812957764
    6. 'lo' → logprob: -5.667277812957764
    7. 'low' → logprob: -7.167277812957764
    8. 'start' → logprob: -7.292277812957764
    9. ' lo' → logprob: -7.292277812957764
    10. 'pos' → logprob: -8.042278289794922

Token 166: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.023231616243720055
    2. 'l' → logprob: -4.523231506347656
    3. 'lo' → logprob: -5.148231506347656
    4. ' left' → logprob: -5.773231506347656
    5. 'bis' → logprob: -6.773231506347656
    6. 'idx' → logprob: -6.898231506347656
    7. '   ' → logprob: -8.523231506347656
    8. 'low' → logprob: -8.773231506347656
    9. 'start' → logprob: -9.148231506347656
    10. 'right' → logprob: -9.148231506347656

Token 167: ' boundary' (ID: 35021)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.09171038120985031
    2. '_index' → logprob: -2.466710329055786
    3. 'idx' → logprob: -6.841710567474365
    4. '_pos' → logprob: -7.466710567474365
    5. 'index' → logprob: -7.591710567474365
    6. '_bound' → logprob: -7.966710567474365
    7. 'pos' → logprob: -8.966710090637207
    8. '_ix' → logprob: -9.966710090637207
    9. ' =' → logprob: -10.591710090637207
    10. 'bound' → logprob: -11.091710090637207

Token 168: '
' (ID: 198)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.17176015675067902
    2. ' left' → logprob: -2.296760082244873
    3. '   ' → logprob: -3.671760082244873
    4. 'l' → logprob: -3.921760082244873
    5. 'idx' → logprob: -5.296760082244873
    6. 'pos' → logprob: -6.296760082244873
    7. ' idx' → logprob: -6.671760082244873
    8. ' l' → logprob: -6.796760082244873
    9. 'index' → logprob: -7.921760082244873
    10. 'lo' → logprob: -8.046760559082031

Token 169: '       ' (ID: 309)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.6607639193534851
    2. 'left' → logprob: -1.2857639789581299
    3. '   ' → logprob: -1.7857639789581299
    4. ' l' → logprob: -4.035763740539551
    5. 'l' → logprob: -4.410763740539551
    6. ' idx' → logprob: -5.410763740539551
    7. 'idx' → logprob: -6.660763740539551
    8. ' lb' → logprob: -7.160763740539551
    9. ' ind' → logprob: -7.535763740539551
    10. ' lef' → logprob: -8.03576374053955

Token 170: ' li' (ID: 3476)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7047021985054016
    2. 'left' → logprob: -0.7047021985054016
    3. 'li' (adapté à ' li') → logprob: -5.204702377319336
    4. 'lo' → logprob: -5.329702377319336
    5. 'lb' → logprob: -7.204702377319336
    6. 'idx' → logprob: -8.704702377319336
    7. 'low' → logprob: -9.829702377319336
    8. 'pos' → logprob: -10.329702377319336
    9. '   ' → logprob: -10.579702377319336
    10. ' left' → logprob: -10.704702377319336

Token 171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013363274745643139
    2. '=' → logprob: -4.513363361358643
    3. 'ft' → logprob: -6.888363361358643
    4. 'ght' → logprob: -7.888363361358643
    5. 'left' → logprob: -8.388362884521484
    6. 'eft' → logprob: -8.638362884521484
    7. 'bound' → logprob: -9.388362884521484
    8. '_idx' → logprob: -9.513362884521484
    9. 'b' → logprob: -10.013362884521484
    10. 'f' → logprob: -10.263362884521484

Token 172: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.006715728435665369
    2. ' bis' → logprob: -5.006715774536133
    3. '0' → logprob: -15.506715774536133
    4. 'b' → logprob: -16.381715774536133
    5. 'bs' → logprob: -16.506715774536133
    6. 'len' → logprob: -17.756715774536133
    7. '	b' → logprob: -17.881715774536133
    8. 'bi' → logprob: -18.131715774536133
    9. ' ' → logprob: -18.381715774536133
    10. '   ' → logprob: -18.506715774536133

Token 173: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0770723894238472
    2. 'lect' → logprob: -3.5770723819732666
    3. 'sect' → logprob: -3.9520723819732666
    4. 'left' → logprob: -4.202072620391846
    5. 'ct' → logprob: -5.327072620391846
    6. '```' → logprob: -5.827072620391846
    7. 'bis' → logprob: -7.077072620391846
    8. '_left' → logprob: -7.327072620391846
    9. 'is' → logprob: -7.702072620391846
    10. 's' → logprob: -8.077072143554688

Token 174: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.000264315924141556
    2. '_left' → logprob: -8.250264167785645
    3. 'bis' → logprob: -13.125264167785645
    4. '.' → logprob: -14.375264167785645
    5. ' bis' → logprob: -15.375264167785645
    6. 'left' → logprob: -16.25026512145996
    7. 'b' → logprob: -16.87526512145996
    8. '.left' → logprob: -17.37526512145996
    9. 'Left' → logprob: -18.00026512145996
    10. 's' → logprob: -18.12526512145996

Token 175: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0009264685213565826
    2. 's' → logprob: -7.625926494598389
    3. 'ft' → logprob: -8.37592601776123
    4. 'eft' → logprob: -9.75092601776123
    5. 'left' → logprob: -9.75092601776123
    6. '_left' → logprob: -10.62592601776123
    7. 'ist' → logprob: -10.62592601776123
    8. 'bis' → logprob: -10.87592601776123
    9. 'ct' → logprob: -12.62592601776123
    10. 'l' → logprob: -12.62592601776123

Token 176: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.008075481280684471
    2. 'ect' → logprob: -5.008075714111328
    3. 'n' → logprob: -6.633075714111328
    4. 't' → logprob: -11.133075714111328
    5. '_left' → logprob: -11.633075714111328
    6. 'ctl' → logprob: -13.008075714111328
    7. '
' → logprob: -13.383075714111328
    8. 'left' → logprob: -13.508075714111328
    9. '#' → logprob: -13.633075714111328
    10. 'r' → logprob: -13.758075714111328

Token 177: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.07889088988304138
    2. 'left' → logprob: -2.578890800476074
    3. 'Left' → logprob: -14.453890800476074
    4. '_right' → logprob: -15.078890800476074
    5. 'l' → logprob: -15.703890800476074
    6. 'right' → logprob: -16.32889175415039
    7. 'le' → logprob: -17.57889175415039
    8. '-left' → logprob: -17.70389175415039
    9. 'LEFT' → logprob: -18.20389175415039
    10. '[left' → logprob: -18.45389175415039

Token 178: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.23462559282779694
    2. '(le' → logprob: -1.6096255779266357
    3. '(' → logprob: -5.109625816345215
    4. 'L' → logprob: -6.484625816345215
    5. 'Le' → logprob: -6.859625816345215
    6. 'leaders' → logprob: -7.984625816345215
    7. 'le' → logprob: -9.609625816345215
    8. '(l' → logprob: -9.609625816345215
    9. '(
' → logprob: -10.859625816345215
    10. '/le' → logprob: -10.984625816345215

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016432604752480984
    2. ',left' → logprob: -9.875164031982422
    3. ',L' → logprob: -10.125164031982422
    4. '(L' → logprob: -10.375164031982422
    5. ' ,' → logprob: -11.125164031982422
    6. '(' → logprob: -11.250164031982422
    7. ',l' → logprob: -12.125164031982422
    8. '(left' → logprob: -12.875164031982422
    9. ',(' → logprob: -13.250164031982422
    10. '(le' → logprob: -13.750164031982422

Token 180: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.00193149340339005
    2. ' left' → logprob: -6.251931667327881
    3. ')' → logprob: -13.626931190490723
    4. '	left' → logprob: -14.376931190490723
    5. '[left' → logprob: -14.501931190490723
    6. '(left' → logprob: -15.251931190490723
    7. ',left' → logprob: -16.12693214416504
    8. 'max' → logprob: -16.62693214416504
    9. '_left' → logprob: -17.12693214416504
    10. 'right' → logprob: -17.37693214416504

Token 181: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31333091855049133
    2. ')' → logprob: -1.313330888748169
    3. ' )
' → logprob: -10.56333065032959
    4. '   ' → logprob: -11.06333065032959
    5. ')
' → logprob: -11.18833065032959
    6. ' )' → logprob: -11.68833065032959
    7. ')

' → logprob: -12.56333065032959
    8. ',' → logprob: -14.43833065032959
    9. '       ' → logprob: -14.68833065032959
    10. ' ' → logprob: -16.063331604003906

Token 182: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 183: ' #' (ID: 1069)
  Prédit: 'ri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ri' → logprob: -0.008343880996108055
    2. '   ' → logprob: -5.633343696594238
    3. ' ri' → logprob: -5.758343696594238
    4. '       ' → logprob: -7.133343696594238
    5. 'if' → logprob: -7.883343696594238
    6. 'ui' → logprob: -9.258343696594238
    7. 'hi' → logprob: -9.883343696594238
    8. '     ' → logprob: -10.008343696594238
    9. ' if' → logprob: -10.633343696594238
    10. '```' → logprob: -10.758343696594238

Token 184: ' Find' (ID: 9764)
  Prédit: 'ri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ri' → logprob: -0.0058610085397958755
    2. ' ri' → logprob: -6.255860805511475
    3. 'if' → logprob: -6.630860805511475
    4. 'r' → logprob: -7.005860805511475
    5. 'hi' → logprob: -7.755860805511475
    6. 'rij' → logprob: -7.880860805511475
    7. 'lj' → logprob: -8.255861282348633
    8. 'li' → logprob: -9.505861282348633
    9. 'right' → logprob: -9.630861282348633
    10. '   ' → logprob: -9.755861282348633

Token 185: ' right' (ID: 1849)
  Prédit: 'ri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ri' → logprob: -0.08099759370088577
    2. 'bis' → logprob: -3.8309977054595947
    3. 'right' → logprob: -4.080997467041016
    4. 'bi' → logprob: -4.580997467041016
    5. ' ri' → logprob: -4.955997467041016
    6. 'hi' → logprob: -5.080997467041016
    7. ' bis' → logprob: -5.455997467041016
    8. '   ' → logprob: -5.580997467041016
    9. ' right' → logprob: -6.705997467041016
    10. 'ur' → logprob: -6.705997467041016

Token 186: ' boundary' (ID: 35021)
  Prédit: '_boundary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_boundary' → logprob: -0.13901188969612122
    2. 'boundary' → logprob: -2.889011859893799
    3. '_bound' → logprob: -3.139011859893799
    4. ' boundary' → logprob: -4.889011859893799
    5. ' =' → logprob: -5.014011859893799
    6. 'bound' → logprob: -5.514011859893799
    7. 'i' → logprob: -5.764011859893799
    8. '_i' → logprob: -5.889011859893799
    9. 'index' → logprob: -6.264011859893799
    10. '_index' → logprob: -6.889011859893799

Token 187: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5805027484893799
    2. 'ri' → logprob: -0.9555027484893799
    3. ' ri' → logprob: -3.83050274848938
    4. '   ' → logprob: -4.205502510070801
    5. ',' → logprob: -4.830502510070801
    6. '=' → logprob: -4.955502510070801
    7. '       ' → logprob: -5.830502510070801
    8. 'r' → logprob: -8.0805025100708
    9. '    
' → logprob: -9.3305025100708
    10. 'right' → logprob: -9.4555025100708

Token 188: '       ' (ID: 309)
  Prédit: 'ri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ri' → logprob: -0.12537185847759247
    2. ' ri' → logprob: -2.7503719329833984
    3. '       ' → logprob: -3.3753719329833984
    4. '   ' → logprob: -4.375371932983398
    5. 'r' → logprob: -6.250371932983398
    6. ',' → logprob: -6.500371932983398
    7. ' =' → logprob: -6.750371932983398
    8. 'right' → logprob: -7.500371932983398
    9. '    
' → logprob: -8.375371932983398
    10. '```' → logprob: -8.625371932983398

Token 189: ' ri' (ID: 10274)
  Prédit: 'ri'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ri' (adapté à ' ri') → logprob: -0.001312617096118629
    2. ' ri' → logprob: -6.876312732696533
    3. '   ' → logprob: -9.001312255859375
    4. 'li' → logprob: -10.001312255859375
    5. 'hi' → logprob: -10.251312255859375
    6. 'ui' → logprob: -10.501312255859375
    7. 'bi' → logprob: -11.626312255859375
    8. 're' → logprob: -12.251312255859375
    9. '       ' → logprob: -12.751312255859375
    10. '
' → logprob: -12.751312255859375

Token 190: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693597376346588
    2. '=' → logprob: -2.1269359588623047
    3. '=b' → logprob: -11.876935958862305
    4. 'bis' → logprob: -14.876935958862305
    5. ' bis' → logprob: -15.001935958862305
    6. ' ' → logprob: -16.001935958862305
    7. 's' → logprob: -17.001935958862305
    8. '(b' → logprob: -17.251935958862305
    9. ')' → logprob: -17.251935958862305
    10. '   ' → logprob: -17.376935958862305

Token 191: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.2014141082763672
    2. 'bis' → logprob: -1.7014141082763672
    3. 'b' → logprob: -14.576414108276367
    4. 'len' → logprob: -17.076414108276367
    5. 'bs' → logprob: -17.326414108276367
    6. '	b' → logprob: -17.451414108276367
    7. '```' → logprob: -18.201414108276367
    8. ' ' → logprob: -18.326414108276367
    9. 'Bis' → logprob: -18.326414108276367
    10. 'bi' → logprob: -18.513914108276367

Token 192: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.5029041171073914
    2. 'ect' → logprob: -1.6279041767120361
    3. 'sect' → logprob: -1.6279041767120361
    4. 's' → logprob: -6.752903938293457
    5. '.b' → logprob: -7.627903938293457
    6. ' bis' → logprob: -8.377903938293457
    7. 't' → logprob: -8.752903938293457
    8. '```' → logprob: -8.877903938293457
    9. 'n' → logprob: -9.627903938293457
    10. 'st' → logprob: -9.877903938293457

Token 193: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.0004444931691978127
    2. '_right' → logprob: -7.750444412231445
    3. '.' → logprob: -12.500444412231445
    4. 'bis' → logprob: -12.625444412231445
    5. 'right' → logprob: -12.875444412231445
    6. 'Right' → logprob: -13.250444412231445
    7. '.right' → logprob: -14.500444412231445
    8. '.r' → logprob: -14.625444412231445
    9. '```' → logprob: -14.750444412231445
    10. '_left' → logprob: -15.500444412231445

Token 194: 'is' (ID: 276)
  Prédit: 'sect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -0.5860621929168701
    2. 's' → logprob: -1.4610621929168701
    3. 'is' → logprob: -1.9610621929168701
    4. 'ct' → logprob: -3.33606219291687
    5. 'st' → logprob: -4.586062431335449
    6. 'ect' → logprob: -4.711062431335449
    7. '```' → logprob: -5.461062431335449
    8. 'bis' → logprob: -6.211062431335449
    9. 'sc' → logprob: -6.336062431335449
    10. 'se' → logprob: -6.461062431335449

Token 195: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.03243907913565636
    2. 'sect' → logprob: -3.6574389934539795
    3. 'ect' → logprob: -5.282439231872559
    4. 'n' → logprob: -8.032439231872559
    5. 's' → logprob: -8.407439231872559
    6. 'st' → logprob: -8.907439231872559
    7. '```' → logprob: -9.657439231872559
    8. 'sc' → logprob: -9.782439231872559
    9. 't' → logprob: -10.282439231872559
    10. 'bis' → logprob: -10.532439231872559

Token 196: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.11049477010965347
    2. 'right' → logprob: -2.36049485206604
    3. 'bis' → logprob: -4.610494613647461
    4. 'Right' → logprob: -8.235494613647461
    5. '.b' → logprob: -11.860494613647461
    6. '-right' → logprob: -11.985494613647461
    7. '_left' → logprob: -12.860494613647461
    8. '```' → logprob: -13.235494613647461
    9. ' bis' → logprob: -13.360494613647461
    10. '
' → logprob: -13.610494613647461

Token 197: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -2.47495681833243e-05
    2. 'L' → logprob: -10.625024795532227
    3. '(' → logprob: -15.125024795532227
    4. '```' → logprob: -17.000024795532227
    5. '[L' → logprob: -17.375024795532227
    6. ')L' → logprob: -18.125024795532227
    7. '(M' → logprob: -18.125024795532227
    8. '(R' → logprob: -18.500024795532227
    9. '	L' → logprob: -18.625024795532227
    10. ')' → logprob: -18.750024795532227

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06750155985355377
    2. '(L' → logprob: -2.8175015449523926
    3. 'L' → logprob: -5.442501544952393
    4. '(' → logprob: -7.692501544952393
    5. ')' → logprob: -7.692501544952393
    6. ',L' → logprob: -8.56750202178955
    7. ' ,' → logprob: -10.19250202178955
    8. '),' → logprob: -11.06750202178955
    9. ',right' → logprob: -11.31750202178955
    10. ' (' → logprob: -11.81750202178955

Token 199: ' right' (ID: 1849)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.003767658956348896
    2. ' L' → logprob: -6.128767490386963
    3. 'right' → logprob: -6.628767490386963
    4. ' right' → logprob: -8.503767967224121
    5. ')' → logprob: -10.503767967224121
    6. 'Right' → logprob: -11.503767967224121
    7. 'R' → logprob: -12.003767967224121
    8. '(L' → logprob: -12.253767967224121
    9. ' ' → logprob: -13.003767967224121
    10. '[right' → logprob: -13.128767967224121

Token 200: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020558351650834084
    2. ')
' → logprob: -3.8955583572387695
    3. ' )' → logprob: -12.27055835723877
    4. '   ' → logprob: -12.39555835723877
    5. ')
' → logprob: -12.52055835723877
    6. ')

' → logprob: -13.39555835723877
    7. ')return' → logprob: -13.89555835723877
    8. ' )
' → logprob: -15.14555835723877
    9. ')#' → logprob: -15.52055835723877
    10. ')+' → logprob: -15.89555835723877

Token 201: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6400112509727478
    2. '
' → logprob: -1.2650113105773926
    3. '<|end|>' → logprob: -2.2650113105773926
    4. '       ' → logprob: -3.6400113105773926
    5. 'count' → logprob: -4.140011310577393
    6. '  
' → logprob: -5.015011310577393
    7. ')' → logprob: -5.015011310577393
    8. '    
' → logprob: -5.015011310577393
    9. ' 
' → logprob: -5.265011310577393
    10. '	count' → logprob: -5.765011310577393

Token 202: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.32393893599510193
    2. 'if' (adapté à ' if') → logprob: -1.6989389657974243
    3. '       ' → logprob: -2.4489388465881348
    4. 'count' → logprob: -5.698938846588135
    5. ' count' → logprob: -7.073938846588135
    6. '   ' → logprob: -7.198938846588135
    7. '        ' → logprob: -7.323938846588135
    8. '
' → logprob: -7.698938846588135
    9. '```' → logprob: -7.823938846588135
    10. '        
' → logprob: -8.448939323425293

Token 203: ' li' (ID: 3476)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -0.15771308541297913
    2. ' li' → logprob: -2.6577131748199463
    3. 'ri' → logprob: -3.1577131748199463
    4. ' ri' → logprob: -3.4077131748199463
    5. '<li' → logprob: -9.657712936401367
    6. '(li' → logprob: -10.032712936401367
    7. '   ' → logprob: -11.657712936401367
    8. '(' → logprob: -12.282712936401367
    9. 'left' → logprob: -12.532712936401367
    10. ' ' → logprob: -12.657712936401367

Token 204: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08798930794000626
    2. '>=' → logprob: -3.212989330291748
    3. ' ==' → logprob: -3.212989330291748
    4. ' >=' → logprob: -5.587989330291748
    5. '=' → logprob: -11.46298885345459
    6. '==
' → logprob: -13.46298885345459
    7. ' ' → logprob: -14.21298885345459
    8. '<' → logprob: -14.46298885345459
    9. '≥' → logprob: -15.71298885345459
    10. '>' → logprob: -15.83798885345459

Token 205: ' ri' (ID: 10274)
  Prédit: 'ri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ri' → logprob: -0.00043233807082287967
    2. ' ri' → logprob: -8.125432014465332
    3. '0' → logprob: -9.000432014465332
    4. 'len' → logprob: -11.375432014465332
    5. ' ' → logprob: -14.500432014465332
    6. '
' → logprob: -15.375432014465332
    7. 'rii' → logprob: -16.12543296813965
    8. 'rig' → logprob: -16.50043296813965
    9. '   ' → logprob: -16.62543296813965
    10. 'right' → logprob: -16.75043296813965

Token 206: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3513069748878479
    2. ':
' → logprob: -1.4763069152832031
    3. '           ' → logprob: -2.851306915283203
    4. '       ' → logprob: -4.851306915283203
    5. ' or' → logprob: -6.851306915283203
    6. '   ' → logprob: -7.976306915283203
    7. '          ' → logprob: -9.101306915283203
    8. '):
' → logprob: -9.601306915283203
    9. '               ' → logprob: -9.726306915283203
    10. '<|end|>' → logprob: -9.851306915283203

Token 207: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007537625497207046
    2. '
' → logprob: -7.625753879547119
    3. '	       ' → logprob: -9.875753402709961
    4. '            
' → logprob: -10.000753402709961
    5. '               ' → logprob: -10.500753402709961
    6. '<|end|>' → logprob: -10.875753402709961
    7. '       ' → logprob: -11.125753402709961
    8. ' continue' → logprob: -11.250753402709961
    9. '<|end|>' → logprob: -11.250753402709961
    10. ',' → logprob: -11.375753402709961

Token 208: ' count' (ID: 3605)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04290418326854706
    2. '       ' → logprob: -3.2929041385650635
    3. '
' → logprob: -6.542904376983643
    4. '   ' → logprob: -6.542904376983643
    5. '               ' → logprob: -6.792904376983643
    6. 'count' (adapté à ' count') → logprob: -7.417904376983643
    7. ' count' → logprob: -8.667903900146484
    8. ' continue' → logprob: -11.292903900146484
    9. 'continue' → logprob: -11.417903900146484
    10. '	       ' → logprob: -11.667903900146484

Token 209: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.386880099773407
    2. '+=' → logprob: -1.1368801593780518
    3. '   ' → logprob: -12.261879920959473
    4. '    ' → logprob: -13.386879920959473
    5. '+' → logprob: -13.511879920959473
    6. ']+=' → logprob: -14.136879920959473
    7. '=' → logprob: -15.511879920959473
    8. '        ' → logprob: -16.01188087463379
    9. '           ' → logprob: -16.38688087463379
    10. '       ' → logprob: -16.38688087463379

Token 210: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '+' → logprob: -19.125
    4. 'count' → logprob: -20.125
    5. '```' → logprob: -20.375
    6. '0' → logprob: -21.0
    7. '   ' → logprob: -21.5625
    8. '１' → logprob: -22.5
    9. 'N' → logprob: -22.5625
    10. '
' → logprob: -22.75

Token 211: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -20.625
    4. 'N' → logprob: -21.0
    5. '+' → logprob: -21.5
    6. '-' → logprob: -21.75
    7. '0' → logprob: -21.75
    8. '
' → logprob: -21.875
    9. 'count' → logprob: -22.3125
    10. '۱' → logprob: -22.4375

Token 212: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018532203510403633
    2. 'return' → logprob: -4.8935322761535645
    3. ' return' → logprob: -5.6435322761535645
    4. '	return' → logprob: -5.7685322761535645
    5. '```' → logprob: -6.3935322761535645
    6. '<|end|>' → logprob: -7.2685322761535645
    7. '
' → logprob: -7.7685322761535645
    8. '    
' → logprob: -7.7685322761535645
    9. ')' → logprob: -7.7685322761535645
    10. '       ' → logprob: -9.018531799316406

Token 214: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7900967001914978
    2. ' return' → logprob: -1.5400967597961426
    3. '
' → logprob: -1.6650967597961426
    4. '   ' → logprob: -2.5400967597961426
    5. '\n' → logprob: -3.6650967597961426
    6. '	return' → logprob: -4.540096759796143
    7. '<|end|>' → logprob: -4.540096759796143
    8. ')' → logprob: -5.040096759796143
    9. ' 
' → logprob: -5.915096759796143
    10. ':return' → logprob: -6.415096759796143

Token 215: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.011047935113310814
    2. ' count' → logprob: -4.511047840118408
    3. '[count' → logprob: -16.38604736328125
    4. '(count' → logprob: -16.88604736328125
    5. '	count' → logprob: -18.13604736328125
    6. '<count' → logprob: -18.88604736328125
    7. '=count' → logprob: -20.38604736328125
    8. '$count' → logprob: -20.38604736328125
    9. '_count' → logprob: -21.26104736328125
    10. '```' → logprob: -21.51104736328125

Token 216: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 217: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0317222885787487
    2. 'Q' → logprob: -3.7817223072052
    3. 'queries' → logprob: -6.156722068786621
    4. 'leaders' → logprob: -6.406722068786621
    5. 'query' → logprob: -6.906722068786621
    6. 'answers' → logprob: -7.031722068786621
    7. 'r' → logprob: -7.281722068786621
    8. 'def' → logprob: -7.406722068786621
    9. ' for' → logprob: -8.156722068786621
    10. 'results' → logprob: -8.656722068786621

Token 218: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.016086338087916374
    2. '_' → logprob: -4.141086101531982
    3. ' i' → logprob: -10.76608657836914
    4. '_i' → logprob: -11.01608657836914
    5. '_q' → logprob: -11.89108657836914
    6. ' q' → logprob: -12.26608657836914
    7. '_query' → logprob: -13.64108657836914
    8. ' ' → logprob: -14.39108657836914
    9. ' query' → logprob: -14.89108657836914
    10. 'q' → logprob: -15.51608657836914

Token 219: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08907219022512436
    2. 'in' → logprob: -2.4640722274780273
    3. 'import' → logprob: -9.839072227478027
    4. ' ' → logprob: -10.089072227478027
    5. '(' → logprob: -11.089072227478027
    6. 'range' → logprob: -11.964072227478027
    7. '_' → logprob: -13.089072227478027
    8. '```' → logprob: -13.339072227478027
    9. 'input' → logprob: -13.464072227478027
    10. '  ' → logprob: -13.464072227478027

Token 220: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.026357775554060936
    2. ' range' → logprob: -3.651357889175415
    3. 'input' → logprob: -10.151357650756836
    4. '(range' → logprob: -11.901357650756836
    5. 'in' → logprob: -12.651357650756836
    6. 'Q' → logprob: -13.151357650756836
    7. ' input' → logprob: -13.276357650756836
    8. '(' → logprob: -14.151357650756836
    9. 'ranges' → logprob: -14.276357650756836
    10. ' in' → logprob: -14.651357650756836

Token 221: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.015418988652527332
    2. '(' → logprob: -4.265419006347656
    3. ' (' → logprob: -7.515419006347656
    4. ' Q' → logprob: -7.515419006347656
    5. 'Q' → logprob: -9.140419006347656
    6. '(range' → logprob: -10.390419006347656
    7. '(int' → logprob: -11.390419006347656
    8. ' range' → logprob: -11.640419006347656
    9. 'range' → logprob: -12.890419006347656
    10. '(
' → logprob: -13.515419006347656

Token 222: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07113554328680038
    2. '):
' → logprob: -2.6961355209350586
    3. ',' → logprob: -7.446135520935059
    4. '():' → logprob: -8.696135520935059
    5. '():
' → logprob: -8.946135520935059
    6. ':' → logprob: -9.071135520935059
    7. ')' → logprob: -9.821135520935059
    8. '):
' → logprob: -10.071135520935059
    9. ' ):' → logprob: -10.696135520935059
    10. ''):' → logprob: -11.321135520935059

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39103564620018005
    2. ' line' → logprob: -1.3910356760025024
    3. ' op' → logprob: -3.766035556793213
    4. ' query' → logprob: -4.391035556793213
    5. ' t' → logprob: -5.016035556793213
    6. ' s' → logprob: -5.391035556793213
    7. 'line' → logprob: -5.516035556793213
    8. ' parts' → logprob: -5.516035556793213
    9. ' x' → logprob: -6.141035556793213
    10. ' tokens' → logprob: -6.141035556793213

Token 224: ' query' (ID: 5703)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -1.0991384983062744
    2. 'query' (adapté à ' query') → logprob: -1.2241384983062744
    3. 't' → logprob: -1.4741384983062744
    4. 'q' → logprob: -3.0991384983062744
    5. 'line' → logprob: -3.8491384983062744
    6. 'c' → logprob: -3.9741384983062744
    7. 'command' → logprob: -3.9741384983062744
    8. 'op' → logprob: -4.474138259887695
    9. ' query' → logprob: -4.599138259887695
    10. 'x' → logprob: -5.349138259887695

Token 225: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.024914536625146866
    2. '=' → logprob: -3.774914503097534
    3. '_line' → logprob: -7.399914741516113
    4. ' ' → logprob: -7.899914741516113
    5. '_' → logprob: -8.524914741516113
    6. '_type' → logprob: -8.774914741516113
    7. '   ' → logprob: -9.024914741516113
    8. '[' → logprob: -9.524914741516113
    9. ',' → logprob: -10.024914741516113
    10. '=line' → logprob: -10.149914741516113

Token 226: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006858874578028917
    2. ' input' → logprob: -5.006858825683594
    3. 'list' → logprob: -8.881858825683594
    4. 'int' → logprob: -12.506858825683594
    5. ' list' → logprob: -14.131858825683594
    6. 'tuple' → logprob: -17.006858825683594
    7. '=input' → logprob: -17.256858825683594
    8. '(input' → logprob: -17.506858825683594
    9. '[input' → logprob: -17.881858825683594
    10. '	input' → logprob: -18.631858825683594

Token 227: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.001058771857060492
    2. '()' → logprob: -7.876058578491211
    3. '.split' → logprob: -8.251058578491211
    4. '.strip' → logprob: -9.001058578491211
    5. 'split' → logprob: -9.126058578491211
    6. '.rstrip' → logprob: -9.626058578491211
    7. '.' → logprob: -10.001058578491211
    8. '()
' → logprob: -11.001058578491211
    9. 'rstrip' → logprob: -11.126058578491211
    10. '<|end|>' → logprob: -11.751058578491211

Token 228: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.47451910376548767
    2. 'split' → logprob: -0.9745191335678101
    3. 'rstrip' → logprob: -7.7245192527771
    4. ' split' → logprob: -17.349519729614258
    5. ' strip' → logprob: -17.724519729614258
    6. 'startswith' → logprob: -18.099519729614258
    7. '(split' → logprob: -18.724519729614258
    8. 'spl' → logprob: -19.349519729614258
    9. 'replace' → logprob: -20.849519729614258
    10. '.strip' → logprob: -20.849519729614258

Token 229: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9021961688995361
    2. '<|end|>' → logprob: -1.1521961688995361
    3. '[' → logprob: -1.4021961688995361
    4. '    
' → logprob: -4.527195930480957
    5. '
' → logprob: -5.527195930480957
    6. '  
' → logprob: -5.777195930480957
    7. '[
' → logprob: -5.902195930480957
    8. ' 
' → logprob: -6.402195930480957
    9. '<|end|>' → logprob: -6.402195930480957
    10. ' ' → logprob: -6.652195930480957

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7057487964630127
    2. ' if' → logprob: -1.5807487964630127
    3. '<|end|>' → logprob: -1.7057487964630127
    4. '[' → logprob: -3.0807487964630127
    5. 'if' → logprob: -3.2057487964630127
    6. ' ' → logprob: -4.580748558044434
    7. ' 
' → logprob: -5.080748558044434
    8. '```' → logprob: -5.580748558044434
    9. '    
' → logprob: -5.705748558044434
    10. '    ' → logprob: -6.455748558044434

Token 231: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3199547231197357
    2. ' if' → logprob: -1.319954752922058
    3. 'i' → logprob: -5.694954872131348
    4. '   ' → logprob: -5.944954872131348
    5. ' i' → logprob: -7.819954872131348
    6. 't' → logprob: -8.569954872131348
    7. '  ' → logprob: -11.069954872131348
    8. ' t' → logprob: -11.069954872131348
    9. 'token' → logprob: -11.069954872131348
    10. ' ' → logprob: -11.444954872131348

Token 232: ' query' (ID: 5703)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.31328314542770386
    2. ' query' → logprob: -1.3132832050323486
    3. '=query' → logprob: -11.93828296661377
    4. '(query' → logprob: -12.06328296661377
    5. '	query' → logprob: -12.18828296661377
    6. '   ' → logprob: -13.56328296661377
    7. 'len' → logprob: -13.81328296661377
    8. '$query' → logprob: -13.81328296661377
    9. '[' → logprob: -15.56328296661377
    10. ' ' → logprob: -15.68828296661377

Token 233: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. '==' → logprob: -13.375001907348633
    3. '```' → logprob: -15.125001907348633
    4. ' [' → logprob: -15.250001907348633
    5. '[
' → logprob: -16.625001907348633
    6. ' ==' → logprob: -17.000001907348633
    7. '0' → logprob: -17.000001907348633
    8. '\[' → logprob: -17.750001907348633
    9. 'and' → logprob: -18.625001907348633
    10. ' and' → logprob: -18.625001907348633

Token 234: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -11.000019073486328
    3. '=' → logprob: -13.750019073486328
    4. '1' → logprob: -14.125019073486328
    5. '[' → logprob: -15.000019073486328
    6. '==' → logprob: -15.625019073486328
    7. ':' → logprob: -17.250019073486328
    8. ']' → logprob: -17.250019073486328
    9. '   ' → logprob: -17.375019073486328
    10. ' =' → logprob: -17.625019073486328

Token 235: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31809890270233154
    2. ' ==' → logprob: -1.3180989027023315
    3. ']' → logprob: -5.818099021911621
    4. ']==' → logprob: -7.068099021911621
    5. '=' → logprob: -8.068099021911621
    6. '=='' → logprob: -8.193099021911621
    7. '[' → logprob: -8.443099021911621
    8. ')' → logprob: -8.943099021911621
    9. '==
' → logprob: -11.318099021911621
    10. ''' → logprob: -11.568099021911621

Token 236: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5772699117660522
    2. '==' → logprob: -0.8272699117660522
    3. '[' → logprob: -6.952270030975342
    4. '=='' → logprob: -8.202269554138184
    5. '=' → logprob: -10.327269554138184
    6. '=="' → logprob: -10.577269554138184
    7. '==
' → logprob: -10.952269554138184
    8. '===' → logprob: -11.452269554138184
    9. ' =='' → logprob: -12.702269554138184
    10. ' =' → logprob: -13.202269554138184

Token 237: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1448083519935608
    2. ' '' → logprob: -3.269808292388916
    3. ''a' → logprob: -3.519808292388916
    4. ''A' → logprob: -3.644808292388916
    5. '"' → logprob: -4.144808292388916
    6. ''I' → logprob: -4.519808292388916
    7. ''U' → logprob: -5.394808292388916
    8. ''u' → logprob: -5.894808292388916
    9. ''S' → logprob: -6.894808292388916
    10. ''i' → logprob: -7.144808292388916

Token 238: 'ADD' (ID: 29357)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.66521817445755
    2. '"' → logprob: -2.4152181148529053
    3. 'update' → logprob: -2.6652181148529053
    4. '+' → logprob: -2.6652181148529053
    5. 'U' → logprob: -2.6652181148529053
    6. 'ADD' → logprob: -2.9152181148529053
    7. 'A' → logprob: -3.6652181148529053
    8. '1' → logprob: -3.7902181148529053
    9. ''' → logprob: -4.415218353271484
    10. '"+' → logprob: -4.665218353271484

Token 239: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.5818663835525513
    2. '":' → logprob: -0.8318663835525513
    3. '"' → logprob: -5.456866264343262
    4. '_le' → logprob: -7.456866264343262
    5. '"):
' → logprob: -7.956866264343262
    6. '":
' → logprob: -8.206866264343262
    7. '):
' → logprob: -9.331866264343262
    8. '"]:
' → logprob: -9.331866264343262
    9. ':
' → logprob: -10.081866264343262
    10. '":

' → logprob: -10.206866264343262

Token 240: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41185262799263
    2. ' i' → logprob: -1.2868525981903076
    3. ' idx' → logprob: -3.1618525981903076
    4. ' id' → logprob: -5.161852836608887
    5. ' leaders' → logprob: -6.161852836608887
    6. ',' → logprob: -6.286852836608887
    7. ' ' → logprob: -6.911852836608887
    8. ':' → logprob: -7.036852836608887
    9. '    
' → logprob: -7.036852836608887
    10. ':
' → logprob: -7.411852836608887

Token 241: ' a' (ID: 261)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.08958228677511215
    2. ' leader' → logprob: -3.7145822048187256
    3. ' pos' → logprob: -4.089582443237305
    4. 'idx' → logprob: -4.089582443237305
    5. ' i' → logprob: -4.339582443237305
    6. ' x' → logprob: -4.964582443237305
    7. ' index' → logprob: -6.214582443237305
    8. 'i' → logprob: -6.339582443237305
    9. 'leader' → logprob: -6.839582443237305
    10. 'pos' → logprob: -7.339582443237305

Token 242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02368355169892311
    2. '_id' → logprob: -5.148683547973633
    3. '_idx' → logprob: -5.523683547973633
    4. ' ' → logprob: -5.648683547973633
    5. '_le' → logprob: -5.898683547973633
    6. '_index' → logprob: -6.023683547973633
    7. '_' → logprob: -6.648683547973633
    8. '=' → logprob: -7.023683547973633
    9. '_score' → logprob: -7.148683547973633
    10. ',' → logprob: -7.398683547973633

Token 243: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12692810595035553
    2. ' int' → logprob: -2.1269280910491943
    3. '[int' → logprob: -17.751928329467773
    4. '(int' → logprob: -18.001928329467773
    5. '=int' → logprob: -18.626928329467773
    6. '	int' → logprob: -18.876928329467773
    7. '<int' → logprob: -20.376928329467773
    8. ':int' → logprob: -21.626928329467773
    9. 'ints' → logprob: -21.751928329467773
    10. ']int' → logprob: -22.001928329467773

Token 244: '(query' (ID: 19835)
  Prédit: '(query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(query' → logprob: -0.003191501135006547
    2. 'query' → logprob: -5.7531914710998535
    3. '(' → logprob: -11.253191947937012
    4. ' query' → logprob: -14.378191947937012
    5. '=query' → logprob: -16.378190994262695
    6. '$query' → logprob: -17.128190994262695
    7. '	query' → logprob: -17.378190994262695
    8. ' (' → logprob: -17.878190994262695
    9. '(
' → logprob: -18.378190994262695
    10. '
' → logprob: -20.503190994262695

Token 245: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.643152740551159e-05
    2. '1' → logprob: -10.250036239624023
    3. ' [' → logprob: -14.375036239624023
    4. 'a' → logprob: -15.375036239624023
    5. '   ' → logprob: -16.500036239624023
    6. ')' → logprob: -16.750036239624023
    7. '```' → logprob: -16.875036239624023
    8. '[
' → logprob: -17.000036239624023
    9. '(' → logprob: -17.500036239624023
    10. '
' → logprob: -18.375036239624023

Token 246: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.750001907348633
    3. '[' → logprob: -15.750001907348633
    4. '2' → logprob: -16.000001907348633
    5. '   ' → logprob: -17.000001907348633
    6. '
' → logprob: -17.625001907348633
    7. '0' → logprob: -17.875001907348633
    8. '```' → logprob: -17.875001907348633
    9. '])' → logprob: -18.125001907348633
    10. ']' → logprob: -18.375001907348633

Token 247: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.18017080426216125
    2. ')' → logprob: -1.8051707744598389
    3. '])
' → logprob: -8.180171012878418
    4. '])' → logprob: -9.180171012878418
    5. ')

' → logprob: -11.430171012878418
    6. ' )
' → logprob: -11.555171012878418
    7. ')
' → logprob: -12.180171012878418
    8. '       ' → logprob: -12.555171012878418
    9. ']' → logprob: -12.930171012878418
    10. '   ' → logprob: -13.055171012878418

Token 248: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2925812602043152
    2. '
' → logprob: -2.04258131980896
    3. ' leaders' → logprob: -2.54258131980896
    4. '    
' → logprob: -4.167581081390381
    5. 'leaders' → logprob: -4.292581081390381
    6. ')' → logprob: -5.542581081390381
    7. '<|end|>' → logprob: -5.667581081390381
    8. '       ' → logprob: -6.417581081390381
    9. '  
' → logprob: -6.542581081390381
    10. ' 
' → logprob: -6.542581081390381

Token 249: ' leaders' (ID: 13998)
  Prédit: 'leaders'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leaders' (adapté à ' leaders') → logprob: -0.17979173362255096
    2. 'if' → logprob: -1.9297916889190674
    3. ' leaders' → logprob: -4.3047919273376465
    4. ' if' → logprob: -5.1797919273376465
    5. 'le' → logprob: -9.429791450500488
    6. '   ' → logprob: -10.179791450500488
    7. '```' → logprob: -10.179791450500488
    8. 'leader' → logprob: -11.054791450500488
    9. '       ' → logprob: -11.429791450500488
    10. 'scores' → logprob: -11.679791450500488

Token 250: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.00018947436183225363
    2. '_add' → logprob: -8.875189781188965
    3. '.add' → logprob: -10.125189781188965
    4. '._' → logprob: -13.375189781188965
    5. '_.' → logprob: -13.500189781188965
    6. '_sets' → logprob: -13.750189781188965
    7. '.' → logprob: -13.750189781188965
    8. 'add' → logprob: -13.875189781188965
    9. '_' → logprob: -14.000189781188965
    10. '_SET' → logprob: -14.125189781188965

Token 251: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00015872348740231246
    2. '.' → logprob: -8.750158309936523
    3. 'add' → logprob: -15.500158309936523
    4. ' .' → logprob: -17.125158309936523
    5. '.Add' → logprob: -19.500158309936523
    6. ').' → logprob: -19.500158309936523
    7. '.update' → logprob: -20.000158309936523
    8. '	add' → logprob: -20.000158309936523
    9. '].' → logprob: -20.250158309936523
    10. '.=' → logprob: -21.000158309936523

Token 252: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -5.319370302458992e-06
    2. 'a' → logprob: -12.375005722045898
    3. '(' → logprob: -14.500005722045898
    4. ' a' → logprob: -14.875005722045898
    5. ' (' → logprob: -16.0000057220459
    6. '(
' → logprob: -18.6250057220459
    7. ')a' → logprob: -21.0000057220459
    8. '	a' → logprob: -21.2500057220459
    9. '```' → logprob: -22.1250057220459
    10. '(ai' → logprob: -22.6250057220459

Token 253: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013633318012580276
    2. ')
' → logprob: -6.626363277435303
    3. ' )' → logprob: -10.501363754272461
    4. '<|end|>' → logprob: -11.876363754272461
    5. ')

' → logprob: -14.376363754272461
    6. '}' → logprob: -14.751363754272461
    7. ' )
' → logprob: -14.876363754272461
    8. '   ' → logprob: -15.501363754272461
    9. '<|end|>' → logprob: -15.501363754272461
    10. ')#' → logprob: -15.626363754272461

Token 254: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38060879707336426
    2. '<|end|>' → logprob: -1.7556087970733643
    3. ' update' → logprob: -2.8806087970733643
    4. '
' → logprob: -3.1306087970733643
    5. 'update' → logprob: -4.255608558654785
    6. '    
' → logprob: -4.505608558654785
    7. ' 
' → logprob: -5.505608558654785
    8. '  
' → logprob: -5.630608558654785
    9. '       ' → logprob: -6.130608558654785
    10. ' ' → logprob: -6.505608558654785

Token 255: ' #' (ID: 1069)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.014175730757415295
    2. ' update' → logprob: -4.264175891876221
    3. '   ' → logprob: -11.389175415039062
    4. '       ' → logprob: -14.389175415039062
    5. '	update' → logprob: -15.264175415039062
    6. '.update' → logprob: -17.014175415039062
    7. '(update' → logprob: -17.639175415039062
    8. '```' → logprob: -18.264175415039062
    9. '
' → logprob: -18.389175415039062
    10. ' ' → logprob: -19.139175415039062

Token 256: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.023548031225800514
    2. ' update' → logprob: -3.773548126220703
    3. '   ' → logprob: -8.398548126220703
    4. '       ' → logprob: -9.523548126220703
    5. '
' → logprob: -13.898548126220703
    6. '	update' → logprob: -13.898548126220703
    7. ' ' → logprob: -14.023548126220703
    8. '  ' → logprob: -14.773548126220703
    9. '.update' → logprob: -14.898548126220703
    10. '```' → logprob: -14.898548126220703

Token 257: ' leaders' (ID: 13998)
  Prédit: '_le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_le' → logprob: -1.2664456789934775e-06
    2. 'leaders' → logprob: -13.625000953674316
    3. 'Le' → logprob: -18.000001907348633
    4. '_' → logprob: -19.375001907348633
    5. '_scores' → logprob: -20.125001907348633
    6. 'le' → logprob: -20.375001907348633
    7. '_l' → logprob: -21.125001907348633
    8. ' leaders' → logprob: -21.125001907348633
    9. '```' → logprob: -21.125001907348633
    10. '_LE' → logprob: -21.125001907348633

Token 258: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -2.816093228830141e-06
    2. 'scores' → logprob: -12.87500286102295
    3. '_le' → logprob: -16.875001907348633
    4. '_' → logprob: -17.750001907348633
    5. '_codes' → logprob: -18.500001907348633
    6. '_set' → logprob: -18.625001907348633
    7. '_score' → logprob: -18.750001907348633
    8. '```' → logprob: -19.250001907348633
    9. '_counts' → logprob: -19.375001907348633
    10. ' scores' → logprob: -19.375001907348633

Token 259: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.19105766713619232
    2. '()
' → logprob: -1.9410576820373535
    3. '   ' → logprob: -3.5660576820373535
    4. '
' → logprob: -7.5660576820373535
    5. '<|end|>' → logprob: -7.6910576820373535
    6. '();' → logprob: -7.8160576820373535
    7. '       ' → logprob: -8.691057205200195
    8. 'update' → logprob: -9.066057205200195
    9. '()\' → logprob: -9.066057205200195
    10. '()
' → logprob: -9.566057205200195

Token 260: '       ' (ID: 309)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11261440068483353
    2. '()
' → logprob: -2.487614393234253
    3. '   ' → logprob: -3.862614393234253
    4. '();' → logprob: -7.362614631652832
    5. 'update' → logprob: -7.362614631652832
    6. '<|end|>' → logprob: -7.737614631652832
    7. '       ' → logprob: -7.862614631652832
    8. '.update' → logprob: -9.237614631652832
    9. '()\' → logprob: -10.362614631652832
    10. '
' → logprob: -10.362614631652832

Token 261: ' #' (ID: 1069)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.008682293817400932
    2. ' update' → logprob: -4.7586822509765625
    3. '   ' → logprob: -9.633682250976562
    4. '
' → logprob: -14.383682250976562
    5. 'leaders' → logprob: -14.383682250976562
    6. '```' → logprob: -14.758682250976562
    7. '(update' → logprob: -15.383682250976562
    8. '	update' → logprob: -15.508682250976562
    9. '       ' → logprob: -15.883682250976562
    10. ' leaders' → logprob: -16.133682250976562

Token 262: ' Since' (ID: 12265)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.32004544138908386
    2. ' update' → logprob: -1.3200454711914062
    3. '   ' → logprob: -5.070045471191406
    4. '       ' → logprob: -7.695045471191406
    5. '	update' → logprob: -11.445045471191406
    6. '(update' → logprob: -12.695045471191406
    7. ' ' → logprob: -12.820045471191406
    8. '  ' → logprob: -12.945045471191406
    9. '.update' → logprob: -13.070045471191406
    10. '
' → logprob: -13.820045471191406

Token 263: ' max' (ID: 2999)
  Prédit: ' leaders'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' leaders' → logprob: -0.013438318856060505
    2. 'leaders' → logprob: -4.3884382247924805
    3. ' scores' → logprob: -7.6384382247924805
    4. ' not' → logprob: -9.13843822479248
    5. ' update' → logprob: -10.01343822479248
    6. ' bis' → logprob: -10.01343822479248
    7. ' a' → logprob: -10.26343822479248
    8. ' leads' → logprob: -10.26343822479248
    9. ' len' → logprob: -10.76343822479248
    10. 'scores' → logprob: -10.88843822479248

Token 264: ' leaders' (ID: 13998)
  Prédit: 'leaders'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leaders' → logprob: -0.5641006231307983
    2. ' leaders' → logprob: -1.8141006231307983
    3. 'scores' → logprob: -2.314100742340088
    4. ')' → logprob: -3.064100742340088
    5. '(scores' → logprob: -3.564100742340088
    6. '_le' → logprob: -3.814100742340088
    7. '_scores' → logprob: -3.814100742340088
    8. '()' → logprob: -4.814100742340088
    9. ' scores' → logprob: -4.939100742340088
    10. '```' → logprob: -5.439100742340088

Token 265: ' ' (ID: 220)
  Prédit: '_scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_scores' → logprob: -0.0009499297011643648
    2. '_set' → logprob: -7.000949859619141
    3. 'scores' → logprob: -11.37594985961914
    4. 'cores' → logprob: -12.00094985961914
    5. '_' → logprob: -12.37594985961914
    6. 'set' → logprob: -13.12594985961914
    7. 'add' → logprob: -13.25094985961914
    8. '_add' → logprob: -13.50094985961914
    9. '
' → logprob: -13.50094985961914
    10. '   ' → logprob: -13.62594985961914

Token 266: '100' (ID: 1353)
  Prédit: '_scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_scores' → logprob: -0.005660460330545902
    2. '.append' → logprob: -5.755660533905029
    3. '_set' → logprob: -6.880660533905029
    4. 'scores' → logprob: -8.505660057067871
    5. '   ' → logprob: -8.630660057067871
    6. '=' → logprob: -8.880660057067871
    7. ' =' → logprob: -9.130660057067871
    8. '()' → logprob: -9.255660057067871
    9. '+=' → logprob: -9.380660057067871
    10. '_s' → logprob: -9.505660057067871

Token 267: ',' (ID: 11)
  Prédit: '_scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -0.05711847543716431
    2. '       ' → logprob: -3.0571184158325195
    3. 'scores' → logprob: -5.8071184158325195
    4. 's' → logprob: -6.3071184158325195
    5. '   ' → logprob: -7.0571184158325195
    6. '           ' → logprob: -7.9321184158325195
    7. 'leaders' → logprob: -7.9321184158325195
    8. '_s' → logprob: -8.05711841583252
    9. ',' → logprob: -8.18211841583252
    10. '(scores' → logprob: -8.55711841583252

Token 268: ' just' (ID: 1327)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3517891764640808
    2. 'leaders' → logprob: -2.2267892360687256
    3. 'update' → logprob: -2.6017892360687256
    4. ' leaders' → logprob: -3.2267892360687256
    5. ' update' → logprob: -3.7267892360687256
    6. 'if' → logprob: -3.9767892360687256
    7. '       ' → logprob: -4.6017889976501465
    8. ' if' → logprob: -4.9767889976501465
    9. '#' → logprob: -5.7267889976501465
    10. ' bis' → logprob: -6.1017889976501465

Token 269: ' sort' (ID: 4506)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.03825630620121956
    2. ' update' → logprob: -3.2882564067840576
    3. '   ' → logprob: -8.538256645202637
    4. 're' → logprob: -12.538256645202637
    5. '       ' → logprob: -12.913256645202637
    6. 'call' → logprob: -13.163256645202637
    7. '	update' → logprob: -13.413256645202637
    8. '```' → logprob: -13.413256645202637
    9. 'replace' → logprob: -13.788256645202637
    10. '
' → logprob: -14.038256645202637

Token 270: ' every' (ID: 1753)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.4914833903312683
    2. '       ' → logprob: -1.116483449935913
    3. '   ' → logprob: -3.866483449935913
    4. '
' → logprob: -4.241483211517334
    5. ' update' → logprob: -4.241483211517334
    6. '(update' → logprob: -5.366483211517334
    7. '.update' → logprob: -5.741483211517334
    8. '()
' → logprob: -7.116483211517334
    9. '```' → logprob: -7.366483211517334
    10. ',' → logprob: -7.866483211517334

Token 271: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.001178439473733306
    2. ' time' → logprob: -6.75117826461792
    3. 'update' → logprob: -11.751178741455078
    4. ' update' → logprob: -15.876178741455078
    5. '_time' → logprob: -16.001178741455078
    6. 'query' → logprob: -17.626178741455078
    7. '	time' → logprob: -18.376178741455078
    8. 'iteration' → logprob: -18.876178741455078
    9. 'times' → logprob: -19.001178741455078
    10. 'call' → logprob: -19.751178741455078

Token 272: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08522389084100723
    2. '   ' → logprob: -3.085223913192749
    3. '
' → logprob: -3.460223913192749
    4. 'update' → logprob: -5.83522367477417
    5. ' update' → logprob: -6.96022367477417
    6. '(update' → logprob: -8.460224151611328
    7. '  
' → logprob: -9.460224151611328
    8. '```' → logprob: -9.710224151611328
    9. '<|end|>' → logprob: -9.835224151611328
    10. '.update' → logprob: -9.960224151611328

Token 273: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.234288290143013
    2. 'update' → logprob: -1.8592883348464966
    3. '       ' → logprob: -3.609288215637207
    4. ' update' → logprob: -3.859288215637207
    5. '(update' → logprob: -6.234288215637207
    6. '
' → logprob: -6.484288215637207
    7. '.update' → logprob: -7.359288215637207
    8. '```' → logprob: -8.234288215637207
    9. '()
' → logprob: -8.859288215637207
    10. '	update' → logprob: -9.234288215637207

Token 274: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -0.0021427664905786514
    2. '   ' → logprob: -6.502142906188965
    3. ' update' → logprob: -7.377142906188965
    4. '       ' → logprob: -11.252142906188965
    5. '```' → logprob: -14.377142906188965
    6. '
' → logprob: -15.002142906188965
    7. '	update' → logprob: -15.127142906188965
    8. '  ' → logprob: -15.377142906188965
    9. ' ' → logprob: -15.502142906188965
    10. 'leaders' → logprob: -15.752142906188965

Token 275: '_le' (ID: 27121)
  Prédit: '_le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_le' → logprob: -4.320199877838604e-07
    2. 'leaders' → logprob: -15.375
    3. '_' → logprob: -15.75
    4. '```' → logprob: -17.5
    5. 'Le' → logprob: -19.25
    6. '_led' → logprob: -19.75
    7. '_leg' → logprob: -20.375
    8. '(_' → logprob: -20.625
    9. '\' → logprob: -20.625
    10. '_LE' → logprob: -20.625

Token 276: 'aders' (ID: 35288)
  Prédit: 'aders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aders' → logprob: -4.572941179503687e-05
    2. 'leaders' → logprob: -10.750045776367188
    3. 'ad' → logprob: -11.000045776367188
    4. 'ader' → logprob: -12.000045776367188
    5. 'ade' → logprob: -15.000045776367188
    6. 'ading' → logprob: -15.000045776367188
    7. 'ders' → logprob: -15.375045776367188
    8. 'ads' → logprob: -16.000045776367188
    9. ' leaders' → logprob: -16.375045776367188
    10. 'a' → logprob: -17.500045776367188

Token 277: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -3.531315314830863e-06
    2. 'scores' → logprob: -13.125003814697266
    3. '_' → logprob: -13.625003814697266
    4. '_codes' → logprob: -15.750003814697266
    5. '_score' → logprob: -16.500003814697266
    6. '```' → logprob: -17.250003814697266
    7. 's' → logprob: -17.750003814697266
    8. '_prices' → logprob: -18.125003814697266
    9. ' _' → logprob: -18.625003814697266
    10. '(scores' → logprob: -18.625003814697266

Token 278: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 279: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 280: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.0400204174220562
    2. 'else' → logprob: -3.29002046585083
    3. '   ' → logprob: -6.91502046585083
    4. ' elif' → logprob: -7.04002046585083
    5. '```' → logprob: -9.540019989013672
    6. ' else' → logprob: -10.790019989013672
    7. '	elif' → logprob: -11.290019989013672
    8. ' ' → logprob: -13.540019989013672
    9. '<|end|>' → logprob: -14.290019989013672
    10. '#elif' → logprob: -14.540019989013672

Token 281: ' query' (ID: 5703)
  Prédit: ' query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' query' → logprob: -0.12692873179912567
    2. 'query' → logprob: -2.1269288063049316
    3. '	query' → logprob: -15.001928329467773
    4. '(query' → logprob: -15.626928329467773
    5. '=query' → logprob: -16.501928329467773
    6. '$query' → logprob: -16.876928329467773
    7. ' ' → logprob: -17.251928329467773
    8. 'len' → logprob: -18.001928329467773
    9. ' len' → logprob: -18.501928329467773
    10. '"' → logprob: -18.501928329467773

Token 282: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.65707261255011e-06
    2. '==' → logprob: -12.000008583068848
    3. '=' → logprob: -14.375008583068848
    4. ' ==' → logprob: -14.375008583068848
    5. '=[' → logprob: -15.000008583068848
    6. ' [' → logprob: -15.000008583068848
    7. ' =' → logprob: -15.500008583068848
    8. '[
' → logprob: -16.125009536743164
    9. '<|end|>' → logprob: -16.125009536743164
    10. '```' → logprob: -16.625009536743164

Token 283: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007972718216478825
    2. '1' → logprob: -4.882972717285156
    3. '"' → logprob: -8.257972717285156
    4. '[' → logprob: -9.382972717285156
    5. ''' → logprob: -10.882972717285156
    6. ' ' → logprob: -12.757972717285156
    7. '
' → logprob: -14.757972717285156
    8. ''s' → logprob: -15.507972717285156
    9. ']' → logprob: -16.007972717285156
    10. '#' → logprob: -16.507972717285156

Token 284: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5775323510169983
    2. '==' → logprob: -0.8275323510169983
    3. '[' → logprob: -6.7025322914123535
    4. ']==' → logprob: -8.577532768249512
    5. '=="' → logprob: -9.202532768249512
    6. ')==' → logprob: -11.202532768249512
    7. '=' → logprob: -11.327532768249512
    8. ' =="' → logprob: -11.577532768249512
    9. '===' → logprob: -11.702532768249512
    10. ']' → logprob: -11.702532768249512

Token 285: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6932798027992249
    2. ' ==' → logprob: -0.6932798027992249
    3. '=="' → logprob: -9.318280220031738
    4. '=' → logprob: -10.693280220031738
    5. '===' → logprob: -11.693280220031738
    6. '[' → logprob: -12.193280220031738
    7. ' =="' → logprob: -12.943280220031738
    8. ' =' → logprob: -13.443280220031738
    9. '==
' → logprob: -13.818280220031738
    10. '=='' → logprob: -14.568280220031738

Token 286: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1412888616323471
    2. ' "' → logprob: -2.1412887573242188
    3. '"C' → logprob: -4.516288757324219
    4. '"S' → logprob: -6.516288757324219
    5. '"E' → logprob: -7.641288757324219
    6. ' ' → logprob: -8.391288757324219
    7. ''' → logprob: -8.391288757324219
    8. '"D' → logprob: -8.641288757324219
    9. '"T' → logprob: -8.766288757324219
    10. '"AT' → logprob: -8.891288757324219

Token 287: 'REMOVE' (ID: 166559)
  Prédit: 'COUNT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'COUNT' → logprob: -0.6104925870895386
    2. 'REMOVE' → logprob: -0.9854925870895386
    3. 'DEL' → logprob: -3.485492706298828
    4. 'QUERY' → logprob: -4.110492706298828
    5. 'CHECK' → logprob: -4.360492706298828
    6. 'ASK' → logprob: -4.985492706298828
    7. 'GET' → logprob: -5.360492706298828
    8. 'REM' → logprob: -5.860492706298828
    9. 'UPDATE' → logprob: -5.985492706298828
    10. 'CNT' → logprob: -6.360492706298828

Token 288: '":
' (ID: 9213)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 289: '       ' (ID: 309)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.04950108006596565
    2. 'a' → logprob: -3.0495011806488037
    3. '   ' → logprob: -7.049500942230225
    4. '	a' → logprob: -10.799501419067383
    5. ' b' → logprob: -11.549501419067383
    6. '       ' → logprob: -12.174501419067383
    7. '```' → logprob: -12.299501419067383
    8. 'b' → logprob: -12.799501419067383
    9. ' r' → logprob: -14.424501419067383
    10. '    
' → logprob: -15.049501419067383

Token 290: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.31345072388648987
    2. ' a' → logprob: -1.3134506940841675
    3. 'b' → logprob: -9.063450813293457
    4. ' b' → logprob: -10.313450813293457
    5. '       ' → logprob: -11.063450813293457
    6. 'r' → logprob: -11.438450813293457
    7. '   ' → logprob: -11.938450813293457
    8. ' r' → logprob: -12.688450813293457
    9. 'x' → logprob: -13.813450813293457
    10. ' x' → logprob: -14.188450813293457

Token 291: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012520836666226387
    2. '=' → logprob: -4.387520790100098
    3. '   ' → logprob: -12.137520790100098
    4. ' ' → logprob: -12.512520790100098
    5. 'a' → logprob: -14.762520790100098
    6. '=int' → logprob: -14.887520790100098
    7. ' a' → logprob: -15.012520790100098
    8. ' ' → logprob: -15.512520790100098
    9. '<|end|>' → logprob: -15.637520790100098
    10. ' .' → logprob: -16.012521743774414

Token 292: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0015023599844425917
    2. ' int' → logprob: -6.501502513885498
    3. '(int' → logprob: -20.751502990722656
    4. '[int' → logprob: -21.251502990722656
    5. '<int' → logprob: -21.376502990722656
    6. '   ' → logprob: -22.001502990722656
    7. '=int' → logprob: -22.001502990722656
    8. '	int' → logprob: -22.876502990722656
    9. ' ' → logprob: -23.876502990722656
    10. ':int' → logprob: -24.501502990722656

Token 293: '(query' (ID: 19835)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5853426456451416
    2. 'query' → logprob: -0.9603426456451416
    3. ' int' → logprob: -3.2103426456451416
    4. ' query' → logprob: -4.5853424072265625
    5. '(query' → logprob: -4.9603424072265625
    6. '(int' → logprob: -5.9603424072265625
    7. 'a' → logprob: -8.710342407226562
    8. '[int' → logprob: -11.960342407226562
    9. '(a' → logprob: -12.585342407226562
    10. ' a' → logprob: -12.835342407226562

Token 294: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.707997428951785e-05
    2. '1' → logprob: -9.500077247619629
    3. '[a' → logprob: -13.875077247619629
    4. 'a' → logprob: -15.000077247619629
    5. '(' → logprob: -15.250077247619629
    6. ')' → logprob: -15.750077247619629
    7. ']' → logprob: -15.750077247619629
    8. 's' → logprob: -16.500076293945312
    9. '[
' → logprob: -16.625076293945312
    10. '2' → logprob: -17.125076293945312

Token 295: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. 'a' → logprob: -10.750045776367188
    3. 'query' → logprob: -11.125045776367188
    4. ' ' → logprob: -12.125045776367188
    5. '[' → logprob: -12.750045776367188
    6. '(a' → logprob: -15.125045776367188
    7. ']' → logprob: -15.375045776367188
    8. '(' → logprob: -15.875045776367188
    9. ' query' → logprob: -16.250045776367188
    10. 'int' → logprob: -16.625045776367188

Token 296: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0005642342148348689
    2. ')' → logprob: -7.500564098358154
    3. ')
' → logprob: -11.625564575195312
    4. '       ' → logprob: -13.875564575195312
    5. '   ' → logprob: -14.125564575195312
    6. ')

' → logprob: -14.750564575195312
    7. ' )
' → logprob: -15.750564575195312
    8. ')`
' → logprob: -16.375564575195312
    9. '}
' → logprob: -18.875564575195312
    10. '`)
' → logprob: -19.000564575195312

Token 297: '       ' (ID: 309)
  Prédit: ' leaders'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leaders' → logprob: -0.35059937834739685
    2. 'leaders' → logprob: -1.2255994081497192
    3. '   ' → logprob: -6.72559928894043
    4. 'le' → logprob: -8.35059928894043
    5. '       ' → logprob: -8.60059928894043
    6. '```' → logprob: -8.85059928894043
    7. '(le' → logprob: -8.97559928894043
    8. '_le' → logprob: -9.47559928894043
    9. '
' → logprob: -9.60059928894043
    10. '.le' → logprob: -9.97559928894043

Token 298: ' leaders' (ID: 13998)
  Prédit: 'leaders'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leaders' (adapté à ' leaders') → logprob: -0.0007406574441120028
    2. ' leaders' → logprob: -7.2507405281066895
    3. 'if' → logprob: -10.625741004943848
    4. 'le' → logprob: -12.375741004943848
    5. '```' → logprob: -14.000741004943848
    6. '   ' → logprob: -14.375741004943848
    7. ' if' → logprob: -14.500741004943848
    8. '       ' → logprob: -15.625741004943848
    9. 'Le' → logprob: -16.62574005126953
    10. '
' → logprob: -16.87574005126953

Token 299: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -4.320199877838604e-07
    2. '_sets' → logprob: -15.375
    3. '_remove' → logprob: -16.625
    4. 'set' → logprob: -18.125
    5. '_SET' → logprob: -18.75
    6. '.' → logprob: -18.875
    7. '._' → logprob: -19.0
    8. '.remove' → logprob: -19.0
    9. '_.' → logprob: -19.25
    10. 'Set' → logprob: -19.5

Token 300: '.remove' (ID: 7986)
  Prédit: '.dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dis' → logprob: -0.10022251307964325
    2. '.remove' → logprob: -2.350222587585449
    3. '.' → logprob: -11.10022258758545
    4. 'discard' → logprob: -14.10022258758545
    5. 'remove' → logprob: -17.850221633911133
    6. '.Dis' → logprob: -20.100221633911133
    7. ' .' → logprob: -20.225221633911133
    8. '.Remove' → logprob: -21.100221633911133
    9. 'Discard' → logprob: -21.475221633911133
    10. '.d' → logprob: -21.475221633911133

Token 301: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.9361264946837764e-07
    2. 'a' → logprob: -16.375
    3. '(' → logprob: -19.25
    4. '(
' → logprob: -22.625
    5. ' a' → logprob: -24.625
    6. ' (' → logprob: -25.0
    7. '(A' → logprob: -26.0
    8. '(an' → logprob: -26.5
    9. '	a' → logprob: -27.125
    10. '(abs' → logprob: -27.125

Token 302: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5362071394920349
    2. ')' → logprob: -1.1612071990966797
    3. '       ' → logprob: -2.2862071990966797
    4. '   ' → logprob: -8.78620719909668
    5. '<|end|>' → logprob: -10.03620719909668
    6. ')
' → logprob: -10.41120719909668
    7. ')a' → logprob: -11.03620719909668
    8. 'a' → logprob: -12.16120719909668
    9. '           ' → logprob: -12.28620719909668
    10. ' )
' → logprob: -12.53620719909668

Token 303: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011898684315383434
    2. '   ' → logprob: -6.751189708709717
    3. '#' → logprob: -11.501190185546875
    4. 'update' → logprob: -11.751190185546875
    5. '```' → logprob: -13.751190185546875
    6. '           ' → logprob: -15.876190185546875
    7. '``' → logprob: -16.376190185546875
    8. '        
' → logprob: -16.626190185546875
    9. '
' → logprob: -16.751190185546875
    10. '      ' → logprob: -16.876190185546875

Token 304: ' update' (ID: 4027)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04907303303480148
    2. 'update' (adapté à ' update') → logprob: -3.0490729808807373
    3. ' update' → logprob: -8.424073219299316
    4. '   ' → logprob: -8.424073219299316
    5. '#' → logprob: -10.174073219299316
    6. '```' → logprob: -12.424073219299316
    7. '
' → logprob: -13.549073219299316
    8. '           ' → logprob: -14.299073219299316
    9. '.update' → logprob: -14.924073219299316
    10. '(update' → logprob: -14.924073219299316

Token 305: '_le' (ID: 27121)
  Prédit: '_le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_le' → logprob: -1.8624639324116288e-06
    2. 'leaders' → logprob: -13.250001907348633
    3. 'Le' → logprob: -17.125001907348633
    4. 'le' → logprob: -18.750001907348633
    5. '\' → logprob: -19.375001907348633
    6. '```' → logprob: -19.625001907348633
    7. '(le' → logprob: -20.000001907348633
    8. '(_' → logprob: -20.625001907348633
    9. ' leaders' → logprob: -20.625001907348633
    10. '_led' → logprob: -20.875001907348633

Token 306: 'aders' (ID: 35288)
  Prédit: 'aders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aders' → logprob: -9.317247167928144e-05
    2. 'ad' → logprob: -9.500093460083008
    3. 'leaders' → logprob: -11.500093460083008
    4. 'ader' → logprob: -12.250093460083008
    5. 'ders' → logprob: -13.625093460083008
    6. 'ers' → logprob: -13.750093460083008
    7. 'ads' → logprob: -15.000093460083008
    8. 'ade' → logprob: -16.000093460083008
    9. ' leaders' → logprob: -16.125093460083008
    10. '_' → logprob: -16.125093460083008

Token 307: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -2.165027217415627e-05
    2. 'scores' → logprob: -10.750021934509277
    3. '_score' → logprob: -17.25002098083496
    4. 'def' → logprob: -17.87502098083496
    5. '_' → logprob: -18.50002098083496
    6. '_codes' → logprob: -18.50002098083496
    7. '```' → logprob: -18.50002098083496
    8. '_le' → logprob: -18.62502098083496
    9. '_counts' → logprob: -19.25002098083496
    10. 'Scores' → logprob: -19.25002098083496

Token 308: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.48546168208122253
    2. '<|end|>' → logprob: -0.9854617118835449
    3. '   ' → logprob: -4.860461711883545
    4. '```' → logprob: -6.360461711883545
    5. '<|end|>' → logprob: -6.985461711883545
    6. '()
' → logprob: -7.360461711883545
    7. ')' → logprob: -8.985461235046387
    8. '``' → logprob: -10.860461235046387
    9. '())' → logprob: -11.110461235046387
    10. '
' → logprob: -11.235461235046387

Token 309: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.6211247444152832
    2. 'else' → logprob: -1.2461247444152832
    3. '   ' → logprob: -1.7461247444152832
    4. ' elif' → logprob: -8.496124267578125
    5. 'r' → logprob: -8.996124267578125
    6. '	elif' → logprob: -9.121124267578125
    7. ' else' → logprob: -9.246124267578125
    8. '```' → logprob: -10.246124267578125
    9. '	else' → logprob: -11.996124267578125
    10. ' ' → logprob: -12.121124267578125

Token 310: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.1509384959936142
    2. 'else' (adapté à ' else') → logprob: -2.0259385108947754
    3. '   ' → logprob: -4.900938510894775
    4. ' elif' → logprob: -7.525938510894775
    5. 'r' → logprob: -9.275938034057617
    6. ' else' → logprob: -9.400938034057617
    7. '	elif' → logprob: -10.025938034057617
    8. '```' → logprob: -11.650938034057617
    9. '    
' → logprob: -11.900938034057617
    10. ' ' → logprob: -12.400938034057617

Token 311: ':' (ID: 25)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0007790327072144
    2. '   ' → logprob: -1.1257790327072144
    3. ' =' → logprob: -1.8757790327072144
    4. ':' → logprob: -2.500779151916504
    5. ' ==' → logprob: -3.625779151916504
    6. '       ' → logprob: -4.750779151916504
    7. '=' → logprob: -4.875779151916504
    8. ' if' → logprob: -5.500779151916504
    9. '[
' → logprob: -5.750779151916504
    10. '==' → logprob: -5.750779151916504

Token 312: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.251394659280777
    2. '   ' → logprob: -1.6263946294784546
    3. '<|end|>' → logprob: -5.251394748687744
    4. 'r' → logprob: -5.376394748687744
    5. '        
' → logprob: -5.751394748687744
    6. 'a' → logprob: -6.126394748687744
    7. ' ' → logprob: -6.376394748687744
    8. ' r' → logprob: -6.751394748687744
    9. '```' → logprob: -7.188894748687744
    10. '[' → logprob: -7.188894748687744

Token 313: ' #' (ID: 1069)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3044639527797699
    2. ' r' → logprob: -1.9294639825820923
    3. '   ' → logprob: -2.1794638633728027
    4. 'a' → logprob: -6.804463863372803
    5. '#' → logprob: -6.929463863372803
    6. '```' → logprob: -7.679463863372803
    7. ' ' → logprob: -8.054464340209961
    8. '       ' → logprob: -8.304464340209961
    9. 'R' → logprob: -8.929464340209961
    10. ' #' → logprob: -9.054464340209961

Token 314: ' CHECK' (ID: 29665)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.9577388167381287
    2. '   ' → logprob: -0.9577388167381287
    3. 'print' → logprob: -1.5827388763427734
    4. ' print' → logprob: -4.457738876342773
    5. ' "' → logprob: -5.207738876342773
    6. 'PRINT' → logprob: -6.207738876342773
    7. '#' → logprob: -6.457738876342773
    8. 'if' → logprob: -7.082738876342773
    9. 'r' → logprob: -7.332738876342773
    10. 'QUERY' → logprob: -7.457738876342773

Token 315: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00651854882016778
    2. ' r' → logprob: -5.381518363952637
    3. 'r' → logprob: -6.631518363952637
    4. '       ' → logprob: -8.381518363952637
    5. '(r' → logprob: -9.006518363952637
    6. '_r' → logprob: -10.631518363952637
    7. '(' → logprob: -10.631518363952637
    8. 'a' → logprob: -10.881518363952637
    9. '    ' → logprob: -10.881518363952637
    10. '[r' → logprob: -10.881518363952637

Token 316: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006730645429342985
    2. 'x' → logprob: -5.881730556488037
    3. '       ' → logprob: -6.506730556488037
    4. ' ' → logprob: -7.131730556488037
    5. ' x' → logprob: -7.256730556488037
    6. '=' → logprob: -8.381731033325195
    7. ' r' → logprob: -8.506731033325195
    8. '  ' → logprob: -9.131731033325195
    9. 'r' → logprob: -9.256731033325195
    10. '_' → logprob: -9.256731033325195

Token 317: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019137614872306585
    2. '       ' → logprob: -6.501913547515869
    3. 'x' → logprob: -8.126914024353027
    4. ' x' → logprob: -9.626914024353027
    5. 'a' → logprob: -11.126914024353027
    6. ' ' → logprob: -11.376914024353027
    7. '    ' → logprob: -11.626914024353027
    8. '	x' → logprob: -13.001914024353027
    9. '    
' → logprob: -13.126914024353027
    10. '  ' → logprob: -13.251914024353027

Token 318: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.01108342781662941
    2. 'r' → logprob: -4.511083602905273
    3. ' x' → logprob: -10.761083602905273
    4. '       ' → logprob: -11.511083602905273
    5. '   ' → logprob: -13.011083602905273
    6. ' r' → logprob: -13.136083602905273
    7. 'a' → logprob: -16.386083602905273
    8. '	x' → logprob: -16.886083602905273
    9. ' ' → logprob: -18.011083602905273
    10. 'b' → logprob: -18.011083602905273

Token 319: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407814860343933
    2. ' =' → logprob: -0.9740781784057617
    3. '=int' → logprob: -14.474078178405762
    4. ' ' → logprob: -14.849078178405762
    5. '   ' → logprob: -16.224077224731445
    6. ',' → logprob: -16.474077224731445
    7. 'r' → logprob: -17.099077224731445
    8. 'a' → logprob: -17.974077224731445
    9. '=

' → logprob: -18.349077224731445
    10. ' ' → logprob: -18.474077224731445

Token 320: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.5597102396423e-05
    2. ' int' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.125036239624023
    4. '[int' → logprob: -18.250036239624023
    5. 'float' → logprob: -18.875036239624023
    6. '	int' → logprob: -19.500036239624023
    7. '  ' → logprob: -19.625036239624023
    8. '(int' → logprob: -20.125036239624023
    9. ' ' → logprob: -20.250036239624023
    10. '=int' → logprob: -20.625036239624023

Token 321: '(query' (ID: 19835)
  Prédit: '(query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(query' → logprob: -0.002476016292348504
    2. 'query' → logprob: -6.002476215362549
    3. '(' → logprob: -16.62747573852539
    4. '	query' → logprob: -16.75247573852539
    5. '$query' → logprob: -17.00247573852539
    6. ' query' → logprob: -17.25247573852539
    7. '=query' → logprob: -17.25247573852539
    8. '(input' → logprob: -19.37747573852539
    9. '.query' → logprob: -19.62747573852539
    10. ' (' → logprob: -19.75247573852539

Token 322: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07880374789237976
    2. ')' → logprob: -2.828803777694702
    3. '])' → logprob: -4.828803539276123
    4. '1' → logprob: -5.078803539276123
    5. '0' → logprob: -7.078803539276123
    6. ']' → logprob: -7.703803539276123
    7. '])
' → logprob: -8.078804016113281
    8. ')
' → logprob: -8.453804016113281
    9. '   ' → logprob: -8.453804016113281
    10. '2' → logprob: -9.453804016113281

Token 323: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016095489263534546
    2. '2' → logprob: -4.1410956382751465
    3. '0' → logprob: -9.766095161437988
    4. ' ' → logprob: -13.391095161437988
    5. '3' → logprob: -13.891095161437988
    6. '   ' → logprob: -13.891095161437988
    7. '])' → logprob: -15.391095161437988
    8. '-' → logprob: -16.141096115112305
    9. 'x' → logprob: -16.516096115112305
    10. '[' → logprob: -16.766096115112305

Token 324: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04868695139884949
    2. ')' → logprob: -3.048686981201172
    3. ')
' → logprob: -9.798686981201172
    4. '   ' → logprob: -10.173686981201172
    5. ' )
' → logprob: -12.298686981201172
    6. ')

' → logprob: -14.673686981201172
    7. '       ' → logprob: -15.798686981201172
    8. ',' → logprob: -15.923686981201172
    9. ' ' → logprob: -16.048686981201172
    10. ')`
' → logprob: -16.048686981201172

Token 325: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2482774406671524
    2. 'count' → logprob: -2.873277425765991
    3. '	count' → logprob: -3.123277425765991
    4. '       ' → logprob: -3.373277425765991
    5. '```' → logprob: -3.373277425765991
    6. '<|end|>' → logprob: -3.498277425765991
    7. ' count' → logprob: -4.87327766418457
    8. '``' → logprob: -6.37327766418457
    9. '    
' → logprob: -6.37327766418457
    10. '  
' → logprob: -7.12327766418457

Token 326: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0010979531798511744
    2. 'result' → logprob: -7.876098155975342
    3. 'count' → logprob: -8.126097679138184
    4. 'un' → logprob: -8.251097679138184
    5. 'res' → logprob: -9.501097679138184
    6. ' print' → logprob: -10.376097679138184
    7. 'r' → logprob: -10.751097679138184
    8. '   ' → logprob: -11.251097679138184
    9. 'answer' → logprob: -11.876097679138184
    10. '```' → logprob: -12.251097679138184

Token 327: ' not' (ID: 625)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7016130089759827
    2. 'not' → logprob: -1.826612949371338
    3. 'len' → logprob: -2.076612949371338
    4. 'leaders' → logprob: -2.326612949371338
    5. ' not' → logprob: -2.451612949371338
    6. ' count' → logprob: -4.326612949371338
    7. ' leaders' → logprob: -4.701612949371338
    8. ' len' → logprob: -5.076612949371338
    9. 'le' → logprob: -6.451612949371338
    10. 'x' → logprob: -6.826612949371338

Token 328: ' leaders' (ID: 13998)
  Prédit: 'leaders'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leaders' → logprob: -0.03366011008620262
    2. ' leaders' → logprob: -3.4086601734161377
    3. 'scores' → logprob: -12.033659934997559
    4. 'le' → logprob: -12.158659934997559
    5. 'leader' → logprob: -13.658659934997559
    6. '   ' → logprob: -14.658659934997559
    7. ' scores' → logprob: -15.033659934997559
    8. '```' → logprob: -15.408659934997559
    9. 'Le' → logprob: -15.533659934997559
    10. ' ' → logprob: -15.783659934997559

Token 329: '_scores' (ID: 63345)
  Prédit: '_set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.25195828080177307
    2. '_scores' → logprob: -1.5019582509994507
    3. 'scores' → logprob: -11.251957893371582
    4. '_sets' → logprob: -12.126957893371582
    5. 'set' → logprob: -12.126957893371582
    6. '_' → logprob: -12.751957893371582
    7. '_le' → logprob: -13.501957893371582
    8. 's' → logprob: -14.751957893371582
    9. ':' → logprob: -15.876957893371582
    10. '```' → logprob: -16.1269588470459

Token 330: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2710758149623871
    2. ':
' → logprob: -1.6460758447647095
    3. ' or' → logprob: -3.14607572555542
    4. 'or' → logprob: -7.39607572555542
    5. '   ' → logprob: -7.77107572555542
    6. ':return' → logprob: -8.021076202392578
    7. '           ' → logprob: -9.021076202392578
    8. '       ' → logprob: -9.271076202392578
    9. '	or' → logprob: -11.521076202392578
    10. '==' → logprob: -12.021076202392578

Token 331: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9818302989006042
    2. '           ' → logprob: -1.106830358505249
    3. '   ' → logprob: -2.106830358505249
    4. 'print' → logprob: -2.481830358505249
    5. '
' → logprob: -2.856830358505249
    6. ' print' → logprob: -3.606830358505249
    7. '```' → logprob: -5.85683012008667
    8. '<|end|>' → logprob: -7.23183012008667
    9. '    
' → logprob: -7.60683012008667
    10. '        
' → logprob: -8.481830596923828

Token 332: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012441592989489436
    2. ' print' → logprob: -6.751244068145752
    3. '
' → logprob: -9.62624454498291
    4. '   ' → logprob: -12.62624454498291
    5. '```' → logprob: -12.87624454498291
    6. '       ' → logprob: -13.62624454498291
    7. '	print' → logprob: -15.50124454498291
    8. '``' → logprob: -15.62624454498291
    9. '        
' → logprob: -15.87624454498291
    10. '           ' → logprob: -16.001243591308594

Token 333: ' No' (ID: 3004)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009213464800268412
    2. ' print' → logprob: -7.000921249389648
    3. '           ' → logprob: -11.875921249389648
    4. '```' → logprob: -13.500921249389648
    5. '       ' → logprob: -14.375921249389648
    6. '
' → logprob: -14.750921249389648
    7. '   ' → logprob: -15.375921249389648
    8. '#' → logprob: -16.37592124938965
    9. '               ' → logprob: -17.12592124938965
    10. 'for' → logprob: -17.50092124938965

Token 334: ' leaders' (ID: 13998)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2160269021987915
    2. 'leaders' → logprob: -2.341026782989502
    3. ' print' → logprob: -2.716026782989502
    4. ' leaders' → logprob: -3.591026782989502
    5. 'output' → logprob: -6.216026782989502
    6. ' output' → logprob: -6.841026782989502
    7. ' for' → logprob: -8.21602725982666
    8. '           ' → logprob: -8.59102725982666
    9. 'leader' → logprob: -8.71602725982666
    10. 'le' → logprob: -8.84102725982666

Token 335: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13504014909267426
    2. ',' → logprob: -3.010040044784546
    3. '       ' → logprob: -3.260040044784546
    4. '
' → logprob: -3.635040044784546
    5. 'print' → logprob: -5.010040283203125
    6. ':
' → logprob: -6.260040283203125
    7. ' print' → logprob: -6.635040283203125
    8. '   ' → logprob: -7.135040283203125
    9. ':' → logprob: -7.635040283203125
    10. '               ' → logprob: -7.885040283203125

Token 336: ' unreachable' (ID: 171303)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2522555887699127
    2. ' print' → logprob: -1.5022555589675903
    3. '           ' → logprob: -8.6272554397583
    4. '       ' → logprob: -9.1272554397583
    5. '   ' → logprob: -11.0022554397583
    6. '
' → logprob: -11.8772554397583
    7. '```' → logprob: -12.0022554397583
    8. '	print' → logprob: -12.6272554397583
    9. '               ' → logprob: -12.7522554397583
    10. '            
' → logprob: -14.7522554397583

Token 337: ' =' (ID: 314)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07926968485116959
    2. '           ' → logprob: -2.9542696475982666
    3. ' print' → logprob: -4.079269886016846
    4. '       ' → logprob: -5.954269886016846
    5. '
' → logprob: -6.204269886016846
    6. ',' → logprob: -7.079269886016846
    7. '=' → logprob: -7.579269886016846
    8. ' =' → logprob: -7.829269886016846
    9. ':' → logprob: -8.329269409179688
    10. '```' → logprob: -8.704269409179688

Token 338: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.003178544342517853
    2. ' N' → logprob: -5.753178596496582
    3. 'n' → logprob: -15.503178596496582
    4. '0' → logprob: -16.253177642822266
    5. '   ' → logprob: -16.253177642822266
    6. 'str' → logprob: -16.253177642822266
    7. 'len' → logprob: -16.253177642822266
    8. '`' → logprob: -16.878177642822266
    9. '	N' → logprob: -16.878177642822266
    10. '\n' → logprob: -17.503177642822266

Token 339: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04505133256316185
    2. '       ' → logprob: -3.670051336288452
    3. 'print' → logprob: -4.170051097869873
    4. '```' → logprob: -6.920051097869873
    5. ',' → logprob: -7.045051097869873
    6. '   ' → logprob: -7.670051097869873
    7. ' print' → logprob: -7.670051097869873
    8. '
' → logprob: -8.545051574707031
    9. '               ' → logprob: -10.045051574707031
    10. '\n' → logprob: -11.295051574707031

Token 340: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.055855993181467056
    2. 'print' → logprob: -2.9308559894561768
    3. ' print' → logprob: -7.805856227874756
    4. '       ' → logprob: -8.180855751037598
    5. '```' → logprob: -8.555855751037598
    6. '   ' → logprob: -9.930855751037598
    7. '               ' → logprob: -10.805855751037598
    8. 'continue' → logprob: -11.930855751037598
    9. '<|end|>' → logprob: -12.305855751037598
    10. 'count' → logprob: -12.930855751037598

Token 341: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.0802738870552275e-05
    2. ' print' → logprob: -12.12501049041748
    3. '```' → logprob: -12.37501049041748
    4. '
' → logprob: -14.00001049041748
    5. '           ' → logprob: -15.12501049041748
    6. '       ' → logprob: -17.125011444091797
    7. '``' → logprob: -17.375011444091797
    8. '            
' → logprob: -18.250011444091797
    9. '   ' → logprob: -19.375011444091797
    10. '	print' → logprob: -20.125011444091797

Token 342: '("' (ID: 568)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.004762853495776653
    2. 'N' → logprob: -5.754762649536133
    3. '(' → logprob: -6.504762649536133
    4. '0' → logprob: -9.504762649536133
    5. ' N' → logprob: -11.879762649536133
    6. '(n' → logprob: -12.629762649536133
    7. ' (' → logprob: -13.254762649536133
    8. '(
' → logprob: -15.504762649536133
    9. '(len' → logprob: -15.629762649536133
    10. '()' → logprob: -16.254762649536133

Token 343: '0' (ID: 15)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.322713702917099
    2. 'N' → logprob: -2.322713613510132
    3. '"' → logprob: -2.447713613510132
    4. '{' → logprob: -3.072713613510132
    5. '{}".' → logprob: -3.697713613510132
    6. '0' → logprob: -4.947713851928711
    7. '"+' → logprob: -5.072713851928711
    8. '%d' → logprob: -5.572713851928711
    9. '"N' → logprob: -6.322713851928711
    10. '{}' → logprob: -7.322713851928711

Token 344: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.004526485223323107
    2. ')' → logprob: -6.379526615142822
    3. '\n' → logprob: -6.754526615142822
    4. '"' → logprob: -7.129526615142822
    5. '0' → logprob: -7.754526615142822
    6. '")
' → logprob: -8.379526138305664
    7. ' ")' → logprob: -9.254526138305664
    8. 'N' → logprob: -10.504526138305664
    9. '
' → logprob: -10.879526138305664
    10. '000' → logprob: -11.629526138305664

Token 345: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008668818511068821
    2. ' )' → logprob: -4.883668899536133
    3. ')
' → logprob: -6.883668899536133
    4. ' )
' → logprob: -10.758668899536133
    5. ',' → logprob: -13.133668899536133
    6. '))' → logprob: -13.133668899536133
    7. '       ' → logprob: -13.258668899536133
    8. '   ' → logprob: -13.258668899536133
    9. '           ' → logprob: -13.383668899536133
    10. ')
' → logprob: -14.133668899536133

Token 346: ' x' (ID: 1215)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.0346791744232178
    2. 'x' → logprob: -1.0346791744232178
    3. 'count' → logprob: -1.5346791744232178
    4. 'len' → logprob: -3.6596791744232178
    5. 'False' → logprob: -4.284679412841797
    6. 'leaders' → logprob: -4.784679412841797
    7. '0' → logprob: -5.284679412841797
    8. ' count' → logprob: -5.409679412841797
    9. ' x' → logprob: -5.534679412841797
    10. 'Q' → logprob: -5.659679412841797

Token 347: ' >=' (ID: 5064)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4492645561695099
    2. ' ==' → logprob: -1.3242645263671875
    3. '>=' → logprob: -3.0742645263671875
    4. ' >=' → logprob: -3.6992645263671875
    5. ' else' → logprob: -3.9492645263671875
    6. 'else' → logprob: -5.6992645263671875
    7. ' <' → logprob: -6.8242645263671875
    8. ')' → logprob: -7.6992645263671875
    9. '<' → logprob: -7.8242645263671875
    10. '>' → logprob: -8.699264526367188

Token 348: ' N' (ID: 478)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21624048054218292
    2. 'N' → logprob: -2.091240406036377
    3. 'scores' → logprob: -3.091240406036377
    4. 'max' → logprob: -3.966240406036377
    5. '100' → logprob: -5.841240406036377
    6. ' ' → logprob: -6.841240406036377
    7. 'leaders' → logprob: -7.216240406036377
    8. '1' → logprob: -7.466240406036377
    9. ' N' → logprob: -7.966240406036377
    10. '10' → logprob: -7.966240406036377

Token 349: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2014150768518448
    2. 'else' → logprob: -1.7014150619506836
    3. '       ' → logprob: -13.701415061950684
    4. '   ' → logprob: -15.076415061950684
    5. '           ' → logprob: -15.201415061950684
    6. '        ' → logprob: -16.701416015625
    7. '     ' → logprob: -17.201416015625
    8. '	else' → logprob: -17.701416015625
    9. ' ' → logprob: -17.951416015625
    10. '    ' → logprob: -18.451416015625

Token 350: ' "' (ID: 392)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.09099381417036057
    2. 'str' → logprob: -2.465993881225586
    3. 'f' → logprob: -6.965993881225586
    4. ' str' → logprob: -7.465993881225586
    5. ' N' → logprob: -8.215993881225586
    6. 'x' → logprob: -8.590993881225586
    7. '"N' → logprob: -10.465993881225586
    8. '0' → logprob: -11.090993881225586
    9. '"' → logprob: -11.465993881225586
    10. '(str' → logprob: -11.715993881225586

Token 351: 'NA' (ID: 9555)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01341985259205103
    2. '{' → logprob: -4.6384196281433105
    3. '0' → logprob: -6.5134196281433105
    4. 'un' → logprob: -7.3884196281433105
    5. '"' → logprob: -7.5134196281433105
    6. '{}".' → logprob: -8.138420104980469
    7. '"N' → logprob: -8.513420104980469
    8. 'str' → logprob: -8.638420104980469
    9. '{}' → logprob: -9.013420104980469
    10. '"+' → logprob: -9.638420104980469

Token 352: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.006440264638513327
    2. ')' → logprob: -5.256440162658691
    3. ')")' → logprob: -7.006440162658691
    4. '")
' → logprob: -8.381440162658691
    5. ')")
' → logprob: -11.131440162658691
    6. '0' → logprob: -11.131440162658691
    7. '"' → logprob: -11.381440162658691
    8. ' ")' → logprob: -11.506440162658691
    9. '}")' → logprob: -12.006440162658691
    10. '\n' → logprob: -12.631440162658691

Token 353: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04566569998860359
    2. '<|end|>' → logprob: -3.670665740966797
    3. 'else' → logprob: -4.795665740966797
    4. ' else' → logprob: -5.045665740966797
    5. '   ' → logprob: -6.420665740966797
    6. '           ' → logprob: -6.795665740966797
    7. ')' → logprob: -7.170665740966797
    8. 'elif' → logprob: -8.670665740966797
    9. '<|end|>' → logprob: -8.670665740966797
    10. '
' → logprob: -8.920665740966797

Token 354: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06760308146476746
    2. '           ' → logprob: -2.94260311126709
    3. 'else' → logprob: -4.94260311126709
    4. 'continue' (adapté à ' continue') → logprob: -5.56760311126709
    5. ' else' → logprob: -7.31760311126709
    6. ' continue' → logprob: -7.44260311126709
    7. '   ' → logprob: -8.31760311126709
    8. '
' → logprob: -9.31760311126709
    9. 'elif' → logprob: -10.06760311126709
    10. '```' → logprob: -10.94260311126709

Token 355: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12761183083057404
    2. '   ' → logprob: -2.5026118755340576
    3. '
' → logprob: -3.3776118755340576
    4. '    
' → logprob: -6.6276116371154785
    5. '        
' → logprob: -6.7526116371154785
    6. 'if' → logprob: -7.7526116371154785
    7. '  
' → logprob: -7.8776116371154785
    8. ' if' → logprob: -8.502612113952637
    9. '<|end|>' → logprob: -9.252612113952637
    10. '```' → logprob: -9.877612113952637

Token 356: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6295433640480042
    2. 'count' → logprob: -0.8795433640480042
    3. 'un' → logprob: -3.5045433044433594
    4. 'r' → logprob: -5.004543304443359
    5. 'cnt' → logprob: -5.004543304443359
    6. 'reachable' → logprob: -5.879543304443359
    7. '```' → logprob: -6.629543304443359
    8. ' count' → logprob: -6.754543304443359
    9. 'if' → logprob: -7.379543304443359
    10. 'score' → logprob: -7.504543304443359

Token 357: ' #' (ID: 1069)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -1.0885926485061646
    2. 'res' → logprob: -1.4635926485061646
    3. 'r' → logprob: -1.7135926485061646
    4. 'cnt' → logprob: -2.213592529296875
    5. 'count' → logprob: -2.463592529296875
    6. 'ans' → logprob: -3.588592529296875
    7. 'result' → logprob: -4.713592529296875
    8. 'val' → logprob: -4.963592529296875
    9. 'reachable' → logprob: -5.713592529296875
    10. 'print' → logprob: -5.713592529296875

Token 358: ' Binary' (ID: 32672)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.661963701248169
    2. 'res' → logprob: -1.661963701248169
    3. 'cnt' → logprob: -1.911963701248169
    4. 'print' → logprob: -2.911963701248169
    5. 'count' → logprob: -3.161963701248169
    6. 'ans' → logprob: -3.661963701248169
    7. 'result' → logprob: -4.53696346282959
    8. 'reachable' → logprob: -5.66196346282959
    9. 'val' → logprob: -6.03696346282959
    10. 'r' → logprob: -6.53696346282959

Token 359: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.009847577661275864
    2. ' search' → logprob: -4.884847640991211
    3. '_search' → logprob: -6.134847640991211
    4. '       ' → logprob: -10.509847640991211
    5. '   ' → logprob: -11.009847640991211
    6. ' =' → logprob: -12.259847640991211
    7. '=' → logprob: -12.509847640991211
    8. '-search' → logprob: -12.634847640991211
    9. 'else' → logprob: -12.884847640991211
    10. '```' → logprob: -13.009847640991211

Token 360: ' on' (ID: 402)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -1.183097004890442
    2. 'left' → logprob: -1.183097004890442
    3. 'low' → logprob: -1.683097004890442
    4. ' low' → logprob: -1.933097004890442
    5. ' lo' → logprob: -4.308096885681152
    6. '   ' → logprob: -4.433096885681152
    7. '       ' → logprob: -4.808096885681152
    8. 'l' → logprob: -5.183096885681152
    9. ' l' → logprob: -5.433096885681152
    10. 'idx' → logprob: -5.933096885681152

Token 361: ' r' (ID: 428)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09263584017753601
    2. 'r' → logprob: -2.9676358699798584
    3. 'leaders' → logprob: -3.7176358699798584
    4. 'x' → logprob: -5.342635631561279
    5. 'scores' → logprob: -5.842635631561279
    6. 'le' → logprob: -6.592635631561279
    7. ' ' → logprob: -7.467635631561279
    8. 'low' → logprob: -7.592635631561279
    9. '1' → logprob: -7.842635631561279
    10. 'N' → logprob: -7.842635631561279

Token 362: ':' (ID: 25)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.7619645595550537
    2. 'left' → logprob: -1.5119645595550537
    3. 'l' → logprob: -2.2619645595550537
    4. ' low' → logprob: -2.5119645595550537
    5. ' left' → logprob: -2.7619645595550537
    6. ' l' → logprob: -3.0119645595550537
    7. '0' → logprob: -5.636964797973633
    8. 'lo' → logprob: -6.011964797973633
    9. 'r' → logprob: -6.511964797973633
    10. ',' → logprob: -6.636964797973633

Token 363: ' ' (ID: 220)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.2348673790693283
    2. 'left' → logprob: -1.9848673343658447
    3. ' low' → logprob: -2.9848673343658447
    4. ' left' → logprob: -3.9848673343658447
    5. 'l' → logprob: -6.859867572784424
    6. 'lo' → logprob: -7.359867572784424
    7. ' lo' → logprob: -7.609867572784424
    8. '```' → logprob: -8.234867095947266
    9. 'r' → logprob: -8.609867095947266
    10. ' l' → logprob: -8.984867095947266

Token 364: '0' (ID: 15)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.5186423659324646
    2. 'left' → logprob: -1.0186424255371094
    3. 'l' → logprob: -3.8936424255371094
    4. ' left' → logprob: -4.268642425537109
    5. ' low' → logprob: -4.893642425537109
    6. 'lo' → logprob: -6.768642425537109
    7. ' l' → logprob: -7.768642425537109
    8. ' lo' → logprob: -9.39364242553711
    9. '```' → logprob: -10.26864242553711
    10. '       ' → logprob: -11.51864242553711

Token 365: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008930085226893425
    2. ' ,' → logprob: -4.758930206298828
    3. ' <=' → logprob: -9.258930206298828
    4. ' ' → logprob: -9.633930206298828
    5. '<=' → logprob: -9.758930206298828
    6. ',
' → logprob: -10.508930206298828
    7. ',N' → logprob: -11.008930206298828
    8. ',r' → logprob: -11.383930206298828
    9. '..' → logprob: -11.758930206298828
    10. '=' → logprob: -12.133930206298828

Token 366: ' max' (ID: 2999)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.29905667901039124
    2. 'N' → logprob: -2.2990567684173584
    3. ' ' → logprob: -2.2990567684173584
    4. ' N' → logprob: -3.5490567684173584
    5. '100' → logprob: -4.549056529998779
    6. 'scores' → logprob: -4.549056529998779
    7. 'max' → logprob: -5.799056529998779
    8. ' max' → logprob: -6.049056529998779
    9. ' scores' → logprob: -6.549056529998779
    10. 'int' → logprob: -7.049056529998779

Token 367: '_possible' (ID: 185849)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.9077860116958618
    2. '(scores' → logprob: -0.9077860116958618
    3. '_score' → logprob: -2.4077858924865723
    4. '_scores' → logprob: -3.4077858924865723
    5. '_r' → logprob: -3.5327858924865723
    6. ' scores' → logprob: -4.657785892486572
    7. '(' → logprob: -4.907785892486572
    8. '_range' → logprob: -4.907785892486572
    9. 'r' → logprob: -5.282785892486572
    10. '_' → logprob: -5.782785892486572

Token 368: '
' (ID: 198)
  Prédit: '_r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_r' → logprob: -1.078473687171936
    2. ' =' → logprob: -1.203473687171936
    3. '_score' → logprob: -1.203473687171936
    4. 'r' → logprob: -4.2034735679626465
    5. '=' → logprob: -4.4534735679626465
    6. '_' → logprob: -5.0784735679626465
    7. '_range' → logprob: -5.2034735679626465
    8. ' ' → logprob: -5.5784735679626465
    9. '_scores' → logprob: -5.5784735679626465
    10. '_value' → logprob: -5.8284735679626465

Token 369: '       ' (ID: 309)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.6539586782455444
    2. 'left' → logprob: -2.028958797454834
    3. ' low' → logprob: -2.153958797454834
    4. '0' → logprob: -2.653958797454834
    5. ' left' → logprob: -2.903958797454834
    6. 'max' → logprob: -3.653958797454834
    7. ' l' → logprob: -3.778958797454834
    8. 'l' → logprob: -3.903958797454834
    9. ' lo' → logprob: -4.403958797454834
    10. ',' → logprob: -4.653958797454834

Token 370: ' #' (ID: 1069)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.9163497686386108
    2. '0' → logprob: -1.4163497686386108
    3. ' low' → logprob: -2.1663498878479004
    4. 'left' → logprob: -2.1663498878479004
    5. 'max' → logprob: -2.7913498878479004
    6. ' left' → logprob: -3.1663498878479004
    7. ' max' → logprob: -4.6663498878479
    8. 'l' → logprob: -5.1663498878479
    9. ' l' → logprob: -5.1663498878479
    10. ' lo' → logprob: -6.2913498878479

Token 371: ' max' (ID: 2999)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.8166360855102539
    2. 'left' → logprob: -1.066636085510254
    3. 'max' → logprob: -2.316636085510254
    4. ' left' → logprob: -2.691636085510254
    5. ' low' → logprob: -3.316636085510254
    6. 'l' → logprob: -5.191636085510254
    7. ' max' → logprob: -5.691636085510254
    8. ' l' → logprob: -6.566636085510254
    9. 'lo' → logprob: -7.816636085510254
    10. ' lo' → logprob: -8.191636085510254

Token 372: '_possible' (ID: 185849)
  Prédit: '_score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.3878551721572876
    2. '_r' → logprob: -1.1378551721572876
    3. '_possible' → logprob: -7.887855052947998
    4. '_val' → logprob: -8.637855529785156
    5. 'R' → logprob: -8.762855529785156
    6. 'r' → logprob: -9.387855529785156
    7. '_diff' → logprob: -10.012855529785156
    8. '_range' → logprob: -10.137855529785156
    9. 'score' → logprob: -10.637855529785156
    10. '_sc' → logprob: -10.637855529785156

Token 373: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04862767457962036
    2. '=' → logprob: -3.0486276149749756
    3. '=max' → logprob: -10.298627853393555
    4. '_score' → logprob: -13.298627853393555
    5. ' scores' → logprob: -13.423627853393555
    6. 'scores' → logprob: -13.798627853393555
    7. '_scores' → logprob: -14.673627853393555
    8. ',' → logprob: -15.298627853393555
    9. 'score' → logprob: -15.298627853393555
    10. ' ' → logprob: -15.423627853393555

Token 374: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4742649793624878
    2. '10' → logprob: -0.9742649793624878
    3. 'int' → logprob: -8.849265098571777
    4. '100' → logprob: -10.474265098571777
    5. ' max' → logprob: -11.724265098571777
    6. 'scores' → logprob: -12.349265098571777
    7. '(max' → logprob: -13.099265098571777
    8. ' ' → logprob: -14.474265098571777
    9. '(' → logprob: -14.599265098571777
    10. '2' → logprob: -15.849265098571777

Token 375: ' score' (ID: 8429)
  Prédit: '(scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(scores' → logprob: -0.2257811576128006
    2. 'scores' → logprob: -1.6007812023162842
    3. '_scores' → logprob: -8.975781440734863
    4. ' scores' → logprob: -9.350781440734863
    5. 'score' → logprob: -9.725781440734863
    6. '_score' → logprob: -10.225781440734863
    7. '(' → logprob: -11.100781440734863
    8. 's' → logprob: -11.475781440734863
    9. '(score' → logprob: -11.475781440734863
    10. '(max' → logprob: -11.975781440734863

Token 376: ' -' (ID: 533)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.7847961783409119
    2. '(scores' → logprob: -0.9097961783409119
    3. ' -' → logprob: -3.5347962379455566
    4. ' =' → logprob: -3.6597962379455566
    5. ')' → logprob: -3.7847962379455566
    6. ' scores' → logprob: -4.409796237945557
    7. 's' → logprob: -4.659796237945557
    8. ' +' → logprob: -4.784796237945557
    9. '(max' → logprob: -5.034796237945557
    10. '_scores' → logprob: -5.159796237945557

Token 377: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.12511005997657776
    2. 'max' → logprob: -2.375110149383545
    3. ' min' → logprob: -4.000110149383545
    4. 'scores' → logprob: -5.750110149383545
    5. ' max' → logprob: -6.125110149383545
    6. '0' → logprob: -7.375110149383545
    7. ' scores' → logprob: -9.375109672546387
    8. 'leaders' → logprob: -9.875109672546387
    9. '1' → logprob: -10.000109672546387
    10. '```' → logprob: -10.625109672546387

Token 378: ' score' (ID: 8429)
  Prédit: '(scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(scores' → logprob: -0.5526096224784851
    2. 'scores' → logprob: -0.9276096224784851
    3. '_score' → logprob: -4.427609443664551
    4. ' scores' → logprob: -5.052609443664551
    5. '_scores' → logprob: -5.177609443664551
    6. 'score' → logprob: -5.927609443664551
    7. '_' → logprob: -6.302609443664551
    8. '(' → logprob: -8.92760944366455
    9. 's' → logprob: -9.05260944366455
    10. ')' → logprob: -9.17760944366455

Token 379: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6088299751281738
    2. 'max' → logprob: -0.9838299751281738
    3. ' max' → logprob: -3.483829975128174
    4. ' =' → logprob: -3.733829975128174
    5. '=' → logprob: -5.483829975128174
    6. '```' → logprob: -5.483829975128174
    7. '0' → logprob: -5.608829975128174
    8. '(max' → logprob: -5.608829975128174
    9. '   ' → logprob: -5.733829975128174
    10. ',' → logprob: -5.983829975128174

Token 380: '       ' (ID: 309)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5851749181747437
    2. 'max' → logprob: -1.2101749181747437
    3. 'low' → logprob: -3.210175037384033
    4. ' low' → logprob: -3.335175037384033
    5. '   ' → logprob: -3.710175037384033
    6. ' left' → logprob: -4.335175037384033
    7. '       ' → logprob: -5.085175037384033
    8. 'left' → logprob: -5.085175037384033
    9. ',' → logprob: -5.710175037384033
    10. '```' → logprob: -5.710175037384033

Token 381: ' left' (ID: 3561)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.051908135414123535
    2. 'low' → logprob: -3.551908016204834
    3. 'left' (adapté à ' left') → logprob: -4.176908016204834
    4. ' max' → logprob: -5.551908016204834
    5. 'lo' → logprob: -7.426908016204834
    6. ' low' → logprob: -7.801908016204834
    7. '```' → logprob: -7.801908016204834
    8. ' left' → logprob: -7.926908016204834
    9. 'l' → logprob: -8.176908493041992
    10. '   ' → logprob: -8.301908493041992

Token 382: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5133142471313477
    2. ' =' → logprob: -1.0133142471313477
    3. ',' → logprob: -3.2633142471313477
    4. ' ,' → logprob: -8.513314247131348
    5. ' ' → logprob: -11.638314247131348
    6. '0' → logprob: -12.263314247131348
    7. ',
' → logprob: -14.888314247131348
    8. '<|end|>' → logprob: -15.138314247131348
    9. '```' → logprob: -15.513314247131348
    10. '=
' → logprob: -15.638314247131348

Token 383: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.584861744660884e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.500045776367188
    4. '-' → logprob: -16.125045776367188
    5. '```' → logprob: -16.937545776367188
    6. '=' → logprob: -17.937545776367188
    7. '۰' → logprob: -18.187545776367188
    8. '(' → logprob: -18.250045776367188
    9. ' ' → logprob: -18.375045776367188
    10. ' -' → logprob: -18.375045776367188

Token 384: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '-' → logprob: -16.125011444091797
    4. '   ' → logprob: -18.375011444091797
    5. '00' → logprob: -18.625011444091797
    6. '000' → logprob: -18.812511444091797
    7. '۰' → logprob: -19.062511444091797
    8. ' -' → logprob: -19.250011444091797
    9. ' ' → logprob: -19.250011444091797
    10. '(' → logprob: -19.250011444091797

Token 385: '
' (ID: 198)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.7440658211708069
    2. '
' → logprob: -1.119065761566162
    3. ' right' → logprob: -2.244065761566162
    4. ',' → logprob: -3.119065761566162
    5. '<|end|>' → logprob: -4.369065761566162
    6. ' 
' → logprob: -4.494065761566162
    7. ',right' → logprob: -4.494065761566162
    8. 'max' → logprob: -5.494065761566162
    9. '[right' → logprob: -5.744065761566162
    10. ' max' → logprob: -6.994065761566162

Token 386: '       ' (ID: 309)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.015445280820131302
    2. ' right' → logprob: -4.890445232391357
    3. '
' → logprob: -5.265445232391357
    4. 'max' → logprob: -6.515445232391357
    5. ',' → logprob: -7.390445232391357
    6. ' 
' → logprob: -8.515445709228516
    7. ',right' → logprob: -8.515445709228516
    8. '```' → logprob: -10.515445709228516
    9. ' ,' → logprob: -10.640445709228516
    10. ' max' → logprob: -11.015445709228516

Token 387: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.4962269067764282
    2. ' right' → logprob: -0.9962269067764282
    3. 'max' → logprob: -4.246226787567139
    4. ' max' → logprob: -4.996226787567139
    5. 'scores' → logprob: -7.871226787567139
    6. '   ' → logprob: -8.621227264404297
    7. '100' → logprob: -9.371227264404297
    8. ' ' → logprob: -9.746227264404297
    9. ' scores' → logprob: -9.871227264404297
    10. '10' → logprob: -10.496227264404297

Token 388: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07896282523870468
    2. '=' → logprob: -2.578962802886963
    3. '=max' → logprob: -9.578963279724121
    4. ' scores' → logprob: -13.328963279724121
    5. 'scores' → logprob: -13.578963279724121
    6. 'max' → logprob: -14.203963279724121
    7. ' max' → logprob: -16.078962326049805
    8. ' ' → logprob: -16.578962326049805
    9. '(scores' → logprob: -16.703962326049805
    10. '_scores' → logprob: -17.203962326049805

Token 389: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.08928981423377991
    2. '10' → logprob: -2.589289903640747
    3. ' max' → logprob: -4.839289665222168
    4. 'scores' → logprob: -6.089289665222168
    5. ' ' → logprob: -9.839289665222168
    6. '100' → logprob: -9.839289665222168
    7. '(max' → logprob: -10.339289665222168
    8. 'int' → logprob: -11.339289665222168
    9. ' scores' → logprob: -11.464289665222168
    10. '=max' → logprob: -13.339289665222168

Token 390: '10' (ID: 702)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.06211176514625549
    2. '10' → logprob: -2.8121118545532227
    3. 'scores' → logprob: -9.312111854553223
    4. 'int' → logprob: -11.062111854553223
    5. '(max' → logprob: -11.312111854553223
    6. ' max' → logprob: -11.312111854553223
    7. '100' → logprob: -11.312111854553223
    8. '(' → logprob: -15.062111854553223
    9. '=max' → logprob: -15.437111854553223
    10. ' ' → logprob: -15.812111854553223

Token 391: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.2937432527542114
    2. '7' → logprob: -1.5437432527542114
    3. '6' → logprob: -3.293743133544922
    4. '8' → logprob: -6.168743133544922
    5. '**' → logprob: -6.418743133544922
    6. '5' → logprob: -9.293743133544922
    7. '000' → logprob: -11.043743133544922
    8. '10' → logprob: -12.918743133544922
    9. ' ' → logprob: -13.543743133544922
    10. ' **' → logprob: -14.418743133544922

Token 392: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.006579773500561714
    2. '10' → logprob: -5.381579875946045
    3. '15' → logprob: -6.506579875946045
    4. '18' → logprob: -8.881579399108887
    5. '12' → logprob: -9.256579399108887
    6. '14' → logprob: -9.756579399108887
    7. '7' → logprob: -9.881579399108887
    8. '11' → logprob: -10.006579399108887
    9. '6' → logprob: -10.381579399108887
    10. '8' → logprob: -10.756579399108887

Token 393: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34076541662216187
    2. '   ' → logprob: -1.5907654762268066
    3. '+' → logprob: -3.3407654762268066
    4. '<|end|>' → logprob: -4.340765476226807
    5. ' while' → logprob: -4.590765476226807
    6. 'while' → logprob: -5.090765476226807
    7. ' +' → logprob: -5.590765476226807
    8. '  
' → logprob: -5.715765476226807
    9. '    
' → logprob: -5.715765476226807
    10. ' 
' → logprob: -5.715765476226807

Token 394: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 395: ' ans' (ID: 3345)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.3528410494327545
    2. 'while' → logprob: -1.2278410196304321
    3. '   ' → logprob: -6.602840900421143
    4. '       ' → logprob: -6.727840900421143
    5. '	while' → logprob: -7.102840900421143
    6. '<|end|>' → logprob: -8.3528413772583
    7. ' 
' → logprob: -8.4778413772583
    8. '```' → logprob: -9.2278413772583
    9. ' mid' → logprob: -9.7278413772583
    10. ' ' → logprob: -9.8528413772583

Token 396: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033682931214571
    2. '=' → logprob: -3.4086828231811523
    3. ' ' → logprob: -10.283682823181152
    4. '_' → logprob: -14.158682823181152
    5. '    ' → logprob: -14.408682823181152
    6. '   ' → logprob: -15.158682823181152
    7. ',' → logprob: -15.283682823181152
    8. ' ' → logprob: -15.283682823181152
    9. ')' → logprob: -15.658682823181152
    10. '  ' → logprob: -15.658682823181152

Token 397: ' None' (ID: 4662)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3994944989681244
    2. '-' → logprob: -1.1494945287704468
    3. '10' → logprob: -4.524494647979736
    4. '0' → logprob: -6.899494647979736
    5. '-right' → logprob: -8.149494171142578
    6. ' right' → logprob: -8.524494171142578
    7. ' -' → logprob: -8.649494171142578
    8. 'None' → logprob: -11.274494171142578
    9. 'left' → logprob: -12.399494171142578
    10. 'N' → logprob: -12.524494171142578

Token 398: '
' (ID: 198)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.9299116134643555
    2. ' 
' → logprob: -1.1799116134643555
    3. '<|end|>' → logprob: -2.1799116134643555
    4. '
' → logprob: -2.6799116134643555
    5. 'while' → logprob: -2.9299116134643555
    6. '  
' → logprob: -3.8049116134643555
    7. '        
' → logprob: -4.8049116134643555
    8. '   ' → logprob: -5.0549116134643555
    9. '    
' → logprob: -5.1799116134643555
    10. '       ' → logprob: -5.3049116134643555

Token 399: '       ' (ID: 309)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.559136152267456
    2. ' 
' → logprob: -1.434136152267456
    3. '       ' → logprob: -3.184136152267456
    4. '<|end|>' → logprob: -3.184136152267456
    5. '   ' → logprob: -3.809136152267456
    6. '
' → logprob: -3.934136152267456
    7. '```' → logprob: -4.184136390686035
    8. 'while' → logprob: -4.309136390686035
    9. '	while' → logprob: -4.684136390686035
    10. '  
' → logprob: -4.684136390686035

Token 400: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.4310414791107178
    2. 'while' (adapté à ' while') → logprob: -1.0560414791107178
    3. '   ' → logprob: -6.431041717529297
    4. '
' → logprob: -8.431041717529297
    5. ' 
' → logprob: -8.431041717529297
    6. '	while' → logprob: -8.806041717529297
    7. '       ' → logprob: -9.681041717529297
    8. '  
' → logprob: -10.556041717529297
    9. '    
' → logprob: -11.056041717529297
    10. '```' → logprob: -11.681041717529297

Token 401: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.0009117019944824278
    2. 'left' → logprob: -7.000911712646484
    3. ' right' → logprob: -15.625911712646484
    4. ' lef' → logprob: -16.375911712646484
    5. '	left' → logprob: -17.750911712646484
    6. '(left' → logprob: -18.125911712646484
    7. 'right' → logprob: -19.250911712646484
    8. '_left' → logprob: -19.750911712646484
    9. '[left' → logprob: -21.875911712646484
    10. ' ' → logprob: -22.500911712646484

Token 402: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.08976469933986664
    2. '<=' → logprob: -2.4647645950317383
    3. ' <' → logprob: -7.464764595031738
    4. '<' → logprob: -9.089764595031738
    5. '+' → logprob: -9.214764595031738
    6. ' +' → logprob: -11.339764595031738
    7. ' ' → logprob: -11.964764595031738
    8. ' !=' → logprob: -12.089764595031738
    9. ')<=' → logprob: -12.589764595031738
    10. ' ≤' → logprob: -13.089764595031738

Token 403: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.005233882926404476
    2. ' right' → logprob: -5.2552337646484375
    3. '	right' → logprob: -15.755233764648438
    4. '[right' → logprob: -18.380233764648438
    5. '(right' → logprob: -18.755233764648438
    6. ' ' → logprob: -18.880233764648438
    7. '   ' → logprob: -19.380233764648438
    8. '```' → logprob: -19.505233764648438
    9. '_right' → logprob: -19.880233764648438
    10. ',right' → logprob: -20.755233764648438

Token 404: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3016655147075653
    2. ':
' → logprob: -1.4266655445098877
    3. '<|end|>' → logprob: -4.801665306091309
    4. '       ' → logprob: -5.426665306091309
    5. '<|end|>' → logprob: -6.301665306091309
    6. ' :' → logprob: -6.426665306091309
    7. '           ' → logprob: -7.176665306091309
    8. ' :
' → logprob: -7.176665306091309
    9. '):
' → logprob: -7.426665306091309
    10. ',' → logprob: -7.551665306091309

Token 405: '           ' (ID: 352)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.2628755569458008
    2. '           ' → logprob: -1.3878755569458008
    3. '<|end|>' → logprob: -1.5128755569458008
    4. ' mid' → logprob: -2.262875556945801
    5. '	       ' → logprob: -3.137875556945801
    6. ' ' → logprob: -3.887875556945801
    7. '<|end|>' → logprob: -4.262875556945801
    8. '  
' → logprob: -4.762875556945801
    9. '            
' → logprob: -5.012875556945801
    10. '
' → logprob: -5.387875556945801

Token 406: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.00033200893085449934
    2. 'mid' (adapté à ' mid') → logprob: -8.12533187866211
    3. ' midpoint' → logprob: -10.87533187866211
    4. ' m' → logprob: -11.62533187866211
    5. ' middle' → logprob: -12.25033187866211
    6. '_mid' → logprob: -13.75033187866211
    7. ' mids' → logprob: -13.87533187866211
    8. '[mid' → logprob: -14.00033187866211
    9. '(mid' → logprob: -16.12533187866211
    10. ' midway' → logprob: -16.50033187866211

Token 407: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020742278546094894
    2. '=' → logprob: -4.145742416381836
    3. '<|end|>' → logprob: -5.395742416381836
    4. ')' → logprob: -9.395742416381836
    5. '<|end|>' → logprob: -10.020742416381836
    6. ' ' → logprob: -11.145742416381836
    7. ']' → logprob: -12.770742416381836
    8. '=int' → logprob: -13.145742416381836
    9. '=end' → logprob: -13.520742416381836
    10. ' =)' → logprob: -14.020742416381836

Token 408: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6931717991828918
    2. '(left' → logprob: -0.6931717991828918
    3. ' left' → logprob: -11.068171501159668
    4. 'left' → logprob: -12.068171501159668
    5. '[left' → logprob: -12.818171501159668
    6. '(right' → logprob: -15.693171501159668
    7. '(mid' → logprob: -16.318172454833984
    8. ',left' → logprob: -16.318172454833984
    9. ' ' → logprob: -16.693172454833984
    10. '(lhs' → logprob: -17.443172454833984

Token 409: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.018150178715586662
    2. ' left' → logprob: -4.018150329589844
    3. ' lef' → logprob: -16.393150329589844
    4. 'right' → logprob: -16.518150329589844
    5. '(left' → logprob: -17.143150329589844
    6. '[left' → logprob: -17.768150329589844
    7. '	left' → logprob: -18.393150329589844
    8. '_left' → logprob: -18.643150329589844
    9. 'lef' → logprob: -18.643150329589844
    10. '.left' → logprob: -19.393150329589844

Token 410: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759403109550476
    2. ' +' → logprob: -0.8259403109550476
    3. '[left' → logprob: -14.950940132141113
    4. ')' → logprob: -15.950940132141113
    5. 'left' → logprob: -16.32594108581543
    6. ' ' → logprob: -16.32594108581543
    7. '[right' → logprob: -16.70094108581543
    8. '```' → logprob: -16.70094108581543
    9. '[' → logprob: -17.07594108581543
    10. ' +
' → logprob: -17.57594108581543

Token 411: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00033546582562848926
    2. ' right' → logprob: -8.000335693359375
    3. '(right' → logprob: -19.250335693359375
    4. '	right' → logprob: -20.125335693359375
    5. '[right' → logprob: -20.375335693359375
    6. ' ' → logprob: -22.000335693359375
    7. '.right' → logprob: -22.500335693359375
    8. '
' → logprob: -22.750335693359375
    9. '   ' → logprob: -23.000335693359375
    10. '           ' → logprob: -23.000335693359375

Token 412: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001530812936834991
    2. ')//' → logprob: -6.501530647277832
    3. ')>>' → logprob: -10.501530647277832
    4. ' )' → logprob: -13.876530647277832
    5. '）' → logprob: -18.87653160095215
    6. ')#' → logprob: -20.00153160095215
    7. ')
' → logprob: -20.12653160095215
    8. '//' → logprob: -20.62653160095215
    9. ']' → logprob: -20.75153160095215
    10. '```' → logprob: -20.87653160095215

Token 413: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2991841435432434
    2. ' //' → logprob: -1.4241840839385986
    3. ')//' → logprob: -5.174184322357178
    4. '//' → logprob: -5.424184322357178
    5. ' >>' → logprob: -5.674184322357178
    6. '>>' → logprob: -5.924184322357178
    7. ' )' → logprob: -6.924184322357178
    8. ')>>' → logprob: -7.549184322357178
    9. '```' → logprob: -9.54918384552002
    10. ' ' → logprob: -9.92418384552002

Token 414: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '۲' → logprob: -20.375059127807617
    4. '```' → logprob: -20.625059127807617
    5. '２' → logprob: -21.250059127807617
    6. '   ' → logprob: -21.625059127807617
    7. '
' → logprob: -21.750059127807617
    8. '२' → logprob: -22.375059127807617
    9. '٢' → logprob: -22.375059127807617
    10. '=' → logprob: -22.500059127807617

Token 415: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -21.125
    4. '```' → logprob: -21.625
    5. '۲' → logprob: -23.5
    6. '２' → logprob: -23.625
    7. '
' → logprob: -23.625
    8. '3' → logprob: -23.875
    9. '  ' → logprob: -24.125
    10. '२' → logprob: -24.625

Token 416: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10412559658288956
    2. '<|end|>' → logprob: -2.604125499725342
    3. ' if' → logprob: -4.479125499725342
    4. '            
' → logprob: -5.354125499725342
    5. '<|end|>' → logprob: -6.229125499725342
    6. '       ' → logprob: -6.354125499725342
    7. 'if' → logprob: -6.479125499725342
    8. '
' → logprob: -6.854125499725342
    9. '   ' → logprob: -8.1041259765625
    10. '```' → logprob: -8.1041259765625

Token 417: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.032015927135944366
    2. '<|end|>' → logprob: -3.6570160388946533
    3. ' if' → logprob: -5.907015800476074
    4. '       ' → logprob: -6.657015800476074
    5. '<|end|>' → logprob: -7.407015800476074
    6. '```' → logprob: -8.407015800476074
    7. '               ' → logprob: -8.407015800476074
    8. '            
' → logprob: -8.657015800476074
    9. '	       ' → logprob: -9.157015800476074
    10. 'if' → logprob: -9.782015800476074

Token 418: ' unreachable' (ID: 171303)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6900557279586792
    2. 'un' → logprob: -1.4400557279586792
    3. ' if' → logprob: -1.5650557279586792
    4. 'count' → logprob: -3.3150558471679688
    5. '           ' → logprob: -4.815055847167969
    6. ' count' → logprob: -6.065055847167969
    7. ' unreachable' → logprob: -6.065055847167969
    8. ' un' → logprob: -6.815055847167969
    9. 'cnt' → logprob: -6.940055847167969
    10. 'reachable' → logprob: -7.815055847167969

Token 419: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519984841346741
    2. '=' → logprob: -1.5019984245300293
    3. '_count' → logprob: -9.876998901367188
    4. '=count' → logprob: -11.626998901367188
    5. 'count' → logprob: -12.376998901367188
    6. 's' → logprob: -13.251998901367188
    7. '>' → logprob: -14.626998901367188
    8. '_tokens' → logprob: -14.751998901367188
    9. ')' → logprob: -14.751998901367188
    10. ' ' → logprob: -15.126998901367188

Token 420: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3868710398674011
    2. ' count' → logprob: -1.136871099472046
    3. '(count' → logprob: -18.761871337890625
    4. '	count' → logprob: -19.011871337890625
    5. ' ' → logprob: -20.136871337890625
    6. '.count' → logprob: -20.261871337890625
    7. '=count' → logprob: -20.386871337890625
    8. ' counts' → logprob: -20.511871337890625
    9. 'counts' → logprob: -20.636871337890625
    10. '           ' → logprob: -20.886871337890625

Token 421: '_un' (ID: 11119)
  Prédit: '_un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_un' → logprob: -1.4974866644479334e-05
    2. '_tokens' → logprob: -11.875015258789062
    3. 'un' → logprob: -12.875015258789062
    4. '_' → logprob: -13.000015258789062
    5. '_token' → logprob: -13.750015258789062
    6. '_UN' → logprob: -14.750015258789062
    7. '_unref' → logprob: -15.125015258789062
    8. '_uns' → logprob: -15.500015258789062
    9. '_unc' → logprob: -15.750015258789062
    10. '(' → logprob: -16.125015258789062

Token 422: 'reachable' (ID: 101900)
  Prédit: 'reachable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -6.611323624383658e-05
    2. 're' → logprob: -10.625065803527832
    3. 'r' → logprob: -11.250065803527832
    4. 'reach' → logprob: -11.375065803527832
    5. 'achable' → logprob: -11.875065803527832
    6. 'able' → logprob: -12.500065803527832
    7. 'count' → logprob: -13.500065803527832
    8. 'each' → logprob: -13.625065803527832
    9. ' reachable' → logprob: -13.750065803527832
    10. '```' → logprob: -14.000065803527832

Token 423: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -4.246537173457909e-06
    2. '(' → logprob: -12.500003814697266
    3. ' (' → logprob: -15.625003814697266
    4. '[mid' → logprob: -16.500003814697266
    5. '(m' → logprob: -16.875003814697266
    6. '(max' → logprob: -17.375003814697266
    7. '(min' → logprob: -18.250003814697266
    8. '(
' → logprob: -18.625003814697266
    9. '(mi' → logprob: -19.000003814697266
    10. '(next' → logprob: -19.875003814697266

Token 424: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2016180008649826
    2. ')
' → logprob: -1.701617956161499
    3. '           ' → logprob: -8.826618194580078
    4. ' )' → logprob: -10.826618194580078
    5. ' )
' → logprob: -10.951618194580078
    6. ')
' → logprob: -12.076618194580078
    7. ')

' → logprob: -13.076618194580078
    8. '<|end|>' → logprob: -13.076618194580078
    9. '       ' → logprob: -13.201618194580078
    10. '
' → logprob: -13.826618194580078

Token 425: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6544044017791748
    2. '<|end|>' → logprob: -0.9044044017791748
    3. '       ' → logprob: -4.029404640197754
    4. '```' → logprob: -4.029404640197754
    5. '            
' → logprob: -4.529404640197754
    6. '
' → logprob: -5.029404640197754
    7. ' if' → logprob: -5.029404640197754
    8. ')' → logprob: -5.529404640197754
    9. ' 
' → logprob: -5.779404640197754
    10. '<|end|>' → logprob: -6.029404640197754

Token 426: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14330627024173737
    2. '           ' → logprob: -2.143306255340576
    3. 'if' (adapté à ' if') → logprob: -4.143306255340576
    4. '<|end|>' → logprob: -8.518306732177734
    5. '       ' → logprob: -9.143306732177734
    6. '```' → logprob: -11.143306732177734
    7. ' 
' → logprob: -11.393306732177734
    8. '
' → logprob: -11.393306732177734
    9. '            
' → logprob: -12.018306732177734
    10. '   ' → logprob: -12.518306732177734

Token 427: ' unreachable' (ID: 171303)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.0036153970286250114
    2. ' unreachable' → logprob: -5.628615379333496
    3. '	un' → logprob: -12.003615379333496
    4. '(un' → logprob: -12.628615379333496
    5. '   ' → logprob: -12.878615379333496
    6. 'unable' → logprob: -14.378615379333496
    7. ' un' → logprob: -14.628615379333496
    8. ' unatt' → logprob: -15.128615379333496
    9. '       ' → logprob: -15.253615379333496
    10. ' ' → logprob: -15.503615379333496

Token 428: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.21178428828716278
    2. '<=' → logprob: -1.7117842435836792
    3. ' ==' → logprob: -5.211784362792969
    4. '==' → logprob: -5.336784362792969
    5. ' >=' → logprob: -10.711784362792969
    6. '>=' → logprob: -11.211784362792969
    7. '=' → logprob: -12.711784362792969
    8. '[' → logprob: -13.211784362792969
    9. ' >' → logprob: -13.211784362792969
    10. ')<=' → logprob: -13.211784362792969

Token 429: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00016027313540689647
    2. ' x' → logprob: -8.750160217285156
    3. '   ' → logprob: -13.625160217285156
    4. 'N' → logprob: -15.250160217285156
    5. '0' → logprob: -16.625160217285156
    6. ' ' → logprob: -16.750160217285156
    7. '
' → logprob: -17.000160217285156
    8. '	x' → logprob: -17.125160217285156
    9. 'mid' → logprob: -17.375160217285156
    10. '(x' → logprob: -17.750160217285156

Token 430: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2019653171300888
    2. ':' → logprob: -1.70196533203125
    3. '):
' → logprob: -7.95196533203125
    4. ':left' → logprob: -9.70196533203125
    5. '           ' → logprob: -9.82696533203125
    6. '       ' → logprob: -10.70196533203125
    7. ':right' → logprob: -11.07696533203125
    8. 'left' → logprob: -11.57696533203125
    9. ' :
' → logprob: -11.95196533203125
    10. '):' → logprob: -12.07696533203125

Token 431: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.563917875289917
    2. ' left' → logprob: -1.688917875289917
    3. '           ' → logprob: -1.813917875289917
    4. ' right' → logprob: -3.188917875289917
    5. 'right' → logprob: -4.188918113708496
    6. 'left' → logprob: -4.563918113708496
    7. ' 
' → logprob: -5.563918113708496
    8. '
' → logprob: -5.938918113708496
    9. '[left' → logprob: -6.313918113708496
    10. '            
' → logprob: -6.688918113708496

Token 432: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.011951349675655365
    2. ' right' → logprob: -5.136951446533203
    3. 'ans' (adapté à ' ans') → logprob: -5.511951446533203
    4. ' left' → logprob: -7.011951446533203
    5. 'right' → logprob: -7.386951446533203
    6. '           ' → logprob: -7.886951446533203
    7. '	ans' → logprob: -11.261951446533203
    8. '(ans' → logprob: -11.386951446533203
    9. 'left' → logprob: -11.511951446533203
    10. '
' → logprob: -11.761951446533203

Token 433: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14267855882644653
    2. '=' → logprob: -2.0176784992218018
    3. ')' → logprob: -13.392678260803223
    4. '<|end|>' → logprob: -14.142678260803223
    5. ' =
' → logprob: -15.392678260803223
    6. ' ' → logprob: -15.892678260803223
    7. 's' → logprob: -16.64267921447754
    8. '           ' → logprob: -16.76767921447754
    9. '=
' → logprob: -16.76767921447754
    10. ' is' → logprob: -17.14267921447754

Token 434: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.00861456897109747
    2. ' mid' → logprob: -4.758614540100098
    3. '   ' → logprob: -17.883615493774414
    4. 'right' → logprob: -18.008615493774414
    5. '[mid' → logprob: -18.383615493774414
    6. '           ' → logprob: -18.758615493774414
    7. '(mid' → logprob: -19.008615493774414
    8. ' ' → logprob: -19.008615493774414
    9. 'm' → logprob: -19.508615493774414
    10. 'middle' → logprob: -19.633615493774414

Token 435: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0959731861948967
    2. '               ' → logprob: -2.595973253250122
    3. '                
' → logprob: -4.845973014831543
    4. ' 
' → logprob: -5.220973014831543
    5. '            
' → logprob: -7.095973014831543
    6. '[right' → logprob: -7.345973014831543
    7. '  
' → logprob: -7.720973014831543
    8. '<|end|>' → logprob: -7.970973014831543
    9. '    
' → logprob: -8.095973014831543
    10. '           ' → logprob: -8.720973014831543

Token 436: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1521424651145935
    2. '
' → logprob: -3.0271425247192383
    3. '                
' → logprob: -3.1521425247192383
    4. ' 
' → logprob: -3.7771425247192383
    5. '            
' → logprob: -5.527142524719238
    6. '<|end|>' → logprob: -5.527142524719238
    7. '  
' → logprob: -5.777142524719238
    8. '[right' → logprob: -5.902142524719238
    9. '    
' → logprob: -6.152142524719238
    10. '        
' → logprob: -6.152142524719238

Token 437: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.1602281779050827
    2. ' right' → logprob: -1.9102281332015991
    3. '               ' → logprob: -13.28522777557373
    4. '	right' → logprob: -13.41022777557373
    5. '[right' → logprob: -15.53522777557373
    6. '.right' → logprob: -15.66022777557373
    7. 'left' → logprob: -16.035228729248047
    8. '
' → logprob: -16.410228729248047
    9. '_right' → logprob: -16.535228729248047
    10. '           ' → logprob: -16.910228729248047

Token 438: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132617771625519
    2. ' =' → logprob: -1.3132617473602295
    3. '<|end|>' → logprob: -17.813261032104492
    4. '=}' → logprob: -18.813261032104492
    5. ' ' → logprob: -18.938261032104492
    6. '=
' → logprob: -19.063261032104492
    7. '＝' → logprob: -19.063261032104492
    8. ' -=' → logprob: -19.188261032104492
    9. ' =
' → logprob: -19.438261032104492
    10. '.=' → logprob: -19.688261032104492

Token 439: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.048587486147880554
    2. ' mid' → logprob: -3.0485875606536865
    3. '[mid' → logprob: -17.173587799072266
    4. '(mid' → logprob: -17.798587799072266
    5. '   ' → logprob: -18.423587799072266
    6. '_mid' → logprob: -19.673587799072266
    7. ' ' → logprob: -19.798587799072266
    8. 'middle' → logprob: -20.423587799072266
    9. '.mid' → logprob: -21.548587799072266
    10. 'm' → logprob: -21.798587799072266

Token 440: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.050689127296209335
    2. '-' → logprob: -4.300689220428467
    3. ' =' → logprob: -4.425689220428467
    4. ' ' → logprob: -4.800689220428467
    5. ' 
' → logprob: -4.800689220428467
    6. '=' → logprob: -6.050689220428467
    7. '<|end|>' → logprob: -6.050689220428467
    8. '
' → logprob: -7.050689220428467
    9. '```' → logprob: -7.050689220428467
    10. 'token' → logprob: -8.675688743591309

Token 441: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -18.875003814697266
    4. '<|end|>' → logprob: -21.375003814697266
    5. '
' → logprob: -21.875003814697266
    6. '   ' → logprob: -21.875003814697266
    7. '[' → logprob: -22.500003814697266
    8. '0' → logprob: -22.875003814697266
    9. '``' → logprob: -24.000003814697266
    10. '...' → logprob: -24.125003814697266

Token 442: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -19.000001907348633
    4. '   ' → logprob: -20.500001907348633
    5. '0' → logprob: -21.500001907348633
    6. '[' → logprob: -21.875001907348633
    7. '3' → logprob: -22.437501907348633
    8. '  ' → logprob: -22.437501907348633
    9. '-' → logprob: -22.437501907348633
    10. '=' → logprob: -22.625001907348633

Token 443: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16045290231704712
    2. ' else' → logprob: -2.2854528427124023
    3. 'else' → logprob: -3.2854528427124023
    4. '       ' → logprob: -5.035452842712402
    5. '
' → logprob: -6.785452842712402
    6. ' 
' → logprob: -7.910452842712402
    7. '   ' → logprob: -8.160452842712402
    8. '               ' → logprob: -8.660452842712402
    9. '    
' → logprob: -8.660452842712402
    10. '            
' → logprob: -8.910452842712402

Token 444: '           ' (ID: 352)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5837586522102356
    2. 'else' → logprob: -0.8337586522102356
    3. '           ' → logprob: -5.20875883102417
    4. '       ' → logprob: -6.33375883102417
    5. '   ' → logprob: -8.208758354187012
    6. '               ' → logprob: -9.333758354187012
    7. '	else' → logprob: -9.833758354187012
    8. '```' → logprob: -9.833758354187012
    9. 'left' → logprob: -9.958758354187012
    10. ' left' → logprob: -11.833758354187012

Token 445: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5889775156974792
    2. 'else' (adapté à ' else') → logprob: -0.8389775156974792
    3. '       ' → logprob: -4.463977336883545
    4. '           ' → logprob: -6.588977336883545
    5. '	else' → logprob: -10.213977813720703
    6. '   ' → logprob: -11.088977813720703
    7. '	' → logprob: -12.713977813720703
    8. '               ' → logprob: -12.963977813720703
    9. '```' → logprob: -13.338977813720703
    10. '		' → logprob: -13.463977813720703

Token 446: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.328477144241333
    2. ':
' → logprob: -1.328477144241333
    3. ':' → logprob: -4.828476905822754
    4. '           ' → logprob: -6.453476905822754
    5. 'left' → logprob: -6.453476905822754
    6. '[left' → logprob: -6.703476905822754
    7. '```' → logprob: -6.953476905822754
    8. '                   ' → logprob: -7.828476905822754
    9. ':left' → logprob: -7.828476905822754
    10. ' left' → logprob: -8.203476905822754

Token 447: '               ' (ID: 506)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.1929565817117691
    2. '               ' → logprob: -1.942956566810608
    3. ' left' → logprob: -3.4429566860198975
    4. '[left' → logprob: -9.317956924438477
    5. '	left' → logprob: -9.442956924438477
    6. '       ' → logprob: -11.317956924438477
    7. '           ' → logprob: -11.442956924438477
    8. '```' → logprob: -11.567956924438477
    9. '   ' → logprob: -11.817956924438477
    10. '.left' → logprob: -11.817956924438477

Token 448: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.0036501993890851736
    2. ' left' → logprob: -5.753650188446045
    3. '               ' → logprob: -8.253650665283203
    4. '	left' → logprob: -9.128650665283203
    5. '       ' → logprob: -9.628650665283203
    6. '[left' → logprob: -10.878650665283203
    7. '   ' → logprob: -12.253650665283203
    8. ':left' → logprob: -12.628650665283203
    9. '.left' → logprob: -12.753650665283203
    10. '_left' → logprob: -12.753650665283203

Token 449: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740770161151886
    2. ' =' → logprob: -0.9740769863128662
    3. '            ' → logprob: -18.349077224731445
    4. '＝' → logprob: -18.474077224731445
    5. '                ' → logprob: -19.599077224731445
    6. '               ' → logprob: -19.849077224731445
    7. '           ' → logprob: -20.349077224731445
    8. '    ' → logprob: -21.224077224731445
    9. '=
' → logprob: -21.224077224731445
    10. '+=' → logprob: -21.349077224731445

Token 450: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.06197687238454819
    2. ' mid' → logprob: -2.811976909637451
    3. 'left' → logprob: -12.561976432800293
    4. 'right' → logprob: -13.436976432800293
    5. ' left' → logprob: -13.686976432800293
    6. '(mid' → logprob: -14.186976432800293
    7. '_mid' → logprob: -14.311976432800293
    8. '[mid' → logprob: -14.311976432800293
    9. ' right' → logprob: -14.686976432800293
    10. 'middle' → logprob: -14.936976432800293

Token 451: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07890785485506058
    2. '+' → logprob: -2.5789079666137695
    3. '=' → logprob: -11.20390796661377
    4. ' =' → logprob: -12.57890796661377
    5. '               ' → logprob: -14.95390796661377
    6. ' +=' → logprob: -15.57890796661377
    7. ' ' → logprob: -16.203907012939453
    8. ' ' → logprob: -16.578907012939453
    9. '                   ' → logprob: -16.578907012939453
    10. '```' → logprob: -16.828907012939453

Token 452: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. '=' → logprob: -15.750021934509277
    4. '```' → logprob: -16.25002098083496
    5. '<|end|>' → logprob: -19.25002098083496
    6. '           ' → logprob: -19.25002098083496
    7. '   ' → logprob: -19.75002098083496
    8. '                   ' → logprob: -20.25002098083496
    9. '               ' → logprob: -20.50002098083496
    10. '0' → logprob: -20.50002098083496

Token 453: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -18.250003814697266
    4. '   ' → logprob: -19.500003814697266
    5. '+' → logprob: -21.375003814697266
    6. 'left' → logprob: -21.875003814697266
    7. '=' → logprob: -22.250003814697266
    8. '0' → logprob: -22.250003814697266
    9. '  ' → logprob: -22.375003814697266
    10. '2' → logprob: -22.500003814697266

Token 454: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07493853569030762
    2. '       ' → logprob: -3.3249385356903076
    3. ' print' → logprob: -3.8249385356903076
    4. '   ' → logprob: -4.824938774108887
    5. '
' → logprob: -6.199938774108887
    6. '<|end|>' → logprob: -6.199938774108887
    7. '        
' → logprob: -7.074938774108887
    8. '    
' → logprob: -7.824938774108887
    9. '  
' → logprob: -7.824938774108887
    10. '	print' → logprob: -8.199938774108887

Token 455: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.012251803651452065
    2. '       ' → logprob: -4.762251853942871
    3. '   ' → logprob: -5.762251853942871
    4. ' print' → logprob: -7.637251853942871
    5. 'if' → logprob: -13.262251853942871
    6. '	print' → logprob: -13.387251853942871
    7. '```' → logprob: -14.887251853942871
    8. '
' → logprob: -15.137251853942871
    9. '        
' → logprob: -15.762251853942871
    10. ' if' → logprob: -16.137250900268555

Token 456: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00026741522015072405
    2. ' print' → logprob: -9.000267028808594
    3. '       ' → logprob: -9.500267028808594
    4. '   ' → logprob: -9.750267028808594
    5. 'if' (adapté à ' if') → logprob: -11.500267028808594
    6. '
' → logprob: -14.750267028808594
    7. ' if' → logprob: -15.750267028808594
    8. '```' → logprob: -15.875267028808594
    9. '	print' → logprob: -18.125267028808594
    10. '.print' → logprob: -19.625267028808594

Token 457: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20141568779945374
    2. ' ans' → logprob: -1.7014156579971313
    3. '(ans' → logprob: -13.201416015625
    4. '	ans' → logprob: -14.826416015625
    5. '   ' → logprob: -15.951416015625
    6. 'answer' → logprob: -17.576416015625
    7. '_ans' → logprob: -17.826416015625
    8. 'Ans' → logprob: -18.326416015625
    9. ' ' → logprob: -18.701416015625
    10. 'ANS' → logprob: -18.951416015625

Token 458: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.16037340462207794
    2. 'is' → logprob: -1.9103734493255615
    3. '==' → logprob: -8.91037368774414
    4. '!=' → logprob: -11.78537368774414
    5. ' ==' → logprob: -12.78537368774414
    6. '>=' → logprob: -13.78537368774414
    7. '```' → logprob: -14.16037368774414
    8. ' !=' → logprob: -14.66037368774414
    9. '	is' → logprob: -14.91037368774414
    10. '===' → logprob: -15.03537368774414

Token 459: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0058798519894480705
    2. 'not' → logprob: -5.255879878997803
    3. ' None' → logprob: -7.505879878997803
    4. ' not' → logprob: -9.255879402160645
    5. 'Not' → logprob: -15.755879402160645
    6. '0' → logprob: -16.13088035583496
    7. '   ' → logprob: -16.25588035583496
    8. 'none' → logprob: -17.50588035583496
    9. '_None' → logprob: -18.13088035583496
    10. '       ' → logprob: -18.88088035583496

Token 460: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9886788129806519
    2. ':' → logprob: -1.1136788129806519
    3. ' or' → logprob: -1.8636788129806519
    4. '       ' → logprob: -2.6136789321899414
    5. '           ' → logprob: -2.7386789321899414
    6. '   ' → logprob: -5.738678932189941
    7. 'print' → logprob: -5.988678932189941
    8. ' print' → logprob: -8.613678932189941
    9. 'or' → logprob: -8.738678932189941
    10. ' and' → logprob: -9.363678932189941

Token 461: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3451467752456665
    2. '           ' → logprob: -1.7201467752456665
    3. 'print' → logprob: -2.345146656036377
    4. ' print' → logprob: -4.220146656036377
    5. '   ' → logprob: -6.095146656036377
    6. '```' → logprob: -10.720147132873535
    7. ' ' → logprob: -11.220147132873535
    8. '               ' → logprob: -11.970147132873535
    9. '	print' → logprob: -11.970147132873535
    10. '     ' → logprob: -12.970147132873535

Token 462: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0028663314878940582
    2. ' print' → logprob: -5.877866268157959
    3. '       ' → logprob: -10.377866744995117
    4. '           ' → logprob: -10.877866744995117
    5. '   ' → logprob: -11.627866744995117
    6. '	print' → logprob: -13.502866744995117
    7. '```' → logprob: -13.877866744995117
    8. ' ' → logprob: -15.752866744995117
    9. '               ' → logprob: -16.752866744995117
    10. '``' → logprob: -16.877866744995117

Token 463: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0005177667480893433
    2. '(' → logprob: -7.750517845153809
    3. '(-' → logprob: -10.500517845153809
    4. '('' → logprob: -10.625517845153809
    5. 'NA' → logprob: -10.875517845153809
    6. '"' → logprob: -11.375517845153809
    7. ' ("' → logprob: -13.000517845153809
    8. '("-' → logprob: -13.625517845153809
    9. '-' → logprob: -15.000517845153809
    10. 'Na' → logprob: -15.250517845153809

Token 464: 'NA' (ID: 9555)
  Prédit: 'NA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NA' → logprob: -0.00013655527436640114
    2. '"' → logprob: -9.250136375427246
    3. '-' → logprob: -10.125136375427246
    4. 'N' → logprob: -15.875136375427246
    5. '"N' → logprob: -16.125137329101562
    6. ' NA' → logprob: -16.250137329101562
    7. 'NO' → logprob: -17.375137329101562
    8. '0' → logprob: -17.875137329101562
    9. 'Na' → logprob: -18.375137329101562
    10. '"-' → logprob: -18.375137329101562

Token 465: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.48064690828323364
    2. ')")
' → logprob: -1.4806468486785889
    3. ')")' → logprob: -2.230646848678589
    4. ')' → logprob: -3.230646848678589
    5. '")
' → logprob: -4.980647087097168
    6. 'else' → logprob: -9.730647087097168
    7. '}")' → logprob: -9.730647087097168
    8. ')
' → logprob: -9.855647087097168
    9. '       ' → logprob: -10.355647087097168
    10. '   ' → logprob: -11.105647087097168

Token 466: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0560283437371254
    2. 'else' → logprob: -3.181028366088867
    3. ' else' → logprob: -4.806028366088867
    4. '   ' → logprob: -5.556028366088867
    5. '<|end|>' → logprob: -7.306028366088867
    6. '```' → logprob: -9.431028366088867
    7. '	else' → logprob: -9.556028366088867
    8. ' ' → logprob: -10.806028366088867
    9. '           ' → logprob: -11.431028366088867
    10. '	' → logprob: -11.681028366088867

Token 467: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.44128480553627014
    2. '       ' → logprob: -1.1912847757339478
    3. ' else' → logprob: -2.9412848949432373
    4. '   ' → logprob: -8.941285133361816
    5. '```' → logprob: -11.441285133361816
    6. '	else' → logprob: -11.691285133361816
    7. 'elif' → logprob: -12.316285133361816
    8. 'print' → logprob: -12.816285133361816
    9. '           ' → logprob: -13.691285133361816
    10. '<|end|>' → logprob: -14.316285133361816

Token 468: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17142117023468018
    2. ':
' → logprob: -2.6714210510253906
    3. ':' → logprob: -2.7964210510253906
    4. ' print' → logprob: -4.296421051025391
    5. 'print' → logprob: -4.671421051025391
    6. '       ' → logprob: -5.796421051025391
    7. '(print' → logprob: -7.921421051025391
    8. '   ' → logprob: -8.42142105102539
    9. '.print' → logprob: -9.42142105102539
    10. '		' → logprob: -9.54642105102539

Token 469: '           ' (ID: 352)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.32017093896865845
    2. 'print' → logprob: -1.3201708793640137
    3. '       ' → logprob: -5.070170879364014
    4. '           ' → logprob: -7.445170879364014
    5. '   ' → logprob: -11.070171356201172
    6. '```' → logprob: -13.070171356201172
    7. '	print' → logprob: -13.445171356201172
    8. '.print' → logprob: -14.945171356201172
    9. '(print' → logprob: -16.195171356201172
    10. '               ' → logprob: -16.320171356201172

Token 470: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04859202727675438
    2. ' print' → logprob: -3.0485920906066895
    3. '           ' → logprob: -12.298591613769531
    4. '       ' → logprob: -16.79859161376953
    5. '   ' → logprob: -17.54859161376953
    6. '```' → logprob: -19.17359161376953
    7. '	print' → logprob: -19.79859161376953
    8. '.print' → logprob: -21.67359161376953
    9. '               ' → logprob: -21.67359161376953
    10. 'printf' → logprob: -22.17359161376953

Token 471: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.500000953674316
    3. '(f' → logprob: -19.0
    4. 'ans' → logprob: -19.25
    5. '(answer' → logprob: -19.5
    6. ' (' → logprob: -19.75
    7. '(abs' → logprob: -21.125
    8. '	ans' → logprob: -21.375
    9. '("' → logprob: -21.5
    10. ' ans' → logprob: -21.625

Token 472: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ')
' → logprob: -14.375000953674316
    3. ' )' → logprob: -15.500000953674316
    4. '<|end|>' → logprob: -15.875000953674316
    5. '```' → logprob: -16.375001907348633
    6. '   ' → logprob: -16.625001907348633
    7. '`)' → logprob: -16.750001907348633
    8. '}' → logprob: -16.875001907348633
    9. '")' → logprob: -16.875001907348633
    10. '')' → logprob: -17.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 470
Tokens correctement prédits (1ère position, stricte): 163
Tokens correctement prédits (1ère position, avec adaptation): 182
Tokens correctement prédits (top 10): 369
Précision stricte (1ère position): 34.68%
Précision adaptée (1ère position): 38.72%
Précision (top 10): 78.51%
================================================================================
