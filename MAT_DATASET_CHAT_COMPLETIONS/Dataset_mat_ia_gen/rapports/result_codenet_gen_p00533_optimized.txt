================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:24:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
H, W = map(int, input().split())
board = [input() for _ in range(H)]
for i in range(H):
    ans = [-1]*W
    last_c = -1
    for j in range(W):
        if board[i][j] == 'c':
            ans[j] = 0
            last_c = j
        elif last_c != -1:
            ans[j] = j - last_c
    print(*ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'H' (ID: 39)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' W' (ID: 486)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1679086983203888
    2. ',' → logprob: -1.9179086685180664
    3. ' =' → logprob: -5.792908668518066
    4. '*' → logprob: -6.292908668518066
    5. ':' → logprob: -6.667908668518066
    6. ')' → logprob: -8.042908668518066
    7. '```' → logprob: -8.167908668518066
    8. '#' → logprob: -8.542908668518066
    9. ';' → logprob: -8.917908668518066
    10. ',
' → logprob: -9.292908668518066

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023173026740550995
    2. '32' → logprob: -5.273172855377197
    3. ' map' → logprob: -5.898172855377197
    4. '100' → logprob: -6.398172855377197
    5. ' img' → logprob: -6.398172855377197
    6. ' image' → logprob: -6.523172855377197
    7. '256' → logprob: -6.898172855377197
    8. '128' → logprob: -6.898172855377197
    9. '224' → logprob: -6.898172855377197
    10. '64' → logprob: -6.898172855377197

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15295211970806122
    2. '(int' → logprob: -2.277952194213867
    3. '(str' → logprob: -3.902952194213867
    4. '(lambda' → logprob: -4.027952194213867
    5. '(input' → logprob: -7.777952194213867
    6. '```' → logprob: -8.652952194213867
    7. '[int' → logprob: -9.027952194213867
    8. '(len' → logprob: -9.527952194213867
    9. '(eval' → logprob: -9.652952194213867
    10. '(list' → logprob: -9.652952194213867

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.007321577984839678
    2. ')' → logprob: -5.757321357727051
    3. 'input' → logprob: -6.257321357727051
    4. '(' → logprob: -6.257321357727051
    5. '[input' → logprob: -9.88232135772705
    6. '(int' → logprob: -10.00732135772705
    7. '(str' → logprob: -10.38232135772705
    8. '(raw' → logprob: -10.63232135772705
    9. ' input' → logprob: -10.75732135772705
    10. '```' → logprob: -11.00732135772705

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06201215833425522
    2. ' input' → logprob: -2.812012195587158
    3. '(input' → logprob: -10.06201171875
    4. ',input' → logprob: -13.81201171875
    5. ')' → logprob: -14.31201171875
    6. '=input' → logprob: -16.18701171875
    7. '[input' → logprob: -16.68701171875
    8. '<input' → logprob: -16.81201171875
    9. '```' → logprob: -17.06201171875
    10. '	input' → logprob: -17.31201171875

Token 8: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5850291848182678
    2. '())' → logprob: -0.8350291848182678
    3. '().' → logprob: -5.085029125213623
    4. '(' → logprob: -7.460029125213623
    5. '('' → logprob: -7.585029125213623
    6. ')' → logprob: -7.585029125213623
    7. '()`' → logprob: -8.210029602050781
    8. '();)' → logprob: -8.835029602050781
    9. '`()' → logprob: -8.960029602050781
    10. '());' → logprob: -8.960029602050781

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001761272142175585
    2. 'strip' → logprob: -8.750176429748535
    3. ')' → logprob: -11.375176429748535
    4. ' split' → logprob: -12.375176429748535
    5. 'rstrip' → logprob: -13.875176429748535
    6. 'read' → logprob: -14.250176429748535
    7. '(split' → logprob: -15.500176429748535
    8. 'spl' → logprob: -16.25017547607422
    9. 'startswith' → logprob: -17.62517547607422
    10. '```' → logprob: -18.12517547607422

Token 10: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3050590753555298
    2. ')' → logprob: -1.4300590753555298
    3. '))' → logprob: -4.30505895614624
    4. '()))' → logprob: -4.93005895614624
    5. '()' → logprob: -5.93005895614624
    6. '(' → logprob: -9.305059432983398
    7. '`)' → logprob: -10.305059432983398
    8. '('' → logprob: -10.555059432983398
    9. ' ())' → logprob: -10.805059432983398
    10. '```' → logprob: -11.930059432983398

Token 11: 'board' (ID: 3935)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.87052321434021
    2. 'x' → logprob: -1.12052321434021
    3. ',' → logprob: -2.24552321434021
    4. '#' → logprob: -2.87052321434021
    5. ')' → logprob: -4.120523452758789
    6. '`' → logprob: -4.745523452758789
    7. 'height' → logprob: -4.745523452758789
    8. 'for' → logprob: -4.870523452758789
    9. 'n' → logprob: -5.120523452758789
    10. '\n' → logprob: -5.120523452758789

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00021021578868385404
    2. '[
' → logprob: -9.75020980834961
    3. '[]' → logprob: -10.12520980834961
    4. '\[' → logprob: -10.12520980834961
    5. '[][]' → logprob: -11.37520980834961
    6. '[:]' → logprob: -11.62520980834961
    7. '```' → logprob: -11.87520980834961
    8. '.' → logprob: -12.12520980834961
    9. '[...]' → logprob: -12.25020980834961
    10. '[i' → logprob: -12.25020980834961

Token 13: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31815555691719055
    2. '[]' → logprob: -1.5681555271148682
    3. ' []' → logprob: -3.193155527114868
    4. ' [' → logprob: -4.193155765533447
    5. '[[' → logprob: -5.693155765533447
    6. '[['' → logprob: -6.568155765533447
    7. '[list' → logprob: -6.818155765533447
    8. '[][]' → logprob: -7.443155765533447
    9. ' [[' → logprob: -7.568155765533447
    10. ' [[]' → logprob: -8.193155288696289

Token 14: 'input' (ID: 2586)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00171278219204396
    2. ' list' → logprob: -6.501712799072266
    3. 'input' → logprob: -8.626712799072266
    4. '[list' → logprob: -10.626712799072266
    5. '[input' → logprob: -13.251712799072266
    6. '[]' → logprob: -13.376712799072266
    7. '[' → logprob: -13.501712799072266
    8. '(list' → logprob: -13.876712799072266
    9. 'map' → logprob: -14.376712799072266
    10. '   ' → logprob: -14.876712799072266

Token 15: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.565944254398346
    2. '()' → logprob: -1.3159441947937012
    3. '())' → logprob: -1.8159441947937012
    4. '().' → logprob: -6.815944194793701
    5. '());' → logprob: -10.06594467163086
    6. '()),' → logprob: -10.81594467163086
    7. '()].' → logprob: -10.94094467163086
    8. '()+' → logprob: -11.19094467163086
    9. '()>' → logprob: -11.31594467163086
    10. '()}' → logprob: -11.56594467163086

Token 16: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22953103482723236
    2. '())' → logprob: -1.7295310497283936
    3. ')' → logprob: -3.7295310497283936
    4. '().' → logprob: -5.7295308113098145
    5. '()]' → logprob: -7.8545308113098145
    6. 'for' → logprob: -10.729531288146973
    7. '()
' → logprob: -11.229531288146973
    8. '()),' → logprob: -11.854531288146973
    9. '(' → logprob: -12.104531288146973
    10. '()).' → logprob: -12.104531288146973

Token 17: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7377188205718994
    2. '_' → logprob: -0.9877188205718994
    3. ' _' → logprob: -2.2377188205718994
    4. ' i' → logprob: -3.7377188205718994
    5. ' ' → logprob: -4.11271858215332
    6. '(' → logprob: -6.98771858215332
    7. '_range' → logprob: -7.36271858215332
    8. ' in' → logprob: -7.73771858215332
    9. '(range' → logprob: -8.48771858215332
    10. 'range' → logprob: -8.73771858215332

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9299482107162476
    2. 'range' → logprob: -1.0549482107162476
    3. ' range' → logprob: -1.4299482107162476
    4. 'in' → logprob: -4.429948329925537
    5. '_' → logprob: -5.804948329925537
    6. 'ange' → logprob: -6.429948329925537
    7. '(range' → logprob: -7.429948329925537
    8. '_range' → logprob: -8.054947853088379
    9. '	range' → logprob: -8.804947853088379
    10. '(' → logprob: -9.929947853088379

Token 19: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031777136027812958
    2. ' range' → logprob: -5.753177642822266
    3. '	range' → logprob: -17.253177642822266
    4. '(range' → logprob: -17.503177642822266
    5. '.range' → logprob: -19.378177642822266
    6. 'rang' → logprob: -19.628177642822266
    7. '_range' → logprob: -20.128177642822266
    8. ' ' → logprob: -20.753177642822266
    9. 'ran' → logprob: -20.878177642822266
    10. ')' → logprob: -21.003177642822266

Token 20: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0013276183744892478
    2. '(' → logprob: -6.6263275146484375
    3. ' (' → logprob: -14.626327514648438
    4. '(int' → logprob: -15.126327514648438
    5. '(W' → logprob: -15.126327514648438
    6. ')' → logprob: -15.751327514648438
    7. 'H' → logprob: -15.876327514648438
    8. '(
' → logprob: -17.001327514648438
    9. '(N' → logprob: -17.126327514648438
    10. '(A' → logprob: -17.126327514648438

Token 21: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.666993507067673e-05
    2. ')' → logprob: -10.750036239624023
    3. ']' → logprob: -11.250036239624023
    4. '])]' → logprob: -14.250036239624023
    5. ')])' → logprob: -14.625036239624023
    6. ' )' → logprob: -14.750036239624023
    7. '')]' → logprob: -15.000036239624023
    8. ')],' → logprob: -16.250036239624023
    9. '))' → logprob: -16.250036239624023
    10. '])' → logprob: -16.750036239624023

Token 22: 'for' (ID: 1938)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2248183488845825
    2. 'max' → logprob: -1.7248183488845825
    3. 'for' → logprob: -2.474818229675293
    4. 'x' → logprob: -2.724818229675293
    5. 'h' → logprob: -2.974818229675293
    6. 'count' → logprob: -3.224818229675293
    7. 'r' → logprob: -3.224818229675293
    8. 's' → logprob: -3.349818229675293
    9. 'result' → logprob: -3.599818229675293
    10. 'd' → logprob: -3.724818229675293

Token 23: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16109339892864227
    2. ' i' → logprob: -2.1610934734344482
    3. ' _' → logprob: -3.5360934734344482
    4. '_' → logprob: -6.036093235015869
    5. ' row' → logprob: -6.661093235015869
    6. '  ' → logprob: -7.536093235015869
    7. 'i' → logprob: -8.786093711853027
    8. ' ‌' → logprob: -10.661093711853027
    9. ' y' → logprob: -11.161093711853027
    10. ' ▁' → logprob: -11.411093711853027

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06970308721065521
    2. 'in' → logprob: -2.9447031021118164
    3. ' ' → logprob: -4.569703102111816
    4. 'n' → logprob: -5.694703102111816
    5. ' n' → logprob: -7.444703102111816
    6. '  ' → logprob: -8.194703102111816
    7. ' i' → logprob: -10.819703102111816
    8. '_' → logprob: -11.069703102111816
    9. ')' → logprob: -11.194703102111816
    10. '	in' → logprob: -11.194703102111816

Token 25: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005234594456851482
    2. 'range' → logprob: -5.255234718322754
    3. '	range' → logprob: -15.255234718322754
    4. ' xrange' → logprob: -15.505234718322754
    5. ' ' → logprob: -15.630234718322754
    6. '(range' → logprob: -16.755233764648438
    7. '_range' → logprob: -17.380233764648438
    8. 'Range' → logprob: -18.005233764648438
    9. '.range' → logprob: -18.505233764648438
    10. ')' → logprob: -19.630233764648438

Token 26: '(H' (ID: 20904)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04309704899787903
    2. '(H' → logprob: -3.1680970191955566
    3. ' (' → logprob: -9.543097496032715
    4. '(len' → logprob: -11.543097496032715
    5. '(space' → logprob: -12.793097496032715
    6. '(S' → logprob: -12.918097496032715
    7. '(W' → logprob: -13.043097496032715
    8. '(I' → logprob: -13.543097496032715
    9. ' ' → logprob: -13.668097496032715
    10. '(
' → logprob: -13.793097496032715

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0027674324810504913
    2. ')' → logprob: -6.002767562866211
    3. ':' → logprob: -9.127767562866211
    4. ' ):' → logprob: -9.377767562866211
    5. '):
' → logprob: -9.377767562866211
    6. '+' → logprob: -12.002767562866211
    7. ']:' → logprob: -13.377767562866211
    8. '-' → logprob: -13.377767562866211
    9. ' ' → logprob: -14.127767562866211
    10. '   ' → logprob: -14.502767562866211

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02599208801984787
    2. '<|end|>' → logprob: -4.775991916656494
    3. ' for' → logprob: -4.900991916656494
    4. '    ' → logprob: -5.150991916656494
    5. ' ' → logprob: -5.775991916656494
    6. '    
' → logprob: -7.900991916656494
    7. 'for' → logprob: -8.400992393493652
    8. '<|end|>' → logprob: -9.525992393493652
    9. ')' → logprob: -10.650992393493652
    10. ''' → logprob: -10.650992393493652

Token 29: ' ans' (ID: 3345)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05318616330623627
    2. 'for' → logprob: -3.0531861782073975
    3. '   ' → logprob: -5.428185939788818
    4. '    ' → logprob: -9.053186416625977
    5. ' ' → logprob: -9.553186416625977
    6. ' print' → logprob: -12.928186416625977
    7. ' if' → logprob: -13.803186416625977
    8. '	for' → logprob: -13.928186416625977
    9. 'print' → logprob: -13.928186416625977
    10. '_' → logprob: -14.553186416625977

Token 30: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023720689117908478
    2. '[i' → logprob: -5.398720741271973
    3. '.append' → logprob: -5.523720741271973
    4. '[]' → logprob: -5.523720741271973
    5. ' +=' → logprob: -5.523720741271973
    6. ' ' → logprob: -6.023720741271973
    7. ' =' → logprob: -6.648720741271973
    8. ']' → logprob: -7.398720741271973
    9. ' []' → logprob: -7.398720741271973
    10. '[:]' → logprob: -7.898720741271973

Token 31: ' [-' (ID: 20191)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8835684657096863
    2. ''' → logprob: -2.008568525314331
    3. '0' → logprob: -2.133568525314331
    4. '[]' → logprob: -2.133568525314331
    5. '""' → logprob: -2.133568525314331
    6. '''' → logprob: -3.133568525314331
    7. 'board' → logprob: -4.133568286895752
    8. ' ' → logprob: -4.758568286895752
    9. ' []' → logprob: -4.883568286895752
    10. '[' → logprob: -4.883568286895752

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017870404990389943
    2. 'float' → logprob: -7.626787185668945
    3. '(' → logprob: -8.126787185668945
    4. '-' → logprob: -9.126787185668945
    5. 'i' → logprob: -9.126787185668945
    6. 'int' → logprob: -9.251787185668945
    7. 'H' → logprob: -9.626787185668945
    8. '(-' → logprob: -9.626787185668945
    9. ''' → logprob: -9.876787185668945
    10. '(i' → logprob: -10.001787185668945

Token 33: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.047867968678474426
    2. ' for' → logprob: -3.672868013381958
    3. ']*' → logprob: -4.797867774963379
    4. ' ]' → logprob: -4.922867774963379
    5. ',' → logprob: -5.422867774963379
    6. 'for' → logprob: -6.797867774963379
    7. ' if' → logprob: -9.547867774963379
    8. ')' → logprob: -10.047867774963379
    9. '   ' → logprob: -10.172867774963379
    10. ']+' → logprob: -10.422867774963379

Token 34: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.00024048985505942255
    2. ' W' → logprob: -8.625240325927734
    3. '(W' → logprob: -9.875240325927734
    4. 'H' → logprob: -12.750240325927734
    5. '(' → logprob: -13.375240325927734
    6. '   ' → logprob: -13.625240325927734
    7. '	W' → logprob: -14.375240325927734
    8. ' (' → logprob: -14.625240325927734
    9. ' ' → logprob: -14.750240325927734
    10. '10' → logprob: -15.500240325927734

Token 35: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31122371554374695
    2. '   ' → logprob: -1.5612237453460693
    3. '<|end|>' → logprob: -3.5612237453460693
    4. ' for' → logprob: -4.56122350692749
    5. ' ' → logprob: -4.93622350692749
    6. '\n' → logprob: -5.93622350692749
    7. '    
' → logprob: -6.56122350692749
    8. 'for' → logprob: -6.68622350692749
    9. ' 
' → logprob: -7.06122350692749
    10. '\' → logprob: -7.06122350692749

Token 36: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' last' (ID: 2174)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3742309808731079
    2. ' for' → logprob: -1.374230980873108
    3. '   ' → logprob: -2.8742308616638184
    4. '<|end|>' → logprob: -6.874230861663818
    5. ' ' → logprob: -7.249230861663818
    6. '	for' → logprob: -7.874230861663818
    7. '
' → logprob: -9.124231338500977
    8. '\n' → logprob: -9.374231338500977
    9. '  ' → logprob: -9.749231338500977
    10. '    ' → logprob: -9.999231338500977

Token 38: '_c' (ID: 1303)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03420872613787651
    2. ' =' → logprob: -4.40920877456665
    3. '_pos' → logprob: -5.28420877456665
    4. '=' → logprob: -5.78420877456665
    5. '_space' → logprob: -6.03420877456665
    6. '_idx' → logprob: -6.28420877456665
    7. '_index' → logprob: -6.65920877456665
    8. '_j' → logprob: -6.78420877456665
    9. '_seen' → logprob: -6.78420877456665
    10. '_position' → logprob: -6.90920877456665

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9643861651420593
    2. '=' → logprob: -1.339386224746704
    3. '_pos' → logprob: -1.589386224746704
    4. '_' → logprob: -2.714386224746704
    5. '_idx' → logprob: -3.464386224746704
    6. 'h' → logprob: -3.964386224746704
    7. 'olor' → logprob: -4.589385986328125
    8. '_index' → logprob: -5.214385986328125
    9. 'pos' → logprob: -5.464385986328125
    10. '_h' → logprob: -6.089385986328125

Token 40: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.24617072939872742
    2. 'None' → logprob: -2.12117075920105
    3. ''' → logprob: -2.62117075920105
    4. ' None' → logprob: -5.246170520782471
    5. ' -' → logprob: -5.496170520782471
    6. '''' → logprob: -5.621170520782471
    7. '"' → logprob: -5.871170520782471
    8. '0' → logprob: -6.246170520782471
    9. ''i' → logprob: -6.246170520782471
    10. ' ' → logprob: -6.496170520782471

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001105762057704851
    2. 'i' → logprob: -9.625110626220703
    3. '2' → logprob: -10.625110626220703
    4. '-' → logprob: -11.250110626220703
    5. ' ' → logprob: -12.625110626220703
    6. ' i' → logprob: -14.125110626220703
    7. ' -' → logprob: -14.625110626220703
    8. 'H' → logprob: -14.687610626220703
    9. '(i' → logprob: -15.187610626220703
    10. '3' → logprob: -15.562610626220703

Token 42: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08204011619091034
    2. '
' → logprob: -3.4570400714874268
    3. ' for' → logprob: -3.5820400714874268
    4. '<|end|>' → logprob: -5.082040309906006
    5. 'for' → logprob: -5.582040309906006
    6. '    
' → logprob: -5.707040309906006
    7. ' ' → logprob: -6.582040309906006
    8. '	for' → logprob: -6.707040309906006
    9. ':' → logprob: -7.207040309906006
    10. '  ' → logprob: -7.707040309906006

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16185668110847473
    2. '
' → logprob: -2.7868566513061523
    3. ' for' → logprob: -3.0368566513061523
    4. 'for' → logprob: -4.036856651306152
    5. ' ' → logprob: -4.786856651306152
    6. '<|end|>' → logprob: -5.286856651306152
    7. '    
' → logprob: -5.536856651306152
    8. '  
' → logprob: -6.911856651306152
    9. ' 
' → logprob: -7.036856651306152
    10. '	for' → logprob: -7.411856651306152

Token 44: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6394308805465698
    2. ' for' → logprob: -1.5144308805465698
    3. 'for' (adapté à ' for') → logprob: -1.6394308805465698
    4. '
' → logprob: -3.0144309997558594
    5. ' ' → logprob: -5.889430999755859
    6. '	for' → logprob: -6.389430999755859
    7. '<|end|>' → logprob: -6.764430999755859
    8. '    
' → logprob: -6.889430999755859
    9. '\n' → logprob: -7.139430999755859
    10. '  ' → logprob: -8.01443099975586

Token 45: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.43330898880958557
    2. ' range' → logprob: -1.1833089590072632
    3. 'j' → logprob: -4.308309078216553
    4. 'range' → logprob: -4.308309078216553
    5. ' W' → logprob: -4.558309078216553
    6. ' ' → logprob: -5.058309078216553
    7. ' w' → logprob: -7.058309078216553
    8. 'W' → logprob: -7.933309078216553
    9. 'w' → logprob: -9.433308601379395
    10. ')' → logprob: -9.683308601379395

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2015915811061859
    2. 'in' → logprob: -1.7015916109085083
    3. ' ' → logprob: -9.701591491699219
    4. '	in' → logprob: -10.451591491699219
    5. 'range' → logprob: -10.951591491699219
    6. ')' → logprob: -10.951591491699219
    7. ',' → logprob: -11.451591491699219
    8. '+' → logprob: -11.826591491699219
    9. '(' → logprob: -11.826591491699219
    10. '<|end|>' → logprob: -12.326591491699219

Token 47: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5761111974716187
    2. ' range' → logprob: -0.8261111974716187
    3. '(range' → logprob: -8.82611083984375
    4. ')' → logprob: -11.20111083984375
    5. '   ' → logprob: -13.07611083984375
    6. '	range' → logprob: -13.32611083984375
    7. ' ' → logprob: -13.45111083984375
    8. '(' → logprob: -13.70111083984375
    9. 'ange' → logprob: -13.95111083984375
    10. 'in' → logprob: -14.20111083984375

Token 48: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.001876755035482347
    2. '(' → logprob: -6.5018768310546875
    3. '(H' → logprob: -8.001876831054688
    4. ' (' → logprob: -10.751876831054688
    5. 'W' → logprob: -11.626876831054688
    6. ')' → logprob: -12.501876831054688
    7. ' W' → logprob: -13.501876831054688
    8. '(
' → logprob: -14.501876831054688
    9. '(j' → logprob: -14.626876831054688
    10. '(w' → logprob: -14.751876831054688

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019036511657759547
    2. '):
' → logprob: -6.751903533935547
    3. ':' → logprob: -8.001903533935547
    4. ')' → logprob: -8.126903533935547
    5. ' ):' → logprob: -9.626903533935547
    6. '+' → logprob: -10.751903533935547
    7. '   ' → logprob: -11.751903533935547
    8. '():' → logprob: -13.376903533935547
    9. ',' → logprob: -13.501903533935547
    10. '-' → logprob: -13.751903533935547

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11601661145687103
    2. ':' → logprob: -2.4910166263580322
    3. '   ' → logprob: -3.9910166263580322
    4. ' if' → logprob: -5.241016387939453
    5. 'if' → logprob: -6.991016387939453
    6. ' ' → logprob: -7.866016387939453
    7. ' :' → logprob: -8.116016387939453
    8. '```' → logprob: -8.116016387939453
    9. ',' → logprob: -8.241016387939453
    10. '    ' → logprob: -8.491016387939453

Token 51: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.147475004196167
    2. ' if' → logprob: -2.022475004196167
    3. '       ' → logprob: -5.772475242614746
    4. '   ' → logprob: -6.897475242614746
    5. '```' → logprob: -8.397475242614746
    6. ':' → logprob: -8.897475242614746
    7. '_' → logprob: -9.897475242614746
    8. ' ' → logprob: -10.022475242614746
    9. 'If' → logprob: -10.147475242614746
    10. ')' → logprob: -10.647475242614746

Token 52: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.6937099695205688
    2. ' board' → logprob: -0.6937099695205688
    3. '   ' → logprob: -8.318710327148438
    4. ' j' → logprob: -9.193710327148438
    5. ' ' → logprob: -9.318710327148438
    6. '(board' → logprob: -10.318710327148438
    7. 'j' → logprob: -10.318710327148438
    8. '	board' → logprob: -10.693710327148438
    9. 'boards' → logprob: -11.818710327148438
    10. '    ' → logprob: -12.068710327148438

Token 53: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.659005157416686e-05
    2. '[j' → logprob: -10.000066757202148
    3. '[' → logprob: -11.000066757202148
    4. '[I' → logprob: -13.750066757202148
    5. ' [' → logprob: -14.125066757202148
    6. '```' → logprob: -14.250066757202148
    7. 'i' → logprob: -14.625066757202148
    8. '][' → logprob: -15.000066757202148
    9. '   ' → logprob: -15.125066757202148
    10. ' ' → logprob: -15.625066757202148

Token 54: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.3909015953540802
    2. '][' → logprob: -1.1409015655517578
    3. '[' → logprob: -5.765901565551758
    4. ']' → logprob: -7.640901565551758
    5. '[i' → logprob: -8.140901565551758
    6. ' ][' → logprob: -10.140901565551758
    7. ''][' → logprob: -11.640901565551758
    8. '[J' → logprob: -11.640901565551758
    9. '```' → logprob: -11.765901565551758
    10. ' [' → logprob: -12.015901565551758

Token 55: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.949026571121067e-05
    2. ']' → logprob: -10.250099182128906
    3. ' ' → logprob: -11.000099182128906
    4. ''' → logprob: -11.500099182128906
    5. 'c' → logprob: -11.625099182128906
    6. ' j' → logprob: -11.625099182128906
    7. '']' → logprob: -12.750099182128906
    8. '#' → logprob: -12.750099182128906
    9. '0' → logprob: -13.000099182128906
    10. '!' → logprob: -13.500099182128906

Token 56: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1284540444612503
    2. ']==' → logprob: -2.7534539699554443
    3. '==' → logprob: -3.2534539699554443
    4. ' ==' → logprob: -5.003454208374023
    5. ']=='' → logprob: -5.128454208374023
    6. '!=' → logprob: -6.253454208374023
    7. ' ]' → logprob: -7.003454208374023
    8. '=='' → logprob: -7.378454208374023
    9. ']!=' → logprob: -7.378454208374023
    10. ' !=' → logprob: -7.753454208374023

Token 57: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31834927201271057
    2. ' ==' → logprob: -2.0683493614196777
    3. '!=' → logprob: -2.1933493614196777
    4. ' !=' → logprob: -4.193349361419678
    5. '=='' → logprob: -4.318349361419678
    6. ' ' → logprob: -6.568349361419678
    7. '=' → logprob: -6.693349361419678
    8. '!='' → logprob: -7.318349361419678
    9. ' in' → logprob: -7.818349361419678
    10. '!' → logprob: -7.943349361419678

Token 58: ' '' (ID: 461)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.6412346363067627
    2. ''' → logprob: -1.1412346363067627
    3. ''C' → logprob: -2.6412346363067627
    4. ''.' → logprob: -2.8912346363067627
    5. ''A' → logprob: -5.766234397888184
    6. ''O' → logprob: -5.766234397888184
    7. ''o' → logprob: -5.766234397888184
    8. ''L' → logprob: -5.766234397888184
    9. ''S' → logprob: -6.641234397888184
    10. '"#' → logprob: -6.766234397888184

Token 59: 'c' (ID: 66)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.03764571249485016
    2. ''#' → logprob: -3.9126458168029785
    3. 'c' → logprob: -4.5376458168029785
    4. ''' → logprob: -5.7876458168029785
    5. '.' → logprob: -6.4126458168029785
    6. ''.' → logprob: -7.7876458168029785
    7. '#:' → logprob: -8.53764533996582
    8. 'C' → logprob: -8.66264533996582
    9. '1' → logprob: -9.03764533996582
    10. '.#' → logprob: -9.91264533996582

Token 60: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.003229171270504594
    2. ''' → logprob: -6.253229141235352
    3. '':
' → logprob: -6.878229141235352
    4. 'c' → logprob: -8.878229141235352
    5. ' ':' → logprob: -9.878229141235352
    6. ''):' → logprob: -10.628229141235352
    7. ':' → logprob: -11.628229141235352
    8. ' '' → logprob: -11.878229141235352
    9. '':

' → logprob: -12.003229141235352
    10. '':
' → logprob: -12.128229141235352

Token 61: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.349901407957077
    2. ' last' → logprob: -1.3499014377593994
    3. '       ' → logprob: -4.09990119934082
    4. 'last' → logprob: -4.47490119934082
    5. '               ' → logprob: -5.97490119934082
    6. ' ' → logprob: -6.59990119934082
    7. ':' → logprob: -6.59990119934082
    8. ':last' → logprob: -7.22490119934082
    9. '   ' → logprob: -7.84990119934082
    10. '[last' → logprob: -7.84990119934082

Token 62: ' ans' (ID: 3345)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.12896594405174255
    2. ' last' → logprob: -2.1289658546447754
    3. '           ' → logprob: -6.253965854644775
    4. 'j' → logprob: -10.253966331481934
    5. '               ' → logprob: -10.753966331481934
    6. ' ' → logprob: -11.253966331481934
    7. '	last' → logprob: -11.378966331481934
    8. '   ' → logprob: -11.753966331481934
    9. ' j' → logprob: -12.628966331481934
    10. '```' → logprob: -12.753966331481934

Token 63: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.010626942850649357
    2. '[' → logprob: -5.510626792907715
    3. ' =' → logprob: -5.760626792907715
    4. '=' → logprob: -5.885626792907715
    5. '=j' → logprob: -7.885626792907715
    6. 'j' → logprob: -9.635626792907715
    7. ']' → logprob: -10.135626792907715
    8. '[i' → logprob: -10.385626792907715
    9. '[:]' → logprob: -11.260626792907715
    10. ')' → logprob: -11.260626792907715

Token 64: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014279740862548351
    2. ']=' → logprob: -4.389279842376709
    3. '=' → logprob: -6.514279842376709
    4. ' =' → logprob: -8.63927936553955
    5. ' ]' → logprob: -9.26427936553955
    6. ' ' → logprob: -12.76427936553955
    7. '=j' → logprob: -13.01427936553955
    8. ',' → logprob: -13.26427936553955
    9. ')' → logprob: -13.26427936553955
    10. ']+=' → logprob: -14.13927936553955

Token 65: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889242470264435
    2. ' =' → logprob: -2.578892469406128
    3. ',' → logprob: -13.703892707824707
    4. ' ' → logprob: -14.203892707824707
    5. '=j' → logprob: -14.703892707824707
    6. '0' → logprob: -14.953892707824707
    7. '=
' → logprob: -16.95389175415039
    8. '＝' → logprob: -17.07889175415039
    9. '.=' → logprob: -17.45389175415039
    10. ')' → logprob: -17.82889175415039

Token 66: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.860340752406046e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -15.8750581741333
    4. '00' → logprob: -18.125059127807617
    5. '`' → logprob: -18.375059127807617
    6. '۰' → logprob: -18.375059127807617
    7. '000' → logprob: -18.500059127807617
    8. '<|end|>' → logprob: -18.625059127807617
    9. '```' → logprob: -18.750059127807617
    10. ' ' → logprob: -19.062559127807617

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. 'c' → logprob: -19.125001907348633
    4. 'j' → logprob: -19.250001907348633
    5. '۰' → logprob: -19.250001907348633
    6. '   ' → logprob: -19.250001907348633
    7. '00' → logprob: -19.375001907348633
    8. '000' → logprob: -19.500001907348633
    9. '０' → logprob: -20.125001907348633
    10. 'last' → logprob: -20.375001907348633

Token 68: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.6719409227371216
    2. '<|end|>' → logprob: -1.6719409227371216
    3. '
' → logprob: -1.7969409227371216
    4. '   ' → logprob: -2.296940803527832
    5. 'else' → logprob: -2.421940803527832
    6. 'last' → logprob: -2.671940803527832
    7. 'elif' → logprob: -2.796940803527832
    8. ' last' → logprob: -2.796940803527832
    9. ' else' → logprob: -3.796940803527832
    10. '           ' → logprob: -3.921940803527832

Token 69: '           ' (ID: 352)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.4968782067298889
    2. 'else' → logprob: -0.9968782067298889
    3. ' else' → logprob: -4.746878147125244
    4. ' elif' → logprob: -4.871878147125244
    5. '       ' → logprob: -5.746878147125244
    6. '<|end|>' → logprob: -6.746878147125244
    7. '   ' → logprob: -6.996878147125244
    8. '	elif' → logprob: -7.746878147125244
    9. '```' → logprob: -8.121878623962402
    10. '           ' → logprob: -9.621878623962402

Token 70: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.00016313401283696294
    2. ' last' → logprob: -9.125163078308105
    3. '           ' → logprob: -9.875163078308105
    4. '   ' → logprob: -13.375163078308105
    5. '	last' → logprob: -14.125163078308105
    6. '       ' → logprob: -15.125163078308105
    7. '               ' → logprob: -16.375164031982422
    8. '                   ' → logprob: -17.625164031982422
    9. '```' → logprob: -17.625164031982422
    10. ' ' → logprob: -18.125164031982422

Token 71: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0037226458080112934
    2. '=' → logprob: -6.003722667694092
    3. '_' → logprob: -6.878722667694092
    4. '_j' → logprob: -9.003722190856934
    5. ' =' → logprob: -10.378722190856934
    6. '=_' → logprob: -10.878722190856934
    7. '_=' → logprob: -11.003722190856934
    8. 'c' → logprob: -11.378722190856934
    9. '=j' → logprob: -12.878722190856934
    10. 'j' → logprob: -13.253722190856934

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313850998878479
    2. '=' → logprob: -1.313850998878479
    3. '=j' → logprob: -7.4388508796691895
    4. ' ' → logprob: -14.938851356506348
    5. 'j' → logprob: -15.438851356506348
    6. '＝' → logprob: -15.563851356506348
    7. ',' → logprob: -16.31385040283203
    8. '=i' → logprob: -16.31385040283203
    9. 's' → logprob: -16.56385040283203
    10. '<|end|>' → logprob: -17.31385040283203

Token 73: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0007101670489646494
    2. ' j' → logprob: -7.2507100105285645
    3. '	j' → logprob: -15.750710487365723
    4. '   ' → logprob: -16.750709533691406
    5. '0' → logprob: -17.000709533691406
    6. '$j' → logprob: -18.125709533691406
    7. ' ' → logprob: -18.625709533691406
    8. '_j' → logprob: -18.875709533691406
    9. '    ' → logprob: -19.375709533691406
    10. ':j' → logprob: -19.750709533691406

Token 74: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004991339519619942
    2. '   ' → logprob: -6.25499153137207
    3. 'elif' → logprob: -6.87999153137207
    4. ' else' → logprob: -7.25499153137207
    5. 'else' → logprob: -7.25499153137207
    6. ' elif' → logprob: -7.75499153137207
    7. '```' → logprob: -9.37999153137207
    8. '<|end|>' → logprob: -10.12999153137207
    9. ' ' → logprob: -11.12999153137207
    10. '	elif' → logprob: -11.50499153137207

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01215440221130848
    2. 'elif' → logprob: -4.762154579162598
    3. ' elif' → logprob: -6.262154579162598
    4. '   ' → logprob: -7.137154579162598
    5. '<|end|>' → logprob: -8.012154579162598
    6. 'else' → logprob: -8.387154579162598
    7. ' else' → logprob: -9.137154579162598
    8. '	elif' → logprob: -9.887154579162598
    9. '```' → logprob: -10.012154579162598
    10. ' ' → logprob: -11.387154579162598

Token 76: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.4370674788951874
    2. '       ' → logprob: -1.1870675086975098
    3. ' elif' → logprob: -4.06206750869751
    4. '   ' → logprob: -4.06206750869751
    5. 'else' → logprob: -4.31206750869751
    6. '	elif' → logprob: -7.56206750869751
    7. ' else' → logprob: -7.56206750869751
    8. '  ' → logprob: -10.562067031860352
    9. '```' → logprob: -10.937067031860352
    10. '<|end|>' → logprob: -11.687067031860352

Token 77: ' last' (ID: 2174)
  Prédit: ' last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.018187757581472397
    2. 'last' → logprob: -4.018187522888184
    3. ' ' → logprob: -10.518187522888184
    4. '   ' → logprob: -13.018187522888184
    5. ' board' → logprob: -13.143187522888184
    6. '(last' → logprob: -13.768187522888184
    7. '0' → logprob: -14.018187522888184
    8. 'board' → logprob: -14.018187522888184
    9. '	last' → logprob: -14.018187522888184
    10. ' not' → logprob: -14.143187522888184

Token 78: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -2.7014437364414334e-05
    2. '_' → logprob: -10.62502670288086
    3. '!=' → logprob: -14.25002670288086
    4. '!=-' → logprob: -14.37502670288086
    5. 'c' → logprob: -14.62502670288086
    6. '>' → logprob: -15.87502670288086
    7. ' !=' → logprob: -15.87502670288086
    8. '_j' → logprob: -16.37502670288086
    9. '-c' → logprob: -16.62502670288086
    10. '_-' → logprob: -16.62502670288086

Token 79: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.34035953879356384
    2. '!=-' → logprob: -2.3403594493865967
    3. '==' → logprob: -2.4653594493865967
    4. ' !=' → logprob: -2.4653594493865967
    5. '==-' → logprob: -4.090359687805176
    6. ' ==' → logprob: -5.965359687805176
    7. '>=' → logprob: -6.465359687805176
    8. '=' → logprob: -6.965359687805176
    9. '<' → logprob: -8.965359687805176
    10. '-' → logprob: -9.215359687805176

Token 80: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00407923199236393
    2. ' -' → logprob: -5.504079341888428
    3. ' ' → logprob: -14.75407886505127
    4. '   ' → logprob: -15.50407886505127
    5. '  ' → logprob: -16.379079818725586
    6. '−' → logprob: -17.129079818725586
    7. '```' → logprob: -17.629079818725586
    8. '	' → logprob: -17.754079818725586
    9. '-c' → logprob: -17.754079818725586
    10. '-l' → logprob: -17.754079818725586

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.500000953674316
    3. '-' → logprob: -16.062501907348633
    4. '```' → logprob: -16.062501907348633
    5. '   ' → logprob: -16.937501907348633
    6. '১' → logprob: -17.250001907348633
    7. '<|end|>' → logprob: -17.250001907348633
    8. '１' → logprob: -17.500001907348633
    9. '2' → logprob: -17.687501907348633
    10. '१' → logprob: -17.750001907348633

Token 82: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03825148195028305
    2. ':
' → logprob: -3.2882513999938965
    3. '           ' → logprob: -9.163251876831055
    4. '       ' → logprob: -10.413251876831055
    5. '   ' → logprob: -10.413251876831055
    6. ' :' → logprob: -11.788251876831055
    7. ',' → logprob: -11.913251876831055
    8. '):
' → logprob: -12.038251876831055
    9. ' and' → logprob: -12.038251876831055
    10. '):' → logprob: -12.413251876831055

Token 83: '           ' (ID: 352)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5638585090637207
    2. '           ' → logprob: -1.0638585090637207
    3. 'ans' → logprob: -2.5638585090637207
    4. '       ' → logprob: -5.313858509063721
    5. '   ' → logprob: -5.938858509063721
    6. '	ans' → logprob: -7.313858509063721
    7. '               ' → logprob: -8.188858032226562
    8. '(ans' → logprob: -9.188858032226562
    9. '<|end|>' → logprob: -10.063858032226562
    10. '_ans' → logprob: -10.188858032226562

Token 84: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.18380220234394073
    2. 'ans' (adapté à ' ans') → logprob: -1.8088022470474243
    3. '           ' → logprob: -5.933802127838135
    4. '   ' → logprob: -7.558802127838135
    5. 'j' → logprob: -8.558802604675293
    6. '	ans' → logprob: -8.558802604675293
    7. '    ' → logprob: -8.933802604675293
    8. ' j' → logprob: -9.058802604675293
    9. '            ' → logprob: -9.683802604675293
    10. '       ' → logprob: -10.433802604675293

Token 85: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0001968649885384366
    2. '[' → logprob: -8.62519645690918
    3. 'j' → logprob: -11.25019645690918
    4. ' [' → logprob: -13.62519645690918
    5. '[i' → logprob: -14.50019645690918
    6. '=' → logprob: -14.62519645690918
    7. '][' → logprob: -15.25019645690918
    8. '[J' → logprob: -15.25019645690918
    9. '[min' → logprob: -15.25019645690918
    10. '```' → logprob: -15.50019645690918

Token 86: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12840645015239716
    2. ' =' → logprob: -2.128406524658203
    3. ']' → logprob: -6.878406524658203
    4. ')' → logprob: -8.128406524658203
    5. '-' → logprob: -9.628406524658203
    6. ']=' → logprob: -10.628406524658203
    7. ' -' → logprob: -11.003406524658203
    8. ' ' → logprob: -11.378406524658203
    9. '   ' → logprob: -11.878406524658203
    10. '>' → logprob: -11.878406524658203

Token 87: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519465982913971
    2. ' =' → logprob: -1.5019465684890747
    3. '-=' → logprob: -11.376946449279785
    4. ' -=' → logprob: -13.001946449279785
    5. '-' → logprob: -13.376946449279785
    6. '+=' → logprob: -13.751946449279785
    7. ' -' → logprob: -15.001946449279785
    8. '.=' → logprob: -15.251946449279785
    9. '=j' → logprob: -15.626946449279785
    10. '＝' → logprob: -15.876946449279785

Token 88: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.42877069115638733
    2. ' j' → logprob: -1.053770661354065
    3. ' ans' → logprob: -9.803771018981934
    4. 'ans' → logprob: -11.678771018981934
    5. '	j' → logprob: -13.053771018981934
    6. ' ' → logprob: -13.553771018981934
    7. '```' → logprob: -14.678771018981934
    8. '_j' → logprob: -15.053771018981934
    9. '(j' → logprob: -15.053771018981934
    10. ' ' → logprob: -15.491271018981934

Token 89: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20354172587394714
    2. '-' → logprob: -1.7035417556762695
    3. '-last' → logprob: -6.2035417556762695
    4. ' ' → logprob: -9.95354175567627
    5. '-LAST' → logprob: -11.20354175567627
    6. '   ' → logprob: -11.57854175567627
    7. '`' → logprob: -11.95354175567627
    8. '```' → logprob: -12.20354175567627
    9. ' -
' → logprob: -12.45354175567627
    10. ' ' → logprob: -12.45354175567627

Token 90: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.011048170737922192
    2. ' last' → logprob: -4.511048316955566
    3. '	last' → logprob: -15.511048316955566
    4. '[last' → logprob: -16.88604736328125
    5. '(last' → logprob: -17.51104736328125
    6. '   ' → logprob: -17.88604736328125
    7. '_last' → logprob: -18.13604736328125
    8. ' ' → logprob: -18.26104736328125
    9. 'Last' → logprob: -18.88604736328125
    10. ':last' → logprob: -19.01104736328125

Token 91: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -3.8889261304575484e-06
    2. '_' → logprob: -12.875003814697266
    3. 'c' → logprob: -13.750003814697266
    4. '<|end|>' → logprob: -16.250003814697266
    5. '_j' → logprob: -18.375003814697266
    6. '```' → logprob: -18.625003814697266
    7. ' _' → logprob: -18.875003814697266
    8. '_s' → logprob: -19.500003814697266
    9. '‌' → logprob: -19.625003814697266
    10. ''_' → logprob: -19.750003814697266

Token 92: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016806557541713119
    2. 'print' → logprob: -6.751680850982666
    3. ' print' → logprob: -7.751680850982666
    4. '       ' → logprob: -10.376680374145508
    5. '	print' → logprob: -11.501680374145508
    6. '<|end|>' → logprob: -11.501680374145508
    7. '   ' → logprob: -11.626680374145508
    8. '    ' → logprob: -12.001680374145508
    9. '    
' → logprob: -12.876680374145508
    10. '[' → logprob: -12.876680374145508

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003669913625344634
    2. 'print' → logprob: -5.628669738769531
    3. ' print' → logprob: -10.128669738769531
    4. '<|end|>' → logprob: -11.128669738769531
    5. '       ' → logprob: -11.753669738769531
    6. '```' → logprob: -12.753669738769531
    7. '	print' → logprob: -13.753669738769531
    8. '    
' → logprob: -13.753669738769531
    9. '   ' → logprob: -14.253669738769531
    10. 'for' → logprob: -14.753669738769531

Token 94: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3935666084289551
    2. '   ' → logprob: -1.143566608428955
    3. ' print' → logprob: -5.018566608428955
    4. ' ' → logprob: -10.643566131591797
    5. 'for' → logprob: -10.893566131591797
    6. '```' → logprob: -12.143566131591797
    7. '       ' → logprob: -12.643566131591797
    8. ' for' → logprob: -13.018566131591797
    9. '  ' → logprob: -13.143566131591797
    10. '	print' → logprob: -13.268566131591797

Token 95: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.0012645211536437273
    2. '(' → logprob: -7.001264572143555
    3. '('' → logprob: -8.251264572143555
    4. '(ans' → logprob: -9.501264572143555
    5. '("' → logprob: -11.126264572143555
    6. '(*)' → logprob: -14.251264572143555
    7. ' (*' → logprob: -14.376264572143555
    8. '()' → logprob: -14.376264572143555
    9. '((*' → logprob: -14.876264572143555
    10. '(*(' → logprob: -15.126264572143555

Token 96: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -4.961759259458631e-06
    2. ' ans' → logprob: -12.250004768371582
    3. '(ans' → logprob: -16.7500057220459
    4. 'answer' → logprob: -20.2500057220459
    5. '	ans' → logprob: -20.3750057220459
    6. '   ' → logprob: -20.6250057220459
    7. ')' → logprob: -21.7500057220459
    8. ' ' → logprob: -22.1250057220459
    9. 'ANS' → logprob: -22.6250057220459
    10. 'Ans' → logprob: -22.8750057220459

Token 97: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.875
    3. ')
' → logprob: -17.25
    4. ')`' → logprob: -17.25
    5. '))' → logprob: -18.5
    6. ')#' → logprob: -19.25
    7. ')}' → logprob: -19.5
    8. '),' → logprob: -19.75
    9. '')' → logprob: -20.25
    10. ')**' → logprob: -20.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 95
Tokens correctement prédits (1ère position, stricte): 37
Tokens correctement prédits (1ère position, avec adaptation): 41
Tokens correctement prédits (top 10): 80
Précision stricte (1ère position): 38.95%
Précision adaptée (1ère position): 43.16%
Précision (top 10): 84.21%
================================================================================
