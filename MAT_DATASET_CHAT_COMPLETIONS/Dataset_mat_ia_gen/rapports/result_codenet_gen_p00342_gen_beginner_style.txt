================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:12:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
a = list(map(int, input().split()))

max_value = -10**20
for i in range(N):
    for j in range(i+1, N):
        A = a[i]
        B = a[j]
        numerator = A + B
        for k in range(N):
            if k == i or k == j:
                continue
            for l in range(k+1, N):
                if l == i or l == j:
                    continue
                C = a[k]
                D = a[l]
                denominator = C - D
                if denominator != 0:
                    val = numerator / denominator
                    if val > max_value:
                        max_value = val
                # Also check the other order to get all combinations
                denominator = D - C
                if denominator != 0:
                    val = numerator / denominator
                    if val > max_value:
                        max_value = val

print(f"{max_value:.6f}")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003063838230445981
    2. '('' → logprob: -8.500306129455566
    3. '(N' → logprob: -10.000306129455566
    4. '(
' → logprob: -10.750306129455566
    5. '(input' → logprob: -11.250306129455566
    6. ''' → logprob: -12.125306129455566
    7. '("("' → logprob: -12.375306129455566
    8. '```' → logprob: -12.375306129455566
    9. '`' → logprob: -12.750306129455566
    10. '(`' → logprob: -13.000306129455566

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18160328269004822
    2. ')' → logprob: -1.9316033124923706
    3. '()' → logprob: -4.05660343170166
    4. '())' → logprob: -5.93160343170166
    5. '(
' → logprob: -8.18160343170166
    6. '```' → logprob: -8.55660343170166
    7. '")' → logprob: -9.43160343170166
    8. '))' → logprob: -9.55660343170166
    9. '('' → logprob: -9.55660343170166
    10. '(

' → logprob: -9.93160343170166

Token 5: 'a' (ID: 64)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5951576232910156
    2. 'if' → logprob: -1.8451576232910156
    3. 'a' → logprob: -3.0951576232910156
    4. 's' → logprob: -3.0951576232910156
    5. 'i' → logprob: -3.3451576232910156
    6. '`' → logprob: -3.8451576232910156
    7. 'x' → logprob: -3.9701576232910156
    8. '[' → logprob: -3.9701576232910156
    9. ''' → logprob: -4.220157623291016
    10. '\n' → logprob: -4.595157623291016

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000689082604367286
    2. '\[' → logprob: -8.625689506530762
    3. '[i' → logprob: -9.125689506530762
    4. '[a' → logprob: -9.125689506530762
    5. '+' → logprob: -9.875689506530762
    6. '[]' → logprob: -10.250689506530762
    7. '.' → logprob: -10.500689506530762
    8. '[r' → logprob: -10.625689506530762
    9. 'a' → logprob: -10.750689506530762
    10. '=' → logprob: -10.875689506530762

Token 7: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7660950422286987
    2. ' []' → logprob: -1.5160950422286987
    3. 'list' → logprob: -2.2660951614379883
    4. ' [' → logprob: -2.5160951614379883
    5. ' list' → logprob: -2.7660951614379883
    6. '[int' → logprob: -3.5160951614379883
    7. '[' → logprob: -3.8910951614379883
    8. '[input' → logprob: -4.766095161437988
    9. '0' → logprob: -5.891095161437988
    10. 'input' → logprob: -6.141095161437988

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018471283838152885
    2. '(a' → logprob: -7.251847267150879
    3. '(range' → logprob: -7.376847267150879
    4. '(input' → logprob: -9.251847267150879
    5. '```' → logprob: -9.501847267150879
    6. '()' → logprob: -9.751847267150879
    7. 'a' → logprob: -10.001847267150879
    8. '(
' → logprob: -10.876847267150879
    9. '<|end|>' → logprob: -11.001847267150879
    10. '(open' → logprob: -11.001847267150879

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.05717083439230919
    2. '(' → logprob: -3.182170867919922
    3. '(str' → logprob: -4.557170867919922
    4. '(input' → logprob: -6.557170867919922
    5. '(lambda' → logprob: -7.057170867919922
    6. '```' → logprob: -8.182170867919922
    7. 'int' → logprob: -8.432170867919922
    8. ')' → logprob: -8.557170867919922
    9. '<int' → logprob: -8.932170867919922
    10. '[int' → logprob: -8.932170867919922

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.021636752411723137
    2. '(' → logprob: -3.896636724472046
    3. ',input' → logprob: -7.771636962890625
    4. '))' → logprob: -8.396636962890625
    5. ')' → logprob: -8.896636962890625
    6. 'input' → logprob: -9.521636962890625
    7. '=input' → logprob: -10.146636962890625
    8. ' (' → logprob: -10.646636962890625
    9. '(int' → logprob: -10.771636962890625
    10. '[input' → logprob: -11.146636962890625

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006757528521120548
    2. ' input' → logprob: -5.006757736206055
    3. '(input' → logprob: -10.131757736206055
    4. ',input' → logprob: -13.631757736206055
    5. '=input' → logprob: -14.881757736206055
    6. ')' → logprob: -15.006757736206055
    7. '<input' → logprob: -15.506757736206055
    8. '```' → logprob: -16.256757736206055
    9. '	input' → logprob: -16.506757736206055
    10. '[input' → logprob: -17.006757736206055

Token 12: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.6071229577064514
    2. '())' → logprob: -0.9821229577064514
    3. '()' → logprob: -2.7321228981018066
    4. '().' → logprob: -5.232122898101807
    5. ')' → logprob: -5.357122898101807
    6. '))' → logprob: -6.357122898101807
    7. '()));' → logprob: -6.482122898101807
    8. '(' → logprob: -7.482122898101807
    9. '()>' → logprob: -7.857122898101807
    10. '());' → logprob: -7.982122898101807

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00035536551149562
    2. 'strip' → logprob: -8.00035572052002
    3. 'rstrip' → logprob: -11.00035572052002
    4. ' split' → logprob: -12.75035572052002
    5. '(split' → logprob: -15.25035572052002
    6. 'spl' → logprob: -16.500354766845703
    7. ')' → logprob: -17.125354766845703
    8. 's' → logprob: -18.500354766845703
    9. 'sp' → logprob: -19.000354766845703
    10. '```' → logprob: -19.125354766845703

Token 14: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.17665930092334747
    2. ')' → logprob: -1.926659345626831
    3. '()))' → logprob: -4.301659107208252
    4. '())' → logprob: -6.676659107208252
    5. ')))' → logprob: -7.051659107208252
    6. '(' → logprob: -7.676659107208252
    7. '()' → logprob: -9.17665958404541
    8. ''))' → logprob: -11.17665958404541
    9. ')>' → logprob: -11.80165958404541
    10. '())))' → logprob: -11.80165958404541

Token 15: 'max' (ID: 3228)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4757051169872284
    2. 'max' → logprob: -2.475705146789551
    3. 'a' → logprob: -2.600705146789551
    4. 'c' → logprob: -3.225705146789551
    5. 'sum' → logprob: -3.225705146789551
    6. 'count' → logprob: -3.600705146789551
    7. 'm' → logprob: -3.725705146789551
    8. 'result' → logprob: -3.975705146789551
    9. 'b' → logprob: -4.225705146789551
    10. 'total' → logprob: -4.475705146789551

Token 16: '_value' (ID: 6734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20295576751232147
    2. '_' → logprob: -1.702955722808838
    3. '(a' → logprob: -7.577955722808838
    4. '(_)' → logprob: -7.702955722808838
    5. '_a' → logprob: -8.077956199645996
    6. 'a' → logprob: -9.702956199645996
    7. '_max' → logprob: -9.827956199645996
    8. '_parent' → logprob: -10.577956199645996
    9. '(max' → logprob: -10.952956199645996
    10. '_sum' → logprob: -11.077956199645996

Token 17: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.46278709173202515
    2. '(' → logprob: -1.21278715133667
    3. '[' → logprob: -3.08778715133667
    4. ')' → logprob: -4.33778715133667
    5. '()' → logprob: -4.58778715133667
    6. '(_)' → logprob: -6.71278715133667
    7. '_max' → logprob: -7.58778715133667
    8. '```' → logprob: -7.71278715133667
    9. '=' → logprob: -8.212786674499512
    10. 's' → logprob: -8.212786674499512

Token 18: ' -' (ID: 533)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.37715229392051697
    2. 'max' → logprob: -1.2521523237228394
    3. 'a' → logprob: -4.377152442932129
    4. '0' → logprob: -4.752152442932129
    5. ' a' → logprob: -5.877152442932129
    6. ' -' → logprob: -6.252152442932129
    7. '-' → logprob: -7.002152442932129
    8. ' ' → logprob: -7.002152442932129
    9. ' float' → logprob: -8.002152442932129
    10. 'float' → logprob: -8.627152442932129

Token 19: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.47994038462638855
    2. '10' → logprob: -0.9799404144287109
    3. '100' → logprob: -5.354940414428711
    4. '1' → logprob: -7.104940414428711
    5. '999' → logprob: -8.979940414428711
    6. 'int' → logprob: -9.104940414428711
    7. '(' → logprob: -10.979940414428711
    8. ' float' → logprob: -10.979940414428711
    9. '(float' → logprob: -11.604940414428711
    10. '101' → logprob: -11.729940414428711

Token 20: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009606745094060898
    2. '7' → logprob: -4.884606838226318
    3. '8' → logprob: -7.134606838226318
    4. '**' → logprob: -7.384606838226318
    5. '00' → logprob: -7.884606838226318
    6. '000' → logprob: -9.00960636138916
    7. '6' → logprob: -10.25960636138916
    8. '9' → logprob: -11.00960636138916
    9. ' ' → logprob: -11.13460636138916
    10. '1' → logprob: -12.00960636138916

Token 21: '20' (ID: 455)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.11905723810195923
    2. '10' → logprob: -2.2440571784973145
    3. '15' → logprob: -5.7440571784973145
    4. '18' → logprob: -5.9940571784973145
    5. '12' → logprob: -8.244057655334473
    6. '6' → logprob: -9.119057655334473
    7. '7' → logprob: -9.619057655334473
    8. '8' → logprob: -10.369057655334473
    9. '5' → logprob: -11.119057655334473
    10. '20' → logprob: -11.119057655334473

Token 22: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9753609895706177
    2. ' 
' → logprob: -1.2253609895706177
    3. '<|end|>' → logprob: -2.225360870361328
    4. 'for' → logprob: -2.350360870361328
    5. ' for' → logprob: -3.225360870361328
    6. ' ' → logprob: -3.350360870361328
    7. '  
' → logprob: -4.350360870361328
    8. '
' → logprob: -4.850360870361328
    9. '*' → logprob: -5.100360870361328
    10. ',' → logprob: -5.600360870361328

Token 23: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09625430405139923
    2. '
' → logprob: -2.471254348754883
    3. ' for' → logprob: -5.346254348754883
    4. '\n' → logprob: -7.096254348754883
    5. 'max' → logprob: -7.096254348754883
    6. '
' → logprob: -8.221254348754883
    7. '\' → logprob: -8.471254348754883
    8. '```' → logprob: -8.971254348754883
    9. ' 
' → logprob: -9.596254348754883
    10. '

' → logprob: -9.596254348754883

Token 24: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.013908907771110535
    2. ' _' → logprob: -4.888908863067627
    3. ' ' → logprob: -5.388908863067627
    4. '_' → logprob: -6.638908863067627
    5. 'i' → logprob: -8.013909339904785
    6. ' x' → logprob: -9.763909339904785
    7. ' a' → logprob: -11.888909339904785
    8. ' value' → logprob: -12.763909339904785
    9. ' ‌' → logprob: -12.888909339904785
    10. ' ' → logprob: -13.763909339904785

Token 25: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02356467954814434
    2. 'in' → logprob: -3.773564577102661
    3. ' ' → logprob: -8.273564338684082
    4. 'n' → logprob: -10.273564338684082
    5. '  ' → logprob: -11.648564338684082
    6. '+' → logprob: -12.148564338684082
    7. ',' → logprob: -13.023564338684082
    8. 'range' → logprob: -13.023564338684082
    9. '	in' → logprob: -13.398564338684082
    10. '0' → logprob: -13.773564338684082

Token 26: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2815708816051483
    2. 'range' → logprob: -1.4065709114074707
    3. 'a' → logprob: -8.281570434570312
    4. ' a' → logprob: -8.781570434570312
    5. ' ' → logprob: -11.781570434570312
    6. '	range' → logprob: -12.906570434570312
    7. '  ' → logprob: -14.031570434570312
    8. '   ' → logprob: -14.656570434570312
    9. '```' → logprob: -14.656570434570312
    10. ' xrange' → logprob: -15.156570434570312

Token 27: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07908377051353455
    2. '(N' → logprob: -2.5790836811065674
    3. '(len' → logprob: -9.204083442687988
    4. '(n' → logprob: -9.954083442687988
    5. '(
' → logprob: -10.704083442687988
    6. ' (' → logprob: -11.829083442687988
    7. '(i' → logprob: -11.954083442687988
    8. '(range' → logprob: -13.204083442687988
    9. '(I' → logprob: -13.579083442687988
    10. '(A' → logprob: -13.829083442687988

Token 28: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006821724819019437
    2. '):
' → logprob: -7.875682353973389
    3. '-' → logprob: -9.00068187713623
    4. ' ):' → logprob: -9.12568187713623
    5. '+' → logprob: -10.50068187713623
    6. ')' → logprob: -10.50068187713623
    7. ':' → logprob: -12.25068187713623
    8. ' -' → logprob: -12.50068187713623
    9. '):
' → logprob: -13.12568187713623
    10. ' ' → logprob: -13.50068187713623

Token 29: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.010623176582157612
    2. '    ' → logprob: -5.135622978210449
    3. '<|end|>' → logprob: -6.010622978210449
    4. ' 
' → logprob: -7.135622978210449
    5. '     
' → logprob: -7.885622978210449
    6. ' for' → logprob: -8.01062297821045
    7. '   ' → logprob: -8.51062297821045
    8. '  ' → logprob: -9.13562297821045
    9. 'for' → logprob: -9.63562297821045
    10. '    
' → logprob: -9.76062297821045

Token 30: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06398146599531174
    2. 'for' (adapté à ' for') → logprob: -2.813981533050537
    3. '   ' → logprob: -6.438981533050537
    4. ' if' → logprob: -8.813981056213379
    5. ' a' → logprob: -9.188981056213379
    6. ' ' → logprob: -9.438981056213379
    7. ' max' → logprob: -10.688981056213379
    8. '    ' → logprob: -11.188981056213379
    9. 'if' → logprob: -11.313981056213379
    10. 'a' → logprob: -11.563981056213379

Token 31: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.706859290599823
    2. ' j' → logprob: -0.706859290599823
    3. ' range' → logprob: -4.581859111785889
    4. 'range' → logprob: -5.706859111785889
    5. '<|end|>' → logprob: -11.081859588623047
    6. '   ' → logprob: -11.581859588623047
    7. '_j' → logprob: -12.081859588623047
    8. ')' → logprob: -12.081859588623047
    9. '_range' → logprob: -12.581859588623047
    10. '	j' → logprob: -12.706859588623047

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004769022576510906
    2. 'in' → logprob: -5.3797688484191895
    3. 'range' → logprob: -9.379769325256348
    4. ' range' → logprob: -10.004769325256348
    5. '   ' → logprob: -11.629769325256348
    6. ' ' → logprob: -12.754769325256348
    7. '(range' → logprob: -12.879769325256348
    8. '(' → logprob: -13.379769325256348
    9. '  ' → logprob: -15.004769325256348
    10. ' i' → logprob: -15.004769325256348

Token 33: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3872668743133545
    2. 'range' → logprob: -1.1372668743133545
    3. '(range' → logprob: -8.137267112731934
    4. ' i' → logprob: -9.762267112731934
    5. 'i' → logprob: -10.512267112731934
    6. '(i' → logprob: -11.262267112731934
    7. ' ' → logprob: -13.137267112731934
    8. '   ' → logprob: -14.137267112731934
    9. '	range' → logprob: -14.387267112731934
    10. '(N' → logprob: -14.387267112731934

Token 34: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.564300537109375
    2. '(N' → logprob: -1.064300537109375
    3. '(' → logprob: -2.564300537109375
    4. '(range' → logprob: -4.689300537109375
    5. '(I' → logprob: -10.064300537109375
    6. ' range' → logprob: -10.439300537109375
    7. 'range' → logprob: -11.564300537109375
    8. '(M' → logprob: -12.189300537109375
    9. '(n' → logprob: -12.564300537109375
    10. '(A' → logprob: -12.689300537109375

Token 35: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0010370950913056731
    2. ' +' → logprob: -6.876037120819092
    3. ',' → logprob: -13.501036643981934
    4. '+i' → logprob: -14.126036643981934
    5. '1' → logprob: -14.501036643981934
    6. '+
' → logprob: -14.626036643981934
    7. '+,' → logprob: -15.001036643981934
    8. '+)' → logprob: -15.126036643981934
    9. '   ' → logprob: -15.376036643981934
    10. '+j' → logprob: -16.50103759765625

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.111979357432574e-05
    2. 'N' → logprob: -9.87507152557373
    3. ' ' → logprob: -10.87507152557373
    4. ' N' → logprob: -14.50007152557373
    5. ')' → logprob: -16.250070571899414
    6. '```' → logprob: -16.750070571899414
    7. '2' → logprob: -16.875070571899414
    8. 'i' → logprob: -17.125070571899414
    9. '   ' → logprob: -17.375070571899414
    10. '+' → logprob: -17.500070571899414

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009780287509784102
    2. ',N' → logprob: -7.500977993011475
    3. 'N' → logprob: -8.125978469848633
    4. ' ,' → logprob: -9.500978469848633
    5. ',n' → logprob: -11.625978469848633
    6. 'to' → logprob: -11.625978469848633
    7. ')' → logprob: -11.625978469848633
    8. '   ' → logprob: -12.000978469848633
    9. ' N' → logprob: -12.375978469848633
    10. '    ' → logprob: -13.250978469848633

Token 38: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.000712074339389801
    2. ' N' → logprob: -7.250711917877197
    3. '   ' → logprob: -13.125712394714355
    4. ' ' → logprob: -16.25071144104004
    5. '	N' → logprob: -16.87571144104004
    6. ')' → logprob: -17.62571144104004
    7. '  ' → logprob: -18.25071144104004
    8. '    ' → logprob: -18.62571144104004
    9. '```' → logprob: -19.50071144104004
    10. '<N' → logprob: -19.75071144104004

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -7.922563963802531e-05
    2. '):
' → logprob: -10.000079154968262
    3. ':' → logprob: -10.375079154968262
    4. ')' → logprob: -13.750079154968262
    5. '+' → logprob: -14.500079154968262
    6. ' ):' → logprob: -15.000079154968262
    7. '   ' → logprob: -15.250079154968262
    8. '():' → logprob: -15.750079154968262
    9. '}:' → logprob: -16.500080108642578
    10. '):
' → logprob: -16.500080108642578

Token 40: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9669511318206787
    2. ' ' → logprob: -1.0919511318206787
    3. '   ' → logprob: -1.4669511318206787
    4. '    ' → logprob: -4.216951370239258
    5. '       ' → logprob: -4.341951370239258
    6. ' 
' → logprob: -5.091951370239258
    7. ' :' → logprob: -5.216951370239258
    8. '    
' → logprob: -5.716951370239258
    9. '  ' → logprob: -5.966951370239258
    10. ',' → logprob: -6.966951370239258

Token 41: ' A' (ID: 355)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.46587473154067993
    2. ' if' → logprob: -1.2158746719360352
    3. ' 
' → logprob: -2.715874671936035
    4. 'if' → logprob: -5.715874671936035
    5. '           ' → logprob: -6.340874671936035
    6. ' max' → logprob: -6.715874671936035
    7. '   ' → logprob: -7.215874671936035
    8. '    
' → logprob: -8.340874671936035
    9. '            
' → logprob: -8.340874671936035
    10. '    ' → logprob: -8.465874671936035

Token 42: ' =' (ID: 314)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.12915296852588654
    2. '[j' → logprob: -2.12915301322937
    3. '[' → logprob: -6.254152774810791
    4. '[I' → logprob: -8.87915325164795
    5. '[a' → logprob: -9.87915325164795
    6. 'max' → logprob: -10.37915325164795
    7. '[A' → logprob: -10.75415325164795
    8. 'i' → logprob: -10.87915325164795
    9. '[max' → logprob: -11.12915325164795
    10. 'j' → logprob: -12.37915325164795

Token 43: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008003469556570053
    2. ' a' → logprob: -4.883003234863281
    3. 'max' → logprob: -8.508003234863281
    4. 'abs' → logprob: -9.008003234863281
    5. ' abs' → logprob: -10.383003234863281
    6. ' max' → logprob: -10.508003234863281
    7. ' ' → logprob: -12.383003234863281
    8. '(a' → logprob: -12.383003234863281
    9. '   ' → logprob: -13.133003234863281
    10. 'A' → logprob: -14.133003234863281

Token 44: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003523098537698388
    2. '[j' → logprob: -6.128522872924805
    3. '[' → logprob: -6.628522872924805
    4. '[I' → logprob: -11.878522872924805
    5. '[a' → logprob: -12.753522872924805
    6. 'i' → logprob: -13.128522872924805
    7. ' [' → logprob: -14.503522872924805
    8. '[A' → logprob: -14.878522872924805
    9. '[
' → logprob: -15.003522872924805
    10. '```' → logprob: -15.378522872924805

Token 45: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006901851389557123
    2. ']+' → logprob: -5.381901741027832
    3. ']-' → logprob: -6.756901741027832
    4. ']*' → logprob: -7.006901741027832
    5. ' ]' → logprob: -9.506901741027832
    6. '+' → logprob: -10.131901741027832
    7. '-' → logprob: -10.506901741027832
    8. ')' → logprob: -11.256901741027832
    9. ']^' → logprob: -11.381901741027832
    10. '[' → logprob: -11.506901741027832

Token 46: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10339374840259552
    2. ' +' → logprob: -2.478393793106079
    3. '-' → logprob: -4.8533935546875
    4. '*' → logprob: -5.7283935546875
    5. ' -' → logprob: -6.4783935546875
    6. ' *' → logprob: -6.9783935546875
    7. '+j' → logprob: -8.2283935546875
    8. ' ' → logprob: -8.6033935546875
    9. '<|end|>' → logprob: -9.2283935546875
    10. '+
' → logprob: -10.2283935546875

Token 47: ' B' (ID: 418)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2661806344985962
    2. '-' → logprob: -2.1411805152893066
    3. ' +' → logprob: -2.5161805152893066
    4. '*' → logprob: -4.391180515289307
    5. ' -' → logprob: -4.391180515289307
    6. ' ' → logprob: -5.391180515289307
    7. ' *' → logprob: -6.266180515289307
    8. '^' → logprob: -6.641180515289307
    9. '|' → logprob: -7.766180515289307
    10. 'a' → logprob: -7.891180515289307

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048598047345876694
    2. '=' → logprob: -3.048598051071167
    3. ' ' → logprob: -12.798598289489746
    4. ',' → logprob: -12.798598289489746
    5. ')' → logprob: -13.423598289489746
    6. 'a' → logprob: -14.048598289489746
    7. '=a' → logprob: -14.298598289489746
    8. '<|end|>' → logprob: -14.423598289489746
    9. '.' → logprob: -15.048598289489746
    10. '[' → logprob: -15.548598289489746

Token 49: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3870841860771179
    2. ' a' → logprob: -1.1370842456817627
    3. ' ' → logprob: -8.762084007263184
    4. ' -' → logprob: -12.137084007263184
    5. '   ' → logprob: -12.137084007263184
    6. '    ' → logprob: -12.262084007263184
    7. '-' → logprob: -12.387084007263184
    8. '+' → logprob: -12.387084007263184
    9. ' +' → logprob: -12.387084007263184
    10. '	a' → logprob: -12.762084007263184

Token 50: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.551721889991313e-05
    2. '[' → logprob: -9.750065803527832
    3. '[i' → logprob: -12.125065803527832
    4. ' [' → logprob: -14.500065803527832
    5. 'j' → logprob: -15.000065803527832
    6. '```' → logprob: -15.625065803527832
    7. '[a' → logprob: -16.000064849853516
    8. '   ' → logprob: -16.250064849853516
    9. '\[' → logprob: -16.375064849853516
    10. '[
' → logprob: -16.500064849853516

Token 51: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.057026710361242294
    2. ')
' → logprob: -3.0570266246795654
    3. ']' → logprob: -5.0570268630981445
    4. '-' → logprob: -7.5570268630981445
    5. '])' → logprob: -7.5570268630981445
    6. '**' → logprob: -8.307026863098145
    7. ']
' → logprob: -8.432026863098145
    8. ')**' → logprob: -8.682026863098145
    9. '       ' → logprob: -9.557026863098145
    10. ')]' → logprob: -9.682026863098145

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2784576714038849
    2. '        
' → logprob: -1.9034576416015625
    3. ' 
' → logprob: -2.9034576416015625
    4. '
' → logprob: -4.7784576416015625
    5. ' ' → logprob: -5.0284576416015625
    6. ' if' → logprob: -5.1534576416015625
    7. '  
' → logprob: -5.2784576416015625
    8. '<|end|>' → logprob: -5.6534576416015625
    9. 'if' → logprob: -6.2784576416015625
    10. '        ' → logprob: -6.7784576416015625

Token 53: ' numerator' (ID: 149054)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3805767893791199
    2. 'if' → logprob: -1.3805768489837646
    3. 'max' → logprob: -3.7555768489837646
    4. ' max' → logprob: -4.5055766105651855
    5. ' ' → logprob: -4.8805766105651855
    6. 'result' → logprob: -5.0055766105651855
    7. ' 
' → logprob: -5.7555766105651855
    8. 'C' → logprob: -6.2555766105651855
    9. 'product' → logprob: -6.5055766105651855
    10. '        
' → logprob: -6.6305766105651855

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013097062706947327
    2. '=' → logprob: -4.388097286224365
    3. ' ' → logprob: -8.638096809387207
    4. ' *' → logprob: -8.763096809387207
    5. ' +=' → logprob: -9.888096809387207
    6. ' -' → logprob: -10.013096809387207
    7. '-' → logprob: -10.763096809387207
    8. 's' → logprob: -10.888096809387207
    9. '*' → logprob: -11.013096809387207
    10. '   ' → logprob: -11.013096809387207

Token 55: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.5111866593360901
    2. 'A' → logprob: -1.5111865997314453
    3. ' B' → logprob: -2.8861865997314453
    4. ' (' → logprob: -3.2611865997314453
    5. ' abs' → logprob: -3.6361865997314453
    6. 'B' → logprob: -3.8861865997314453
    7. '(A' → logprob: -4.386186599731445
    8. ' max' → logprob: -4.886186599731445
    9. 'abs' → logprob: -5.511186599731445
    10. 'a' → logprob: -5.761186599731445

Token 56: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.3737645149230957
    2. ' -' → logprob: -1.3737645149230957
    3. ' +' → logprob: -1.8737645149230957
    4. '+' → logprob: -1.8737645149230957
    5. ' *' → logprob: -1.9987645149230957
    6. '-' → logprob: -3.1237645149230957
    7. '**' → logprob: -5.373764514923096
    8. '+B' → logprob: -6.623764514923096
    9. ' ' → logprob: -8.248764038085938
    10. '-B' → logprob: -8.373764038085938

Token 57: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.09069664031267166
    2. ' B' → logprob: -2.4656965732574463
    3. '2' → logprob: -7.590696811676025
    4. ' ' → logprob: -8.215696334838867
    5. 'a' → logprob: -8.340696334838867
    6. '(' → logprob: -8.590696334838867
    7. '10' → logprob: -9.215696334838867
    8. ' (' → logprob: -9.215696334838867
    9. ' a' → logprob: -9.840696334838867
    10. '1' → logprob: -9.965696334838867

Token 58: '
' (ID: 198)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.45198702812194824
    2. ' ' → logprob: -3.0769870281219482
    3. '
' → logprob: -3.2019870281219482
    4. '*' → logprob: -3.2019870281219482
    5. ' +' → logprob: -3.2019870281219482
    6. '-' → logprob: -3.7019870281219482
    7. '+' → logprob: -3.9519870281219482
    8. ' *' → logprob: -4.076987266540527
    9. ' -' → logprob: -4.076987266540527
    10. '<|end|>' → logprob: -4.076987266540527

Token 59: '       ' (ID: 309)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.8402056097984314
    2. ' ' → logprob: -1.9652056694030762
    3. '*' → logprob: -2.840205669403076
    4. ')' → logprob: -2.965205669403076
    5. ' **' → logprob: -3.090205669403076
    6. ' 
' → logprob: -3.090205669403076
    7. '  
' → logprob: -3.215205669403076
    8. '       ' → logprob: -3.215205669403076
    9. ' *' → logprob: -3.840205669403076
    10. '<|end|>' → logprob: -3.965205669403076

Token 60: ' for' (ID: 395)
  Prédit: ' denominator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' denominator' → logprob: -0.138167604804039
    2. '(' → logprob: -3.2631676197052
    3. ' (' → logprob: -3.2631676197052
    4. '2' → logprob: -4.138167381286621
    5. 'den' → logprob: -4.638167381286621
    6. ' ' → logprob: -5.638167381286621
    7. '1' → logprob: -5.888167381286621
    8. ' numerator' → logprob: -6.388167381286621
    9. '**' → logprob: -6.513167381286621
    10. '(A' → logprob: -6.763167381286621

Token 61: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02732020430266857
    2. ' k' → logprob: -3.652320146560669
    3. ' in' → logprob: -8.52731990814209
    4. 'x' → logprob: -9.02731990814209
    5. 'l' → logprob: -9.15231990814209
    6. 'a' → logprob: -9.40231990814209
    7. ' ' → logprob: -9.52731990814209
    8. '```' → logprob: -9.52731990814209
    9. 'd' → logprob: -10.08981990814209
    10. 'in' → logprob: -10.15231990814209

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0024484232999384403
    2. 'in' → logprob: -6.127448558807373
    3. 'range' → logprob: -8.877448081970215
    4. ' range' → logprob: -9.502448081970215
    5. ' ' → logprob: -10.252448081970215
    6. '   ' → logprob: -12.752448081970215
    7. 'k' → logprob: -13.252448081970215
    8. '(range' → logprob: -13.502448081970215
    9. ')' → logprob: -13.752448081970215
    10. '  ' → logprob: -13.877448081970215

Token 63: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.22546514868736267
    2. ' range' → logprob: -1.600465178489685
    3. '(range' → logprob: -10.475464820861816
    4. '	range' → logprob: -11.475464820861816
    5. ' ' → logprob: -12.350464820861816
    6. '   ' → logprob: -12.725464820861816
    7. 'rang' → logprob: -13.475464820861816
    8. '  ' → logprob: -13.725464820861816
    9. 'r' → logprob: -13.975464820861816
    10. 'ran' → logprob: -14.850464820861816

Token 64: '(N' (ID: 10564)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.32072514295578003
    2. '(i' → logprob: -1.3207252025604248
    3. '(N' → logprob: -5.070724964141846
    4. '(' → logprob: -7.070724964141846
    5. 'j' → logprob: -8.445725440979004
    6. 'i' → logprob: -10.820725440979004
    7. '(k' → logprob: -10.820725440979004
    8. 'N' → logprob: -11.195725440979004
    9. '(n' → logprob: -11.945725440979004
    10. '(B' → logprob: -12.070725440979004

Token 65: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6716212630271912
    2. '):' → logprob: -0.7966212630271912
    3. '           ' → logprob: -3.421621322631836
    4. ':' → logprob: -6.171621322631836
    5. '       ' → logprob: -7.296621322631836
    6. '   ' → logprob: -7.796621322631836
    7. '):
' → logprob: -7.796621322631836
    8. '                           ' → logprob: -8.046621322631836
    9. ':
' → logprob: -8.296621322631836
    10. '+' → logprob: -8.421621322631836

Token 66: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6535471081733704
    2. ' ' → logprob: -1.0285470485687256
    3. '<|end|>' → logprob: -2.5285470485687256
    4. '       ' → logprob: -4.028547286987305
    5. ' if' → logprob: -4.653547286987305
    6. '            ' → logprob: -5.528547286987305
    7. '        ' → logprob: -6.028547286987305
    8. '               ' → logprob: -6.278547286987305
    9. '<|end|>' → logprob: -6.778547286987305
    10. '    ' → logprob: -6.903547286987305

Token 67: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03879987820982933
    2. ' if' → logprob: -4.16379976272583
    3. '<|end|>' → logprob: -4.41379976272583
    4. '            ' → logprob: -6.03879976272583
    5. 'if' (adapté à ' if') → logprob: -6.03879976272583
    6. '           ' → logprob: -6.03879976272583
    7. '               ' → logprob: -7.28879976272583
    8. '                ' → logprob: -8.038800239562988
    9. ' 
' → logprob: -8.288800239562988
    10. ' k' → logprob: -8.413800239562988

Token 68: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02642558142542839
    2. ' k' → logprob: -3.65142560005188
    3. ' ' → logprob: -9.9014253616333
    4. '(k' → logprob: -10.2764253616333
    5. '   ' → logprob: -11.6514253616333
    6. ' (' → logprob: -11.9014253616333
    7. 'a' → logprob: -12.1514253616333
    8. '```' → logprob: -12.5264253616333
    9. '(' → logprob: -12.7764253616333
    10. '  ' → logprob: -12.9014253616333

Token 69: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2946200668811798
    2. '!=' → logprob: -1.4196200370788574
    3. ' ==' → logprob: -5.044620037078857
    4. '==' → logprob: -5.044620037078857
    5. ' not' → logprob: -8.294620513916016
    6. 'not' → logprob: -9.669620513916016
    7. 'k' → logprob: -10.169620513916016
    8. ' ' → logprob: -10.544620513916016
    9. '```' → logprob: -10.794620513916016
    10. '<=' → logprob: -10.919620513916016

Token 70: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.2994620242971e-06
    2. ' i' → logprob: -12.000008583068848
    3. 'j' → logprob: -13.250008583068848
    4. '	i' → logprob: -16.25000762939453
    5. 'k' → logprob: -16.62500762939453
    6. '   ' → logprob: -17.87500762939453
    7. '_i' → logprob: -18.00000762939453
    8. ' ' → logprob: -18.37500762939453
    9. '```' → logprob: -18.37500762939453
    10. ''i' → logprob: -18.87500762939453

Token 71: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.01332869753241539
    2. 'or' → logprob: -4.388328552246094
    3. ' ' → logprob: -7.388328552246094
    4. ':' → logprob: -9.013328552246094
    5. '           ' → logprob: -10.013328552246094
    6. '	or' → logprob: -11.388328552246094
    7. ' continue' → logprob: -12.513328552246094
    8. '               ' → logprob: -12.638328552246094
    9. 'continue' → logprob: -12.763328552246094
    10. '            ' → logprob: -13.013328552246094

Token 72: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.014411116018891335
    2. ' k' → logprob: -4.264410972595215
    3. 'j' → logprob: -8.389410972595215
    4. '           ' → logprob: -11.514410972595215
    5. ' j' → logprob: -13.014410972595215
    6. ' ' → logprob: -13.264410972595215
    7. '            ' → logprob: -13.639410972595215
    8. '   ' → logprob: -13.639410972595215
    9. '	k' → logprob: -13.889410972595215
    10. '               ' → logprob: -14.264410972595215

Token 73: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931557655334473
    2. ' ==' → logprob: -0.6931557655334473
    3. 'k' → logprob: -12.068155288696289
    4. ' ' → logprob: -14.193155288696289
    5. ' k' → logprob: -14.443155288696289
    6. '=' → logprob: -14.568155288696289
    7. '==
' → logprob: -14.943155288696289
    8. '<|end|>' → logprob: -15.693155288696289
    9. '===' → logprob: -15.818155288696289
    10. ')==' → logprob: -16.31815528869629

Token 74: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0008074867073446512
    2. ' j' → logprob: -7.125807285308838
    3. '	j' → logprob: -13.750807762145996
    4. '   ' → logprob: -14.375807762145996
    5. '           ' → logprob: -14.750807762145996
    6. ' ' → logprob: -15.000807762145996
    7. '<|end|>' → logprob: -15.125807762145996
    8. '  ' → logprob: -16.37580680847168
    9. '<|end|>' → logprob: -17.12580680847168
    10. '    ' → logprob: -17.50080680847168

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05698684602975845
    2. '               ' → logprob: -3.1819868087768555
    3. '           ' → logprob: -4.6819868087768555
    4. 'continue' → logprob: -6.4319868087768555
    5. ':
' → logprob: -6.6819868087768555
    6. ' continue' → logprob: -6.6819868087768555
    7. ' :' → logprob: -8.931986808776855
    8. '   ' → logprob: -9.556986808776855
    9. '	continue' → logprob: -9.681986808776855
    10. ' or' → logprob: -9.806986808776855

Token 76: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024468744173645973
    2. ' continue' → logprob: -3.8994686603546143
    3. 'continue' → logprob: -5.649468898773193
    4. ':' → logprob: -8.399468421936035
    5. '           ' → logprob: -9.649468421936035
    6. '	continue' → logprob: -10.899468421936035
    7. '```' → logprob: -11.024468421936035
    8. '_continue' → logprob: -11.024468421936035
    9. ' :' → logprob: -11.649468421936035
    10. ' ' → logprob: -12.024468421936035

Token 77: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.083926260471344
    2. 'continue' (adapté à ' continue') → logprob: -3.208926200866699
    3. '               ' → logprob: -3.458926200866699
    4. '                   ' → logprob: -4.833926200866699
    5. '           ' → logprob: -8.2089262008667
    6. '	continue' → logprob: -8.3339262008667
    7. '   ' → logprob: -9.8339262008667
    8. ' ' → logprob: -10.3339262008667
    9. '                       ' → logprob: -10.9589262008667
    10. '_continue' → logprob: -11.0839262008667

Token 78: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.68764728307724
    2. ' 
' → logprob: -2.1876473426818848
    3. ' numerator' → logprob: -2.1876473426818848
    4. '            
' → logprob: -2.5626473426818848
    5. '       ' → logprob: -3.3126473426818848
    6. '
' → logprob: -3.3126473426818848
    7. '        
' → logprob: -3.5626473426818848
    8. '               ' → logprob: -3.8126473426818848
    9. '                
' → logprob: -4.562647342681885
    10. '  
' → logprob: -4.562647342681885

Token 79: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.643790602684021
    2. ' ' → logprob: -2.2687907218933105
    3. ' 
' → logprob: -2.5187907218933105
    4. ' numerator' → logprob: -2.5187907218933105
    5. '       ' → logprob: -2.6437907218933105
    6. '        
' → logprob: -3.6437907218933105
    7. '            
' → logprob: -3.7687907218933105
    8. '               ' → logprob: -3.7687907218933105
    9. '<|end|>' → logprob: -4.5187907218933105
    10. '            ' → logprob: -5.2687907218933105

Token 80: ' for' (ID: 395)
  Prédit: ' denominator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' denominator' → logprob: -0.6605534553527832
    2. ' numerator' → logprob: -1.2855534553527832
    3. 'numer' → logprob: -2.035553455352783
    4. '           ' → logprob: -3.160553455352783
    5. '            
' → logprob: -4.910553455352783
    6. 'den' → logprob: -5.285553455352783
    7. '               ' → logprob: -5.285553455352783
    8. '            ' → logprob: -6.035553455352783
    9. ' if' → logprob: -6.160553455352783
    10. '                   ' → logprob: -6.160553455352783

Token 81: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.17180049419403076
    2. ' l' → logprob: -2.0468006134033203
    3. 'm' → logprob: -3.7968006134033203
    4. ' m' → logprob: -5.67180061340332
    5. 'k' → logprob: -6.54680061340332
    6. 'p' → logprob: -8.17180061340332
    7. 'x' → logprob: -8.42180061340332
    8. ' k' → logprob: -8.42180061340332
    9. ' ' → logprob: -8.54680061340332
    10. ' p' → logprob: -9.42180061340332

Token 82: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004101908300071955
    2. 'in' → logprob: -5.504101753234863
    3. 'range' → logprob: -11.129101753234863
    4. ' ' → logprob: -12.129101753234863
    5. '   ' → logprob: -14.004101753234863
    6. 'n' → logprob: -14.504101753234863
    7. ' range' → logprob: -14.504101753234863
    8. '  ' → logprob: -14.754101753234863
    9. '```' → logprob: -15.004101753234863
    10. '    ' → logprob: -15.129101753234863

Token 83: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20145630836486816
    2. ' range' → logprob: -1.7014563083648682
    3. '(range' → logprob: -10.076456069946289
    4. '	range' → logprob: -14.951456069946289
    5. 'rang' → logprob: -15.826456069946289
    6. 'ange' → logprob: -15.951456069946289
    7. 'ran' → logprob: -16.07645606994629
    8. ' ' → logprob: -16.57645606994629
    9. 'r' → logprob: -17.20145606994629
    10. 'k' → logprob: -17.57645606994629

Token 84: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.3272816240787506
    2. '(range' → logprob: -1.3272815942764282
    3. 'range' → logprob: -4.327281475067139
    4. ' range' → logprob: -7.327281475067139
    5. '(' → logprob: -10.077281951904297
    6. 'Range' → logprob: -12.452281951904297
    7. '(i' → logprob: -12.702281951904297
    8. '_range' → logprob: -13.077281951904297
    9. '(N' → logprob: -13.202281951904297
    10. 'k' → logprob: -13.327281951904297

Token 85: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.537868779967539e-06
    2. ' +' → logprob: -12.000008583068848
    3. '+l' → logprob: -13.000008583068848
    4. '1' → logprob: -16.75000762939453
    5. '+j' → logprob: -17.37500762939453
    6. '+,' → logprob: -17.87500762939453
    7. '+k' → logprob: -18.12500762939453
    8. '+
' → logprob: -18.37500762939453
    9. '+n' → logprob: -19.00000762939453
    10. '+i' → logprob: -19.62500762939453

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.750001907348633
    3. '+' → logprob: -15.750001907348633
    4. '```' → logprob: -15.750001907348633
    5. '<|end|>' → logprob: -17.875001907348633
    6. 'l' → logprob: -18.187501907348633
    7. 'for' → logprob: -19.187501907348633
    8. '...' → logprob: -19.375001907348633
    9. 'k' → logprob: -19.437501907348633
    10. '`' → logprob: -19.500001907348633

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00208947341889143
    2. ',N' → logprob: -6.252089500427246
    3. ' ,' → logprob: -9.502089500427246
    4. 'N' → logprob: -9.627089500427246
    5. 'to' → logprob: -11.752089500427246
    6. '```' → logprob: -12.377089500427246
    7. ',n' → logprob: -12.877089500427246
    8. '+' → logprob: -13.502089500427246
    9. '1' → logprob: -14.127089500427246
    10. '，' → logprob: -14.377089500427246

Token 88: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00012356207298580557
    2. ' N' → logprob: -9.000123977661133
    3. 'n' → logprob: -16.750123977661133
    4. '<|end|>' → logprob: -17.250123977661133
    5. '(N' → logprob: -17.375123977661133
    6. ' ' → logprob: -17.500123977661133
    7. ',N' → logprob: -18.000123977661133
    8. ')' → logprob: -18.375123977661133
    9. '   ' → logprob: -18.625123977661133
    10. '<N' → logprob: -18.750123977661133

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005070568062365055
    2. ':' → logprob: -5.505070686340332
    3. '):
' → logprob: -7.130070686340332
    4. ',' → logprob: -10.005070686340332
    5. '+' → logprob: -10.130070686340332
    6. ')' → logprob: -10.255070686340332
    7. ' ):' → logprob: -11.005070686340332
    8. '<|end|>' → logprob: -11.130070686340332
    9. '):

' → logprob: -11.880070686340332
    10. '():' → logprob: -12.130070686340332

Token 90: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2873500883579254
    2. ' if' → logprob: -1.912350058555603
    3. '<|end|>' → logprob: -2.4123501777648926
    4. '                   ' → logprob: -5.162350177764893
    5. '                               ' → logprob: -5.912350177764893
    6. '                ' → logprob: -7.287350177764893
    7. '               ' → logprob: -7.412350177764893
    8. 'if' (adapté à ' if') → logprob: -7.537350177764893
    9. '```' → logprob: -7.787350177764893
    10. '<|end|>' → logprob: -8.537349700927734

Token 92: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.11320720613002777
    2. ' l' → logprob: -2.3632071018218994
    3. 'k' → logprob: -4.3632073402404785
    4. ' k' → logprob: -8.73820686340332
    5. '(l' → logprob: -11.73820686340332
    6. 'not' → logprob: -13.36320686340332
    7. ' ' → logprob: -13.48820686340332
    8. ' (' → logprob: -13.61320686340332
    9. '	l' → logprob: -13.98820686340332
    10. '    ' → logprob: -14.11320686340332

Token 93: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931686401367188
    2. ' ==' → logprob: -0.6931686401367188
    3. ' in' → logprob: -10.943168640136719
    4. 'in' → logprob: -13.568168640136719
    5. ' ' → logprob: -13.693168640136719
    6. '==
' → logprob: -15.193168640136719
    7. '===' → logprob: -15.193168640136719
    8. '=' → logprob: -15.318168640136719
    9. '==(' → logprob: -15.943168640136719
    10. '```' → logprob: -16.06816864013672

Token 94: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008076059748418629
    2. ' i' → logprob: -7.125807762145996
    3. '	i' → logprob: -13.375807762145996
    4. ' ' → logprob: -14.125807762145996
    5. 'j' → logprob: -15.000807762145996
    6. '   ' → logprob: -15.750807762145996
    7. '  ' → logprob: -17.00080680847168
    8. 'I' → logprob: -17.00080680847168
    9. 'k' → logprob: -17.12580680847168
    10. '<|end|>' → logprob: -17.12580680847168

Token 95: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0028258003294467926
    2. 'or' → logprob: -5.877825736999512
    3. ' ' → logprob: -10.877825736999512
    4. '<|end|>' → logprob: -14.502825736999512
    5. '	or' → logprob: -14.627825736999512
    6. '```' → logprob: -14.877825736999512
    7. ' ' → logprob: -15.752825736999512
    8. ')' → logprob: -16.377826690673828
    9. ''or' → logprob: -16.752826690673828
    10. '                   ' → logprob: -17.002826690673828

Token 96: ' l' (ID: 305)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.16022524237632751
    2. 'j' → logprob: -1.91022527217865
    3. '	j' → logprob: -14.535224914550781
    4. ' or' → logprob: -15.035224914550781
    5. '```' → logprob: -16.41022491455078
    6. ' ' → logprob: -16.53522491455078
    7. '<|end|>' → logprob: -17.16022491455078
    8. 'k' → logprob: -17.28522491455078
    9. '  ' → logprob: -17.66022491455078
    10. '$j' → logprob: -18.03522491455078

Token 97: ' ==' (ID: 951)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.11467120051383972
    2. 'or' → logprob: -2.239671230316162
    3. '==' → logprob: -6.614671230316162
    4. ' ' → logprob: -7.864671230316162
    5. ' ==' → logprob: -9.739670753479004
    6. ' j' → logprob: -10.614670753479004
    7. '=' → logprob: -11.739670753479004
    8. '  ' → logprob: -11.989670753479004
    9. 'j' → logprob: -12.364670753479004
    10. '<|end|>' → logprob: -12.739670753479004

Token 98: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0028111785650253296
    2. ' j' → logprob: -5.877810955047607
    3. '<|end|>' → logprob: -12.252811431884766
    4. '	j' → logprob: -13.877811431884766
    5. ' ' → logprob: -16.002811431884766
    6. ' or' → logprob: -16.002811431884766
    7. '<|end|>' → logprob: -16.252811431884766
    8. ':j' → logprob: -16.627811431884766
    9. '[j' → logprob: -16.877811431884766
    10. ',j' → logprob: -16.877811431884766

Token 99: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10323786735534668
    2. ':
' → logprob: -3.1032378673553467
    3. ' or' → logprob: -3.2282378673553467
    4. '               ' → logprob: -4.603238105773926
    5. '           ' → logprob: -6.603238105773926
    6. '                   ' → logprob: -6.853238105773926
    7. '<|end|>' → logprob: -7.478238105773926
    8. '                       ' → logprob: -8.853238105773926
    9. ' and' → logprob: -9.603238105773926
    10. 'continue' → logprob: -9.978238105773926

Token 100: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9185869693756104
    2. 'continue' → logprob: -1.4185869693756104
    3. '                   ' → logprob: -1.4185869693756104
    4. ' continue' → logprob: -2.2935869693756104
    5. '           ' → logprob: -5.168586730957031
    6. ' or' → logprob: -5.543586730957031
    7. ':
' → logprob: -5.793586730957031
    8. '   ' → logprob: -6.918586730957031
    9. '	continue' → logprob: -7.668586730957031
    10. '                       ' → logprob: -7.668586730957031

Token 101: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.41298845410346985
    2. 'continue' (adapté à ' continue') → logprob: -1.1629884243011475
    3. '                   ' → logprob: -3.7879884243011475
    4. '                       ' → logprob: -6.412988662719727
    5. '               ' → logprob: -7.287988662719727
    6. '```' → logprob: -8.162988662719727
    7. '	continue' → logprob: -8.412988662719727
    8. '   ' → logprob: -9.287988662719727
    9. '       ' → logprob: -9.287988662719727
    10. '           ' → logprob: -9.662988662719727

Token 102: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3183155357837677
    2. ':' → logprob: -1.5683155059814453
    3. '               ' → logprob: -3.6933155059814453
    4. '                       ' → logprob: -3.8183155059814453
    5. ':
' → logprob: -5.818315505981445
    6. '                ' → logprob: -5.818315505981445
    7. '                    ' → logprob: -6.318315505981445
    8. ' :' → logprob: -6.693315505981445
    9. '                    
' → logprob: -6.693315505981445
    10. '```' → logprob: -7.068315505981445

Token 103: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.15919582545757294
    2. '               ' → logprob: -2.534195899963379
    3. ':' → logprob: -3.909195899963379
    4. '                       ' → logprob: -4.159195899963379
    5. '                ' → logprob: -5.159195899963379
    6. '                    
' → logprob: -5.784195899963379
    7. ' ' → logprob: -6.034195899963379
    8. '```' → logprob: -6.159195899963379
    9. '                               ' → logprob: -6.284195899963379
    10. ')' → logprob: -6.409195899963379

Token 104: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.745066225528717
    2. 'den' → logprob: -1.2450661659240723
    3. ' denominator' → logprob: -2.1200661659240723
    4. ' C' → logprob: -3.7450661659240723
    5. 'product' → logprob: -4.245066165924072
    6. 'numer' → logprob: -4.495066165924072
    7. '               ' → logprob: -4.495066165924072
    8. '                   ' → logprob: -4.620066165924072
    9. ' denom' → logprob: -4.620066165924072
    10. ' product' → logprob: -5.245066165924072

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0788913294672966
    2. '=' → logprob: -2.5788912773132324
    3. ' ' → logprob: -13.70389175415039
    4. ',' → logprob: -15.57889175415039
    5. ')' → logprob: -15.82889175415039
    6. ' =
' → logprob: -17.20389175415039
    7. '＝' → logprob: -17.57889175415039
    8. ' ' → logprob: -17.82889175415039
    9. '>' → logprob: -18.20389175415039
    10. '```' → logprob: -18.20389175415039

Token 106: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0067161982879042625
    2. ' a' → logprob: -5.006716251373291
    3. '	a' → logprob: -14.756715774536133
    4. '   ' → logprob: -15.006715774536133
    5. ' ' → logprob: -16.006715774536133
    6. 'A' → logprob: -17.881715774536133
    7. '    ' → logprob: -18.131715774536133
    8. '(a' → logprob: -18.381715774536133
    9. '```' → logprob: -18.506715774536133
    10. '  ' → logprob: -18.756715774536133

Token 107: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -8.061054359131958e-06
    2. '[l' → logprob: -11.875007629394531
    3. '[' → logprob: -14.375007629394531
    4. 'k' → logprob: -14.750007629394531
    5. '[c' → logprob: -17.87500762939453
    6. '[
' → logprob: -19.12500762939453
    7. '(k' → logprob: -20.12500762939453
    8. ' [' → logprob: -20.12500762939453
    9. '```' → logprob: -20.12500762939453
    10. '[s' → logprob: -20.75000762939453

Token 108: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02147435024380684
    2. '<|end|>' → logprob: -4.771474361419678
    3. ')' → logprob: -4.896474361419678
    4. ']
' → logprob: -5.646474361419678
    5. '+' → logprob: -7.146474361419678
    6. ' ]' → logprob: -7.771474361419678
    7. ']+' → logprob: -8.89647388458252
    8. ')
' → logprob: -9.52147388458252
    9. '*' → logprob: -9.52147388458252
    10. '<|end|>' → logprob: -10.14647388458252

Token 109: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022220460698008537
    2. 'D' → logprob: -5.147220611572266
    3. '                ' → logprob: -5.147220611572266
    4. '<|end|>' → logprob: -5.147220611572266
    5. ' D' → logprob: -6.897220611572266
    6. ' ' → logprob: -6.897220611572266
    7. '                   ' → logprob: -7.147220611572266
    8. '                               ' → logprob: -7.522220611572266
    9. '			' → logprob: -8.272220611572266
    10. '       ' → logprob: -8.272220611572266

Token 110: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' (adapté à ' D') → logprob: -0.20213478803634644
    2. 'a' → logprob: -1.7021348476409912
    3. ' D' → logprob: -7.702134609222412
    4. ' a' → logprob: -8.32713508605957
    5. 'd' → logprob: -11.20213508605957
    6. '                   ' → logprob: -12.57713508605957
    7. '               ' → logprob: -12.82713508605957
    8. '   ' → logprob: -13.32713508605957
    9. '       ' → logprob: -13.95213508605957
    10. 'c' → logprob: -13.95213508605957

Token 111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759409666061401
    2. '=' → logprob: -0.8259409666061401
    3. ' ' → logprob: -13.82594108581543
    4. ')' → logprob: -15.82594108581543
    5. '=a' → logprob: -16.45094108581543
    6. 'a' → logprob: -16.95094108581543
    7. '   ' → logprob: -17.07594108581543
    8. '```' → logprob: -17.20094108581543
    9. ' a' → logprob: -17.45094108581543
    10. '=
' → logprob: -17.57594108581543

Token 112: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12692926824092865
    2. ' a' → logprob: -2.12692928314209
    3. '	a' → logprob: -14.12692928314209
    4. ' ' → logprob: -15.00192928314209
    5. '   ' → logprob: -16.751928329467773
    6. ' ' → logprob: -16.876928329467773
    7. 'A' → logprob: -17.001928329467773
    8. 'd' → logprob: -17.751928329467773
    9. 'C' → logprob: -17.876928329467773
    10. '```' → logprob: -18.376928329467773

Token 113: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -6.630610641877865e-06
    2. 'l' → logprob: -12.125006675720215
    3. '[' → logprob: -14.375006675720215
    4. '```' → logprob: -15.250006675720215
    5. '	l' → logprob: -16.0000057220459
    6. '[
' → logprob: -16.1250057220459
    7. ' [' → logprob: -17.5000057220459
    8. '[k' → logprob: -18.3750057220459
    9. '(l' → logprob: -18.5000057220459
    10. '[i' → logprob: -18.7500057220459

Token 114: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4011244475841522
    2. ']' → logprob: -1.1511244773864746
    3. ')
' → logprob: -4.901124477386475
    4. ']
' → logprob: -5.651124477386475
    5. '```' → logprob: -7.151124477386475
    6. '               ' → logprob: -7.401124477386475
    7. '**' → logprob: -7.776124477386475
    8. '           ' → logprob: -8.026124000549316
    9. '       ' → logprob: -8.901124000549316
    10. ':
' → logprob: -9.026124000549316

Token 115: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7282984852790833
    2. '                
' → logprob: -0.9782984852790833
    3. '
' → logprob: -3.2282984256744385
    4. '```' → logprob: -3.7282984256744385
    5. ' 
' → logprob: -4.353298664093018
    6. '<|end|>' → logprob: -4.478298664093018
    7. '                 
' → logprob: -4.853298664093018
    8. ' numerator' → logprob: -5.228298664093018
    9. '                    
' → logprob: -5.353298664093018
    10. '                        
' → logprob: -5.478298664093018

Token 116: ' denominator' (ID: 101279)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'den' → logprob: -1.0000213384628296
    2. 'value' → logprob: -1.2500213384628296
    3. 'product' → logprob: -2.375021457672119
    4. '               ' → logprob: -2.875021457672119
    5. 'if' → logprob: -3.500021457672119
    6. 'current' → logprob: -3.625021457672119
    7. 'max' → logprob: -3.750021457672119
    8. 'temp' → logprob: -4.250021457672119
    9. 'val' → logprob: -4.375021457672119
    10. 'diff' → logprob: -4.375021457672119

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054887134581804276
    2. '=' → logprob: -2.929887056350708
    3. ' ' → logprob: -12.429886817932129
    4. ' =
' → logprob: -16.179887771606445
    5. '＝' → logprob: -16.429887771606445
    6. ' =(' → logprob: -16.429887771606445
    7. '    ' → logprob: -16.554887771606445
    8. '   ' → logprob: -16.679887771606445
    9. ')' → logprob: -16.804887771606445
    10. ' ' → logprob: -16.929887771606445

Token 118: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.5986489057540894
    2. ' C' → logprob: -0.9736489057540894
    3. ' (' → logprob: -3.723649024963379
    4. 'abs' → logprob: -4.473649024963379
    5. ' abs' → logprob: -4.473649024963379
    6. '(' → logprob: -4.723649024963379
    7. '(C' → logprob: -5.098649024963379
    8. '(abs' → logprob: -5.723649024963379
    9. ' max' → logprob: -6.348649024963379
    10. 'max' → logprob: -6.723649024963379

Token 119: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.28147363662719727
    2. ' +' → logprob: -1.6564736366271973
    3. '-' → logprob: -4.031473636627197
    4. '*' → logprob: -4.031473636627197
    5. ' -' → logprob: -4.031473636627197
    6. ' *' → logprob: -6.781473636627197
    7. '+
' → logprob: -10.531473159790039
    8. '+B' → logprob: -10.781473159790039
    9. '^' → logprob: -11.031473159790039
    10. ' ' → logprob: -11.156473159790039

Token 120: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0015446186298504472
    2. 'B' → logprob: -7.00154447555542
    3. 'A' → logprob: -7.50154447555542
    4. ' D' → logprob: -9.751544952392578
    5. 'd' → logprob: -11.626544952392578
    6. 'C' → logprob: -11.626544952392578
    7. 'a' → logprob: -12.876544952392578
    8. '1' → logprob: -13.876544952392578
    9. ' ' → logprob: -15.751544952392578
    10. 'Q' → logprob: -15.876544952392578

Token 121: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6466146111488342
    2. ' if' → logprob: -1.2716145515441895
    3. '               ' → logprob: -2.2716145515441895
    4. '                   ' → logprob: -3.6466145515441895
    5. ')' → logprob: -3.7716145515441895
    6. ':
' → logprob: -5.0216145515441895
    7. ' ' → logprob: -5.1466145515441895
    8. '                       ' → logprob: -5.6466145515441895
    9. '                ' → logprob: -5.7716145515441895
    10. '                               ' → logprob: -6.0216145515441895

Token 122: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.34954196214675903
    2. ' if' → logprob: -1.7245419025421143
    3. ')' → logprob: -3.0995419025421143
    4. 'if' → logprob: -4.099542140960693
    5. ':
' → logprob: -4.224542140960693
    6. '<|end|>' → logprob: -4.599542140960693
    7. ':' → logprob: -5.099542140960693
    8. '                ' → logprob: -5.349542140960693
    9. '                   ' → logprob: -5.849542140960693
    10. '                               ' → logprob: -5.974542140960693

Token 123: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.558346152305603
    2. ' if' → logprob: -1.058346152305603
    3. '               ' → logprob: -3.4333462715148926
    4. ')' → logprob: -3.8083462715148926
    5. '                   ' → logprob: -4.933346271514893
    6. '                               ' → logprob: -5.933346271514893
    7. ' ' → logprob: -6.433346271514893
    8. '                       ' → logprob: -6.558346271514893
    9. ':' → logprob: -6.683346271514893
    10. ':
' → logprob: -6.808346271514893

Token 124: ' denominator' (ID: 101279)
  Prédit: ' denominator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' denominator' → logprob: -0.632669985294342
    2. 'den' → logprob: -0.757669985294342
    3. 'abs' → logprob: -11.007670402526855
    4. ' ' → logprob: -11.507670402526855
    5. ' abs' → logprob: -11.757670402526855
    6. ' denomination' → logprob: -11.882670402526855
    7. ' den' → logprob: -12.007670402526855
    8. '   ' → logprob: -12.382670402526855
    9. 'd' → logprob: -12.382670402526855
    10. ' denomin' → logprob: -12.632670402526855

Token 125: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7596997022628784
    2. '!=' → logprob: -1.0096997022628784
    3. '==' → logprob: -2.259699821472168
    4. ' ==' → logprob: -2.759699821472168
    5. ':' → logprob: -10.134699821472168
    6. '=' → logprob: -10.134699821472168
    7. '>' → logprob: -10.634699821472168
    8. '```' → logprob: -10.884699821472168
    9. ' ' → logprob: -11.259699821472168
    10. ')!=' → logprob: -11.884699821472168

Token 126: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16022585332393646
    2. ' ' → logprob: -1.9102258682250977
    3. '=' → logprob: -14.660225868225098
    4. ' ' → logprob: -15.160225868225098
    5. '```' → logprob: -15.160225868225098
    6. ' ' → logprob: -16.66022491455078
    7. '  ' → logprob: -16.72272491455078
    8. ' zero' → logprob: -16.84772491455078
    9. '00' → logprob: -16.84772491455078
    10. '   ' → logprob: -17.03522491455078

Token 127: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005533903022296727
    2. ' ' → logprob: -7.500553607940674
    3. '```' → logprob: -15.625553131103516
    4. '00' → logprob: -17.813053131103516
    5. '  ' → logprob: -17.813053131103516
    6. '۰' → logprob: -17.938053131103516
    7. 'zero' → logprob: -18.313053131103516
    8. '   ' → logprob: -18.438053131103516
    9. '000' → logprob: -18.563053131103516
    10. '
' → logprob: -18.563053131103516

Token 128: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013004101812839508
    2. ' and' → logprob: -4.763004302978516
    3. ':
' → logprob: -5.763004302978516
    4. '                   ' → logprob: -7.263004302978516
    5. 'and' → logprob: -7.763004302978516
    6. '               ' → logprob: -10.388004302978516
    7. '):' → logprob: -11.263004302978516
    8. '                       ' → logprob: -11.513004302978516
    9. '<|end|>' → logprob: -11.638004302978516
    10. ' :' → logprob: -11.638004302978516

Token 129: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.025354081764817238
    2. ':' → logprob: -3.9003541469573975
    3. '                       ' → logprob: -6.525353908538818
    4. ':
' → logprob: -7.025353908538818
    5. '                           ' → logprob: -7.150353908538818
    6. '               ' → logprob: -7.275353908538818
    7. '                    ' → logprob: -7.900353908538818
    8. '                ' → logprob: -9.275354385375977
    9. ' and' → logprob: -9.400354385375977
    10. '           ' → logprob: -9.525354385375977

Token 130: ' val' (ID: 1459)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5281879901885986
    2. ' value' → logprob: -2.0281879901885986
    3. ' max' → logprob: -2.0281879901885986
    4. 'value' → logprob: -2.6531879901885986
    5. '                       ' → logprob: -2.9031879901885986
    6. ' val' → logprob: -5.6531877517700195
    7. 'max' → logprob: -5.9031877517700195
    8. ' ' → logprob: -5.9031877517700195
    9. '                    ' → logprob: -5.9031877517700195
    10. ' temp' → logprob: -6.9031877517700195

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31342047452926636
    2. '=' → logprob: -1.3134205341339111
    3. 'u' → logprob: -9.813420295715332
    4. 'uation' → logprob: -10.563420295715332
    5. ' ' → logprob: -11.188420295715332
    6. 'ue' → logprob: -11.313420295715332
    7. '_' → logprob: -11.438420295715332
    8. ' +=' → logprob: -11.938420295715332
    9. 'ation' → logprob: -12.063420295715332
    10. ' ' → logprob: -12.438420295715332

Token 132: ' numerator' (ID: 149054)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3366095721721649
    2. ' (' → logprob: -1.7116096019744873
    3. ' numerator' → logprob: -2.8366096019744873
    4. 'numer' → logprob: -3.0866096019744873
    5. 'abs' → logprob: -8.586609840393066
    6. 'n' → logprob: -8.711609840393066
    7. 'max' → logprob: -9.086609840393066
    8. '(max' → logprob: -9.461609840393066
    9. '   ' → logprob: -9.586609840393066
    10. ' ' → logprob: -9.586609840393066

Token 133: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.286856085062027
    2. '/' → logprob: -1.4118560552597046
    3. ' //' → logprob: -5.286856174468994
    4. '//' → logprob: -7.786856174468994
    5. ' ' → logprob: -9.411855697631836
    6. '*' → logprob: -9.786855697631836
    7. ' ' → logprob: -10.286855697631836
    8. ' *' → logprob: -10.786855697631836
    9. '%' → logprob: -11.286855697631836
    10. ' %' → logprob: -13.286855697631836

Token 134: ' denominator' (ID: 101279)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.000488110730657354
    2. ' denominator' → logprob: -7.62548828125
    3. ' den' → logprob: -17.50048828125
    4. 'float' → logprob: -18.37548828125
    5. '```' → logprob: -18.62548828125
    6. '_den' → logprob: -18.75048828125
    7. 'Den' → logprob: -18.87548828125
    8. '.den' → logprob: -18.87548828125
    9. '   ' → logprob: -19.00048828125
    10. '-den' → logprob: -19.12548828125

Token 135: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3900754153728485
    2. '
' → logprob: -1.390075445175171
    3. '                    
' → logprob: -2.765075445175171
    4. '                        
' → logprob: -6.015075206756592
    5. ' 
' → logprob: -6.765075206756592
    6. '\n' → logprob: -6.765075206756592
    7. '
' → logprob: -7.140075206756592
    8. '                       ' → logprob: -7.640075206756592
    9. '                
' → logprob: -7.640075206756592
    10. '  
' → logprob: -7.640075206756592

Token 136: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0004092235758434981
    2. '                    
' → logprob: -8.875409126281738
    3. ' if' → logprob: -9.500409126281738
    4. '
' → logprob: -9.875409126281738
    5. '                       ' → logprob: -9.875409126281738
    6. '               ' → logprob: -10.375409126281738
    7. '           ' → logprob: -10.750409126281738
    8. 'if' → logprob: -11.875409126281738
    9. '```' → logprob: -11.875409126281738
    10. '                    ' → logprob: -12.250409126281738

Token 137: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4742681384086609
    2. ' if' → logprob: -0.9742681384086609
    3. 'max' → logprob: -9.349267959594727
    4. '                   ' → logprob: -9.849267959594727
    5. ' max' → logprob: -9.974267959594727
    6. '                       ' → logprob: -13.349267959594727
    7. '
' → logprob: -13.849267959594727
    8. '```' → logprob: -13.849267959594727
    9. '   ' → logprob: -15.099267959594727
    10. '           ' → logprob: -15.599267959594727

Token 138: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.25194650888442993
    2. 'val' → logprob: -1.5019464492797852
    3. '	val' → logprob: -11.376946449279785
    4. 'max' → logprob: -13.251946449279785
    5. '(val' → logprob: -13.376946449279785
    6. ' max' → logprob: -13.626946449279785
    7. '[val' → logprob: -14.626946449279785
    8. '```' → logprob: -14.876946449279785
    9. '_val' → logprob: -15.501946449279785
    10. 'Val' → logprob: -16.2519474029541

Token 139: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.023249205201864243
    2. '>' → logprob: -3.7732491493225098
    3. ' ' → logprob: -12.648249626159668
    4. ' ' → logprob: -15.023249626159668
    5. ' >

' → logprob: -16.27324867248535
    6. ' >
' → logprob: -16.77324867248535
    7. ' >
' → logprob: -17.39824867248535
    8. '   ' → logprob: -17.64824867248535
    9. '">' → logprob: -18.39824867248535
    10. ')' → logprob: -18.39824867248535

Token 140: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3868711292743683
    2. ' max' → logprob: -1.136871099472046
    3. '                   ' → logprob: -16.136871337890625
    4. '	max' → logprob: -17.761871337890625
    5. '_max' → logprob: -18.261871337890625
    6. '```' → logprob: -18.511871337890625
    7. '                       ' → logprob: -18.761871337890625
    8. '(max' → logprob: -19.011871337890625
    9. '
' → logprob: -19.761871337890625
    10. '[max' → logprob: -20.011871337890625

Token 141: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.1472419600977446e-06
    2. '_val' → logprob: -14.000000953674316
    3. '_' → logprob: -15.125000953674316
    4. '_Value' → logprob: -19.500001907348633
    5. ' _' → logprob: -20.125001907348633
    6. 'value' → logprob: -20.875001907348633
    7. '_VALUE' → logprob: -20.875001907348633
    8. '_max' → logprob: -21.000001907348633
    9. '```' → logprob: -21.625001907348633
    10. '_values' → logprob: -21.625001907348633

Token 142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03165300190448761
    2. '                       ' → logprob: -3.9066529273986816
    3. ':
' → logprob: -4.531652927398682
    4. '                   ' → logprob: -9.40665340423584
    5. '):' → logprob: -10.15665340423584
    6. ' :' → logprob: -10.40665340423584
    7. '                           ' → logprob: -10.40665340423584
    8. ':
' → logprob: -11.53165340423584
    9. '                               ' → logprob: -11.65665340423584
    10. '=' → logprob: -11.78165340423584

Token 143: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0003397535183466971
    2. '                        
' → logprob: -8.87533950805664
    3. '                           ' → logprob: -9.25033950805664
    4. ' max' → logprob: -10.37533950805664
    5. '                   ' → logprob: -10.50033950805664
    6. '                               ' → logprob: -11.50033950805664
    7. '
' → logprob: -12.12533950805664
    8. '                        ' → logprob: -12.25033950805664
    9. '               ' → logprob: -12.37533950805664
    10. '           ' → logprob: -12.50033950805664

Token 144: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.053392644971609116
    2. 'max' (adapté à ' max') → logprob: -3.0533926486968994
    3. '                           ' → logprob: -5.92839241027832
    4. '                       ' → logprob: -6.17839241027832
    5. '                               ' → logprob: -11.30339241027832
    6. '```' → logprob: -11.80339241027832
    7. '   ' → logprob: -11.92839241027832
    8. '                        ' → logprob: -12.17839241027832
    9. '                   ' → logprob: -12.42839241027832
    10. ' ' → logprob: -12.55339241027832

Token 145: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.875
    3. 'value' → logprob: -16.75
    4. '_val' → logprob: -16.875
    5. '_code' → logprob: -17.625
    6. '```' → logprob: -18.25
    7. '_VALUE' → logprob: -18.875
    8. '_Value' → logprob: -18.875
    9. 'Value' → logprob: -19.25
    10. '_values' → logprob: -19.875

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023246407508850098
    2. '=' → logprob: -3.7732462882995605
    3. ' ' → logprob: -14.148246765136719
    4. ' =
' → logprob: -16.14824676513672
    5. '<|end|>' → logprob: -17.89824676513672
    6. '_val' → logprob: -18.27324676513672
    7. '＝' → logprob: -18.52324676513672
    8. '=value' → logprob: -18.77324676513672
    9. ',' → logprob: -18.89824676513672
    10. 'val' → logprob: -19.02324676513672

Token 147: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.3868711292743683
    2. ' val' → logprob: -1.136871099472046
    3. '	val' → logprob: -16.136871337890625
    4. '[val' → logprob: -18.261871337890625
    5. '(val' → logprob: -18.636871337890625
    6. '_val' → logprob: -19.261871337890625
    7. '```' → logprob: -19.886871337890625
    8. ',val' → logprob: -20.136871337890625
    9. '.val' → logprob: -20.261871337890625
    10. '                   ' → logprob: -20.636871337890625

Token 148: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.183501293184236e-05
    2. ' print' → logprob: -10.37507152557373
    3. '```' → logprob: -11.37507152557373
    4. '#' → logprob: -11.62507152557373
    5. ')' → logprob: -12.00007152557373
    6. '
' → logprob: -12.37507152557373
    7. '<|end|>' → logprob: -13.00007152557373
    8. '                        
' → logprob: -13.37507152557373
    9. '#print' → logprob: -13.62507152557373
    10. '(print' → logprob: -13.75007152557373

Token 149: '               ' (ID: 506)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00016325322212651372
    2. ')' → logprob: -9.125163078308105
    3. ' print' → logprob: -10.000163078308105
    4. '#' → logprob: -12.875163078308105
    5. '```' → logprob: -12.875163078308105
    6. '(print' → logprob: -13.875163078308105
    7. '
' → logprob: -14.000163078308105
    8. '#print' → logprob: -15.000163078308105
    9. '.' → logprob: -15.000163078308105
    10. ')
' → logprob: -15.625163078308105

Token 150: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.026552822440862656
    2. 'return' → logprob: -4.026552677154541
    3. '```' → logprob: -5.776552677154541
    4. '<|end|>' → logprob: -6.026552677154541
    5. '#' (adapté à ' #') → logprob: -6.776552677154541
    6. ')' → logprob: -7.901552677154541
    7. ' return' → logprob: -8.6515531539917
    8. '\n' → logprob: -8.6515531539917
    9. ' print' → logprob: -9.0265531539917
    10. 'newline' → logprob: -9.1515531539917

Token 151: ' Also' (ID: 8820)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: ' check' (ID: 2371)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.41719383001327515
    2. 'den' → logprob: -1.54219388961792
    3. '                   ' → logprob: -3.41719388961792
    4. ' val' → logprob: -3.79219388961792
    5. 'numer' → logprob: -4.04219388961792
    6. ' denominator' → logprob: -4.41719388961792
    7. '               ' → logprob: -4.66719388961792
    8. '#' → logprob: -5.16719388961792
    9. '
' → logprob: -5.41719388961792
    10. 'else' → logprob: -5.79219388961792

Token 153: ' the' (ID: 290)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5880579948425293
    2. 'den' → logprob: -1.5880579948425293
    3. ' denominator' → logprob: -2.5880579948425293
    4. '                   ' → logprob: -3.0880579948425293
    5. ' val' → logprob: -3.5880579948425293
    6. 'val' → logprob: -3.7130579948425293
    7. ' numerator' → logprob: -4.463057994842529
    8. ' (' → logprob: -4.838057994842529
    9. '                ' → logprob: -4.963057994842529
    10. ' if' → logprob: -5.088057994842529

Token 154: ' other' (ID: 1273)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.4117603302001953
    2. 'val' → logprob: -1.2867603302001953
    3. ' denominator' → logprob: -3.6617603302001953
    4. 'reverse' → logprob: -4.411760330200195
    5. 'numer' → logprob: -5.036760330200195
    6. 'value' → logprob: -5.161760330200195
    7. ' val' → logprob: -5.536760330200195
    8. 'op' → logprob: -6.286760330200195
    9. ' numerator' → logprob: -7.286760330200195
    10. 'else' → logprob: -7.536760330200195

Token 155: ' order' (ID: 2569)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.6649313569068909
    2. 'den' → logprob: -0.7899313569068909
    3. ' direction' → logprob: -5.039931297302246
    4. 'way' → logprob: -5.164931297302246
    5. 'val' → logprob: -5.539931297302246
    6. 'division' → logprob: -5.664931297302246
    7. ' denominator' → logprob: -5.914931297302246
    8. 'order' → logprob: -6.164931297302246
    9. 'possible' → logprob: -6.539931297302246
    10. ' way' → logprob: -6.664931297302246

Token 156: ' to' (ID: 316)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015827087918296456
    2. '                ' → logprob: -7.376582622528076
    3. '                   ' → logprob: -8.001583099365234
    4. '<|end|>' → logprob: -9.251583099365234
    5. '              ' → logprob: -9.501583099365234
    6. ' D' → logprob: -9.626583099365234
    7. 'D' → logprob: -9.626583099365234
    8. ',' → logprob: -9.626583099365234
    9. 'den' → logprob: -10.001583099365234
    10. ' denominator' → logprob: -10.876583099365234

Token 157: ' get' (ID: 717)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'den' → logprob: -1.2364885807037354
    2. ' denominator' → logprob: -1.3614885807037354
    3. '               ' → logprob: -1.4864885807037354
    4. '                   ' → logprob: -1.8614885807037354
    5. 'continue' → logprob: -3.8614885807037354
    6. 'val' → logprob: -4.236488342285156
    7. '                       ' → logprob: -4.861488342285156
    8. ' continue' → logprob: -5.861488342285156
    9. ' val' → logprob: -5.986488342285156
    10. ' numerator' → logprob: -6.111488342285156

Token 158: ' all' (ID: 722)
  Prédit: ' denominator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' denominator' → logprob: -0.33747491240501404
    2. 'den' → logprob: -1.4624749422073364
    3. 'val' → logprob: -4.337474822998047
    4. ' the' → logprob: -4.962474822998047
    5. ' numerator' → logprob: -5.087474822998047
    6. ' val' → logprob: -5.337474822998047
    7. 'the' → logprob: -5.337474822998047
    8. '-den' → logprob: -5.712474822998047
    9. 'D' → logprob: -5.837474822998047
    10. ' D' → logprob: -6.212474822998047

Token 159: ' combinations' (ID: 43835)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 160: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02497057430446148
    2. '<|end|>' → logprob: -3.899970531463623
    3. '                ' → logprob: -6.274970531463623
    4. '```' → logprob: -7.024970531463623
    5. '                   ' → logprob: -7.899970531463623
    6. '                
' → logprob: -7.899970531463623
    7. ' ' → logprob: -8.399971008300781
    8. '              ' → logprob: -8.774971008300781
    9. '<|end|>' → logprob: -9.149971008300781
    10. '
' → logprob: -9.274971008300781

Token 161: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05660572275519371
    2. '<|end|>' → logprob: -3.056605815887451
    3. '                ' → logprob: -5.681605815887451
    4. '                   ' → logprob: -6.306605815887451
    5. '```' → logprob: -6.431605815887451
    6. '                
' → logprob: -8.181605339050293
    7. ' ' → logprob: -8.556605339050293
    8. '
' → logprob: -8.806605339050293
    9. '<|end|>' → logprob: -8.806605339050293
    10. '              ' → logprob: -9.181605339050293

Token 162: ' denominator' (ID: 101279)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.35362502932548523
    2. 'val' → logprob: -2.1036250591278076
    3. ' denominator' → logprob: -2.2286250591278076
    4. '               ' → logprob: -3.6036250591278076
    5. '                   ' → logprob: -4.3536248207092285
    6. 'if' → logprob: -5.2286248207092285
    7. ' val' → logprob: -5.6036248207092285
    8. 'for' → logprob: -5.8536248207092285
    9. '```' → logprob: -6.1036248207092285
    10. ' if' → logprob: -6.4786248207092285

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759643316268921
    2. '=' → logprob: -0.8259643316268921
    3. '2' → logprob: -10.825963973999023
    4. '＝' → logprob: -13.200963973999023
    5. 's' → logprob: -14.575963973999023
    6. '1' → logprob: -14.700963973999023
    7. '!=' → logprob: -15.075963973999023
    8. '*=' → logprob: -15.325963973999023
    9. '+=' → logprob: -15.450963973999023
    10. ' ' → logprob: -15.700963973999023

Token 164: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0003920655872207135
    2. ' D' → logprob: -7.875391960144043
    3. '   ' → logprob: -11.875391960144043
    4. '	D' → logprob: -13.750391960144043
    5. 'd' → logprob: -14.250391960144043
    6. '-' → logprob: -14.250391960144043
    7. '-D' → logprob: -14.250391960144043
    8. ' ' → logprob: -14.750391960144043
    9. '(D' → logprob: -14.750391960144043
    10. 'C' → logprob: -15.125391960144043

Token 165: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4740784466266632
    2. ' -' → logprob: -0.9740784168243408
    3. ' ' → logprob: -14.224078178405762
    4. ' ' → logprob: -15.224078178405762
    5. '-C' → logprob: -15.724078178405762
    6. '-
' → logprob: -16.099079132080078
    7. '‌' → logprob: -17.349079132080078
    8. '	' → logprob: -17.474079132080078
    9. ' -
' → logprob: -17.474079132080078
    10. '   ' → logprob: -17.599079132080078

Token 166: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -7.505351095460355e-05
    2. ' C' → logprob: -9.500075340270996
    3. '<|end|>' → logprob: -15.750075340270996
    4. '>C' → logprob: -19.12507438659668
    5. '	C' → logprob: -19.37507438659668
    6. '                   ' → logprob: -19.75007438659668
    7. '               ' → logprob: -20.00007438659668
    8. 'c' → logprob: -20.37507438659668
    9. ' ' → logprob: -20.37507438659668
    10. 'A' → logprob: -20.75007438659668

Token 167: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.034758083522319794
    2. '<|end|>' → logprob: -3.4097580909729004
    3. '                ' → logprob: -8.034757614135742
    4. '<|end|>' → logprob: -8.159757614135742
    5. ' if' → logprob: -8.909757614135742
    6. '			' → logprob: -9.409757614135742
    7. '                
' → logprob: -9.534757614135742
    8. '                   ' → logprob: -9.659757614135742
    9. '              ' → logprob: -10.159757614135742
    10. ' ' → logprob: -10.659757614135742

Token 168: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013897260650992393
    2. '                   ' → logprob: -4.63889741897583
    3. '<|end|>' → logprob: -5.88889741897583
    4. ' if' → logprob: -7.38889741897583
    5. '                ' → logprob: -8.263896942138672
    6. '                
' → logprob: -9.013896942138672
    7. 'if' → logprob: -9.513896942138672
    8. '           ' → logprob: -10.013896942138672
    9. ' ' → logprob: -10.138896942138672
    10. '                    
' → logprob: -10.638896942138672

Token 169: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16005928814411163
    2. ' if' → logprob: -2.4100592136383057
    3. '               ' → logprob: -3.2850592136383057
    4. '                   ' → logprob: -4.160059452056885
    5. 'val' → logprob: -5.410059452056885
    6. ' val' → logprob: -7.910059452056885
    7. '```' → logprob: -9.035058975219727
    8. '                       ' → logprob: -10.660058975219727
    9. '                ' → logprob: -10.785058975219727
    10. '                
' → logprob: -11.285058975219727

Token 170: ' denominator' (ID: 101279)
  Prédit: ' denominator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' denominator' → logprob: -0.16029591858386993
    2. 'den' → logprob: -1.9102959632873535
    3. ' denomination' → logprob: -10.285295486450195
    4. ' den' → logprob: -10.660295486450195
    5. ' denomin' → logprob: -11.785295486450195
    6. ' denom' → logprob: -12.660295486450195
    7. '```' → logprob: -14.160295486450195
    8. '_den' → logprob: -14.285295486450195
    9. ' numerator' → logprob: -14.785295486450195
    10. 'd' → logprob: -14.910295486450195

Token 171: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.029753033071756363
    2. '!=' → logprob: -3.5297529697418213
    3. ')!=' → logprob: -13.904752731323242
    4. ' ' → logprob: -14.404752731323242
    5. '()!=' → logprob: -14.404752731323242
    6. '```' → logprob: -16.279752731323242
    7. ' not' → logprob: -16.529752731323242
    8. '!=-' → logprob: -16.529752731323242
    9. ']!=' → logprob: -16.529752731323242
    10. '<|end|>' → logprob: -17.029752731323242

Token 172: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006716317031532526
    2. ' ' → logprob: -5.006716251373291
    3. '<|end|>' → logprob: -15.63171672821045
    4. '۰' → logprob: -15.94421672821045
    5. '   ' → logprob: -16.006715774536133
    6. ' ' → logprob: -16.631715774536133
    7. '```' → logprob: -16.694215774536133
    8. '  ' → logprob: -16.819215774536133
    9. ' ' → logprob: -16.944215774536133
    10. '=' → logprob: -17.694215774536133

Token 173: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '۰' → logprob: -19.250085830688477
    4. ' ' → logprob: -19.750085830688477
    5. '1' → logprob: -20.375085830688477
    6. '  ' → logprob: -20.375085830688477
    7. '<|end|>' → logprob: -20.625085830688477
    8. 'not' → logprob: -20.875085830688477
    9. '
' → logprob: -21.250085830688477
    10. '٠' → logprob: -21.500085830688477

Token 174: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6351053714752197
    2. ':' → logprob: -0.7601053714752197
    3. ':
' → logprob: -6.635105133056641
    4. '<|end|>' → logprob: -7.885105133056641
    5. '                       ' → logprob: -8.38510513305664
    6. '               ' → logprob: -8.38510513305664
    7. ' :' → logprob: -8.76010513305664
    8. '```' → logprob: -10.38510513305664
    9. ',' → logprob: -10.51010513305664
    10. '                    ' → logprob: -10.63510513305664

Token 175: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09972697496414185
    2. 'val' → logprob: -2.474726915359497
    3. ' val' → logprob: -4.849727153778076
    4. '                       ' → logprob: -5.974727153778076
    5. '```' → logprob: -8.974726676940918
    6. '               ' → logprob: -9.224726676940918
    7. '                    
' → logprob: -10.474726676940918
    8. '                           ' → logprob: -10.974726676940918
    9. '                    ' → logprob: -11.099726676940918
    10. '                        
' → logprob: -11.224726676940918

Token 176: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.0019681276753544807
    2. ' val' → logprob: -6.251967906951904
    3. '                   ' → logprob: -10.251968383789062
    4. '```' → logprob: -13.251968383789062
    5. 'value' → logprob: -14.376968383789062
    6. '	val' → logprob: -15.126968383789062
    7. '[val' → logprob: -15.251968383789062
    8. '_val' → logprob: -15.876968383789062
    9. '                       ' → logprob: -15.876968383789062
    10. '               ' → logprob: -15.876968383789062

Token 177: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0380416102707386
    2. '=' → logprob: -3.288041591644287
    3. ' ' → logprob: -15.788042068481445
    4. ' ' → logprob: -18.163042068481445
    5. '>' → logprob: -18.663042068481445
    6. '                        ' → logprob: -18.788042068481445
    7. ' =
' → logprob: -18.788042068481445
    8. ')' → logprob: -19.038042068481445
    9. 's' → logprob: -19.038042068481445
    10. '＝' → logprob: -19.413042068481445

Token 178: ' numerator' (ID: 149054)
  Prédit: ' numerator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numerator' → logprob: -0.5232499837875366
    2. 'numer' → logprob: -0.8982499837875366
    3. 'n' → logprob: -9.648249626159668
    4. '                   ' → logprob: -10.648249626159668
    5. ' numer' → logprob: -10.773249626159668
    6. '(n' → logprob: -12.898249626159668
    7. 'num' → logprob: -12.898249626159668
    8. 'umerator' → logprob: -13.523249626159668
    9. '           ' → logprob: -13.648249626159668
    10. 'Numer' → logprob: -13.898249626159668

Token 179: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.2254170924425125
    2. '/' → logprob: -1.600417137145996
    3. '*' → logprob: -13.350417137145996
    4. ' ' → logprob: -13.600417137145996
    5. ' ' → logprob: -15.350417137145996
    6. ' *' → logprob: -15.475417137145996
    7. '                   ' → logprob: -15.600417137145996
    8. '```' → logprob: -15.725417137145996
    9. '                    ' → logprob: -15.850417137145996
    10. ')' → logprob: -15.850417137145996

Token 180: ' denominator' (ID: 101279)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.029753148555755615
    2. ' denominator' → logprob: -3.5297532081604004
    3. '                   ' → logprob: -13.154752731323242
    4. ' den' → logprob: -14.904752731323242
    5. '_den' → logprob: -16.154752731323242
    6. '               ' → logprob: -17.029752731323242
    7. '.den' → logprob: -17.279752731323242
    8. ' denomin' → logprob: -17.529752731323242
    9. '```' → logprob: -17.779752731323242
    10. '-den' → logprob: -17.904752731323242

Token 181: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0068750991486012936
    2. '<|end|>' → logprob: -5.881875038146973
    3. '                       ' → logprob: -6.131875038146973
    4. '               ' → logprob: -7.131875038146973
    5. '                    ' → logprob: -8.631875038146973
    6. '           ' → logprob: -8.631875038146973
    7. ' if' → logprob: -9.006875038146973
    8. '                  ' → logprob: -9.256875038146973
    9. '				' → logprob: -10.006875038146973
    10. '>' → logprob: -10.006875038146973

Token 182: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.28827086091041565
    2. ' if' → logprob: -2.038270950317383
    3. '                       ' → logprob: -2.163270950317383
    4. 'if' → logprob: -5.788270950317383
    5. '                    ' → logprob: -7.413270950317383
    6. '               ' → logprob: -7.913270950317383
    7. '                           ' → logprob: -8.163270950317383
    8. '                        ' → logprob: -8.413270950317383
    9. '                  ' → logprob: -9.288270950317383
    10. ' val' → logprob: -9.413270950317383

Token 183: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0015217645559459925
    2. ' if' → logprob: -6.501521587371826
    3. '                       ' → logprob: -11.126522064208984
    4. '                   ' → logprob: -12.376522064208984
    5. '```' → logprob: -15.501522064208984
    6. 'val' → logprob: -16.751522064208984
    7. '                           ' → logprob: -16.751522064208984
    8. 'If' → logprob: -17.126522064208984
    9. '                        ' → logprob: -17.501522064208984
    10. '               ' → logprob: -17.751522064208984

Token 184: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.25193825364112854
    2. 'val' → logprob: -1.5019382238388062
    3. '(val' → logprob: -12.876937866210938
    4. '	val' → logprob: -13.001937866210938
    5. 'max' → logprob: -13.376937866210938
    6. '[val' → logprob: -14.126937866210938
    7. '```' → logprob: -14.376937866210938
    8. '                   ' → logprob: -14.751937866210938
    9. ' max' → logprob: -15.001937866210938
    10. '_val' → logprob: -15.376937866210938

Token 185: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2519339919090271
    2. '>' → logprob: -1.5019340515136719
    3. ' ' → logprob: -13.001934051513672
    4. ' ' → logprob: -13.376934051513672
    5. ' >
' → logprob: -15.751934051513672
    6. '.' → logprob: -16.251934051513672
    7. ' <' → logprob: -16.501934051513672
    8. '<|end|>' → logprob: -16.501934051513672
    9. '">' → logprob: -16.751934051513672
    10. ')' → logprob: -16.751934051513672

Token 186: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5759395360946655
    2. ' max' → logprob: -0.8259395360946655
    3. '(max' → logprob: -17.075939178466797
    4. '	max' → logprob: -17.325939178466797
    5. '_max' → logprob: -17.450939178466797
    6. '[max' → logprob: -17.700939178466797
    7. ',max' → logprob: -18.450939178466797
    8. '=max' → logprob: -18.575939178466797
    9. '|max' → logprob: -20.075939178466797
    10. '```' → logprob: -20.075939178466797

Token 187: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.128163257315464e-07
    2. 'value' → logprob: -15.125
    3. 'max' → logprob: -17.5
    4. '```' → logprob: -18.5
    5. 'alue' → logprob: -18.625
    6. '_' → logprob: -18.875
    7. '_val' → logprob: -19.0
    8. '_values' → logprob: -19.25
    9. '_max' → logprob: -19.25
    10. '_Value' → logprob: -19.375

Token 188: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.21274210512638092
    2. ':' → logprob: -1.7127420902252197
    3. ':
' → logprob: -4.837742328643799
    4. '=' → logprob: -6.962742328643799
    5. '):' → logprob: -7.337742328643799
    6. '<|end|>' → logprob: -7.587742328643799
    7. '):
' → logprob: -8.46274185180664
    8. ' =' → logprob: -8.58774185180664
    9. ' :' → logprob: -9.08774185180664
    10. '                           ' → logprob: -9.21274185180664

Token 189: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.02726544812321663
    2. ' max' → logprob: -3.7772655487060547
    3. '                           ' → logprob: -6.527265548706055
    4. ' val' → logprob: -6.902265548706055
    5. '                        ' → logprob: -7.027265548706055
    6. '```' → logprob: -8.277265548706055
    7. '                               ' → logprob: -8.777265548706055
    8. '                   ' → logprob: -9.777265548706055
    9. '                    ' → logprob: -10.152265548706055
    10. '                                               ' → logprob: -10.527265548706055

Token 190: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.006717147771269083
    2. ' max' → logprob: -5.006717205047607
    3. 'val' → logprob: -13.38171672821045
    4. ' val' → logprob: -16.256717681884766
    5. '                           ' → logprob: -16.506717681884766
    6. '                       ' → logprob: -17.881717681884766
    7. '_max' → logprob: -19.256717681884766
    8. '	max' → logprob: -19.381717681884766
    9. '```' → logprob: -19.381717681884766
    10. '(max' → logprob: -19.756717681884766

Token 191: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.7697225252486533e-06
    2. 'value' → logprob: -12.625003814697266
    3. '_' → logprob: -15.375003814697266
    4. '_val' → logprob: -15.875003814697266
    5. '```' → logprob: -18.625003814697266
    6. '_code' → logprob: -18.625003814697266
    7. ' _' → logprob: -19.500003814697266
    8. 'Value' → logprob: -19.500003814697266
    9. '_values' → logprob: -20.125003814697266
    10. '_Value' → logprob: -20.250003814697266

Token 192: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0052694459445774555
    2. ' =' → logprob: -5.255269527435303
    3. '=max' → logprob: -10.255269050598145
    4. '=_' → logprob: -16.25527000427246
    5. 'max' → logprob: -16.38027000427246
    6. '_=' → logprob: -17.00527000427246
    7. '=

' → logprob: -17.38027000427246
    8. '=
' → logprob: -17.50527000427246
    9. '=True' → logprob: -18.00527000427246
    10. '_' → logprob: -18.13027000427246

Token 193: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.12692831456661224
    2. ' val' → logprob: -2.1269283294677734
    3. '	val' → logprob: -15.876928329467773
    4. '[val' → logprob: -17.001928329467773
    5. '(val' → logprob: -17.126928329467773
    6. '_val' → logprob: -17.626928329467773
    7. 'v' → logprob: -19.126928329467773
    8. '.val' → logprob: -19.251928329467773
    9. ',val' → logprob: -19.501928329467773
    10. '```' → logprob: -19.876928329467773

Token 194: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006109290407039225
    2. '<|end|>' → logprob: -8.375611305236816
    3. '```' → logprob: -8.750611305236816
    4. ')' → logprob: -9.125611305236816
    5. '
' → logprob: -10.250611305236816
    6. ' print' → logprob: -10.375611305236816
    7. 'return' → logprob: -11.000611305236816
    8. 'max' → logprob: -11.625611305236816
    9. '                        
' → logprob: -12.625611305236816
    10. '#' → logprob: -12.625611305236816

Token 195: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.723973582556937e-05
    2. '
' → logprob: -11.750017166137695
    3. ' print' → logprob: -11.750017166137695
    4. ')' → logprob: -13.750017166137695
    5. '```' → logprob: -16.000017166137695
    6. '#' → logprob: -17.500017166137695
    7. '#print' → logprob: -17.500017166137695
    8. '<|end|>' → logprob: -18.000017166137695
    9. '(print' → logprob: -18.500017166137695
    10. '                        
' → logprob: -18.500017166137695

Token 196: '(f' (ID: 1526)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.061974965035915375
    2. '(' → logprob: -2.8119750022888184
    3. '()' → logprob: -12.18697452545166
    4. 'max' → logprob: -14.68697452545166
    5. '("("' → logprob: -14.68697452545166
    6. '('' → logprob: -15.06197452545166
    7. '(`' → logprob: -15.56197452545166
    8. '((' → logprob: -15.68697452545166
    9. '("' → logprob: -15.68697452545166
    10. ' (' → logprob: -15.81197452545166

Token 197: '"{' (ID: 27510)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.9337479472160339
    2. 'max' → logprob: -1.1837480068206787
    3. '{' → logprob: -2.1837480068206787
    4. '"{' → logprob: -2.3087480068206787
    5. '(max' → logprob: -2.5587480068206787
    6. ''{' → logprob: -5.4337477684021
    7. '")' → logprob: -6.1837477684021
    8. 'loat' → logprob: -6.3087477684021
    9. 'ormat' → logprob: -7.1837477684021
    10. '{})' → logprob: -7.6837477684021

Token 198: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -7.896309739408025e-07
    2. ' max' → logprob: -14.250000953674316
    3. '(max' → logprob: -18.125
    4. 'float' → logprob: -18.5
    5. 'round' → logprob: -18.875
    6. 'int' → logprob: -19.25
    7. ':max' → logprob: -19.25
    8. 'min' → logprob: -20.0
    9. '-max' → logprob: -20.25
    10. '	max' → logprob: -20.625

Token 199: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -4.246537173457909e-06
    2. 'value' → logprob: -12.625003814697266
    3. 'alue' → logprob: -14.250003814697266
    4. 'max' → logprob: -16.250003814697266
    5. 'ax' → logprob: -16.625003814697266
    6. '_val' → logprob: -17.375003814697266
    7. '_VALUE' → logprob: -17.500003814697266
    8. 'Value' → logprob: -18.000003814697266
    9. '_' → logprob: -18.125003814697266
    10. 'a' → logprob: -18.250003814697266

Token 200: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.31395813822746277
    2. '}")' → logprob: -1.3139581680297852
    3. ':' → logprob: -7.313958168029785
    4. ':e' → logprob: -11.188958168029785
    5. ':f' → logprob: -11.813958168029785
    6. '}' → logprob: -12.438958168029785
    7. '")' → logprob: -13.313958168029785
    8. '}")
' → logprob: -14.063958168029785
    9. ' :.' → logprob: -14.563958168029785
    10. '}"' → logprob: -15.188958168029785

Token 201: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.5320797562599182
    2. '10' → logprob: -1.7820796966552734
    3. '9' → logprob: -1.7820796966552734
    4. '15' → logprob: -3.4070796966552734
    5. '12' → logprob: -3.4070796966552734
    6. '8' → logprob: -5.532079696655273
    7. '7' → logprob: -5.657079696655273
    8. '14' → logprob: -7.532079696655273
    9. '16' → logprob: -7.907079696655273
    10. '11' → logprob: -8.157079696655273

Token 202: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: 0.0
    2. 'lf' → logprob: -17.625
    3. 'g' → logprob: -18.75
    4. 'e' → logprob: -19.625
    5. '```' → logprob: -20.0
    6. '6' → logprob: -20.25
    7. '{' → logprob: -20.875
    8. 'fi' → logprob: -22.125
    9. '

' → logprob: -22.25
    10. '}' → logprob: -22.875

Token 203: '}")' (ID: 122365)
  Prédit: '}")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -7.839121826691553e-05
    2. '")' → logprob: -9.500078201293945
    3. ')")' → logprob: -12.875078201293945
    4. '}")
' → logprob: -14.125078201293945
    5. '})' → logprob: -16.875078201293945
    6. '}' → logprob: -17.125078201293945
    7. '}"' → logprob: -17.625078201293945
    8. '}")

' → logprob: -18.000078201293945
    9. '"}' → logprob: -18.000078201293945
    10. '}')' → logprob: -18.125078201293945


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 201
Tokens correctement prédits (1ère position, stricte): 78
Tokens correctement prédits (1ère position, avec adaptation): 86
Tokens correctement prédits (top 10): 167
Précision stricte (1ère position): 38.81%
Précision adaptée (1ère position): 42.79%
Précision (top 10): 83.08%
================================================================================
