================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def solve():
    import sys
    sys.setrecursionlimit(10**7)

    N = int(sys.stdin.readline())
    A = [int(sys.stdin.readline()) for _ in range(N)]

    from functools import cmp_to_key

    def pow_compare(x, y):
        # Compare x^y and y^x without computing large powers
        if x == y:
            return 0
        # By problem definition 0^0=1
        # handle zero cases:
        if x == 0 and y == 0:
            return 0
        if x == 0 and y != 0:
            # x^y = 0^y = 0 (if y>0), y^x = y^0=1
            return 1  # x^y < y^x, so return positive means x < y
        if y == 0 and x != 0:
            # x^y = x^0=1, y^x=0^x=0 (x>0), so x^y > y^x
            return -1
        # For positive x,y , use comparison of y*log(x) and x*log(y)
        import math
        a = y * math.log(x) if x > 0 else float('-inf')
        b = x * math.log(y) if y > 0 else float('-inf')
        if abs(a - b) < 1e-14:
            return 0
        elif a > b:
            return -1
        else:
            return 1

    B = sorted(A, key=cmp_to_key(pow_compare))

    for b in B:
        print(b)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' solve' (ID: 17722)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8254364728927612
    2. '\n' → logprob: -1.3254364728927612
    3. '\' → logprob: -1.4504364728927612
    4. '```' → logprob: -3.325436592102051
    5. '    
' → logprob: -4.450436592102051
    6. ':' → logprob: -5.700436592102051
    7. '    ' → logprob: -6.200436592102051
    8. '(' → logprob: -6.575436592102051
    9. '\r' → logprob: -6.700436592102051
    10. ' 
' → logprob: -6.950436592102051

Token 4: ' import' (ID: 1588)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.4606890678405762
    2. 'n' → logprob: -1.5856890678405762
    3. 'x' → logprob: -2.085689067840576
    4. '   ' → logprob: -2.085689067840576
    5. '\' → logprob: -2.460689067840576
    6. 'a' → logprob: -2.710689067840576
    7. 'i' → logprob: -3.460689067840576
    8. '```' → logprob: -3.585689067840576
    9. ' ' → logprob: -4.085689067840576
    10. '#' → logprob: -4.335689067840576

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.01426669955253601
    2. ' math' → logprob: -4.264266490936279
    3. ' ' → logprob: -10.389266967773438
    4. ' os' → logprob: -10.639266967773438
    5. 'sys' → logprob: -11.014266967773438
    6. ' numpy' → logprob: -11.139266967773438
    7. ' itertools' → logprob: -11.639266967773438
    8. '=sys' → logprob: -13.014266967773438
    9. ' sym' → logprob: -13.389266967773438
    10. '_' → logprob: -13.764266967773438

Token 6: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7321441173553467
    2. '.readline' → logprob: -1.4821441173553467
    3. '.' → logprob: -2.7321441173553467
    4. '
' → logprob: -2.7321441173553467
    5. '\' → logprob: -2.8571441173553467
    6. '```' → logprob: -3.4821441173553467
    7. '   ' → logprob: -4.107144355773926
    8. 'newline' → logprob: -4.482144355773926
    9. '.stdin' → logprob: -4.982144355773926
    10. '<|end|>' → logprob: -4.982144355773926

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.773481547832489
    2. '\n' → logprob: -1.5234816074371338
    3. '.readline' → logprob: -2.648481607437134
    4. 'newline' → logprob: -2.648481607437134
    5. '\' → logprob: -3.398481607437134
    6. '
' → logprob: -3.523481607437134
    7. '.' → logprob: -3.773481607437134
    8. 'input' → logprob: -4.023481369018555
    9. '```' → logprob: -4.273481369018555
    10. '    
' → logprob: -4.398481369018555

Token 8: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6008298993110657
    2. '.readline' → logprob: -1.975829839706421
    3. '\n' → logprob: -2.725829839706421
    4. '.' → logprob: -2.850829839706421
    5. 'input' → logprob: -3.225829839706421
    6. 'newline' → logprob: -3.350829839706421
    7. '\' → logprob: -3.725829839706421
    8. '    ' → logprob: -3.850829839706421
    9. ' ' → logprob: -4.475830078125
    10. ' readline' → logprob: -4.475830078125

Token 9: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11876638233661652
    2. '.stdin' → logprob: -2.8687663078308105
    3. '.stdout' → logprob: -2.9937663078308105
    4. ' .' → logprob: -6.3687663078308105
    5. '.exit' → logprob: -6.8687663078308105
    6. '.stderr' → logprob: -7.1187663078308105
    7. '.readline' → logprob: -7.2437663078308105
    8. '.argv' → logprob: -7.3687663078308105
    9. '.std' → logprob: -9.618766784667969
    10. '.import' → logprob: -9.868766784667969

Token 10: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.0048364149406552315
    2. 'rl' → logprob: -6.379836559295654
    3. '_rec' → logprob: -6.504836559295654
    4. 't' → logprob: -7.004836559295654
    5. 'limit' → logprob: -8.129836082458496
    6. 're' → logprob: -9.129836082458496
    7. 'trace' → logprob: -9.379836082458496
    8. '_limit' → logprob: -9.629836082458496
    9. ' recursion' → logprob: -10.379836082458496
    10. 'ursion' → logprob: -10.754836082458496

Token 11: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00035727277281694114
    2. 'urs' → logprob: -8.125357627868652
    3. 'ur' → logprob: -10.625357627868652
    4. '_' → logprob: -11.375357627868652
    5. 'limit' → logprob: -12.000357627868652
    6. '_limit' → logprob: -12.750357627868652
    7. 'ursor' → logprob: -12.750357627868652
    8. 'usion' → logprob: -12.875357627868652
    9. 'ision' → logprob: -13.500357627868652
    10. 'ursive' → logprob: -13.500357627868652

Token 12: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.018170546740293503
    2. '_limit' → logprob: -4.018170356750488
    3. ' limit' → logprob: -11.893170356750488
    4. '_depth' → logprob: -11.893170356750488
    5. 'depth' → logprob: -12.268170356750488
    6. '-limit' → logprob: -13.643170356750488
    7. 'lim' → logprob: -14.393170356750488
    8. '.limit' → logprob: -15.768170356750488
    9. '_LIMIT' → logprob: -16.018171310424805
    10. 'Limit' → logprob: -16.018171310424805

Token 13: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.45848218582978e-06
    2. '((' → logprob: -14.37500286102295
    3. '(
' → logprob: -14.87500286102295
    4. '("("' → logprob: -15.25000286102295
    5. '(

' → logprob: -15.37500286102295
    6. '```' → logprob: -15.62500286102295
    7. '40' → logprob: -16.000001907348633
    8. '('' → logprob: -16.250001907348633
    9. '()' → logprob: -16.250001907348633
    10. ' (' → logprob: -16.250001907348633

Token 14: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0007101670489646494
    2. '100' → logprob: -7.2507100105285645
    3. ' ' → logprob: -15.875710487365723
    4. '   ' → logprob: -17.250709533691406
    5. '300' → logprob: -17.875709533691406
    6. '500' → logprob: -18.125709533691406
    7. '1' → logprob: -18.375709533691406
    8. '200' → logprob: -18.750709533691406
    9. 'int' → logprob: -19.500709533691406
    10. '999' → logprob: -19.500709533691406

Token 15: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.7975839376449585
    2. '0' → logprob: -1.1725839376449585
    3. '6' → logprob: -1.9225839376449585
    4. '000' → logprob: -2.797584056854248
    5. '7' → logprob: -3.547584056854248
    6. '00' → logprob: -5.672584056854248
    7. '```' → logprob: -8.04758358001709
    8. '5' → logprob: -8.67258358001709
    9. '8' → logprob: -10.79758358001709
    10. '   ' → logprob: -11.17258358001709

Token 16: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0019398193107917905
    2. '9' → logprob: -6.25193977355957
    3. '8' → logprob: -11.50193977355957
    4. '6' → logprob: -13.75193977355957
    5. '```' → logprob: -19.25193977355957
    6. '**' → logprob: -20.75193977355957
    7. '``' → logprob: -21.25193977355957
    8. '

' → logprob: -23.00193977355957
    9. '+' → logprob: -23.12693977355957
    10. ')' → logprob: -23.25193977355957

Token 17: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.856408536899835e-05
    2. ')
' → logprob: -10.625028610229492
    3. ' )' → logprob: -12.875028610229492
    4. '   ' → logprob: -14.125028610229492
    5. ')
' → logprob: -15.000028610229492
    6. '`)' → logprob: -15.875028610229492
    7. '))' → logprob: -16.125028610229492
    8. ' ' → logprob: -16.625028610229492
    9. '```' → logprob: -17.000028610229492
    10. ')`' → logprob: -17.375028610229492

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3060075044631958
    2. '
' → logprob: -2.0560073852539062
    3. '\n' → logprob: -2.8060073852539062
    4. '    
' → logprob: -3.3060073852539062
    5. '\' → logprob: -3.5560073852539062
    6. '```' → logprob: -4.806007385253906
    7. 'newline' → logprob: -7.931007385253906
    8. '\r' → logprob: -8.056007385253906
    9. 'n' → logprob: -8.806007385253906
    10. '  
' → logprob: -8.931007385253906

Token 19: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5772334337234497
    2. '   ' → logprob: -0.8272334337234497
    3. 'data' → logprob: -8.32723331451416
    4. 'a' → logprob: -8.32723331451416
    5. ' n' → logprob: -8.45223331451416
    6. '```' → logprob: -8.70223331451416
    7. 't' → logprob: -9.07723331451416
    8. '    
' → logprob: -9.57723331451416
    9. 'input' → logprob: -9.70223331451416
    10. 'd' → logprob: -10.32723331451416

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017056092619895935
    2. '=' → logprob: -4.142055988311768
    3. ',' → logprob: -7.267055988311768
    4. '   ' → logprob: -9.267056465148926
    5. ' ' → logprob: -9.392056465148926
    6. ' ,' → logprob: -9.767056465148926
    7. '    ' → logprob: -10.392056465148926
    8. ')' → logprob: -11.017056465148926
    9. ' =
' → logprob: -11.767056465148926
    10. '=int' → logprob: -12.142056465148926

Token 21: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0031815171241760254
    2. 'int' → logprob: -5.753181457519531
    3. ' input' → logprob: -13.378181457519531
    4. ' ' → logprob: -13.378181457519531
    5. '=int' → logprob: -15.003181457519531
    6. ' map' → logprob: -15.503181457519531
    7. '   ' → logprob: -16.50318145751953
    8. '  ' → logprob: -17.12818145751953
    9. ' len' → logprob: -17.25318145751953
    10. '10' → logprob: -17.37818145751953

Token 22: '(sys' (ID: 41042)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1007295623421669
    2. '(' → logprob: -2.350729465484619
    3. '(sys' → logprob: -7.725729465484619
    4. 'input' → logprob: -9.475729942321777
    5. ' input' → logprob: -13.100729942321777
    6. '('' → logprob: -14.225729942321777
    7. '(stdin' → logprob: -14.725729942321777
    8. '()' → logprob: -15.225729942321777
    9. '(inp' → logprob: -15.725729942321777
    10. ' (' → logprob: -15.725729942321777

Token 23: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.027951950207352638
    2. '.' → logprob: -3.652951955795288
    3. '.readline' → logprob: -6.652951717376709
    4. '.argv' → logprob: -8.277952194213867
    5. '.input' → logprob: -9.777952194213867
    6. '.stdout' → logprob: -11.152952194213867
    7. ' .' → logprob: -11.152952194213867
    8. '.read' → logprob: -11.652952194213867
    9. '.std' → logprob: -12.527952194213867
    10. '.)' → logprob: -12.652952194213867

Token 24: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0002625278721097857
    2. '.read' → logprob: -8.500262260437012
    3. '.' → logprob: -9.750262260437012
    4. '.stdin' → logprob: -15.500262260437012
    5. ' readline' → logprob: -15.750262260437012
    6. ' .' → logprob: -16.125263214111328
    7. '.readlines' → logprob: -16.125263214111328
    8. '.Read' → logprob: -16.750263214111328
    9. '.buffer' → logprob: -17.125263214111328
    10. 'read' → logprob: -17.750263214111328

Token 25: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0016887469682842493
    2. '()' → logprob: -6.5016889572143555
    3. '().' → logprob: -8.626688957214355
    4. ' ())' → logprob: -12.376688957214355
    5. ')' → logprob: -13.501688957214355
    6. '())
' → logprob: -14.251688957214355
    7. '()))' → logprob: -14.876688957214355
    8. '(' → logprob: -15.626688957214355
    9. '()),' → logprob: -15.876688957214355
    10. '())

' → logprob: -16.12668800354004

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06544804573059082
    2. ')' → logprob: -3.440448045730591
    3. '<|end|>' → logprob: -4.190447807312012
    4. '    
' → logprob: -4.690447807312012
    5. '\n' → logprob: -6.065447807312012
    6. '    ' → logprob: -6.690447807312012
    7. ' ' → logprob: -7.690447807312012
    8. '\' → logprob: -7.690447807312012
    9. '#' → logprob: -7.940447807312012
    10. '  ' → logprob: -8.065447807312012

Token 27: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21944089233875275
    2. ')' → logprob: -2.4694409370422363
    3. 'data' → logprob: -3.7194409370422363
    4. 'A' (adapté à ' A') → logprob: -4.219440937042236
    5. 'a' → logprob: -4.719440937042236
    6. '    
' → logprob: -4.844440937042236
    7. ' ' → logprob: -5.219440937042236
    8. '    ' → logprob: -5.344440937042236
    9. 'for' → logprob: -5.594440937042236
    10. 'graph' → logprob: -5.594440937042236

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03885354846715927
    2. '=' → logprob: -3.288853645324707
    3. '[' → logprob: -7.663853645324707
    4. '.' → logprob: -9.288853645324707
    5. ',' → logprob: -9.788853645324707
    6. '[i' → logprob: -10.413853645324707
    7. '_' → logprob: -10.538853645324707
    8. ' ' → logprob: -10.663853645324707
    9. ' =[' → logprob: -10.663853645324707
    10. '   ' → logprob: -10.913853645324707

Token 29: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.20149071514606476
    2. 'list' → logprob: -1.7014907598495483
    3. ' [' → logprob: -9.82649040222168
    4. '[list' → logprob: -11.07649040222168
    5. '[' → logprob: -12.20149040222168
    6. ' []' → logprob: -14.20149040222168
    7. '[]' → logprob: -14.45149040222168
    8. ' ' → logprob: -14.45149040222168
    9. '(list' → logprob: -14.70149040222168
    10. ' tuple' → logprob: -15.57649040222168

Token 30: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.9292415749514475e-05
    2. '0' → logprob: -10.875039100646973
    3. ' int' → logprob: -10.875039100646973
    4. '(int' → logprob: -14.500039100646973
    5. ']int' → logprob: -14.500039100646973
    6. '*' → logprob: -15.875039100646973
    7. '   ' → logprob: -16.25004005432129
    8. '<int' → logprob: -16.87504005432129
    9. '[int' → logprob: -17.62504005432129
    10. ']' → logprob: -17.62504005432129

Token 31: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.4408324062824249
    2. '(' → logprob: -1.0658323764801025
    3. '(x' → logprob: -4.440832614898682
    4. '()' → logprob: -9.565832138061523
    5. '(i' → logprob: -10.190832138061523
    6. '(s' → logprob: -10.315832138061523
    7. '(
' → logprob: -10.565832138061523
    8. '()]' → logprob: -11.315832138061523
    9. '(

' → logprob: -11.315832138061523
    10. ' (' → logprob: -11.440832138061523

Token 32: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00331650348380208
    2. '.readline' → logprob: -5.753316402435303
    3. '.stdout' → logprob: -9.003316879272461
    4. 'stdin' → logprob: -12.128316879272461
    5. '().' → logprob: -12.503316879272461
    6. '.' → logprob: -12.628316879272461
    7. '(stdin' → logprob: -13.628316879272461
    8. '.argv' → logprob: -14.628316879272461
    9. '.stderr' → logprob: -14.878316879272461
    10. ' .' → logprob: -15.003316879272461

Token 33: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.001484747277572751
    2. '())' → logprob: -6.7514848709106445
    3. '().' → logprob: -8.626484870910645
    4. '()' → logprob: -10.001484870910645
    5. '()]' → logprob: -10.501484870910645
    6. '.' → logprob: -10.876484870910645
    7. 'line' → logprob: -11.751484870910645
    8. ')' → logprob: -11.751484870910645
    9. ' readline' → logprob: -11.876484870910645
    10. ')]' → logprob: -12.001484870910645

Token 34: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003160133957862854
    2. '()' → logprob: -6.003159999847412
    3. '()]' → logprob: -7.378159999847412
    4. ' ())' → logprob: -10.75316047668457
    5. '()))' → logprob: -11.00316047668457
    6. '().' → logprob: -12.00316047668457
    7. '())
' → logprob: -12.37816047668457
    8. '()),' → logprob: -12.50316047668457
    9. '()
' → logprob: -12.87816047668457
    10. '()`' → logprob: -14.25316047668457

Token 35: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16185221076011658
    2. '()' → logprob: -1.911852240562439
    3. '())' → logprob: -7.4118523597717285
    4. ')]' → logprob: -7.4118523597717285
    5. '()]' → logprob: -8.78685188293457
    6. 'for' → logprob: -9.28685188293457
    7. ']' → logprob: -9.41185188293457
    8. ' for' → logprob: -10.53685188293457
    9. '(' → logprob: -10.66185188293457
    10. ' )' → logprob: -11.78685188293457

Token 36: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25944843888282776
    2. '_' → logprob: -1.7594484090805054
    3. ' _' → logprob: -3.259448528289795
    4. ' range' → logprob: -4.759448528289795
    5. '(' → logprob: -5.134448528289795
    6. ' i' → logprob: -6.509448528289795
    7. ' ▁' → logprob: -7.259448528289795
    8. ' ()' → logprob: -8.384448051452637
    9. ' (' → logprob: -8.384448051452637
    10. ' ​' → logprob: -8.509448051452637

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8292434811592102
    2. 'range' → logprob: -0.9542434811592102
    3. ' range' → logprob: -2.0792434215545654
    4. 'in' → logprob: -2.9542434215545654
    5. ' ' → logprob: -6.9542436599731445
    6. '_' → logprob: -9.079243659973145
    7. '	range' → logprob: -9.079243659973145
    8. 'i' → logprob: -9.954243659973145
    9. '(range' → logprob: -9.954243659973145
    10. '  ' → logprob: -10.579243659973145

Token 38: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008616108447313309
    2. ' range' → logprob: -4.758615970611572
    3. '(range' → logprob: -14.25861644744873
    4. 'rang' → logprob: -15.63361644744873
    5. '	range' → logprob: -16.008615493774414
    6. ')' → logprob: -16.133615493774414
    7. 'A' → logprob: -16.133615493774414
    8. 'ra' → logprob: -16.258615493774414
    9. ']' → logprob: -16.258615493774414
    10. 'ran' → logprob: -16.383615493774414

Token 39: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.12695257365703583
    2. '(' → logprob: -2.126952648162842
    3. '(len' → logprob: -12.001952171325684
    4. ' (' → logprob: -12.126952171325684
    5. '(n' → logprob: -12.501952171325684
    6. 'N' → logprob: -12.626952171325684
    7. '(
' → logprob: -13.126952171325684
    8. ')' → logprob: -14.126952171325684
    9. ' N' → logprob: -14.501952171325684
    10. '(range' → logprob: -14.501952171325684

Token 40: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0019508942496031523
    2. ']' → logprob: -6.876950740814209
    3. ')' → logprob: -7.001950740814209
    4. ')])' → logprob: -13.126951217651367
    5. ' )' → logprob: -13.251951217651367
    6. '])]' → logprob: -13.501951217651367
    7. '])' → logprob: -14.626951217651367
    8. '))' → logprob: -14.751951217651367
    9. '')]' → logprob: -14.876951217651367
    10. ')]
' → logprob: -15.251951217651367

Token 41: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05474099516868591
    2. '\n' → logprob: -4.054740905761719
    3. '    
' → logprob: -4.429740905761719
    4. '   ' → logprob: -4.679740905761719
    5. ' 
' → logprob: -5.054740905761719
    6. '  
' → logprob: -6.304740905761719
    7. ')' → logprob: -6.554740905761719
    8. '```' → logprob: -6.804740905761719
    9. '\' → logprob: -7.179740905761719
    10. '<|end|>' → logprob: -7.304740905761719

Token 42: ' from' (ID: 591)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1454051434993744
    2. 'A' → logprob: -2.5204050540924072
    3. 'stack' → logprob: -4.395405292510986
    4. 'd' → logprob: -4.895405292510986
    5. '   ' → logprob: -5.645405292510986
    6. 'def' → logprob: -5.645405292510986
    7. 'max' → logprob: -5.770405292510986
    8. '#' → logprob: -6.020405292510986
    9. 'answer' → logprob: -6.145405292510986
    10. 'count' → logprob: -6.520405292510986

Token 43: ' functools' (ID: 142636)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.004543811548501253
    2. ' math' → logprob: -6.129543781280518
    3. ' ' → logprob: -7.004543781280518
    4. ' itertools' → logprob: -7.004543781280518
    5. ' collection' → logprob: -8.379544258117676
    6. ' heap' → logprob: -9.629544258117676
    7. ' colle' → logprob: -9.629544258117676
    8. 'collections' → logprob: -9.754544258117676
    9. ' sys' → logprob: -10.254544258117676
    10. ' collect' → logprob: -10.379544258117676

Token 44: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.07934621721506119
    2. 'import' → logprob: -2.704346179962158
    3. ' ' → logprob: -5.579346179962158
    4. '.' → logprob: -5.954346179962158
    5. '_' → logprob: -6.079346179962158
    6. '	import' → logprob: -8.954346656799316
    7. ' .' → logprob: -8.954346656799316
    8. '_import' → logprob: -9.454346656799316
    9. ' ‌' → logprob: -9.829346656799316
    10. ' _' → logprob: -9.954346656799316

Token 45: ' cmp' (ID: 57822)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5765063762664795
    2. ' l' → logprob: -0.8265063762664795
    3. 'reduce' → logprob: -7.701506614685059
    4. ' reduce' → logprob: -9.576506614685059
    5. 'cmp' → logprob: -11.076506614685059
    6. 'cache' → logprob: -11.326506614685059
    7. ' cmp' → logprob: -12.576506614685059
    8. '	l' → logprob: -12.576506614685059
    9. ' ' → logprob: -12.826506614685059
    10. ' cache' → logprob: -12.951506614685059

Token 46: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.00044008632539771497
    2. '_' → logprob: -7.8754401206970215
    3. '_func' → logprob: -11.125439643859863
    4. '_key' → logprob: -11.375439643859863
    5. 'To' → logprob: -11.625439643859863
    6. '=_' → logprob: -12.250439643859863
    7. '_t' → logprob: -12.250439643859863
    8. '=' → logprob: -13.125439643859863
    9. '_token' → logprob: -13.875439643859863
    10. '_TO' → logprob: -14.000439643859863

Token 47: '_key' (ID: 6724)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.0009571973932906985
    2. '_key' → logprob: -7.500957012176514
    3. 'k' → logprob: -8.375957489013672
    4. 'Key' → logprob: -9.500957489013672
    5. '-key' → logprob: -10.750957489013672
    6. 'ker' → logprob: -11.250957489013672
    7. '```' → logprob: -11.250957489013672
    8. 's' → logprob: -11.625957489013672
    9. ' key' → logprob: -12.375957489013672
    10. 'def' → logprob: -12.375957489013672

Token 48: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.30969512462615967
    2. '<|end|>' → logprob: -2.184695243835449
    3. '
' → logprob: -2.434695243835449
    4. ' def' → logprob: -3.809695243835449
    5. '   ' → logprob: -3.934695243835449
    6. '    
' → logprob: -5.309695243835449
    7. '```' → logprob: -5.559695243835449
    8. '<|end|>' → logprob: -5.559695243835449
    9. ' ' → logprob: -5.809695243835449
    10. ')' → logprob: -6.184695243835449

Token 49: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02728876657783985
    2. '   ' → logprob: -3.9022886753082275
    3. ' def' → logprob: -5.652288913726807
    4. '    
' → logprob: -6.777288913726807
    5. '
' → logprob: -6.902288913726807
    6. '```' → logprob: -7.277288913726807
    7. '`' → logprob: -9.902288436889648
    8. '    ' → logprob: -10.027288436889648
    9. 'newline' → logprob: -10.027288436889648
    10. '\' → logprob: -10.402288436889648

Token 50: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0022845494095236063
    2. ' def' → logprob: -6.252284526824951
    3. '   ' → logprob: -8.00228500366211
    4. '```' → logprob: -11.37728500366211
    5. '    
' → logprob: -12.12728500366211
    6. '
' → logprob: -13.37728500366211
    7. 'de' → logprob: -14.00228500366211
    8. '	def' → logprob: -14.62728500366211
    9. '`' → logprob: -15.50228500366211
    10. ' 
' → logprob: -15.75228500366211

Token 51: ' pow' (ID: 9779)
  Prédit: ' compare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compare' → logprob: -0.11066319793462753
    2. ' cmp' → logprob: -2.4856631755828857
    3. ' comparator' → logprob: -3.9856631755828857
    4. ' comp' → logprob: -6.485663414001465
    5. ' comparer' → logprob: -7.985663414001465
    6. ' custom' → logprob: -7.985663414001465
    7. ' compar' → logprob: -8.235663414001465
    8. 'compare' → logprob: -9.110663414001465
    9. ' compara' → logprob: -9.360663414001465
    10. ' c' → logprob: -9.610663414001465

Token 52: '_compare' (ID: 82588)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.4267858564853668
    2. '(' → logprob: -1.1767858266830444
    3. '2' → logprob: -4.051785945892334
    4. '10' → logprob: -4.801785945892334
    5. '_' → logprob: -5.301785945892334
    6. 'e' → logprob: -6.051785945892334
    7. '(x' → logprob: -6.676785945892334
    8. '(a' → logprob: -6.926785945892334
    9. 'erm' → logprob: -8.301785469055176
    10. 'a' → logprob: -8.426785469055176

Token 53: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.038185395300388336
    2. '(a' → logprob: -3.2881853580474854
    3. '(x' → logprob: -9.038185119628906
    4. ' (' → logprob: -11.288185119628906
    5. '(A' → logprob: -12.413185119628906
    6. '(p' → logprob: -13.288185119628906
    7. '(i' → logprob: -13.538185119628906
    8. '(left' → logprob: -13.913185119628906
    9. '_' → logprob: -14.288185119628906
    10. '(l' → logprob: -14.538185119628906

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027420982951298356
    2. ',y' → logprob: -8.750274658203125
    3. ' ,' → logprob: -9.375274658203125
    4. ',x' → logprob: -11.875274658203125
    5. ',a' → logprob: -11.875274658203125
    6. '):' → logprob: -12.250274658203125
    7. ',b' → logprob: -12.625274658203125
    8. ':' → logprob: -13.125274658203125
    9. ',p' → logprob: -13.750274658203125
    10. ',s' → logprob: -14.250274658203125

Token 55: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6931555271148682
    2. ' y' → logprob: -0.6931555271148682
    3. '   ' → logprob: -12.443155288696289
    4. '	y' → logprob: -13.318155288696289
    5. 'x' → logprob: -13.943155288696289
    6. '    ' → logprob: -14.193155288696289
    7. ' ' → logprob: -14.568155288696289
    8. '  ' → logprob: -15.818155288696289
    9. ' ' → logprob: -15.943155288696289
    10. ',y' → logprob: -15.943155288696289

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013624972198158503
    2. ':' → logprob: -7.001362323760986
    3. ')' → logprob: -8.126362800598145
    4. ',' → logprob: -8.876362800598145
    5. ' ):' → logprob: -11.626362800598145
    6. '):
' → logprob: -13.376362800598145
    7. '   ' → logprob: -13.626362800598145
    8. '**' → logprob: -14.001362800598145
    9. ' :' → logprob: -14.251362800598145
    10. ']:' → logprob: -14.376362800598145

Token 57: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40415436029434204
    2. '(' → logprob: -1.1541543006896973
    3. '   ' → logprob: -4.904154300689697
    4. '(x' → logprob: -5.529154300689697
    5. '):' → logprob: -5.904154300689697
    6. '():' → logprob: -6.279154300689697
    7. ':**' → logprob: -8.279154777526855
    8. ' :' → logprob: -8.779154777526855
    9. '       ' → logprob: -9.154154777526855
    10. '(:' → logprob: -9.404154777526855

Token 58: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.602127730846405
    2. '   ' → logprob: -1.2271277904510498
    3. ' if' → logprob: -2.22712779045105
    4. 'x' → logprob: -3.47712779045105
    5. 'return' → logprob: -4.727127552032471
    6. 'xy' → logprob: -5.352127552032471
    7. 'pow' → logprob: -6.477127552032471
    8. ' return' → logprob: -6.477127552032471
    9. '       ' → logprob: -6.727127552032471
    10. ' x' → logprob: -7.852127552032471

Token 59: ' Compare' (ID: 38200)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4272063970565796
    2. 'if' → logprob: -1.4272063970565796
    3. 'return' → logprob: -3.177206516265869
    4. ' if' → logprob: -3.802206516265869
    5. 'xy' → logprob: -4.177206516265869
    6. 'xp' → logprob: -5.052206516265869
    7. '   ' → logprob: -5.302206516265869
    8. 'pow' → logprob: -5.552206516265869
    9. ' return' → logprob: -5.677206516265869
    10. ' x' → logprob: -6.052206516265869

Token 60: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.027493715286254883
    2. 'pow' → logprob: -4.152493476867676
    3. '(x' → logprob: -5.027493476867676
    4. ' x' → logprob: -5.527493476867676
    5. '(pow' → logprob: -8.527493476867676
    6. '   ' → logprob: -8.777493476867676
    7. 'abs' → logprob: -8.902493476867676
    8. 'str' → logprob: -9.027493476867676
    9. ' pow' → logprob: -10.027493476867676
    10. 'a' → logprob: -10.277493476867676

Token 61: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.3017541766166687
    2. ',' → logprob: -2.3017542362213135
    3. ' and' → logprob: -2.3017542362213135
    4. ' ' → logprob: -3.5517542362213135
    5. ' **' → logprob: -3.8017542362213135
    6. ' ,' → logprob: -5.176753997802734
    7. ' x' → logprob: -7.676753997802734
    8. ' a' → logprob: -7.801753997802734
    9. '   ' → logprob: -7.926753997802734
    10. ',y' → logprob: -7.926753997802734

Token 62: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014503232203423977
    2. 'x' → logprob: -4.264503002166748
    3. ' y' → logprob: -8.764503479003906
    4. 'A' → logprob: -9.014503479003906
    5. 'pow' → logprob: -9.889503479003906
    6. '```' → logprob: -13.389503479003906
    7. '2' → logprob: -13.639503479003906
    8. 'a' → logprob: -13.764503479003906
    9. '(x' → logprob: -13.764503479003906
    10. '(y' → logprob: -14.139503479003906

Token 63: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.010939467698335648
    2. ' ' → logprob: -4.760939598083496
    3. 'and' → logprob: -7.135939598083496
    4. ',' → logprob: -7.760939598083496
    5. ' ,' → logprob: -8.510939598083496
    6. ' vs' → logprob: -8.635939598083496
    7. '  ' → logprob: -9.135939598083496
    8. ' -' → logprob: -9.135939598083496
    9. ' >' → logprob: -9.135939598083496
    10. '>' → logprob: -9.260939598083496

Token 64: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.006730883847922087
    2. ' y' → logprob: -5.006731033325195
    3. 'x' → logprob: -11.631731033325195
    4. '   ' → logprob: -12.131731033325195
    5. '    ' → logprob: -15.006731033325195
    6. ' ' → logprob: -15.256731033325195
    7. '	y' → logprob: -15.256731033325195
    8. 'y's' → logprob: -15.881731033325195
    9. ''y' → logprob: -16.006731033325195
    10. '  ' → logprob: -16.256731033325195

Token 65: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.0007862794445827603
    2. 'x' → logprob: -7.250786304473877
    3. '**' → logprob: -10.625785827636719
    4. '^)' → logprob: -10.625785827636719
    5. ' ' → logprob: -12.125785827636719
    6. '^{' → logprob: -12.750785827636719
    7. ' x' → logprob: -12.875785827636719
    8. ',x' → logprob: -13.000785827636719
    9. ',' → logprob: -13.250785827636719
    10. '.' → logprob: -13.250785827636719

Token 66: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.584239938296378e-06
    2. ' x' → logprob: -12.250007629394531
    3. '```' → logprob: -13.500007629394531
    4. ' ' → logprob: -14.750007629394531
    5. 'pow' → logprob: -15.250007629394531
    6. '`' → logprob: -16.00000762939453
    7. 'y' → logprob: -16.00000762939453
    8. '   ' → logprob: -16.37500762939453
    9. '2' → logprob: -16.81250762939453
    10. '1' → logprob: -17.25000762939453

Token 67: ' without' (ID: 2935)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5325506925582886
    2. ':' → logprob: -1.5325506925582886
    3. ')' → logprob: -1.7825506925582886
    4. '(' → logprob: -3.657550811767578
    5. '   ' → logprob: -6.157550811767578
    6. '(x' → logprob: -8.032550811767578
    7. '
' → logprob: -9.782550811767578
    8. '```' → logprob: -9.907550811767578
    9. '(p' → logprob: -10.032550811767578
    10. '(
' → logprob: -10.282550811767578

Token 68: ' computing' (ID: 34349)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.8148206472396851
    2. 'comput' → logprob: -0.9398206472396851
    3. 'direct' → logprob: -2.3148207664489746
    4. 'actually' → logprob: -3.6898207664489746
    5. ' computing' → logprob: -4.564820766448975
    6. ' actually' → logprob: -4.689820766448975
    7. 'actual' → logprob: -5.064820766448975
    8. ' directly' → logprob: -5.189820766448975
    9. 'explicit' → logprob: -5.814820766448975
    10. ' calculating' → logprob: -6.314820766448975

Token 69: ' large' (ID: 4410)
  Prédit: ' full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' full' → logprob: -0.772409200668335
    2. ' directly' → logprob: -1.397409200668335
    3. ' the' → logprob: -2.397409200668335
    4. ' actual' → logprob: -3.022409200668335
    5. 'x' → logprob: -3.272409200668335
    6. 'actual' → logprob: -4.147409439086914
    7. 'full' → logprob: -4.147409439086914
    8. 'the' → logprob: -4.397409439086914
    9. ' x' → logprob: -4.647409439086914
    10. 'direct' → logprob: -4.897409439086914

Token 70: ' powers' (ID: 27742)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.651125967502594
    2. 'numbers' → logprob: -1.0261259078979492
    3. 'inte' → logprob: -2.651125907897949
    4. 'pow' → logprob: -4.276125907897949
    5. '```' → logprob: -4.651125907897949
    6. ' integers' → logprob: -4.776125907897949
    7. ' ' → logprob: -5.276125907897949
    8. 'values' → logprob: -6.151125907897949
    9. 'powers' → logprob: -6.401125907897949
    10. '*' → logprob: -7.026125907897949

Token 71: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01458993274718523
    2. '):' → logprob: -4.389589786529541
    3. ')' → logprob: -6.764589786529541
    4. ':
' → logprob: -7.889589786529541
    5. '   ' → logprob: -8.0145902633667
    6. ' :' → logprob: -10.2645902633667
    7. '
' → logprob: -10.2645902633667
    8. ' ' → logprob: -10.3895902633667
    9. ':return' → logprob: -10.7645902633667
    10. '':' → logprob: -11.0145902633667

Token 72: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03720074146986008
    2. '   ' → logprob: -4.037200927734375
    3. '):' → logprob: -4.162200927734375
    4. ')' → logprob: -6.787200927734375
    5. '       ' → logprob: -7.037200927734375
    6. ':
' → logprob: -7.787200927734375
    7. ' :' → logprob: -8.162200927734375
    8. ' ' → logprob: -9.287200927734375
    9. '
' → logprob: -9.537200927734375
    10. '    ' → logprob: -9.662200927734375

Token 73: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47790902853012085
    2. '   ' → logprob: -1.3529090881347656
    3. ':' → logprob: -3.1029090881347656
    4. '
' → logprob: -3.8529090881347656
    5. '    ' → logprob: -4.852909088134766
    6. '        ' → logprob: -5.102909088134766
    7. ' if' → logprob: -5.227909088134766
    8. '        
' → logprob: -5.352909088134766
    9. 'if' (adapté à ' if') → logprob: -5.477909088134766
    10. '    
' → logprob: -5.602909088134766

Token 74: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6326237320899963
    2. ' x' → logprob: -0.7576237320899963
    3. ' ' → logprob: -11.257623672485352
    4. '	x' → logprob: -12.257623672485352
    5. ' (' → logprob: -13.382623672485352
    6. 'pow' → logprob: -13.757623672485352
    7. '   ' → logprob: -13.882623672485352
    8. '(' → logprob: -14.007623672485352
    9. 'A' → logprob: -14.632623672485352
    10. '(x' → logprob: -14.945123672485352

Token 75: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14328084886074066
    2. ' ==' → logprob: -2.0182807445526123
    3. '=' → logprob: -8.143280982971191
    4. ')==' → logprob: -8.893280982971191
    5. ')' → logprob: -9.893280982971191
    6. ']==' → logprob: -10.268280982971191
    7. '**' → logprob: -10.518280982971191
    8. '==
' → logprob: -11.768280982971191
    9. '>' → logprob: -11.893280982971191
    10. ' ' → logprob: -12.268280982971191

Token 76: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.018256941810250282
    2. '1' → logprob: -4.018257141113281
    3. ' y' → logprob: -9.643257141113281
    4. '0' → logprob: -10.393257141113281
    5. ' ' → logprob: -11.768257141113281
    6. '   ' → logprob: -14.018257141113281
    7. 'x' → logprob: -14.643257141113281
    8. '	y' → logprob: -15.018257141113281
    9. '    ' → logprob: -15.393257141113281
    10. 'y's' → logprob: -15.518257141113281

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001085566938854754
    2. ':return' → logprob: -7.0010857582092285
    3. ' :' → logprob: -9.50108528137207
    4. ':
' → logprob: -9.50108528137207
    5. '   ' → logprob: -11.62608528137207
    6. '):' → logprob: -12.00108528137207
    7. ' and' → logprob: -12.37608528137207
    8. ',' → logprob: -13.50108528137207
    9. ':**' → logprob: -14.25108528137207
    10. ' ' → logprob: -14.50108528137207

Token 78: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5544973611831665
    2. '       ' → logprob: -0.9294973611831665
    3. ':return' → logprob: -4.304497241973877
    4. '   ' → logprob: -4.679497241973877
    5. ':
' → logprob: -6.679497241973877
    6. '    ' → logprob: -6.679497241973877
    7. '	' → logprob: -6.804497241973877
    8. ' :' → logprob: -7.054497241973877
    9. '           ' → logprob: -7.179497241973877
    10. '        ' → logprob: -7.304497241973877

Token 79: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7458639740943909
    2. ' ' → logprob: -1.870863914489746
    3. '       ' → logprob: -2.120863914489746
    4. ' return' → logprob: -2.245863914489746
    5. '           ' → logprob: -2.745863914489746
    6. '   ' → logprob: -2.995863914489746
    7. ':' → logprob: -4.870863914489746
    8. 'return' (adapté à ' return') → logprob: -4.995863914489746
    9. ':return' → logprob: -5.495863914489746
    10. '        ' → logprob: -5.620863914489746

Token 80: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '   ' → logprob: -17.250123977661133
    4. '۰' → logprob: -17.875123977661133
    5. '```' → logprob: -19.625123977661133
    6. '       ' → logprob: -19.875123977661133
    7. ' ' → logprob: -20.000123977661133
    8. '٠' → logprob: -20.625123977661133
    9. '	' → logprob: -20.750123977661133
    10. '           ' → logprob: -20.937623977661133

Token 81: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '۰' → logprob: -18.125
    4. '   ' → logprob: -20.625
    5. '०' → logprob: -20.625
    6. '０' → logprob: -21.0
    7. '```' → logprob: -21.125
    8. '০' → logprob: -21.25
    9. '٠' → logprob: -21.375
    10. '<|end|>' → logprob: -23.375

Token 82: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14794312417507172
    2. '\n' → logprob: -2.1479430198669434
    3. '    
' → logprob: -4.897943019866943
    4. '   ' → logprob: -5.147943019866943
    5. ' 
' → logprob: -6.522943019866943
    6. '' → logprob: -6.647943019866943
    7. '   
' → logprob: -6.772943019866943
    8. '  
' → logprob: -6.897943019866943
    9. '<|end|>' → logprob: -7.522943019866943
    10. '1' → logprob: -7.772943019866943

Token 83: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5475955009460449
    2. '
' → logprob: -1.172595500946045
    3. '   ' → logprob: -3.047595500946045
    4. '    
' → logprob: -3.797595500946045
    5. '' → logprob: -4.047595500946045
    6. '  
' → logprob: -5.297595500946045
    7. ' 
' → logprob: -5.547595500946045
    8. '1' → logprob: -5.797595500946045
    9. '\' → logprob: -5.922595500946045
    10. '   
' → logprob: -5.922595500946045

Token 84: ' #' (ID: 1069)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5615442395210266
    2. '   ' → logprob: -1.4365441799163818
    3. ' ' → logprob: -2.936544179916382
    4. '    
' → logprob: -3.436544179916382
    5. ' if' → logprob: -3.561544179916382
    6. '
' → logprob: -4.436544418334961
    7. ' 
' → logprob: -4.561544418334961
    8. ':' → logprob: -5.061544418334961
    9. '' → logprob: -5.061544418334961
    10. '    ' → logprob: -5.186544418334961

Token 85: ' By' (ID: 4534)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.45735660195350647
    2. 'if' → logprob: -1.332356572151184
    3. ' if' → logprob: -3.3323566913604736
    4. '   ' → logprob: -3.4573566913604736
    5. ' i' → logprob: -3.5823566913604736
    6. '1' → logprob: -5.5823564529418945
    7. ' ' → logprob: -7.0823564529418945
    8. '```' → logprob: -7.3323564529418945
    9. 'elif' → logprob: -7.4573564529418945
    10. '       ' → logprob: -8.082356452941895

Token 86: ' problem' (ID: 4792)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.24837060272693634
    2. 'import' → logprob: -2.12337064743042
    3. 'pow' → logprob: -2.87337064743042
    4. '(x' → logprob: -4.49837064743042
    5. 'math' → logprob: -5.37337064743042
    6. 'from' → logprob: -5.37337064743042
    7. 'str' → logprob: -5.49837064743042
    8. 'using' → logprob: -5.49837064743042
    9. ' x' → logprob: -6.24837064743042
    10. ' comparing' → logprob: -6.49837064743042

Token 87: ' definition' (ID: 16083)
  Prédit: 'statement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'statement' → logprob: -0.4970918595790863
    2. ' statement' → logprob: -1.3720918893814087
    3. 'description' → logprob: -2.497091770172119
    4. ' description' → logprob: -3.497091770172119
    5. 'constraints' → logprob: -5.247091770172119
    6. ''s' → logprob: -5.622091770172119
    7. '   ' → logprob: -5.747091770172119
    8. ' constraints' → logprob: -5.872091770172119
    9. 'stat' → logprob: -6.372091770172119
    10. 'analysis' → logprob: -6.872091770172119

Token 88: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7156915664672852
    2. ' if' → logprob: -1.4656915664672852
    3. ' ' → logprob: -2.715691566467285
    4. '       ' → logprob: -3.090691566467285
    5. ',' → logprob: -3.590691566467285
    6. ' x' → logprob: -3.715691566467285
    7. '    ' → logprob: -4.215691566467285
    8. '    
' → logprob: -4.215691566467285
    9. ':' → logprob: -4.465691566467285
    10. ' elif' → logprob: -4.590691566467285

Token 89: '0' (ID: 15)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1977614313364029
    2. ' if' → logprob: -2.3227615356445312
    3. '   ' → logprob: -3.5727615356445312
    4. 'elif' → logprob: -3.9477615356445312
    5. 'import' → logprob: -4.197761535644531
    6. 'x' → logprob: -5.197761535644531
    7. 'return' → logprob: -5.572761535644531
    8. '       ' → logprob: -6.197761535644531
    9. '1' → logprob: -6.322761535644531
    10. 'y' → logprob: -6.697761535644531

Token 90: '^' (ID: 61)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44124287366867065
    2. ' <' → logprob: -1.8162429332733154
    3. ' and' → logprob: -2.1912429332733154
    4. ':' → logprob: -3.1912429332733154
    5. '  ' → logprob: -4.941242694854736
    6. ' ==' → logprob: -5.066242694854736
    7. ' :' → logprob: -5.066242694854736
    8. ',' → logprob: -5.316242694854736
    9. '<' → logprob: -5.316242694854736
    10. ' <=' → logprob: -6.316242694854736

Token 91: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.036311469972133636
    2. 'x' → logprob: -3.911311388015747
    3. '1' → logprob: -4.411311626434326
    4. 'y' → logprob: -5.661311626434326
    5. ' ' → logprob: -11.661311149597168
    6. ' y' → logprob: -12.161311149597168
    7. ' x' → logprob: -12.723811149597168
    8. '```' → logprob: -13.911311149597168
    9. '9' → logprob: -13.973811149597168
    10. 'a' → logprob: -13.973811149597168

Token 92: '=' (ID: 28)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2838059663772583
    2. ' is' → logprob: -1.6588059663772583
    3. ',' → logprob: -4.283805847167969
    4. ' and' → logprob: -4.658805847167969
    5. ')' → logprob: -4.908805847167969
    6. '  ' → logprob: -5.283805847167969
    7. ' )' → logprob: -5.408805847167969
    8. ' ,' → logprob: -5.783805847167969
    9. ' >' → logprob: -5.783805847167969
    10. ' ==' → logprob: -5.908805847167969

Token 93: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009382500313222408
    2. '1' → logprob: -4.884382724761963
    3. '-' → logprob: -6.384382724761963
    4. ' ' → logprob: -9.384382247924805
    5. ' -' → logprob: -13.884382247924805
    6. '=' → logprob: -14.009382247924805
    7. '<|end|>' → logprob: -15.009382247924805
    8. '>' → logprob: -15.634382247924805
    9. ')' → logprob: -15.884382247924805
    10. 'x' → logprob: -16.196882247924805

Token 94: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.209113210439682
    2. '\n' → logprob: -2.959113121032715
    3. '    
' → logprob: -3.084113121032715
    4. '   ' → logprob: -3.334113121032715
    5. ' 
' → logprob: -4.584113121032715
    6. '<|end|>' → logprob: -4.834113121032715
    7. '  
' → logprob: -4.959113121032715
    8. ',' → logprob: -4.959113121032715
    9. ' ' → logprob: -5.084113121032715
    10. '' → logprob: -5.459113121032715

Token 95: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5499144792556763
    2. '
' → logprob: -2.0499143600463867
    3. '    
' → logprob: -2.2999143600463867
    4. ' ' → logprob: -2.9249143600463867
    5. ' 
' → logprob: -3.0499143600463867
    6. '\n' → logprob: -3.4249143600463867
    7. '  
' → logprob: -4.299914360046387
    8. '   
' → logprob: -4.799914360046387
    9. '' → logprob: -4.924914360046387
    10. ',' → logprob: -4.924914360046387

Token 96: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1660683155059814
    2. ' ' → logprob: -1.2910683155059814
    3. '\n' → logprob: -1.7910683155059814
    4. ' 
' → logprob: -2.2910683155059814
    5. '
' → logprob: -3.1660683155059814
    6. '    
' → logprob: -3.4160683155059814
    7. '  
' → logprob: -4.291068077087402
    8. '   
' → logprob: -4.541068077087402
    9. '\' → logprob: -4.916068077087402
    10. '    ' → logprob: -5.041068077087402

Token 97: ' handle' (ID: 5318)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10175664722919464
    2. ' if' → logprob: -2.3517565727233887
    3. '   ' → logprob: -6.601756572723389
    4. 'elif' → logprob: -9.476757049560547
    5. 'i' → logprob: -10.476757049560547
    6. ' elif' → logprob: -11.351757049560547
    7. 'If' → logprob: -11.476757049560547
    8. '```' → logprob: -11.851757049560547
    9. ' ' → logprob: -11.976757049560547
    10. ' i' → logprob: -11.976757049560547

Token 98: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9676331281661987
    2. ' ' → logprob: -1.2176331281661987
    3. ' x' → logprob: -1.2176331281661987
    4. 'x' → logprob: -3.5926332473754883
    5. '   ' → logprob: -8.342633247375488
    6. '(' → logprob: -8.967633247375488
    7. '1' → logprob: -9.217633247375488
    8. '    ' → logprob: -10.092633247375488
    9. ' if' → logprob: -10.592633247375488
    10. '(x' → logprob: -10.842633247375488

Token 99: ' cases' (ID: 7911)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4653739333152771
    2. ' and' → logprob: -1.8403739929199219
    3. ':' → logprob: -2.840373992919922
    4. ' ,' → logprob: -3.590373992919922
    5. ' if' → logprob: -3.840373992919922
    6. ' :' → logprob: -3.965373992919922
    7. '   ' → logprob: -4.340373992919922
    8. ',' → logprob: -4.340373992919922
    9. '  ' → logprob: -4.340373992919922
    10. ' case' → logprob: -5.090373992919922

Token 100: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30872848629951477
    2. '    
' → logprob: -2.6837284564971924
    3. ' ' → logprob: -2.9337284564971924
    4. '   
' → logprob: -3.4337284564971924
    5. '
' → logprob: -3.5587284564971924
    6. '<|end|>' → logprob: -4.0587286949157715
    7. ' 
' → logprob: -4.4337286949157715
    8. '  
' → logprob: -4.4337286949157715
    9. ':' → logprob: -4.6837286949157715
    10. '  ' → logprob: -5.0587286949157715

Token 101: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.984555721282959
    2. '   ' → logprob: -1.109555721282959
    3. ' 
' → logprob: -2.234555721282959
    4. '    
' → logprob: -2.609555721282959
    5. '<|end|>' → logprob: -3.234555721282959
    6. '   
' → logprob: -3.484555721282959
    7. '  
' → logprob: -4.359555721282959
    8. '    ' → logprob: -4.859555721282959
    9. '  ' → logprob: -4.984555721282959
    10. '       ' → logprob: -5.234555721282959

Token 102: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041505374014377594
    2. '    
' → logprob: -4.041505336761475
    3. ' 
' → logprob: -4.916505336761475
    4. ' if' → logprob: -4.916505336761475
    5. '       ' → logprob: -6.041505336761475
    6. ' ' → logprob: -6.166505336761475
    7. '   
' → logprob: -6.541505336761475
    8. '    ' → logprob: -7.166505336761475
    9. '  
' → logprob: -7.541505336761475
    10. '  ' → logprob: -7.666505336761475

Token 103: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.16022534668445587
    2. 'x' → logprob: -1.9102253913879395
    3. ' y' → logprob: -14.910224914550781
    4. ' ' → logprob: -14.910224914550781
    5. '0' → logprob: -15.660224914550781
    6. ' (' → logprob: -15.910224914550781
    7. 'y' → logprob: -17.03522491455078
    8. '(x' → logprob: -17.16022491455078
    9. '	x' → logprob: -17.16022491455078
    10. '   ' → logprob: -17.28522491455078

Token 104: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.012535430490970612
    2. '==' → logprob: -4.387535572052002
    3. ' ' → logprob: -11.012535095214844
    4. '0' → logprob: -12.512535095214844
    5. ' <' → logprob: -13.012535095214844
    6. '=' → logprob: -13.762535095214844
    7. ')==' → logprob: -14.887535095214844
    8. ' =' → logprob: -14.887535095214844
    9. '[' → logprob: -15.012535095214844
    10. ')' → logprob: -15.137535095214844

Token 105: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22541385889053345
    2. ' ' → logprob: -1.6004137992858887
    3. '1' → logprob: -14.225414276123047
    4. '۰' → logprob: -15.475414276123047
    5. ' ' → logprob: -16.350414276123047
    6. '  ' → logprob: -16.662914276123047
    7. '<|end|>' → logprob: -17.037914276123047
    8. '...' → logprob: -17.850414276123047
    9. ' ' → logprob: -17.975414276123047
    10. '2' → logprob: -17.975414276123047

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '1' → logprob: -16.750003814697266
    4. 'y' → logprob: -17.375003814697266
    5. '۰' → logprob: -17.437503814697266
    6. '٠' → logprob: -18.937503814697266
    7. '०' → logprob: -18.937503814697266
    8. '০' → logprob: -19.062503814697266
    9. 'x' → logprob: -19.187503814697266
    10. ')' → logprob: -19.187503814697266

Token 107: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6481142640113831
    2. ' and' → logprob: -0.7731142640113831
    3. '   ' → logprob: -5.023114204406738
    4. ' :' → logprob: -5.773114204406738
    5. ':
' → logprob: -6.023114204406738
    6. 'and' → logprob: -6.273114204406738
    7. ' ' → logprob: -6.898114204406738
    8. ':return' → logprob: -8.648114204406738
    9. '       ' → logprob: -9.398114204406738
    10. ' :
' → logprob: -10.273114204406738

Token 108: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.16033999621868134
    2. ' y' → logprob: -1.9103399515151978
    3. '0' → logprob: -9.160340309143066
    4. '1' → logprob: -11.660340309143066
    5. ' ' → logprob: -13.660340309143066
    6. 'x' → logprob: -14.160340309143066
    7. '   ' → logprob: -16.91033935546875
    8. '	y' → logprob: -17.16033935546875
    9. ' (' → logprob: -18.16033935546875
    10. 'Y' → logprob: -18.16033935546875

Token 109: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25204628705978394
    2. '==' → logprob: -1.5020463466644287
    3. ' ' → logprob: -10.127046585083008
    4. '0' → logprob: -10.877046585083008
    5. '=' → logprob: -11.127046585083008
    6. ' !=' → logprob: -11.627046585083008
    7. ' ' → logprob: -12.002046585083008
    8. ')==' → logprob: -12.127046585083008
    9. ']==' → logprob: -12.377046585083008
    10. ' >' → logprob: -12.627046585083008

Token 110: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00673491507768631
    2. ' ' → logprob: -5.006734848022461
    3. '1' → logprob: -10.881734848022461
    4. '   ' → logprob: -16.00673484802246
    5. '  ' → logprob: -16.44423484802246
    6. '۰' → logprob: -16.63173484802246
    7. '```' → logprob: -16.94423484802246
    8. ' ' → logprob: -17.00673484802246
    9. '>' → logprob: -17.38173484802246
    10. '    ' → logprob: -17.63173484802246

Token 111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038348292582668364
    2. ' ' → logprob: -8.000383377075195
    3. '1' → logprob: -10.000383377075195
    4. '   ' → logprob: -14.500383377075195
    5. ''' → logprob: -14.562883377075195
    6. '  ' → logprob: -15.562883377075195
    7. '>' → logprob: -15.875383377075195
    8. '"' → logprob: -15.937883377075195
    9. '`' → logprob: -16.000383377075195
    10. 'x' → logprob: -16.125383377075195

Token 112: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012644019443541765
    2. '):' → logprob: -7.001264572143555
    3. ':
' → logprob: -9.001264572143555
    4. '       ' → logprob: -9.251264572143555
    5. ':return' → logprob: -9.501264572143555
    6. '   ' → logprob: -10.501264572143555
    7. ')' → logprob: -10.876264572143555
    8. ' :' → logprob: -11.626264572143555
    9. '):
' → logprob: -13.501264572143555
    10. ',' → logprob: -13.626264572143555

Token 113: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5878211855888367
    2. ':' → logprob: -0.8378211855888367
    3. '           ' → logprob: -5.212821006774902
    4. ':return' → logprob: -5.962821006774902
    5. ':
' → logprob: -6.587821006774902
    6. '):' → logprob: -6.712821006774902
    7. '   ' → logprob: -7.587821006774902
    8. ' :' → logprob: -8.712821006774902
    9. ' return' → logprob: -8.962821006774902
    10. ',' → logprob: -9.212821006774902

Token 114: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4754089415073395
    2. '           ' → logprob: -1.975408911705017
    3. ' return' → logprob: -2.3504090309143066
    4. 'return' (adapté à ' return') → logprob: -2.4754090309143066
    5. '0' → logprob: -3.3504090309143066
    6. ' ' → logprob: -4.225409030914307
    7. '   ' → logprob: -5.100409030914307
    8. ':return' → logprob: -6.725409030914307
    9. '               ' → logprob: -7.600409030914307
    10. ',' → logprob: -7.725409030914307

Token 115: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -18.375139236450195
    4. '  ' → logprob: -20.500139236450195
    5. ' ' → logprob: -21.250139236450195
    6. '       ' → logprob: -21.375139236450195
    7. '۰' → logprob: -21.750139236450195
    8. '           ' → logprob: -21.875139236450195
    9. '```' → logprob: -22.125139236450195
    10. '
' → logprob: -22.125139236450195

Token 116: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -18.87504005432129
    4. '۰' → logprob: -19.37504005432129
    5. '  ' → logprob: -19.93754005432129
    6. '       ' → logprob: -20.62504005432129
    7. 'def' → logprob: -20.87504005432129
    8. ' ' → logprob: -20.93754005432129
    9. '<|end|>' → logprob: -21.18754005432129
    10. 's' → logprob: -21.25004005432129

Token 117: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15226900577545166
    2. '<|end|>' → logprob: -2.402268886566162
    3. '    
' → logprob: -3.777268886566162
    4. '       ' → logprob: -4.027268886566162
    5. '\n' → logprob: -5.652268886566162
    6. '
' → logprob: -6.402268886566162
    7. '<|end|>' → logprob: -6.652268886566162
    8. '  
' → logprob: -7.402268886566162
    9. ',' → logprob: -7.652268886566162
    10. '  ' → logprob: -7.777268886566162

Token 119: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2318851798772812
    2. '    
' → logprob: -1.9818851947784424
    3. '   
' → logprob: -3.7318851947784424
    4. ' 
' → logprob: -3.7318851947784424
    5. '\n' → logprob: -4.731884956359863
    6. '  
' → logprob: -5.106884956359863
    7. '
' → logprob: -6.856884956359863
    8. ' if' → logprob: -7.231884956359863
    9. '  ' → logprob: -7.481884956359863
    10. ',' → logprob: -7.606884956359863

Token 120: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.31326824426651
    2. 'x' → logprob: -1.3132681846618652
    3. '0' → logprob: -12.563268661499023
    4. ' ' → logprob: -13.313268661499023
    5. '(x' → logprob: -14.563268661499023
    6. '	x' → logprob: -15.188268661499023
    7. '   ' → logprob: -15.563268661499023
    8. ' (' → logprob: -16.563268661499023
    9. ' y' → logprob: -16.938268661499023
    10. ')x' → logprob: -16.938268661499023

Token 121: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.055087752640247345
    2. '==' → logprob: -2.9300878047943115
    3. ' ' → logprob: -8.93008804321289
    4. '0' → logprob: -10.18008804321289
    5. ' <' → logprob: -10.68008804321289
    6. '=' → logprob: -12.18008804321289
    7. ' ' → logprob: -13.18008804321289
    8. ' =' → logprob: -13.55508804321289
    9. '==
' → logprob: -14.18008804321289
    10. '<' → logprob: -14.30508804321289

Token 122: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07898122072219849
    2. ' ' → logprob: -2.5789811611175537
    3. '1' → logprob: -9.328981399536133
    4. '   ' → logprob: -14.891481399536133
    5. '  ' → logprob: -15.078981399536133
    6. ' ' → logprob: -15.328981399536133
    7. '۰' → logprob: -16.016481399536133
    8. ' 
' → logprob: -16.141481399536133
    9. '2' → logprob: -16.141481399536133
    10. '    ' → logprob: -16.266481399536133

Token 123: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00028970264247618616
    2. ' ' → logprob: -8.625289916992188
    3. '1' → logprob: -9.125289916992188
    4. 'y' → logprob: -16.000289916992188
    5. '۰' → logprob: -16.250289916992188
    6. '```' → logprob: -16.375289916992188
    7. '  ' → logprob: -16.625289916992188
    8. '   ' → logprob: -16.750289916992188
    9. 'x' → logprob: -16.750289916992188
    10. '...' → logprob: -17.000289916992188

Token 124: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.022082999348640442
    2. ':' → logprob: -4.272082805633545
    3. 'and' → logprob: -5.397082805633545
    4. ' :' → logprob: -6.022082805633545
    5. '   ' → logprob: -7.522082805633545
    6. ' ' → logprob: -8.397083282470703
    7. ' <' → logprob: -9.897083282470703
    8. '    ' → logprob: -10.022083282470703
    9. ',' → logprob: -11.272083282470703
    10. '<' → logprob: -11.897083282470703

Token 125: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4741639196872711
    2. ' y' → logprob: -0.9741638898849487
    3. '1' → logprob: -9.849164009094238
    4. ' (' → logprob: -10.974164009094238
    5. '(y' → logprob: -11.724164009094238
    6. '(' → logprob: -12.349164009094238
    7. '0' → logprob: -12.724164009094238
    8. 'x' → logprob: -14.099164009094238
    9. ' ' → logprob: -14.349164009094238
    10. '	y' → logprob: -16.974163055419922

Token 126: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4945140779018402
    2. ' ==' → logprob: -1.6195141077041626
    3. ' >' → logprob: -2.369513988494873
    4. '>' → logprob: -2.744513988494873
    5. '!=' → logprob: -3.994513988494873
    6. ' !=' → logprob: -4.244513988494873
    7. '0' → logprob: -7.494513988494873
    8. ' ' → logprob: -7.619513988494873
    9. '=' → logprob: -8.494514465332031
    10. '1' → logprob: -9.244514465332031

Token 127: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018150296062231064
    2. ' ' → logprob: -4.018150329589844
    3. '1' → logprob: -15.830650329589844
    4. ' ' → logprob: -16.518150329589844
    5. '  ' → logprob: -17.018150329589844
    6. '   ' → logprob: -18.768150329589844
    7. '۰' → logprob: -18.893150329589844
    8. '=' → logprob: -19.018150329589844
    9. ' ' → logprob: -19.018150329589844
    10. '```' → logprob: -19.330650329589844

Token 128: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '1' → logprob: -16.375028610229492
    4. '۰' → logprob: -18.562528610229492
    5. ' ' → logprob: -18.812528610229492
    6. 'x' → logprob: -18.875028610229492
    7. '  ' → logprob: -19.062528610229492
    8. '[' → logprob: -19.187528610229492
    9. 'None' → logprob: -19.250028610229492
    10. '```' → logprob: -19.562528610229492

Token 129: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00151081255171448
    2. '-' → logprob: -6.8765106201171875
    3. ':
' → logprob: -8.376510620117188
    4. ':return' → logprob: -9.126510620117188
    5. '   ' → logprob: -9.376510620117188
    6. ' :' → logprob: -10.251510620117188
    7. ',' → logprob: -11.876510620117188
    8. '       ' → logprob: -12.126510620117188
    9. ' -' → logprob: -13.001510620117188
    10. ' ' → logprob: -13.751510620117188

Token 130: '           ' (ID: 352)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7159200310707092
    2. '-' → logprob: -0.9659200310707092
    3. '   ' → logprob: -2.7159199714660645
    4. 'return' → logprob: -3.3409199714660645
    5. '       ' → logprob: -3.8409199714660645
    6. ' return' → logprob: -5.4659199714660645
    7. '    
' → logprob: -7.3409199714660645
    8. ' -' → logprob: -7.5909199714660645
    9. '  ' → logprob: -7.8409199714660645
    10. '        
' → logprob: -8.090920448303223

Token 131: ' #' (ID: 1069)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4743945300579071
    2. '1' → logprob: -0.9743945598602295
    3. 'return' → logprob: -8.599394798278809
    4. ' -' → logprob: -9.474394798278809
    5. ' ' → logprob: -10.349394798278809
    6. '
' → logprob: -12.224394798278809
    7. '+' → logprob: -12.474394798278809
    8. '       ' → logprob: -12.599394798278809
    9. '```' → logprob: -12.724394798278809
    10. '   ' → logprob: -12.849394798278809

Token 132: ' x' (ID: 1215)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08143261820077896
    2. '1' → logprob: -2.581432580947876
    3. ' -' → logprob: -6.456432819366455
    4. 'return' → logprob: -7.581432819366455
    5. ' ' → logprob: -7.831432819366455
    6. ' return' → logprob: -9.831432342529297
    7. '   ' → logprob: -12.706432342529297
    8. '  ' → logprob: -13.206432342529297
    9. 'if' → logprob: -13.706432342529297
    10. '```' → logprob: -14.331432342529297

Token 133: '^' (ID: 61)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32655709981918335
    2. '<' → logprob: -1.9515571594238281
    3. '=' → logprob: -2.576557159423828
    4. ' ,' → logprob: -3.951557159423828
    5. ' <' → logprob: -4.076557159423828
    6. ' ' → logprob: -4.951557159423828
    7. ' =' → logprob: -5.701557159423828
    8. 'pow' → logprob: -5.701557159423828
    9. '^' → logprob: -5.826557159423828
    10. '==' → logprob: -6.576557159423828

Token 134: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.22582966089248657
    2. '0' → logprob: -1.6008296012878418
    3. ' y' → logprob: -8.225830078125
    4. '1' → logprob: -9.350830078125
    5. 'x' → logprob: -10.100830078125
    6. ' ' → logprob: -11.225830078125
    7. '```' → logprob: -12.975830078125
    8. 'pow' → logprob: -13.100830078125
    9. 'y's' → logprob: -14.475830078125
    10. ''y' → logprob: -14.975830078125

Token 135: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2659356892108917
    2. ',' → logprob: -2.7659356594085693
    3. '-' → logprob: -3.1409356594085693
    4. '<' → logprob: -3.3909356594085693
    5. '0' → logprob: -3.6409356594085693
    6. 'return' → logprob: -4.140935897827148
    7. ' ' → logprob: -4.265935897827148
    8. '<|end|>' → logprob: -4.765935897827148
    9. ' -' → logprob: -5.265935897827148
    10. '1' → logprob: -5.640935897827148

Token 136: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '1' → logprob: -15.125005722045898
    4. '(' → logprob: -16.7500057220459
    5. 'pow' → logprob: -17.3750057220459
    6. '۰' → logprob: -18.3750057220459
    7. '  ' → logprob: -19.1250057220459
    8. '  
' → logprob: -19.4375057220459
    9. '[' → logprob: -19.8750057220459
    10. '```' → logprob: -20.5000057220459

Token 137: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.87500286102295
    3. '1' → logprob: -14.62500286102295
    4. 'pow' → logprob: -17.125003814697266
    5. '۰' → logprob: -18.562503814697266
    6. '(' → logprob: -19.000003814697266
    7. '  ' → logprob: -19.500003814697266
    8. '  
' → logprob: -20.062503814697266
    9. 'return' → logprob: -20.125003814697266
    10. '[' → logprob: -20.187503814697266

Token 138: '^' (ID: 61)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.34400731325149536
    2. ',' → logprob: -1.5940072536468506
    3. ' -' → logprob: -2.7190072536468506
    4. '1' → logprob: -4.46900749206543
    5. ',-' → logprob: -5.21900749206543
    6. ' ,' → logprob: -5.46900749206543
    7. ' ' → logprob: -7.84400749206543
    8. '   ' → logprob: -9.09400749206543
    9. ' ,-' → logprob: -9.84400749206543
    10. '<|end|>' → logprob: -9.84400749206543

Token 139: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04372859373688698
    2. '1' → logprob: -3.1687285900115967
    3. '<|end|>' → logprob: -7.418728828430176
    4. '0' → logprob: -9.668728828430176
    5. ' y' → logprob: -9.918728828430176
    6. 'x' → logprob: -12.168728828430176
    7. '<|end|>' → logprob: -12.543728828430176
    8. ' ' → logprob: -13.168728828430176
    9. '(y' → logprob: -14.168728828430176
    10. '
' → logprob: -14.168728828430176

Token 140: ' =' (ID: 314)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05789943039417267
    2. ' -' → logprob: -3.3078994750976562
    3. '1' → logprob: -4.307899475097656
    4. ' ' → logprob: -5.807899475097656
    5. ',' → logprob: -6.182899475097656
    6. '  ' → logprob: -8.432899475097656
    7. '   ' → logprob: -8.557899475097656
    8. '<|end|>' → logprob: -9.057899475097656
    9. ' return' → logprob: -9.307899475097656
    10. ' ,' → logprob: -9.682899475097656

Token 141: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '۰' → logprob: -17.375001907348633
    4. '０' → logprob: -20.000001907348633
    5. '০' → logprob: -20.250001907348633
    6. 'zero' → logprob: -20.250001907348633
    7. '(' → logprob: -20.937501907348633
    8. '०' → logprob: -21.000001907348633
    9. '[' → logprob: -21.062501907348633
    10. '```' → logprob: -21.250001907348633

Token 142: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '۰' → logprob: -18.375
    4. '-' → logprob: -18.5
    5. 'zero' → logprob: -19.125
    6. '[' → logprob: -19.75
    7. '০' → logprob: -20.375
    8. 'return' → logprob: -20.8125
    9. '०' → logprob: -20.9375
    10. '０' → logprob: -21.1875

Token 143: ' (' (ID: 350)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0929766595363617
    2. '1' → logprob: -3.0929765701293945
    3. ' -' → logprob: -3.9679765701293945
    4. '+' → logprob: -4.0929765701293945
    5. ',' → logprob: -5.2179765701293945
    6. '   ' → logprob: -6.9679765701293945
    7. ' ' → logprob: -7.2179765701293945
    8. ')' → logprob: -9.217976570129395
    9. '    
' → logprob: -9.342976570129395
    10. '-
' → logprob: -9.467976570129395

Token 144: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13387329876422882
    2. ' )' → logprob: -2.633873224258423
    3. '1' → logprob: -3.383873224258423
    4. ',' → logprob: -4.633873462677002
    5. '-' → logprob: -5.633873462677002
    6. ' ' → logprob: -6.383873462677002
    7. '),' → logprob: -6.758873462677002
    8. ' -' → logprob: -6.758873462677002
    9. ' return' → logprob: -7.633873462677002
    10. 'return' → logprob: -8.008872985839844

Token 145: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.09781283140182495
    2. ' y' → logprob: -2.4728128910064697
    3. 'x' → logprob: -4.972812652587891
    4. '0' → logprob: -6.847812652587891
    5. 'True' → logprob: -7.972812652587891
    6. ' x' → logprob: -8.47281265258789
    7. 'False' → logprob: -8.84781265258789
    8. ' ' → logprob: -9.84781265258789
    9. ' True' → logprob: -10.09781265258789
    10. '1' → logprob: -10.59781265258789

Token 146: '>' (ID: 29)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6126108765602112
    2. ' !=' → logprob: -1.1126108169555664
    3. ' ==' → logprob: -2.8626108169555664
    4. '>' → logprob: -3.6126108169555664
    5. '!=' → logprob: -3.7376108169555664
    6. '==' → logprob: -4.112610816955566
    7. ' <' → logprob: -5.987610816955566
    8. ' ' → logprob: -6.862610816955566
    9. ')' → logprob: -7.487610816955566
    10. ' )' → logprob: -7.737610816955566

Token 147: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020589888095855713
    2. ' ' → logprob: -4.020589828491211
    3. '1' → logprob: -6.020589828491211
    4. '>' → logprob: -12.520589828491211
    5. '=' → logprob: -13.270589828491211
    6. '<|end|>' → logprob: -13.645589828491211
    7. '  ' → logprob: -14.395589828491211
    8. ')' → logprob: -14.395589828491211
    9. ' 
' → logprob: -15.895589828491211
    10. ' >' → logprob: -16.02058982849121

Token 148: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030210452154278755
    2. ' )' → logprob: -4.155210494995117
    3. ' else' → logprob: -4.405210494995117
    4. ',' → logprob: -7.405210494995117
    5. '),' → logprob: -7.905210494995117
    6. ' and' → logprob: -8.030210494995117
    7. 'else' → logprob: -8.530210494995117
    8. ')
' → logprob: -9.780210494995117
    9. '   ' → logprob: -9.905210494995117
    10. ' if' → logprob: -10.030210494995117

Token 149: ' y' (ID: 342)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12095377594232559
    2. '1' → logprob: -2.7459537982940674
    3. ' return' → logprob: -3.8709537982940674
    4. 'return' → logprob: -3.9959537982940674
    5. ' -' → logprob: -4.620953559875488
    6. ' ' → logprob: -7.495953559875488
    7. '   ' → logprob: -10.495953559875488
    8. '+' → logprob: -10.745953559875488
    9. '    ' → logprob: -11.495953559875488
    10. '  ' → logprob: -11.745953559875488

Token 150: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.07129950821399689
    2. '**' → logprob: -3.6962995529174805
    3. '==' → logprob: -4.1962995529174805
    4. '>' → logprob: -4.6962995529174805
    5. ' ==' → logprob: -5.0712995529174805
    6. ' >' → logprob: -5.0712995529174805
    7. '_' → logprob: -6.0712995529174805
    8. ' ' → logprob: -6.5712995529174805
    9. ' ^' → logprob: -6.6962995529174805
    10. '<|end|>' → logprob: -7.6962995529174805

Token 151: 'x' (ID: 87)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1427406668663025
    2. 'x' → logprob: -2.0177407264709473
    3. ' ' → logprob: -10.642740249633789
    4. ' x' → logprob: -11.267740249633789
    5. '```' → logprob: -11.767740249633789
    6. '1' → logprob: -12.142740249633789
    7. '>' → logprob: -12.142740249633789
    8. '=' → logprob: -12.767740249633789
    9. 'pow' → logprob: -14.205240249633789
    10. '>x' → logprob: -14.330240249633789

Token 152: ' =' (ID: 314)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.34128299355506897
    2. ' =' → logprob: -1.4662829637527466
    3. '=' → logprob: -3.216283082962036
    4. '>' → logprob: -5.091282844543457
    5. ' ==' → logprob: -5.716282844543457
    6. ' )' → logprob: -5.966282844543457
    7. ')' → logprob: -6.216282844543457
    8. ' !=' → logprob: -6.716282844543457
    9. ' ' → logprob: -6.841282844543457
    10. '<|end|>' → logprob: -7.091282844543457

Token 153: ' y' (ID: 342)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002509687910787761
    2. 'y' → logprob: -8.375250816345215
    3. '0' → logprob: -11.625250816345215
    4. ' ' → logprob: -11.625250816345215
    5. 'pow' → logprob: -14.250250816345215
    6. ' y' → logprob: -14.875250816345215
    7. '>' → logprob: -14.875250816345215
    8. '   ' → logprob: -16.31275177001953
    9. 'x' → logprob: -16.56275177001953
    10. 'not' → logprob: -16.62525177001953

Token 154: '^' (ID: 61)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9904862642288208
    2. ' >' → logprob: -1.8654862642288208
    3. ' !=' → logprob: -1.9904862642288208
    4. '**' → logprob: -2.1154861450195312
    5. '^' → logprob: -2.7404861450195312
    6. '==' → logprob: -2.9904861450195312
    7. ' **' → logprob: -3.3654861450195312
    8. '>' → logprob: -4.115486145019531
    9. ' ' → logprob: -4.490486145019531
    10. '!=' → logprob: -4.615486145019531

Token 155: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '۰' → logprob: -17.750001907348633
    4. 'x' → logprob: -17.875001907348633
    5. '1' → logprob: -18.500001907348633
    6. '<|end|>' → logprob: -19.375001907348633
    7. '```' → logprob: -20.375001907348633
    8. '>' → logprob: -21.125001907348633
    9. '٠' → logprob: -21.125001907348633
    10. '０' → logprob: -22.000001907348633

Token 156: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.523503303527832
    2. ' =' → logprob: -0.898503303527832
    3. ',' → logprob: -9.398503303527832
    4. ' ' → logprob: -9.648503303527832
    5. ' return' → logprob: -10.148503303527832
    6. ' -' → logprob: -10.148503303527832
    7. ' ==' → logprob: -10.398503303527832
    8. ')' → logprob: -11.023503303527832
    9. ' ,' → logprob: -11.023503303527832
    10. ' +' → logprob: -11.148503303527832

Token 157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '0' → logprob: -19.500335693359375
    4. '   ' → logprob: -20.000335693359375
    5. '۱' → logprob: -21.250335693359375
    6. '１' → logprob: -21.750335693359375
    7. '```' → logprob: -22.000335693359375
    8. ' ' → logprob: -22.250335693359375
    9. '' → logprob: -22.500335693359375
    10. '`' → logprob: -22.500335693359375

Token 158: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2099503129720688
    2. ')' → logprob: -2.7099502086639404
    3. '       ' → logprob: -2.9599502086639404
    4. ',' → logprob: -3.4599502086639404
    5. ' return' → logprob: -3.8349502086639404
    6. '    
' → logprob: -5.3349504470825195
    7. '           ' → logprob: -5.7099504470825195
    8. '1' → logprob: -6.5849504470825195
    9. '\n' → logprob: -6.7099504470825195
    10. 'return' → logprob: -6.7099504470825195

Token 159: '           ' (ID: 352)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7108740210533142
    2. '   ' → logprob: -1.460874080657959
    3. ',' → logprob: -2.210874080657959
    4. ' -' → logprob: -2.960874080657959
    5. '1' → logprob: -3.210874080657959
    6. ' return' → logprob: -3.585874080657959
    7. ')' → logprob: -4.210874080657959
    8. '+' → logprob: -4.835874080657959
    9. '       ' → logprob: -5.085874080657959
    10. ' ' → logprob: -5.335874080657959

Token 160: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.22888058423995972
    2. 'return' (adapté à ' return') → logprob: -1.6038806438446045
    3. '-' → logprob: -6.728880405426025
    4. '   ' → logprob: -6.978880405426025
    5. '       ' → logprob: -7.478880405426025
    6. '           ' → logprob: -8.353880882263184
    7. '1' → logprob: -8.478880882263184
    8. '    ' → logprob: -9.728880882263184
    9. ' ' → logprob: -9.853880882263184
    10. '	return' → logprob: -9.853880882263184

Token 161: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.2762428822461516e-05
    2. '1' → logprob: -10.375052452087402
    3. ' -' → logprob: -10.750052452087402
    4. ' ' → logprob: -16.87505340576172
    5. '−' → logprob: -17.75005340576172
    6. '\-' → logprob: -18.00005340576172
    7. '```' → logprob: -18.25005340576172
    8. '   ' → logprob: -18.50005340576172
    9. '  ' → logprob: -18.62505340576172
    10. '
' → logprob: -19.50005340576172

Token 162: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.339278580620885e-06
    2. '1' → logprob: -13.250001907348633
    3. ' -' → logprob: -14.625001907348633
    4. '-
' → logprob: -18.625001907348633
    5. '−' → logprob: -18.875001907348633
    6. '\-' → logprob: -18.875001907348633
    7. ' ' → logprob: -21.125001907348633
    8. '   ' → logprob: -21.250001907348633
    9. '(-' → logprob: -21.250001907348633
    10. '  ' → logprob: -21.250001907348633

Token 163: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23506614565849304
    2. '   ' → logprob: -2.4850661754608154
    3. '<|end|>' → logprob: -2.4850661754608154
    4. '    
' → logprob: -4.360065937042236
    5. '  ' → logprob: -5.360065937042236
    6. '    ' → logprob: -5.485065937042236
    7. ',' → logprob: -5.985065937042236
    8. '        
' → logprob: -5.985065937042236
    9. '  
' → logprob: -5.985065937042236
    10. '   
' → logprob: -5.985065937042236

Token 164: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9726312756538391
    2. ')' → logprob: -1.8476312160491943
    3. '
' → logprob: -1.9726312160491943
    4. '<|end|>' → logprob: -2.0976312160491943
    5. '-' → logprob: -3.4726312160491943
    6. '    
' → logprob: -3.5976312160491943
    7. '       ' → logprob: -3.7226312160491943
    8. '   
' → logprob: -3.8476312160491943
    9. '  ' → logprob: -3.9726312160491943
    10. ',' → logprob: -4.097631454467773

Token 165: ' x' (ID: 1215)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01012399885803461
    2. '-' → logprob: -4.635124206542969
    3. ' ' → logprob: -8.135124206542969
    4. ' -' → logprob: -9.510124206542969
    5. '   ' → logprob: -15.135124206542969
    6. '  ' → logprob: -15.885124206542969
    7. ')' → logprob: -16.01012420654297
    8. '0' → logprob: -16.38512420654297
    9. '    ' → logprob: -16.88512420654297
    10. '>' → logprob: -17.26012420654297

Token 166: '^' (ID: 61)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3473936319351196
    2. '-' → logprob: -2.34739351272583
    3. ',' → logprob: -2.34739351272583
    4. ' >' → logprob: -2.47239351272583
    5. ' ' → logprob: -2.59739351272583
    6. ' <' → logprob: -2.72239351272583
    7. '<|end|>' → logprob: -2.72239351272583
    8. '>' → logprob: -2.84739351272583
    9. '<' → logprob: -2.84739351272583
    10. ' -' → logprob: -2.97239351272583

Token 167: 'y' (ID: 88)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.25019538402557373
    2. 'y' → logprob: -1.7501953840255737
    3. '0' → logprob: -4.000195503234863
    4. '1' → logprob: -4.250195503234863
    5. '<' → logprob: -4.750195503234863
    6. '>' → logprob: -5.875195503234863
    7. ' -' → logprob: -7.000195503234863
    8. ' y' → logprob: -7.500195503234863
    9. ' ' → logprob: -7.750195503234863
    10. 'x' → logprob: -8.125195503234863

Token 168: ' <' (ID: 464)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 169: ' y' (ID: 342)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.250620037317276
    2. '1' → logprob: -1.8756200075149536
    3. ' ' → logprob: -2.875620126724243
    4. '<|end|>' → logprob: -4.625619888305664
    5. '=' → logprob: -6.375619888305664
    6. 'y' → logprob: -8.625619888305664
    7. '-' → logprob: -9.375619888305664
    8. '>' → logprob: -9.500619888305664
    9. ' y' → logprob: -9.750619888305664
    10. '  ' → logprob: -10.625619888305664

Token 170: '^' (ID: 61)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 171: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5531524419784546
    2. '_' → logprob: -1.3031524419784546
    3. '-' → logprob: -2.428152561187744
    4. '0' → logprob: -3.428152561187744
    5. '^' → logprob: -4.303152561187744
    6. '1' → logprob: -4.928152561187744
    7. '_x' → logprob: -5.928152561187744
    8. ')' → logprob: -6.303152561187744
    9. ''s' → logprob: -6.553152561187744
    10. '=' → logprob: -6.678152561187744

Token 172: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 173: ' so' (ID: 813)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.058449290692806244
    2. '1' → logprob: -3.3084492683410645
    3. ' -' → logprob: -4.8084492683410645
    4. ' ' → logprob: -5.1834492683410645
    5. '0' → logprob: -5.6834492683410645
    6. '<|end|>' → logprob: -6.8084492683410645
    7. '  ' → logprob: -7.8084492683410645
    8. '       ' → logprob: -7.9334492683410645
    9. ')' → logprob: -8.183449745178223
    10. '    ' → logprob: -8.558449745178223

Token 174: ' return' (ID: 622)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04399408772587776
    2. '-' → logprob: -3.168994188308716
    3. ' ' → logprob: -7.293993949890137
    4. ' -' → logprob: -8.418993949890137
    5. 'return' → logprob: -10.293993949890137
    6. '   ' → logprob: -10.918993949890137
    7. '    ' → logprob: -10.918993949890137
    8. '       ' → logprob: -11.793993949890137
    9. ' return' → logprob: -12.293993949890137
    10. '  ' → logprob: -12.418993949890137

Token 175: ' positive' (ID: 8841)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38766053318977356
    2. '-' → logprob: -1.1376605033874512
    3. ' ' → logprob: -7.387660503387451
    4. ' -' → logprob: -9.01266098022461
    5. '   ' → logprob: -10.26266098022461
    6. '    ' → logprob: -12.13766098022461
    7. '  ' → logprob: -12.26266098022461
    8. '       ' → logprob: -13.38766098022461
    9. '```' → logprob: -14.01266098022461
    10. '     ' → logprob: -14.63766098022461

Token 176: ' means' (ID: 4748)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 177: ' x' (ID: 1215)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009050826542079449
    2. '-' → logprob: -5.0090508460998535
    3. ' ' → logprob: -6.1340508460998535
    4. ' -' → logprob: -8.759050369262695
    5. '   ' → logprob: -12.884050369262695
    6. '  ' → logprob: -12.884050369262695
    7. '```' → logprob: -14.009050369262695
    8. '>' → logprob: -14.634050369262695
    9. ')' → logprob: -14.634050369262695
    10. '    ' → logprob: -14.759050369262695

Token 178: ' <' (ID: 464)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 179: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.023319782689213753
    2. ' y' → logprob: -3.773319721221924
    3. '0' → logprob: -10.023320198059082
    4. '=' → logprob: -11.273320198059082
    5. '<|end|>' → logprob: -11.398320198059082
    6. 'x' → logprob: -13.023320198059082
    7. '	y' → logprob: -14.023320198059082
    8. ' ' → logprob: -14.148320198059082
    9. '>' → logprob: -14.273320198059082
    10. ')' → logprob: -14.398320198059082

Token 180: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7932788133621216
    2. '   ' → logprob: -1.2932788133621216
    3. '
' → logprob: -2.168278694152832
    4. ')' → logprob: -2.668278694152832
    5. '    
' → logprob: -3.918278694152832
    6. '<|end|>' → logprob: -4.043278694152832
    7. ',' → logprob: -4.293278694152832
    8. '  
' → logprob: -4.418278694152832
    9. '  ' → logprob: -5.293278694152832
    10. '        
' → logprob: -5.418278694152832

Token 181: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.648639440536499
    2. '
' → logprob: -1.148639440536499
    3. '\n' → logprob: -3.648639440536499
    4. '    
' → logprob: -3.648639440536499
    5. '<|end|>' → logprob: -3.773639440536499
    6. ' ' → logprob: -4.148639678955078
    7. ')' → logprob: -4.398639678955078
    8. '       ' → logprob: -4.523639678955078
    9. ',' → logprob: -4.523639678955078
    10. '  
' → logprob: -4.648639678955078

Token 182: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7189878225326538
    2. '-' → logprob: -1.4689878225326538
    3. '   ' → logprob: -2.4689879417419434
    4. '       ' → logprob: -2.9689879417419434
    5. ' 
' → logprob: -3.2189879417419434
    6. ')' → logprob: -3.5939879417419434
    7. '  
' → logprob: -4.593987941741943
    8. '  ' → logprob: -4.718987941741943
    9. '   
' → logprob: -4.718987941741943
    10. '0' → logprob: -4.718987941741943

Token 183: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.7289047837257385
    2. ' x' → logprob: -1.2289047241210938
    3. 'x' → logprob: -1.8539047241210938
    4. 'y' → logprob: -2.7289047241210938
    5. '0' → logprob: -5.978904724121094
    6. ' ' → logprob: -7.853904724121094
    7. '1' → logprob: -9.228904724121094
    8. '   ' → logprob: -11.478904724121094
    9. '    ' → logprob: -13.228904724121094
    10. '	x' → logprob: -14.478904724121094

Token 184: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.005237906239926815
    2. '==' → logprob: -5.255238056182861
    3. ' ' → logprob: -13.005237579345703
    4. ' !=' → logprob: -14.130237579345703
    5. '=' → logprob: -15.130237579345703
    6. ' =' → logprob: -15.755237579345703
    7. ' ' → logprob: -15.880237579345703
    8. ')' → logprob: -16.380237579345703
    9. ')==' → logprob: -16.380237579345703
    10. '  ' → logprob: -16.505237579345703

Token 185: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.142683207988739
    2. ' ' → logprob: -2.017683267593384
    3. '1' → logprob: -11.892683029174805
    4. '=' → logprob: -15.142683029174805
    5. '   ' → logprob: -15.330183029174805
    6. '  ' → logprob: -15.892683029174805
    7. ' ' → logprob: -16.892683029174805
    8. '```' → logprob: -16.892683029174805
    9. '>' → logprob: -17.080183029174805
    10. '[' → logprob: -17.142683029174805

Token 186: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.65101717156358e-05
    2. ' ' → logprob: -9.250096321105957
    3. '1' → logprob: -15.625096321105957
    4. '=' → logprob: -17.000097274780273
    5. '۰' → logprob: -17.312597274780273
    6. '<|end|>' → logprob: -17.687597274780273
    7. '[' → logprob: -18.187597274780273
    8. '  ' → logprob: -18.312597274780273
    9. 'def' → logprob: -18.437597274780273
    10. '```' → logprob: -18.500097274780273

Token 187: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.007689208723604679
    2. 'and' → logprob: -4.882688999176025
    3. '   ' → logprob: -9.882689476013184
    4. ':' → logprob: -11.257689476013184
    5. ' ' → logprob: -11.382689476013184
    6. ':
' → logprob: -12.882689476013184
    7. '	and' → logprob: -13.382689476013184
    8. '    ' → logprob: -13.632689476013184
    9. '       ' → logprob: -13.757689476013184
    10. '  ' → logprob: -15.007689476013184

Token 188: ' x' (ID: 1215)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5923061370849609
    2. ' ' → logprob: -0.9673061370849609
    3. '0' → logprob: -2.717306137084961
    4. ' x' → logprob: -7.342306137084961
    5. 'x' → logprob: -9.467306137084961
    6. '   ' → logprob: -9.967306137084961
    7. '       ' → logprob: -12.342306137084961
    8. ' return' → logprob: -12.967306137084961
    9. '    ' → logprob: -13.092306137084961
    10. 'return' → logprob: -13.467306137084961

Token 189: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5908005833625793
    2. ' !=' → logprob: -0.9658005833625793
    3. '==' → logprob: -3.2158005237579346
    4. '!=' → logprob: -3.7158005237579346
    5. ' ' → logprob: -7.340800762176514
    6. ' >' → logprob: -9.465800285339355
    7. ' and' → logprob: -9.465800285339355
    8. '   ' → logprob: -9.840800285339355
    9. 'and' → logprob: -10.715800285339355
    10. '  ' → logprob: -10.840800285339355

Token 190: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003177952254191041
    2. ' ' → logprob: -5.753178119659424
    3. '1' → logprob: -15.878177642822266
    4. '   ' → logprob: -16.378177642822266
    5. '  ' → logprob: -17.503177642822266
    6. '=' → logprob: -17.878177642822266
    7. 'x' → logprob: -18.128177642822266
    8. '(' → logprob: -19.128177642822266
    9. '    ' → logprob: -19.253177642822266
    10. '۰' → logprob: -19.503177642822266

Token 191: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '1' → logprob: -17.8750057220459
    4. 'x' → logprob: -18.0000057220459
    5. '   ' → logprob: -18.3750057220459
    6. 'None' → logprob: -19.5625057220459
    7. '```' → logprob: -19.9375057220459
    8. '۰' → logprob: -20.0000057220459
    9. '=' → logprob: -20.1875057220459
    10. '  ' → logprob: -20.3750057220459

Token 192: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40368765592575073
    2. '       ' → logprob: -1.9036877155303955
    3. ':
' → logprob: -1.9036877155303955
    4. '   ' → logprob: -3.5286877155303955
    5. ':return' → logprob: -5.528687477111816
    6. ' return' → logprob: -9.153687477111816
    7. ',' → logprob: -9.153687477111816
    8. '           ' → logprob: -9.278687477111816
    9. '	return' → logprob: -9.778687477111816
    10. ' ' → logprob: -9.903687477111816

Token 193: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2984718680381775
    2. ' -' → logprob: -1.6734719276428223
    3. ' return' → logprob: -3.7984719276428223
    4. '-' → logprob: -3.9234719276428223
    5. '1' → logprob: -4.673471927642822
    6. '   ' → logprob: -5.048471927642822
    7. ' ' → logprob: -5.048471927642822
    8. '           ' → logprob: -5.798471927642822
    9. '0' → logprob: -6.923471927642822
    10. '	' → logprob: -7.298471927642822

Token 194: ' #' (ID: 1069)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007725820760242641
    2. 'return' → logprob: -8.375772476196289
    3. ' -' → logprob: -8.375772476196289
    4. '       ' → logprob: -9.000772476196289
    5. '           ' → logprob: -9.125772476196289
    6. ' return' → logprob: -10.000772476196289
    7. '0' → logprob: -11.125772476196289
    8. '   ' → logprob: -11.500772476196289
    9. '1' → logprob: -12.625772476196289
    10. '  ' → logprob: -13.375772476196289

Token 195: ' x' (ID: 1215)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007160080131143332
    2. ' -' → logprob: -7.250716209411621
    3. '       ' → logprob: -12.500716209411621
    4. '           ' → logprob: -14.375716209411621
    5. 'return' → logprob: -14.500716209411621
    6. '   ' → logprob: -15.000716209411621
    7. ' return' → logprob: -15.250716209411621
    8. '  ' → logprob: -15.375716209411621
    9. ' ' → logprob: -16.500715255737305
    10. '
' → logprob: -16.625715255737305

Token 196: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.2758534848690033
    2. ' ^' → logprob: -1.9008535146713257
    3. ' <' → logprob: -3.150853395462036
    4. '**' → logprob: -3.775853395462036
    5. ' ==' → logprob: -4.900853633880615
    6. '<' → logprob: -5.400853633880615
    7. ' ' → logprob: -5.650853633880615
    8. ')' → logprob: -6.025853633880615
    9. ' **' → logprob: -6.275853633880615
    10. ' >' → logprob: -6.900853633880615

Token 197: 'y' (ID: 88)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4709393084049225
    2. 'y' → logprob: -1.2209392786026
    3. 'x' → logprob: -3.4709393978118896
    4. '0' → logprob: -3.8459393978118896
    5. ' ' → logprob: -4.0959391593933105
    6. ' y' → logprob: -5.8459391593933105
    7. '-' → logprob: -5.9709391593933105
    8. '>' → logprob: -6.2209391593933105
    9. 'return' → logprob: -6.2209391593933105
    10. '=' → logprob: -8.095939636230469

Token 198: ' =' (ID: 314)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7127900719642639
    2. '-' → logprob: -1.4627900123596191
    3. ' =' → logprob: -1.9627900123596191
    4. '=' → logprob: -2.087790012359619
    5. ' return' → logprob: -5.587790012359619
    6. ' ' → logprob: -5.962790012359619
    7. ' <' → logprob: -6.087790012359619
    8. '=-' → logprob: -6.837790012359619
    9. '   ' → logprob: -7.087790012359619
    10. ')' → logprob: -7.337790012359619

Token 199: ' x' (ID: 1215)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -2.7014437364414334e-05
    2. ' -' → logprob: -11.00002670288086
    3. '0' → logprob: -11.62502670288086
    4. '1' → logprob: -14.12502670288086
    5. '-return' → logprob: -15.87502670288086
    6. '−' → logprob: -16.00002670288086
    7. '-x' → logprob: -16.12502670288086
    8. ' ' → logprob: -16.37502670288086
    9. 'x' → logprob: -17.25002670288086
    10. '-
' → logprob: -17.50002670288086

Token 200: '^' (ID: 61)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5269973874092102
    2. '**' → logprob: -1.6519973278045654
    3. '-' → logprob: -2.4019973278045654
    4. '^' → logprob: -2.6519973278045654
    5. '0' → logprob: -3.9019973278045654
    6. ' ' → logprob: -4.6519975662231445
    7. ' **' → logprob: -5.4019975662231445
    8. ' <' → logprob: -5.9019975662231445
    9. '=' → logprob: -6.0269975662231445
    10. ')' → logprob: -6.1519975662231445

Token 201: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6668895483016968
    2. '-' → logprob: -1.0418895483016968
    3. '0' → logprob: -2.0418896675109863
    4. ' ' → logprob: -6.041889667510986
    5. ' -' → logprob: -6.541889667510986
    6. '(-' → logprob: -8.791889190673828
    7. '(' → logprob: -9.791889190673828
    8. 'x' → logprob: -10.541889190673828
    9. '```' → logprob: -11.416889190673828
    10. 'return' → logprob: -11.791889190673828

Token 202: '=' (ID: 28)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6035774946212769
    2. '-' → logprob: -1.4785774946212769
    3. ' ' → logprob: -2.6035776138305664
    4. '0' → logprob: -2.8535776138305664
    5. ',' → logprob: -3.3535776138305664
    6. ' return' → logprob: -3.6035776138305664
    7. '=' → logprob: -4.603577613830566
    8. ' ,' → logprob: -5.103577613830566
    9. '   ' → logprob: -5.478577613830566
    10. ' =' → logprob: -5.603577613830566

Token 203: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001198562909848988
    2. '0' → logprob: -6.876198768615723
    3. ' -' → logprob: -9.251198768615723
    4. '1' → logprob: -9.751198768615723
    5. '−' → logprob: -12.251198768615723
    6. ' ' → logprob: -13.001198768615723
    7. '–' → logprob: -13.876198768615723
    8. '   ' → logprob: -14.001198768615723
    9. '-return' → logprob: -15.001198768615723
    10. '  ' → logprob: -15.251198768615723

Token 204: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.27664968371391296
    2. ' -' → logprob: -1.5266497135162354
    3. '   ' → logprob: -3.9016497135162354
    4. ' return' → logprob: -5.776649475097656
    5. ' ' → logprob: -7.776649475097656
    6. '       ' → logprob: -8.901649475097656
    7. '1' → logprob: -9.026649475097656
    8. ',' → logprob: -9.026649475097656
    9. '0' → logprob: -9.776649475097656
    10. ')' → logprob: -9.776649475097656

Token 205: ' y' (ID: 342)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -3.643152740551159e-05
    2. 'return' → logprob: -10.625036239624023
    3. ' -' → logprob: -11.750036239624023
    4. ' return' → logprob: -12.875036239624023
    5. '0' → logprob: -13.875036239624023
    6. '           ' → logprob: -15.250036239624023
    7. '-return' → logprob: -15.750036239624023
    8. '   ' → logprob: -16.125036239624023
    9. '       ' → logprob: -17.000036239624023
    10. ' ' → logprob: -17.125036239624023

Token 206: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.6403194665908813
    2. ' ^' → logprob: -1.6403194665908813
    3. ' <' → logprob: -2.265319347381592
    4. '**' → logprob: -3.390319347381592
    5. '<' → logprob: -3.515319347381592
    6. ' ' → logprob: -3.640319347381592
    7. ' ==' → logprob: -4.140319347381592
    8. ')' → logprob: -4.265319347381592
    9. ' >' → logprob: -4.640319347381592
    10. ' -' → logprob: -4.765319347381592

Token 207: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.013766997493803501
    2. ' x' → logprob: -4.513766765594482
    3. '1' → logprob: -6.013766765594482
    4. ' ' → logprob: -8.88876724243164
    5. '0' → logprob: -9.88876724243164
    6. '>' → logprob: -11.13876724243164
    7. 'pow' → logprob: -11.38876724243164
    8. 'return' → logprob: -11.51376724243164
    9. '```' → logprob: -11.51376724243164
    10. ')' → logprob: -12.13876724243164

Token 208: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4115890562534332
    2. ' =' → logprob: -1.2865890264511108
    3. ' return' → logprob: -3.4115891456604004
    4. ' -' → logprob: -4.6615891456604
    5. '-' → logprob: -5.2865891456604
    6. 'return' → logprob: -5.4115891456604
    7. '   ' → logprob: -6.2865891456604
    8. ' <' → logprob: -6.5365891456604
    9. '<' → logprob: -6.7865891456604
    10. ')' → logprob: -6.7865891456604

Token 209: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10268177837133408
    2. '1' → logprob: -2.352681875228882
    3. '0' → logprob: -6.227681636810303
    4. ' -' → logprob: -7.852681636810303
    5. 'x' → logprob: -10.477682113647461
    6. 'return' → logprob: -10.727682113647461
    7. '−' → logprob: -11.477682113647461
    8. ' ' → logprob: -11.602682113647461
    9. '-x' → logprob: -11.852682113647461
    10. '```' → logprob: -12.102682113647461

Token 210: '^' (ID: 61)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.2000223398208618
    2. ' -' → logprob: -1.8250223398208618
    3. ')' → logprob: -1.9500223398208618
    4. '=' → logprob: -2.0750222206115723
    5. '   ' → logprob: -2.3250222206115723
    6. '1' → logprob: -3.0750222206115723
    7. ' return' → logprob: -3.5750222206115723
    8. '+' → logprob: -3.9500222206115723
    9. 'return' → logprob: -4.075022220611572
    10. '<' → logprob: -4.575022220611572

Token 211: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16840775310993195
    2. '1' → logprob: -1.9184077978134155
    3. '0' → logprob: -4.918407917022705
    4. 'y' → logprob: -7.418407917022705
    5. ' x' → logprob: -8.668407440185547
    6. ' ' → logprob: -10.793407440185547
    7. '```' → logprob: -10.793407440185547
    8. ' y' → logprob: -12.543407440185547
    9. '<x' → logprob: -12.793407440185547
    10. '(x' → logprob: -12.793407440185547

Token 212: '=' (ID: 28)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6107385158538818
    2. '-' → logprob: -0.8607385158538818
    3. '1' → logprob: -4.860738754272461
    4. ')' → logprob: -4.860738754272461
    5. '   ' → logprob: -5.235738754272461
    6. ' ' → logprob: -5.360738754272461
    7. '0' → logprob: -5.485738754272461
    8. ' return' → logprob: -6.485738754272461
    9. ',' → logprob: -7.110738754272461
    10. '    ' → logprob: -7.735738754272461

Token 213: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6937491297721863
    2. '1' → logprob: -0.6937491297721863
    3. ' -' → logprob: -7.818748950958252
    4. ' ' → logprob: -9.19374942779541
    5. '0' → logprob: -10.31874942779541
    6. '(' → logprob: -10.31874942779541
    7. '(-' → logprob: -11.31874942779541
    8. '−' → logprob: -12.69374942779541
    9. '
' → logprob: -12.75624942779541
    10. '```' → logprob: -13.38124942779541

Token 214: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11865882575511932
    2. '-' → logprob: -2.9936587810516357
    3. ' return' → logprob: -3.7436587810516357
    4. '1' → logprob: -4.618659019470215
    5. ' -' → logprob: -4.743659019470215
    6. '       ' → logprob: -4.993659019470215
    7. '0' → logprob: -6.118659019470215
    8. ')' → logprob: -6.368659019470215
    9. ' ' → logprob: -6.618659019470215
    10. 'return' → logprob: -6.618659019470215

Token 215: 'x' (ID: 87)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4256476163864136
    2. ')' → logprob: -1.5506476163864136
    3. '1' → logprob: -2.425647735595703
    4. ' -' → logprob: -3.300647735595703
    5. ' )' → logprob: -5.550647735595703
    6. '   ' → logprob: -6.550647735595703
    7. ' ' → logprob: -6.675647735595703
    8. '0' → logprob: -7.050647735595703
    9. '-)' → logprob: -7.050647735595703
    10. ' return' → logprob: -7.925647735595703

Token 216: '>' (ID: 29)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.8843193054199219
    2. ' >' → logprob: -1.2593193054199219
    3. ')' → logprob: -2.134319305419922
    4. '>' → logprob: -2.884319305419922
    5. '<' → logprob: -3.259319305419922
    6. ' ==' → logprob: -3.384319305419922
    7. ' !=' → logprob: -3.884319305419922
    8. ' )' → logprob: -4.509319305419922
    9. '==' → logprob: -5.009319305419922
    10. '**' → logprob: -5.134319305419922

Token 217: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13520053029060364
    2. ' ' → logprob: -2.3852005004882812
    3. ')' → logprob: -3.7602005004882812
    4. '=' → logprob: -5.385200500488281
    5. '1' → logprob: -6.010200500488281
    6. ' )' → logprob: -6.135200500488281
    7. '>' → logprob: -6.635200500488281
    8. '```' → logprob: -8.260200500488281
    9. '   ' → logprob: -9.510200500488281
    10. ' >' → logprob: -10.385200500488281

Token 218: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01115333754569292
    2. '):' → logprob: -5.386153221130371
    3. ')
' → logprob: -6.136153221130371
    4. '):
' → logprob: -6.386153221130371
    5. '       ' → logprob: -6.886153221130371
    6. ' )' → logprob: -6.886153221130371
    7. '   ' → logprob: -7.886153221130371
    8. ')return' → logprob: -9.011153221130371
    9. '           ' → logprob: -10.761153221130371
    10. '1' → logprob: -10.761153221130371

Token 219: ' so' (ID: 813)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1000276431441307
    2. ' -' → logprob: -3.100027561187744
    3. ' return' → logprob: -3.225027561187744
    4. 'return' → logprob: -5.475027561187744
    5. '   ' → logprob: -5.725027561187744
    6. '1' → logprob: -6.725027561187744
    7. '0' → logprob: -7.475027561187744
    8. ' ' → logprob: -7.475027561187744
    9. '       ' → logprob: -8.725028038024902
    10. '  ' → logprob: -9.225028038024902

Token 220: ' x' (ID: 1215)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.8789383830153383e-05
    2. ' -' → logprob: -11.375019073486328
    3. 'return' → logprob: -12.000019073486328
    4. ' return' → logprob: -14.625019073486328
    5. '0' → logprob: -14.750019073486328
    6. ' ' → logprob: -16.375019073486328
    7. '   ' → logprob: -16.375019073486328
    8. '1' → logprob: -16.750019073486328
    9. '-return' → logprob: -16.750019073486328
    10. '  ' → logprob: -17.500019073486328

Token 221: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -1.344775676727295
    2. ' <' → logprob: -1.344775676727295
    3. '>' → logprob: -2.094775676727295
    4. ')' → logprob: -2.094775676727295
    5. '<' → logprob: -2.469775676727295
    6. ' >' → logprob: -2.844775676727295
    7. ' ^' → logprob: -3.844775676727295
    8. ' ' → logprob: -4.469775676727295
    9. ' )' → logprob: -4.969775676727295
    10. ' -' → logprob: -4.969775676727295

Token 222: 'y' (ID: 88)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.051008518785238266
    2. '1' → logprob: -3.051008462905884
    3. '0' → logprob: -6.801008701324463
    4. 'return' → logprob: -7.176008701324463
    5. 'y' → logprob: -8.426008224487305
    6. ' -' → logprob: -9.051008224487305
    7. ' ' → logprob: -10.176008224487305
    8. '-return' → logprob: -10.176008224487305
    9. '```' → logprob: -10.426008224487305
    10. '(' → logprob: -11.301008224487305

Token 223: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.348097026348114
    2. ' >' → logprob: -2.223097085952759
    3. '<' → logprob: -2.598097085952759
    4. '>' → logprob: -3.098097085952759
    5. ' -' → logprob: -3.223097085952759
    6. '=' → logprob: -4.72309684753418
    7. '-' → logprob: -5.22309684753418
    8. ',' → logprob: -5.72309684753418
    9. ')' → logprob: -5.72309684753418
    10. ' return' → logprob: -6.34809684753418

Token 224: ' y' (ID: 342)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3974575400352478
    2. '0' → logprob: -1.1474575996398926
    3. '1' → logprob: -5.647457599639893
    4. ' -' → logprob: -5.647457599639893
    5. ' ' → logprob: -6.397457599639893
    6. 'y' → logprob: -6.522457599639893
    7. ' y' → logprob: -9.022457122802734
    8. ')' → logprob: -9.272457122802734
    9. 'negative' → logprob: -10.897457122802734
    10. '=' → logprob: -11.397457122802734

Token 225: '^' (ID: 61)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.57733154296875
    2. '^' → logprob: -1.20233154296875
    3. '>' → logprob: -2.70233154296875
    4. '<|end|>' → logprob: -4.45233154296875
    5. '=' → logprob: -4.95233154296875
    6. 'return' → logprob: -5.32733154296875
    7. '<' → logprob: -5.32733154296875
    8. '  ' → logprob: -5.32733154296875
    9. '==' → logprob: -5.45233154296875
    10. '_' → logprob: -5.57733154296875

Token 226: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0006327360169962049
    2. '1' → logprob: -8.125632286071777
    3. '0' → logprob: -8.625632286071777
    4. 'y' → logprob: -9.125632286071777
    5. ' ' → logprob: -10.250632286071777
    6. ' x' → logprob: -11.500632286071777
    7. '-' → logprob: -13.750632286071777
    8. ')' → logprob: -13.750632286071777
    9. '```' → logprob: -15.375632286071777
    10. '_x' → logprob: -15.875632286071777

Token 227: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09201779961585999
    2. '   ' → logprob: -3.217017889022827
    3. ' -' → logprob: -3.342017889022827
    4. '1' → logprob: -5.592017650604248
    5. ')' → logprob: -5.717017650604248
    6. '0' → logprob: -5.967017650604248
    7. ' return' → logprob: -6.467017650604248
    8. ' ' → logprob: -7.592017650604248
    9. ',' → logprob: -8.592018127441406
    10. '  ' → logprob: -8.842018127441406

Token 228: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5525341629981995
    2. '-' → logprob: -2.1775341033935547
    3. ' -' → logprob: -2.4275341033935547
    4. '       ' → logprob: -2.9275341033935547
    5. ' return' → logprob: -2.9275341033935547
    6. ' ' → logprob: -3.1775341033935547
    7. '1' → logprob: -3.4275341033935547
    8. '0' → logprob: -3.5525341033935547
    9. '    ' → logprob: -5.052534103393555
    10. 'return' → logprob: -6.177534103393555

Token 229: ' return' (ID: 622)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005256053060293198
    2. 'return' (adapté à ' return') → logprob: -5.380256175994873
    3. ' return' → logprob: -8.005255699157715
    4. ' -' → logprob: -8.255255699157715
    5. '   ' → logprob: -11.005255699157715
    6. '0' → logprob: -11.630255699157715
    7. '-return' → logprob: -12.130255699157715
    8. '  ' → logprob: -12.630255699157715
    9. '1' → logprob: -12.755255699157715
    10. ' ' → logprob: -13.380255699157715

Token 230: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.700132997939363e-05
    2. ' -' → logprob: -11.000017166137695
    3. '1' → logprob: -16.125017166137695
    4. '0' → logprob: -16.750017166137695
    5. '```' → logprob: -18.000017166137695
    6. '\-' → logprob: -18.125017166137695
    7. '
' → logprob: -19.000017166137695
    8. '  ' → logprob: -19.875017166137695
    9. ' ' → logprob: -20.125017166137695
    10. '   ' → logprob: -20.250017166137695

Token 231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '１' → logprob: -19.75
    4. '   ' → logprob: -21.125
    5. '  ' → logprob: -21.25
    6. '    ' → logprob: -21.625
    7. '```' → logprob: -21.9375
    8. '۱' → logprob: -22.0
    9. ')' → logprob: -22.125
    10. '१' → logprob: -22.1875

Token 232: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 233: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 234: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.477417528629303
    2. '    
' → logprob: -2.227417469024658
    3. '
' → logprob: -2.352417469024658
    4. ' 
' → logprob: -2.852417469024658
    5. '  
' → logprob: -3.352417469024658
    6. '       ' → logprob: -3.977417469024658
    7. '    ' → logprob: -4.477417469024658
    8. ' ' → logprob: -4.477417469024658
    9. '   
' → logprob: -4.477417469024658
    10. '        
' → logprob: -4.727417469024658

Token 235: ' For' (ID: 2214)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20811055600643158
    2. 'import' → logprob: -2.3331105709075928
    3. 'from' → logprob: -3.0831105709075928
    4. ' if' → logprob: -3.2081105709075928
    5. ' from' → logprob: -6.583110332489014
    6. '   ' → logprob: -6.833110332489014
    7. 'x' → logprob: -7.583110332489014
    8. ' import' → logprob: -7.583110332489014
    9. '#' → logprob: -7.958110332489014
    10. 'elif' → logprob: -8.958110809326172

Token 236: ' positive' (ID: 8841)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.22951890528202057
    2. 'x' → logprob: -1.6045188903808594
    3. ' ' → logprob: -5.729518890380859
    4. ' y' → logprob: -8.22951889038086
    5. '0' → logprob: -8.72951889038086
    6. '1' → logprob: -8.85451889038086
    7. '  ' → logprob: -9.85451889038086
    8. ' (' → logprob: -10.60451889038086
    9. '   ' → logprob: -10.72951889038086
    10. ' positive' → logprob: -10.85451889038086

Token 237: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.07088548690080643
    2. ' ,' → logprob: -3.195885419845581
    3. 'x' → logprob: -4.57088565826416
    4. ',' → logprob: -4.69588565826416
    5. ' ' → logprob: -5.19588565826416
    6. ' integers' → logprob: -6.57088565826416
    7. ' numbers' → logprob: -7.44588565826416
    8. '   ' → logprob: -8.44588565826416
    9. '  ' → logprob: -9.19588565826416
    10. ' and' → logprob: -10.32088565826416

Token 238: ',y' (ID: 16103)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.13293881714344025
    2. ',' → logprob: -2.632938861846924
    3. ' ,' → logprob: -3.882938861846924
    4. ' <' → logprob: -4.132938861846924
    5. ' >' → logprob: -5.257938861846924
    6. 'and' → logprob: -5.257938861846924
    7. '   ' → logprob: -6.007938861846924
    8. ' if' → logprob: -6.632938861846924
    9. '>' → logprob: -7.382938861846924
    10. '<' → logprob: -7.882938861846924

Token 239: ' ,' (ID: 1366)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7973383069038391
    2. '   ' → logprob: -0.7973383069038391
    3. '
' → logprob: -3.7973382472991943
    4. '       ' → logprob: -3.9223382472991943
    5. '    
' → logprob: -4.172338485717773
    6. ',' → logprob: -4.672338485717773
    7. ' :' → logprob: -4.922338485717773
    8. '  
' → logprob: -5.547338485717773
    9. '    ' → logprob: -5.672338485717773
    10. '        
' → logprob: -6.047338485717773

Token 240: ' use' (ID: 1199)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5828278660774231
    2. 'if' → logprob: -0.9578278660774231
    3. 'import' → logprob: -3.0828278064727783
    4. ' import' → logprob: -4.957828044891357
    5. 'from' → logprob: -6.207828044891357
    6. '   ' → logprob: -6.582828044891357
    7. ' from' → logprob: -6.832828044891357
    8. ' x' → logprob: -8.9578275680542
    9. ' return' → logprob: -8.9578275680542
    10. 'return' → logprob: -9.5828275680542

Token 241: ' comparison' (ID: 19211)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.05154012143611908
    2. 'x' → logprob: -3.3015401363372803
    3. 'math' → logprob: -4.801539897918701
    4. ' x' → logprob: -6.426539897918701
    5. '(x' → logprob: -6.676539897918701
    6. ' math' → logprob: -7.176539897918701
    7. 'from' → logprob: -7.801539897918701
    8. ' import' → logprob: -7.926539897918701
    9. '(math' → logprob: -8.17654037475586
    10. ' (' → logprob: -8.80154037475586

Token 242: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0324143171310425
    2. ' ' → logprob: -2.032414436340332
    3. ':' → logprob: -2.157414436340332
    4. ' x' → logprob: -2.157414436340332
    5. ' (' → logprob: -2.782414436340332
    6. '(' → logprob: -2.907414436340332
    7. '1' → logprob: -3.282414436340332
    8. ' if' → logprob: -3.407414436340332
    9. '  ' → logprob: -4.157414436340332
    10. '(x' → logprob: -4.407414436340332

Token 243: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1532594859600067
    2. 'y' → logprob: -2.653259515762329
    3. ' x' → logprob: -3.278259515762329
    4. ' y' → logprob: -4.27825927734375
    5. 'math' → logprob: -4.27825927734375
    6. 'import' → logprob: -5.52825927734375
    7. ' math' → logprob: -6.65325927734375
    8. 'pow' → logprob: -7.90325927734375
    9. '(x' → logprob: -8.27825927734375
    10. 'float' → logprob: -9.02825927734375

Token 244: '*' (ID: 9)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06288771331310272
    2. '*' → logprob: -2.937887668609619
    3. ',' → logprob: -6.187887668609619
    4. ')' → logprob: -6.812887668609619
    5. ' ,' → logprob: -7.062887668609619
    6. ' ' → logprob: -7.312887668609619
    7. '*np' → logprob: -7.312887668609619
    8. ' and' → logprob: -7.562887668609619
    9. ' )' → logprob: -7.937887668609619
    10. '**' → logprob: -8.312888145446777

Token 245: 'log' (ID: 2133)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.12988969683647156
    2. 'log' → logprob: -2.129889726638794
    3. ' math' → logprob: -6.004889488220215
    4. 'import' → logprob: -8.004889488220215
    5. 'pow' → logprob: -10.129889488220215
    6. ' log' → logprob: -10.379889488220215
    7. '*' → logprob: -10.379889488220215
    8. 'loga' → logprob: -11.754889488220215
    9. '(math' → logprob: -11.879889488220215
    10. '.log' → logprob: -12.129889488220215

Token 246: '(x' (ID: 4061)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.18270115554332733
    2. '(x' → logprob: -2.4327011108398438
    3. '(' → logprob: -2.5577011108398438
    4. ' x' → logprob: -7.307701110839844
    5. ' (' → logprob: -7.557701110839844
    6. 'y' → logprob: -8.557701110839844
    7. '10' → logprob: -8.807701110839844
    8. '(
' → logprob: -9.057701110839844
    9. '(y' → logprob: -10.932701110839844
    10. ',' → logprob: -11.557701110839844

Token 247: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01645425520837307
    2. '(' → logprob: -5.016454219818115
    3. ' )' → logprob: -5.016454219818115
    4. '(x' → logprob: -6.016454219818115
    5. '),' → logprob: -9.266454696655273
    6. ')
' → logprob: -9.391454696655273
    7. ',' → logprob: -9.766454696655273
    8. '   ' → logprob: -9.766454696655273
    9. ')-' → logprob: -9.766454696655273
    10. '())' → logprob: -10.016454696655273

Token 248: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1037780046463013
    2. ' -' → logprob: -1.8537780046463013
    3. '<|end|>' → logprob: -2.2287778854370117
    4. ',' → logprob: -2.3537778854370117
    5. '-' → logprob: -2.4787778854370117
    6. '       ' → logprob: -2.7287778854370117
    7. ':' → logprob: -2.7287778854370117
    8. '   ' → logprob: -3.2287778854370117
    9. '<|end|>' → logprob: -4.728777885437012
    10. ' ' → logprob: -4.978777885437012

Token 249: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06197395175695419
    2. ' x' → logprob: -2.811974048614502
    3. '   ' → logprob: -12.186973571777344
    4. '	x' → logprob: -14.311973571777344
    5. '    ' → logprob: -15.311973571777344
    6. ' ' → logprob: -15.811973571777344
    7. 'y' → logprob: -17.061973571777344
    8. '```' → logprob: -17.061973571777344
    9. '  ' → logprob: -17.186973571777344
    10. ' y' → logprob: -17.436973571777344

Token 250: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00150212156586349
    2. '.log' → logprob: -7.00150203704834
    3. 'log' → logprob: -7.50150203704834
    4. ' *' → logprob: -11.50150203704834
    5. '"log' → logprob: -11.50150203704834
    6. '[' → logprob: -12.62650203704834
    7. '.' → logprob: -12.75150203704834
    8. ' log' → logprob: -12.75150203704834
    9. '(log' → logprob: -12.75150203704834
    10. 'import' → logprob: -13.12650203704834

Token 251: 'log' (ID: 2133)
  Prédit: 'log'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'log' → logprob: -6.392202976712724e-06
    2. 'math' → logprob: -12.500006675720215
    3. ' log' → logprob: -13.125006675720215
    4. 'loga' → logprob: -14.625006675720215
    5. '.log' → logprob: -16.8750057220459
    6. 'import' → logprob: -17.0000057220459
    7. '"log' → logprob: -17.6250057220459
    8. '	log' → logprob: -17.7500057220459
    9. 'logs' → logprob: -18.1250057220459
    10. 'y' → logprob: -18.3750057220459

Token 252: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.04544781893491745
    2. '(' → logprob: -3.545447826385498
    3. 'y' → logprob: -4.170447826385498
    4. '(x' → logprob: -9.92044734954834
    5. ' y' → logprob: -10.67044734954834
    6. ')' → logprob: -10.67044734954834
    7. '10' → logprob: -10.92044734954834
    8. ' (' → logprob: -12.04544734954834
    9. 'e' → logprob: -12.54544734954834
    10. '()' → logprob: -13.67044734954834

Token 253: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008727516396902502
    2. '):' → logprob: -7.500872611999512
    3. ' )' → logprob: -8.375872611999512
    4. '       ' → logprob: -10.250872611999512
    5. '   ' → logprob: -10.500872611999512
    6. ')
' → logprob: -11.000872611999512
    7. ':' → logprob: -13.375872611999512
    8. '):
' → logprob: -13.375872611999512
    9. '))' → logprob: -14.000872611999512
    10. '`)' → logprob: -14.625872611999512

Token 254: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4067010283470154
    2. '   ' → logprob: -1.4067010879516602
    3. '       ' → logprob: -3.40670108795166
    4. '):' → logprob: -3.78170108795166
    5. ')' → logprob: -4.15670108795166
    6. '
' → logprob: -5.78170108795166
    7. ':return' → logprob: -5.90670108795166
    8. ',' → logprob: -6.15670108795166
    9. 'import' → logprob: -6.53170108795166
    10. ':
' → logprob: -7.03170108795166

Token 255: ' import' (ID: 1588)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7301019430160522
    2. '   ' → logprob: -0.8551019430160522
    3. ' 
' → logprob: -3.105102062225342
    4. 'import' (adapté à ' import') → logprob: -3.855102062225342
    5. '    
' → logprob: -4.855102062225342
    6. '        
' → logprob: -5.105102062225342
    7. ' import' → logprob: -6.480102062225342
    8. ' from' → logprob: -6.730102062225342
    9. 'from' → logprob: -6.730102062225342
    10. '    ' → logprob: -6.855102062225342

Token 256: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -3.7697225252486533e-06
    2. ' math' → logprob: -12.500003814697266
    3. 'cmath' → logprob: -19.500003814697266
    4. '(math' → logprob: -21.625003814697266
    5. '.math' → logprob: -22.250003814697266
    6. 'mat' → logprob: -22.500003814697266
    7. '_math' → logprob: -22.875003814697266
    8. 'Math' → logprob: -25.625003814697266
    9. '   ' → logprob: -25.625003814697266
    10. '```' → logprob: -25.875003814697266

Token 257: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.021857213228940964
    2. '<|end|>' → logprob: -4.396857261657715
    3. '       ' → logprob: -6.021857261657715
    4. '  
' → logprob: -6.146857261657715
    5. '<|end|>' → logprob: -6.396857261657715
    6. '   ' → logprob: -7.146857261657715
    7. '    
' → logprob: -7.271857261657715
    8. '        
' → logprob: -7.396857261657715
    9. ' 
' → logprob: -8.146857261657715
    10. '\n' → logprob: -8.396857261657715

Token 258: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 259: ' a' (ID: 261)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7119516134262085
    2. '   ' → logprob: -1.3369516134262085
    3. 'x' → logprob: -2.461951732635498
    4. ' lx' → logprob: -3.086951732635498
    5. '       ' → logprob: -3.961951732635498
    6. ' y' → logprob: -4.086951732635498
    7. ' if' → logprob: -4.336951732635498
    8. ' vx' → logprob: -4.711951732635498
    9. 'lx' → logprob: -4.961951732635498
    10. ' px' → logprob: -5.211951732635498

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09834735095500946
    2. '=' → logprob: -2.4733474254608154
    3. ',' → logprob: -5.098347187042236
    4. ' ' → logprob: -6.598347187042236
    5. ')' → logprob: -7.848347187042236
    6. '  ' → logprob: -7.973347187042236
    7. '   ' → logprob: -8.598347663879395
    8. '[' → logprob: -8.848347663879395
    9. ' ,' → logprob: -8.848347663879395
    10. 'b' → logprob: -9.473347663879395

Token 261: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.018152983859181404
    2. ' y' → logprob: -4.018153190612793
    3. 'x' → logprob: -12.768153190612793
    4. '   ' → logprob: -15.768153190612793
    5. '	y' → logprob: -16.768152236938477
    6. 'math' → logprob: -17.143152236938477
    7. '(y' → logprob: -17.768152236938477
    8. ' ' → logprob: -18.018152236938477
    9. ' math' → logprob: -18.143152236938477
    10. ' x' → logprob: -18.393152236938477

Token 262: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3872934877872467
    2. ' *' → logprob: -1.1372934579849243
    3. 'import' → logprob: -9.137293815612793
    4. ' math' → logprob: -9.387293815612793
    5. '*Math' → logprob: -9.387293815612793
    6. '.math' → logprob: -9.512293815612793
    7. 'math' → logprob: -10.262293815612793
    8. '(math' → logprob: -11.387293815612793
    9. '*object' → logprob: -12.012293815612793
    10. '<|end|>' → logprob: -12.887293815612793

Token 263: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.04919901862740517
    2. ' math' → logprob: -3.049199104309082
    3. 'import' → logprob: -8.049199104309082
    4. '(math' → logprob: -8.174199104309082
    5. '.math' → logprob: -11.674199104309082
    6. 'log' → logprob: -14.299199104309082
    7. '/math' → logprob: -14.799199104309082
    8. '_math' → logprob: -14.924199104309082
    9. 'cmath' → logprob: -16.424198150634766
    10. ' ' → logprob: -16.424198150634766

Token 264: '.log' (ID: 2659)
  Prédit: '.log'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.log' → logprob: -0.04859418421983719
    2. 'log' → logprob: -3.0485942363739014
    3. '"log' → logprob: -12.79859447479248
    4. ' log' → logprob: -13.54859447479248
    5. '_log' → logprob: -13.79859447479248
    6. '.' → logprob: -14.04859447479248
    7. 'import' → logprob: -14.67359447479248
    8. 'logs' → logprob: -15.54859447479248
    9. '	log' → logprob: -15.92359447479248
    10. '-log' → logprob: -16.548593521118164

Token 265: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.02081945352256298
    2. 'x' → logprob: -4.270819664001465
    3. '(' → logprob: -5.020819664001465
    4. ' (' → logprob: -10.520819664001465
    5. ' x' → logprob: -12.270819664001465
    6. '(
' → logprob: -12.895819664001465
    7. '10' → logprob: -14.520819664001465
    8. 'a' → logprob: -17.52081871032715
    9. '(max' → logprob: -17.77081871032715
    10. '{x' → logprob: -17.89581871032715

Token 266: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022734852973371744
    2. ')
' → logprob: -6.1272735595703125
    3. ' )' → logprob: -9.377273559570312
    4. ' )
' → logprob: -13.502273559570312
    5. ')-' → logprob: -13.752273559570312
    6. ')

' → logprob: -14.252273559570312
    7. '       ' → logprob: -15.627273559570312
    8. '   ' → logprob: -16.127273559570312
    9. ')
' → logprob: -16.127273559570312
    10. '),' → logprob: -17.002273559570312

Token 267: ' if' (ID: 538)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.006815896835178137
    2. '-' → logprob: -5.0068159103393555
    3. ' -
' → logprob: -9.881815910339355
    4. ' ' → logprob: -11.381815910339355
    5. '<|end|>' → logprob: -11.506815910339355
    6. ' <' → logprob: -12.381815910339355
    7. '   ' → logprob: -12.506815910339355
    8. '-
' → logprob: -13.131815910339355
    9. ' >' → logprob: -13.756815910339355
    10. '-a' → logprob: -13.881815910339355

Token 268: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.023245595395565033
    2. ' x' → logprob: -3.7732455730438232
    3. '(x' → logprob: -16.023244857788086
    4. '   ' → logprob: -17.148244857788086
    5. '	x' → logprob: -17.773244857788086
    6. ' ' → logprob: -18.398244857788086
    7. '0' → logprob: -18.523244857788086
    8. '_x' → logprob: -19.273244857788086
    9. '>' → logprob: -20.023244857788086
    10. '(' → logprob: -20.023244857788086

Token 269: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.11375175416469574
    2. '>' → logprob: -2.2387516498565674
    3. ' !=' → logprob: -7.1137518882751465
    4. ' ' → logprob: -9.988751411437988
    5. '!=' → logprob: -10.113751411437988
    6. ')>' → logprob: -11.613751411437988
    7. ')' → logprob: -11.738751411437988
    8. ' )' → logprob: -12.988751411437988
    9. ' >
' → logprob: -13.238751411437988
    10. '[' → logprob: -13.363751411437988

Token 270: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.910643762443215e-05
    2. ' ' → logprob: -9.500079154968262
    3. '1' → logprob: -12.500079154968262
    4. '>' → logprob: -15.000079154968262
    5. '=' → logprob: -17.375078201293945
    6. '<|end|>' → logprob: -17.875078201293945
    7. '۰' → logprob: -18.062578201293945
    8. 'and' → logprob: -18.187578201293945
    9. '
' → logprob: -18.312578201293945
    10. '   ' → logprob: -18.437578201293945

Token 271: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010359067237004638
    2. ' ' → logprob: -6.876035690307617
    3. '1' → logprob: -12.751035690307617
    4. '>' → logprob: -15.876035690307617
    5. '   ' → logprob: -18.001035690307617
    6. '  ' → logprob: -18.251035690307617
    7. '=' → logprob: -18.313535690307617
    8. '```' → logprob: -18.438535690307617
    9. '۰' → logprob: -19.063535690307617
    10. 'a' → logprob: -19.563535690307617

Token 272: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.08624549955129623
    2. 'else' → logprob: -2.836245536804199
    3. ')' → logprob: -4.961245536804199
    4. '<|end|>' → logprob: -5.461245536804199
    5. '>' → logprob: -5.836245536804199
    6. ' ' → logprob: -6.086245536804199
    7. ' >' → logprob: -6.086245536804199
    8. ' )' → logprob: -6.461245536804199
    9. '   ' → logprob: -7.586245536804199
    10. '       ' → logprob: -7.586245536804199

Token 273: ' float' (ID: 4428)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4512743353843689
    2. 'float' → logprob: -1.5762743949890137
    3. ' float' → logprob: -2.8262743949890137
    4. '-' → logprob: -3.5762743949890137
    5. ' ' → logprob: -3.7012743949890137
    6. '-f' → logprob: -4.451274394989014
    7. ' -' → logprob: -4.576274394989014
    8. '-y' → logprob: -4.701274394989014
    9. ' y' → logprob: -4.951274394989014
    10. 'y' → logprob: -5.826274394989014

Token 274: '('-' (ID: 33343)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.32453009486198425
    2. '('-' → logprob: -2.0745301246643066
    3. '('' → logprob: -2.3245301246643066
    4. ''' → logprob: -2.9495301246643066
    5. ''in' → logprob: -7.074530124664307
    6. '"-' → logprob: -8.949529647827148
    7. '-inf' → logprob: -8.949529647827148
    8. ''s' → logprob: -10.449529647827148
    9. '("-' → logprob: -10.449529647827148
    10. 'inf' → logprob: -10.574529647827148

Token 275: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -4.3464544432936236e-05
    2. 'in' → logprob: -10.375043869018555
    3. ''' → logprob: -12.000043869018555
    4. ''in' → logprob: -12.375043869018555
    5. 'math' → logprob: -13.625043869018555
    6. 'Inf' → logprob: -16.250043869018555
    7. 'info' → logprob: -16.500043869018555
    8. '_inf' → logprob: -16.750043869018555
    9. '')' → logprob: -16.875043869018555
    10. ' inf' → logprob: -17.000043869018555

Token 276: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.2844744324684143
    2. ')' → logprob: -1.4094743728637695
    3. '')
' → logprob: -6.2844743728637695
    4. '       ' → logprob: -6.9094743728637695
    5. ' else' → logprob: -8.65947437286377
    6. 'else' → logprob: -9.53447437286377
    7. '")' → logprob: -9.90947437286377
    8. '<|end|>' → logprob: -9.90947437286377
    9. ')
' → logprob: -10.40947437286377
    10. ' )' → logprob: -10.53447437286377

Token 277: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 278: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5236315131187439
    2. 'b' (adapté à ' b') → logprob: -0.8986315131187439
    3. '   ' → logprob: -8.52363109588623
    4. '       ' → logprob: -8.89863109588623
    5. ',' → logprob: -9.64863109588623
    6. '	b' → logprob: -10.64863109588623
    7. ' 
' → logprob: -11.27363109588623
    8. '    ' → logprob: -11.39863109588623
    9. '    
' → logprob: -11.64863109588623
    10. ' ' → logprob: -11.64863109588623

Token 279: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061967797577381134
    2. '=' → logprob: -2.8119678497314453
    3. ' ' → logprob: -16.811967849731445
    4. '    ' → logprob: -17.186967849731445
    5. '   ' → logprob: -17.186967849731445
    6. ',' → logprob: -18.311967849731445
    7. '>' → logprob: -18.311967849731445
    8. ' ' → logprob: -18.561967849731445
    9. '        ' → logprob: -19.186967849731445
    10. '＝' → logprob: -19.311967849731445

Token 280: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0011730826226994395
    2. ' x' → logprob: -6.75117301940918
    3. '   ' → logprob: -12.87617301940918
    4. '    ' → logprob: -15.50117301940918
    5. '	x' → logprob: -16.50117301940918
    6. ' ' → logprob: -17.12617301940918
    7. '       ' → logprob: -17.62617301940918
    8. '  ' → logprob: -18.12617301940918
    9. '           ' → logprob: -18.87617301940918
    10. '     ' → logprob: -19.25117301940918

Token 281: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01416398212313652
    2. '*' → logprob: -4.264163970947266
    3. ' ' → logprob: -15.264163970947266
    4. '[' → logprob: -16.264163970947266
    5. 'import' → logprob: -16.264163970947266
    6. '**' → logprob: -17.514163970947266
    7. '   ' → logprob: -17.514163970947266
    8. '*Math' → logprob: -17.764163970947266
    9. ' ' → logprob: -18.014163970947266
    10. '*(' → logprob: -18.139163970947266

Token 282: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0015079588629305363
    2. ' math' → logprob: -6.501507759094238
    3. '(math' → logprob: -12.126507759094238
    4. 'log' → logprob: -15.626507759094238
    5. '.math' → logprob: -18.126508712768555
    6. 'import' → logprob: -20.001508712768555
    7. '/math' → logprob: -22.126508712768555
    8. 'Math' → logprob: -22.376508712768555
    9. 'cmath' → logprob: -22.501508712768555
    10. ' ' → logprob: -22.876508712768555

Token 283: '.log' (ID: 2659)
  Prédit: '.log'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.log' → logprob: -7.226628895296017e-06
    2. '.' → logprob: -12.000007629394531
    3. 'log' → logprob: -14.250007629394531
    4. '(log' → logprob: -15.500007629394531
    5. ' .' → logprob: -16.25000762939453
    6. '"log' → logprob: -17.12500762939453
    7. '	log' → logprob: -18.25000762939453
    8. ' log' → logprob: -18.62500762939453
    9. '.Log' → logprob: -19.37500762939453
    10. ').' → logprob: -19.75000762939453

Token 284: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.00023965541913639754
    2. '(' → logprob: -8.375239372253418
    3. 'y' → logprob: -11.750239372253418
    4. ' y' → logprob: -14.750239372253418
    5. ' (' → logprob: -14.875239372253418
    6. '<|end|>' → logprob: -15.000239372253418
    7. '(x' → logprob: -17.375240325927734
    8. '	y' → logprob: -18.375240325927734
    9. ')' → logprob: -18.875240325927734
    10. '(
' → logprob: -18.875240325927734

Token 285: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.292095299111679e-05
    2. ' if' → logprob: -10.000082969665527
    3. ' )' → logprob: -10.750082969665527
    4. '(x' → logprob: -12.000082969665527
    5. 'if' → logprob: -13.250082969665527
    6. '       ' → logprob: -13.375082969665527
    7. ')
' → logprob: -13.500082969665527
    8. '(' → logprob: -13.500082969665527
    9. '   ' → logprob: -13.875082969665527
    10. '')' → logprob: -14.375082969665527

Token 286: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.008571903221309185
    2. 'if' → logprob: -5.008572101593018
    3. ')' → logprob: -6.883572101593018
    4. '<|end|>' → logprob: -7.508572101593018
    5. '       ' → logprob: -9.13357162475586
    6. '(' → logprob: -9.25857162475586
    7. '(if' → logprob: -10.63357162475586
    8. ';if' → logprob: -11.63357162475586
    9. ' ' → logprob: -11.75857162475586
    10. '	if' → logprob: -12.00857162475586

Token 287: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4740869402885437
    2. ' y' → logprob: -0.9740869402885437
    3. '0' → logprob: -12.59908676147461
    4. 'x' → logprob: -13.34908676147461
    5. '   ' → logprob: -14.09908676147461
    6. ' ' → logprob: -14.09908676147461
    7. ' x' → logprob: -14.22408676147461
    8. '	y' → logprob: -14.47408676147461
    9. '1' → logprob: -14.59908676147461
    10. '    ' → logprob: -14.72408676147461

Token 288: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.31326553225517273
    2. '>' → logprob: -1.3132655620574951
    3. ' ' → logprob: -13.563265800476074
    4. '[' → logprob: -14.688265800476074
    5. ')>' → logprob: -14.688265800476074
    6. '()>' → logprob: -14.813265800476074
    7. '   ' → logprob: -15.313265800476074
    8. ')' → logprob: -15.438265800476074
    9. ' ' → logprob: -15.563265800476074
    10. '<|end|>' → logprob: -16.188264846801758

Token 289: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04858941584825516
    2. ' ' → logprob: -3.0485894680023193
    3. '=' → logprob: -14.423589706420898
    4. '1' → logprob: -14.798589706420898
    5. '>' → logprob: -15.611089706420898
    6. '  ' → logprob: -16.2985897064209
    7. ' ' → logprob: -16.2985897064209
    8. '[' → logprob: -16.4860897064209
    9. '<|end|>' → logprob: -16.4860897064209
    10. 'import' → logprob: -16.4860897064209

Token 290: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.53050296427682e-05
    2. ' ' → logprob: -9.37508487701416
    3. '1' → logprob: -15.75008487701416
    4. 'import' → logprob: -16.375085830688477
    5. 'def' → logprob: -16.500085830688477
    6. '۰' → logprob: -17.625085830688477
    7. '[' → logprob: -17.812585830688477
    8. '>' → logprob: -18.000085830688477
    9. '
' → logprob: -18.062585830688477
    10. '=' → logprob: -18.312585830688477

Token 291: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.07892978191375732
    2. 'else' → logprob: -2.578929901123047
    3. ' !=' → logprob: -10.953929901123047
    4. '!=' → logprob: -11.953929901123047
    5. '        ' → logprob: -12.703929901123047
    6. ' ' → logprob: -12.828929901123047
    7. '   ' → logprob: -13.578929901123047
    8. ' >' → logprob: -13.578929901123047
    9. ' <' → logprob: -13.703929901123047
    10. '>' → logprob: -13.703929901123047

Token 292: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.006716317031532526
    2. ' float' → logprob: -5.006716251373291
    3. '	float' → logprob: -14.88171672821045
    4. '        ' → logprob: -16.131715774536133
    5. ',float' → logprob: -16.256715774536133
    6. '<float' → logprob: -16.381715774536133
    7. '(float' → logprob: -16.506715774536133
    8. ' ' → logprob: -16.506715774536133
    9. '.float' → logprob: -16.631715774536133
    10. '       ' → logprob: -17.256715774536133

Token 293: '('-' (ID: 33343)
  Prédit: '('-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('-' → logprob: -0.0011217609280720353
    2. '('' → logprob: -7.501121997833252
    3. ''-' → logprob: -7.501121997833252
    4. '-inf' → logprob: -12.001121520996094
    5. 'inf' → logprob: -12.126121520996094
    6. '(' → logprob: -12.876121520996094
    7. '("-' → logprob: -14.376121520996094
    8. '-' → logprob: -14.626121520996094
    9. ''s' → logprob: -15.876121520996094
    10. '('--' → logprob: -15.876121520996094

Token 294: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -7.107425062713446e-06
    2. 'math' → logprob: -13.375006675720215
    3. '-inf' → logprob: -13.375006675720215
    4. '1' → logprob: -13.625006675720215
    5. 'float' → logprob: -14.125006675720215
    6. '-' → logprob: -14.375006675720215
    7. ' inf' → logprob: -15.875006675720215
    8. 'sup' → logprob: -16.25000762939453
    9. 'inc' → logprob: -16.25000762939453
    10. '0' → logprob: -16.31250762939453

Token 295: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.662937372922897e-05
    2. ')
' → logprob: -9.750096321105957
    3. '       ' → logprob: -11.250096321105957
    4. '')' → logprob: -11.250096321105957
    5. ' )' → logprob: -11.625096321105957
    6. '   ' → logprob: -13.125096321105957
    7. ')return' → logprob: -14.750096321105957
    8. '`)' → logprob: -15.875096321105957
    9. '))' → logprob: -16.000097274780273
    10. '),' → logprob: -16.625097274780273

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1637629121541977
    2. '   ' → logprob: -2.2887628078460693
    3. ')' → logprob: -3.4137628078460693
    4. '\n' → logprob: -5.038763046264648
    5. '
' → logprob: -6.038763046264648
    6. '<|end|>' → logprob: -6.163763046264648
    7. ':' → logprob: -6.413763046264648
    8. '>' → logprob: -6.788763046264648
    9. ' ' → logprob: -7.913763046264648
    10. '```' → logprob: -8.288763046264648

Token 297: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5790228247642517
    2. '   ' → logprob: -1.0790228843688965
    3. 'if' (adapté à ' if') → logprob: -3.0790228843688965
    4. ' if' → logprob: -3.4540228843688965
    5. '-' → logprob: -3.9540228843688965
    6. ')' → logprob: -7.5790228843688965
    7. ',' → logprob: -7.9540228843688965
    8. '
' → logprob: -8.329022407531738
    9. 'return' → logprob: -8.329022407531738
    10. '>' → logprob: -8.579022407531738

Token 298: ' abs' (ID: 8443)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023260388523340225
    2. ' a' → logprob: -3.7732603549957275
    3. ' abs' → logprob: -12.023260116577148
    4. 'abs' → logprob: -12.523260116577148
    5. '   ' → logprob: -12.773260116577148
    6. '	a' → logprob: -13.648260116577148
    7. ' ' → logprob: -13.773260116577148
    8. '  ' → logprob: -16.64826011657715
    9. '    ' → logprob: -16.77326011657715
    10. ' ' → logprob: -17.52326011657715

Token 299: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.000000953674316
    3. 'a' → logprob: -17.0
    4. '(
' → logprob: -18.375
    5. '((' → logprob: -19.375
    6. '(x' → logprob: -21.0
    7. 'diff' → logprob: -21.625
    8. '(A' → logprob: -22.0
    9. '   ' → logprob: -22.125
    10. '(b' → logprob: -22.125

Token 300: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1603822410106659
    2. '-' → logprob: -1.9103822708129883
    3. '-b' → logprob: -9.035382270812988
    4. ')' → logprob: -10.910382270812988
    5. ' ' → logprob: -11.660382270812988
    6. '   ' → logprob: -13.160382270812988
    7. '  ' → logprob: -13.410382270812988
    8. '-a' → logprob: -13.410382270812988
    9. '<|end|>' → logprob: -13.535382270812988
    10. '<' → logprob: -14.410382270812988

Token 301: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.157039049663581e-05
    2. ' b' → logprob: -9.875051498413086
    3. ' ' → logprob: -21.000051498413086
    4. '<|end|>' → logprob: -21.000051498413086
    5. '	b' → logprob: -21.125051498413086
    6. '0' → logprob: -21.250051498413086
    7. ')b' → logprob: -22.125051498413086
    8. '   ' → logprob: -22.375051498413086
    9. ')' → logprob: -22.500051498413086
    10. '_b' → logprob: -23.125051498413086

Token 302: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02951105311512947
    2. '<' → logprob: -4.404510974884033
    3. ')<' → logprob: -4.779510974884033
    4. ' <' → logprob: -5.654510974884033
    5. '>' → logprob: -5.779510974884033
    6. ')>' → logprob: -6.904510974884033
    7. ' >' → logprob: -8.279511451721191
    8. ')<=' → logprob: -8.279511451721191
    9. ' )' → logprob: -8.404511451721191
    10. '<=' → logprob: -10.029511451721191

Token 303: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5237446427345276
    2. ' <' → logprob: -0.8987446427345276
    3. '>' → logprob: -8.148744583129883
    4. ' <=' → logprob: -9.398744583129883
    5. '<=' → logprob: -9.523744583129883
    6. ' >' → logprob: -9.898744583129883
    7. '<|end|>' → logprob: -10.523744583129883
    8. ' ' → logprob: -11.023744583129883
    9. '[' → logprob: -11.773744583129883
    10. '<int' → logprob: -11.898744583129883

Token 304: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.15441757265944e-05
    2. ' ' → logprob: -10.375031471252441
    3. '0' → logprob: -15.500031471252441
    4. '   ' → logprob: -17.125032424926758
    5. '10' → logprob: -19.000032424926758
    6. '(' → logprob: -19.125032424926758
    7. '=' → logprob: -19.500032424926758
    8. '```' → logprob: -20.875032424926758
    9. '
' → logprob: -21.000032424926758
    10. 'e' → logprob: -21.375032424926758

Token 305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. '10' → logprob: -13.00000286102295
    3. '0' → logprob: -14.62500286102295
    4. ' ' → logprob: -15.12500286102295
    5. '-' → logprob: -17.875003814697266
    6. '(' → logprob: -18.125003814697266
    7. '   ' → logprob: -18.500003814697266
    8. '=' → logprob: -20.375003814697266
    9. '```' → logprob: -20.375003814697266
    10. 'e' → logprob: -20.500003814697266

Token 306: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0007101670489646494
    2. '-' → logprob: -7.2507100105285645
    3. '-e' → logprob: -15.500710487365723
    4. '0' → logprob: -18.625709533691406
    5. 'E' → logprob: -19.125709533691406
    6. '1' → logprob: -19.500709533691406
    7. '   ' → logprob: -20.875709533691406
    8. '```' → logprob: -20.875709533691406
    9. '           ' → logprob: -21.000709533691406
    10. '^-' → logprob: -21.375709533691406

Token 307: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1472419600977446e-06
    2. '9' → logprob: -14.250000953674316
    3. '10' → logprob: -15.375000953674316
    4. '8' → logprob: -17.125001907348633
    5. '7' → logprob: -17.250001907348633
    6. '6' → logprob: -17.375001907348633
    7. '12' → logprob: -17.625001907348633
    8. '{-' → logprob: -18.000001907348633
    9. '```' → logprob: -18.125001907348633
    10. '15' → logprob: -18.500001907348633

Token 308: '14' (ID: 1265)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.9066675901412964
    2. '12' → logprob: -0.9066675901412964
    3. '15' → logprob: -1.9066675901412964
    4. '14' → logprob: -3.281667709350586
    5. '9' → logprob: -5.531667709350586
    6. '13' → logprob: -6.156667709350586
    7. '8' → logprob: -10.406667709350586
    8. '11' → logprob: -11.906667709350586
    9. '7' → logprob: -12.531667709350586
    10. '20' → logprob: -13.281667709350586

Token 309: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03554507717490196
    2. '       ' → logprob: -3.7855451107025146
    3. ':return' → logprob: -4.7855448722839355
    4. '   ' → logprob: -6.0355448722839355
    5. ':
' → logprob: -7.5355448722839355
    6. ',' → logprob: -8.660545349121094
    7. ' :' → logprob: -8.910545349121094
    8. ' return' → logprob: -9.285545349121094
    9. '           ' → logprob: -9.285545349121094
    10. '	' → logprob: -9.660545349121094

Token 310: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00038455575122497976
    2. 'return' → logprob: -9.125384330749512
    3. ' return' → logprob: -9.250384330749512
    4. '       ' → logprob: -9.375384330749512
    5. '	       ' → logprob: -9.750384330749512
    6. '0' → logprob: -11.250384330749512
    7. '               ' → logprob: -11.625384330749512
    8. '   ' → logprob: -11.625384330749512
    9. '		' → logprob: -13.375384330749512
    10. '          ' → logprob: -14.375384330749512

Token 311: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.041989006102085114
    2. '           ' → logprob: -3.7919890880584717
    3. ' return' → logprob: -4.041988849639893
    4. '       ' → logprob: -7.041988849639893
    5. '0' → logprob: -9.66698932647705
    6. '   ' → logprob: -10.41698932647705
    7. '	return' → logprob: -10.79198932647705
    8. '               ' → logprob: -11.04198932647705
    9. ' ' → logprob: -14.54198932647705
    10. 'eturn' → logprob: -14.66698932647705

Token 312: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '۰' → logprob: -20.875
    4. '=' → logprob: -21.375
    5. '   ' → logprob: -21.375
    6. '
' → logprob: -21.875
    7. '```' → logprob: -21.875
    8. '1' → logprob: -23.0
    9. '０' → logprob: -23.0
    10. '०' → logprob: -23.125

Token 313: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '۰' → logprob: -21.125
    4. '=' → logprob: -22.0
    5. '
' → logprob: -23.0
    6. '０' → logprob: -23.125
    7. '०' → logprob: -23.25
    8. '00' → logprob: -23.625
    9. '-' → logprob: -23.75
    10. '   ' → logprob: -23.75

Token 314: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4778667986392975
    2. '   ' → logprob: -0.9778667688369751
    3. '<|end|>' → logprob: -6.6028666496276855
    4. '	' → logprob: -8.102867126464844
    5. 'elif' → logprob: -8.102867126464844
    6. '```' → logprob: -8.477867126464844
    7. ',' → logprob: -8.727867126464844
    8. '    ' → logprob: -8.727867126464844
    9. '	elif' → logprob: -8.727867126464844
    10. '
' → logprob: -8.852867126464844

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00674000009894371
    2. '   ' → logprob: -5.131740093231201
    3. '-' → logprob: -8.506739616394043
    4. '\n' → logprob: -9.006739616394043
    5. ' elif' → logprob: -9.381739616394043
    6. '	' → logprob: -9.506739616394043
    7. ',' → logprob: -9.756739616394043
    8. 'elif' → logprob: -9.756739616394043
    9. ' if' → logprob: -10.131739616394043
    10. '\' → logprob: -10.381739616394043

Token 316: ' elif' (ID: 9497)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09542697668075562
    2. '       ' → logprob: -2.5954270362854004
    3. '   ' → logprob: -4.9704270362854
    4. 'return' → logprob: -5.8454270362854
    5. 'if' → logprob: -5.9704270362854
    6. ' if' → logprob: -6.9704270362854
    7. ' return' → logprob: -7.2204270362854
    8. '<' → logprob: -7.3454270362854
    9. 'elif' (adapté à ' elif') → logprob: -7.4704270362854
    10. ' -' → logprob: -7.8454270362854

Token 317: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3748334050178528
    2. '-' → logprob: -1.249833345413208
    3. ' a' → logprob: -3.749833345413208
    4. ' -' → logprob: -6.249833583831787
    5. '1' → logprob: -7.499833583831787
    6. ' ' → logprob: -10.999833106994629
    7. '   ' → logprob: -11.624833106994629
    8. '-a' → logprob: -12.374833106994629
    9. '(a' → logprob: -12.749833106994629
    10. '	a' → logprob: -13.374833106994629

Token 318: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.05400465056300163
    2. '<' → logprob: -3.679004669189453
    3. ' >' → logprob: -3.679004669189453
    4. '>' → logprob: -6.804004669189453
    5. '<|end|>' → logprob: -7.054004669189453
    6. '[' → logprob: -10.679004669189453
    7. '-' → logprob: -11.179004669189453
    8. ' ' → logprob: -11.554004669189453
    9. '<|end|>' → logprob: -11.679004669189453
    10. ' <",' → logprob: -11.679004669189453

Token 319: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005233763717114925
    2. ' b' → logprob: -5.2552337646484375
    3. '	b' → logprob: -17.755233764648438
    4. '_b' → logprob: -19.505233764648438
    5. '   ' → logprob: -20.630233764648438
    6. ' ' → logprob: -21.255233764648438
    7. '>b' → logprob: -21.255233764648438
    8. '=' → logprob: -21.505233764648438
    9. ')b' → logprob: -22.130233764648438
    10. '    ' → logprob: -22.130233764648438

Token 320: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15466341376304626
    2. '-' → logprob: -2.404663324356079
    3. ' -' → logprob: -3.529663324356079
    4. '       ' → logprob: -4.529663562774658
    5. '           ' → logprob: -5.654663562774658
    6. ':
' → logprob: -5.654663562774658
    7. '1' → logprob: -5.904663562774658
    8. ':return' → logprob: -6.279663562774658
    9. '   ' → logprob: -7.404663562774658
    10. ',' → logprob: -8.9046630859375

Token 321: '           ' (ID: 352)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0053924149833619595
    2. '           ' → logprob: -5.755392551422119
    3. ' -' → logprob: -6.130392551422119
    4. '1' → logprob: -10.880392074584961
    5. '       ' → logprob: -11.255392074584961
    6. '   ' → logprob: -13.130392074584961
    7. '0' → logprob: -13.505392074584961
    8. 'return' → logprob: -14.755392074584961
    9. '               ' → logprob: -15.630392074584961
    10. '
' → logprob: -15.880392074584961

Token 322: ' return' (ID: 622)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.796184723294573e-06
    2. 'return' (adapté à ' return') → logprob: -12.875005722045898
    3. ' -' → logprob: -13.000005722045898
    4. '           ' → logprob: -14.500005722045898
    5. '1' → logprob: -15.500005722045898
    6. '-return' → logprob: -17.0000057220459
    7. '       ' → logprob: -17.3750057220459
    8. ' return' → logprob: -18.1250057220459
    9. '   ' → logprob: -18.2500057220459
    10. '```' → logprob: -18.8750057220459

Token 323: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.2664456789934775e-06
    2. ' -' → logprob: -13.875000953674316
    3. '1' → logprob: -15.125000953674316
    4. '\-' → logprob: -17.875001907348633
    5. '```' → logprob: -19.250001907348633
    6. '-
' → logprob: -19.625001907348633
    7. '−' → logprob: -19.750001907348633
    8. '
' → logprob: -20.125001907348633
    9. '   ' → logprob: -20.375001907348633
    10. '0' → logprob: -20.625001907348633

Token 324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '１' → logprob: -21.875
    4. '2' → logprob: -22.5
    5. '+' → logprob: -22.875
    6. '```' → logprob: -22.875
    7. '۱' → logprob: -23.1875
    8. '-' → logprob: -23.375
    9. '0' → logprob: -23.5
    10. '   ' → logprob: -23.8125

Token 325: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19569797813892365
    2. ' else' → logprob: -2.0706980228424072
    3. 'else' → logprob: -3.4456980228424072
    4. '   ' → logprob: -4.195697784423828
    5. '<|end|>' → logprob: -5.570697784423828
    6. '	else' → logprob: -7.945697784423828
    7. '	' → logprob: -9.820697784423828
    8. '```' → logprob: -9.945697784423828
    9. '    
' → logprob: -9.945697784423828
    10. '        
' → logprob: -10.070697784423828

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24967524409294128
    2. ' else' → logprob: -2.1246752738952637
    3. 'else' → logprob: -2.9996752738952637
    4. '   ' → logprob: -2.9996752738952637
    5. 'elif' → logprob: -7.749675273895264
    6. '    
' → logprob: -7.874675273895264
    7. '	else' → logprob: -7.999675273895264
    8. '	' → logprob: -8.624674797058105
    9. ' elif' → logprob: -8.749674797058105
    10. '        
' → logprob: -9.499674797058105

Token 327: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.4744962453842163
    2. 'else' (adapté à ' else') → logprob: -0.9744962453842163
    3. '	else' → logprob: -8.474495887756348
    4. '   ' → logprob: -8.599495887756348
    5. '       ' → logprob: -10.974495887756348
    6. 'elif' → logprob: -12.224495887756348
    7. '_else' → logprob: -13.224495887756348
    8. ' elif' → logprob: -14.224495887756348
    9. '1' → logprob: -14.474495887756348
    10. '	' → logprob: -15.349495887756348

Token 328: ':
' (ID: 734)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44220292568206787
    2. '1' → logprob: -1.1922029256820679
    3. '           ' → logprob: -2.9422030448913574
    4. ' return' → logprob: -7.692203044891357
    5. '   ' → logprob: -7.817203044891357
    6. ' +' → logprob: -9.4422025680542
    7. 'return' → logprob: -10.3172025680542
    8. '	       ' → logprob: -10.8172025680542
    9. '    ' → logprob: -11.3172025680542
    10. '+' → logprob: -11.4422025680542

Token 329: '           ' (ID: 352)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002788551209960133
    2. '           ' → logprob: -8.25027847290039
    3. ' ' → logprob: -11.00027847290039
    4. '       ' → logprob: -14.50027847290039
    5. '   ' → logprob: -15.37527847290039
    6. '            ' → logprob: -16.75027847290039
    7. '        ' → logprob: -17.12527847290039
    8. '    ' → logprob: -17.50027847290039
    9. '               ' → logprob: -18.12527847290039
    10. '          ' → logprob: -18.50027847290039

Token 330: ' return' (ID: 622)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.375001907348633
    3. '           ' → logprob: -15.125001907348633
    4. '   ' → logprob: -17.375001907348633
    5. 'return' (adapté à ' return') → logprob: -18.000001907348633
    6. '       ' → logprob: -18.625001907348633
    7. '    ' → logprob: -20.000001907348633
    8. '        ' → logprob: -20.500001907348633
    9. '            ' → logprob: -20.875001907348633
    10. '               ' → logprob: -21.875001907348633

Token 331: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '   ' → logprob: -18.75
    4. '           ' → logprob: -21.875
    5. '
' → logprob: -22.25
    6. '       ' → logprob: -22.5
    7. '    ' → logprob: -22.5
    8. '  ' → logprob: -23.0
    9. '+' → logprob: -23.0
    10. '```' → logprob: -23.0

Token 332: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '   ' → logprob: -20.75
    4. '１' → logprob: -22.625
    5. '```' → logprob: -23.0
    6. '﻿' → logprob: -23.125
    7. '+' → logprob: -23.375
    8. '  ' → logprob: -23.375
    9. '۱' → logprob: -23.375
    10. '
' → logprob: -23.625

Token 333: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14513535797595978
    2. '
' → logprob: -2.2701354026794434
    3. '    
' → logprob: -3.5201354026794434
    4. ')' → logprob: -7.270135402679443
    5. 'A' → logprob: -7.770135402679443
    6. '  
' → logprob: -7.895135402679443
    7. ')
' → logprob: -8.270134925842285
    8. '<|end|>' → logprob: -9.395134925842285
    9. ',
' → logprob: -10.145134925842285
    10. '        
' → logprob: -10.395134925842285

Token 334: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05366712063550949
    2. '
' → logprob: -3.3036670684814453
    3. '    
' → logprob: -4.678667068481445
    4. 'A' → logprob: -5.303667068481445
    5. ')' → logprob: -7.428667068481445
    6. ',A' → logprob: -9.053667068481445
    7. ',' → logprob: -9.303667068481445
    8. ' A' → logprob: -9.928667068481445
    9. ')
' → logprob: -9.928667068481445
    10. 'sorted' → logprob: -10.178667068481445

Token 335: ' B' (ID: 418)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.002469828585162759
    2. '   ' → logprob: -6.127470016479492
    3. 'sorted' → logprob: -8.502470016479492
    4. 'key' → logprob: -9.877470016479492
    5. '
' → logprob: -11.627470016479492
    6. 'B' (adapté à ' B') → logprob: -11.752470016479492
    7. '    
' → logprob: -12.502470016479492
    8. ' A' → logprob: -13.002470016479492
    9. 'result' → logprob: -13.252470016479492
    10. 'keys' → logprob: -13.752470016479492

Token 336: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13562031090259552
    2. '=' → logprob: -2.260620355606079
    3. '.sort' → logprob: -4.5106201171875
    4. '.' → logprob: -4.5106201171875
    5. '[:]' → logprob: -8.6356201171875
    6. '[' → logprob: -9.2606201171875
    7. '=[]' → logprob: -9.5106201171875
    8. '.append' → logprob: -9.5106201171875
    9. ' .' → logprob: -10.3856201171875
    10. ',' → logprob: -10.8856201171875

Token 337: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -8.625866030342877e-05
    2. ' sorted' → logprob: -9.750085830688477
    3. 'A' → logprob: -10.500085830688477
    4. 'list' → logprob: -15.375085830688477
    5. '(sorted' → logprob: -16.250085830688477
    6. '[A' → logprob: -17.375085830688477
    7. '[' → logprob: -17.500085830688477
    8. ' A' → logprob: -18.250085830688477
    9. '.sorted' → logprob: -18.375085830688477
    10. 'Sorted' → logprob: -18.500085830688477

Token 338: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.002488618716597557
    2. '(' → logprob: -6.002488613128662
    3. '(
' → logprob: -11.50248908996582
    4. '(B' → logprob: -13.00248908996582
    5. 'A' → logprob: -15.00248908996582
    6. '((' → logprob: -16.25248908996582
    7. ' (' → logprob: -16.37748908996582
    8. ')' → logprob: -17.62748908996582
    9. '(`' → logprob: -17.87748908996582
    10. '(

' → logprob: -18.37748908996582

Token 339: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8087270038668066e-05
    2. ',key' → logprob: -11.375027656555176
    3. ' ,' → logprob: -12.250027656555176
    4. '(),' → logprob: -12.375027656555176
    5. '   ' → logprob: -12.500027656555176
    6. ')' → logprob: -12.875027656555176
    7. ',B' → logprob: -14.375027656555176
    8. ',b' → logprob: -15.375027656555176
    9. ',,' → logprob: -15.875027656555176
    10. '(' → logprob: -16.000028610229492

Token 340: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.0015084355836734176
    2. ' key' → logprob: -6.5015082359313965
    3. 'reverse' → logprob: -12.501508712768555
    4. '   ' → logprob: -13.126508712768555
    5. 'cmp' → logprob: -15.501508712768555
    6. ' ' → logprob: -16.626508712768555
    7. ',key' → logprob: -17.126508712768555
    8. '           ' → logprob: -17.626508712768555
    9. '  ' → logprob: -17.876508712768555
    10. '	key' → logprob: -18.376508712768555

Token 341: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011102091521024704
    2. '=com' → logprob: -7.501110076904297
    3. '=lambda' → logprob: -8.001110076904297
    4. '=c' → logprob: -8.501110076904297
    5. '=_' → logprob: -12.001110076904297
    6. '=cut' → logprob: -12.126110076904297
    7. '=cv' → logprob: -13.126110076904297
    8. '=p' → logprob: -13.376110076904297
    9. ')=' → logprob: -14.001110076904297
    10. '_=' → logprob: -14.626110076904297

Token 342: 'cmp' (ID: 15231)
  Prédit: 'cmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmp' → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -16.75
    3. ' cmp' → logprob: -16.875
    4. 'cm' → logprob: -17.875
    5. '
' → logprob: -20.0
    6. 'pow' → logprob: -20.375
    7. 'cmb' → logprob: -20.625
    8. '_cmp' → logprob: -21.0
    9. 'lambda' → logprob: -21.25
    10. 'cum' → logprob: -22.125

Token 343: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -3.054500666621607e-06
    2. '_' → logprob: -13.00000286102295
    3. '_t' → logprob: -15.12500286102295
    4. ')' → logprob: -15.50000286102295
    5. '_TO' → logprob: -15.87500286102295
    6. ')_' → logprob: -16.250003814697266
    7. ' _' → logprob: -17.000003814697266
    8. 'To' → logprob: -17.750003814697266
    9. '_from' → logprob: -18.625003814697266
    10. '##_' → logprob: -18.625003814697266

Token 344: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.10020849853754044
    2. 'key' → logprob: -2.3502085208892822
    3. 'ey' → logprob: -14.225208282470703
    4. 'Key' → logprob: -15.350208282470703
    5. ' key' → logprob: -15.725208282470703
    6. 'k' → logprob: -16.225208282470703
    7. '-key' → logprob: -16.475208282470703
    8. 'ke' → logprob: -16.725208282470703
    9. '```' → logprob: -16.725208282470703
    10. '_k' → logprob: -17.100208282470703

Token 345: '(pow' (ID: 189160)
  Prédit: '(pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -1.5094070477061905e-05
    2. 'pow' → logprob: -11.500015258789062
    3. '(' → logprob: -12.625015258789062
    4. '(power' → logprob: -14.375015258789062
    5. '(p' → logprob: -15.000015258789062
    6. '(
' → logprob: -15.625015258789062
    7. '(po' → logprob: -15.875015258789062
    8. ')' → logprob: -16.125015258789062
    9. ')(' → logprob: -16.250015258789062
    10. ' pow' → logprob: -16.375015258789062

Token 346: '_compare' (ID: 82588)
  Prédit: '_compare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_compare' → logprob: 0.0
    2. 'compare' → logprob: -17.375
    3. '_COMPARE' → logprob: -18.125
    4. 'Compare' → logprob: -19.875
    5. 'pow' → logprob: -20.0
    6. '_convert' → logprob: -20.5
    7. ')_' → logprob: -20.875
    8. '_to' → logprob: -21.0
    9. '_' → logprob: -21.25
    10. '_cmp' → logprob: -21.5

Token 347: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.023675864562392235
    2. '),' → logprob: -3.7736759185791016
    3. ')' → logprob: -7.773675918579102
    4. ' ))' → logprob: -12.523675918579102
    5. '))
' → logprob: -13.273675918579102
    6. ')))' → logprob: -13.398675918579102
    7. ',' → logprob: -13.523675918579102
    8. '));' → logprob: -14.773675918579102
    9. ')),' → logprob: -15.648675918579102
    10. '   ' → logprob: -15.648675918579102

Token 348: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.384525865316391
    2. 'for' → logprob: -1.5095258951187134
    3. 'print' → logprob: -2.384525775909424
    4. ')' → logprob: -5.759525775909424
    5. ' for' → logprob: -6.759525775909424
    6. '    
' → logprob: -7.009525775909424
    7. '
' → logprob: -8.509526252746582
    8. 'if' → logprob: -9.134526252746582
    9. 'result' → logprob: -9.134526252746582
    10. ')
' → logprob: -9.384526252746582

Token 349: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5761244893074036
    2. 'for' (adapté à ' for') → logprob: -0.8261244893074036
    3. '   ' → logprob: -9.45112419128418
    4. 'B' → logprob: -9.95112419128418
    5. ' for' → logprob: -10.82612419128418
    6. 'result' → logprob: -11.45112419128418
    7. 'if' → logprob: -12.07612419128418
    8. ' print' → logprob: -12.57612419128418
    9. '    
' → logprob: -12.57612419128418
    10. 'prin' → logprob: -12.82612419128418

Token 350: ' b' (ID: 287)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07851196080446243
    2. 'i' → logprob: -2.953511953353882
    3. 'a' → logprob: -4.453512191772461
    4. 'b' → logprob: -4.578512191772461
    5. 'v' → logprob: -7.453512191772461
    6. ' x' → logprob: -7.828512191772461
    7. 'num' → logprob: -8.078512191772461
    8. ' i' → logprob: -9.078512191772461
    9. ' b' → logprob: -10.953512191772461
    10. 'val' → logprob: -11.828512191772461

Token 351: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02102164924144745
    2. 'in' → logprob: -3.896021604537964
    3. ' ' → logprob: -7.896021842956543
    4. 'n' → logprob: -10.146021842956543
    5. ' i' → logprob: -10.521021842956543
    6. '  ' → logprob: -10.896021842956543
    7. 'i' → logprob: -11.646021842956543
    8. '	in' → logprob: -11.896021842956543
    9. ' ' → logprob: -13.146021842956543
    10. '   ' → logprob: -13.271021842956543

Token 352: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.006715370807796717
    2. ' B' → logprob: -5.006715297698975
    3. ' ' → logprob: -17.506715774536133
    4. '   ' → logprob: -18.631715774536133
    5. '	B' → logprob: -19.006715774536133
    6. '_B' → logprob: -19.131715774536133
    7. 'b' → logprob: -19.881715774536133
    8. '(B' → logprob: -21.631715774536133
    9. '>B' → logprob: -21.881715774536133
    10. '  ' → logprob: -22.131715774536133

Token 353: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031337514519691467
    2. ':
' → logprob: -6.003133773803711
    3. 'print' → logprob: -7.503133773803711
    4. '   ' → logprob: -10.253133773803711
    5. ',' → logprob: -10.628133773803711
    6. ' print' → logprob: -10.753133773803711
    7. '.print' → logprob: -11.003133773803711
    8. '_print' → logprob: -13.378133773803711
    9. '.' → logprob: -13.503133773803711
    10. '[' → logprob: -13.878133773803711

Token 354: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1650061309337616
    2. ' print' → logprob: -2.540006160736084
    3. 'print' → logprob: -2.665006160736084
    4. '       ' → logprob: -5.665006160736084
    5. '    
' → logprob: -10.040005683898926
    6. '```' → logprob: -10.165005683898926
    7. '    ' → logprob: -10.290005683898926
    8. '	print' → logprob: -11.040005683898926
    9. '   ' → logprob: -11.040005683898926
    10. '        
' → logprob: -11.915005683898926

Token 355: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.313314952421933e-05
    2. ' print' → logprob: -10.250062942504883
    3. '   ' → logprob: -10.500062942504883
    4. 'pr' → logprob: -16.625062942504883
    5. 'prin' → logprob: -17.875062942504883
    6. 'sys' → logprob: -19.500062942504883
    7. '       ' → logprob: -20.000062942504883
    8. '```' → logprob: -20.750062942504883
    9. 'printf' → logprob: -20.875062942504883
    10. '	print' → logprob: -20.875062942504883

Token 356: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.01815064437687397
    2. 'b' → logprob: -4.018150806427002
    3. '(' → logprob: -14.143150329589844
    4. ' b' → logprob: -17.518150329589844
    5. ')b' → logprob: -18.143150329589844
    6. '	b' → logprob: -19.143150329589844
    7. '*b' → logprob: -20.143150329589844
    8. '+b' → logprob: -20.393150329589844
    9. '[b' → logprob: -20.518150329589844
    10. '=b' → logprob: -21.018150329589844

Token 357: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ' )' → logprob: -13.375001907348633
    3. ')
' → logprob: -15.750001907348633
    4. '))' → logprob: -15.750001907348633
    5. ')b' → logprob: -15.750001907348633
    6. ',)' → logprob: -17.000001907348633
    7. ')`' → logprob: -17.375001907348633
    8. ')}' → logprob: -17.500001907348633
    9. ',' → logprob: -17.625001907348633
    10. '   ' → logprob: -17.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 355
Tokens correctement prédits (1ère position, stricte): 125
Tokens correctement prédits (1ère position, avec adaptation): 128
Tokens correctement prédits (top 10): 267
Précision stricte (1ère position): 35.21%
Précision adaptée (1ère position): 36.06%
Précision (top 10): 75.21%
================================================================================
