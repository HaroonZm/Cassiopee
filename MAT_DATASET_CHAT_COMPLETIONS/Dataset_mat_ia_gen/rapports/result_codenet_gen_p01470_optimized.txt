================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from fractions import Fraction

input = sys.stdin.readline
N = int(input())
X = Fraction(0, 1)
for _ in range(N):
    o, y = map(int, input().split())
    if o == 1:
        X += y
    elif o == 2:
        X -= y
    elif o == 3:
        X *= y
    else:  # o == 4
        X /= y
print(X.numerator // X.denominator if X.denominator == 1 else X)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' fractions' (ID: 110523)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.010235155932605267
    2. 'os' → logprob: -4.76023530960083
    3. ' collections' → logprob: -7.76023530960083
    4. ' pathlib' → logprob: -7.76023530960083
    5. ' Py' → logprob: -8.885234832763672
    6. ' math' → logprob: -9.010234832763672
    7. 'collections' → logprob: -9.385234832763672
    8. ' datetime' → logprob: -9.760234832763672
    9. ' import' → logprob: -9.885234832763672
    10. ' typing' → logprob: -9.885234832763672

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.006872728932648897
    2. 'import' → logprob: -5.006872653961182
    3. ' ' → logprob: -9.00687313079834
    4. '.' → logprob: -11.25687313079834
    5. '	import' → logprob: -11.63187313079834
    6. '<|end|>' → logprob: -12.38187313079834
    7. '_import' → logprob: -12.88187313079834
    8. '-import' → logprob: -14.25687313079834
    9. ' impor' → logprob: -14.38187313079834
    10. ' Import' → logprob: -14.38187313079834

Token 6: ' Fraction' (ID: 112108)
  Prédit: ' Fraction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Fraction' → logprob: -0.11305399984121323
    2. 'Fraction' → logprob: -2.238054037094116
    3. ' fractions' → logprob: -8.613054275512695
    4. 'Fra' → logprob: -10.863054275512695
    5. ' Fra' → logprob: -10.988054275512695
    6. ' ' → logprob: -12.613054275512695
    7. ' F' → logprob: -12.988054275512695
    8. ' fraction' → logprob: -13.113054275512695
    9. 'fra' → logprob: -13.613054275512695
    10. 'F' → logprob: -13.738054275512695

Token 7: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.47554200887680054
    2. 'import' → logprob: -1.9755420684814453
    3. '\' → logprob: -2.6005420684814453
    4. '
' → logprob: -2.6005420684814453
    5. '

' → logprob: -3.2255420684814453
    6. '<|end|>' → logprob: -4.100542068481445
    7. '```' → logprob: -4.225542068481445
    8. '' → logprob: -5.225542068481445
    9. 'a' → logprob: -5.850542068481445
    10. ',' → logprob: -5.975542068481445

Token 8: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7202835083007812
    2. '`' → logprob: -2.2202835083007812
    3. 'a' → logprob: -2.2202835083007812
    4. '\' → logprob: -2.4702835083007812
    5. 'import' → logprob: -2.8452835083007812
    6. '```' → logprob: -3.2202835083007812
    7. '\n' → logprob: -3.3452835083007812
    8. '.' → logprob: -4.345283508300781
    9. ',' → logprob: -4.595283508300781
    10. 'x' → logprob: -5.095283508300781

Token 9: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036048211622983217
    2. '.' → logprob: -5.753604888916016
    3. '()' → logprob: -9.628604888916016
    4. '=' → logprob: -9.753604888916016
    5. ' (' → logprob: -10.128604888916016
    6. 's' → logprob: -10.253604888916016
    7. '_' → logprob: -10.253604888916016
    8. '```' → logprob: -10.378604888916016
    9. ' =' → logprob: -10.878604888916016
    10. ')' → logprob: -10.878604888916016

Token 10: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.26030340790748596
    2. 'sys' → logprob: -1.7603033781051636
    3. ' input' → logprob: -3.385303497314453
    4. 'input' → logprob: -3.760303497314453
    5. '(sys' → logprob: -11.635303497314453
    6. ' ' → logprob: -11.885303497314453
    7. '=sys' → logprob: -12.010303497314453
    8. '	sys' → logprob: -12.135303497314453
    9. ' lambda' → logprob: -12.635303497314453
    10. 'lambda' → logprob: -12.760303497314453

Token 11: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05548660084605217
    2. '.stdin' → logprob: -3.1804866790771484
    3. ' .' → logprob: -4.555486679077148
    4. '.argv' → logprob: -7.555486679077148
    5. '.input' → logprob: -7.930486679077148
    6. '.import' → logprob: -8.180486679077148
    7. '.stdout' → logprob: -8.180486679077148
    8. '.readline' → logprob: -8.680486679077148
    9. '.path' → logprob: -9.055486679077148
    10. '.exit' → logprob: -9.555486679077148

Token 12: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.01079513132572174
    2. '.' → logprob: -5.0107951164245605
    3. '.read' → logprob: -5.5107951164245605
    4. '.readlines' → logprob: -11.135795593261719
    5. 'read' → logprob: -11.385795593261719
    6. '.Read' → logprob: -13.135795593261719
    7. '.write' → logprob: -16.01079559326172
    8. ' readline' → logprob: -16.38579559326172
    9. '.\' → logprob: -16.51079559326172
    10. '.buffer' → logprob: -16.51079559326172

Token 13: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.198178231716156
    2. '()' → logprob: -1.8231782913208008
    3. '(
' → logprob: -4.198178291320801
    4. '()
' → logprob: -6.698178291320801
    5. '(

' → logprob: -7.573178291320801
    6. '()

' → logprob: -8.1981782913208
    7. '
' → logprob: -8.3231782913208
    8. ')' → logprob: -8.4481782913208
    9. 'def' → logprob: -9.0731782913208
    10. ' (' → logprob: -9.3231782913208

Token 14: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.93715500831604
    2. '()' → logprob: -1.06215500831604
    3. '(' → logprob: -1.93715500831604
    4. 'n' → logprob: -2.68715500831604
    5. 'a' → logprob: -4.312154769897461
    6. 'x' → logprob: -5.187154769897461
    7. '()\' → logprob: -5.312154769897461
    8. '(n' → logprob: -5.437154769897461
    9. '()
' → logprob: -5.562154769897461
    10. '()

' → logprob: -5.812154769897461

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44379961490631104
    2. ' ' → logprob: -1.818799614906311
    3. '=' → logprob: -1.943799614906311
    4. ')' → logprob: -3.8187994956970215
    5. '.' → logprob: -4.6937994956970215
    6. '[' → logprob: -5.0687994956970215
    7. ',' → logprob: -5.1937994956970215
    8. '  ' → logprob: -6.3187994956970215
    9. '<|end|>' → logprob: -6.5687994956970215
    10. '>' → logprob: -6.8187994956970215

Token 16: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07471952587366104
    2. 'int' → logprob: -2.8247194290161133
    3. ' ' → logprob: -4.449719429016113
    4. ' input' → logprob: -7.074719429016113
    5. 'input' → logprob: -9.824719429016113
    6. '0' → logprob: -10.199719429016113
    7. '10' → logprob: -10.824719429016113
    8. '20' → logprob: -12.324719429016113
    9. ' map' → logprob: -12.324719429016113
    10. '5' → logprob: -12.699719429016113

Token 17: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.06205439940094948
    2. '(' → logprob: -2.812054395675659
    3. '()' → logprob: -10.562054634094238
    4. 'input' → logprob: -10.812054634094238
    5. ' (' → logprob: -11.187054634094238
    6. '('' → logprob: -11.312054634094238
    7. '(sys' → logprob: -11.562054634094238
    8. '(N' → logprob: -13.437054634094238
    9. '(
' → logprob: -14.312054634094238
    10. '("' → logprob: -15.187054634094238

Token 18: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.019292782992124557
    2. '()' → logprob: -4.019292831420898
    3. ')' → logprob: -6.894292831420898
    4. ' ())' → logprob: -10.144292831420898
    5. '().' → logprob: -10.269292831420898
    6. '())
' → logprob: -10.644292831420898
    7. '(' → logprob: -11.269292831420898
    8. '()))' → logprob: -11.269292831420898
    9. '()
' → logprob: -13.894292831420898
    10. '())

' → logprob: -14.019292831420898

Token 19: 'X' (ID: 55)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2291842699050903
    2. 'for' → logprob: -1.8541842699050903
    3. 'numbers' → logprob: -2.229184150695801
    4. 'data' → logprob: -2.729184150695801
    5. 's' → logprob: -2.729184150695801
    6. 'result' → logprob: -3.104184150695801
    7. 'A' → logprob: -3.354184150695801
    8. 'arr' → logprob: -3.604184150695801
    9. 'x' → logprob: -3.604184150695801
    10. 'lst' → logprob: -4.104184150695801

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15073837339878082
    2. '=' → logprob: -3.025738477706909
    3. 's' → logprob: -3.275738477706909
    4. '[' → logprob: -3.775738477706909
    5. ' ' → logprob: -4.40073823928833
    6. ',' → logprob: -4.65073823928833
    7. '_' → logprob: -5.77573823928833
    8. '[i' → logprob: -6.40073823928833
    9. ' ,' → logprob: -7.15073823928833
    10. '.' → logprob: -7.52573823928833

Token 21: ' Fraction' (ID: 112108)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3943672180175781
    2. 'list' → logprob: -1.5193672180175781
    3. ' []' → logprob: -3.144367218017578
    4. '[]' → logprob: -3.269367218017578
    5. ' [' → logprob: -4.394367218017578
    6. '[' → logprob: -5.519367218017578
    7. ' input' → logprob: -5.644367218017578
    8. 'input' → logprob: -6.144367218017578
    9. '[input' → logprob: -6.769367218017578
    10. '[int' → logprob: -7.019367218017578

Token 22: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014116371981799603
    2. '()' → logprob: -4.639116287231445
    3. '(input' → logprob: -5.764116287231445
    4. '('' → logprob: -7.889116287231445
    5. '((' → logprob: -9.014116287231445
    6. '(int' → logprob: -9.139116287231445
    7. '(X' → logprob: -9.139116287231445
    8. '([' → logprob: -9.139116287231445
    9. '("("' → logprob: -9.139116287231445
    10. '(N' → logprob: -9.514116287231445

Token 23: '0' (ID: 15)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8178685307502747
    2. 'N' → logprob: -1.3178684711456299
    3. '1' → logprob: -1.5678684711456299
    4. ')' → logprob: -3.44286847114563
    5. '0' → logprob: -4.317868709564209
    6. '3' → logprob: -5.317868709564209
    7. ' input' → logprob: -5.317868709564209
    8. '10' → logprob: -5.442868709564209
    9. '100' → logprob: -5.442868709564209
    10. 'X' → logprob: -5.442868709564209

Token 24: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010309729725122452
    2. ',' → logprob: -4.63530969619751
    3. '+' → logprob: -8.385310173034668
    4. ' )' → logprob: -8.385310173034668
    5. ' +' → logprob: -10.260310173034668
    6. ',)' → logprob: -11.510310173034668
    7. '+)' → logprob: -11.760310173034668
    8. '),' → logprob: -11.760310173034668
    9. '))' → logprob: -12.010310173034668
    10. ' ,' → logprob: -12.260310173034668

Token 25: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.991464786347933e-05
    2. ' ' → logprob: -9.750060081481934
    3. 'N' → logprob: -14.375060081481934
    4. ')' → logprob: -14.750060081481934
    5. '   ' → logprob: -15.000060081481934
    6. '```' → logprob: -16.750059127807617
    7. '0' → logprob: -17.000059127807617
    8. '  ' → logprob: -17.500059127807617
    9. '2' → logprob: -17.625059127807617
    10. '10' → logprob: -17.875059127807617

Token 26: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.282920129597187e-05
    2. ' ' → logprob: -11.625012397766113
    3. 'N' → logprob: -12.875012397766113
    4. ')' → logprob: -15.125012397766113
    5. '   ' → logprob: -15.750012397766113
    6. '10' → logprob: -16.00001335144043
    7. '0' → logprob: -16.00001335144043
    8. '2' → logprob: -16.25001335144043
    9. '3' → logprob: -16.50001335144043
    10. '7' → logprob: -16.50001335144043

Token 27: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0921942703134846e-05
    2. ')
' → logprob: -12.37501049041748
    3. '+' → logprob: -12.50001049041748
    4. ' )' → logprob: -14.00001049041748
    5. '))' → logprob: -14.37501049041748
    6. '),' → logprob: -14.62501049041748
    7. '+)' → logprob: -15.25001049041748
    8. ')

' → logprob: -15.87501049041748
    9. ',' → logprob: -16.375011444091797
    10. '')' → logprob: -16.625011444091797

Token 28: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02883164957165718
    2. ' for' → logprob: -3.778831720352173
    3. '+' → logprob: -6.403831481933594
    4. '<|end|>' → logprob: -6.653831481933594
    5. 'total' → logprob: -7.528831481933594
    6. ')' → logprob: -7.528831481933594
    7. 'i' → logprob: -7.903831481933594
    8. 'x' → logprob: -8.278831481933594
    9. '
' → logprob: -8.278831481933594
    10. '\n' → logprob: -9.528831481933594

Token 29: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7236514687538147
    2. ' _' → logprob: -1.09865140914917
    3. '_' → logprob: -1.97365140914917
    4. ' ' → logprob: -3.22365140914917
    5. 'i' → logprob: -5.84865140914917
    6. ' ‌' → logprob: -10.973651885986328
    7. '  ' → logprob: -11.473651885986328
    8. ' ' → logprob: -11.473651885986328
    9. '_i' → logprob: -11.848651885986328
    10. ' I' → logprob: -13.098651885986328

Token 30: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22577260434627533
    2. 'in' → logprob: -1.6007726192474365
    3. ' ' → logprob: -8.225772857666016
    4. 'i' → logprob: -10.225772857666016
    5. 'n' → logprob: -11.725772857666016
    6. 'range' → logprob: -11.850772857666016
    7. '	in' → logprob: -11.975772857666016
    8. ' _' → logprob: -12.600772857666016
    9. ' i' → logprob: -12.600772857666016
    10. 'x' → logprob: -12.725772857666016

Token 31: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0059304554015398026
    2. ' range' → logprob: -5.130930423736572
    3. '(range' → logprob: -14.75593090057373
    4. '	range' → logprob: -15.25593090057373
    5. ' ' → logprob: -15.63093090057373
    6. 'X' → logprob: -15.88093090057373
    7. 'ran' → logprob: -15.88093090057373
    8. 'Range' → logprob: -16.130929946899414
    9. 'rang' → logprob: -16.255929946899414
    10. ' xrange' → logprob: -16.255929946899414

Token 32: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.3870733976364136
    2. '(' → logprob: -1.1370733976364136
    3. ' (' → logprob: -8.762073516845703
    4. '(n' → logprob: -10.512073516845703
    5. ' N' → logprob: -12.387073516845703
    6. '(range' → logprob: -12.512073516845703
    7. '(int' → logprob: -13.012073516845703
    8. '(
' → logprob: -13.137073516845703
    9. 'N' → logprob: -13.262073516845703
    10. '()' → logprob: -13.762073516845703

Token 33: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006075856741517782
    2. ')' → logprob: -5.256075859069824
    3. ':' → logprob: -7.881075859069824
    4. '):
' → logprob: -8.381075859069824
    5. ' ):' → logprob: -8.881075859069824
    6. '+' → logprob: -10.006075859069824
    7. ',' → logprob: -10.506075859069824
    8. ' )' → logprob: -12.881075859069824
    9. ''):' → logprob: -13.131075859069824
    10. '-' → logprob: -13.256075859069824

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0172235369682312
    2. ' line' → logprob: -4.392223358154297
    3. ' x' → logprob: -6.767223358154297
    4. 'x' → logprob: -6.892223358154297
    5. ' s' → logprob: -7.892223358154297
    6. ' a' → logprob: -7.892223358154297
    7. 'line' → logprob: -8.392223358154297
    8. 'a' → logprob: -8.642223358154297
    9. ' ind' → logprob: -8.642223358154297
    10. 'value' → logprob: -9.392223358154297

Token 35: ' o' (ID: 293)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.75489741563797
    2. 'x' → logprob: -1.0048973560333252
    3. 'X' → logprob: -2.254897356033325
    4. 'A' → logprob: -4.754897594451904
    5. ' a' → logprob: -5.129897594451904
    6. 'num' → logprob: -5.129897594451904
    7. 'fraction' → logprob: -5.379897594451904
    8. ' x' → logprob: -5.504897594451904
    9. 'v' → logprob: -5.629897594451904
    10. 'line' → logprob: -6.004897594451904

Token 36: ',' (ID: 11)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.09513534605503082
    2. 'per' → logprob: -3.095135450363159
    3. 'perator' → logprob: -3.345135450363159
    4. ',' → logprob: -6.22013521194458
    5. 'ut' → logprob: -6.59513521194458
    6. ',p' → logprob: -6.72013521194458
    7. 'pi' → logprob: -7.09513521194458
    8. 'pen' → logprob: -7.34513521194458
    9. 'ne' → logprob: -7.47013521194458
    10. 'input' → logprob: -8.095135688781738

Token 37: ' y' (ID: 342)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2238789796829224
    2. 'v' → logprob: -1.3488789796829224
    3. 'd' → logprob: -1.8488789796829224
    4. 'x' → logprob: -1.9738789796829224
    5. 'p' → logprob: -3.223878860473633
    6. 'n' → logprob: -3.848878860473633
    7. ' v' → logprob: -3.973878860473633
    8. ' a' → logprob: -4.598878860473633
    9. ' x' → logprob: -4.848878860473633
    10. 'k' → logprob: -4.973878860473633

Token 38: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1458483785390854
    2. ' =' → logprob: -2.020848274230957
    3. ',' → logprob: -5.770848274230957
    4. ' ' → logprob: -11.520848274230957
    5. '=input' → logprob: -11.895848274230957
    6. 's' → logprob: -12.270848274230957
    7. '_' → logprob: -12.770848274230957
    8. 'p' → logprob: -13.145848274230957
    9. 'ield' → logprob: -13.270848274230957
    10. '=int' → logprob: -13.270848274230957

Token 39: ' map' (ID: 4014)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5277789235115051
    2. ' input' → logprob: -0.9027789235115051
    3. ' map' → logprob: -5.7777791023254395
    4. 'map' → logprob: -6.5277791023254395
    5. ' ' → logprob: -9.652778625488281
    6. '(input' → logprob: -12.277778625488281
    7. '	input' → logprob: -13.027778625488281
    8. '=input' → logprob: -13.152778625488281
    9. '[input' → logprob: -13.215278625488281
    10. ' sys' → logprob: -13.902778625488281

Token 40: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03198036924004555
    2. '(str' → logprob: -3.906980276107788
    3. '(' → logprob: -4.531980514526367
    4. '(lambda' → logprob: -8.156980514526367
    5. '(input' → logprob: -8.781980514526367
    6. 'str' → logprob: -9.656980514526367
    7. '(float' → logprob: -10.406980514526367
    8. 'int' → logprob: -10.406980514526367
    9. '(eval' → logprob: -10.906980514526367
    10. '[int' → logprob: -11.531980514526367

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2521241009235382
    2. ',input' → logprob: -1.5021240711212158
    3. 'input' → logprob: -8.877123832702637
    4. '(input' → logprob: -10.002123832702637
    5. '(' → logprob: -12.502123832702637
    6. ' ,' → logprob: -12.752123832702637
    7. ' input' → logprob: -14.002123832702637
    8. '，' → logprob: -14.502123832702637
    9. ')' → logprob: -14.502123832702637
    10. ',(' → logprob: -15.252123832702637

Token 42: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04858884960412979
    2. ' input' → logprob: -3.048588752746582
    3. ')' → logprob: -13.923588752746582
    4. '(input' → logprob: -15.673588752746582
    5. ' ' → logprob: -16.0485897064209
    6. ',input' → logprob: -16.4235897064209
    7. '	input' → logprob: -16.7985897064209
    8. '=input' → logprob: -16.9235897064209
    9. 'sys' → logprob: -17.1735897064209
    10. ' )' → logprob: -17.4235897064209

Token 43: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.723352049040841e-06
    2. '()' → logprob: -12.375004768371582
    3. ' ().' → logprob: -15.125004768371582
    4. '())' → logprob: -15.625004768371582
    5. ')' → logprob: -17.125003814697266
    6. '(' → logprob: -17.250003814697266
    7. '.split' → logprob: -19.125003814697266
    8. '.' → logprob: -19.250003814697266
    9. '()
' → logprob: -19.375003814697266
    10. 'split' → logprob: -19.500003814697266

Token 44: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0006003346061334014
    2. 'strip' → logprob: -7.500600337982178
    3. 'rstrip' → logprob: -10.00059986114502
    4. '(split' → logprob: -13.87559986114502
    5. ' split' → logprob: -14.00059986114502
    6. 'spl' → logprob: -16.000600814819336
    7. 'sp' → logprob: -16.625600814819336
    8. 'rs' → logprob: -18.250600814819336
    9. 's' → logprob: -18.250600814819336
    10. ')' → logprob: -19.000600814819336

Token 45: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25505882501602173
    2. '())' → logprob: -1.505058765411377
    3. '()' → logprob: -5.880058765411377
    4. '))' → logprob: -8.130059242248535
    5. '()))' → logprob: -11.880059242248535
    6. '`)' → logprob: -12.255059242248535
    7. '(' → logprob: -12.505059242248535
    8. '())
' → logprob: -12.630059242248535
    9. ')")' → logprob: -12.630059242248535
    10. ')`' → logprob: -12.880059242248535

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2944289743900299
    2. '
' → logprob: -1.5444289445877075
    3. '<|end|>' → logprob: -3.919429063796997
    4. ' ' → logprob: -5.419428825378418
    5. '    
' → logprob: -5.419428825378418
    6. ' if' → logprob: -5.794428825378418
    7. ' 
' → logprob: -6.044428825378418
    8. '  ' → logprob: -6.544428825378418
    9. '  
' → logprob: -6.669428825378418
    10. 'X' → logprob: -7.294428825378418

Token 47: ' if' (ID: 538)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.08338078111410141
    2. ' X' → logprob: -3.583380699157715
    3. ' if' → logprob: -3.833380699157715
    4. 'if' (adapté à ' if') → logprob: -4.583380699157715
    5. '   ' → logprob: -4.583380699157715
    6. '+' → logprob: -5.708380699157715
    7. ' ' → logprob: -6.208380699157715
    8. 'x' → logprob: -6.333380699157715
    9. 'y' → logprob: -6.583380699157715
    10. 'Y' → logprob: -8.333380699157715

Token 48: ' o' (ID: 293)
  Prédit: ' o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' o' → logprob: -0.00536905275657773
    2. 'o' → logprob: -5.255369186401367
    3. ' ' → logprob: -9.380369186401367
    4. 'y' → logprob: -11.380369186401367
    5. '	o' → logprob: -11.630369186401367
    6. '  ' → logprob: -12.005369186401367
    7. '<|end|>' → logprob: -12.005369186401367
    8. ' y' → logprob: -12.255369186401367
    9. '    ' → logprob: -12.630369186401367
    10. ' ' → logprob: -12.755369186401367

Token 49: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.18090088665485382
    2. ' ==' → logprob: -1.8059009313583374
    3. '+' → logprob: -7.180901050567627
    4. '=' → logprob: -8.930900573730469
    5. '>' → logprob: -9.930900573730469
    6. '*' → logprob: -10.055900573730469
    7. '<' → logprob: -10.430900573730469
    8. ')' → logprob: -11.180900573730469
    9. ' ' → logprob: -11.180900573730469
    10. '[' → logprob: -11.430900573730469

Token 50: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08436647802591324
    2. '0' → logprob: -2.8343665599823
    3. ' ' → logprob: -3.8343665599823
    4. '2' → logprob: -7.709366321563721
    5. '+' → logprob: -10.709366798400879
    6. '3' → logprob: -10.834366798400879
    7. '4' → logprob: -11.146866798400879
    8. '-' → logprob: -11.771866798400879
    9. '  ' → logprob: -13.334366798400879
    10. '6' → logprob: -13.521866798400879

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04546581953763962
    2. '0' → logprob: -3.1704657077789307
    3. '2' → logprob: -6.17046594619751
    4. '+' → logprob: -8.920465469360352
    5. '3' → logprob: -9.420465469360352
    6. '-' → logprob: -10.232965469360352
    7. ' ' → logprob: -10.420465469360352
    8. '4' → logprob: -10.545465469360352
    9. '100' → logprob: -11.920465469360352
    10. '5' → logprob: -12.170465469360352

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.827200897736475e-05
    2. ' :' → logprob: -10.375078201293945
    3. '+:' → logprob: -11.125078201293945
    4. '+' → logprob: -12.250078201293945
    5. '):' → logprob: -12.375078201293945
    6. ':
' → logprob: -12.500078201293945
    7. '>:' → logprob: -12.625078201293945
    8. '>' → logprob: -12.875078201293945
    9. ' or' → logprob: -13.125078201293945
    10. '=' → logprob: -13.250078201293945

Token 53: '       ' (ID: 309)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.2114008069038391
    2. '   ' → logprob: -2.2114007472991943
    3. ' X' → logprob: -2.9614007472991943
    4. '       ' → logprob: -3.8364007472991943
    5. ':' → logprob: -5.711400985717773
    6. 'y' → logprob: -6.211400985717773
    7. '+' → logprob: -7.586400985717773
    8. ' ' → logprob: -7.836400985717773
    9. ' y' → logprob: -8.086400985717773
    10. '           ' → logprob: -8.211400985717773

Token 54: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.0005822229431942105
    2. ' X' → logprob: -7.625582218170166
    3. '   ' → logprob: -10.250582695007324
    4. 'Y' → logprob: -10.375582695007324
    5. 'y' → logprob: -10.625582695007324
    6. ' ' → logprob: -13.875582695007324
    7. 'x' → logprob: -14.000582695007324
    8. '+' → logprob: -15.250582695007324
    9. '	X' → logprob: -15.875582695007324
    10. '  ' → logprob: -16.000581741333008

Token 55: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.05755297467112541
    2. ' +=' → logprob: -2.9325530529022217
    3. '=' → logprob: -6.557552814483643
    4. '+' → logprob: -7.432552814483643
    5. '-=' → logprob: -7.807552814483643
    6. ' -=' → logprob: -9.3075532913208
    7. '+=(' → logprob: -9.4325532913208
    8. '-' → logprob: -10.6825532913208
    9. ' =' → logprob: -10.8075532913208
    10. '*=' → logprob: -12.0575532913208

Token 56: ' y' (ID: 342)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.05286768451333046
    2. ' Fraction' → logprob: -3.4278676509857178
    3. 'y' → logprob: -4.177867889404297
    4. ' y' → logprob: -6.177867889404297
    5. '1' → logprob: -7.177867889404297
    6. 'F' → logprob: -8.177867889404297
    7. ' ' → logprob: -8.552867889404297
    8. 'Fra' → logprob: -9.802867889404297
    9. 'Frac' → logprob: -9.802867889404297
    10. '-F' → logprob: -10.427867889404297

Token 57: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.2980193495750427
    2. 'else' → logprob: -1.9230194091796875
    3. ' elif' → logprob: -2.7980194091796875
    4. ' else' → logprob: -3.6730194091796875
    5. '/' → logprob: -4.1730194091796875
    6. '
' → logprob: -5.5480194091796875
    7. '/
' → logprob: -5.7980194091796875
    8. '*' → logprob: -6.7980194091796875
    9. ' /' → logprob: -7.0480194091796875
    10. '<|end|>' → logprob: -8.548019409179688

Token 58: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.7131057977676392
    2. ' elif' → logprob: -0.8381057977676392
    3. ' else' → logprob: -3.0881056785583496
    4. 'else' → logprob: -4.08810567855835
    5. '<|end|>' → logprob: -4.58810567855835
    6. '   ' → logprob: -6.33810567855835
    7. ' ' → logprob: -7.83810567855835
    8. '+' → logprob: -7.83810567855835
    9. '
' → logprob: -7.96310567855835
    10. '*' → logprob: -7.96310567855835

Token 59: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.7345438599586487
    2. 'elif' (adapté à ' elif') → logprob: -0.7345438599586487
    3. ' else' → logprob: -3.609543800354004
    4. 'else' → logprob: -4.359543800354004
    5. '   ' → logprob: -7.484543800354004
    6. '	elif' → logprob: -9.734543800354004
    7. ' ' → logprob: -9.859543800354004
    8. 'e' → logprob: -11.734543800354004
    9. '.' → logprob: -12.609543800354004
    10. '<|end|>' → logprob: -12.984543800354004

Token 60: ' o' (ID: 293)
  Prédit: ' o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' o' → logprob: -0.0016172155737876892
    2. 'o' → logprob: -6.751617431640625
    3. ' ' → logprob: -7.751617431640625
    4. '	o' → logprob: -12.001617431640625
    5. ' ' → logprob: -12.751617431640625
    6. '2' → logprob: -12.751617431640625
    7. '1' → logprob: -13.751617431640625
    8. '_' → logprob: -14.126617431640625
    9. '  ' → logprob: -14.626617431640625
    10. '    ' → logprob: -14.751617431640625

Token 61: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11323711276054382
    2. '==' → logprob: -2.238237142562866
    3. ' ' → logprob: -7.988236904144287
    4. '=' → logprob: -10.363237380981445
    5. ' =' → logprob: -11.238237380981445
    6. ' ' → logprob: -12.238237380981445
    7. ' elif' → logprob: -12.738237380981445
    8. '[' → logprob: -12.863237380981445
    9. '2' → logprob: -12.863237380981445
    10. 'elif' → logprob: -12.863237380981445

Token 62: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02990090660750866
    2. ' ' → logprob: -3.5299007892608643
    3. '0' → logprob: -9.779900550842285
    4. '-' → logprob: -10.279900550842285
    5. '3' → logprob: -10.279900550842285
    6. '1' → logprob: -11.279900550842285
    7. ' -' → logprob: -12.529900550842285
    8. '  ' → logprob: -12.654900550842285
    9. '4' → logprob: -13.279900550842285
    10. '   ' → logprob: -14.154900550842285

Token 63: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015846160240471363
    2. '-' → logprob: -7.251584529876709
    3. ' ' → logprob: -7.876584529876709
    4. '0' → logprob: -8.251585006713867
    5. '3' → logprob: -8.501585006713867
    6. '1' → logprob: -11.126585006713867
    7. '4' → logprob: -11.751585006713867
    8. ' -' → logprob: -13.626585006713867
    9. '5' → logprob: -13.689085006713867
    10. '  ' → logprob: -13.876585006713867

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0033545205369591713
    2. '*' → logprob: -5.878354549407959
    3. ' *' → logprob: -8.2533540725708
    4. ':
' → logprob: -9.1283540725708
    5. ' :' → logprob: -9.2533540725708
    6. ' *=' → logprob: -10.8783540725708
    7. '*:' → logprob: -11.6283540725708
    8. '-' → logprob: -11.6283540725708
    9. '.' → logprob: -12.0033540725708
    10. ':

' → logprob: -12.3783540725708

Token 65: '       ' (ID: 309)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.3903636038303375
    2. ' X' → logprob: -1.1403635740280151
    3. '   ' → logprob: -6.390363693237305
    4. ' ' → logprob: -7.265363693237305
    5. '    ' → logprob: -7.890363693237305
    6. ':' → logprob: -9.140363693237305
    7. '	X' → logprob: -9.390363693237305
    8. '7' → logprob: -10.077863693237305
    9. ':
' → logprob: -10.140363693237305
    10. '       ' → logprob: -10.140363693237305

Token 66: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.12703068554401398
    2. ' X' → logprob: -2.127030611038208
    3. ' if' → logprob: -10.377030372619629
    4. ' ' → logprob: -10.502030372619629
    5. 'if' → logprob: -10.627030372619629
    6. '    ' → logprob: -12.377030372619629
    7. '   ' → logprob: -13.002030372619629
    8. 'Y' → logprob: -13.127030372619629
    9. '	X' → logprob: -13.127030372619629
    10. 'x' → logprob: -13.127030372619629

Token 67: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.3497594892978668
    2. '*=' → logprob: -1.4747594594955444
    3. ' -=' → logprob: -3.474759578704834
    4. ' *=' → logprob: -3.974759578704834
    5. '-' → logprob: -4.849759578704834
    6. '+=' → logprob: -5.224759578704834
    7. '=' → logprob: -6.099759578704834
    8. '*' → logprob: -7.724759578704834
    9. '/=' → logprob: -8.099759101867676
    10. ' +=' → logprob: -8.474759101867676

Token 68: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.28125545382499695
    2. 'y' → logprob: -1.4062554836273193
    3. 'Fraction' → logprob: -9.781255722045898
    4. ' Fraction' → logprob: -10.156255722045898
    5. '	y' → logprob: -12.531255722045898
    6. ' ' → logprob: -13.031255722045898
    7. ' ' → logprob: -13.781255722045898
    8. '    ' → logprob: -13.906255722045898
    9. '   ' → logprob: -14.406255722045898
    10. 'F' → logprob: -15.593755722045898

Token 69: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006663146894425154
    2. 'elif' → logprob: -5.5066633224487305
    3. ' elif' → logprob: -6.8816633224487305
    4. '<|end|>' → logprob: -6.8816633224487305
    5. 'else' → logprob: -7.8816633224487305
    6. ' else' → logprob: -9.13166332244873
    7. '	elif' → logprob: -10.50666332244873
    8. '<|end|>' → logprob: -12.00666332244873
    9. '```' → logprob: -12.13166332244873
    10. '    
' → logprob: -14.25666332244873

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059176959097385406
    2. 'elif' → logprob: -3.6841769218444824
    3. ' elif' → logprob: -3.9341769218444824
    4. '<|end|>' → logprob: -4.809176921844482
    5. ' else' → logprob: -6.684176921844482
    6. '
' → logprob: -6.684176921844482
    7. '    
' → logprob: -7.309176921844482
    8. 'else' → logprob: -7.559176921844482
    9. '	elif' → logprob: -8.05917739868164
    10. '\n' → logprob: -8.18417739868164

Token 71: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.2577548325061798
    2. '   ' → logprob: -1.8827548027038574
    3. ' elif' → logprob: -3.2577548027038574
    4. 'else' → logprob: -3.5077548027038574
    5. ' else' → logprob: -5.632754802703857
    6. '<|end|>' → logprob: -6.132754802703857
    7. '	elif' → logprob: -7.257754802703857
    8. '.' → logprob: -10.257755279541016
    9. ' ' → logprob: -10.882755279541016
    10. ',' → logprob: -11.007755279541016

Token 72: ' o' (ID: 293)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.026395166292786598
    2. '3' → logprob: -3.651395082473755
    3. '1' → logprob: -9.776394844055176
    4. ' o' → logprob: -10.651394844055176
    5. 'o' → logprob: -11.526394844055176
    6. ' ' → logprob: -13.651394844055176
    7. '   ' → logprob: -14.026394844055176
    8. '    ' → logprob: -14.526394844055176
    9. '  ' → logprob: -14.713894844055176
    10. '0' → logprob: -15.526394844055176

Token 73: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.28133031725883484
    2. '==' → logprob: -1.4063303470611572
    3. '=' → logprob: -10.031330108642578
    4. '3' → logprob: -10.406330108642578
    5. '*' → logprob: -10.656330108642578
    6. ' ' → logprob: -10.781330108642578
    7. ' =' → logprob: -11.156330108642578
    8. '===' → logprob: -11.781330108642578
    9. ' ' → logprob: -12.406330108642578
    10. '1' → logprob: -12.531330108642578

Token 74: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.023260971531271935
    2. ' ' → logprob: -3.773261070251465
    3. '1' → logprob: -11.898261070251465
    4. '0' → logprob: -13.460761070251465
    5. '4' → logprob: -13.585761070251465
    6. '<|end|>' → logprob: -13.710761070251465
    7. '  ' → logprob: -13.773261070251465
    8. '2' → logprob: -14.710761070251465
    9. '32' → logprob: -14.835761070251465
    10. '۳' → logprob: -14.898261070251465

Token 75: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.776898251497187e-05
    2. ' ' → logprob: -10.0000581741333
    3. '1' → logprob: -11.3750581741333
    4. '2' → logprob: -15.2500581741333
    5. '0' → logprob: -15.6250581741333
    6. '4' → logprob: -15.7500581741333
    7. '<|end|>' → logprob: -16.000057220458984
    8. '۳' → logprob: -17.437557220458984
    9. '  ' → logprob: -17.625057220458984
    10. '   ' → logprob: -18.062557220458984

Token 76: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004564135451801121
    2. ':
' → logprob: -8.250456809997559
    3. '*' → logprob: -9.500456809997559
    4. ' and' → logprob: -10.000456809997559
    5. 'and' → logprob: -10.625456809997559
    6. ' :' → logprob: -10.750456809997559
    7. '   ' → logprob: -12.250456809997559
    8. 'X' → logprob: -12.750456809997559
    9. '.' → logprob: -12.875456809997559
    10. ':X' → logprob: -12.875456809997559

Token 77: '       ' (ID: 309)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.07100741565227509
    2. ' X' → logprob: -2.696007490158081
    3. '   ' → logprob: -7.196007251739502
    4. ' if' → logprob: -8.82100772857666
    5. 'if' → logprob: -9.94600772857666
    6. ':' → logprob: -9.94600772857666
    7. '       ' → logprob: -10.44600772857666
    8. 'Y' → logprob: -12.19600772857666
    9. ' ' → logprob: -12.32100772857666
    10. ':
' → logprob: -12.32100772857666

Token 78: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.002022378146648407
    2. 'if' → logprob: -6.2520222663879395
    3. ' X' → logprob: -9.502022743225098
    4. ' if' → logprob: -11.002022743225098
    5. '   ' → logprob: -13.752022743225098
    6. 'print' → logprob: -15.127022743225098
    7. 'Y' → logprob: -15.502022743225098
    8. ' ' → logprob: -15.877022743225098
    9. 'x' → logprob: -15.877022743225098
    10. '	X' → logprob: -16.37702178955078

Token 79: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.035335905849933624
    2. ' *=' → logprob: -3.5353360176086426
    3. '*' → logprob: -5.285336017608643
    4. '=' → logprob: -7.660336017608643
    5. '/=' → logprob: -11.035335540771484
    6. '//=' → logprob: -12.535335540771484
    7. ' /=' → logprob: -12.910335540771484
    8. '**' → logprob: -13.035335540771484
    9. ' ' → logprob: -13.285335540771484
    10. ' ' → logprob: -13.410335540771484

Token 80: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.20141197741031647
    2. 'Fraction' → logprob: -1.8264119625091553
    3. ' y' → logprob: -3.9514119625091553
    4. ' Fraction' → logprob: -6.201412200927734
    5. 'F' → logprob: -9.201412200927734
    6. 'Frac' → logprob: -10.326412200927734
    7. '   ' → logprob: -11.576412200927734
    8. ' ' → logprob: -11.951412200927734
    9. 'fraction' → logprob: -12.576412200927734
    10. 'Fra' → logprob: -13.013912200927734

Token 81: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2079228311777115
    2. '   ' → logprob: -2.20792293548584
    3. 'elif' → logprob: -3.08292293548584
    4. ' else' → logprob: -3.45792293548584
    5. ' elif' → logprob: -7.83292293548584
    6. '<|end|>' → logprob: -10.45792293548584
    7. '.' → logprob: -11.08292293548584
    8. '	else' → logprob: -11.33292293548584
    9. ',' → logprob: -11.95792293548584
    10. '	elif' → logprob: -12.08292293548584

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09516904503107071
    2. 'elif' → logprob: -2.5951690673828125
    3. 'else' → logprob: -4.2201690673828125
    4. ' elif' → logprob: -7.4701690673828125
    5. ' else' → logprob: -7.8451690673828125
    6. '	elif' → logprob: -8.220169067382812
    7. '<|end|>' → logprob: -8.720169067382812
    8. '	else' → logprob: -10.595169067382812
    9. '\n' → logprob: -11.720169067382812
    10. '.' → logprob: -12.470169067382812

Token 83: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.16711187362670898
    2. 'elif' → logprob: -1.917111873626709
    3. '   ' → logprob: -5.292111873626709
    4. ' else' → logprob: -6.417111873626709
    5. ' elif' → logprob: -8.667112350463867
    6. '	elif' → logprob: -12.042112350463867
    7. '	else' → logprob: -12.667112350463867
    8. '  ' → logprob: -12.917112350463867
    9. '[' → logprob: -13.167112350463867
    10. '_else' → logprob: -13.417112350463867

Token 84: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006139480043202639
    2. ':
' → logprob: -5.131139278411865
    3. ' :' → logprob: -8.506139755249023
    4. ' :
' → logprob: -12.256139755249023
    5. ':

' → logprob: -13.506139755249023
    6. ':
' → logprob: -14.131139755249023
    7. '   ' → logprob: -14.256139755249023
    8. '       ' → logprob: -15.381139755249023
    9. '  ' → logprob: -16.006139755249023
    10. '=' → logprob: -16.131139755249023

Token 85: ' ' (ID: 220)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.20976407825946808
    2. '       ' → logprob: -2.084764003753662
    3. 'X' → logprob: -2.834764003753662
    4. '   ' → logprob: -5.584764003753662
    5. ' if' → logprob: -7.084764003753662
    6. ' ' → logprob: -7.584764003753662
    7. '        ' → logprob: -8.33476448059082
    8. 'if' → logprob: -8.83476448059082
    9. '    ' → logprob: -8.83476448059082
    10. '           ' → logprob: -9.08476448059082

Token 86: ' #' (ID: 1069)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0065948134288191795
    2. ' X' → logprob: -5.131594657897949
    3. '/' → logprob: -7.881594657897949
    4. '   ' → logprob: -8.63159465789795
    5. ':' → logprob: -9.88159465789795
    6. '       ' → logprob: -11.13159465789795
    7. ' /' → logprob: -11.38159465789795
    8. ' ' → logprob: -11.63159465789795
    9. '  ' → logprob: -12.38159465789795
    10. '0' → logprob: -12.38159465789795

Token 87: ' o' (ID: 293)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.3368144035339355
    2. 'o' → logprob: -1.3368144035339355
    3. ' o' → logprob: -1.5868144035339355
    4. ' X' → logprob: -1.8368144035339355
    5. '   ' → logprob: -3.2118144035339355
    6. '4' → logprob: -3.4618144035339355
    7. ' ' → logprob: -3.7118144035339355
    8. '       ' → logprob: -4.7118144035339355
    9. '0' → logprob: -6.3368144035339355
    10. 'if' → logprob: -6.8368144035339355

Token 88: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.142762690782547
    2. ' ==' → logprob: -2.0177626609802246
    3. '=' → logprob: -9.392763137817383
    4. ' =' → logprob: -14.017763137817383
    5. '===' → logprob: -14.392763137817383
    6. '4' → logprob: -14.392763137817383
    7. ' ' → logprob: -14.642763137817383
    8. '==
' → logprob: -14.767763137817383
    9. '```' → logprob: -15.392763137817383
    10. ')==' → logprob: -15.392763137817383

Token 89: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.002476724097505212
    2. ' ' → logprob: -6.002476692199707
    3. '۴' → logprob: -15.564976692199707
    4. '４' → logprob: -15.814976692199707
    5. '٤' → logprob: -15.814976692199707
    6. '```' → logprob: -16.252477645874023
    7. '  ' → logprob: -16.377477645874023
    8. '४' → logprob: -16.627477645874023
    9. '৪' → logprob: -17.002477645874023
    10. '' → logprob: -17.189977645874023

Token 90: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.463036435074173e-05
    2. ' ' → logprob: -10.625024795532227
    3. '٤' → logprob: -17.125024795532227
    4. '۴' → logprob: -17.250024795532227
    5. '४' → logprob: -17.625024795532227
    6. '４' → logprob: -17.750024795532227
    7. '৪' → logprob: -18.312524795532227
    8. '  ' → logprob: -18.437524795532227
    9. '   ' → logprob: -18.687524795532227
    10. '' → logprob: -18.937524795532227

Token 91: '
' (ID: 198)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.7207856178283691
    2. ':' → logprob: -0.8457856178283691
    3. ' X' → logprob: -3.845785617828369
    4. 'if' → logprob: -4.095785617828369
    5. '   ' → logprob: -4.345785617828369
    6. ' if' → logprob: -4.345785617828369
    7. ':
' → logprob: -4.970785617828369
    8. '       ' → logprob: -4.970785617828369
    9. '/' → logprob: -6.595785617828369
    10. ' :' → logprob: -6.595785617828369

Token 92: '       ' (ID: 309)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.12766031920909882
    2. ' X' → logprob: -2.1276602745056152
    3. '   ' → logprob: -7.627660274505615
    4. ' if' → logprob: -9.377660751342773
    5. '       ' → logprob: -9.877660751342773
    6. 'if' → logprob: -10.252660751342773
    7. '/' → logprob: -10.377660751342773
    8. ' /' → logprob: -11.252660751342773
    9. ' ' → logprob: -12.377660751342773
    10. '	X' → logprob: -12.877660751342773

Token 93: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.0009919608710333705
    2. 'if' → logprob: -7.0009918212890625
    3. ' X' → logprob: -9.500991821289062
    4. ' if' → logprob: -12.500991821289062
    5. '#' → logprob: -14.750991821289062
    6. 'try' → logprob: -15.125991821289062
    7. 'x' → logprob: -15.250991821289062
    8. 'div' → logprob: -15.250991821289062
    9. '   ' → logprob: -16.000991821289062
    10. 'Q' → logprob: -16.000991821289062

Token 94: ' /=' (ID: 37808)
  Prédit: ' /='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /=' → logprob: -0.47529226541519165
    2. '/=' → logprob: -1.6002922058105469
    3. '//=' → logprob: -2.225292205810547
    4. '=' → logprob: -2.850292205810547
    5. ' //' → logprob: -5.100292205810547
    6. ' =' → logprob: -6.350292205810547
    7. 'div' → logprob: -6.475292205810547
    8. '/' → logprob: -7.100292205810547
    9. '//' → logprob: -8.850292205810547
    10. '*=' → logprob: -8.975292205810547

Token 95: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5242263078689575
    2. ' y' → logprob: -0.8992263078689575
    3. 'Fraction' → logprob: -7.024226188659668
    4. ' Fraction' → logprob: -8.524226188659668
    5. ' ' → logprob: -12.024226188659668
    6. '	y' → logprob: -13.274226188659668
    7. '   ' → logprob: -13.274226188659668
    8. '(y' → logprob: -14.274226188659668
    9. '  ' → logprob: -14.836726188659668
    10. 'Y' → logprob: -14.899226188659668

Token 96: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02683626487851143
    2. '
' → logprob: -3.6518361568450928
    3. '

' → logprob: -8.901836395263672
    4. ')
' → logprob: -9.276836395263672
    5. '
' → logprob: -9.651836395263672
    6. ' print' → logprob: -10.026836395263672
    7. '```' → logprob: -10.401836395263672
    8. ' 
' → logprob: -10.526836395263672
    9. '    
' → logprob: -10.651836395263672
    10. 'if' → logprob: -10.776836395263672

Token 97: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006861720699816942
    2. '
' → logprob: -5.006861686706543
    3. '```' → logprob: -10.006861686706543
    4. 'if' → logprob: -10.506861686706543
    5. '

' → logprob: -10.506861686706543
    6. ')
' → logprob: -11.006861686706543
    7. '
' → logprob: -11.256861686706543
    8. '``' → logprob: -12.631861686706543
    9. '    
' → logprob: -12.756861686706543
    10. '  
' → logprob: -12.881861686706543

Token 98: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.06222715228796005
    2. '(' → logprob: -2.812227249145508
    3. '(f' → logprob: -9.312227249145508
    4. '((' → logprob: -10.187227249145508
    5. '(x' → logprob: -10.562227249145508
    6. '(abs' → logprob: -10.562227249145508
    7. '(int' → logprob: -10.937227249145508
    8. 'X' → logprob: -11.187227249145508
    9. '(float' → logprob: -11.437227249145508
    10. '('' → logprob: -11.437227249145508

Token 99: '.n' (ID: 1835)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -14.375001907348633
    3. ')`' → logprob: -14.625001907348633
    4. '))' → logprob: -15.250001907348633
    5. '`)' → logprob: -16.875001907348633
    6. ')
' → logprob: -17.375001907348633
    7. '),' → logprob: -17.750001907348633
    8. '())' → logprob: -18.125001907348633
    9. '})' → logprob: -18.250001907348633
    10. ')}' → logprob: -18.375001907348633

Token 100: 'umerator' (ID: 152035)
  Prédit: 'umerator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umerator' → logprob: -0.23737657070159912
    2. 'um' → logprob: -1.6123765707015991
    3. 'umer' → logprob: -4.737376689910889
    4. 'om' → logprob: -6.862376689910889
    5. '_' → logprob: -7.987376689910889
    6. '1' → logprob: -8.23737621307373
    7. '   ' → logprob: -8.48737621307373
    8. '0' → logprob: -8.61237621307373
    9. ')' → logprob: -8.73737621307373
    10. '2' → logprob: -8.98737621307373

Token 101: ' //' (ID: 602)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09671856462955475
    2. ')' → logprob: -2.7217185497283936
    3. ' ,' → logprob: -4.346718788146973
    4. '//' → logprob: -5.471718788146973
    5. '/' → logprob: -5.846718788146973
    6. ' /' → logprob: -5.971718788146973
    7. ' //' → logprob: -6.596718788146973
    8. '/X' → logprob: -6.721718788146973
    9. ',X' → logprob: -7.721718788146973
    10. ' ' → logprob: -8.096718788146973

Token 102: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.001170225441455841
    2. ' X' → logprob: -6.7511701583862305
    3. ' ' → logprob: -17.126171112060547
    4. '  ' → logprob: -18.126171112060547
    5. '	X' → logprob: -18.501171112060547
    6. '   ' → logprob: -19.501171112060547
    7. '>X' → logprob: -20.251171112060547
    8. 'abs' → logprob: -20.251171112060547
    9. '1' → logprob: -21.001171112060547
    10. '    ' → logprob: -22.251171112060547

Token 103: '.den' (ID: 152740)
  Prédit: '.den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.den' → logprob: -0.000516813131980598
    2. '.' → logprob: -8.000516891479492
    3. '.d' → logprob: -9.125516891479492
    4. 'den' → logprob: -9.750516891479492
    5. ' .' → logprob: -11.500516891479492
    6. ' denominator' → logprob: -13.500516891479492
    7. '.div' → logprob: -13.875516891479492
    8. '.X' → logprob: -14.750516891479492
    9. '_den' → logprob: -15.250516891479492
    10. 'Den' → logprob: -15.500516891479492

Token 104: 'ominator' (ID: 96399)
  Prédit: 'ominator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ominator' → logprob: -0.01681511662900448
    2. 'inator' → logprob: -4.266815185546875
    3. 'ator' → logprob: -6.391815185546875
    4. 'imator' → logprob: -7.391815185546875
    5. 'umerator' → logprob: -8.891815185546875
    6. 'X' → logprob: -9.516815185546875
    7. '1' → logprob: -9.891815185546875
    8. 'in' → logprob: -10.766815185546875
    9. 'om' → logprob: -11.016815185546875
    10. '```' → logprob: -11.516815185546875

Token 105: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4656579120783135e-05
    2. ' )' → logprob: -11.125044822692871
    3. '+' → logprob: -11.250044822692871
    4. '*' → logprob: -12.000044822692871
    5. ',' → logprob: -12.375044822692871
    6. '))' → logprob: -13.125044822692871
    7. '```' → logprob: -13.875044822692871
    8. ' +' → logprob: -14.250044822692871
    9. '+)' → logprob: -14.250044822692871
    10. '*)' → logprob: -15.000044822692871

Token 106: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.009933745488524437
    2. ' X' → logprob: -4.634933948516846
    3. 'abs' → logprob: -9.259933471679688
    4. ' abs' → logprob: -10.134933471679688
    5. ' ' → logprob: -10.384933471679688
    6. '  ' → logprob: -11.884933471679688
    7. '(X' → logprob: -13.634933471679688
    8. '   ' → logprob: -14.259933471679688
    9. '(abs' → logprob: -14.509933471679688
    10. ' ' → logprob: -14.759933471679688

Token 107: '.den' (ID: 152740)
  Prédit: '.den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.den' → logprob: -0.06451416015625
    2. '.n' → logprob: -2.93951416015625
    3. '.' → logprob: -4.68951416015625
    4. '>=' → logprob: -8.68951416015625
    5. ' >=' → logprob: -9.18951416015625
    6. 'den' → logprob: -10.31451416015625
    7. ' .' → logprob: -10.56451416015625
    8. '>' → logprob: -11.06451416015625
    9. ' denominator' → logprob: -11.18951416015625
    10. '.num' → logprob: -11.81451416015625

Token 108: 'ominator' (ID: 96399)
  Prédit: 'ominator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ominator' → logprob: -0.05992856249213219
    2. '   ' → logprob: -3.9349286556243896
    3. '=' → logprob: -5.0599284172058105
    4. '==' → logprob: -5.4349284172058105
    5. 's' → logprob: -5.5599284172058105
    6. '```' → logprob: -5.6849284172058105
    7. 'umerator' → logprob: -5.6849284172058105
    8. '0' → logprob: -6.4349284172058105
    9. '       ' → logprob: -6.4349284172058105
    10. 'ity' → logprob: -6.6849284172058105

Token 109: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2822466492652893
    2. ' ==' → logprob: -1.4072465896606445
    3. '=' → logprob: -7.9072465896606445
    4. ' ' → logprob: -8.782246589660645
    5. '>' → logprob: -9.032246589660645
    6. '```' → logprob: -9.407246589660645
    7. ' ' → logprob: -9.532246589660645
    8. '1' → logprob: -9.657246589660645
    9. '===' → logprob: -9.782246589660645
    10. ')' → logprob: -9.782246589660645

Token 110: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004896456957794726
    2. ' ' → logprob: -7.625489711761475
    3. '   ' → logprob: -14.375489234924316
    4. ' ' → logprob: -15.375489234924316
    5. '  ' → logprob: -15.562989234924316
    6. '0' → logprob: -15.562989234924316
    7. '```' → logprob: -16.000490188598633
    8. 'X' → logprob: -17.125490188598633
    9. '１' → logprob: -17.937990188598633
    10. '    ' → logprob: -18.062990188598633

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002655079588294029
    2. ' ' → logprob: -8.250265121459961
    3. 'X' → logprob: -13.625265121459961
    4. '   ' → logprob: -13.875265121459961
    5. '  ' → logprob: -14.562765121459961
    6. '```' → logprob: -14.812765121459961
    7. '0' → logprob: -15.062765121459961
    8. ' ' → logprob: -15.250265121459961
    9. '=' → logprob: -16.62526512145996
    10. ' X' → logprob: -16.93776512145996

Token 112: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6071784496307373
    2. 'else' → logprob: -0.8571784496307373
    3. ')' → logprob: -3.4821784496307373
    4. '	else' → logprob: -11.732178688049316
    5. ' )' → logprob: -12.232178688049316
    6. ' ' → logprob: -14.482178688049316
    7. '))' → logprob: -14.982178688049316
    8. '),' → logprob: -15.107178688049316
    9. '#else' → logprob: -15.232178688049316
    10. '_else' → logprob: -15.232178688049316

Token 113: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.42585355043411255
    2. 'f' → logprob: -1.1758534908294678
    3. ' X' → logprob: -4.050853729248047
    4. ' f' → logprob: -4.550853729248047
    5. 'str' → logprob: -4.675853729248047
    6. ' str' → logprob: -7.925853729248047
    7. 'F' → logprob: -8.800853729248047
    8. '(X' → logprob: -9.050853729248047
    9. 'Fraction' → logprob: -9.425853729248047
    10. ' ' → logprob: -9.800853729248047

Token 114: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019126241386402398
    2. '))' → logprob: -9.375191688537598
    3. '())' → logprob: -10.625191688537598
    4. ' )' → logprob: -10.875191688537598
    5. '.' → logprob: -11.000191688537598
    6. '(' → logprob: -12.000191688537598
    7. '.X' → logprob: -12.125191688537598
    8. '(X' → logprob: -12.125191688537598
    9. '()' → logprob: -12.500191688537598
    10. ')n' → logprob: -12.875191688537598


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 112
Tokens correctement prédits (1ère position, stricte): 43
Tokens correctement prédits (1ère position, avec adaptation): 49
Tokens correctement prédits (top 10): 98
Précision stricte (1ère position): 38.39%
Précision adaptée (1ère position): 43.75%
Précision (top 10): 87.50%
================================================================================
