================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from typing import List, Tuple, Set, Dict
from collections import deque, namedtuple
import sys

# Abstract base class for the labyrinth representation
class Labyrinth:
    def __init__(self, grid: List[str]):
        self.grid = grid
        self.N = len(grid)
        self.M = len(grid[0]) if self.N > 0 else 0
        self.entrance = (0,0)
        self.treasures = [(self.N-1,0), (self.N-1,self.M-1), (0,self.M-1)]
    
    def is_enterable(self, pos: Tuple[int,int]) -> bool:
        r, c = pos
        return 0 <= r < self.N and 0 <= c < self.M and self.grid[r][c] == '.'
    
    def neighbors(self, pos: Tuple[int,int]) -> List[Tuple[int,int]]:
        r, c = pos
        candidates = [(r-1,c),(r+1,c),(r,c-1),(r,c+1)]
        return [p for p in candidates if self.is_enterable(p)]

# Abstract path state to be extended by the solver
class PathState:
    def __init__(self, position: Tuple[int,int], visited_treasures: Set[int], fragile_map: Set[Tuple[int,int]]):
        self.position = position        # Current position of Taro
        self.visited_treasures = frozenset(visited_treasures)  # Immutable for hashability
        self.fragile_map = fragile_map  # Set of positions that have collapsed
    
    def __hash__(self):
        return hash((self.position, self.visited_treasures, tuple(sorted(self.fragile_map))))
    
    def __eq__(self, other):
        return (self.position == other.position and
                self.visited_treasures == other.visited_treasures and
                self.fragile_map == other.fragile_map)

# Customized labyrinthe that supports collapse logic
class FragileLabyrinth(Labyrinth):
    def __init__(self, grid: List[str]):
        super().__init__(grid)
    
    def start_state(self) -> PathState:
        # At start no treasure visited, no floor collapsed except entrance is stable
        # Entrance floor never collapses
        fragile_map = set()
        return PathState(self.entrance, set(), fragile_map)
    
    def is_treasure_pos(self, pos: Tuple[int,int]) -> int:
        # Returns index of treasure if pos is a treasure location, else -1
        try:
            return self.treasures.index(pos)
        except ValueError:
            return -1

    def can_step(self, pos: Tuple[int,int], fragile_map: Set[Tuple[int,int]]) -> bool:
        # Entrance never collapses, others not in fragile_map and enterable
        if pos == self.entrance:
            return self.is_enterable(pos)
        if pos in fragile_map:
            return False
        return self.is_enterable(pos)
    
    def next_states(self, state: PathState) -> List[PathState]:
        results = []
        for npos in self.neighbors(state.position):
            if self.can_step(npos, state.fragile_map):
                # Calculate new treasures visited
                treasures_visited = set(state.visited_treasures)
                idx = self.is_treasure_pos(npos)
                if idx != -1:
                    treasures_visited.add(idx)
                # Calculate new fragile map:
                # If current position is not entrance, it collapses after leaving
                new_fragile_map = set(state.fragile_map)
                if state.position != self.entrance:
                    new_fragile_map.add(state.position)
                results.append(PathState(npos, treasures_visited, new_fragile_map))
        return results

# A generic graph search interface to solve the labyrinth challenge
class LabyrinthSolver:
    def __init__(self, labyrinth: FragileLabyrinth):
        self.labyrinth = labyrinth
        self.total_treasures = set(range(len(self.labyrinth.treasures)))
    
    def can_collect_all_and_return(self) -> bool:
        start_state = self.labyrinth.start_state()
        queue = deque([start_state])
        visited = set([start_state])
        
        while queue:
            current = queue.popleft()
            # Check success conditions:
            # Collected all treasures and currently at entrance
            if current.position == self.labyrinth.entrance and current.visited_treasures == self.total_treasures:
                return True
            for next_state in self.labyrinth.next_states(current):
                if next_state not in visited:
                    visited.add(next_state)
                    queue.append(next_state)
        return False

# Factory to parse input into labyrinth objects
class LabyrinthFactory:
    @staticmethod
    def from_input(N: int, M: int, grid_lines: List[str]) -> FragileLabyrinth:
        # Build labyrinth, validate entrance and treasure rooms are enterable
        labyrinth = FragileLabyrinth(grid_lines)
        assert labyrinth.is_enterable(labyrinth.entrance), "Entrance must be enterable"
        for tpos in labyrinth.treasures:
            assert labyrinth.is_enterable(tpos), "Treasure room must be enterable"
        return labyrinth

# Main processing pipeline
def process_datasets(inputs: List[Tuple[int,int,List[str]]]) -> List[str]:
    results = []
    for (N, M, grid_lines) in inputs:
        labyrinth = LabyrinthFactory.from_input(N, M, grid_lines)
        solver = LabyrinthSolver(labyrinth)
        can_complete = solver.can_collect_all_and_return()
        results.append("YES" if can_complete else "NO")
    return results

def main():
    inputs = []
    input_iter = iter(sys.stdin.read().strip().split('\n'))
    while True:
        try:
            line = next(input_iter)
        except StopIteration:
            break
        if line.strip() == '':
            continue
        N, M = map(int, line.split())
        if N == 0 and M == 0:
            break
        grid_lines = []
        for _ in range(N):
            grid_lines.append(next(input_iter))
        inputs.append((N, M, grid_lines))
    results = process_datasets(inputs)
    for r in results:
        print(r)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' typing' (ID: 34152)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.01404950674623251
    2. ' Any' → logprob: -5.014049530029297
    3. 'List' → logprob: -5.389049530029297
    4. ' Optional' → logprob: -6.514049530029297
    5. ' Union' → logprob: -7.514049530029297
    6. 'Any' → logprob: -7.764049530029297
    7. ' Generator' → logprob: -8.764049530029297
    8. 'Optional' → logprob: -10.389049530029297
    9. ' Iterable' → logprob: -10.514049530029297
    10. ' ' → logprob: -10.764049530029297

Token 4: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.593887984752655
    2. '```' → logprob: -1.3438880443572998
    3. ',' → logprob: -2.7188880443573
    4. '[' → logprob: -2.9688880443573
    5. '\' → logprob: -3.5938880443573
    6. '\n' → logprob: -3.9688880443573
    7. 'import' → logprob: -5.343887805938721
    8. '\[' → logprob: -5.343887805938721
    9. ':' → logprob: -5.968887805938721
    10. 'a' → logprob: -6.468887805938721

Token 5: ' Tuple' (ID: 50841)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.4487144649028778
    2. 'Optional' → logprob: -1.0737144947052002
    3. ' Dict' → logprob: -4.823714256286621
    4. 'Dict' → logprob: -4.948714256286621
    5. 'Tuple' → logprob: -5.823714256286621
    6. ' Tuple' → logprob: -7.073714256286621
    7. ' Union' → logprob: -7.448714256286621
    8. 'Union' → logprob: -9.323714256286621
    9. 'Iterable' → logprob: -10.073714256286621
    10. 'Any' → logprob: -10.448714256286621

Token 6: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20157597959041595
    2. '```' → logprob: -2.076575994491577
    3. ',' → logprob: -4.201575756072998
    4. '`' → logprob: -4.951575756072998
    5. '\n' → logprob: -5.076575756072998
    6. '\' → logprob: -5.326575756072998
    7. 'import' → logprob: -5.326575756072998
    8. '[' → logprob: -5.701575756072998
    9. '<|end|>' → logprob: -6.201575756072998
    10. '
' → logprob: -6.201575756072998

Token 7: ' Set' (ID: 3957)
  Prédit: ' Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Dict' → logprob: -0.3600277602672577
    2. 'Dict' → logprob: -1.36002779006958
    3. ' Union' → logprob: -4.36002779006958
    4. ' Optional' → logprob: -4.73502779006958
    5. 'Optional' → logprob: -4.98502779006958
    6. 'Union' → logprob: -5.61002779006958
    7. 'Set' → logprob: -5.61002779006958
    8. ' Callable' → logprob: -5.73502779006958
    9. 'Iterable' → logprob: -6.61002779006958
    10. 'Any' → logprob: -6.86002779006958

Token 8: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8056668639183044
    2. '(' → logprob: -1.6806669235229492
    3. 'def' → logprob: -1.8056669235229492
    4. '[' → logprob: -2.680666923522949
    5. ',' → logprob: -2.930666923522949
    6. '\n' → logprob: -3.805666923522949
    7. '\' → logprob: -4.305666923522949
    8. 'a' → logprob: -5.055666923522949
    9. ':' → logprob: -5.055666923522949
    10. '`' → logprob: -5.055666923522949

Token 9: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.2817741632461548
    2. ' Dict' → logprob: -1.4067741632461548
    3. 'dict' → logprob: -9.031774520874023
    4. 'Default' → logprob: -9.656774520874023
    5. 'Iterable' → logprob: -9.656774520874023
    6. 'Optional' → logprob: -9.656774520874023
    7. '.Dict' → logprob: -10.031774520874023
    8. ' defaultdict' → logprob: -10.156774520874023
    9. 'Deque' → logprob: -10.281774520874023
    10. 'Union' → logprob: -10.281774520874023

Token 10: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2016243189573288
    2. 'import' → logprob: -2.7016243934631348
    3. 'def' → logprob: -3.5766243934631348
    4. '```' → logprob: -3.8266243934631348
    5. ':' → logprob: -3.9516243934631348
    6. '(' → logprob: -4.451624393463135
    7. '<|end|>' → logprob: -4.826624393463135
    8. 'a' → logprob: -5.201624393463135
    9. '[' → logprob: -5.201624393463135
    10. '.' → logprob: -5.326624393463135

Token 11: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8326760530471802
    2. 'import' → logprob: -1.3326760530471802
    3. 'def' → logprob: -1.8326760530471802
    4. '```' → logprob: -2.5826759338378906
    5. '<|end|>' → logprob: -4.332675933837891
    6. 'from' → logprob: -4.457675933837891
    7. '\n' → logprob: -4.582675933837891
    8. 'a' → logprob: -5.332675933837891
    9. ':' → logprob: -5.457675933837891
    10. 'class' → logprob: -5.832675933837891

Token 12: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.05001544579863548
    2. ' typing' → logprob: -3.175015449523926
    3. 'collections' → logprob: -5.175015449523926
    4. ' dat' → logprob: -7.300015449523926
    5. ' datetime' → logprob: -8.925015449523926
    6. ' enum' → logprob: -9.175015449523926
    7. ' itertools' → logprob: -9.300015449523926
    8. ' math' → logprob: -9.425015449523926
    9. ' ' → logprob: -9.550015449523926
    10. 'typing' → logprob: -9.925015449523926

Token 13: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.016609959304332733
    2. ' import' → logprob: -4.141610145568848
    3. '.' → logprob: -7.891610145568848
    4. 'abc' → logprob: -9.141610145568848
    5. '```' → logprob: -10.391610145568848
    6. '	import' → logprob: -11.141610145568848
    7. '.Counter' → logprob: -11.891610145568848
    8. ' defaultdict' → logprob: -12.016610145568848
    9. '_import' → logprob: -12.141610145568848
    10. '<|end|>' → logprob: -12.266610145568848

Token 14: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.06497976183891296
    2. 'default' → logprob: -3.0649797916412354
    3. 'named' → logprob: -4.689979553222656
    4. ' named' → logprob: -5.564979553222656
    5. 'abc' → logprob: -6.439979553222656
    6. ' abc' → logprob: -7.064979553222656
    7. 'deque' → logprob: -7.814979553222656
    8. ' deque' → logprob: -9.064979553222656
    9. 'import' → logprob: -9.314979553222656
    10. ' Counter' → logprob: -9.439979553222656

Token 15: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8262794613838196
    2. '```' → logprob: -1.4512794017791748
    3. '\n' → logprob: -1.8262794017791748
    4. '\' → logprob: -2.451279401779175
    5. '

' → logprob: -3.951279401779175
    6. 'import' → logprob: -4.076279640197754
    7. 'def' → logprob: -5.076279640197754
    8. '(
' → logprob: -5.451279640197754
    9. '(' → logprob: -5.576279640197754
    10. '`' → logprob: -5.576279640197754

Token 16: ' named' (ID: 11484)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.09561236202716827
    2. 'default' → logprob: -2.4706122875213623
    3. 'Ordered' → logprob: -6.095612525939941
    4. 'named' → logprob: -6.720612525939941
    5. ' Ordered' → logprob: -6.970612525939941
    6. ' Counter' → logprob: -7.095612525939941
    7. ' named' → logprob: -7.220612525939941
    8. 'Counter' → logprob: -7.345612525939941
    9. ' default' → logprob: -10.845612525939941
    10. 'deque' → logprob: -11.345612525939941

Token 17: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.00014096579980105162
    2. 'tu' → logprob: -9.500141143798828
    3. 't' → logprob: -9.750141143798828
    4. 'token' → logprob: -12.125141143798828
    5. 'uct' → logprob: -14.750141143798828
    6. ' tuple' → logprob: -14.875141143798828
    7. ' ' → logprob: -15.250141143798828
    8. 'uple' → logprob: -15.250141143798828
    9. '_tuple' → logprob: -15.250141143798828
    10. 'Tuple' → logprob: -16.000141143798828

Token 18: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1385395526885986
    2. 'import' → logprob: -1.7635395526885986
    3. '\n' → logprob: -2.0135395526885986
    4. '
' → logprob: -2.1385395526885986
    5. '```' → logprob: -2.6385395526885986
    6. '\' → logprob: -2.8885395526885986
    7. '

' → logprob: -3.1385395526885986
    8. '`' → logprob: -4.0135393142700195
    9. ',
' → logprob: -4.3885393142700195
    10. '<|end|>' → logprob: -4.6385393142700195

Token 19: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6965163946151733
    2. 'class' → logprob: -1.8215163946151733
    3. '
' → logprob: -1.9465163946151733
    4. '

' → logprob: -2.446516513824463
    5. ',' → logprob: -3.571516513824463
    6. ' class' → logprob: -4.071516513824463
    7. '\n' → logprob: -4.446516513824463
    8. ' 

' → logprob: -4.571516513824463
    9. '```' → logprob: -4.696516513824463
    10. '#' → logprob: -5.071516513824463

Token 20: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.11823654174804688
    2. ' ' → logprob: -2.368236541748047
    3. ' sys' → logprob: -5.118236541748047
    4. ' collections' → logprob: -5.243236541748047
    5. ' math' → logprob: -6.243236541748047
    6. ' re' → logprob: -6.368236541748047
    7. ' itertools' → logprob: -6.618236541748047
    8. ' json' → logprob: -7.368236541748047
    9. ' pandas' → logprob: -8.618236541748047
    10. ' numpy' → logprob: -8.868236541748047

Token 21: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20157694816589355
    2. '

' → logprob: -2.3265769481658936
    3. '\n' → logprob: -3.2015769481658936
    4. 'import' → logprob: -3.8265769481658936
    5. '<|end|>' → logprob: -4.826577186584473
    6. '\' → logprob: -5.951577186584473
    7. '```' → logprob: -6.076577186584473
    8. ',' → logprob: -6.201577186584473
    9. '' → logprob: -6.451577186584473
    10. 'def' → logprob: -6.701577186584473

Token 22: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4725624620914459
    2. 'class' → logprob: -2.097562551498413
    3. '```' → logprob: -2.097562551498413
    4. 'import' → logprob: -2.847562551498413
    5. '\n' → logprob: -3.972562551498413
    6. '\' → logprob: -3.972562551498413
    7. '`' → logprob: -4.597562313079834
    8. '
' → logprob: -4.847562313079834
    9. '#' → logprob: -4.847562313079834
    10. 'from' → logprob: -5.597562313079834

Token 23: ' Abstract' (ID: 17413)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3391968309879303
    2. ' class' → logprob: -1.839196801185608
    3. 'class' → logprob: -3.0891969203948975
    4. 'def' → logprob: -3.2141969203948975
    5. ' def' → logprob: -3.4641969203948975
    6. ' #' → logprob: -5.214196681976318
    7. ' de' → logprob: -6.089196681976318
    8. '#' → logprob: -6.214196681976318
    9. 'import' → logprob: -8.089197158813477
    10. ' import' → logprob: -8.339197158813477

Token 24: ' base' (ID: 3611)
  Prédit: ' class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' class' → logprob: -0.8898300528526306
    2. ' ' → logprob: -1.2648301124572754
    3. 'Base' → logprob: -2.0148301124572754
    4. ' Base' → logprob: -2.5148301124572754
    5. 'Class' → logprob: -2.8898301124572754
    6. 'class' → logprob: -3.8898301124572754
    7. ' base' → logprob: -5.514830112457275
    8. 'C' → logprob: -5.889830112457275
    9. 'B' → logprob: -6.139830112457275
    10. ' Class' → logprob: -6.639830112457275

Token 25: ' class' (ID: 744)
  Prédit: ' class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' class' → logprob: -0.3874705731868744
    2. 'class' → logprob: -1.1374706029891968
    3. ' ' → logprob: -7.637470722198486
    4. 'import' → logprob: -9.887470245361328
    5. '<class' → logprob: -10.137470245361328
    6. ' import' → logprob: -12.012470245361328
    7. '_' → logprob: -12.762470245361328
    8. '
' → logprob: -13.012470245361328
    9. 'classmethod' → logprob: -13.262470245361328
    10. ' 
' → logprob: -13.262470245361328

Token 26: ' for' (ID: 395)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.03135186806321144
    2. ' class' → logprob: -3.6563518047332764
    3. '```' → logprob: -6.0313520431518555
    4. '
' → logprob: -7.1563520431518555
    5. '<class' → logprob: -7.7813520431518555
    6. 'import' → logprob: -7.7813520431518555
    7. 'from' → logprob: -8.281352043151855
    8. ',' → logprob: -9.031352043151855
    9. ':' → logprob: -9.156352043151855
    10. 'c' → logprob: -9.406352043151855

Token 27: ' the' (ID: 290)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.2680625915527344
    2. ' graph' → logprob: -1.8930625915527344
    3. ' the' → logprob: -2.0180625915527344
    4. ' data' → logprob: -2.1430625915527344
    5. 'Graph' → logprob: -3.0180625915527344
    6. ' an' → logprob: -3.1430625915527344
    7. ' Parser' → logprob: -3.2680625915527344
    8. ' graphs' → logprob: -3.6430625915527344
    9. 'Parser' → logprob: -3.7680625915527344
    10. ' Graph' → logprob: -4.268062591552734

Token 28: ' labyrinth' (ID: 184257)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.7639753818511963
    2. ' graph' → logprob: -2.1389753818511963
    3. 'state' → logprob: -3.0139753818511963
    4. ' state' → logprob: -3.0139753818511963
    5. 'next' → logprob: -3.1389753818511963
    6. 'State' → logprob: -3.8889753818511963
    7. ' Graph' → logprob: -3.8889753818511963
    8. 'Graph' → logprob: -4.013975143432617
    9. ' search' → logprob: -4.138975143432617
    10. ' Node' → logprob: -4.263975143432617

Token 29: ' representation' (ID: 22311)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.005156669765710831
    2. ' class' → logprob: -5.380156517028809
    3. '```' → logprob: -8.630156517028809
    4. '
' → logprob: -9.130156517028809
    5. 'c' → logprob: -9.755156517028809
    6. 'import' → logprob: -10.380156517028809
    7. '<class' → logprob: -10.380156517028809
    8. ':' → logprob: -10.630156517028809
    9. 'clas' → logprob: -11.005156517028809
    10. '"class' → logprob: -11.380156517028809

Token 30: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0030832362826913595
    2. '
' → logprob: -6.628083229064941
    3. 'import' → logprob: -7.378083229064941
    4. ' class' → logprob: -7.503083229064941
    5. '```' → logprob: -8.003083229064941
    6. 'from' → logprob: -9.003083229064941
    7. '<class' → logprob: -10.378083229064941
    8. ',' → logprob: -11.378083229064941
    9. '\n' → logprob: -11.378083229064941
    10. '

' → logprob: -11.503083229064941

Token 31: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0001617035741219297
    2. '
' → logprob: -9.125162124633789
    3. 'import' → logprob: -10.500162124633789
    4. ' class' → logprob: -11.375162124633789
    5. 'from' → logprob: -12.000162124633789
    6. 'c' → logprob: -12.625162124633789
    7. '<class' → logprob: -13.625162124633789
    8. '```' → logprob: -13.625162124633789
    9. '"class' → logprob: -14.750162124633789
    10. '

' → logprob: -15.250162124633789

Token 32: ' Lab' (ID: 19557)
  Prédit: ' Lab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Lab' → logprob: -0.050550300627946854
    2. ' ' → logprob: -3.0505502223968506
    3. 'Lab' → logprob: -6.92555046081543
    4. ' Maze' → logprob: -7.42555046081543
    5. ' labyrinth' → logprob: -8.05055046081543
    6. ' ' → logprob: -10.67555046081543
    7. ' Abstract' → logprob: -12.05055046081543
    8. ' L' → logprob: -12.30055046081543
    9. ' Laboratory' → logprob: -12.80055046081543
    10. ' Graph' → logprob: -12.80055046081543

Token 33: 'yrinth' (ID: 113153)
  Prédit: 'yrinth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yrinth' → logprob: -0.00041386886732652783
    2. 'y' → logprob: -8.37541389465332
    3. 'yr' → logprob: -8.62541389465332
    4. '```' → logprob: -13.25041389465332
    5. 'ir' → logprob: -14.00041389465332
    6. '##' → logprob: -16.37541389465332
    7. 'Class' → logprob: -16.37541389465332
    8. 'ryn' → logprob: -16.50041389465332
    9. 'yri' → logprob: -16.50041389465332
    10. 'ирин' → logprob: -16.50041389465332

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1619989275932312
    2. '(' → logprob: -1.911998987197876
    3. ' :' → logprob: -7.036998748779297
    4. '(Abstract' → logprob: -7.786998748779297
    5. '():' → logprob: -8.661998748779297
    6. '(object' → logprob: -9.161998748779297
    7. '(:' → logprob: -9.661998748779297
    8. '(Base' → logprob: -9.786998748779297
    9. ':**' → logprob: -10.911998748779297
    10. '):' → logprob: -11.161998748779297

Token 35: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01845391094684601
    2. '(' → logprob: -5.268454074859619
    3. ' :' → logprob: -5.393454074859619
    4. '   ' → logprob: -6.018454074859619
    5. '<|end|>' → logprob: -6.268454074859619
    6. ':
' → logprob: -6.393454074859619
    7. ' ' → logprob: -7.393454074859619
    8. '(object' → logprob: -7.643454074859619
    9. '():' → logprob: -8.518453598022461
    10. ' (' → logprob: -8.643453598022461

Token 36: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5357890725135803
    2. '    ' → logprob: -1.5357890129089355
    3. ' def' → logprob: -1.7857890129089355
    4. 'def' (adapté à ' def') → logprob: -4.4107890129089355
    5. ' pass' → logprob: -4.6607890129089355
    6. '    
' → logprob: -5.2857890129089355
    7. ' ' → logprob: -5.9107890129089355
    8. ':' → logprob: -7.5357890129089355
    9. '  ' → logprob: -7.5357890129089355
    10. ' 
' → logprob: -8.535789489746094

Token 37: ' __' (ID: 2516)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.00023393364972434938
    2. 't' → logprob: -8.75023365020752
    3. 'i' → logprob: -10.25023365020752
    4. 'itialize' → logprob: -10.62523365020752
    5. 'iti' → logprob: -12.37523365020752
    6. '```' → logprob: -12.62523365020752
    7. '__' → logprob: -13.00023365020752
    8. ' it' → logprob: -13.12523365020752
    9. '   ' → logprob: -14.00023365020752
    10. 'itial' → logprob: -14.37523365020752

Token 38: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'ini' → logprob: -17.125
    3. ' init' → logprob: -17.625
    4. 'int' → logprob: -19.25
    5. 'inite' → logprob: -20.125
    6. 'in' → logprob: -20.125
    7. '_init' → logprob: -20.25
    8. 'iter' → logprob: -20.75
    9. 'new' → logprob: -21.125
    10. 'innit' → logprob: -21.25

Token 39: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.005541209131479263
    2. '__' → logprob: -5.2555413246154785
    3. '__(
' → logprob: -8.38054084777832
    4. '__((' → logprob: -10.63054084777832
    5. '(' → logprob: -10.75554084777832
    6. '__('' → logprob: -11.13054084777832
    7. '(self' → logprob: -12.13054084777832
    8. '__(*' → logprob: -12.25554084777832
    9. '_' → logprob: -13.13054084777832
    10. '_(' → logprob: -13.50554084777832

Token 40: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008647779934108257
    2. ' self' → logprob: -4.758647918701172
    3. ')' → logprob: -10.383647918701172
    4. ' ' → logprob: -13.508647918701172
    5. ' )' → logprob: -15.633647918701172
    6. '(self' → logprob: -15.633647918701172
    7. 's' → logprob: -16.258647918701172
    8. '_self' → logprob: -16.258647918701172
    9. '	self' → logprob: -16.383647918701172
    10. '   ' → logprob: -16.758647918701172

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027100125327706337
    2. 'self' → logprob: -4.152100086212158
    3. ')' → logprob: -5.277100086212158
    4. ' ,' → logprob: -5.652100086212158
    5. '(self' → logprob: -7.152100086212158
    6. '):' → logprob: -7.777100086212158
    7. '(' → logprob: -8.277100563049316
    8. ' self' → logprob: -8.527100563049316
    9. ',self' → logprob: -8.527100563049316
    10. ' )' → logprob: -9.277100563049316

Token 42: ' grid' (ID: 10586)
  Prédit: ' width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' width' → logprob: -0.38761618733406067
    2. ' rows' → logprob: -1.7626161575317383
    3. ' self' → logprob: -2.5126161575317383
    4. ' grid' → logprob: -3.1376161575317383
    5. ' size' → logprob: -4.637616157531738
    6. 'self' → logprob: -5.012616157531738
    7. 'rows' → logprob: -5.262616157531738
    8. 'width' → logprob: -6.387616157531738
    9. ' height' → logprob: -7.762616157531738
    10. ' maze' → logprob: -7.762616157531738

Token 43: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07060070335865021
    2. '):' → logprob: -2.695600748062134
    3. ' ):' → logprob: -7.945600509643555
    4. ')' → logprob: -8.820600509643555
    5. ' :' → logprob: -9.445600509643555
    6. ',' → logprob: -9.570600509643555
    7. ':list' → logprob: -12.695600509643555
    8. ' )' → logprob: -12.695600509643555
    9. '):
' → logprob: -14.070600509643555
    10. ']:' → logprob: -14.195600509643555

Token 44: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.6933097839355469
    2. ' List' → logprob: -0.6933097839355469
    3. ' list' → logprob: -10.068309783935547
    4. ')' → logprob: -10.193309783935547
    5. 'list' → logprob: -10.193309783935547
    6. '[List' → logprob: -10.818309783935547
    7. ' )' → logprob: -11.193309783935547
    8. ' ' → logprob: -12.068309783935547
    9. '	List' → logprob: -12.943309783935547
    10. '```' → logprob: -14.068309783935547

Token 45: '[str' (ID: 33439)
  Prédit: '[List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.06224517896771431
    2. '[str' → logprob: -2.8122451305389404
    3. '[' → logprob: -8.31224536895752
    4. '[int' → logprob: -10.43724536895752
    5. '[list' → logprob: -14.31224536895752
    6. '<List' → logprob: -14.68724536895752
    7. '[
' → logprob: -14.81224536895752
    8. '[[' → logprob: -14.93724536895752
    9. ')' → logprob: -15.06224536895752
    10. '[String' → logprob: -16.312244415283203

Token 46: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.07170459628105164
    2. '])' → logprob: -2.946704626083374
    3. ']' → logprob: -4.321704387664795
    4. '):' → logprob: -6.571704387664795
    5. ']:' → logprob: -6.946704387664795
    6. '],' → logprob: -7.696704387664795
    7. ')' → logprob: -8.071704864501953
    8. ']):
' → logprob: -8.446704864501953
    9. ':' → logprob: -11.571704864501953
    10. '>):' → logprob: -11.696704864501953

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000967083964496851
    2. '<|end|>' → logprob: -7.875967025756836
    3. 'self' → logprob: -8.000967025756836
    4. '        ' → logprob: -9.125967025756836
    5. '      ' → logprob: -10.625967025756836
    6. ',' → logprob: -10.625967025756836
    7. ')' → logprob: -10.875967025756836
    8. ' self' → logprob: -11.000967025756836
    9. '   ' → logprob: -11.125967025756836
    10. '<|end|>' → logprob: -11.625967025756836

Token 48: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.656104564666748
    2. 'self' (adapté à ' self') → logprob: -0.781104564666748
    3. ' self' → logprob: -3.781104564666748
    4. '        ' → logprob: -8.531105041503906
    5. '   ' → logprob: -10.156105041503906
    6. '\' → logprob: -10.656105041503906
    7. '<|end|>' → logprob: -10.781105041503906
    8. ' ' → logprob: -10.906105041503906
    9. '\n' → logprob: -11.156105041503906
    10. '        
' → logprob: -11.406105041503906

Token 49: '.grid' (ID: 19269)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2519959807395935
    2. '.grid' → logprob: -1.5019960403442383
    3. ' .' → logprob: -9.876996040344238
    4. 'grid' → logprob: -12.876996040344238
    5. '._' → logprob: -13.501996040344238
    6. '.Grid' → logprob: -13.501996040344238
    7. '.cells' → logprob: -13.626996040344238
    8. ' ' → logprob: -13.751996040344238
    9. '.gr' → logprob: -14.126996040344238
    10. '.rows' → logprob: -14.251996040344238

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04929707199335098
    2. '=' → logprob: -3.0492970943450928
    3. ' ' → logprob: -8.299297332763672
    4. '[' → logprob: -8.674297332763672
    5. ')' → logprob: -9.049297332763672
    6. '   ' → logprob: -9.799297332763672
    7. ' )' → logprob: -10.424297332763672
    8. ':' → logprob: -10.924297332763672
    9. '    ' → logprob: -11.049297332763672
    10. '  ' → logprob: -11.299297332763672

Token 51: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.5759577751159668
    2. 'grid' → logprob: -0.8259577751159668
    3. ' [' → logprob: -11.575958251953125
    4. '	grid' → logprob: -12.825958251953125
    5. '[' → logprob: -13.075958251953125
    6. '(grid' → logprob: -13.325958251953125
    7. '.grid' → logprob: -13.825958251953125
    8. ' ' → logprob: -14.575958251953125
    9. '    ' → logprob: -15.575958251953125
    10. '[]' → logprob: -15.950958251953125

Token 52: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05516694486141205
    2. '<|end|>' → logprob: -3.5551669597625732
    3. '
' → logprob: -3.8051669597625732
    4. '   ' → logprob: -6.805166721343994
    5. ' ' → logprob: -7.680166721343994
    6. '        ' → logprob: -7.805166721343994
    7. '<|end|>' → logprob: -8.555167198181152
    8. 'self' → logprob: -9.305167198181152
    9. '    ' → logprob: -9.430167198181152
    10. '\n' → logprob: -9.430167198181152

Token 54: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02392125315964222
    2. '
' → logprob: -3.898921251296997
    3. '<|end|>' → logprob: -6.398921489715576
    4. 'self' (adapté à ' self') → logprob: -7.648921489715576
    5. ' ' → logprob: -8.023921012878418
    6. '   ' → logprob: -8.148921012878418
    7. ' self' → logprob: -8.648921012878418
    8. '        ' → logprob: -9.523921012878418
    9. '\n' → logprob: -9.648921012878418
    10. '```' → logprob: -10.148921012878418

Token 55: '.N' (ID: 4439)
  Prédit: '_height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.3935474455356598
    2. '_rows' → logprob: -2.018547534942627
    3. '_size' → logprob: -2.768547534942627
    4. '.height' → logprob: -3.518547534942627
    5. '_' → logprob: -3.768547534942627
    6. '._' → logprob: -4.143547534942627
    7. '.' → logprob: -4.268547534942627
    8. '_width' → logprob: -4.643547534942627
    9. '.size' → logprob: -5.018547534942627
    10. '   ' → logprob: -5.143547534942627

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007626626640558243
    2. '=' → logprob: -5.382626533508301
    3. '   ' → logprob: -6.632626533508301
    4. '    ' → logprob: -7.382626533508301
    5. ',' → logprob: -7.882626533508301
    6. ' ' → logprob: -8.5076265335083
    7. '<|end|>' → logprob: -9.2576265335083
    8. ' ,' → logprob: -9.5076265335083
    9. '=int' → logprob: -9.6326265335083
    10. '_' → logprob: -10.1326265335083

Token 57: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0015030752401798964
    2. 'len' → logprob: -6.501502990722656
    3. ' ' → logprob: -15.126502990722656
    4. '=len' → logprob: -15.376502990722656
    5. '(len' → logprob: -15.626502990722656
    6. '[len' → logprob: -16.876502990722656
    7. '	len' → logprob: -17.001502990722656
    8. ' ' → logprob: -18.376502990722656
    9. '<len' → logprob: -19.251502990722656
    10. ',len' → logprob: -19.376502990722656

Token 58: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.001837487448938191
    2. '(' → logprob: -6.501837253570557
    3. '(self' → logprob: -8.001837730407715
    4. 'grid' → logprob: -16.6268367767334
    5. '(
' → logprob: -16.6268367767334
    6. ' (' → logprob: -16.7518367767334
    7. '(gr' → logprob: -16.8768367767334
    8. ' grid' → logprob: -17.7518367767334
    9. '(

' → logprob: -18.2518367767334
    10. '(g' → logprob: -18.3768367767334

Token 59: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029625516617670655
    2. ' )' → logprob: -9.000296592712402
    3. '[' → logprob: -9.125296592712402
    4. ')
' → logprob: -10.000296592712402
    5. '   ' → logprob: -11.125296592712402
    6. '       ' → logprob: -13.250296592712402
    7. ' ' → logprob: -14.125296592712402
    8. '[self' → logprob: -14.875296592712402
    9. 'self' → logprob: -15.375296592712402
    10. ')#' → logprob: -15.500296592712402

Token 60: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05032190680503845
    2. 'self' (adapté à ' self') → logprob: -3.6753218173980713
    3. ' self' → logprob: -3.8003218173980713
    4. '   ' → logprob: -7.30032205581665
    5. '<|end|>' → logprob: -8.175321578979492
    6. ' ' → logprob: -8.300321578979492
    7. '        ' → logprob: -10.300321578979492
    8. ')' → logprob: -10.925321578979492
    9. '      ' → logprob: -11.175321578979492
    10. '    ' → logprob: -11.175321578979492

Token 62: '.M' (ID: 2015)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03072742372751236
    2. '.M' → logprob: -3.5307273864746094
    3. '.S' → logprob: -8.53072738647461
    4. ' .' → logprob: -8.53072738647461
    5. '<|end|>' → logprob: -9.15572738647461
    6. '.C' → logprob: -9.40572738647461
    7. '.N' → logprob: -9.40572738647461
    8. '.I' → logprob: -9.65572738647461
    9. '.D' → logprob: -9.65572738647461
    10. '.L' → logprob: -10.15572738647461

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01667022332549095
    2. '=' → logprob: -4.141670227050781
    3. '<|end|>' → logprob: -7.516670227050781
    4. '=len' → logprob: -10.016670227050781
    5. ' ' → logprob: -10.391670227050781
    6. ',' → logprob: -12.141670227050781
    7. ')' → logprob: -12.266670227050781
    8. '<|end|>' → logprob: -12.766670227050781
    9. '=int' → logprob: -14.391670227050781
    10. ' =)' → logprob: -14.391670227050781

Token 64: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.12692894041538239
    2. ' len' → logprob: -2.1269290447235107
    3. '(len' → logprob: -15.25192928314209
    4. '[len' → logprob: -15.62692928314209
    5. '   ' → logprob: -16.001928329467773
    6. ' ' → logprob: -16.126928329467773
    7. '0' → logprob: -16.376928329467773
    8. '=len' → logprob: -17.251928329467773
    9. '	len' → logprob: -17.376928329467773
    10. 'max' → logprob: -17.751928329467773

Token 65: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -9.829823102336377e-05
    2. '(' → logprob: -9.25009822845459
    3. ' (' → logprob: -13.87509822845459
    4. 'grid' → logprob: -14.62509822845459
    5. '(self' → logprob: -15.25009822845459
    6. ' grid' → logprob: -15.87509822845459
    7. '(
' → logprob: -16.250099182128906
    8. '(gr' → logprob: -17.000099182128906
    9. '(Grid' → logprob: -17.500099182128906
    10. '	grid' → logprob: -18.000099182128906

Token 66: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.061054359131958e-06
    2. ')' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.50000762939453
    4. '```' → logprob: -17.00000762939453
    5. ' [' → logprob: -19.00000762939453
    6. '[
' → logprob: -19.75000762939453
    7. '[N' → logprob: -19.87500762939453
    8. ' ' → logprob: -20.00000762939453
    9. ']' → logprob: -20.12500762939453
    10. '[-' → logprob: -20.25000762939453

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '[' → logprob: -16.000001907348633
    4. '   ' → logprob: -17.125001907348633
    5. ')' → logprob: -17.375001907348633
    6. ']' → logprob: -19.250001907348633
    7. '])' → logprob: -19.375001907348633
    8. '```' → logprob: -19.625001907348633
    9. '۰' → logprob: -20.375001907348633
    10. '-' → logprob: -20.625001907348633

Token 68: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.06374706327915192
    2. ')' → logprob: -2.8137471675872803
    3. ']' → logprob: -7.313746929168701
    4. ')])' → logprob: -7.688746929168701
    5. ' ])' → logprob: -8.06374740600586
    6. ' )' → logprob: -8.81374740600586
    7. '])]' → logprob: -9.43874740600586
    8. ')]' → logprob: -10.18874740600586
    9. ''])' → logprob: -10.56374740600586
    10. '<|end|>' → logprob: -11.31374740600586

Token 69: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: ' self' (ID: 1051)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.8043161034584045
    2. 'grid' → logprob: -1.1793160438537598
    3. ' self' → logprob: -1.9293160438537598
    4. 'self' → logprob: -2.3043160438537598
    5. ' ' → logprob: -10.679316520690918
    6. '	grid' → logprob: -12.304316520690918
    7. '(grid' → logprob: -12.304316520690918
    8. ' ' → logprob: -12.429316520690918
    9. '   ' → logprob: -13.179316520690918
    10. '  ' → logprob: -13.804316520690918

Token 71: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.34353530406951904
    2. '.' → logprob: -1.468535304069519
    3. '.grid' → logprob: -3.5935354232788086
    4. 'grid' → logprob: -4.468535423278809
    5. '.M' → logprob: -5.093535423278809
    6. '>' → logprob: -5.093535423278809
    7. ' grid' → logprob: -5.593535423278809
    8. 'else' → logprob: -6.593535423278809
    9. 'self' → logprob: -6.843535423278809
    10. ' else' → logprob: -6.843535423278809

Token 72: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3140918016433716
    2. ' >' → logprob: -1.3140918016433716
    3. ' else' → logprob: -7.439091682434082
    4. 'else' → logprob: -8.564091682434082
    5. ' ' → logprob: -10.689091682434082
    6. ' ' → logprob: -11.439091682434082
    7. '<|end|>' → logprob: -12.314091682434082
    8. ')>' → logprob: -12.564091682434082
    9. '&gt' → logprob: -12.814091682434082
    10. '<|end|>' → logprob: -13.189091682434082

Token 73: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0889458954334259
    2. ' ' → logprob: -2.4639458656311035
    3. '>' → logprob: -12.338946342468262
    4. '<|end|>' → logprob: -14.338946342468262
    5. ' ' → logprob: -14.713946342468262
    6. '  ' → logprob: -15.213946342468262
    7. '۰' → logprob: -15.713946342468262
    8. '

' → logprob: -16.276445388793945
    9. ' >' → logprob: -16.588945388793945
    10. '<|end|>' → logprob: -16.713945388793945

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015024791937321424
    2. ' ' → logprob: -6.501502513885498
    3. '>' → logprob: -16.001502990722656
    4. '۰' → logprob: -18.126502990722656
    5. '  ' → logprob: -18.251502990722656
    6. '<|end|>' → logprob: -18.501502990722656
    7. '   ' → logprob: -18.626502990722656
    8. '```' → logprob: -19.251502990722656
    9. ' ' → logprob: -19.501502990722656
    10. '00' → logprob: -19.876502990722656

Token 75: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.001946248929016292
    2. 'else' → logprob: -6.251946449279785
    3. ' ' → logprob: -11.251946449279785
    4. ' and' → logprob: -12.626946449279785
    5. ' ' → logprob: -14.251946449279785
    6. '        ' → logprob: -15.251946449279785
    7. '	else' → logprob: -15.751946449279785
    8. '>' → logprob: -16.62694549560547
    9. ')' → logprob: -16.75194549560547
    10. '    ' → logprob: -16.87694549560547

Token 76: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014164448715746403
    2. ' ' → logprob: -4.264164447784424
    3. ' ' → logprob: -14.514164924621582
    4. '   ' → logprob: -14.889164924621582
    5. '    ' → logprob: -16.764163970947266
    6. '  ' → logprob: -17.014163970947266
    7. '۰' → logprob: -17.576663970947266
    8. '```' → logprob: -18.576663970947266
    9. '	' → logprob: -19.076663970947266
    10. '00' → logprob: -19.326663970947266

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -17.875011444091797
    4. ' ' → logprob: -19.375011444091797
    5. '۰' → logprob: -19.625011444091797
    6. '```' → logprob: -20.750011444091797
    7. '  ' → logprob: -21.000011444091797
    8. '０' → logprob: -21.375011444091797
    9. '    ' → logprob: -21.625011444091797
    10. '00' → logprob: -22.000011444091797

Token 78: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: '.' (ID: 13)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.0200178623199463
    2. '.vis' → logprob: -2.1450178623199463
    3. '.grid' → logprob: -2.3950178623199463
    4. '.start' → logprob: -2.3950178623199463
    5. '.rows' → logprob: -2.3950178623199463
    6. '.' → logprob: -2.6450178623199463
    7. '.valid' → logprob: -3.3950178623199463
    8. '.positions' → logprob: -3.7700178623199463
    9. '.cells' → logprob: -3.8950178623199463
    10. '.w' → logprob: -4.395017623901367

Token 82: 'entr' (ID: 12792)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.7363500595092773
    2. 'start' → logprob: -1.4863500595092773
    3. 'visited' → logprob: -1.4863500595092773
    4. 'walls' → logprob: -2.9863500595092773
    5. 'starts' → logprob: -6.361350059509277
    6. 'adj' → logprob: -6.361350059509277
    7. 'width' → logprob: -6.361350059509277
    8. 'height' → logprob: -6.486350059509277
    9. 'entr' → logprob: -6.736350059509277
    10. 'positions' → logprob: -6.736350059509277

Token 83: 'ance' (ID: 766)
  Prédit: 'ance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.18450899422168732
    2. 'y' → logprob: -1.809509038925171
    3. 'ances' → logprob: -5.559508800506592
    4. '   ' → logprob: -8.05950927734375
    5. '```' → logprob: -8.43450927734375
    6. 'yp' → logprob: -9.80950927734375
    7. '[' → logprob: -10.05950927734375
    8. '       ' → logprob: -10.30950927734375
    9. '``' → logprob: -11.05950927734375
    10. ' y' → logprob: -11.05950927734375

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1415109634399414
    2. '=' → logprob: -2.3915109634399414
    3. '_' → logprob: -3.2665109634399414
    4. '_positions' → logprob: -6.516510963439941
    5. 's' → logprob: -8.141510963439941
    6. '_pos' → logprob: -8.391510963439941
    7. '_coordinates' → logprob: -10.141510963439941
    8. '_x' → logprob: -10.141510963439941
    9. '_coords' → logprob: -10.266510963439941
    10. ' ' → logprob: -10.391510963439941

Token 85: ' (' (ID: 350)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.5714318752288818
    2. ' (' → logprob: -1.5714318752288818
    3. 'None' → logprob: -1.9464318752288818
    4. '(None' → logprob: -3.071431875228882
    5. '(' → logprob: -3.321431875228882
    6. ' (-' → logprob: -7.446432113647461
    7. ' next' → logprob: -7.571432113647461
    8. '(-' → logprob: -7.821432113647461
    9. ' self' → logprob: -8.821432113647461
    10. ' ' → logprob: -9.196432113647461

Token 86: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001343446783721447
    2. ' ' → logprob: -6.626343250274658
    3. '-' → logprob: -11.876343727111816
    4. ')' → logprob: -12.126343727111816
    5. ' -' → logprob: -12.626343727111816
    6. 'self' → logprob: -14.126343727111816
    7. '1' → logprob: -14.501343727111816
    8. ' self' → logprob: -15.126343727111816
    9. '   ' → logprob: -15.751343727111816
    10. 'None' → logprob: -16.3763427734375

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010747690976131707
    2. ' ,' → logprob: -9.250107765197754
    3. '0' → logprob: -12.125107765197754
    4. ')' → logprob: -12.625107765197754
    5. '<|end|>' → logprob: -13.500107765197754
    6. ',)' → logprob: -14.750107765197754
    7. ',
' → logprob: -15.250107765197754
    8. '‌,' → logprob: -15.750107765197754
    9. ' ' → logprob: -16.375106811523438
    10. '<|end|>' → logprob: -16.625106811523438

Token 88: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28116339445114136
    2. ' ' → logprob: -1.4061634540557861
    3. ')' → logprob: -11.406163215637207
    4. ' )' → logprob: -13.906163215637207
    5. '1' → logprob: -15.343663215637207
    6. '   ' → logprob: -16.031164169311523
    7. '  ' → logprob: -16.218664169311523
    8. ' ' → logprob: -16.281164169311523
    9. '    ' → logprob: -16.343664169311523
    10. '<|end|>' → logprob: -16.718664169311523

Token 89: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003124632057733834
    2. ' )' → logprob: -8.125312805175781
    3. ')
' → logprob: -11.375312805175781
    4. '),' → logprob: -12.500312805175781
    5. ',' → logprob: -15.000312805175781
    6. ')#' → logprob: -15.875312805175781
    7. ',)' → logprob: -15.875312805175781
    8. '))' → logprob: -16.25031280517578
    9. '   ' → logprob: -16.75031280517578
    10. ' ' → logprob: -17.00031280517578

Token 90: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: '.t' (ID: 1370)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01635727286338806
    2. '.ex' → logprob: -4.391357421875
    3. '.exit' → logprob: -6.641357421875
    4. ' .' → logprob: -7.516357421875
    5. '.e' → logprob: -8.391357421875
    6. '.is' → logprob: -8.391357421875
    7. '.w' → logprob: -9.016357421875
    8. '.cells' → logprob: -9.016357421875
    9. '._' → logprob: -9.641357421875
    10. '.set' → logprob: -9.766357421875

Token 93: 'reas' (ID: 20712)
  Prédit: 'arget'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arget' → logprob: -0.29208093881607056
    2. 're' → logprob: -1.6670808792114258
    3. 'reas' → logprob: -3.042080879211426
    4. 'r' → logprob: -4.667080879211426
    5. 'ele' → logprob: -5.542080879211426
    6. 'rea' → logprob: -7.042080879211426
    7. 'ypes' → logprob: -8.542080879211426
    8. 'rap' → logprob: -8.542080879211426
    9. 'rans' → logprob: -8.792080879211426
    10. 'h' → logprob: -8.917080879211426

Token 94: 'ures' (ID: 1609)
  Prédit: 'ure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.021010106429457664
    2. 'ures' → logprob: -4.021009922027588
    3. 'asure' → logprob: -6.021009922027588
    4. 'asures' → logprob: -7.896009922027588
    5. 'sure' → logprob: -10.271010398864746
    6. 'u' → logprob: -12.396010398864746
    7. 'a' → logprob: -12.896010398864746
    8. 's' → logprob: -13.021010398864746
    9. 'e' → logprob: -13.396010398864746
    10. 'Sure' → logprob: -13.646010398864746

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004671849310398102
    2. '=' → logprob: -5.379672050476074
    3. ' ' → logprob: -10.754672050476074
    4. ':' → logprob: -11.129672050476074
    5. ')' → logprob: -12.379672050476074
    6. '<|end|>' → logprob: -12.379672050476074
    7. '=set' → logprob: -12.504672050476074
    8. ' :' → logprob: -14.254672050476074
    9. ' )' → logprob: -14.379672050476074
    10. '=[]' → logprob: -14.379672050476074

Token 96: ' [(' (ID: 43900)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.13393491506576538
    2. 'set' → logprob: -2.13393497467041
    3. ' []' → logprob: -5.13393497467041
    4. '[]' → logprob: -7.38393497467041
    5. ' ' → logprob: -8.38393497467041
    6. '	set' → logprob: -9.38393497467041
    7. '{}' → logprob: -10.00893497467041
    8. ' {}' → logprob: -10.25893497467041
    9. '=set' → logprob: -10.88393497467041
    10. ' {' → logprob: -11.00893497467041

Token 97: 'self' (ID: 1156)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10297442972660065
    2. ')' → logprob: -2.6029744148254395
    3. ')]' → logprob: -4.6029744148254395
    4. ' ' → logprob: -5.8529744148254395
    5. 'self' → logprob: -5.9779744148254395
    6. '1' → logprob: -6.1029744148254395
    7. 'x' → logprob: -6.6029744148254395
    8. '-' → logprob: -6.8529744148254395
    9. ')])' → logprob: -6.8529744148254395
    10. ')],' → logprob: -7.3529744148254395

Token 98: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.18255269527435303
    2. ',' → logprob: -2.5575528144836426
    3. '0' → logprob: -3.4325528144836426
    4. '.M' → logprob: -4.182552814483643
    5. '.' → logprob: -4.682552814483643
    6. 'N' → logprob: -5.182552814483643
    7. '[' → logprob: -5.432552814483643
    8. ' ,' → logprob: -5.432552814483643
    9. ' ' → logprob: -5.807552814483643
    10. ',N' → logprob: -5.932552814483643

Token 99: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6016290187835693
    2. '-' → logprob: -1.1016290187835693
    3. '//' → logprob: -2.6016290187835693
    4. ' //' → logprob: -3.1016290187835693
    5. ' ' → logprob: -7.726629257202148
    6. ',' → logprob: -8.976629257202148
    7. ' ,' → logprob: -11.476629257202148
    8. '   ' → logprob: -11.601629257202148
    9. ')' → logprob: -11.726629257202148
    10. ' ' → logprob: -12.476629257202148

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011616500560194254
    2. ' ' → logprob: -6.876161575317383
    3. '2' → logprob: -9.001161575317383
    4. '   ' → logprob: -13.438661575317383
    5. '3' → logprob: -14.001161575317383
    6. ')' → logprob: -14.438661575317383
    7. ',' → logprob: -14.501161575317383
    8. '

' → logprob: -14.876161575317383
    9. '  ' → logprob: -15.313661575317383
    10. '
' → logprob: -15.313661575317383

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014416875317692757
    2. ' ,' → logprob: -4.264416694641113
    3. ',self' → logprob: -8.514416694641113
    4. ',int' → logprob: -12.139416694641113
    5. ',
' → logprob: -12.139416694641113
    6. '),(' → logprob: -12.389416694641113
    7. ',(' → logprob: -12.639416694641113
    8. ',i' → logprob: -12.764416694641113
    9. ',m' → logprob: -12.889416694641113
    10. ',n' → logprob: -13.014416694641113

Token 102: '0' (ID: 15)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25353556871414185
    2. ' self' → logprob: -1.503535509109497
    3. '0' → logprob: -6.503535747528076
    4. ' ' → logprob: -9.378535270690918
    5. '	self' → logprob: -11.878535270690918
    6. ')' → logprob: -12.253535270690918
    7. '(self' → logprob: -13.003535270690918
    8. '   ' → logprob: -13.128535270690918
    9. '  ' → logprob: -13.503535270690918
    10. '1' → logprob: -13.628535270690918

Token 103: '),' (ID: 936)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.025685852393507957
    2. ')' → logprob: -3.7756857872009277
    3. '),' → logprob: -6.275685787200928
    4. ' )' → logprob: -8.400686264038086
    5. ',' → logprob: -8.650686264038086
    6. ')],' → logprob: -9.775686264038086
    7. ']' → logprob: -10.275686264038086
    8. ')])' → logprob: -10.775686264038086
    9. '<|end|>' → logprob: -11.650686264038086
    10. '),(' → logprob: -11.650686264038086

Token 104: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7178065180778503
    2. ' self' → logprob: -1.0928065776824951
    3. 'self' → logprob: -2.092806577682495
    4. '(self' → logprob: -2.967806577682495
    5. '(' → logprob: -6.592806339263916
    6. ' ' → logprob: -8.092806816101074
    7. '0' → logprob: -8.342806816101074
    8. ')' → logprob: -9.217806816101074
    9. ',self' → logprob: -10.217806816101074
    10. ',' → logprob: -10.967806816101074

Token 105: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04607671499252319
    2. ' self' → logprob: -3.421076774597168
    3. '0' → logprob: -4.421076774597168
    4. ' ' → logprob: -8.296076774597168
    5. '1' → logprob: -10.921076774597168
    6. '(self' → logprob: -11.296076774597168
    7. ')' → logprob: -11.421076774597168
    8. ',' → logprob: -11.921076774597168
    9. ',self' → logprob: -12.046076774597168
    10. '
' → logprob: -12.171076774597168

Token 106: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.6378879547119141
    2. '-' → logprob: -0.7628879547119141
    3. '.M' → logprob: -5.637887954711914
    4. ' -' → logprob: -6.637887954711914
    5. ',' → logprob: -9.512887954711914
    6. '.n' → logprob: -9.887887954711914
    7. 'N' → logprob: -9.887887954711914
    8. ' .' → logprob: -10.012887954711914
    9. '.' → logprob: -10.137887954711914
    10. '.-' → logprob: -10.512887954711914

Token 107: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015337858349084854
    2. ' -' → logprob: -6.5015339851379395
    3. '1' → logprob: -10.626533508300781
    4. ' ' → logprob: -12.376533508300781
    5. ',' → logprob: -13.751533508300781
    6. ')-' → logprob: -14.251533508300781
    7. '//' → logprob: -14.751533508300781
    8. '()-' → logprob: -14.876533508300781
    9. '2' → logprob: -15.126533508300781
    10. '–' → logprob: -16.37653350830078

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019817621796391904
    2. '-' → logprob: -9.125198364257812
    3. ' ' → logprob: -9.375198364257812
    4. '2' → logprob: -13.000198364257812
    5. '0' → logprob: -14.500198364257812
    6. ' -' → logprob: -15.250198364257812
    7. '3' → logprob: -15.375198364257812
    8. ')' → logprob: -15.437698364257812
    9. '```' → logprob: -16.125198364257812
    10. '   ' → logprob: -16.125198364257812

Token 109: ',self' (ID: 54040)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09247273206710815
    2. ' ,' → logprob: -3.467472791671753
    3. ',self' → logprob: -3.842472791671753
    4. ',M' → logprob: -3.842472791671753
    5. '-' → logprob: -4.592472553253174
    6. ',N' → logprob: -6.967472553253174
    7. ' -' → logprob: -6.967472553253174
    8. ',m' → logprob: -7.467472553253174
    9. ',(' → logprob: -7.467472553253174
    10. ',len' → logprob: -7.592472553253174

Token 110: '.M' (ID: 2015)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6484982371330261
    2. '.M' → logprob: -0.7734982371330261
    3. 'M' → logprob: -4.773498058319092
    4. '-M' → logprob: -5.148498058319092
    5. '1' → logprob: -7.023498058319092
    6. '.' → logprob: -8.64849853515625
    7. ' -' → logprob: -8.77349853515625
    8. '2' → logprob: -10.27349853515625
    9. '[' → logprob: -10.27349853515625
    10. '   ' → logprob: -10.27349853515625

Token 111: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001975384308025241
    2. ' -' → logprob: -6.2519755363464355
    3. '1' → logprob: -10.001975059509277
    4. ')]' → logprob: -14.251975059509277
    5. ')' → logprob: -15.126975059509277
    6. ' ' → logprob: -15.626975059509277
    7. '()-' → logprob: -16.126976013183594
    8. '//' → logprob: -16.501976013183594
    9. ')-' → logprob: -16.751976013183594
    10. '2' → logprob: -16.876976013183594

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.263011578586884e-05
    2. ' ' → logprob: -10.750042915344238
    3. '2' → logprob: -11.375042915344238
    4. '-' → logprob: -12.250042915344238
    5. ')' → logprob: -12.875042915344238
    6. '0' → logprob: -14.937542915344238
    7. '3' → logprob: -14.937542915344238
    8. '```' → logprob: -15.250042915344238
    9. '   ' → logprob: -15.625042915344238
    10. '

' → logprob: -16.562541961669922

Token 113: '),' (ID: 936)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.017081163823604584
    2. ')' → logprob: -4.267081260681152
    3. ' )' → logprob: -6.392081260681152
    4. ')])' → logprob: -7.392081260681152
    5. '),' → logprob: -7.517081260681152
    6. ')],' → logprob: -10.517081260681152
    7. '))' → logprob: -11.017081260681152
    8. ']' → logprob: -11.517081260681152
    9. ')}' → logprob: -12.517081260681152
    10. ' ),' → logprob: -12.642081260681152

Token 114: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.04870898276567459
    2. '(' → logprob: -3.048708915710449
    3. '(self' → logprob: -10.17370891571045
    4. ' ' → logprob: -10.79870891571045
    5. ')' → logprob: -10.92370891571045
    6. ' self' → logprob: -11.54870891571045
    7. 'self' → logprob: -11.54870891571045
    8. ']' → logprob: -12.42370891571045
    9. ' ((' → logprob: -12.54870891571045
    10. ',' → logprob: -12.67370891571045

Token 115: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009145447053015232
    2. 'self' → logprob: -4.759145259857178
    3. ' ' → logprob: -8.384145736694336
    4. '(' → logprob: -8.634145736694336
    5. '(self' → logprob: -9.759145736694336
    6. ' self' → logprob: -10.634145736694336
    7. '   ' → logprob: -11.134145736694336
    8. '1' → logprob: -11.884145736694336
    9. ')' → logprob: -12.009145736694336
    10. ' (' → logprob: -12.509145736694336

Token 116: ',self' (ID: 54040)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020830852736253291
    2. ' ,' → logprob: -8.625207901000977
    3. ',self' → logprob: -11.750207901000977
    4. ',int' → logprob: -12.125207901000977
    5. '0' → logprob: -12.250207901000977
    6. ',M' → logprob: -13.250207901000977
    7. ',
' → logprob: -13.750207901000977
    8. ',n' → logprob: -13.750207901000977
    9. ',m' → logprob: -13.875207901000977
    10. ',N' → logprob: -14.000207901000977

Token 117: '.M' (ID: 2015)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6719808578491211
    2. '.M' → logprob: -0.7969808578491211
    3. '.' → logprob: -3.421980857849121
    4. '[' → logprob: -5.796980857849121
    5. '0' → logprob: -6.671980857849121
    6. 'M' → logprob: -7.171980857849121
    7. '1' → logprob: -8.296980857849121
    8. ' -' → logprob: -8.546980857849121
    9. '-M' → logprob: -9.046980857849121
    10. ')' → logprob: -9.546980857849121

Token 118: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00026729601086117327
    2. '1' → logprob: -8.625267028808594
    3. ' -' → logprob: -9.500267028808594
    4. ')]' → logprob: -11.875267028808594
    5. ')' → logprob: -13.250267028808594
    6. '[' → logprob: -13.375267028808594
    7. ')])' → logprob: -13.750267028808594
    8. ')-' → logprob: -14.750267028808594
    9. ')],' → logprob: -15.125267028808594
    10. ' ' → logprob: -15.625267028808594

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4034345187828876e-05
    2. ' ' → logprob: -11.62502384185791
    3. ')' → logprob: -12.25002384185791
    4. '-' → logprob: -12.37502384185791
    5. '2' → logprob: -12.62502384185791
    6. '```' → logprob: -14.18752384185791
    7. '0' → logprob: -14.93752384185791
    8. '   ' → logprob: -15.62502384185791
    9. '3' → logprob: -15.62502384185791
    10. '4' → logprob: -16.000024795532227

Token 120: ')]
' (ID: 11587)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09055236726999283
    2. ')]' → logprob: -2.46555233001709
    3. ')])' → logprob: -6.59055233001709
    4. '),' → logprob: -9.46555233001709
    5. '))' → logprob: -9.46555233001709
    6. ' )' → logprob: -10.09055233001709
    7. ']' → logprob: -11.09055233001709
    8. ')}' → logprob: -11.59055233001709
    9. '])' → logprob: -12.09055233001709
    10. '])]' → logprob: -12.84055233001709

Token 121: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2897818088531494
    2. 'def' → logprob: -1.6647818088531494
    3. '<|end|>' → logprob: -3.4147818088531494
    4. ' def' → logprob: -4.03978157043457
    5. '    
' → logprob: -5.16478157043457
    6. '
' → logprob: -5.28978157043457
    7. '        
' → logprob: -8.16478157043457
    8. '       ' → logprob: -8.53978157043457
    9. '<|end|>' → logprob: -8.91478157043457
    10. '	def' → logprob: -9.16478157043457

Token 123: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.04036921635270119
    2. ' def' → logprob: -3.4153692722320557
    3. '   ' → logprob: -5.040369033813477
    4. ' ' → logprob: -9.665369033813477
    5. '       ' → logprob: -10.165369033813477
    6. ')' → logprob: -10.415369033813477
    7. '<|end|>' → logprob: -10.540369033813477
    8. '	def' → logprob: -11.040369033813477
    9. '#' → logprob: -11.540369033813477
    10. '    
' → logprob: -11.665369033813477

Token 124: ' is' (ID: 382)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -1.4810734987258911
    2. '_valid' → logprob: -1.9810734987258911
    3. ' validate' → logprob: -1.9810734987258911
    4. ' is' → logprob: -2.2310733795166016
    5. ' find' → logprob: -2.3560733795166016
    6. ' get' → logprob: -2.8560733795166016
    7. ' ' → logprob: -2.9810733795166016
    8. ' def' → logprob: -3.1060733795166016
    9. '_validate' → logprob: -3.4810733795166016
    10. '_' → logprob: -3.6060733795166016

Token 125: '_enter' (ID: 88636)
  Prédit: '_walk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_walk' → logprob: -1.256653070449829
    2. '_open' → logprob: -1.381653070449829
    3. '_valid' → logprob: -1.631653070449829
    4. '_pass' → logprob: -1.631653070449829
    5. '_access' → logprob: -3.256653070449829
    6. '_free' → logprob: -4.63165283203125
    7. '_wall' → logprob: -4.63165283203125
    8. '_' → logprob: -5.13165283203125
    9. '_empty' → logprob: -5.38165283203125
    10. '_inside' → logprob: -6.00665283203125

Token 126: 'able' (ID: 562)
  Prédit: 'ance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.026988275349140167
    2. '(self' → logprob: -4.276988506317139
    3. '(' → logprob: -5.401988506317139
    4. 't' → logprob: -5.651988506317139
    5. '_' → logprob: -6.401988506317139
    6. 'able' → logprob: -6.526988506317139
    7. 'ing' → logprob: -8.27698802947998
    8. 'ence' → logprob: -8.52698802947998
    9. '

' → logprob: -9.27698802947998
    10. '(x' → logprob: -9.40198802947998

Token 127: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0032337980810552835
    2. '(' → logprob: -5.753233909606934
    3. 'self' → logprob: -10.503233909606934
    4. ' (' → logprob: -11.128233909606934
    5. ' ' → logprob: -12.253233909606934
    6. '   ' → logprob: -13.503233909606934
    7. '(
' → logprob: -13.503233909606934
    8. ')' → logprob: -13.503233909606934
    9. ' self' → logprob: -13.628233909606934
    10. '(cell' → logprob: -14.003233909606934

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003549343440681696
    2. 'self' → logprob: -6.003549575805664
    3. ' ,' → logprob: -7.378549575805664
    4. '(self' → logprob: -8.128549575805664
    5. ',self' → logprob: -9.878549575805664
    6. '   ' → logprob: -10.628549575805664
    7. '       ' → logprob: -10.878549575805664
    8. ' ' → logprob: -11.128549575805664
    9. ')' → logprob: -11.253549575805664
    10. ')(' → logprob: -11.628549575805664

Token 129: ' pos' (ID: 1253)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -1.121971845626831
    2. 'r' → logprob: -1.246971845626831
    3. 'x' → logprob: -1.496971845626831
    4. ' x' → logprob: -2.371971845626831
    5. ' row' → logprob: -3.246971845626831
    6. 'row' → logprob: -3.746971845626831
    7. ' position' → logprob: -6.24697208404541
    8. ' pos' → logprob: -6.37197208404541
    9. 'pos' → logprob: -6.49697208404541
    10. ' i' → logprob: -7.37197208404541

Token 130: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0515391007065773
    2. ')' → logprob: -3.301539182662964
    3. ':' → logprob: -4.676538944244385
    4. '):
' → logprob: -5.676538944244385
    5. ' ):' → logprob: -7.676538944244385
    6. '   ' → logprob: -9.551539421081543
    7. 'self' → logprob: -10.176539421081543
    8. ' ' → logprob: -10.301539421081543
    9. ' )' → logprob: -10.426539421081543
    10. '):
' → logprob: -12.301539421081543

Token 131: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.3398241102695465
    2. 'tuple' → logprob: -2.0898241996765137
    3. ' Tuple' → logprob: -2.2148241996765137
    4. ')' → logprob: -3.2148241996765137
    5. ' tuple' → logprob: -4.839824199676514
    6. '   ' → logprob: -5.839824199676514
    7. 'int' → logprob: -6.089824199676514
    8. ' ' → logprob: -7.589824199676514
    9. '):' → logprob: -7.964824199676514
    10. '_tuple' → logprob: -8.089823722839355

Token 132: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.9361264946837764e-07
    2. 'int' → logprob: -16.375
    3. ',int' → logprob: -16.75
    4. ')' → logprob: -18.0
    5. '(int' → logprob: -18.75
    6. '[' → logprob: -19.875
    7. '[Int' → logprob: -20.125
    8. '   ' → logprob: -20.125
    9. ',' → logprob: -20.75
    10. '[str' → logprob: -21.5

Token 133: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19713245332241058
    2. ',int' → logprob: -2.0721323490142822
    3. '[int' → logprob: -2.9471323490142822
    4. '])' → logprob: -8.322132110595703
    5. ' ,' → logprob: -9.072132110595703
    6. '],' → logprob: -9.447132110595703
    7. '[' → logprob: -11.072132110595703
    8. ']):' → logprob: -11.072132110595703
    9. 'int' → logprob: -11.572132110595703
    10. ']int' → logprob: -11.947132110595703

Token 134: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11342572420835495
    2. '])' → logprob: -2.2384257316589355
    3. '))' → logprob: -8.238425254821777
    4. '):' → logprob: -9.613425254821777
    5. '})' → logprob: -9.988425254821777
    6. '):
' → logprob: -10.113425254821777
    7. ' )' → logprob: -10.113425254821777
    8. '>)' → logprob: -10.363425254821777
    9. '`)' → logprob: -10.488425254821777
    10. ']):' → logprob: -11.113425254821777

Token 135: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.8910073637962341
    2. ':' → logprob: -1.391007423400879
    3. ')' → logprob: -1.516007423400879
    4. ' ->' → logprob: -2.266007423400879
    5. ')->' → logprob: -4.141007423400879
    6. '):' → logprob: -7.516007423400879
    7. '   ' → logprob: -7.516007423400879
    8. '>' → logprob: -8.266007423400879
    9. '()->' → logprob: -9.141007423400879
    10. '       ' → logprob: -9.766007423400879

Token 136: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.4740874767303467
    2. 'bool' → logprob: -0.9740874767303467
    3. ' ' → logprob: -11.974087715148926
    4. '   ' → logprob: -13.724087715148926
    5. '<bool' → logprob: -13.849087715148926
    6. '	bool' → logprob: -14.349087715148926
    7. '  ' → logprob: -15.099087715148926
    8. 'int' → logprob: -15.099087715148926
    9. 'True' → logprob: -15.474087715148926
    10. 'Bool' → logprob: -15.599087715148926

Token 137: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008085522567853332
    2. '):' → logprob: -7.5008087158203125
    3. ':
' → logprob: -9.125808715820312
    4. ':return' → logprob: -9.500808715820312
    5. '():' → logprob: -10.375808715820312
    6. '       ' → logprob: -11.750808715820312
    7. '<|end|>' → logprob: -12.125808715820312
    8. ' :' → logprob: -12.125808715820312
    9. '   ' → logprob: -12.250808715820312
    10. ')' → logprob: -12.250808715820312

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010505570098757744
    2. ':' → logprob: -5.260505676269531
    3. ' return' → logprob: -6.635505676269531
    4. '   ' → logprob: -6.760505676269531
    5. ':return' → logprob: -7.510505676269531
    6. 'return' → logprob: -7.635505676269531
    7. '    ' → logprob: -8.510505676269531
    8. ' ' → logprob: -8.760505676269531
    9. ',' → logprob: -8.885505676269531
    10. '<|end|>' → logprob: -9.010505676269531

Token 139: ' r' (ID: 428)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7373991012573242
    2. 'return' → logprob: -1.3623991012573242
    3. ' return' → logprob: -1.4873991012573242
    4. ' x' → logprob: -4.112399101257324
    5. ' 
' → logprob: -4.987399101257324
    6. 'x' → logprob: -5.612399101257324
    7. '        
' → logprob: -5.612399101257324
    8. ' self' → logprob: -5.862399101257324
    9. 'self' → logprob: -6.237399101257324
    10. '
' → logprob: -7.612399101257324

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6130409240722656
    2. 'ef' → logprob: -1.6130409240722656
    3. 'eturn' → logprob: -2.1130409240722656
    4. 'ow' → logprob: -3.1130409240722656
    5. ' ' → logprob: -3.8630409240722656
    6. 'pos' → logprob: -4.613040924072266
    7. ' in' → logprob: -4.738040924072266
    8. ',pos' → logprob: -4.988040924072266
    9. ' >=' → logprob: -5.238040924072266
    10. '   ' → logprob: -5.363040924072266

Token 141: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.25193315744400024
    2. ' c' → logprob: -1.5019330978393555
    3. '   ' → logprob: -12.876933097839355
    4. '	c' → logprob: -13.751933097839355
    5. ' ' → logprob: -15.626933097839355
    6. ')c' → logprob: -16.001934051513672
    7. '    ' → logprob: -17.126934051513672
    8. ',c' → logprob: -17.501934051513672
    9. ' ' → logprob: -17.626934051513672
    10. '  ' → logprob: -17.751934051513672

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023295091465115547
    2. '=' → logprob: -3.7732951641082764
    3. ')' → logprob: -10.148295402526855
    4. ' ' → logprob: -11.773295402526855
    5. ',' → logprob: -14.273295402526855
    6. '    ' → logprob: -14.523295402526855
    7. '   ' → logprob: -14.648295402526855
    8. ')=' → logprob: -15.273295402526855
    9. '  ' → logprob: -15.523295402526855
    10. '<|end|>' → logprob: -15.898295402526855

Token 143: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.3133803904056549
    2. 'pos' → logprob: -1.3133803606033325
    3. 'self' → logprob: -9.688380241394043
    4. ' self' → logprob: -9.813380241394043
    5. '	pos' → logprob: -14.063380241394043
    6. ')' → logprob: -15.688380241394043
    7. '_pos' → logprob: -15.688380241394043
    8. '```' → logprob: -15.813380241394043
    9. '
' → logprob: -16.56338119506836
    10. ' ' → logprob: -16.68838119506836

Token 144: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32324907183647156
    2. '
' → logprob: -2.073249101638794
    3. '<|end|>' → logprob: -2.573249101638794
    4. '<|end|>' → logprob: -3.948249101638794
    5. ')' → logprob: -4.198248863220215
    6. 'return' → logprob: -4.823248863220215
    7. '  
' → logprob: -5.073248863220215
    8. '   ' → logprob: -5.198248863220215
    9. '        ' → logprob: -5.448248863220215
    10. '        
' → logprob: -5.573248863220215

Token 145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019233614206314087
    2. 'return' → logprob: -4.519233703613281
    3. ' return' → logprob: -5.144233703613281
    4. '<|end|>' → logprob: -7.269233703613281
    5. ' if' → logprob: -7.394233703613281
    6. '
' → logprob: -8.394233703613281
    7. ':' → logprob: -9.144233703613281
    8. ')' → logprob: -9.144233703613281
    9. ':return' → logprob: -9.269233703613281
    10. '   ' → logprob: -9.394233703613281

Token 146: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4535531997680664
    2. ' return' → logprob: -1.4535531997680664
    3. ' if' → logprob: -2.4535531997680664
    4. 'if' → logprob: -3.3285531997680664
    5. '       ' → logprob: -5.078553199768066
    6. '0' → logprob: -5.953553199768066
    7. ' ' → logprob: -8.453553199768066
    8. '   ' → logprob: -11.078553199768066
    9. '        ' → logprob: -12.703553199768066
    10. '	return' → logprob: -13.953553199768066

Token 147: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013408678583800793
    2. ' ' → logprob: -4.388408660888672
    3. 'self' → logprob: -7.388408660888672
    4. ' self' → logprob: -8.263408660888672
    5. '   ' → logprob: -11.888408660888672
    6. '(' → logprob: -12.138408660888672
    7. ' (' → logprob: -12.638408660888672
    8. '(self' → logprob: -12.888408660888672
    9. 'r' → logprob: -13.013408660888672
    10. ' r' → logprob: -13.638408660888672

Token 148: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012856863031629473
    2. 'self' → logprob: -9.625128746032715
    3. ' ' → logprob: -9.750128746032715
    4. '(' → logprob: -13.125128746032715
    5. '   ' → logprob: -14.000128746032715
    6. 'r' → logprob: -14.500128746032715
    7. ' self' → logprob: -14.750128746032715
    8. '(self' → logprob: -15.125128746032715
    9. '(r' → logprob: -16.5001277923584
    10. ' (' → logprob: -16.8751277923584

Token 149: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.10905807465314865
    2. '<=' → logprob: -2.359058141708374
    3. ' <' → logprob: -4.859057903289795
    4. '<' → logprob: -7.109057903289795
    5. '<len' → logprob: -8.734058380126953
    6. ' ' → logprob: -10.109058380126953
    7. 'r' → logprob: -11.609058380126953
    8. ' r' → logprob: -11.984058380126953
    9. ',' → logprob: -12.234058380126953
    10. ' or' → logprob: -13.359058380126953

Token 150: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0067154900170862675
    2. ' r' → logprob: -5.006715297698975
    3. '	r' → logprob: -16.631715774536133
    4. '_r' → logprob: -17.381715774536133
    5. ' ' → logprob: -17.756715774536133
    6. '   ' → logprob: -18.006715774536133
    7. '[r' → logprob: -19.756715774536133
    8. '<|end|>' → logprob: -20.381715774536133
    9. '$r' → logprob: -20.631715774536133
    10. '```' → logprob: -20.631715774536133

Token 151: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.16179390251636505
    2. ' <' → logprob: -1.9117939472198486
    3. ' and' → logprob: -6.9117937088012695
    4. 'and' → logprob: -8.03679370880127
    5. '<N' → logprob: -8.66179370880127
    6. '<n' → logprob: -10.41179370880127
    7. '<len' → logprob: -11.03679370880127
    8. '<|end|>' → logprob: -11.41179370880127
    9. '<size' → logprob: -12.16179370880127
    10. '[' → logprob: -13.41179370880127

Token 152: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005233882926404476
    2. ' self' → logprob: -5.2552337646484375
    3. '	self' → logprob: -16.880233764648438
    4. '=self' → logprob: -17.505233764648438
    5. '       ' → logprob: -17.630233764648438
    6. '(self' → logprob: -17.880233764648438
    7. '   ' → logprob: -18.755233764648438
    8. '
' → logprob: -18.880233764648438
    9. 'Self' → logprob: -18.880233764648438
    10. ' ' → logprob: -19.005233764648438

Token 153: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.00016587569552939385
    2. '.' → logprob: -8.750165939331055
    3. ' .' → logprob: -12.500165939331055
    4. 'N' → logprob: -12.750165939331055
    5. 'self' → logprob: -14.875165939331055
    6. '.M' → logprob: -15.250165939331055
    7. '.n' → logprob: -16.375165939331055
    8. '.
' → logprob: -18.000165939331055
    9. '
' → logprob: -19.250165939331055
    10. '.S' → logprob: -19.625165939331055

Token 154: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0017100441036745906
    2. 'and' → logprob: -6.376709938049316
    3. ' ' → logprob: -12.126709938049316
    4. '       ' → logprob: -13.876709938049316
    5. '        ' → logprob: -14.251709938049316
    6. '<|end|>' → logprob: -15.126709938049316
    7. '	and' → logprob: -15.751709938049316
    8. ',' → logprob: -15.751709938049316
    9. '      ' → logprob: -16.376710891723633
    10. ' ' → logprob: -16.626710891723633

Token 155: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07889077812433243
    2. ' ' → logprob: -2.578890800476074
    3. 'c' → logprob: -15.203890800476074
    4. ' c' → logprob: -15.203890800476074
    5. '       ' → logprob: -15.828890800476074
    6. '        ' → logprob: -15.828890800476074
    7. '   ' → logprob: -16.328889846801758
    8. '    ' → logprob: -16.453889846801758
    9. '  ' → logprob: -16.453889846801758
    10. ' ' → logprob: -16.953889846801758

Token 156: '0' (ID: 15)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.15190808475017548
    2. 'self' → logprob: -2.2769081592559814
    3. '0' → logprob: -4.151907920837402
    4. ' c' → logprob: -4.276907920837402
    5. ' self' → logprob: -4.776907920837402
    6. ' ' → logprob: -8.151907920837402
    7. '   ' → logprob: -14.526907920837402
    8. '(self' → logprob: -15.526907920837402
    9. '	c' → logprob: -15.651907920837402
    10. '  ' → logprob: -15.776907920837402

Token 157: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11326553672552109
    2. '<' → logprob: -2.7382655143737793
    3. 'c' → logprob: -4.113265514373779
    4. ' c' → logprob: -4.988265514373779
    5. ' and' → logprob: -5.613265514373779
    6. ' ' → logprob: -5.738265514373779
    7. ' <=' → logprob: -5.863265514373779
    8. 'M' → logprob: -6.238265514373779
    9. 'and' → logprob: -6.238265514373779
    10. '<c' → logprob: -6.738265514373779

Token 158: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00861456897109747
    2. ' c' → logprob: -4.758614540100098
    3. '   ' → logprob: -16.758615493774414
    4. '	c' → logprob: -17.883615493774414
    5. ' ' → logprob: -18.008615493774414
    6. ')c' → logprob: -18.258615493774414
    7. '_c' → logprob: -19.008615493774414
    8. '       ' → logprob: -19.383615493774414
    9. '  ' → logprob: -20.508615493774414
    10. 'r' → logprob: -20.633615493774414

Token 159: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.06997911632061005
    2. '<' → logprob: -2.694979190826416
    3. ' ' → logprob: -10.819978713989258
    4. 'c' → logprob: -12.319978713989258
    5. 'self' → logprob: -12.444978713989258
    6. '<N' → logprob: -12.694978713989258
    7. '<M' → logprob: -13.069978713989258
    8. '<|end|>' → logprob: -13.694978713989258
    9. ' self' → logprob: -13.819978713989258
    10. '<Self' → logprob: -13.944978713989258

Token 160: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015028368216007948
    2. ' self' → logprob: -6.501502990722656
    3. '[self' → logprob: -16.126502990722656
    4. '(self' → logprob: -16.251502990722656
    5. '=self' → logprob: -16.751502990722656
    6. '<|end|>' → logprob: -17.126502990722656
    7. 's' → logprob: -17.626502990722656
    8. '       ' → logprob: -18.001502990722656
    9. '	self' → logprob: -18.001502990722656
    10. '
' → logprob: -18.126502990722656

Token 161: '.M' (ID: 2015)
  Prédit: '.M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.M' → logprob: -0.00011784763046307489
    2. 'M' → logprob: -9.500118255615234
    3. '.' → logprob: -10.125118255615234
    4. ' .' → logprob: -14.750118255615234
    5. '.N' → logprob: -15.000118255615234
    6. '<M' → logprob: -15.125118255615234
    7. '   ' → logprob: -15.250118255615234
    8. 'self' → logprob: -15.625118255615234
    9. '.М' → logprob: -15.750118255615234
    10. '	M' → logprob: -15.750118255615234

Token 162: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011105125769972801
    2. 'and' → logprob: -4.511105060577393
    3. '       ' → logprob: -10.13610553741455
    4. ' ' → logprob: -11.88610553741455
    5. '        ' → logprob: -12.38610553741455
    6. '   ' → logprob: -12.88610553741455
    7. '    ' → logprob: -13.63610553741455
    8. '<|end|>' → logprob: -14.26110553741455
    9. '      ' → logprob: -14.51110553741455
    10. '	and' → logprob: -15.01110553741455

Token 163: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.28115376830101013
    2. ' self' → logprob: -1.4061537981033325
    3. '(self' → logprob: -13.781153678894043
    4. '   ' → logprob: -14.031153678894043
    5. '	self' → logprob: -14.406153678894043
    6. '[self' → logprob: -15.031153678894043
    7. '       ' → logprob: -15.156153678894043
    8. ' ' → logprob: -15.281153678894043
    9. ' not' → logprob: -16.40615463256836
    10. ' (' → logprob: -16.65615463256836

Token 164: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.00024120506714098155
    2. '.' → logprob: -8.37524127960205
    3. ' .' → logprob: -12.25024127960205
    4. 'grid' → logprob: -13.50024127960205
    5. ').' → logprob: -14.37524127960205
    6. '   ' → logprob: -14.37524127960205
    7. '.user' → logprob: -14.50024127960205
    8. '.gr' → logprob: -14.75024127960205
    9. '	grid' → logprob: -14.75024127960205
    10. '.r' → logprob: -15.00024127960205

Token 165: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.9361264946837764e-07
    2. 'r' → logprob: -16.5
    3. '[' → logprob: -16.875
    4. '[row' → logprob: -18.75
    5. '][' → logprob: -19.25
    6. '[c' → logprob: -20.25
    7. ' [' → logprob: -20.375
    8. '[
' → logprob: -20.625
    9. '```' → logprob: -20.625
    10. '	r' → logprob: -21.0

Token 166: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -2.47495681833243e-05
    2. '[c' → logprob: -10.875024795532227
    3. ']' → logprob: -12.375024795532227
    4. '[' → logprob: -13.875024795532227
    5. ' ][' → logprob: -15.500024795532227
    6. '"][' → logprob: -15.875024795532227
    7. '[r' → logprob: -16.000024795532227
    8. ''][' → logprob: -17.125024795532227
    9. 'c' → logprob: -17.750024795532227
    10. '   ' → logprob: -18.250024795532227

Token 167: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.963691804325208e-05
    2. ' c' → logprob: -10.625029563903809
    3. ']' → logprob: -13.125029563903809
    4. ')c' → logprob: -13.625029563903809
    5. '   ' → logprob: -14.250029563903809
    6. '][' → logprob: -14.750029563903809
    7. ')' → logprob: -14.875029563903809
    8. '
' → logprob: -15.500029563903809
    9. ' ' → logprob: -15.500029563903809
    10. '	c' → logprob: -16.500030517578125

Token 168: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012543961638584733
    2. ']!=' → logprob: -6.876254558563232
    3. ' ]' → logprob: -9.626254081726074
    4. '!=' → logprob: -9.751254081726074
    5. ']!='' → logprob: -10.126254081726074
    6. ')' → logprob: -10.876254081726074
    7. ' !=' → logprob: -11.126254081726074
    8. ']==' → logprob: -11.751254081726074
    9. '[' → logprob: -12.376254081726074
    10. '']' → logprob: -12.501254081726074

Token 169: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.3476802408695221
    2. '!=' → logprob: -1.3476802110671997
    3. ' ==' → logprob: -4.09768009185791
    4. '==' → logprob: -4.47268009185791
    5. '!='' → logprob: -5.84768009185791
    6. ' not' → logprob: -7.47268009185791
    7. ' in' → logprob: -7.72268009185791
    8. ')' → logprob: -7.72268009185791
    9. ''' → logprob: -7.97268009185791
    10. '[' → logprob: -8.09768009185791

Token 170: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09265182167291641
    2. ''.' → logprob: -2.467651844024658
    3. ' '' → logprob: -5.842651844024658
    4. ' '.'' → logprob: -7.592651844024658
    5. '"' → logprob: -9.0926513671875
    6. '.' → logprob: -9.2176513671875
    7. ''o' → logprob: -10.7176513671875
    8. ' ' → logprob: -10.8426513671875
    9. '"."' → logprob: -11.9676513671875
    10. ''O' → logprob: -12.2176513671875

Token 171: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15027360618114471
    2. ')' → logprob: -2.025273561477661
    3. ')'' → logprob: -5.52527379989624
    4. '')' → logprob: -6.02527379989624
    5. '<|end|>' → logprob: -7.52527379989624
    6. '"' → logprob: -8.275273323059082
    7. ' '' → logprob: -8.650273323059082
    8. ' )' → logprob: -9.900273323059082
    9. 'def' → logprob: -10.400273323059082
    10. '`' → logprob: -10.900273323059082

Token 172: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09200170636177063
    2. '    
' → logprob: -2.4670016765594482
    3. '<|end|>' → logprob: -6.967001914978027
    4. 'def' → logprob: -7.217001914978027
    5. ' 
' → logprob: -7.717001914978027
    6. ' def' → logprob: -8.342001914978027
    7. '
' → logprob: -8.717001914978027
    8. '    ' → logprob: -9.217001914978027
    9. '        
' → logprob: -9.342001914978027
    10. '  
' → logprob: -9.467001914978027

Token 174: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.46151164174079895
    2. '   ' → logprob: -1.0865116119384766
    3. ' def' → logprob: -3.8365116119384766
    4. '    
' → logprob: -4.836511611938477
    5. '
' → logprob: -6.086511611938477
    6. '        
' → logprob: -8.461511611938477
    7. '    ' → logprob: -9.586511611938477
    8. ' 
' → logprob: -10.086511611938477
    9. '#' → logprob: -10.336511611938477
    10. ' ' → logprob: -10.461511611938477

Token 175: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -1.1505738496780396
    2. ' neighbors' → logprob: -1.4005738496780396
    3. ' bfs' → logprob: -1.7755738496780396
    4. ' find' → logprob: -2.02557373046875
    5. 'def' → logprob: -3.40057373046875
    6. 'find' → logprob: -3.65057373046875
    7. 'b' → logprob: -4.27557373046875
    8. ' get' → logprob: -4.27557373046875
    9. ' def' → logprob: -4.77557373046875
    10. ' valid' → logprob: -4.90057373046875

Token 176: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010448360117152333
    2. '(' → logprob: -6.876044750213623
    3. '(
' → logprob: -12.126045227050781
    4. ' (' → logprob: -12.251045227050781
    5. '(s' → logprob: -14.126045227050781
    6. 'self' → logprob: -14.376045227050781
    7. '   ' → logprob: -15.001045227050781
    8. 's' → logprob: -16.62604522705078
    9. ' self' → logprob: -16.75104522705078
    10. '	self' → logprob: -17.75104522705078

Token 177: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0017090904293581843
    2. 'self' → logprob: -7.501708984375
    3. ' (' → logprob: -7.751708984375
    4. ')' → logprob: -8.001708984375
    5. ',' → logprob: -8.376708984375
    6. ')(' → logprob: -9.876708984375
    7. ' self' → logprob: -10.751708984375
    8. '(' → logprob: -10.876708984375
    9. 'def' → logprob: -11.251708984375
    10. '):
' → logprob: -11.251708984375

Token 178: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2002091407775879
    2. 'self' → logprob: -2.200209140777588
    3. ' pos' → logprob: -2.700209140777588
    4. ' self' → logprob: -5.700209140777588
    5. '   ' → logprob: -9.07520866394043
    6. ')' → logprob: -12.57520866394043
    7. '       ' → logprob: -12.57520866394043
    8. ' ' → logprob: -14.70020866394043
    9. '    ' → logprob: -15.07520866394043
    10. '	pos' → logprob: -15.07520866394043

Token 179: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10762777924537659
    2. ':' → logprob: -2.8576278686523438
    3. '):
' → logprob: -3.4826278686523438
    4. ')' → logprob: -4.482627868652344
    5. '   ' → logprob: -6.732627868652344
    6. ' ):' → logprob: -7.232627868652344
    7. '       ' → logprob: -8.482627868652344
    8. ',' → logprob: -9.357627868652344
    9. ' (' → logprob: -9.607627868652344
    10. '(' → logprob: -9.732627868652344

Token 180: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.4740976393222809
    2. ' Tuple' → logprob: -0.9740976095199585
    3. ')' → logprob: -10.97409725189209
    4. ' tuple' → logprob: -13.34909725189209
    5. ' ' → logprob: -14.59909725189209
    6. 'tuple' → logprob: -14.97409725189209
    7. 'Tu' → logprob: -15.22409725189209
    8. '   ' → logprob: -15.84909725189209
    9. '.Tuple' → logprob: -15.84909725189209
    10. '_tuple' → logprob: -16.224098205566406

Token 181: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.9623810658231378e-05
    2. '[' → logprob: -11.375020027160645
    3. '[
' → logprob: -12.625020027160645
    4. '<int' → logprob: -13.250020027160645
    5. '(int' → logprob: -13.875020027160645
    6. 'int' → logprob: -14.250020027160645
    7. ',int' → logprob: -14.500020027160645
    8. '[Int' → logprob: -15.250020027160645
    9. ':int' → logprob: -15.500020027160645
    10. ')' → logprob: -15.875020027160645

Token 182: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.009138483554124832
    2. '[int' → logprob: -4.759138584136963
    3. ',' → logprob: -8.134138107299805
    4. '<int' → logprob: -9.509138107299805
    5. '   ' → logprob: -9.759138107299805
    6. 'int' → logprob: -10.134138107299805
    7. '[' → logprob: -11.009138107299805
    8. ' ,' → logprob: -11.134138107299805
    9. '(int' → logprob: -11.509138107299805
    10. ':int' → logprob: -12.009138107299805

Token 183: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000568402698263526
    2. '])' → logprob: -7.625568389892578
    3. ' )' → logprob: -9.875568389892578
    4. '):' → logprob: -11.000568389892578
    5. '):
' → logprob: -12.000568389892578
    6. '`)' → logprob: -13.000568389892578
    7. '）' → logprob: -13.750568389892578
    8. '")' → logprob: -14.250568389892578
    9. '   ' → logprob: -14.750568389892578
    10. '))' → logprob: -15.000568389892578

Token 184: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02422395534813404
    2. '->' → logprob: -4.024223804473877
    3. ' ->' → logprob: -5.274223804473877
    4. ')' → logprob: -7.524223804473877
    5. '):' → logprob: -8.899224281311035
    6. '   ' → logprob: -9.399224281311035
    7. '       ' → logprob: -10.149224281311035
    8. ':
' → logprob: -10.149224281311035
    9. ')->' → logprob: -10.524224281311035
    10. ' :' → logprob: -10.649224281311035

Token 185: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.20450904965400696
    2. ' List' → logprob: -2.5795090198516846
    3. '[
' → logprob: -3.2045090198516846
    4. '[List' → logprob: -3.3295090198516846
    5. '[' → logprob: -4.204509258270264
    6. ' [
' → logprob: -5.204509258270264
    7. '[]' → logprob: -5.579509258270264
    8. ' [' → logprob: -6.204509258270264
    9. 'list' → logprob: -6.329509258270264
    10. 'Set' → logprob: -6.954509258270264

Token 186: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.727905979962088e-05
    2. '[(' → logprob: -10.00004768371582
    3. '[
' → logprob: -14.00004768371582
    4. ':' → logprob: -15.12504768371582
    5. '[int' → logprob: -15.25004768371582
    6. '```' → logprob: -15.50004768371582
    7. '<Tuple' → logprob: -16.12504768371582
    8. ' [' → logprob: -16.62504768371582
    9. 'Tuple' → logprob: -16.87504768371582
    10. '   ' → logprob: -16.87504768371582

Token 187: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.0001698094274615869
    2. '[' → logprob: -8.75016975402832
    3. ' Tuple' → logprob: -12.00016975402832
    4. '[int' → logprob: -12.62516975402832
    5. 'int' → logprob: -13.37516975402832
    6. ']' → logprob: -16.62516975402832
    7. 'Tu' → logprob: -16.75016975402832
    8. '   ' → logprob: -16.87516975402832
    9. '<Tuple' → logprob: -17.50016975402832
    10. '[(' → logprob: -18.75016975402832

Token 188: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.2664456789934775e-06
    2. 'int' → logprob: -13.875000953674316
    3. '<int' → logprob: -16.250001907348633
    4. '(int' → logprob: -16.500001907348633
    5. ',int' → logprob: -17.250001907348633
    6. ']int' → logprob: -17.625001907348633
    7. '[Int' → logprob: -18.750001907348633
    8. ':int' → logprob: -19.375001907348633
    9. '[' → logprob: -19.500001907348633
    10. '[
' → logprob: -19.750001907348633

Token 189: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.062095627188682556
    2. '[int' → logprob: -2.8120956420898438
    3. ',' → logprob: -9.187095642089844
    4. 'int' → logprob: -11.687095642089844
    5. '<int' → logprob: -11.812095642089844
    6. ' ,' → logprob: -11.812095642089844
    7. ']int' → logprob: -13.687095642089844
    8. '(int' → logprob: -14.937095642089844
    9. '   ' → logprob: -15.062095642089844
    10. '[' → logprob: -16.562095642089844

Token 190: ']]:
' (ID: 183340)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.03606795519590378
    2. ']:' → logprob: -3.4110679626464844
    3. ']' → logprob: -6.536067962646484
    4. ']]:
' → logprob: -7.911067962646484
    5. ']:
' → logprob: -8.411067962646484
    6. ')]' → logprob: -9.411067962646484
    7. '):
' → logprob: -9.536067962646484
    8. ' ]' → logprob: -9.536067962646484
    9. ']:

' → logprob: -9.661067962646484
    10. ']):
' → logprob: -10.536067962646484

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004430627159308642
    2. '[' → logprob: -8.500443458557129
    3. ':' → logprob: -9.250443458557129
    4. '   ' → logprob: -9.750443458557129
    5. ',' → logprob: -11.125443458557129
    6. '        
' → logprob: -11.125443458557129
    7. '[]' → logprob: -11.625443458557129
    8. '
' → logprob: -11.750443458557129
    9. '    
' → logprob: -11.750443458557129
    10. '[
' → logprob: -11.750443458557129

Token 192: ' r' (ID: 428)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02853105589747429
    2. ' r' → logprob: -3.903531074523926
    3. 'r' (adapté à ' r') → logprob: -5.278531074523926
    4. ' directions' → logprob: -6.153531074523926
    5. ' return' → logprob: -9.278531074523926
    6. 'return' → logprob: -9.403531074523926
    7. '[r' → logprob: -9.528531074523926
    8. ' result' → logprob: -9.903531074523926
    9. ' n' → logprob: -10.153531074523926
    10. 'n' → logprob: -10.278531074523926

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06358420103788376
    2. '+' → logprob: -3.063584089279175
    3. ',c' → logprob: -4.563584327697754
    4. '-' → logprob: -6.313584327697754
    5. ' ,' → logprob: -6.938584327697754
    6. ' +' → logprob: -6.938584327697754
    7. '   ' → logprob: -8.313584327697754
    8. ',d' → logprob: -9.813584327697754
    9. ',n' → logprob: -9.938584327697754
    10. 'd' → logprob: -10.188584327697754

Token 194: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.28173890709877014
    2. ' c' → logprob: -1.4067388772964478
    3. '[c' → logprob: -8.531739234924316
    4. '[
' → logprob: -8.656739234924316
    5. '   ' → logprob: -9.156739234924316
    6. '[' → logprob: -10.531739234924316
    7. ' [' → logprob: -10.656739234924316
    8. ' ' → logprob: -11.031739234924316
    9. '    ' → logprob: -11.156739234924316
    10. ' [
' → logprob: -11.656739234924316

Token 195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22667637467384338
    2. '=' → logprob: -1.601676344871521
    3. '+' → logprob: -6.9766764640808105
    4. '   ' → logprob: -8.851675987243652
    5. ' +' → logprob: -9.851675987243652
    6. ')' → logprob: -10.351675987243652
    7. ' ' → logprob: -10.601675987243652
    8. '       ' → logprob: -10.976675987243652
    9. 's' → logprob: -11.226675987243652
    10. '    ' → logprob: -11.351675987243652

Token 196: ' pos' (ID: 1253)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.4189433753490448
    2. '[
' → logprob: -1.1689434051513672
    3. ' [(' → logprob: -3.668943405151367
    4. ' [
' → logprob: -5.168943405151367
    5. '[r' → logprob: -8.418943405151367
    6. '[' → logprob: -9.668943405151367
    7. ' [' → logprob: -9.668943405151367
    8. ' (' → logprob: -11.543943405151367
    9. '   ' → logprob: -12.043943405151367
    10. '(r' → logprob: -12.543943405151367

Token 197: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013532409444451332
    2. '
' → logprob: -5.138532638549805
    3. ',' → logprob: -5.263532638549805
    4. 'return' → logprob: -7.138532638549805
    5. ':' → logprob: -7.263532638549805
    6. ' return' → logprob: -8.263532638549805
    7. ':
' → logprob: -8.388532638549805
    8. ',
' → logprob: -8.888532638549805
    9. '[]' → logprob: -10.138532638549805
    10. '[]
' → logprob: -10.138532638549805

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00028493450372479856
    2. 'return' → logprob: -8.875285148620605
    3. ' return' → logprob: -9.375285148620605
    4. '[]' → logprob: -11.000285148620605
    5. '[
' → logprob: -11.375285148620605
    6. '[' → logprob: -11.375285148620605
    7. '
' → logprob: -11.750285148620605
    8. '[]
' → logprob: -12.875285148620605
    9. '   ' → logprob: -13.125285148620605
    10. ',' → logprob: -13.375285148620605

Token 199: ' candidates' (ID: 18116)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5538979172706604
    2. '       ' → logprob: -1.6788978576660156
    3. ' return' → logprob: -1.8038978576660156
    4. ' directions' → logprob: -4.053897857666016
    5. '[
' → logprob: -4.303897857666016
    6. 'neighbors' → logprob: -4.428897857666016
    7. '[(' → logprob: -4.553897857666016
    8. 'dire' → logprob: -5.178897857666016
    9. ' neighbors' → logprob: -5.303897857666016
    10. 'result' → logprob: -5.803897857666016

Token 200: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132637143135071
    2. '=' → logprob: -1.3132636547088623
    3. ':' → logprob: -14.063263893127441
    4. '=[' → logprob: -14.938263893127441
    5. ' =[' → logprob: -15.563263893127441
    6. ' ' → logprob: -15.688263893127441
    7. '[' → logprob: -15.938263893127441
    8. '=[
' → logprob: -16.313262939453125
    9. '   ' → logprob: -16.438262939453125
    10. ']' → logprob: -16.813262939453125

Token 201: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.03248327970504761
    2. ' [(' → logprob: -4.032483100891113
    3. '[
' → logprob: -4.282483100891113
    4. ' [
' → logprob: -7.782483100891113
    5. '[' → logprob: -12.532483100891113
    6. ' [' → logprob: -13.282483100891113
    7. '[((' → logprob: -15.282483100891113
    8. '   ' → logprob: -15.657483100891113
    9. ' ' → logprob: -17.03248405456543
    10. '([(' → logprob: -19.40748405456543

Token 202: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.27099974633893e-05
    2. '(r' → logprob: -11.500012397766113
    3. ' r' → logprob: -13.125012397766113
    4. '   ' → logprob: -14.875012397766113
    5. ')' → logprob: -16.50001335144043
    6. ' ' → logprob: -17.62501335144043
    7. '	r' → logprob: -18.12501335144043
    8. '-' → logprob: -18.37501335144043
    9. '
' → logprob: -18.37501335144043
    10. ' (' → logprob: -18.62501335144043

Token 203: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03284290432929993
    2. '+' → logprob: -4.407843112945557
    3. ' -' → logprob: -4.407843112945557
    4. ',' → logprob: -5.157843112945557
    5. ',c' → logprob: -6.282843112945557
    6. ' +' → logprob: -8.407842636108398
    7. ' ,' → logprob: -10.157842636108398
    8. '   ' → logprob: -10.407842636108398
    9. ' ' → logprob: -10.532842636108398
    10. '+c' → logprob: -13.157842636108398

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1888679839321412e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.06252098083496
    4. '```' → logprob: -16.68752098083496
    5. ',' → logprob: -16.75002098083496
    6. '
' → logprob: -17.62502098083496
    7. '0' → logprob: -17.81252098083496
    8. '    ' → logprob: -18.06252098083496
    9. '۱' → logprob: -18.06252098083496
    10. '  ' → logprob: -18.18752098083496

Token 205: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022231759503483772
    2. ',c' → logprob: -6.127223014831543
    3. ' ,' → logprob: -10.252223014831543
    4. ',
' → logprob: -13.252223014831543
    5. 'c' → logprob: -14.252223014831543
    6. ',r' → logprob: -15.252223014831543
    7. ',

' → logprob: -17.37722396850586
    8. ',n' → logprob: -17.62722396850586
    9. ',C' → logprob: -18.12722396850586
    10. ',b' → logprob: -18.12722396850586

Token 206: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.049480196088552475
    2. '),(' → logprob: -3.0494801998138428
    3. ' ),' → logprob: -7.299479961395264
    4. '),
' → logprob: -8.549480438232422
    5. '(r' → logprob: -11.049480438232422
    6. ',),' → logprob: -13.549480438232422
    7. '   ' → logprob: -13.799480438232422
    8. ',' → logprob: -13.924480438232422
    9. ' ' → logprob: -14.424480438232422
    10. ' ),
' → logprob: -14.549480438232422

Token 207: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0001242772996192798
    2. ' r' → logprob: -9.000123977661133
    3. '   ' → logprob: -14.375123977661133
    4. '	r' → logprob: -16.375123977661133
    5. ' ' → logprob: -16.500123977661133
    6. '  ' → logprob: -17.750123977661133
    7. '    ' → logprob: -17.875123977661133
    8. '(r' → logprob: -18.125123977661133
    9. ')' → logprob: -18.750123977661133
    10. '```' → logprob: -18.750123977661133

Token 208: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11332397162914276
    2. ',c' → logprob: -2.238323926925659
    3. ',' → logprob: -8.113324165344238
    4. '-' → logprob: -9.863324165344238
    5. '+c' → logprob: -9.863324165344238
    6. ',r' → logprob: -9.988324165344238
    7. ' +' → logprob: -10.363324165344238
    8. ' ' → logprob: -11.613324165344238
    9. '1' → logprob: -12.863324165344238
    10. ' ,' → logprob: -12.988324165344238

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.625003814697266
    3. '-' → logprob: -14.500003814697266
    4. '
' → logprob: -16.500003814697266
    5. ',' → logprob: -16.625003814697266
    6. '0' → logprob: -17.125003814697266
    7. '<|end|>' → logprob: -17.500003814697266
    8. ' -' → logprob: -18.375003814697266
    9. '```' → logprob: -18.375003814697266
    10. '   ' → logprob: -18.750003814697266

Token 210: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.009463991969823837
    2. ',' → logprob: -4.884463787078857
    3. ',(' → logprob: -6.634463787078857
    4. '),(' → logprob: -8.009464263916016
    5. ' ,' → logprob: -8.509464263916016
    6. ',
' → logprob: -12.384464263916016
    7. 'c' → logprob: -14.009464263916016
    8. ',

' → logprob: -14.759464263916016
    9. ',C' → logprob: -14.884464263916016
    10. ',b' → logprob: -15.259464263916016

Token 211: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -5.56233171664644e-05
    2. '),' → logprob: -10.500055313110352
    3. ',(' → logprob: -10.500055313110352
    4. ' ),' → logprob: -15.625055313110352
    5. '),
' → logprob: -16.37505531311035
    6. '(c' → logprob: -16.50005531311035
    7. ',c' → logprob: -16.87505531311035
    8. ',' → logprob: -17.25005531311035
    9. ' ' → logprob: -18.25005531311035
    10. 'c' → logprob: -18.37505531311035

Token 212: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.130576806142926e-05
    2. ' r' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.750030517578125
    4. '(r' → logprob: -18.000030517578125
    5. '```' → logprob: -18.375030517578125
    6. '    ' → logprob: -19.000030517578125
    7. '	r' → logprob: -19.000030517578125
    8. ' ' → logprob: -19.125030517578125
    9. ',r' → logprob: -19.250030517578125
    10. ')' → logprob: -19.375030517578125

Token 213: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.0003662020608317107
    2. ',' → logprob: -8.0003662109375
    3. '-' → logprob: -10.7503662109375
    4. ' ,' → logprob: -11.8753662109375
    5. ',r' → logprob: -14.0003662109375
    6. ',b' → logprob: -15.0003662109375
    7. ' ' → logprob: -15.1253662109375
    8. ',
' → logprob: -15.2503662109375
    9. ',(' → logprob: -15.5003662109375
    10. '   ' → logprob: -15.8753662109375

Token 214: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.91732100979425e-05
    2. '+' → logprob: -10.375039100646973
    3. ' -' → logprob: -11.750039100646973
    4. ')' → logprob: -17.25004005432129
    5. ' ' → logprob: -17.50004005432129
    6. '1' → logprob: -18.12504005432129
    7. '-)' → logprob: -18.37504005432129
    8. '-
' → logprob: -18.75004005432129
    9. '−' → logprob: -19.00004005432129
    10. '   ' → logprob: -19.12504005432129

Token 215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. '+' → logprob: -13.25000286102295
    3. ' ' → logprob: -14.37500286102295
    4. ')' → logprob: -16.375001907348633
    5. '```' → logprob: -16.750001907348633
    6. ')]' → logprob: -17.625001907348633
    7. '   ' → logprob: -18.937501907348633
    8. '۱' → logprob: -19.375001907348633
    9. '
' → logprob: -19.500001907348633
    10. '),' → logprob: -19.562501907348633

Token 216: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.00014704519708175212
    2. '),' → logprob: -9.375146865844727
    3. ',(' → logprob: -9.750146865844727
    4. ',c' → logprob: -14.000146865844727
    5. ' ),' → logprob: -14.000146865844727
    6. ',' → logprob: -14.125146865844727
    7. '(c' → logprob: -14.500146865844727
    8. '),
' → logprob: -14.625146865844727
    9. ')' → logprob: -15.625146865844727
    10. 'c' → logprob: -16.125146865844727

Token 217: 'r' (ID: 81)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.006745805032551289
    2. 'r' → logprob: -5.0067458152771
    3. ' c' → logprob: -10.506745338439941
    4. ')c' → logprob: -13.131745338439941
    5. '   ' → logprob: -15.256745338439941
    6. '```' → logprob: -15.381745338439941
    7. ' r' → logprob: -15.756745338439941
    8. ')' → logprob: -16.256746292114258
    9. ' ' → logprob: -16.256746292114258
    10. '(c' → logprob: -16.881746292114258

Token 218: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.0017669318476691842
    2. ',' → logprob: -6.501767158508301
    3. '+' → logprob: -8.7517671585083
    4. 'c' → logprob: -9.7517671585083
    5. ' ,' → logprob: -10.1267671585083
    6. '+c' → logprob: -13.0017671585083
    7. '+,' → logprob: -13.2517671585083
    8. ',r' → logprob: -13.8767671585083
    9. ',
' → logprob: -14.3767671585083
    10. ' ' → logprob: -15.0017671585083

Token 219: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0325924449716695e-05
    2. ' +' → logprob: -12.37501049041748
    3. ')]' → logprob: -12.75001049041748
    4. '1' → logprob: -13.12501049041748
    5. ')' → logprob: -15.12501049041748
    6. '-' → logprob: -15.25001049041748
    7. ')])' → logprob: -16.125009536743164
    8. ')][' → logprob: -16.375009536743164
    9. '+c' → logprob: -16.375009536743164
    10. '),(' → logprob: -16.750009536743164

Token 220: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. '+' → logprob: -12.125006675720215
    3. ' ' → logprob: -14.187506675720215
    4. ')' → logprob: -15.437506675720215
    5. '```' → logprob: -15.562506675720215
    6. '0' → logprob: -16.93750762939453
    7. 'r' → logprob: -18.00000762939453
    8. '11' → logprob: -18.00000762939453
    9. '۱' → logprob: -18.00000762939453
    10. '(' → logprob: -18.12500762939453

Token 221: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.16426798701286316
    2. ')' → logprob: -1.9142680168151855
    3. ']' → logprob: -5.5392680168151855
    4. ' )' → logprob: -9.414267539978027
    5. ')])' → logprob: -12.039267539978027
    6. ' ]' → logprob: -12.289267539978027
    7. '       ' → logprob: -12.539267539978027
    8. '   ' → logprob: -12.664267539978027
    9. '])' → logprob: -12.789267539978027
    10. '))' → logprob: -13.164267539978027

Token 222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06347735971212387
    2. 'return' → logprob: -3.0634772777557373
    3. '
' → logprob: -4.938477516174316
    4. ' return' → logprob: -5.438477516174316
    5. ')' → logprob: -6.563477516174316
    6. '   ' → logprob: -6.688477516174316
    7. ',' → logprob: -9.688477516174316
    8. '[]' → logprob: -9.688477516174316
    9. '        
' → logprob: -9.688477516174316
    10. 'result' → logprob: -9.813477516174316

Token 223: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8121117949485779
    2. 'return' (adapté à ' return') → logprob: -0.9371117949485779
    3. '       ' → logprob: -1.8121118545532227
    4. '
' → logprob: -7.062111854553223
    5. '   ' → logprob: -10.187111854553223
    6. 'result' → logprob: -10.312111854553223
    7. '[' → logprob: -10.812111854553223
    8. ' result' → logprob: -11.187111854553223
    9. '        
' → logprob: -11.312111854553223
    10. ' 
' → logprob: -12.562111854553223

Token 224: ' [' (ID: 723)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.5687631964683533
    2. '[pos' → logprob: -1.318763256072998
    3. '[' → logprob: -2.568763256072998
    4. '[c' → logprob: -2.568763256072998
    5. '[(' → logprob: -5.818763256072998
    6. ' [' → logprob: -6.568763256072998
    7. '[p' → logprob: -6.568763256072998
    8. '[list' → logprob: -6.568763256072998
    9. '[i' → logprob: -6.818763256072998
    10. '[row' → logprob: -7.193763256072998

Token 225: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.30937424302101135
    2. 'n' → logprob: -1.434374213218689
    3. 'neighbor' → logprob: -4.8093743324279785
    4. 'nbr' → logprob: -4.9343743324279785
    5. 'pos' → logprob: -5.5593743324279785
    6. 'cand' → logprob: -5.9343743324279785
    7. 'nb' → logprob: -6.0593743324279785
    8. 'candidate' → logprob: -6.8093743324279785
    9. 'nc' → logprob: -7.6843743324279785
    10. ' p' → logprob: -7.8093743324279785

Token 226: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0052478681318461895
    2. 'for' → logprob: -5.255248069763184
    3. ' p' → logprob: -11.380248069763184
    4. ' ' → logprob: -13.505248069763184
    5. 'p' → logprob: -14.130248069763184
    6. ')' → logprob: -14.880248069763184
    7. '(p' → logprob: -17.130247116088867
    8. '	for' → logprob: -17.130247116088867
    9. ' in' → logprob: -17.255247116088867
    10. '
' → logprob: -17.880247116088867

Token 227: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1269284337759018
    2. ' p' → logprob: -2.1269283294677734
    3. '(p' → logprob: -16.376928329467773
    4. ' ' → logprob: -16.501928329467773
    5. '	p' → logprob: -16.751928329467773
    6. '_p' → logprob: -17.751928329467773
    7. ',' → logprob: -18.126928329467773
    8. ')p' → logprob: -18.376928329467773
    9. '<p' → logprob: -18.376928329467773
    10. ' ' → logprob: -18.439428329467773

Token 228: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12946689128875732
    2. ' p' → logprob: -2.254467010498047
    3. 'p' → logprob: -4.629467010498047
    4. 'in' → logprob: -5.004467010498047
    5. ' ' → logprob: -11.129467010498047
    6. '(p' → logprob: -11.254467010498047
    7. ',' → logprob: -12.629467010498047
    8. ',p' → logprob: -12.754467010498047
    9. 's' → logprob: -13.629467010498047
    10. 'e' → logprob: -14.629467010498047

Token 229: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00103352265432477
    2. ' candidates' → logprob: -6.876033306121826
    3. '[c' → logprob: -15.251033782958984
    4. '   ' → logprob: -16.126033782958984
    5. 'candidate' → logprob: -16.376033782958984
    6. '_candidates' → logprob: -16.376033782958984
    7. 'self' → logprob: -16.626033782958984
    8. 'andidates' → logprob: -16.626033782958984
    9. '[' → logprob: -17.001033782958984
    10. 'cand' → logprob: -17.376033782958984

Token 230: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.00026896485360339284
    2. 'if' → logprob: -8.250268936157227
    3. ' ' → logprob: -12.625268936157227
    4. ' in' → logprob: -13.375268936157227
    5. '       ' → logprob: -14.250268936157227
    6. '        ' → logprob: -14.250268936157227
    7. '           ' → logprob: -14.500268936157227
    8. '   ' → logprob: -14.875268936157227
    9. '    ' → logprob: -15.250268936157227
    10. ' p' → logprob: -15.750268936157227

Token 231: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014176322147250175
    2. ' self' → logprob: -4.264176368713379
    3. '(self' → logprob: -12.514176368713379
    4. '
' → logprob: -13.139176368713379
    5. 'p' → logprob: -13.264176368713379
    6. ' ' → logprob: -13.389176368713379
    7. '   ' → logprob: -13.764176368713379
    8. '0' → logprob: -14.389176368713379
    9. ' p' → logprob: -15.139176368713379
    10. '	self' → logprob: -15.389176368713379

Token 232: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.00016206118743866682
    2. '.' → logprob: -8.750162124633789
    3. 'is' → logprob: -12.875162124633789
    4. ' .' → logprob: -14.125162124633789
    5. 'self' → logprob: -15.875162124633789
    6. ').' → logprob: -16.62516212463379
    7. '.
' → logprob: -17.87516212463379
    8. '.s' → logprob: -18.00016212463379
    9. '.isnan' → logprob: -18.25016212463379
    10. '   ' → logprob: -18.37516212463379

Token 233: '_enter' (ID: 88636)
  Prédit: '_enter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_enter' → logprob: -0.00025084958178922534
    2. '_' → logprob: -9.000250816345215
    3. 'enter' → logprob: -9.375250816345215
    4. '_ENTER' → logprob: -10.875250816345215
    5. 'Enter' → logprob: -11.750250816345215
    6. ' _' → logprob: -12.000250816345215
    7. ' enter' → logprob: -13.750250816345215
    8. '	enter' → logprob: -14.000250816345215
    9. '_ent' → logprob: -14.375250816345215
    10. '_in' → logprob: -14.375250816345215

Token 234: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.0002141458389814943
    2. 'r' → logprob: -9.125214576721191
    3. 'er' → logprob: -9.375214576721191
    4. 'ble' → logprob: -12.125214576721191
    5. 'table' → logprob: -12.375214576721191
    6. 'enter' → logprob: -12.875214576721191
    7. 'ter' → logprob: -13.500214576721191
    8. 't' → logprob: -13.625214576721191
    9. 'p' → logprob: -13.625214576721191
    10. ' able' → logprob: -14.250214576721191

Token 235: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0003445216570980847
    2. '(' → logprob: -8.000344276428223
    3. ' (' → logprob: -11.750344276428223
    4. ')' → logprob: -14.500344276428223
    5. '(
' → logprob: -15.000344276428223
    6. 'p' → logprob: -15.875344276428223
    7. ' p' → logprob: -17.00034523010254
    8. ' ' → logprob: -17.12534523010254
    9. ')(' → logprob: -17.62534523010254
    10. ' )' → logprob: -17.75034523010254

Token 236: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00016218038217630237
    2. ' )' → logprob: -9.000162124633789
    3. ']' → logprob: -10.625162124633789
    4. ')' → logprob: -11.375162124633789
    5. ' ]' → logprob: -13.250162124633789
    6. '   ' → logprob: -15.000162124633789
    7. ' ' → logprob: -15.125162124633789
    8. ')]
' → logprob: -15.750162124633789
    9. '])' → logprob: -16.25016212463379
    10. ' ' → logprob: -16.75016212463379

Token 237: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46550995111465454
    2. '<|end|>' → logprob: -1.4655098915100098
    3. ')' → logprob: -2.4655098915100098
    4. '    
' → logprob: -3.4655098915100098
    5. ':' → logprob: -5.21550989151001
    6. '  
' → logprob: -5.59050989151001
    7. 'def' → logprob: -5.84050989151001
    8. ' 
' → logprob: -6.34050989151001
    9. '\n' → logprob: -6.59050989151001
    10. '\' → logprob: -6.59050989151001

Token 238: ' Abstract' (ID: 17413)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.027557043358683586
    2. '
' → logprob: -3.777557134628296
    3. '#' → logprob: -6.402556896209717
    4. 'def' → logprob: -6.652556896209717
    5. ' class' → logprob: -6.777556896209717
    6. '

' → logprob: -9.402557373046875
    7. '  
' → logprob: -11.027557373046875
    8. '```' → logprob: -11.277557373046875
    9. 'import' → logprob: -11.402557373046875
    10. ' 
' → logprob: -11.402557373046875

Token 239: ' path' (ID: 3104)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 240: ' state' (ID: 2608)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.47172844409942627
    2. ' class' → logprob: -1.4717284440994263
    3. '<|end|>' → logprob: -3.0967283248901367
    4. 'finder' → logprob: -3.5967283248901367
    5. '
' → logprob: -3.8467283248901367
    6. ':' → logprob: -4.596728324890137
    7. '#' → logprob: -4.721728324890137
    8. 's' → logprob: -4.721728324890137
    9. 'finding' → logprob: -5.096728324890137
    10. '<|end|>' → logprob: -5.471728324890137

Token 241: ' to' (ID: 316)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0038467480335384607
    2. ' class' → logprob: -5.878846645355225
    3. '
' → logprob: -7.378846645355225
    4. '<|end|>' → logprob: -8.378847122192383
    5. 's' → logprob: -9.003847122192383
    6. ':' → logprob: -10.628847122192383
    7. '<class' → logprob: -11.003847122192383
    8. '<|end|>' → logprob: -12.503847122192383
    9. ':
' → logprob: -12.878847122192383
    10. ',' → logprob: -13.003847122192383

Token 242: ' be' (ID: 413)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.4731423556804657
    2. 'expl' → logprob: -2.473142385482788
    3. ' continue' → logprob: -2.973142385482788
    4. ' be' → logprob: -2.973142385482788
    5. 'continue' → logprob: -3.098142385482788
    6. ' class' → logprob: -3.098142385482788
    7. ' explore' → logprob: -3.598142385482788
    8. ' represent' → logprob: -4.348142147064209
    9. ' ' → logprob: -4.848142147064209
    10. 'represent' → logprob: -5.223142147064209

Token 243: ' extended' (ID: 17290)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -1.3738088607788086
    2. 'defined' → logprob: -1.3738088607788086
    3. 'implemented' → logprob: -1.6238088607788086
    4. 'completed' → logprob: -1.9988088607788086
    5. ' subclass' → logprob: -3.2488088607788086
    6. 'expl' → logprob: -3.3738088607788086
    7. ' used' → logprob: -3.7488088607788086
    8. 'continued' → logprob: -4.123808860778809
    9. 'expanded' → logprob: -4.623808860778809
    10. ' defined' → logprob: -4.873808860778809

Token 244: ' by' (ID: 656)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.004135153256356716
    2. '
' → logprob: -5.5041351318359375
    3. ' class' → logprob: -9.879135131835938
    4. '<class' → logprob: -12.879135131835938
    5. ':
' → logprob: -13.754135131835938
    6. ':' → logprob: -15.004135131835938
    7. '

' → logprob: -15.504135131835938
    8. '<|end|>' → logprob: -15.504135131835938
    9. '```' → logprob: -15.629135131835938
    10. '
' → logprob: -15.629135131835938

Token 245: ' the' (ID: 290)
  Prédit: ' subclasses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' subclasses' → logprob: -0.35635802149772644
    2. 'specific' → logprob: -2.356358051300049
    3. 'con' → logprob: -2.731358051300049
    4. 'user' → logprob: -3.106358051300049
    5. 'users' → logprob: -3.356358051300049
    6. 'sub' → logprob: -4.481358051300049
    7. 'the' → logprob: -4.731358051300049
    8. ' specific' → logprob: -4.731358051300049
    9. ' users' → logprob: -5.356358051300049
    10. 'other' → logprob: -5.356358051300049

Token 246: ' solver' (ID: 63271)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'user' → logprob: -1.406790852546692
    2. ' user' → logprob: -1.406790852546692
    3. 'solver' → logprob: -2.0317907333374023
    4. 'search' → logprob: -3.1567907333374023
    5. ' solver' → logprob: -3.4067907333374023
    6. ' next' → logprob: -3.5317907333374023
    7. 'next' → logprob: -3.6567907333374023
    8. 'path' → logprob: -3.6567907333374023
    9. 'solution' → logprob: -3.7817907333374023
    10. ' specific' → logprob: -3.7817907333374023

Token 247: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.004142861347645521
    2. '
' → logprob: -5.504142761230469
    3. ' class' → logprob: -9.754142761230469
    4. '<|end|>' → logprob: -13.504142761230469
    5. '<class' → logprob: -13.504142761230469
    6. '  
' → logprob: -14.754142761230469
    7. '

' → logprob: -14.879142761230469
    8. '```' → logprob: -15.004142761230469
    9. ':
' → logprob: -15.129142761230469
    10. '"class' → logprob: -15.254142761230469

Token 248: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00013393278641160578
    2. '
' → logprob: -9.500133514404297
    3. ' class' → logprob: -9.750133514404297
    4. '<class' → logprob: -14.750133514404297
    5. '"class' → logprob: -16.000133514404297
    6. ' 
' → logprob: -16.375133514404297
    7. '

' → logprob: -16.875133514404297
    8. '```' → logprob: -17.000133514404297
    9. 'c' → logprob: -17.250133514404297
    10. 'clas' → logprob: -17.375133514404297

Token 249: ' Path' (ID: 14027)
  Prédit: ' Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Path' → logprob: -0.24759504199028015
    2. 'Path' → logprob: -1.7475950717926025
    3. ' Lab' → logprob: -3.6225950717926025
    4. 'object' → logprob: -5.247594833374023
    5. 'Lab' → logprob: -5.247594833374023
    6. ' object' → logprob: -6.372594833374023
    7. 'State' → logprob: -6.622594833374023
    8. ' Pathfinder' → logprob: -6.872594833374023
    9. '_path' → logprob: -7.122594833374023
    10. ' State' → logprob: -7.247594833374023

Token 250: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -0.0007897364557720721
    2. '_State' → logprob: -8.125789642333984
    3. ':' → logprob: -8.500789642333984
    4. '_state' → logprob: -8.875789642333984
    5. ' State' → logprob: -9.625789642333984
    6. ':
' → logprob: -10.125789642333984
    7. '<State' → logprob: -11.625789642333984
    8. '_STATE' → logprob: -11.750789642333984
    9. '	State' → logprob: -11.875789642333984
    10. 'state' → logprob: -12.000789642333984

Token 251: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008804833516478539
    2. ':
' → logprob: -4.758804798126221
    3. '(object' → logprob: -8.883805274963379
    4. ' :' → logprob: -11.258805274963379
    5. '(' → logprob: -11.258805274963379
    6. '(n' → logprob: -11.633805274963379
    7. '():' → logprob: -12.133805274963379
    8. ':

' → logprob: -12.633805274963379
    9. '):' → logprob: -13.008805274963379
    10. '(Abstract' → logprob: -13.258805274963379

Token 252: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00031615851912647486
    2. '    ' → logprob: -8.875316619873047
    3. '    
' → logprob: -9.625316619873047
    4. '<|end|>' → logprob: -10.000316619873047
    5. ' pass' → logprob: -10.750316619873047
    6. ' def' → logprob: -11.000316619873047
    7. ':' → logprob: -11.625316619873047
    8. ')' → logprob: -12.375316619873047
    9. '
' → logprob: -12.875316619873047
    10. '  ' → logprob: -13.000316619873047

Token 253: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5677762627601624
    2. '   ' → logprob: -1.3177762031555176
    3. 'def' (adapté à ' def') → logprob: -1.9427762031555176
    4. ' pass' → logprob: -4.067776203155518
    5. 'pass' → logprob: -6.067776203155518
    6. ' __' → logprob: -6.942776203155518
    7. '    ' → logprob: -7.192776203155518
    8. '__' → logprob: -7.567776203155518
    9. ' ' → logprob: -8.442776679992676
    10. '  ' → logprob: -9.317776679992676

Token 254: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.11381623148918152
    2. '__' → logprob: -2.363816261291504
    3. 'init' → logprob: -4.488816261291504
    4. ' def' → logprob: -6.863816261291504
    5. ' init' → logprob: -7.113816261291504
    6. '_init' → logprob: -8.238816261291504
    7. 'def' → logprob: -9.113816261291504
    8. '___' → logprob: -11.363816261291504
    9. '```' → logprob: -12.113816261291504
    10. '_' → logprob: -12.238816261291504

Token 255: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.3856492842023727e-06
    2. ' init' → logprob: -13.750000953674316
    3. 'def' → logprob: -16.250001907348633
    4. '_init' → logprob: -16.625001907348633
    5. '```' → logprob: -17.375001907348633
    6. 'pass' → logprob: -17.500001907348633
    7. 'class' → logprob: -17.875001907348633
    8. '_' → logprob: -18.500001907348633
    9. '(init' → logprob: -18.500001907348633
    10. '   ' → logprob: -18.500001907348633

Token 256: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.18241821229457855
    2. '(self' → logprob: -1.8074182271957397
    3. '__' → logprob: -7.057418346405029
    4. ' (' → logprob: -7.307418346405029
    5. '(' → logprob: -7.932418346405029
    6. 'self' → logprob: -8.182417869567871
    7. '_(' → logprob: -8.557417869567871
    8. '__(
' → logprob: -8.682417869567871
    9. ',' → logprob: -9.932417869567871
    10. '__((' → logprob: -10.932417869567871

Token 257: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004106184933334589
    2. ')' → logprob: -6.129106044769287
    3. ' self' → logprob: -6.379106044769287
    4. '):
' → logprob: -8.754106521606445
    5. '   ' → logprob: -11.254106521606445
    6. ',' → logprob: -11.629106521606445
    7. 'pos' → logprob: -11.754106521606445
    8. '(self' → logprob: -12.004106521606445
    9. '
' → logprob: -12.129106521606445
    10. '):

' → logprob: -12.754106521606445

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016553020104765892
    2. ' ,' → logprob: -7.251655101776123
    3. 'self' → logprob: -7.376655101776123
    4. '):' → logprob: -8.751655578613281
    5. ',pos' → logprob: -9.876655578613281
    6. '):
' → logprob: -10.126655578613281
    7. ',
' → logprob: -11.001655578613281
    8. ' self' → logprob: -11.501655578613281
    9. ',self' → logprob: -11.626655578613281
    10. ')' → logprob: -11.626655578613281

Token 259: ' position' (ID: 4010)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.12008333951234818
    2. 'position' → logprob: -2.7450833320617676
    3. ' pos' → logprob: -3.6200833320617676
    4. ' position' → logprob: -4.245083332061768
    5. 'current' → logprob: -5.620083332061768
    6. 'path' → logprob: -6.870083332061768
    7. ' current' → logprob: -6.995083332061768
    8. ')' → logprob: -7.495083332061768
    9. 'positions' → logprob: -7.495083332061768
    10. 'lab' → logprob: -8.495083808898926

Token 260: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6460670232772827
    2. '):' → logprob: -0.7710670232772827
    3. ' ):' → logprob: -5.271067142486572
    4. ':' → logprob: -5.271067142486572
    5. '):
' → logprob: -6.646067142486572
    6. ')' → logprob: -6.771067142486572
    7. ' ,' → logprob: -7.771067142486572
    8. '<|end|>' → logprob: -9.521066665649414
    9. ' )' → logprob: -10.396066665649414
    10. '<|end|>' → logprob: -10.521066665649414

Token 261: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.43774500489234924
    2. ' Tuple' → logprob: -1.0627449750900269
    3. ')' → logprob: -5.937745094299316
    4. 'position' → logprob: -5.937745094299316
    5. 'tuple' → logprob: -7.062745094299316
    6. '):' → logprob: -7.312745094299316
    7. ' position' → logprob: -7.562745094299316
    8. ' tuple' → logprob: -7.687745094299316
    9. 'int' → logprob: -7.937745094299316
    10. ',' → logprob: -8.562745094299316

Token 262: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -7.226628895296017e-06
    2. 'int' → logprob: -11.875007629394531
    3. ',int' → logprob: -15.375007629394531
    4. '[' → logprob: -17.12500762939453
    5. '<int' → logprob: -17.50000762939453
    6. '[
' → logprob: -18.00000762939453
    7. ' [' → logprob: -18.12500762939453
    8. '(int' → logprob: -18.50000762939453
    9. ' int' → logprob: -18.62500762939453
    10. '   ' → logprob: -19.00000762939453

Token 263: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.06332788616418839
    2. ',' → logprob: -2.8133277893066406
    3. 'int' → logprob: -6.938327789306641
    4. '[int' → logprob: -7.938327789306641
    5. ' ,' → logprob: -10.81332778930664
    6. ']int' → logprob: -12.06332778930664
    7. ' int' → logprob: -13.18832778930664
    8. ':int' → logprob: -13.31332778930664
    9. '<int' → logprob: -13.43832778930664
    10. '=int' → logprob: -14.56332778930664

Token 264: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.4832800626754761
    2. ',' → logprob: -0.9832800626754761
    3. '),' → logprob: -4.858280181884766
    4. ']):' → logprob: -7.108280181884766
    5. '])' → logprob: -8.983280181884766
    6. ']' → logprob: -9.233280181884766
    7. '>,' → logprob: -9.358280181884766
    8. '):' → logprob: -9.733280181884766
    9. ')' → logprob: -9.733280181884766
    10. ' ,' → logprob: -9.983280181884766

Token 265: ' visited' (ID: 18416)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -1.042973279953003
    2. 'visited' → logprob: -1.167973279953003
    3. ' collected' → logprob: -1.792973279953003
    4. ' treasures' → logprob: -2.917973279953003
    5. ' visited' → logprob: -3.042973279953003
    6. 'tre' → logprob: -3.167973279953003
    7. '   ' → logprob: -4.917973518371582
    8. ' path' → logprob: -5.292973518371582
    9. 'path' → logprob: -5.792973518371582
    10. '    ' → logprob: -6.542973518371582

Token 266: '_t' (ID: 838)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23488706350326538
    2. '):' → logprob: -2.23488712310791
    3. ':Set' → logprob: -2.60988712310791
    4. ',' → logprob: -3.85988712310791
    5. '):
' → logprob: -6.48488712310791
    6. '_set' → logprob: -6.73488712310791
    7. '=set' → logprob: -6.73488712310791
    8. ')' → logprob: -6.85988712310791
    9. ':set' → logprob: -7.23488712310791
    10. ' :' → logprob: -7.98488712310791

Token 267: 'reas' (ID: 20712)
  Prédit: 'reas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reas' → logprob: -0.02264045923948288
    2. 're' → logprob: -4.272640228271484
    3. 'res' → logprob: -5.647640228271484
    4. 'rees' → logprob: -6.522640228271484
    5. 'uples' → logprob: -6.647640228271484
    6. 'o' → logprob: -8.272640228271484
    7. '_set' → logprob: -8.397640228271484
    8. 'r' → logprob: -8.522640228271484
    9. 'ures' → logprob: -8.647640228271484
    10. 'set' → logprob: -8.772640228271484

Token 268: 'ures' (ID: 1609)
  Prédit: 'ures'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ures' → logprob: -8.304016228066757e-05
    2. 's' → logprob: -10.250082969665527
    3. 'ured' → logprob: -11.000082969665527
    4. 'asures' → logprob: -12.000082969665527
    5. 'ure' → logprob: -12.125082969665527
    6. '_' → logprob: -12.500082969665527
    7. 'uries' → logprob: -12.750082969665527
    8. 't' → logprob: -13.375082969665527
    9. 'res' → logprob: -13.500082969665527
    10. '   ' → logprob: -13.625082969665527

Token 269: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05785364657640457
    2. '):' → logprob: -3.0578536987304688
    3. ',' → logprob: -5.182853698730469
    4. ':Set' → logprob: -6.057853698730469
    5. ')' → logprob: -7.557853698730469
    6. ' ):' → logprob: -8.557853698730469
    7. ':set' → logprob: -8.932853698730469
    8. '):
' → logprob: -9.182853698730469
    9. ']:' → logprob: -9.182853698730469
    10. '=set' → logprob: -9.682853698730469

Token 270: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.445959210395813
    2. 'fro' → logprob: -1.445959210395813
    3. ' Set' → logprob: -2.1959590911865234
    4. ' fro' → logprob: -4.445959091186523
    5. 'Frozen' → logprob: -7.570959091186523
    6. 'set' → logprob: -8.195959091186523
    7. ')' → logprob: -8.570959091186523
    8. ' set' → logprob: -9.570959091186523
    9. '	Set' → logprob: -10.445959091186523
    10. 'f' → logprob: -10.570959091186523

Token 271: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.06208588555455208
    2. '[' → logprob: -2.8120858669281006
    3. '):' → logprob: -10.43708610534668
    4. ')' → logprob: -10.56208610534668
    5. 'int' → logprob: -10.81208610534668
    6. '[Int' → logprob: -11.81208610534668
    7. '):
' → logprob: -11.93708610534668
    8. '[(' → logprob: -12.18708610534668
    9. '<int' → logprob: -12.31208610534668
    10. '<|end|>' → logprob: -12.56208610534668

Token 272: '],' (ID: 2155)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.15309593081474304
    2. ']):
' → logprob: -2.7780959606170654
    3. '],' → logprob: -3.1530959606170654
    4. '])' → logprob: -4.403095722198486
    5. ']' → logprob: -4.778095722198486
    6. '):' → logprob: -5.028095722198486
    7. ',' → logprob: -5.653095722198486
    8. ')' → logprob: -6.028095722198486
    9. '>):' → logprob: -6.028095722198486
    10. '),' → logprob: -7.653095722198486

Token 273: ' fragile' (ID: 68256)
  Prédit: ' steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' steps' → logprob: -0.6351728439331055
    2. ' path' → logprob: -1.3851728439331055
    3. ' distance' → logprob: -2.7601728439331055
    4. ' parent' → logprob: -3.0101728439331055
    5. 'steps' → logprob: -3.7601728439331055
    6. ' depth' → logprob: -4.0101728439331055
    7. ' cost' → logprob: -4.2601728439331055
    8. ' ' → logprob: -4.3851728439331055
    9. 'distance' → logprob: -4.7601728439331055
    10. ' step' → logprob: -5.2601728439331055

Token 274: '_map' (ID: 11824)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9148469567298889
    2. '=' → logprob: -1.4148468971252441
    3. '):' → logprob: -2.039846897125244
    4. ',' → logprob: -2.539846897125244
    5. '=False' → logprob: -2.914846897125244
    6. '_positions' → logprob: -3.539846897125244
    7. '=True' → logprob: -3.914846897125244
    8. ' =' → logprob: -4.664846897125244
    9. ')' → logprob: -5.289846897125244
    10. '):
' → logprob: -5.539846897125244

Token 275: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.30905118584632874
    2. ':' → logprob: -1.4340511560440063
    3. '):
' → logprob: -4.059051036834717
    4. ' ):' → logprob: -5.309051036834717
    5. ',' → logprob: -6.059051036834717
    6. ')' → logprob: -6.309051036834717
    7. '=None' → logprob: -7.684051036834717
    8. '=' → logprob: -8.309051513671875
    9. ' :' → logprob: -8.809051513671875
    10. ' =' → logprob: -10.059051513671875

Token 276: ' Set' (ID: 3957)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.02679228037595749
    2. 'List' → logprob: -4.901792049407959
    3. 'Set' → logprob: -5.526792049407959
    4. ' Dict' → logprob: -5.526792049407959
    5. 'dict' → logprob: -5.776792049407959
    6. '):' → logprob: -5.901792049407959
    7. ')' → logprob: -6.526792049407959
    8. 'Tuple' → logprob: -6.776792049407959
    9. '):
' → logprob: -7.026792049407959
    10. 'None' → logprob: -7.651792049407959

Token 277: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.453703910112381
    2. '[int' → logprob: -1.0787038803100586
    3. '<|end|>' → logprob: -4.453703880310059
    4. ')' → logprob: -4.703703880310059
    5. '[(' → logprob: -6.828703880310059
    6. '):' → logprob: -7.078703880310059
    7. '[T' → logprob: -7.703703880310059
    8. '[str' → logprob: -8.078703880310059
    9. '<|end|>' → logprob: -8.578703880310059
    10. '<Tuple' → logprob: -8.703703880310059

Token 278: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.049631763249635696
    2. 'int' → logprob: -4.049631595611572
    3. '[int' → logprob: -4.174631595611572
    4. ')' → logprob: -5.299631595611572
    5. '[' → logprob: -5.299631595611572
    6. '(' → logprob: -6.424631595611572
    7. '(int' → logprob: -6.549631595611572
    8. ' Tuple' → logprob: -7.424631595611572
    9. ']' → logprob: -7.549631595611572
    10. '])' → logprob: -7.549631595611572

Token 279: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.00010115911572938785
    2. 'int' → logprob: -9.625101089477539
    3. ',int' → logprob: -10.750101089477539
    4. '<int' → logprob: -12.000101089477539
    5. ']int' → logprob: -13.000101089477539
    6. '[' → logprob: -13.375101089477539
    7. ')' → logprob: -14.250101089477539
    8. '(int' → logprob: -14.250101089477539
    9. '   ' → logprob: -14.375101089477539
    10. '[
' → logprob: -14.500101089477539

Token 280: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.0010914006270468235
    2. ',' → logprob: -7.001091480255127
    3. ' ,' → logprob: -9.501091003417969
    4. '[int' → logprob: -9.626091003417969
    5. 'int' → logprob: -11.251091003417969
    6. ']int' → logprob: -11.251091003417969
    7. '<int' → logprob: -12.751091003417969
    8. ',bool' → logprob: -12.876091003417969
    9. ',Integer' → logprob: -13.251091003417969
    10. ',
' → logprob: -13.876091003417969

Token 281: ']]' (ID: 8928)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5438491702079773
    2. ')])' → logprob: -2.293849229812622
    3. ']>' → logprob: -2.418849229812622
    4. ']' → logprob: -2.543849229812622
    5. ')]' → logprob: -2.668849229812622
    6. '])' → logprob: -3.293849229812622
    7. '>]' → logprob: -3.543849229812622
    8. ']])' → logprob: -5.668848991394043
    9. ')],' → logprob: -6.418848991394043
    10. '])]' → logprob: -6.543848991394043

Token 282: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01899082027375698
    2. ',' → logprob: -4.268990993499756
    3. '):
' → logprob: -5.393990993499756
    4. ')' → logprob: -8.643990516662598
    5. ' ):' → logprob: -9.768990516662598
    6. '   ' → logprob: -10.768990516662598
    7. '       ' → logprob: -12.268990516662598
    8. ':' → logprob: -13.018990516662598
    9. '):
' → logprob: -13.143990516662598
    10. '):

' → logprob: -13.393990516662598

Token 283: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.180879816180095e-05
    2. 'self' → logprob: -11.375051498413086
    3. ' self' → logprob: -11.625051498413086
    4. '<|end|>' → logprob: -11.750051498413086
    5. '   ' → logprob: -12.000051498413086
    6. ')' → logprob: -12.000051498413086
    7. ',' → logprob: -12.250051498413086
    8. '):
' → logprob: -12.625051498413086
    9. '        
' → logprob: -14.000051498413086
    10. '):' → logprob: -14.250051498413086

Token 284: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.12416142970323563
    2. ' self' → logprob: -2.2491614818573
    3. '       ' → logprob: -4.499161243438721
    4. 'position' → logprob: -9.124161720275879
    5. ' position' → logprob: -10.749161720275879
    6. '   ' → logprob: -10.999161720275879
    7. '	self' → logprob: -12.374161720275879
    8. ' ' → logprob: -13.624161720275879
    9. 'super' → logprob: -13.874161720275879
    10. ' ' → logprob: -14.499161720275879

Token 285: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.09182065725326538
    2. '.' → logprob: -2.46682071685791
    3. ' position' → logprob: -6.84182071685791
    4. 'position' → logprob: -6.84182071685791
    5. ' =' → logprob: -7.96682071685791
    6. '=' → logprob: -8.09182071685791
    7. ' .' → logprob: -10.09182071685791
    8. ',' → logprob: -11.46682071685791
    9. '	position' → logprob: -11.46682071685791
    10. ':' → logprob: -12.21682071685791

Token 286: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14385904371738434
    2. ',' → logprob: -2.6438591480255127
    3. ' =' → logprob: -2.7688591480255127
    4. ' ,' → logprob: -9.268858909606934
    5. '<|end|>' → logprob: -10.018858909606934
    6. ')' → logprob: -10.643858909606934
    7. '<|end|>' → logprob: -13.143858909606934
    8. ')=' → logprob: -13.518858909606934
    9. ',
' → logprob: -14.018858909606934
    10. '),' → logprob: -14.143858909606934

Token 287: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.12695519626140594
    2. 'position' → logprob: -2.126955270767212
    3. '(position' → logprob: -10.626955032348633
    4. '	position' → logprob: -13.126955032348633
    5. ' (' → logprob: -14.876955032348633
    6. ' ' → logprob: -16.126955032348633
    7. '[position' → logprob: -16.126955032348633
    8. '.position' → logprob: -16.376955032348633
    9. '<|end|>' → logprob: -17.251955032348633
    10. '        ' → logprob: -17.376955032348633

Token 288: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007132692728191614
    2. '<|end|>' → logprob: -5.632132530212402
    3. '
' → logprob: -5.757132530212402
    4. ',' → logprob: -8.632132530212402
    5. 'self' → logprob: -9.632132530212402
    6. ',
' → logprob: -9.757132530212402
    7. '        
' → logprob: -10.507132530212402
    8. '<|end|>' → logprob: -11.632132530212402
    9. '   ' → logprob: -12.007132530212402
    10. '      ' → logprob: -12.757132530212402

Token 289: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4843025505542755
    2. '
' → logprob: -1.1093025207519531
    3. '<|end|>' → logprob: -3.609302520751953
    4. 'self' → logprob: -4.484302520751953
    5. ',' → logprob: -5.109302520751953
    6. '        
' → logprob: -5.234302520751953
    7. ',
' → logprob: -5.859302520751953
    8. '  
' → logprob: -7.484302520751953
    9. ' 
' → logprob: -7.734302520751953
    10. '    
' → logprob: -9.484302520751953

Token 290: ' Current' (ID: 14536)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06568528711795807
    2. ' self' → logprob: -2.815685272216797
    3. 'visited' → logprob: -5.940685272216797
    4. '       ' → logprob: -7.065685272216797
    5. ' visited' → logprob: -8.940685272216797
    6. '
' → logprob: -9.940685272216797
    7. 'position' → logprob: -11.190685272216797
    8. '        ' → logprob: -11.815685272216797
    9. 'Visited' → logprob: -11.815685272216797
    10. ' ' → logprob: -12.315685272216797

Token 291: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.28850674629211426
    2. 'position' → logprob: -1.4135067462921143
    3. ',' → logprob: -5.538506507873535
    4. ' ,' → logprob: -6.038506507873535
    5. '       ' → logprob: -8.163506507873535
    6. '_position' → logprob: -8.663506507873535
    7. '        ' → logprob: -9.163506507873535
    8. 'visited' → logprob: -10.038506507873535
    9. ' location' → logprob: -10.163506507873535
    10. ' visited' → logprob: -10.163506507873535

Token 292: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11265818774700165
    2. '<|end|>' → logprob: -2.3626582622528076
    3. '
' → logprob: -4.8626580238342285
    4. ',' → logprob: -5.7376580238342285
    5. '        
' → logprob: -7.2376580238342285
    6. ',
' → logprob: -8.237658500671387
    7. '<|end|>' → logprob: -8.487658500671387
    8. 'self' → logprob: -8.862658500671387
    9. '      ' → logprob: -11.362658500671387
    10. ' 
' → logprob: -11.362658500671387

Token 293: ' T' (ID: 353)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.31316131353378296
    2. ' the' → logprob: -1.5631613731384277
    3. 'self' → logprob: -3.0631613731384277
    4. 'position' → logprob: -4.688161373138428
    5. 'path' → logprob: -6.563161373138428
    6. ' self' → logprob: -6.938161373138428
    7. ' position' → logprob: -7.938161373138428
    8. 'visited' → logprob: -8.93816089630127
    9. '       ' → logprob: -9.43816089630127
    10. '<|end|>' → logprob: -9.68816089630127

Token 294: 'aro' (ID: 8421)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.02055041678249836
    2. 'h' → logprob: -5.64555025100708
    3. 'oken' → logprob: -5.77055025100708
    4. 'ab' → logprob: -6.64555025100708
    5. 'r' → logprob: -6.77055025100708
    6. ',' → logprob: -6.89555025100708
    7. 'the' → logprob: -7.02055025100708
    8. 'urtle' → logprob: -7.14555025100708
    9. 'uple' → logprob: -7.27055025100708
    10. '        ' → logprob: -7.39555025100708

Token 295: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4406038820743561
    2. '<|end|>' → logprob: -1.1906038522720337
    3. '        
' → logprob: -3.8156039714813232
    4. '
' → logprob: -3.9406039714813232
    5. ',' → logprob: -5.190603733062744
    6. '<|end|>' → logprob: -6.565603733062744
    7. '  
' → logprob: -7.065603733062744
    8. ')' → logprob: -7.065603733062744
    9. ' 
' → logprob: -7.440603733062744
    10. '    
' → logprob: -8.190604209899902

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003068622201681137
    2. 'self' → logprob: -5.878068447113037
    3. '
' → logprob: -9.128068923950195
    4. '<|end|>' → logprob: -9.128068923950195
    5. '        
' → logprob: -10.878068923950195
    6. ' self' → logprob: -11.128068923950195
    7. '   ' → logprob: -12.378068923950195
    8. ',' → logprob: -13.253068923950195
    9. '      ' → logprob: -13.378068923950195
    10. ',
' → logprob: -14.378068923950195

Token 297: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00611376715824008
    2. '       ' → logprob: -5.131113529205322
    3. ' self' → logprob: -8.63111400604248
    4. 'visited' → logprob: -12.38111400604248
    5. '   ' → logprob: -14.13111400604248
    6. '
' → logprob: -14.63111400604248
    7. '	self' → logprob: -15.25611400604248
    8. '        
' → logprob: -15.38111400604248
    9. '#' → logprob: -15.50611400604248
    10. ' ' → logprob: -15.63111400604248

Token 298: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -0.040246810764074326
    2. '.' → logprob: -3.4152467250823975
    3. 'visited' → logprob: -5.040246963500977
    4. ' .' → logprob: -9.665246963500977
    5. '.visit' → logprob: -11.540246963500977
    6. ' visited' → logprob: -11.665246963500977
    7. '.visible' → logprob: -12.540246963500977
    8. '.position' → logprob: -12.790246963500977
    9. '.has' → logprob: -13.040246963500977
    10. '.t' → logprob: -13.040246963500977

Token 299: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -1.3306015716807451e-05
    2. 'isted' → logprob: -12.37501335144043
    3. 'it' → logprob: -13.12501335144043
    4. '_' → logprob: -13.37501335144043
    5. '```' → logprob: -13.62501335144043
    6. 'ITED' → logprob: -14.12501335144043
    7. 'iting' → logprob: -14.25001335144043
    8. '
' → logprob: -14.62501335144043
    9. 'ite' → logprob: -15.12501335144043
    10. '   ' → logprob: -15.50001335144043

Token 300: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -8.268254896393046e-05
    2. '_' → logprob: -9.625082969665527
    3. '_frag' → logprob: -12.875082969665527
    4. '_p' → logprob: -13.125082969665527
    5. '_f' → logprob: -13.250082969665527
    6. '_targets' → logprob: -13.250082969665527
    7. ' _' → logprob: -13.250082969665527
    8. '_te' → logprob: -13.875082969665527
    9. ')_' → logprob: -14.125082969665527
    10. '_s' → logprob: -14.125082969665527

Token 301: 'reas' (ID: 20712)
  Prédit: 'reas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reas' → logprob: -0.030472736805677414
    2. 'tre' → logprob: -4.030472755432129
    3. 're' → logprob: -4.780472755432129
    4. '_t' → logprob: -5.905472755432129
    5. 'Treas' → logprob: -7.780472755432129
    6. 't' → logprob: -8.655472755432129
    7. ' treasures' → logprob: -8.905472755432129
    8. 'rea' → logprob: -9.030472755432129
    9. 'res' → logprob: -10.280472755432129
    10. '```' → logprob: -10.780472755432129

Token 302: 'ures' (ID: 1609)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14131514728069305
    2. 'ures' → logprob: -2.266315221786499
    3. 'asures' → logprob: -3.641315221786499
    4. '_' → logprob: -7.39131498336792
    5. 'sure' → logprob: -8.391315460205078
    6. 'Sure' → logprob: -8.641315460205078
    7. 'res' → logprob: -8.641315460205078
    8. '_s' → logprob: -9.141315460205078
    9. '```' → logprob: -9.266315460205078
    10. '>' → logprob: -9.391315460205078

Token 303: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47415226697921753
    2. '=' → logprob: -0.9741522669792175
    3. '=set' → logprob: -9.599152565002441
    4. ':' → logprob: -12.099152565002441
    5. ' ' → logprob: -13.849152565002441
    6. ')' → logprob: -15.099152565002441
    7. ',' → logprob: -15.224152565002441
    8. '<|end|>' → logprob: -15.474152565002441
    9. '.add' → logprob: -16.599151611328125
    10. ' =
' → logprob: -17.224151611328125

Token 304: ' fro' (ID: 16956)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.47408369183540344
    2. ' visited' → logprob: -0.974083662033081
    3. ' set' → logprob: -13.22408390045166
    4. 'set' → logprob: -13.34908390045166
    5. 'fro' → logprob: -13.34908390045166
    6. ' ' → logprob: -14.34908390045166
    7. 'Visited' → logprob: -14.97408390045166
    8. ' fro' → logprob: -15.22408390045166
    9. 'vis' → logprob: -15.72408390045166
    10. '   ' → logprob: -16.224082946777344

Token 305: 'zens' (ID: 33107)
  Prédit: 'zens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zens' → logprob: -0.00047202190035022795
    2. 'zen' → logprob: -7.750472068786621
    3. 'z' → logprob: -10.375472068786621
    4. 'zes' → logprob: -12.375472068786621
    5. 'zent' → logprob: -12.875472068786621
    6. 'zon' → logprob: -14.000472068786621
    7. 'zend' → logprob: -14.125472068786621
    8. 's' → logprob: -14.750472068786621
    9. 'zs' → logprob: -15.000472068786621
    10. 'sz' → logprob: -15.000472068786621

Token 306: 'et' (ID: 292)
  Prédit: 'et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -6.253713218029588e-05
    2. 'set' → logprob: -9.750062942504883
    3. 't' → logprob: -13.625062942504883
    4. 'Set' → logprob: -13.750062942504883
    5. 'ets' → logprob: -13.750062942504883
    6. '_set' → logprob: -14.625062942504883
    7. 'ent' → logprob: -16.125062942504883
    8. '```' → logprob: -16.250062942504883
    9. ' set' → logprob: -17.250062942504883
    10. 'etz' → logprob: -17.375062942504883

Token 307: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.282920129597187e-05
    2. ' (' → logprob: -11.750012397766113
    3. '(
' → logprob: -13.125012397766113
    4. 'visited' → logprob: -13.125012397766113
    5. '(vis' → logprob: -14.625012397766113
    6. '((' → logprob: -16.37501335144043
    7. '   ' → logprob: -16.75001335144043
    8. '()' → logprob: -17.12501335144043
    9. '(sorted' → logprob: -17.50001335144043
    10. '(list' → logprob: -17.50001335144043

Token 308: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.1398757123970427e-05
    2. ' visited' → logprob: -11.500011444091797
    3. ')' → logprob: -13.750011444091797
    4. '{' → logprob: -16.250011444091797
    5. '(' → logprob: -17.125011444091797
    6. '   ' → logprob: -17.500011444091797
    7. '       ' → logprob: -19.625011444091797
    8. 'visible' → logprob: -19.625011444091797
    9. ')(' → logprob: -19.875011444091797
    10. ')
' → logprob: -20.625011444091797

Token 309: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -4.036524842376821e-05
    2. ')_' → logprob: -10.875040054321289
    3. ')' → logprob: -11.375040054321289
    4. 's' → logprob: -12.000040054321289
    5. '_tokens' → logprob: -14.500040054321289
    6. '_' → logprob: -14.625040054321289
    7. '_set' → logprob: -15.375040054321289
    8. '_states' → logprob: -15.500040054321289
    9. ' _' → logprob: -15.750040054321289
    10. '
' → logprob: -16.00004005432129

Token 310: 'reas' (ID: 20712)
  Prédit: 'reas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reas' → logprob: -0.5018091201782227
    2. 'ures' → logprob: -1.6268091201782227
    3. 'asures' → logprob: -2.0018091201782227
    4. 're' → logprob: -3.6268091201782227
    5. 'res' → logprob: -3.6268091201782227
    6. 's' → logprob: -5.751809120178223
    7. ')' → logprob: -6.626809120178223
    8. 'o' → logprob: -6.751809120178223
    9. '_t' → logprob: -6.876809120178223
    10. 'r' → logprob: -7.501809120178223

Token 311: 'ures' (ID: 1609)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5844730138778687
    2. 'asures' → logprob: -0.8344730138778687
    3. 'ures' → logprob: -5.584473133087158
    4. 'sure' → logprob: -6.334473133087158
    5. 'res' → logprob: -7.584473133087158
    6. 'Sure' → logprob: -7.959473133087158
    7. '```' → logprob: -7.959473133087158
    8. 'es' → logprob: -8.08447265625
    9. '   ' → logprob: -8.20947265625
    10. 'asure' → logprob: -8.33447265625

Token 312: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0206720617134124e-05
    2. ')
' → logprob: -11.87501049041748
    3. ' )' → logprob: -13.37501049041748
    4. '       ' → logprob: -14.37501049041748
    5. '),' → logprob: -14.62501049041748
    6. ',' → logprob: -15.12501049041748
    7. ')}' → logprob: -15.75001049041748
    8. '))' → logprob: -16.750009536743164
    9. '}' → logprob: -16.750009536743164
    10. ')

' → logprob: -17.500009536743164

Token 313: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035824915394186974
    2. 'self' → logprob: -6.50358247756958
    3. '<|end|>' → logprob: -6.62858247756958
    4. ',' → logprob: -8.378582954406738
    5. ')' → logprob: -8.378582954406738
    6. ' self' → logprob: -9.503582954406738
    7. '        
' → logprob: -10.003582954406738
    8. '
' → logprob: -10.378582954406738
    9. '	' → logprob: -10.753582954406738
    10. '        ' → logprob: -10.878582954406738

Token 314: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005743672139942646
    2. '<|end|>' → logprob: -5.880743503570557
    3. '
' → logprob: -6.755743503570557
    4. 'self' → logprob: -6.880743503570557
    5. ',' → logprob: -7.880743503570557
    6. ')' → logprob: -8.880743980407715
    7. '        
' → logprob: -10.005743980407715
    8. ',
' → logprob: -10.255743980407715
    9. '	' → logprob: -10.505743980407715
    10. '   ' → logprob: -10.880743980407715

Token 315: ' Immutable' (ID: 63438)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 316: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16857536137104034
    2. '<|end|>' → logprob: -1.918575406074524
    3. ' )' → logprob: -5.918575286865234
    4. ' set' → logprob: -6.793575286865234
    5. '()' → logprob: -6.918575286865234
    6. ')set' → logprob: -7.293575286865234
    7. '<|end|>' → logprob: -7.543575286865234
    8. ',' → logprob: -7.668575286865234
    9. '   ' → logprob: -7.918575286865234
    10. '       ' → logprob: -8.418575286865234

Token 317: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.7092199325561523
    2. ' hashing' → logprob: -0.7092199325561523
    3. ' hash' → logprob: -5.084219932556152
    4. ' use' → logprob: -5.084219932556152
    5. 'set' → logprob: -6.459219932556152
    6. ' set' → logprob: -7.084219932556152
    7. 'use' → logprob: -7.709219932556152
    8. ' usage' → logprob: -8.084219932556152
    9. '_hash' → logprob: -8.709219932556152
    10. 'usage' → logprob: -10.084219932556152

Token 318: 'ability' (ID: 3563)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.682925283908844
    2. 'ability' → logprob: -1.1829252243041992
    3. '<|end|>' → logprob: -1.8079252243041992
    4. '()' → logprob: -4.307925224304199
    5. 'able' → logprob: -6.557925224304199
    6. 'set' → logprob: -6.682925224304199
    7. '(
' → logprob: -6.682925224304199
    8. 'ing' → logprob: -6.932925224304199
    9. ')set' → logprob: -7.057925224304199
    10. '())' → logprob: -7.307925224304199

Token 319: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031892966479063034
    2. 'self' → logprob: -4.406892776489258
    3. '<|end|>' → logprob: -4.531892776489258
    4. ')' → logprob: -5.031892776489258
    5. ',' → logprob: -7.406892776489258
    6. '
' → logprob: -8.031892776489258
    7. '        
' → logprob: -8.531892776489258
    8. '   ' → logprob: -8.656892776489258
    9. ' self' → logprob: -8.781892776489258
    10. ')
' → logprob: -9.906892776489258

Token 320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006381622049957514
    2. 'self' → logprob: -5.131381511688232
    3. '        
' → logprob: -8.88138198852539
    4. '<|end|>' → logprob: -9.25638198852539
    5. ' self' → logprob: -9.63138198852539
    6. ')' → logprob: -10.00638198852539
    7. ',' → logprob: -10.25638198852539
    8. '
' → logprob: -10.88138198852539
    9. '   ' → logprob: -11.00638198852539
    10. '	self' → logprob: -11.88138198852539

Token 321: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4746731221675873
    2. '       ' → logprob: -0.9746731519699097
    3. ' self' → logprob: -7.599673271179199
    4. 'def' → logprob: -9.3496732711792
    5. '   ' → logprob: -12.5996732711792
    6. '
' → logprob: -13.4746732711792
    7. '	self' → logprob: -13.4746732711792
    8. ' ' → logprob: -14.2246732711792
    9. '        
' → logprob: -14.8496732711792
    10. '      ' → logprob: -14.9746732711792

Token 322: '.fr' (ID: 11435)
  Prédit: '.fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fr' → logprob: -0.015042709186673164
    2. '.' → logprob: -5.265042781829834
    3. '.fragment' → logprob: -5.890042781829834
    4. '.fragments' → logprob: -5.890042781829834
    5. 'frag' → logprob: -5.890042781829834
    6. '.f' → logprob: -7.515042781829834
    7. ' .' → logprob: -8.015042304992676
    8. ' fragile' → logprob: -8.890042304992676
    9. '_frag' → logprob: -9.140042304992676
    10. '.fre' → logprob: -9.515042304992676

Token 323: 'ag' (ID: 348)
  Prédit: 'ag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ag' → logprob: -0.0007226797170005739
    2. 'aggable' → logprob: -8.000722885131836
    3. 'agle' → logprob: -8.500722885131836
    4. 'angible' → logprob: -9.500722885131836
    5. 'agi' → logprob: -10.125722885131836
    6. 'frag' → logprob: -11.375722885131836
    7. 'rag' → logprob: -11.500722885131836
    8. 'agment' → logprob: -11.750722885131836
    9. 'agl' → logprob: -12.125722885131836
    10. '_ag' → logprob: -12.250722885131836

Token 324: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -1.0802738870552275e-05
    2. '_' → logprob: -13.12501049041748
    3. 'ility' → logprob: -13.25001049041748
    4. '   ' → logprob: -14.12501049041748
    5. 'tile' → logprob: -14.12501049041748
    6. '```' → logprob: -14.12501049041748
    7. 'iles' → logprob: -14.25001049041748
    8. ' ile' → logprob: -14.25001049041748
    9. '

' → logprob: -14.75001049041748
    10. '_set' → logprob: -15.12501049041748

Token 325: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.00035751116229221225
    2. '_positions' → logprob: -8.250357627868652
    3. '_cells' → logprob: -9.750357627868652
    4. '_set' → logprob: -10.875357627868652
    5. '_' → logprob: -12.250357627868652
    6. '_points' → logprob: -12.500357627868652
    7. '_nodes' → logprob: -12.750357627868652
    8. '_tiles' → logprob: -13.000357627868652
    9. '_maps' → logprob: -13.875357627868652
    10. 'map' → logprob: -14.000357627868652

Token 326: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.126930832862854
    2. ' =' → logprob: -2.1269307136535645
    3. '=set' → logprob: -12.876931190490723
    4. '=f' → logprob: -16.126930236816406
    5. ')' → logprob: -16.251930236816406
    6. ',' → logprob: -16.876930236816406
    7. ' ' → logprob: -17.001930236816406
    8. ':' → logprob: -18.251930236816406
    9. '=}' → logprob: -18.626930236816406
    10. '<|end|>' → logprob: -19.001930236816406

Token 327: ' fragile' (ID: 68256)
  Prédit: 'fro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fro' → logprob: -0.16850757598876953
    2. 'frag' → logprob: -1.9185075759887695
    3. ' fragile' → logprob: -5.5435075759887695
    4. ' fro' → logprob: -5.6685075759887695
    5. 'fr' → logprob: -8.16850757598877
    6. 'fra' → logprob: -8.79350757598877
    7. ' frag' → logprob: -9.04350757598877
    8. 'set' → logprob: -9.79350757598877
    9. '   ' → logprob: -9.91850757598877
    10. ' set' → logprob: -10.23100757598877

Token 328: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -2.4868770196917467e-05
    2. '_set' → logprob: -11.250024795532227
    3. 'map' → logprob: -11.875024795532227
    4. 'Map' → logprob: -14.125024795532227
    5. '_' → logprob: -14.250024795532227
    6. ')' → logprob: -15.125024795532227
    7. '   ' → logprob: -15.250024795532227
    8. '_copy' → logprob: -15.625024795532227
    9. '{' → logprob: -15.750024795532227
    10. 'frag' → logprob: -15.812524795532227

Token 329: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 330: ' #' (ID: 1069)
  Prédit: '.copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.copy' → logprob: -0.15843001008033752
    2. '<|end|>' → logprob: -2.7834300994873047
    3. '       ' → logprob: -3.0334300994873047
    4. '   ' → logprob: -4.033430099487305
    5. ')' → logprob: -4.658430099487305
    6. ',' → logprob: -6.158430099487305
    7. '.union' → logprob: -6.658430099487305
    8. '=' → logprob: -7.033430099487305
    9. 'def' → logprob: -7.158430099487305
    10. ' =' → logprob: -7.158430099487305

Token 331: ' Set' (ID: 3957)
  Prédit: 'fro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fro' → logprob: -0.04554782435297966
    2. 'frag' → logprob: -3.6705477237701416
    3. 'set' → logprob: -5.045547962188721
    4. ' fro' → logprob: -5.920547962188721
    5. 'Set' → logprob: -5.920547962188721
    6. 'None' → logprob: -6.420547962188721
    7. 'fr' → logprob: -6.545547962188721
    8. ' set' → logprob: -6.920547962188721
    9. '   ' → logprob: -7.795547962188721
    10. '       ' → logprob: -8.045547485351562

Token 332: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.9788369536399841
    2. '(' → logprob: -1.103837013244629
    3. 'of' → logprob: -2.728837013244629
    4. ')' → logprob: -2.728837013244629
    5. '       ' → logprob: -3.103837013244629
    6. '<|end|>' → logprob: -3.103837013244629
    7. '()' → logprob: -3.478837013244629
    8. '[' → logprob: -4.103837013244629
    9. ' (' → logprob: -4.978837013244629
    10. '(
' → logprob: -5.603837013244629

Token 333: ' positions' (ID: 15897)
  Prédit: 'frag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frag' → logprob: -0.9345676898956299
    2. 'Tuple' → logprob: -1.5595676898956299
    3. 'positions' → logprob: -1.6845676898956299
    4. '(' → logprob: -1.9345676898956299
    5. 'Frag' → logprob: -3.80956768989563
    6. '<|end|>' → logprob: -4.809567451477051
    7. ' fragile' → logprob: -5.184567451477051
    8. '(T' → logprob: -5.184567451477051
    9. 'fr' → logprob: -5.559567451477051
    10. 'fro' → logprob: -5.559567451477051

Token 334: ' that' (ID: 484)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 335: ' have' (ID: 679)
  Prédit: ' have'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.8728691935539246
    2. 'have' → logprob: -1.2478692531585693
    3. ' are' → logprob: -1.6228692531585693
    4. 'are' → logprob: -2.4978692531585693
    5. 'remain' → logprob: -5.62286901473999
    6. 'must' → logprob: -6.49786901473999
    7. ' must' → logprob: -6.49786901473999
    8. ' remain' → logprob: -6.62286901473999
    9. ' were' → logprob: -6.74786901473999
    10. 'were' → logprob: -7.24786901473999

Token 336: ' collapsed' (ID: 63282)
  Prédit: 'been'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'been' → logprob: -0.3860930800437927
    2. ' been' → logprob: -1.2610931396484375
    3. 'frag' → logprob: -3.6360931396484375
    4. 'be' → logprob: -6.2610931396484375
    5. ' become' → logprob: -6.2610931396484375
    6. 'already' → logprob: -6.5110931396484375
    7. 'broken' → logprob: -7.1360931396484375
    8. 'changed' → logprob: -7.2610931396484375
    9. 'not' → logprob: -7.6360931396484375
    10. ' fragile' → logprob: -7.8860931396484375

Token 337: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3578307032585144
    2. '   ' → logprob: -1.4828307628631592
    3. '<|end|>' → logprob: -3.107830762863159
    4. '       ' → logprob: -4.10783052444458
    5. '    
' → logprob: -4.73283052444458
    6. '        
' → logprob: -6.98283052444458
    7. ')' → logprob: -7.23283052444458
    8. 'def' → logprob: -7.23283052444458
    9. '<|end|>' → logprob: -7.98283052444458
    10. '

' → logprob: -8.107831001281738

Token 338: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1898074597120285
    2. 'def' → logprob: -2.064807415008545
    3. '
' → logprob: -3.689807415008545
    4. '    
' → logprob: -4.314807415008545
    5. ' def' → logprob: -5.439807415008545
    6. '        
' → logprob: -6.689807415008545
    7. '<|end|>' → logprob: -6.689807415008545
    8. ')' → logprob: -7.939807415008545
    9. '       ' → logprob: -8.189807891845703
    10. ' 
' → logprob: -9.814807891845703

Token 339: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.170270353322849e-05
    2. ' def' → logprob: -10.125061988830566
    3. '   ' → logprob: -10.750061988830566
    4. '
' → logprob: -17.12506103515625
    5. '       ' → logprob: -17.12506103515625
    6. '    
' → logprob: -17.25006103515625
    7. '	def' → logprob: -18.12506103515625
    8. ')' → logprob: -18.37506103515625
    9. '__' → logprob: -18.50006103515625
    10. ' ' → logprob: -19.12506103515625

Token 340: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.38776329159736633
    2. '__' → logprob: -1.137763261795044
    3. 'def' → logprob: -7.137763500213623
    4. ' def' → logprob: -9.387763023376465
    5. ' ' → logprob: -12.262763023376465
    6. '==' → logprob: -12.887763023376465
    7. ' ==' → logprob: -13.137763023376465
    8. '.__' → logprob: -13.262763023376465
    9. '   ' → logprob: -14.012763023376465
    10. '___' → logprob: -14.512763023376465

Token 341: 'hash' (ID: 16909)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.029752686619758606
    2. 'hash' → logprob: -3.529752731323242
    3. 'init' → logprob: -13.029752731323242
    4. 'lt' → logprob: -17.779752731323242
    5. ' eq' → logprob: -18.029752731323242
    6. '==' → logprob: -20.154752731323242
    7. ' hash' → logprob: -21.279752731323242
    8. '_eq' → logprob: -21.654752731323242
    9. '   ' → logprob: -22.154752731323242
    10. '_hash' → logprob: -22.404752731323242

Token 342: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3154185116291046
    2. '(' → logprob: -1.3154184818267822
    3. '(
' → logprob: -6.690418720245361
    4. '__(' → logprob: -7.815418720245361
    5. ' (' → logprob: -7.940418720245361
    6. 'self' → logprob: -9.440418243408203
    7. ')(' → logprob: -10.815418243408203
    8. '__(
' → logprob: -10.940418243408203
    9. '(

' → logprob: -11.440418243408203
    10. '(object' → logprob: -12.940418243408203

Token 343: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.030090630054473877
    2. ')' → logprob: -3.530090570449829
    3. '(self' → logprob: -8.28009033203125
    4. '):' → logprob: -10.03009033203125
    5. ' self' → logprob: -11.15509033203125
    6. '):
' → logprob: -11.28009033203125
    7. ')(' → logprob: -11.78009033203125
    8. '   ' → logprob: -13.65509033203125
    9. ' ' → logprob: -13.65509033203125
    10. '	self' → logprob: -13.90509033203125

Token 344: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1425286829471588
    2. '):
' → logprob: -2.767528772354126
    3. '(self' → logprob: -2.767528772354126
    4. ')' → logprob: -5.892528533935547
    5. ')(' → logprob: -6.017528533935547
    6. 'self' → logprob: -6.392528533935547
    7. ',' → logprob: -9.392528533935547
    8. '):

' → logprob: -9.642528533935547
    9. '(' → logprob: -9.892528533935547
    10. ')(
' → logprob: -10.017528533935547

Token 345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001415618316968903
    2. ' return' → logprob: -9.000141143798828
    3. 'return' → logprob: -11.000141143798828
    4. '      ' → logprob: -14.125141143798828
    5. '   ' → logprob: -14.625141143798828
    6. '           ' → logprob: -15.750141143798828
    7. '     ' → logprob: -16.750141143798828
    8. '        ' → logprob: -17.500141143798828
    9. '	return' → logprob: -18.000141143798828
    10. '	' → logprob: -18.000141143798828

Token 346: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.012956916354596615
    2. '       ' → logprob: -4.5129570960998535
    3. ' return' → logprob: -6.2629570960998535
    4. '   ' → logprob: -13.387956619262695
    5. '	return' → logprob: -16.012956619262695
    6. '      ' → logprob: -17.512956619262695
    7. ' ' → logprob: -17.637956619262695
    8. '     ' → logprob: -18.387956619262695
    9. 'result' → logprob: -18.387956619262695
    10. '
' → logprob: -18.637956619262695

Token 347: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.005241937469691038
    2. ' hash' → logprob: -5.255241870880127
    3. '(hash' → logprob: -11.755242347717285
    4. '   ' → logprob: -15.130242347717285
    5. '	hash' → logprob: -18.75524139404297
    6. '_hash' → logprob: -20.38024139404297
    7. 'Hash' → logprob: -20.63024139404297
    8. '.hash' → logprob: -20.88024139404297
    9. ' ' → logprob: -21.38024139404297
    10. '(' → logprob: -21.50524139404297

Token 348: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.014176554046571255
    2. '(' → logprob: -4.264176368713379
    3. '(self' → logprob: -11.264176368713379
    4. ' (' → logprob: -15.889176368713379
    5. ' ((' → logprob: -17.639177322387695
    6. '(
' → logprob: -17.639177322387695
    7. '(((' → logprob: -18.639177322387695
    8. '(('' → logprob: -19.139177322387695
    9. '(("' → logprob: -19.264177322387695
    10. '(tuple' → logprob: -20.264177322387695

Token 349: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1875571544806007e-05
    2. ' self' → logprob: -11.375011444091797
    3. '       ' → logprob: -15.875011444091797
    4. '   ' → logprob: -16.125011444091797
    5. '(self' → logprob: -16.500011444091797
    6. '
' → logprob: -16.750011444091797
    7. '           ' → logprob: -17.250011444091797
    8. '     ' → logprob: -19.750011444091797
    9. ')' → logprob: -19.750011444091797
    10. '    ' → logprob: -20.625011444091797

Token 350: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.3133735954761505
    2. 'position' → logprob: -1.3133735656738281
    3. '(position' → logprob: -9.438373565673828
    4. 'self' → logprob: -11.438373565673828
    5. '.' → logprob: -12.063373565673828
    6. ' position' → logprob: -12.313373565673828
    7. ')' → logprob: -13.063373565673828
    8. '[position' → logprob: -13.063373565673828
    9. '	position' → logprob: -13.438373565673828
    10. '   ' → logprob: -13.438373565673828

Token 351: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015359772078227252
    2. ',
' → logprob: -9.125153541564941
    3. ' ,' → logprob: -10.250153541564941
    4. ',self' → logprob: -11.625153541564941
    5. 'self' → logprob: -16.125154495239258
    6. ',

' → logprob: -16.125154495239258
    7. ',\
' → logprob: -17.250154495239258
    8. ' ,
' → logprob: -17.750154495239258
    9. ',{
' → logprob: -18.875154495239258
    10. '       ' → logprob: -19.000154495239258

Token 352: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06238149479031563
    2. ' self' → logprob: -2.8123815059661865
    3. '       ' → logprob: -7.937381267547607
    4. '        ' → logprob: -11.187381744384766
    5. '           ' → logprob: -11.437381744384766
    6. '      ' → logprob: -12.312381744384766
    7. '         ' → logprob: -12.437381744384766
    8. '   ' → logprob: -12.437381744384766
    9. '    ' → logprob: -12.812381744384766
    10. '     ' → logprob: -12.812381744384766

Token 353: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -1.282920129597187e-05
    2. '.' → logprob: -12.500012397766113
    3. '.visit' → logprob: -12.750012397766113
    4. '.v' → logprob: -12.875012397766113
    5. '.vi' → logprob: -13.875012397766113
    6. 'visited' → logprob: -14.000012397766113
    7. ' .' → logprob: -14.125012397766113
    8. '.visible' → logprob: -14.250012397766113
    9. '.f' → logprob: -16.37501335144043
    10. '.rece' → logprob: -17.00001335144043

Token 354: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -0.0019624168053269386
    2. 'isted' → logprob: -6.501962184906006
    3. 's' → logprob: -8.126962661743164
    4. 'ted' → logprob: -9.501962661743164
    5. 'is' → logprob: -10.626962661743164
    6. '_' → logprob: -11.251962661743164
    7. 'sted' → logprob: -11.501962661743164
    8. 'ITED' → logprob: -12.001962661743164
    9. 'its' → logprob: -12.751962661743164
    10. '
' → logprob: -12.876962661743164

Token 355: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -3.8889261304575484e-06
    2. 't' → logprob: -13.125003814697266
    3. '_f' → logprob: -13.750003814697266
    4. 'f' → logprob: -15.875003814697266
    5. 'ed' → logprob: -15.875003814697266
    6. 'Treas' → logprob: -15.875003814697266
    7. 's' → logprob: -16.000003814697266
    8. 'tre' → logprob: -16.750003814697266
    9. 'fro' → logprob: -16.750003814697266
    10. '_' → logprob: -18.125003814697266

Token 356: 'reas' (ID: 20712)
  Prédit: 'asures'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asures' → logprob: -0.22260087728500366
    2. 'reas' → logprob: -1.7226009368896484
    3. 'e' → logprob: -4.597600936889648
    4. 're' → logprob: -4.597600936889648
    5. 'as' → logprob: -8.597600936889648
    6. 'ures' → logprob: -9.222600936889648
    7. 'res' → logprob: -9.472600936889648
    8. 'asure' → logprob: -9.597600936889648
    9. '
' → logprob: -9.597600936889648
    10. 's' → logprob: -9.847600936889648

Token 357: 'ures' (ID: 1609)
  Prédit: 'ures'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ures' → logprob: -0.0019198372028768063
    2. 'asures' → logprob: -6.501919746398926
    3. 'ured' → logprob: -8.626919746398926
    4. 's' → logprob: -9.001919746398926
    5. 'au' → logprob: -10.126919746398926
    6. 't' → logprob: -10.501919746398926
    7. '_' → logprob: -11.001919746398926
    8. 'ur' → logprob: -11.126919746398926
    9. 'uries' → logprob: -12.751919746398926
    10. 'res' → logprob: -13.501919746398926

Token 358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.872261317563243e-05
    2. ' ,' → logprob: -10.500059127807617
    3. '))' → logprob: -10.750059127807617
    4. ',
' → logprob: -12.250059127807617
    5. ',self' → logprob: -12.375059127807617
    6. ',f' → logprob: -14.875059127807617
    7. 'self' → logprob: -15.625059127807617
    8. ',))
' → logprob: -17.250059127807617
    9. '       ' → logprob: -17.375059127807617
    10. '))
' → logprob: -17.500059127807617

Token 359: ' tuple' (ID: 31311)
  Prédit: 'fro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fro' → logprob: -0.00034845535992644727
    2. ' fro' → logprob: -8.000348091125488
    3. '   ' → logprob: -11.875348091125488
    4. 'tuple' → logprob: -12.750348091125488
    5. '       ' → logprob: -13.625348091125488
    6. 'self' → logprob: -14.250348091125488
    7. '     ' → logprob: -14.625348091125488
    8. 'f' → logprob: -15.250348091125488
    9. '           ' → logprob: -16.000349044799805
    10. '         ' → logprob: -16.375349044799805

Token 360: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.00012403888104017824
    2. 'sorted' → logprob: -9.000123977661133
    3. '(self' → logprob: -14.750123977661133
    4. '(' → logprob: -15.125123977661133
    5. '(map' → logprob: -18.250123977661133
    6. ' sorted' → logprob: -18.875123977661133
    7. '(
' → logprob: -19.125123977661133
    8. '(s' → logprob: -20.000123977661133
    9. '(tuple' → logprob: -20.000123977661133
    10. '.sorted' → logprob: -20.250123977661133

Token 361: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00043353010551072657
    2. 'self' → logprob: -7.750433444976807
    3. '(' → logprob: -13.250433921813965
    4. '(list' → logprob: -14.000433921813965
    5. '(
' → logprob: -15.750433921813965
    6. '((' → logprob: -16.75043296813965
    7. 'list' → logprob: -17.25043296813965
    8. '(sorted' → logprob: -17.87543296813965
    9. '[self' → logprob: -17.87543296813965
    10. '	self' → logprob: -18.00043296813965

Token 362: '.fr' (ID: 11435)
  Prédit: '.fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fr' → logprob: -1.7954958821064793e-05
    2. '.fragments' → logprob: -11.500018119812012
    3. '.fragment' → logprob: -12.625018119812012
    4. 'frag' → logprob: -13.125018119812012
    5. ' .' → logprob: -14.000018119812012
    6. ').' → logprob: -14.250018119812012
    7. 'Frag' → logprob: -15.500018119812012
    8. '.' → logprob: -15.750018119812012
    9. ' fragile' → logprob: -15.875018119812012
    10. '.fre' → logprob: -16.000017166137695

Token 363: 'ag' (ID: 348)
  Prédit: 'ag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ag' → logprob: -0.0008323782822117209
    2. 'agle' → logprob: -8.125832557678223
    3. 'aggable' → logprob: -8.125832557678223
    4. 'angible' → logprob: -9.250832557678223
    5. 'frag' → logprob: -9.875832557678223
    6. 'agal' → logprob: -11.250832557678223
    7. 'agi' → logprob: -11.500832557678223
    8. ' fragile' → logprob: -11.500832557678223
    9. 'agment' → logprob: -11.750832557678223
    10. 'asible' → logprob: -12.250832557678223

Token 364: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -0.005163427907973528
    2. 'ag' → logprob: -6.630163192749023
    3. 'agle' → logprob: -6.630163192749023
    4. 'able' → logprob: -7.505163192749023
    5. 'ible' → logprob: -7.880163192749023
    6. 'gable' → logprob: -7.880163192749023
    7. 'atile' → logprob: -8.005163192749023
    8. 'il' → logprob: -8.755163192749023
    9. ' fragile' → logprob: -9.005163192749023
    10. 'itable' → logprob: -9.130163192749023

Token 365: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -2.935296834039036e-06
    2. 'map' → logprob: -12.87500286102295
    3. ')' → logprob: -16.250003814697266
    4. 'Map' → logprob: -17.250003814697266
    5. '
' → logprob: -17.375003814697266
    6. 's' → logprob: -17.875003814697266
    7. 'self' → logprob: -18.000003814697266
    8. '))' → logprob: -18.125003814697266
    9. '```' → logprob: -18.125003814697266
    10. '_' → logprob: -18.250003814697266

Token 366: '))))
' (ID: 55084)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.013356922194361687
    2. '))))' → logprob: -4.388356685638428
    3. '))' → logprob: -7.638356685638428
    4. ')' → logprob: -8.138357162475586
    5. ' ' → logprob: -10.138357162475586
    6. '   ' → logprob: -11.388357162475586
    7. ')))
' → logprob: -12.013357162475586
    8. '')))' → logprob: -12.638357162475586
    9. '       ' → logprob: -12.888357162475586
    10. ')));' → logprob: -13.013357162475586

Token 367: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12685932219028473
    2. '    
' → logprob: -2.501859426498413
    3. '<|end|>' → logprob: -3.751859426498413
    4. '
' → logprob: -4.376859188079834
    5. 'def' → logprob: -8.251859664916992
    6. ')' → logprob: -8.626859664916992
    7. '        
' → logprob: -8.751859664916992
    8. '  
' → logprob: -8.751859664916992
    9. '<|end|>' → logprob: -8.876859664916992
    10. '   
' → logprob: -9.126859664916992

Token 368: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48021653294563293
    2. 'def' → logprob: -0.9802165031433105
    3. ' def' → logprob: -5.1052165031433105
    4. '	def' → logprob: -10.605216979980469
    5. '    
' → logprob: -10.980216979980469
    6. '
' → logprob: -12.230216979980469
    7. '  ' → logprob: -12.605216979980469
    8. ' ' → logprob: -13.230216979980469
    9. '    ' → logprob: -13.480216979980469
    10. '       ' → logprob: -14.355216979980469

Token 369: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -8.180258191714529e-06
    2. ' def' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.125008583068848
    4. '
' → logprob: -18.87500762939453
    5. '    
' → logprob: -18.87500762939453
    6. '__' → logprob: -19.00000762939453
    7. '	def' → logprob: -19.12500762939453
    8. ' ' → logprob: -21.00000762939453
    9. '        
' → logprob: -21.87500762939453
    10. '_def' → logprob: -22.37500762939453

Token 370: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.09645901620388031
    2. '__' → logprob: -2.471458911895752
    3. 'def' → logprob: -5.596458911895752
    4. ' def' → logprob: -5.846458911895752
    5. ' ==' → logprob: -7.346458911895752
    6. '.__' → logprob: -8.59645938873291
    7. '==' → logprob: -10.09645938873291
    8. '_eq' → logprob: -12.47145938873291
    9. '/__' → logprob: -12.59645938873291
    10. ' =' → logprob: -13.22145938873291

Token 371: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: 0.0
    2. ' eq' → logprob: -19.375
    3. '_eq' → logprob: -19.625
    4. '==' → logprob: -20.875
    5. 'lt' → logprob: -21.125
    6. 'init' → logprob: -21.625
    7. 'e' → logprob: -22.375
    8. 'cmp' → logprob: -22.625
    9. '(eq' → logprob: -22.75
    10. 'Eq' → logprob: -23.5

Token 372: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0015493794344365597
    2. '__' → logprob: -6.501549243927002
    3. '__((' → logprob: -10.50154972076416
    4. '(self' → logprob: -11.62654972076416
    5. '__(
' → logprob: -12.37654972076416
    6. '__('' → logprob: -12.62654972076416
    7. '(' → logprob: -13.25154972076416
    8. '__(*' → logprob: -14.00154972076416
    9. '__("' → logprob: -14.87654972076416
    10. '==(' → logprob: -16.376548767089844

Token 373: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.246537173457909e-06
    2. ' self' → logprob: -12.875003814697266
    3. 'other' → logprob: -13.625003814697266
    4. '(self' → logprob: -14.625003814697266
    5. ',' → logprob: -17.250003814697266
    6. ',self' → logprob: -18.375003814697266
    7. ' ' → logprob: -19.000003814697266
    8. '   ' → logprob: -19.500003814697266
    9. '	self' → logprob: -20.125003814697266
    10. '       ' → logprob: -21.500003814697266

Token 374: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1443602293729782
    2. '(self' → logprob: -2.019360303878784
    3. 'self' → logprob: -7.144360065460205
    4. ',self' → logprob: -8.019360542297363
    5. ' (' → logprob: -8.144360542297363
    6. '(' → logprob: -9.269360542297363
    7. '__(' → logprob: -9.394360542297363
    8. ')(' → logprob: -10.394360542297363
    9. ',(' → logprob: -10.394360542297363
    10. ' ,' → logprob: -10.644360542297363

Token 375: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0015024791937321424
    2. ' other' → logprob: -6.501502513885498
    3. 'Other' → logprob: -16.251502990722656
    4. 'self' → logprob: -17.251502990722656
    5. '(other' → logprob: -18.626502990722656
    6. '_other' → logprob: -19.626502990722656
    7. 'oth' → logprob: -20.376502990722656
    8. '.other' → logprob: -20.876502990722656
    9. 'o' → logprob: -21.001502990722656
    10. 'othe' → logprob: -21.626502990722656

Token 376: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05656381696462631
    2. '):
' → logprob: -3.4315638542175293
    3. ')' → logprob: -3.8065638542175293
    4. ',' → logprob: -8.556563377380371
    5. ' ):' → logprob: -9.181563377380371
    6. '):

' → logprob: -9.431563377380371
    7. '       ' → logprob: -11.306563377380371
    8. ' )' → logprob: -11.306563377380371
    9. '):
' → logprob: -11.931563377380371
    10. '   ' → logprob: -12.431563377380371

Token 377: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011948520317673683
    2. 'self' → logprob: -4.886948585510254
    3. ' self' → logprob: -6.011948585510254
    4. 'return' → logprob: -7.136948585510254
    5. ' return' → logprob: -7.261948585510254
    6. '(self' → logprob: -8.011948585510254
    7. ' isinstance' → logprob: -10.886948585510254
    8. '   ' → logprob: -11.136948585510254
    9. ' if' → logprob: -12.136948585510254
    10. '        ' → logprob: -12.886948585510254

Token 378: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3475009799003601
    2. 'is' → logprob: -2.347501039505005
    3. '       ' → logprob: -2.347501039505005
    4. ' isinstance' → logprob: -2.597501039505005
    5. ' return' → logprob: -3.597501039505005
    6. 'self' → logprob: -8.097500801086426
    7. 'if' → logprob: -9.222500801086426
    8. '   ' → logprob: -10.222500801086426
    9. '(is' → logprob: -10.847500801086426
    10. ' if' → logprob: -12.097500801086426

Token 379: ' (' (ID: 350)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.25968530774116516
    2. '(self' → logprob: -2.2596852779388428
    3. 'self' → logprob: -3.0096852779388428
    4. ' (' → logprob: -3.5096852779388428
    5. '(is' → logprob: -4.009685516357422
    6. ' self' → logprob: -4.509685516357422
    7. '(
' → logprob: -4.759685516357422
    8. 'is' → logprob: -5.009685516357422
    9. ' (
' → logprob: -8.134685516357422
    10. '(' → logprob: -8.759685516357422

Token 380: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0016713724471628666
    2. 'is' → logprob: -6.501671314239502
    3. ' isinstance' → logprob: -9.37667179107666
    4. ' self' → logprob: -9.87667179107666
    5. '   ' → logprob: -10.62667179107666
    6. '       ' → logprob: -12.62667179107666
    7. '(self' → logprob: -12.75167179107666
    8. '           ' → logprob: -13.25167179107666
    9. 'type' → logprob: -14.87667179107666
    10. '    ' → logprob: -16.251670837402344

Token 381: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -3.750436007976532e-05
    2. '.' → logprob: -11.00003719329834
    3. 'position' → logprob: -11.00003719329834
    4. ').' → logprob: -12.75003719329834
    5. '.__' → logprob: -15.00003719329834
    6. ' .' → logprob: -15.37503719329834
    7. ').__' → logprob: -15.50003719329834
    8. '.version' → logprob: -17.000038146972656
    9. '.token' → logprob: -17.000038146972656
    10. '.type' → logprob: -17.250038146972656

Token 382: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25344130396842957
    2. '==' → logprob: -1.503441333770752
    3. ',' → logprob: -6.628441333770752
    4. ')==' → logprob: -8.628440856933594
    5. ')' → logprob: -12.253440856933594
    6. ' ,' → logprob: -13.003440856933594
    7. '==(' → logprob: -14.253440856933594
    8. '==
' → logprob: -14.628440856933594
    9. ' ==
' → logprob: -14.628440856933594
    10. '.position' → logprob: -14.878440856933594

Token 383: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0002613358374219388
    2. ' other' → logprob: -8.250261306762695
    3. '.other' → logprob: -18.125261306762695
    4. '(other' → logprob: -18.250261306762695
    5. 'self' → logprob: -18.375261306762695
    6. '   ' → logprob: -19.125261306762695
    7. 'Other' → logprob: -19.625261306762695
    8. ' ' → logprob: -20.000261306762695
    9. '
' → logprob: -20.500261306762695
    10. 'others' → logprob: -20.500261306762695

Token 384: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -1.1472419600977446e-06
    2. '.' → logprob: -14.000000953674316
    3. ' .' → logprob: -15.125000953674316
    4. 'position' → logprob: -19.250001907348633
    5. '.other' → logprob: -19.500001907348633
    6. '.user' → logprob: -20.125001907348633
    7. '.location' → logprob: -20.750001907348633
    8. '	position' → logprob: -21.375001907348633
    9. ').' → logprob: -21.500001907348633
    10. '.operator' → logprob: -21.500001907348633

Token 385: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.009449345991015434
    2. 'and' → logprob: -4.759449481964111
    3. ')' → logprob: -7.134449481964111
    4. '           ' → logprob: -11.009449005126953
    5. '       ' → logprob: -11.134449005126953
    6. '        ' → logprob: -13.134449005126953
    7. '               ' → logprob: -13.134449005126953
    8. ' )' → logprob: -14.384449005126953
    9. '            ' → logprob: -14.759449005126953
    10. ',' → logprob: -14.884449005126953

Token 386: '
' (ID: 198)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1801791787147522
    2. ' self' → logprob: -1.8051791191101074
    3. '       ' → logprob: -8.680179595947266
    4. '
' → logprob: -8.930179595947266
    5. '           ' → logprob: -9.055179595947266
    6. '               ' → logprob: -11.680179595947266
    7. ' ' → logprob: -14.055179595947266
    8. '(self' → logprob: -14.180179595947266
    9. '         ' → logprob: -14.305179595947266
    10. '   ' → logprob: -14.305179595947266

Token 387: '               ' (ID: 506)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3873889148235321
    2. ' self' → logprob: -1.1373889446258545
    3. '       ' → logprob: -7.637388706207275
    4. '           ' → logprob: -10.637389183044434
    5. '               ' → logprob: -11.637389183044434
    6. ' ' → logprob: -14.762389183044434
    7. '        ' → logprob: -14.762389183044434
    8. '
' → logprob: -15.012389183044434
    9. '   ' → logprob: -15.262389183044434
    10. '(self' → logprob: -15.262389183044434

Token 388: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0015455723041668534
    2. ' self' → logprob: -6.501545429229736
    3. '               ' → logprob: -10.751545906066895
    4. '           ' → logprob: -11.251545906066895
    5. '       ' → logprob: -12.126545906066895
    6. '                   ' → logprob: -13.376545906066895
    7. '   ' → logprob: -14.126545906066895
    8. '(self' → logprob: -15.251545906066895
    9. '         ' → logprob: -15.626545906066895
    10. '
' → logprob: -16.001544952392578

Token 389: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -1.1994775377388578e-05
    2. '.position' → logprob: -12.375012397766113
    3. '.' → logprob: -13.250012397766113
    4. '.user' → logprob: -13.250012397766113
    5. '.visit' → logprob: -13.750012397766113
    6. 'visited' → logprob: -14.250012397766113
    7. '.visible' → logprob: -14.375012397766113
    8. '.rece' → logprob: -14.625012397766113
    9. '.completed' → logprob: -14.875012397766113
    10. '.v' → logprob: -15.500012397766113

Token 390: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -4.36574100604048e-06
    2. 'ITED' → logprob: -13.500004768371582
    3. '_' → logprob: -13.625004768371582
    4. 'isted' → logprob: -13.750004768371582
    5. 'visited' → logprob: -16.000003814697266
    6. '
' → logprob: -16.250003814697266
    7. '```' → logprob: -16.625003814697266
    8. 'it' → logprob: -16.875003814697266
    9. '_it' → logprob: -17.125003814697266
    10. '`' → logprob: -17.125003814697266

Token 391: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -5.9153885558771435e-06
    2. '_' → logprob: -12.625005722045898
    3. ' _' → logprob: -14.750005722045898
    4. '_
' → logprob: -15.125005722045898
    5. 't' → logprob: -15.375005722045898
    6. 's' → logprob: -15.875005722045898
    7. '\' → logprob: -15.875005722045898
    8. '
' → logprob: -16.1250057220459
    9. '._' → logprob: -16.2500057220459
    10. ')_' → logprob: -16.2500057220459

Token 392: 'reas' (ID: 20712)
  Prédit: 'reas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reas' → logprob: -1.4817756414413452
    2. '_t' → logprob: -1.7317756414413452
    3. 'tre' → logprob: -1.7317756414413452
    4. 'is' → logprob: -2.1067757606506348
    5. 't' → logprob: -2.2317757606506348
    6. 's' → logprob: -2.7317757606506348
    7. 're' → logprob: -3.1067757606506348
    8. 'res' → logprob: -3.4817757606506348
    9. 'ures' → logprob: -4.106775760650635
    10. 'asures' → logprob: -4.356775760650635

Token 393: 'ures' (ID: 1609)
  Prédit: 'asures'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asures' → logprob: -0.31617701053619385
    2. 'ures' → logprob: -1.3161770105361938
    3. 's' → logprob: -6.441176891326904
    4. 'ur' → logprob: -7.316176891326904
    5. 'ured' → logprob: -8.691177368164062
    6. 'as' → logprob: -9.941177368164062
    7. 'ure' → logprob: -10.066177368164062
    8. 'os' → logprob: -10.441177368164062
    9. '_' → logprob: -10.441177368164062
    10. 'ores' → logprob: -10.566177368164062

Token 394: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1269284337759018
    2. '==' → logprob: -2.1269283294677734
    3. ')==' → logprob: -16.126928329467773
    4. '==
' → logprob: -16.751928329467773
    5. ' ==
' → logprob: -17.001928329467773
    6. '==(' → logprob: -17.501928329467773
    7. '   ' → logprob: -17.501928329467773
    8. ' ' → logprob: -17.501928329467773
    9. ')' → logprob: -17.626928329467773
    10. '           ' → logprob: -18.126928329467773

Token 395: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0009114635176956654
    2. ' other' → logprob: -7.000911235809326
    3. '(other' → logprob: -18.625911712646484
    4. 'self' → logprob: -19.125911712646484
    5. '.other' → logprob: -19.875911712646484
    6. 'Other' → logprob: -20.125911712646484
    7. 'others' → logprob: -20.875911712646484
    8. '   ' → logprob: -21.125911712646484
    9. '_other' → logprob: -22.125911712646484
    10. ' ' → logprob: -22.250911712646484

Token 396: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -0.03805205225944519
    2. '.' → logprob: -3.2880520820617676
    3. 'visited' → logprob: -12.91305160522461
    4. ' .' → logprob: -13.16305160522461
    5. '.vi' → logprob: -13.16305160522461
    6. '.completed' → logprob: -13.53805160522461
    7. '.other' → logprob: -14.03805160522461
    8. '.visit' → logprob: -15.03805160522461
    9. '.v' → logprob: -15.16305160522461
    10. '.rece' → logprob: -15.41305160522461

Token 397: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -0.00030197695014066994
    2. 'isted' → logprob: -8.1253023147583
    3. 'visited' → logprob: -13.2503023147583
    4. 'its' → logprob: -13.3753023147583
    5. 'itors' → logprob: -14.3753023147583
    6. '_' → logprob: -14.7503023147583
    7. 'is' → logprob: -15.1253023147583
    8. 's' → logprob: -15.2503023147583
    9. 'ITED' → logprob: -15.2503023147583
    10. 'it' → logprob: -16.250301361083984

Token 398: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -6.468279752880335e-05
    2. '.vis' → logprob: -10.875064849853516
    3. 'other' → logprob: -11.375064849853516
    4. '.' → logprob: -11.375064849853516
    5. 'visited' → logprob: -11.500064849853516
    6. '_' → logprob: -12.375064849853516
    7. '_vis' → logprob: -13.375064849853516
    8. '.other' → logprob: -13.500064849853516
    9. 't' → logprob: -14.125064849853516
    10. 'state' → logprob: -14.250064849853516

Token 399: 'reas' (ID: 20712)
  Prédit: 'reas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reas' → logprob: -0.27301275730133057
    2. 're' → logprob: -1.6480127573013306
    3. 'is' → logprob: -3.773012638092041
    4. 'visited' → logprob: -4.773012638092041
    5. 'res' → logprob: -5.148012638092041
    6. 'tre' → logprob: -5.523012638092041
    7. 'e' → logprob: -6.773012638092041
    8. 'reat' → logprob: -7.398012638092041
    9. 'asures' → logprob: -7.398012638092041
    10. 't' → logprob: -7.773012638092041

Token 400: 'ures' (ID: 1609)
  Prédit: 'asures'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asures' → logprob: -0.044103700667619705
    2. 'ures' → logprob: -3.1691036224365234
    3. 's' → logprob: -7.419103622436523
    4. 'ur' → logprob: -9.669103622436523
    5. 'ure' → logprob: -9.669103622436523
    6. 'au' → logprob: -9.919103622436523
    7. 'ured' → logprob: -9.919103622436523
    8. 'as' → logprob: -10.169103622436523
    9. 'asure' → logprob: -10.419103622436523
    10. '
' → logprob: -10.669103622436523

Token 401: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01391032338142395
    2. '               ' → logprob: -4.638910293579102
    3. 'and' → logprob: -5.513910293579102
    4. '                ' → logprob: -9.138910293579102
    5. '              ' → logprob: -12.263910293579102
    6. ')' → logprob: -13.763910293579102
    7. '            ' → logprob: -14.013910293579102
    8. '           ' → logprob: -14.263910293579102
    9. '             ' → logprob: -15.888910293579102
    10. '        ' → logprob: -16.1389102935791

Token 402: '
' (ID: 198)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2578936517238617
    2. '               ' → logprob: -1.507893681526184
    3. ' self' → logprob: -5.1328935623168945
    4. '                   ' → logprob: -10.507893562316895
    5. '           ' → logprob: -12.007893562316895
    6. '
' → logprob: -12.132893562316895
    7. '                ' → logprob: -12.882893562316895
    8. '(self' → logprob: -13.632893562316895
    9. '       ' → logprob: -13.757893562316895
    10. '                       ' → logprob: -13.882893562316895

Token 403: '               ' (ID: 506)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.059127748012542725
    2. ' self' → logprob: -3.0591278076171875
    3. '               ' → logprob: -4.5591278076171875
    4. 'other' → logprob: -12.309127807617188
    5. '                   ' → logprob: -12.684127807617188
    6. '           ' → logprob: -13.184127807617188
    7. '       ' → logprob: -13.559127807617188
    8. '                ' → logprob: -14.059127807617188
    9. '   ' → logprob: -14.809127807617188
    10. '              ' → logprob: -14.934127807617188

Token 404: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -5.872261317563243e-05
    2. ' self' → logprob: -9.750059127807617
    3. '           ' → logprob: -16.125059127807617
    4. '               ' → logprob: -16.125059127807617
    5. '   ' → logprob: -16.625059127807617
    6. '       ' → logprob: -16.750059127807617
    7. '                   ' → logprob: -18.500059127807617
    8. '
' → logprob: -20.000059127807617
    9. '(self' → logprob: -20.625059127807617
    10. '	self' → logprob: -21.125059127807617

Token 405: '.fr' (ID: 11435)
  Prédit: '.fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fr' → logprob: -1.8670179997570813e-05
    2. '.fre' → logprob: -11.875019073486328
    3. '.fragment' → logprob: -12.000019073486328
    4. '.fragments' → logprob: -12.375019073486328
    5. 'frag' → logprob: -14.125019073486328
    6. '.frm' → logprob: -16.125019073486328
    7. '.fl' → logprob: -16.500019073486328
    8. '.f' → logprob: -16.625019073486328
    9. ' .' → logprob: -16.625019073486328
    10. '	fr' → logprob: -17.500019073486328

Token 406: 'ag' (ID: 348)
  Prédit: 'ag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ag' → logprob: -1.5928495486150496e-05
    2. 'agle' → logprob: -12.250016212463379
    3. '.ag' → logprob: -12.375016212463379
    4. 'aggable' → logprob: -13.125016212463379
    5. 'agal' → logprob: -13.500016212463379
    6. 'frag' → logprob: -13.750016212463379
    7. 'rag' → logprob: -14.875016212463379
    8. ' fragile' → logprob: -15.125016212463379
    9. 'agl' → logprob: -15.250016212463379
    10. 'angible' → logprob: -15.250016212463379

Token 407: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -0.10267123579978943
    2. 'frag' → logprob: -3.2276711463928223
    3. 'ag' → logprob: -3.8526711463928223
    4. 'rag' → logprob: -3.9776711463928223
    5. ' fragile' → logprob: -5.227671146392822
    6. 'agle' → logprob: -5.477671146392822
    7. 'r' → logprob: -5.852671146392822
    8. '_frag' → logprob: -6.727671146392822
    9. 'atile' → logprob: -6.977671146392822
    10. 'ible' → logprob: -6.977671146392822

Token 408: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -4.246537173457909e-06
    2. '._' → logprob: -13.375003814697266
    3. '.' → logprob: -14.000003814697266
    4. 'map' → logprob: -14.000003814697266
    5. '.map' → logprob: -15.000003814697266
    6. 'frag' → logprob: -15.750003814697266
    7. 'Map' → logprob: -16.125003814697266
    8. 'self' → logprob: -16.125003814697266
    9. '_maps' → logprob: -17.000003814697266
    10. '\' → logprob: -17.000003814697266

Token 409: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25193315744400024
    2. ' ==' → logprob: -1.5019330978393555
    3. ')==' → logprob: -13.251933097839355
    4. '==
' → logprob: -13.251933097839355
    5. ')' → logprob: -15.376933097839355
    6. '=' → logprob: -15.876933097839355
    7. '   ' → logprob: -16.126934051513672
    8. ']==' → logprob: -17.126934051513672
    9. '==(' → logprob: -17.376934051513672
    10. ' ' → logprob: -17.376934051513672

Token 410: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0067156096920371056
    2. ' other' → logprob: -5.006715774536133
    3. '(other' → logprob: -15.506715774536133
    4. '.other' → logprob: -17.881715774536133
    5. 'self' → logprob: -18.131715774536133
    6. 'Other' → logprob: -18.756715774536133
    7. 'others' → logprob: -19.006715774536133
    8. 'oth' → logprob: -19.631715774536133
    9. '       ' → logprob: -19.881715774536133
    10. '   ' → logprob: -20.006715774536133

Token 411: '.fr' (ID: 11435)
  Prédit: '.fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fr' → logprob: -6.511406809295295e-06
    2. '.fre' → logprob: -12.375006675720215
    3. ' .' → logprob: -14.375006675720215
    4. '.' → logprob: -14.500006675720215
    5. '.fl' → logprob: -14.875006675720215
    6. '.fragment' → logprob: -15.500006675720215
    7. 'frag' → logprob: -15.500006675720215
    8. '.fragments' → logprob: -15.625006675720215
    9. '.frm' → logprob: -16.6250057220459
    10. '.fig' → logprob: -17.1250057220459

Token 412: 'ag' (ID: 348)
  Prédit: 'ag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ag' → logprob: -0.0003909927327185869
    2. 'frag' → logprob: -8.250391006469727
    3. '.ag' → logprob: -10.250391006469727
    4. 'agle' → logprob: -10.875391006469727
    5. ' fragile' → logprob: -11.000391006469727
    6. 'rag' → logprob: -11.125391006469727
    7. 'agl' → logprob: -11.500391006469727
    8. 'aggable' → logprob: -12.000391006469727
    9. '_frag' → logprob: -12.375391006469727
    10. 'agal' → logprob: -12.500391006469727

Token 413: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -0.014230499044060707
    2. 'ible' → logprob: -5.139230728149414
    3. 'ag' → logprob: -6.014230728149414
    4. 'agle' → logprob: -6.764230728149414
    5. 'able' → logprob: -6.889230728149414
    6. 'r' → logprob: -7.264230728149414
    7. 'il' → logprob: -7.639230728149414
    8. 'atile' → logprob: -8.014230728149414
    9. 'iles' → logprob: -8.264230728149414
    10. 'rag' → logprob: -8.389230728149414

Token 414: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0011450991732999682
    2. 'frag' → logprob: -7.001144886016846
    3. '.fr' → logprob: -8.626145362854004
    4. 'map' → logprob: -10.876145362854004
    5. 'Map' → logprob: -11.126145362854004
    6. '_frag' → logprob: -11.626145362854004
    7. 'fr' → logprob: -12.376145362854004
    8. '.' → logprob: -13.626145362854004
    9. '.map' → logprob: -13.751145362854004
    10. '_.' → logprob: -14.126145362854004

Token 415: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.6312321753939614e-05
    2. ' )' → logprob: -10.875036239624023
    3. ')
' → logprob: -11.375036239624023
    4. '       ' → logprob: -12.250036239624023
    5. ')

' → logprob: -15.250036239624023
    6. '))' → logprob: -15.750036239624023
    7. '   ' → logprob: -15.875036239624023
    8. ' and' → logprob: -16.000036239624023
    9. ')return' → logprob: -16.375036239624023
    10. ')#' → logprob: -16.375036239624023

Token 416: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004356652498245239
    2. 'def' → logprob: -6.129356861114502
    3. '
' → logprob: -6.754356861114502
    4. '    
' → logprob: -7.629356861114502
    5. ' def' → logprob: -8.129356384277344
    6. 'class' → logprob: -10.254356384277344
    7. '<|end|>' → logprob: -10.254356384277344
    8. ')' → logprob: -10.504356384277344
    9. ' 
' → logprob: -10.629356384277344
    10. '    ' → logprob: -10.754356384277344

Token 417: ' Customized' (ID: 132862)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0007618647650815547
    2. 'from' → logprob: -7.750761985778809
    3. '#' → logprob: -8.500761985778809
    4. 'def' → logprob: -9.000761985778809
    5. 'import' → logprob: -12.750761985778809
    6. ' class' → logprob: -13.500761985778809
    7. '
' → logprob: -16.250761032104492
    8. 'Class' → logprob: -17.750761032104492
    9. 'The' → logprob: -17.875761032104492
    10. 'Next' → logprob: -17.875761032104492

Token 418: ' lab' (ID: 9887)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.022504441440105438
    2. 'class' → logprob: -4.1475043296813965
    3. ' deque' → logprob: -5.8975043296813965
    4. 'Deque' → logprob: -7.5225043296813965
    5. 'B' → logprob: -7.5225043296813965
    6. 'dict' → logprob: -7.6475043296813965
    7. 'from' → logprob: -7.8975043296813965
    8. 'def' → logprob: -8.147504806518555
    9. 'queue' → logprob: -8.272504806518555
    10. 'named' → logprob: -8.272504806518555

Token 419: 'yr' (ID: 3866)
  Prédit: 'yrinth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yrinth' → logprob: -0.12182271480560303
    2. 'class' → logprob: -2.3718228340148926
    3. 'ab' → logprob: -3.8718228340148926
    4. 'y' → logprob: -8.621822357177734
    5. 'yr' → logprob: -9.746822357177734
    6. ' class' → logprob: -9.996822357177734
    7. 'aby' → logprob: -10.121822357177734
    8. '#' → logprob: -10.746822357177734
    9. 'ir' → logprob: -10.871822357177734
    10. 'aclass' → logprob: -10.996822357177734

Token 420: 'inthe' (ID: 136097)
  Prédit: 'inth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inth' → logprob: -0.004093004856258631
    2. 'ith' → logprob: -5.504093170166016
    3. 'class' → logprob: -12.254093170166016
    4. 'ynth' → logprob: -12.629093170166016
    5. 'inh' → logprob: -13.254093170166016
    6. '#' → logprob: -13.879093170166016
    7. 'ind' → logprob: -14.004093170166016
    8. 'ath' → logprob: -14.379093170166016
    9. 'ifth' → logprob: -14.629093170166016
    10. 'irth' → logprob: -14.754093170166016

Token 421: ' that' (ID: 484)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7396345734596252
    2. 'th' → logprob: -1.3646345138549805
    3. 'class' → logprob: -2.3646345138549805
    4. 'h' → logprob: -2.4896345138549805
    5. 'hm' → logprob: -3.1146345138549805
    6. 'mh' → logprob: -3.6146345138549805
    7. 'n' → logprob: -5.4896345138549805
    8. 'nth' → logprob: -5.8646345138549805
    9. 'ph' → logprob: -5.9896345138549805
    10. 'inth' → logprob: -6.7396345138549805

Token 422: ' supports' (ID: 17203)
  Prédit: 'supports'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'supports' → logprob: -1.926694631576538
    2. 'extends' → logprob: -2.051694631576538
    3. 'inherits' → logprob: -2.551694631576538
    4. ' tracks' → logprob: -2.551694631576538
    5. ' extends' → logprob: -2.801694631576538
    6. 'allows' → logprob: -2.801694631576538
    7. ' allows' → logprob: -2.926694631576538
    8. 'handles' → logprob: -3.301694631576538
    9. ' supports' → logprob: -3.426694631576538
    10. ' handles' → logprob: -3.426694631576538

Token 423: ' collapse' (ID: 38335)
  Prédit: ' fragile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fragile' → logprob: -0.47094255685806274
    2. 'frag' → logprob: -1.095942497253418
    3. ' frag' → logprob: -4.970942497253418
    4. 'path' → logprob: -6.095942497253418
    5. ' collapsing' → logprob: -6.095942497253418
    6. ' the' → logprob: -6.220942497253418
    7. ' path' → logprob: -6.220942497253418
    8. 'collapse' → logprob: -6.595942497253418
    9. 'the' → logprob: -6.595942497253418
    10. ' treasure' → logprob: -6.720942497253418

Token 424: ' logic' (ID: 18485)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0018555807182565331
    2. ' class' → logprob: -6.501855373382568
    3. 's' → logprob: -8.126855850219727
    4. 'd' → logprob: -11.001855850219727
    5. '<|end|>' → logprob: -11.376855850219727
    6. '
' → logprob: -11.876855850219727
    7. ' and' → logprob: -12.376855850219727
    8. '-class' → logprob: -12.626855850219727
    9. '<class' → logprob: -12.626855850219727
    10. ' of' → logprob: -13.001855850219727

Token 425: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00027825910365208983
    2. '
' → logprob: -8.62527847290039
    3. ' class' → logprob: -9.37527847290039
    4. 's' → logprob: -11.87527847290039
    5. '<|end|>' → logprob: -12.87527847290039
    6. '<class' → logprob: -13.50027847290039
    7. ',' → logprob: -14.25027847290039
    8. ',class' → logprob: -14.37527847290039
    9. ':' → logprob: -15.12527847290039
    10. '(class' → logprob: -15.12527847290039

Token 426: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -7.896309739408025e-07
    2. ' class' → logprob: -14.125000953674316
    3. '<class' → logprob: -17.625
    4. '
' → logprob: -18.125
    5. '"class' → logprob: -18.25
    6. '<|end|>' → logprob: -18.625
    7. '-class' → logprob: -18.875
    8. ',class' → logprob: -19.25
    9. 'Class' → logprob: -19.75
    10. '_class' → logprob: -20.0

Token 427: ' Frag' (ID: 122221)
  Prédit: 'Frag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Frag' → logprob: -0.5512634515762329
    2. 'Collapse' → logprob: -1.551263451576233
    3. 'Coll' → logprob: -2.3012633323669434
    4. 'Lab' → logprob: -3.1762633323669434
    5. ' Frag' → logprob: -3.4262633323669434
    6. 'Collapsed' → logprob: -4.176263332366943
    7. ' Coll' → logprob: -5.051263332366943
    8. 'Custom' → logprob: -5.551263332366943
    9. ' Collapse' → logprob: -5.926263332366943
    10. 'Tre' → logprob: -6.051263332366943

Token 428: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -9.968312951968983e-06
    2. 'il' → logprob: -11.875009536743164
    3. 'ility' → logprob: -14.250009536743164
    4. 'ible' → logprob: -14.500009536743164
    5. 'tile' → logprob: -14.625009536743164
    6. 'i' → logprob: -15.250009536743164
    7. 'Tile' → logprob: -16.250009536743164
    8. 'le' → logprob: -16.375009536743164
    9. 'ilent' → logprob: -16.375009536743164
    10. '

' → logprob: -16.375009536743164

Token 429: 'Lab' (ID: 34048)
  Prédit: 'Lab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Lab' → logprob: -1.2664456789934775e-06
    2. ' Lab' → logprob: -14.125000953674316
    3. '_lab' → logprob: -15.875000953674316
    4. '(L' → logprob: -16.000001907348633
    5. '_L' → logprob: -16.125001907348633
    6. 'Labor' → logprob: -16.250001907348633
    7. 'Labs' → logprob: -17.125001907348633
    8. 'Maze' → logprob: -17.250001907348633
    9. ' labyrinth' → logprob: -17.750001907348633
    10. 'lab' → logprob: -17.875001907348633

Token 430: 'yrinth' (ID: 113153)
  Prédit: 'yrinth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yrinth' → logprob: -0.014558563008904457
    2. 'rin' → logprob: -4.514558792114258
    3. 'inth' → logprob: -5.889558792114258
    4. 'r' → logprob: -8.014558792114258
    5. 'ir' → logprob: -8.889558792114258
    6. 'irth' → logprob: -9.389558792114258
    7. 'er' → logprob: -9.889558792114258
    8. 'ry' → logprob: -10.014558792114258
    9. 'yr' → logprob: -10.514558792114258
    10. 'ryn' → logprob: -10.889558792114258

Token 431: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -1.2471589798224159e-05
    2. ':' → logprob: -11.750012397766113
    3. '(' → logprob: -12.875012397766113
    4. 'Lab' → logprob: -14.000012397766113
    5. ':
' → logprob: -14.625012397766113
    6. ' (' → logprob: -15.500012397766113
    7. ' Lab' → logprob: -15.750012397766113
    8. ' :' → logprob: -16.00001335144043
    9. '(Abstract' → logprob: -16.37501335144043
    10. '   ' → logprob: -17.25001335144043

Token 432: 'ab' (ID: 378)
  Prédit: 'ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -4.000763510703109e-05
    2. 'a' → logprob: -11.625040054321289
    3. '(ab' → logprob: -12.250040054321289
    4. 'Lab' → logprob: -12.375040054321289
    5. 'аб' → logprob: -12.625040054321289
    6. 'aby' → logprob: -12.625040054321289
    7. ' ab' → logprob: -13.625040054321289
    8. 'abor' → logprob: -13.625040054321289
    9. 'abc' → logprob: -14.000040054321289
    10. '(' → logprob: -14.000040054321289

Token 433: 'yrinth' (ID: 113153)
  Prédit: 'yrinth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yrinth' → logprob: -0.00047202190035022795
    2. 'ir' → logprob: -8.125472068786621
    3. 'yr' → logprob: -10.125472068786621
    4. 'rin' → logprob: -10.250472068786621
    5. 'r' → logprob: -10.500472068786621
    6. 'ry' → logprob: -10.625472068786621
    7. 'irth' → logprob: -11.000472068786621
    8. 'ril' → logprob: -12.000472068786621
    9. 'ryn' → logprob: -12.375472068786621
    10. 'ri' → logprob: -12.375472068786621

Token 434: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38692420721054077
    2. '):' → logprob: -1.1369242668151855
    3. '   ' → logprob: -10.636923789978027
    4. '):
' → logprob: -11.011923789978027
    5. '):

' → logprob: -12.136923789978027
    6. ')' → logprob: -12.386923789978027
    7. ':' → logprob: -14.136923789978027
    8. ':
' → logprob: -14.261923789978027
    9. ',' → logprob: -14.636923789978027
    10. ' ):
' → logprob: -14.761923789978027

Token 435: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004528374411165714
    2. ' def' → logprob: -8.000452995300293
    3. 'def' → logprob: -9.250452995300293
    4. '    
' → logprob: -11.500452995300293
    5. ':' → logprob: -12.375452995300293
    6. ':def' → logprob: -13.250452995300293
    7. '
' → logprob: -13.625452995300293
    8. '):
' → logprob: -14.000452995300293
    9. '	def' → logprob: -14.000452995300293
    10. ',' → logprob: -14.125452995300293

Token 436: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8830015659332275
    2. 'def' (adapté à ' def') → logprob: -1.0080015659332275
    3. ' def' → logprob: -1.5080015659332275
    4. 'FR' → logprob: -10.383001327514648
    5. ' COLL' → logprob: -10.383001327514648
    6. ' FR' → logprob: -10.758001327514648
    7. 'frag' → logprob: -11.133001327514648
    8. '    
' → logprob: -11.383001327514648
    9. 'COL' → logprob: -11.758001327514648
    10. '	def' → logprob: -11.758001327514648

Token 437: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.7514341473579407
    2. ' def' → logprob: -0.8764341473579407
    3. 'def' → logprob: -2.501434087753296
    4. '__' → logprob: -4.126434326171875
    5. 'init' → logprob: -4.751434326171875
    6. ' init' → logprob: -6.376434326171875
    7. '_init' → logprob: -6.501434326171875
    8. 'is' → logprob: -7.376434326171875
    9. ' is' → logprob: -7.376434326171875
    10. '_is' → logprob: -8.251434326171875

Token 438: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.704273118884885e-07
    2. 'nit' → logprob: -15.625000953674316
    3. 'it' → logprob: -16.125
    4. 'int' → logprob: -16.25
    5. 'frag' → logprob: -16.25
    6. 'def' → logprob: -17.75
    7. '_init' → logprob: -18.375
    8. 'new' → logprob: -18.375
    9. '(init' → logprob: -18.625
    10. '```' → logprob: -18.75

Token 439: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0015117661096155643
    2. '(self' → logprob: -6.501511573791504
    3. '__' → logprob: -11.751511573791504
    4. 'self' → logprob: -14.001511573791504
    5. '__(
' → logprob: -14.376511573791504
    6. '_(' → logprob: -16.00151252746582
    7. '__,' → logprob: -16.75151252746582
    8. '__((' → logprob: -17.50151252746582
    9. ',' → logprob: -17.75151252746582
    10. '=self' → logprob: -17.87651252746582

Token 440: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009610046399757266
    2. ' self' → logprob: -7.000960826873779
    3. ',' → logprob: -10.000961303710938
    4. ',self' → logprob: -13.250961303710938
    5. 'grid' → logprob: -14.000961303710938
    6. '   ' → logprob: -14.000961303710938
    7. '       ' → logprob: -15.625961303710938
    8. ')' → logprob: -15.875961303710938
    9. '(self' → logprob: -16.000961303710938
    10. '```' → logprob: -16.250961303710938

Token 441: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013077369658276439
    2. 'self' → logprob: -6.876307964324951
    3. ',self' → logprob: -8.626307487487793
    4. ' ,' → logprob: -9.501307487487793
    5. '(self' → logprob: -12.001307487487793
    6. ' self' → logprob: -12.251307487487793
    7. '       ' → logprob: -12.501307487487793
    8. '__,' → logprob: -12.876307487487793
    9. '   ' → logprob: -13.376307487487793
    10. '_,' → logprob: -15.001307487487793

Token 442: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.1750377118587494
    2. 'self' → logprob: -2.3000376224517822
    3. ' grid' → logprob: -2.9250376224517822
    4. '       ' → logprob: -5.550037860870361
    5. ' self' → logprob: -6.550037860870361
    6. '   ' → logprob: -7.050037860870361
    7. ',' → logprob: -8.550037384033203
    8. '           ' → logprob: -10.425037384033203
    9. 'graph' → logprob: -10.425037384033203
    10. '    ' → logprob: -10.737537384033203

Token 443: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14211250841617584
    2. ':' → logprob: -2.1421124935150146
    3. '):
' → logprob: -4.392112731933594
    4. ',' → logprob: -6.267112731933594
    5. ' ):' → logprob: -7.767112731933594
    6. ')' → logprob: -8.392112731933594
    7. '):
' → logprob: -9.892112731933594
    8. ' :' → logprob: -10.517112731933594
    9. ':list' → logprob: -11.642112731933594
    10. '   ' → logprob: -11.892112731933594

Token 444: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.16184967756271362
    2. 'grid' → logprob: -1.9118497371673584
    3. ' grid' → logprob: -7.036849498748779
    4. ' List' → logprob: -7.286849498748779
    5. 'list' → logprob: -10.661849975585938
    6. '       ' → logprob: -11.161849975585938
    7. '[List' → logprob: -11.411849975585938
    8. 'Grid' → logprob: -12.286849975585938
    9. '   ' → logprob: -12.786849975585938
    10. '(grid' → logprob: -13.161849975585938

Token 445: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: 0.0
    2. 'str' → logprob: -17.75
    3. '[int' → logprob: -18.25
    4. '   ' → logprob: -18.5
    5. '       ' → logprob: -18.875
    6. '[' → logprob: -19.25
    7. '[List' → logprob: -20.625
    8. ':str' → logprob: -21.0
    9. '           ' → logprob: -21.125
    10. ' [' → logprob: -21.125

Token 446: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.038291867822408676
    2. '):' → logprob: -3.2882919311523438
    3. '):
' → logprob: -8.663291931152344
    4. '       ' → logprob: -10.288291931152344
    5. '   ' → logprob: -10.788291931152344
    6. ']):
' → logprob: -11.163291931152344
    7. ' ):
' → logprob: -12.913291931152344
    8. ')):
' → logprob: -13.413291931152344
    9. ')' → logprob: -13.663291931152344
    10. '):

' → logprob: -14.163291931152344

Token 447: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003416607796680182
    2. 'super' → logprob: -8.375341415405273
    3. ' super' → logprob: -9.125341415405273
    4. ',' → logprob: -14.500341415405273
    5. '   ' → logprob: -14.500341415405273
    6. 'self' → logprob: -14.500341415405273
    7. '	super' → logprob: -14.875341415405273
    8. '      ' → logprob: -16.500341415405273
    9. '	' → logprob: -16.500341415405273
    10. ' self' → logprob: -16.625341415405273

Token 448: ' super' (ID: 2539)
  Prédit: 'super'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'super' (adapté à ' super') → logprob: -0.31428274512290955
    2. '       ' → logprob: -1.439282774925232
    3. ' super' → logprob: -3.4392826557159424
    4. 'self' → logprob: -7.6892828941345215
    5. '   ' → logprob: -11.064282417297363
    6. '	super' → logprob: -11.564282417297363
    7. ' self' → logprob: -11.689282417297363
    8. ' ' → logprob: -12.314282417297363
    9. 'import' → logprob: -13.939282417297363
    10. '           ' → logprob: -13.939282417297363

Token 449: '().__' (ID: 57377)
  Prédit: '().__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().__' → logprob: -9.102680633077398e-05
    2. '()' → logprob: -10.000090599060059
    3. '().' → logprob: -10.000090599060059
    4. ').__' → logprob: -16.125091552734375
    5. '(' → logprob: -17.500091552734375
    6. '.__' → logprob: -17.750091552734375
    7. '()`' → logprob: -17.875091552734375
    8. '()).' → logprob: -18.250091552734375
    9. '()-' → logprob: -18.375091552734375
    10. '(),' → logprob: -18.625091552734375

Token 450: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0011031834874302149
    2. '_init' → logprob: -7.001103401184082
    3. '__' → logprob: -8.626103401184082
    4. 'nit' → logprob: -11.626103401184082
    5. '(init' → logprob: -13.501103401184082
    6. 'grid' → logprob: -14.501103401184082
    7. 'in' → logprob: -15.501103401184082
    8. '-init' → logprob: -15.626103401184082
    9. 'Init' → logprob: -15.751103401184082
    10. 'def' → logprob: -15.751103401184082

Token 451: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.6938102841377258
    2. '(grid' → logprob: -0.6938102841377258
    3. '(' → logprob: -7.81881046295166
    4. '(Grid' → logprob: -9.44381046295166
    5. '()(' → logprob: -9.56881046295166
    6. '__' → logprob: -10.06881046295166
    7. '().__' → logprob: -10.69381046295166
    8. '_(' → logprob: -10.94381046295166
    9. '__(
' → logprob: -11.94381046295166
    10. ')(' → logprob: -12.44381046295166

Token 452: 'grid' (ID: 7886)
  Prédit: 'grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -1.0206720617134124e-05
    2. ' grid' → logprob: -11.50001049041748
    3. '(grid' → logprob: -16.875009536743164
    4. ')' → logprob: -18.000009536743164
    5. '
' → logprob: -18.500009536743164
    6. '.grid' → logprob: -18.625009536743164
    7. '	grid' → logprob: -18.750009536743164
    8. '   ' → logprob: -18.875009536743164
    9. '```' → logprob: -20.625009536743164
    10. '       ' → logprob: -20.875009536743164

Token 453: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1602804809808731
    2. ')' → logprob: -1.910280466079712
    3. '       ' → logprob: -10.535280227661133
    4. ')
' → logprob: -10.910280227661133
    5. ')

' → logprob: -11.785280227661133
    6. ' )
' → logprob: -12.910280227661133
    7. '   ' → logprob: -14.285280227661133
    8. ' )' → logprob: -15.410280227661133
    9. ')#' → logprob: -15.660280227661133
    10. '
' → logprob: -16.410280227661133

Token 454: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9003633260726929
    2. '   ' → logprob: -1.1503633260726929
    3. '    
' → logprob: -1.4003633260726929
    4. '       ' → logprob: -3.7753634452819824
    5. '        
' → logprob: -5.275363445281982
    6. 'def' → logprob: -6.275363445281982
    7. '<|end|>' → logprob: -8.400362968444824
    8. ' def' → logprob: -8.900362968444824
    9. '  
' → logprob: -9.400362968444824
    10. '   
' → logprob: -9.900362968444824

Token 455: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018223924562335014
    2. 'def' → logprob: -4.018223762512207
    3. ' def' → logprob: -9.518223762512207
    4. '       ' → logprob: -16.018224716186523
    5. '    
' → logprob: -16.018224716186523
    6. '  ' → logprob: -16.643224716186523
    7. '	def' → logprob: -16.768224716186523
    8. ' ' → logprob: -17.393224716186523
    9. '
' → logprob: -17.768224716186523
    10. '<|end|>' → logprob: -18.268224716186523

Token 456: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.992775888647884e-05
    2. ' def' → logprob: -9.750069618225098
    3. '   ' → logprob: -11.375069618225098
    4. '#' → logprob: -16.750070571899414
    5. 'de' → logprob: -18.000070571899414
    6. '    
' → logprob: -18.500070571899414
    7. '	def' → logprob: -19.625070571899414
    8. '
' → logprob: -20.000070571899414
    9. ' ' → logprob: -20.875070571899414
    10. '  ' → logprob: -21.250070571899414

Token 457: ' start' (ID: 1604)
  Prédit: ' collapse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collapse' → logprob: -1.1400312185287476
    2. ' can' → logprob: -1.7650312185287476
    3. ' update' → logprob: -2.390031337738037
    4. 'collapse' → logprob: -2.640031337738037
    5. ' simulate' → logprob: -2.765031337738037
    6. ' is' → logprob: -2.765031337738037
    7. 'simulate' → logprob: -3.015031337738037
    8. 'can' → logprob: -3.265031337738037
    9. ' step' → logprob: -3.765031337738037
    10. ' move' → logprob: -4.015031337738037

Token 458: '_state' (ID: 9479)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01685754396021366
    2. '_state' → logprob: -4.516857624053955
    3. '_position' → logprob: -5.266857624053955
    4. '_positions' → logprob: -8.016857147216797
    5. '_pos' → logprob: -9.141857147216797
    6. 'self' → logprob: -9.266857147216797
    7. '_states' → logprob: -10.641857147216797
    8. '_' → logprob: -10.766857147216797
    9. '_(' → logprob: -10.891857147216797
    10. '(' → logprob: -11.266857147216797

Token 459: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.438573680294212e-06
    2. 'self' → logprob: -12.625005722045898
    3. '(' → logprob: -13.375005722045898
    4. '   ' → logprob: -15.750005722045898
    5. ' (' → logprob: -16.6250057220459
    6. '()' → logprob: -16.7500057220459
    7. '(s' → logprob: -17.1250057220459
    8. '=self' → logprob: -17.2500057220459
    9. '():
' → logprob: -17.3750057220459
    10. '       ' → logprob: -17.3750057220459

Token 460: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22286981344223022
    2. ',' → logprob: -2.347869873046875
    3. ')' → logprob: -2.847869873046875
    4. '):
' → logprob: -3.097869873046875
    5. ' ):' → logprob: -7.472869873046875
    6. '):
' → logprob: -8.722869873046875
    7. ' )' → logprob: -9.097869873046875
    8. ')->' → logprob: -9.472869873046875
    9. ' ,' → logprob: -9.847869873046875
    10. ' ):
' → logprob: -9.972869873046875

Token 461: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00046284322161227465
    2. '(' → logprob: -8.250462532043457
    3. 'self' → logprob: -8.875462532043457
    4. ':' → logprob: -10.875462532043457
    5. '   ' → logprob: -11.375462532043457
    6. ')' → logprob: -11.875462532043457
    7. '->' → logprob: -12.125462532043457
    8. '       ' → logprob: -12.125462532043457
    9. ' ->' → logprob: -12.500462532043457
    10. '):' → logprob: -13.000462532043457

Token 462: ' Path' (ID: 14027)
  Prédit: 'Path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -0.0004019521293230355
    2. ' Path' → logprob: -8.125401496887207
    3. 'Set' → logprob: -9.250401496887207
    4. 'Tuple' → logprob: -11.750401496887207
    5. 'Pat' → logprob: -14.375401496887207
    6. 'State' → logprob: -14.625401496887207
    7. 'List' → logprob: -15.000401496887207
    8. 'path' → logprob: -16.125402450561523
    9. 'set' → logprob: -16.250402450561523
    10. 'Position' → logprob: -16.625402450561523

Token 463: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: 0.0
    2. 'state' → logprob: -19.375
    3. '_state' → logprob: -19.625
    4. '_STATE' → logprob: -20.0
    5. '	State' → logprob: -20.0
    6. 'Stat' → logprob: -21.25
    7. '[' → logprob: -21.625
    8. 'STATE' → logprob: -21.625
    9. '_State' → logprob: -21.875
    10. 'Token' → logprob: -22.75

Token 464: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8342868685722351
    2. ':' → logprob: -0.9592868685722351
    3. '(self' → logprob: -1.8342869281768799
    4. '():
' → logprob: -4.959286689758301
    5. '       ' → logprob: -5.334286689758301
    6. '(' → logprob: -5.584286689758301
    7. '):
' → logprob: -5.709286689758301
    8. '():' → logprob: -6.834286689758301
    9. '(
' → logprob: -6.959286689758301
    10. '   ' → logprob: -7.084286689758301

Token 465: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013439853675663471
    2. ' return' → logprob: -4.388439655303955
    3. 'return' → logprob: -7.013439655303955
    4. ',' → logprob: -11.888440132141113
    5. ':' → logprob: -12.513440132141113
    6. '(' → logprob: -12.763440132141113
    7. 'position' → logprob: -12.888440132141113
    8. '```' → logprob: -13.263440132141113
    9. '        
' → logprob: -13.513440132141113
    10. ':return' → logprob: -13.763440132141113

Token 466: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3829989433288574
    2. 'return' → logprob: -1.2579989433288574
    3. '       ' → logprob: -3.3829989433288574
    4. ' position' → logprob: -12.882999420166016
    5. 'position' → logprob: -13.132999420166016
    6. 'frag' → logprob: -13.257999420166016
    7. '```' → logprob: -13.382999420166016
    8. '        ' → logprob: -13.382999420166016
    9. '#' (adapté à ' #') → logprob: -13.507999420166016
    10. ' fragile' → logprob: -13.507999420166016

Token 467: ' At' (ID: 3604)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.025130320340394974
    2. ' return' → logprob: -3.775130271911621
    3. '#' → logprob: -6.775130271911621
    4. 'initial' → logprob: -8.525130271911621
    5. 'visited' → logprob: -9.275130271911621
    6. 'frag' → logprob: -9.525130271911621
    7. 'position' → logprob: -9.525130271911621
    8. 'start' → logprob: -9.525130271911621
    9. '       ' → logprob: -9.650130271911621
    10. ' initial' → logprob: -10.150130271911621

Token 468: ' start' (ID: 1604)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07922497391700745
    2. ' self' → logprob: -2.5792250633239746
    3. '(self' → logprob: -8.829224586486816
    4. 'position' → logprob: -9.454224586486816
    5. ' position' → logprob: -9.829224586486816
    6. ' (' → logprob: -11.204224586486816
    7. 'return' → logprob: -11.204224586486816
    8. '(' → logprob: -11.954224586486816
    9. ' the' → logprob: -12.329224586486816
    10. ' return' → logprob: -12.704224586486816

Token 469: ' no' (ID: 860)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.33533117175102234
    2. 'return' → logprob: -2.3353312015533447
    3. ',' → logprob: -2.8353312015533447
    4. '       ' → logprob: -2.8353312015533447
    5. ' =' → logprob: -3.7103312015533447
    6. ' position' → logprob: -4.710330963134766
    7. ' (' → logprob: -4.835330963134766
    8. '):
' → logprob: -5.460330963134766
    9. ':' → logprob: -5.585330963134766
    10. ')' → logprob: -5.585330963134766

Token 470: ' treasure' (ID: 47849)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.0179493427276611
    2. 't' → logprob: -1.2679493427276611
    3. ' visited' → logprob: -2.267949342727661
    4. ' treasures' → logprob: -2.267949342727661
    5. 'frag' → logprob: -2.892949342727661
    6. ' fragile' → logprob: -3.392949342727661
    7. 'tre' → logprob: -3.642949342727661
    8. '_t' → logprob: -5.392949104309082
    9. ' positions' → logprob: -5.767949104309082
    10. '       ' → logprob: -5.892949104309082

Token 471: ' visited' (ID: 18416)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14461268484592438
    2. 'visited' → logprob: -2.6446127891540527
    3. 's' → logprob: -3.8946127891540527
    4. '_' → logprob: -4.769612789154053
    5. ' visited' → logprob: -5.144612789154053
    6. ' ,' → logprob: -5.394612789154053
    7. ' collected' → logprob: -5.644612789154053
    8. ' and' → logprob: -5.769612789154053
    9. '_col' → logprob: -6.019612789154053
    10. '       ' → logprob: -6.144612789154053

Token 472: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7073996067047119
    2. '       ' → logprob: -1.082399606704712
    3. ' and' → logprob: -1.957399606704712
    4. ' return' → logprob: -3.957399606704712
    5. 'return' → logprob: -5.082399368286133
    6. ' ,' → logprob: -7.582399368286133
    7. ' =' → logprob: -7.832399368286133
    8. '
' → logprob: -8.582399368286133
    9. ':' → logprob: -9.207399368286133
    10. '        
' → logprob: -9.582399368286133

Token 473: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -1.4707672595977783
    2. 'return' → logprob: -1.5957672595977783
    3. '       ' → logprob: -1.9707672595977783
    4. ' return' → logprob: -2.0957672595977783
    5. 'frag' → logprob: -2.3457672595977783
    6. 'no' → logprob: -2.4707672595977783
    7. ' fragile' → logprob: -2.4707672595977783
    8. '#' → logprob: -3.7207672595977783
    9. 'visited' → logprob: -5.345767021179199
    10. ' #' → logprob: -5.845767021179199

Token 474: ' floor' (ID: 8350)
  Prédit: 'frag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frag' → logprob: -0.08409538865089417
    2. ' fragile' → logprob: -2.7090954780578613
    3. 'collapsed' → logprob: -4.459095478057861
    4. ' frag' → logprob: -7.834095478057861
    5. '_frag' → logprob: -7.834095478057861
    6. ' collapsed' → logprob: -7.959095478057861
    7. 'positions' → logprob: -8.209095001220703
    8. ' positions' → logprob: -8.334095001220703
    9. 'fragment' → logprob: -8.459095001220703
    10. 'fr' → logprob: -8.584095001220703

Token 475: ' collapsed' (ID: 63282)
  Prédit: 'collapsed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collapsed' → logprob: -0.32488343119621277
    2. '_coll' → logprob: -2.324883460998535
    3. '_frag' → logprob: -2.824883460998535
    4. ' collapsed' → logprob: -3.449883460998535
    5. 'coll' → logprob: -3.949883460998535
    6. ' positions' → logprob: -4.199883460998535
    7. 'positions' → logprob: -4.449883460998535
    8. 'frag' → logprob: -4.699883460998535
    9. '_' → logprob: -4.824883460998535
    10. '_positions' → logprob: -5.574883460998535

Token 476: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1943831443786621
    2. '
' → logprob: -1.819383144378662
    3. 'return' → logprob: -4.944383144378662
    4. ',' → logprob: -5.444383144378662
    5. ' return' → logprob: -6.569383144378662
    6. '        
' → logprob: -6.944383144378662
    7. '
' → logprob: -8.44438362121582
    8. ':
' → logprob: -8.94438362121582
    9. '  
' → logprob: -9.44438362121582
    10. '    
' → logprob: -10.19438362121582

Token 477: ' entrance' (ID: 27326)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1294572502374649
    2. ' self' → logprob: -3.0044572353363037
    3. 'the' → logprob: -3.6294572353363037
    4. ' the' → logprob: -4.004457473754883
    5. '{' → logprob: -4.129457473754883
    6. 'set' → logprob: -5.629457473754883
    7. '(self' → logprob: -5.879457473754883
    8. ' set' → logprob: -6.879457473754883
    9. ' {(' → logprob: -6.879457473754883
    10. ' {' → logprob: -7.379457473754883

Token 478: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6171925067901611
    2. ',' → logprob: -0.9921925067901611
    3. '
' → logprob: -3.117192506790161
    4. 'return' → logprob: -4.117192268371582
    5. ' return' → logprob: -4.117192268371582
    6. ' and' → logprob: -4.867192268371582
    7. ' =' → logprob: -6.617192268371582
    8. '        
' → logprob: -6.867192268371582
    9. ' ,' → logprob: -7.367192268371582
    10. ',
' → logprob: -7.867192268371582

Token 479: ' stable' (ID: 22105)
  Prédit: 'fro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fro' → logprob: -0.7652703523635864
    2. 'set' → logprob: -1.5152703523635864
    3. ' set' → logprob: -2.140270233154297
    4. '{' → logprob: -2.390270233154297
    5. 'self' → logprob: -4.015270233154297
    6. ' in' → logprob: -4.015270233154297
    7. 'frag' → logprob: -4.140270233154297
    8. ' {(' → logprob: -4.265270233154297
    9. 'in' → logprob: -4.640270233154297
    10. 'not' → logprob: -5.015270233154297

Token 480: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027290277183055878
    2. 'return' → logprob: -4.027290344238281
    3. ' return' → logprob: -5.527290344238281
    4. '
' → logprob: -5.777290344238281
    5. ',' → logprob: -6.402290344238281
    6. ' =' → logprob: -9.777290344238281
    7. ' and' → logprob: -10.027290344238281
    8. ':' → logprob: -10.152290344238281
    9. '(' → logprob: -10.402290344238281
    10. '        
' → logprob: -10.527290344238281

Token 481: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009645000100135803
    2. ' return' → logprob: -5.134644985198975
    3. '
' → logprob: -6.759644985198975
    4. 'return' → logprob: -7.009644985198975
    5. ',' → logprob: -7.384644985198975
    6. '        
' → logprob: -8.134645462036133
    7. '<|end|>' → logprob: -8.134645462036133
    8. ':' → logprob: -9.259645462036133
    9. ' and' → logprob: -9.634645462036133
    10. '(' → logprob: -9.884645462036133

Token 482: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1145569235086441
    2. ' return' → logprob: -2.2395570278167725
    3. '       ' → logprob: -6.364556789398193
    4. 'self' → logprob: -12.739557266235352
    5. 'frag' → logprob: -12.864557266235352
    6. 'visited' → logprob: -13.614557266235352
    7. 'initial' → logprob: -13.739557266235352
    8. 'position' → logprob: -14.364557266235352
    9. 'fr' → logprob: -14.989557266235352
    10. ' self' → logprob: -15.239557266235352

Token 483: ' Entrance' (ID: 117244)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0690363198518753
    2. ' return' → logprob: -2.8190362453460693
    3. '       ' → logprob: -5.069036483764648
    4. 'frag' → logprob: -8.069036483764648
    5. 'visited' → logprob: -8.819036483764648
    6. 'initial' → logprob: -9.319036483764648
    7. 'entr' → logprob: -9.569036483764648
    8. 'fr' → logprob: -10.444036483764648
    9. ' initial' → logprob: -10.694036483764648
    10. ' fragile' → logprob: -11.069036483764648

Token 484: ' floor' (ID: 8350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09023360908031464
    2. ',' → logprob: -3.465233564376831
    3. '=' → logprob: -3.590233564376831
    4. ' is' → logprob: -4.71523380279541
    5. ':' → logprob: -5.59023380279541
    6. ')' → logprob: -5.59023380279541
    7. '<|end|>' → logprob: -5.96523380279541
    8. '=self' → logprob: -6.71523380279541
    9. '_pos' → logprob: -6.84023380279541
    10. 'self' → logprob: -7.46523380279541

Token 485: ' never' (ID: 3779)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.405213326215744
    2. '=' → logprob: -2.0302133560180664
    3. '_pos' → logprob: -2.7802133560180664
    4. '_coll' → logprob: -2.9052133560180664
    5. '_frag' → logprob: -3.5302133560180664
    6. '_set' → logprob: -4.155213356018066
    7. '_is' → logprob: -5.030213356018066
    8. '_floor' → logprob: -5.155213356018066
    9. 'collapsed' → logprob: -5.280213356018066
    10. '_positions' → logprob: -5.405213356018066

Token 486: ' collaps' (ID: 87851)
  Prédit: ' collaps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collaps' → logprob: -0.08090348541736603
    2. 'coll' → logprob: -2.5809035301208496
    3. 'collapsed' → logprob: -6.58090353012085
    4. 'collapse' → logprob: -7.95590353012085
    5. '_coll' → logprob: -9.955903053283691
    6. ' collapsed' → logprob: -10.580903053283691
    7. ' coll' → logprob: -10.705903053283691
    8. ' collapse' → logprob: -10.705903053283691
    9. 'col' → logprob: -10.830903053283691
    10. '```' → logprob: -10.830903053283691

Token 487: 'es' (ID: 268)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3903479278087616
    2. 'es' → logprob: -1.140347957611084
    3. 'ses' → logprob: -5.890347957611084
    4. 'des' → logprob: -8.640347480773926
    5. '```' → logprob: -8.765347480773926
    6. 'ed' → logprob: -9.015347480773926
    7. 'se' → logprob: -10.015347480773926
    8. 'ng' → logprob: -10.515347480773926
    9. 'ps' → logprob: -10.640347480773926
    10. 'ws' → logprob: -11.015347480773926

Token 488: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02259605936706066
    2. ',' → logprob: -4.8975958824157715
    3. 'return' → logprob: -5.1475958824157715
    4. '
' → logprob: -5.2725958824157715
    5. ' return' → logprob: -6.2725958824157715
    6. '<|end|>' → logprob: -7.1475958824157715
    7. ' =' → logprob: -8.39759635925293
    8. '        
' → logprob: -8.52259635925293
    9. ' and' → logprob: -8.89759635925293
    10. ')' → logprob: -9.02259635925293

Token 489: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06714192032814026
    2. 'return' → logprob: -3.3171420097351074
    3. ' return' → logprob: -3.5671420097351074
    4. ',' → logprob: -7.942142009735107
    5. '
' → logprob: -10.31714153289795
    6. ':' → logprob: -10.81714153289795
    7. '        
' → logprob: -11.69214153289795
    8. '	return' → logprob: -12.56714153289795
    9. ':return' → logprob: -12.56714153289795
    10. '<|end|>' → logprob: -12.81714153289795

Token 490: ' fragile' (ID: 68256)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06318879127502441
    2. ' return' → logprob: -2.9381887912750244
    3. '       ' → logprob: -4.813188552856445
    4. 'frag' → logprob: -9.063188552856445
    5. ' fragile' → logprob: -11.313188552856445
    6. 'self' → logprob: -12.063188552856445
    7. 'fr' → logprob: -12.688188552856445
    8. 'visited' → logprob: -12.813188552856445
    9. 'initial' → logprob: -13.313188552856445
    10. 'entr' → logprob: -13.438188552856445

Token 491: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0020711561664938927
    2. '_positions' → logprob: -7.252071380615234
    3. '_floor' → logprob: -7.252071380615234
    4. '_set' → logprob: -7.627071380615234
    5. ' =' → logprob: -9.627071380615234
    6. '_' → logprob: -10.127071380615234
    7. '=' → logprob: -10.752071380615234
    8. '_f' → logprob: -12.002071380615234
    9. '_pos' → logprob: -12.127071380615234
    10. '=set' → logprob: -12.252071380615234

Token 492: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06338752061128616
    2. '=' → logprob: -2.813387632369995
    3. '=set' → logprob: -6.563387393951416
    4. ':' → logprob: -12.563387870788574
    5. 'set' → logprob: -13.563387870788574
    6. '={}' → logprob: -14.313387870788574
    7. ' set' → logprob: -14.813387870788574
    8. ' ' → logprob: -14.813387870788574
    9. '=[]' → logprob: -15.063387870788574
    10. ',' → logprob: -15.313387870788574

Token 493: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -6.468279752880335e-05
    2. ' set' → logprob: -10.250064849853516
    3. '{' → logprob: -10.500064849853516
    4. '=set' → logprob: -14.375064849853516
    5. 'fro' → logprob: -14.625064849853516
    6. '(set' → logprob: -15.000064849853516
    7. '{}' → logprob: -15.625064849853516
    8. '	set' → logprob: -15.875064849853516
    9. ')set' → logprob: -16.750064849853516
    10. '#set' → logprob: -18.375064849853516

Token 494: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.676292231422849e-05
    2. '()
' → logprob: -11.375017166137695
    3. '([(' → logprob: -13.250017166137695
    4. '([' → logprob: -13.500017166137695
    5. '([]' → logprob: -14.125017166137695
    6. '()\' → logprob: -14.875017166137695
    7. '()

' → logprob: -15.125017166137695
    8. '()]' → logprob: -15.375017166137695
    9. '()"' → logprob: -16.125017166137695
    10. '()</' → logprob: -16.500017166137695

Token 495: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000504062045365572
    2. ' return' → logprob: -8.000504493713379
    3. 'return' → logprob: -8.750504493713379
    4. ',' → logprob: -12.500504493713379
    5. '
' → logprob: -13.125504493713379
    6. '   ' → logprob: -13.875504493713379
    7. '	' → logprob: -14.000504493713379
    8. '        
' → logprob: -14.375504493713379
    9. '	return' → logprob: -15.125504493713379
    10. '      ' → logprob: -15.500504493713379

Token 496: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1391931027173996
    2. '       ' → logprob: -2.389193058013916
    3. ' return' → logprob: -3.264193058013916
    4. 'position' → logprob: -13.139193534851074
    5. 'entr' → logprob: -13.389193534851074
    6. '	return' → logprob: -13.514193534851074
    7. 'eturn' → logprob: -14.264193534851074
    8. 'pos' → logprob: -14.889193534851074
    9. ')return' → logprob: -15.139193534851074
    10. '#' → logprob: -15.264193534851074

Token 497: ' Path' (ID: 14027)
  Prédit: ' Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Path' → logprob: -0.47407740354537964
    2. 'Path' → logprob: -0.9740774035453796
    3. '(Path' → logprob: -15.474077224731445
    4. '	Path' → logprob: -16.099077224731445
    5. 'Pat' → logprob: -18.099077224731445
    6. '   ' → logprob: -18.974077224731445
    7. '_Path' → logprob: -19.474077224731445
    8. 'PATH' → logprob: -19.724077224731445
    9. '<Path' → logprob: -19.724077224731445
    10. '_path' → logprob: -19.849077224731445

Token 498: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: 0.0
    2. 'state' → logprob: -16.75
    3. ' State' → logprob: -19.0
    4. '_state' → logprob: -19.0
    5. '_STATE' → logprob: -19.25
    6. '_State' → logprob: -20.25
    7. '	State' → logprob: -20.25
    8. 'STATE' → logprob: -20.375
    9. ' state' → logprob: -21.875
    10. 'States' → logprob: -22.125

Token 499: '(self' (ID: 2402)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.693294107913971
    2. '(self' → logprob: -0.693294107913971
    3. '(' → logprob: -8.943294525146484
    4. '(
' → logprob: -11.818294525146484
    5. '(((' → logprob: -11.943294525146484
    6. 'self' → logprob: -13.818294525146484
    7. '(position' → logprob: -14.193294525146484
    8. ' ((' → logprob: -15.068294525146484
    9. ' (' → logprob: -16.568294525146484
    10. '(tuple' → logprob: -16.568294525146484

Token 500: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.6060808522743173e-05
    2. 'entr' → logprob: -11.125025749206543
    3. ',' → logprob: -12.750025749206543
    4. '.position' → logprob: -12.875025749206543
    5. 'self' → logprob: -13.000025749206543
    6. '.ent' → logprob: -13.250025749206543
    7. ').' → logprob: -15.125025749206543
    8. ')' → logprob: -15.250025749206543
    9. '=' → logprob: -15.375025749206543
    10. ' .' → logprob: -15.750025749206543

Token 501: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.0007358930306509137
    2. '(' → logprob: -7.250735759735107
    3. 'position' → logprob: -11.500736236572266
    4. 'ent' → logprob: -12.125736236572266
    5. 'enter' → logprob: -13.000736236572266
    6. 'entrant' → logprob: -13.250736236572266
    7. '{' → logprob: -14.250736236572266
    8. '((' → logprob: -14.625736236572266
    9. '(self' → logprob: -14.625736236572266
    10. ' entrance' → logprob: -14.750736236572266

Token 502: 'ance' (ID: 766)
  Prédit: 'ance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.000491672137286514
    2. 'rance' → logprob: -7.625491619110107
    3. 'race' → logprob: -13.375492095947266
    4. 'r' → logprob: -14.375492095947266
    5. 'ence' → logprob: -15.375492095947266
    6. '   ' → logprob: -15.375492095947266
    7. 'ace' → logprob: -15.500492095947266
    8. 'tr' → logprob: -15.875492095947266
    9. '
' → logprob: -16.500492095947266
    10. 'dance' → logprob: -16.500492095947266

Token 503: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015691416338086128
    2. ' ,' → logprob: -6.5015692710876465
    3. ',set' → logprob: -9.751568794250488
    4. 'set' → logprob: -13.376568794250488
    5. ',{' → logprob: -13.376568794250488
    6. '[],' → logprob: -13.751568794250488
    7. ',
' → logprob: -13.876568794250488
    8. '       ' → logprob: -14.501568794250488
    9. '{},' → logprob: -14.501568794250488
    10. ',None' → logprob: -14.626568794250488

Token 504: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0004473540757317096
    2. ' set' → logprob: -8.125447273254395
    3. 'fro' → logprob: -8.875447273254395
    4. ')set' → logprob: -12.625447273254395
    5. ')' → logprob: -12.875447273254395
    6. 'visited' → logprob: -13.250447273254395
    7. '(set' → logprob: -14.000447273254395
    8. '=set' → logprob: -14.000447273254395
    9. ' fro' → logprob: -14.250447273254395
    10. '   ' → logprob: -14.625447273254395

Token 505: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.0017382439691573381
    2. '()' → logprob: -6.50173807144165
    3. '())' → logprob: -8.751738548278809
    4. '([]' → logprob: -9.876738548278809
    5. '()),' → logprob: -11.751738548278809
    6. '(),
' → logprob: -12.251738548278809
    7. '(),"' → logprob: -12.751738548278809
    8. '(),'' → logprob: -13.126738548278809
    9. ' (),' → logprob: -13.251738548278809
    10. '(),

' → logprob: -13.501738548278809

Token 506: ' fragile' (ID: 68256)
  Prédit: 'frag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frag' → logprob: -0.16083399951457977
    2. ' fragile' → logprob: -1.9108339548110962
    3. 'fro' → logprob: -7.535833835601807
    4. 'fr' → logprob: -11.160834312438965
    5. '{' → logprob: -11.410834312438965
    6. 'set' → logprob: -11.535834312438965
    7. 'fra' → logprob: -11.785834312438965
    8. ')' → logprob: -11.910834312438965
    9. ' frag' → logprob: -12.410834312438965
    10. ' set' → logprob: -12.660834312438965

Token 507: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0003317705122753978
    2. 'map' → logprob: -8.12533187866211
    3. 'Map' → logprob: -10.87533187866211
    4. ')' → logprob: -11.25033187866211
    5. '{' → logprob: -14.50033187866211
    6. '   ' → logprob: -14.62533187866211
    7. '_' → logprob: -15.25033187866211
    8. ' map' → logprob: -15.25033187866211
    9. '_set' → logprob: -15.25033187866211
    10. '.map' → logprob: -15.62533187866211

Token 508: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.13388703338569e-06
    2. ' )' → logprob: -12.000009536743164
    3. ')
' → logprob: -13.250009536743164
    4. '   ' → logprob: -14.125009536743164
    5. ')return' → logprob: -16.375009536743164
    6. '       ' → logprob: -16.750009536743164
    7. ' ' → logprob: -17.250009536743164
    8. ')

' → logprob: -17.250009536743164
    9. '<|end|>' → logprob: -17.625009536743164
    10. ')#' → logprob: -18.000009536743164

Token 509: '    
' (ID: 1944)
  Prédit: '    
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.16708162426948547
    2. '   ' → logprob: -1.917081594467163
    3. '
' → logprob: -5.417081832885742
    4. '<|end|>' → logprob: -6.417081832885742
    5. '        
' → logprob: -8.042081832885742
    6. '  
' → logprob: -8.542081832885742
    7. ' 
' → logprob: -8.917081832885742
    8. '<|end|>' → logprob: -10.042081832885742
    9. '   
' → logprob: -10.417081832885742
    10. 'def' → logprob: -11.542081832885742

Token 510: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038259752094745636
    2. 'def' → logprob: -3.288259744644165
    3. '    
' → logprob: -8.663259506225586
    4. ' def' → logprob: -10.413259506225586
    5. '<|end|>' → logprob: -12.038259506225586
    6. '<|end|>' → logprob: -12.038259506225586
    7. '
' → logprob: -13.163259506225586
    8. '	def' → logprob: -14.788259506225586
    9. '  
' → logprob: -15.163259506225586
    10. '        
' → logprob: -15.288259506225586

Token 511: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00013738969573751092
    2. '   ' → logprob: -9.000137329101562
    3. ' def' → logprob: -11.250137329101562
    4. '    
' → logprob: -14.500137329101562
    5. '
' → logprob: -14.750137329101562
    6. '	def' → logprob: -17.625137329101562
    7. 'from' → logprob: -18.250137329101562
    8. ' ' → logprob: -18.875137329101562
    9. '        
' → logprob: -19.000137329101562
    10. '  ' → logprob: -19.125137329101562

Token 512: ' is' (ID: 382)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.8319459557533264
    2. ' is' → logprob: -1.5819458961486816
    3. 'can' → logprob: -1.8319458961486816
    4. 'is' → logprob: -3.4569458961486816
    5. 'def' → logprob: -3.7069458961486816
    6. ' def' → logprob: -3.8319458961486816
    7. ' neighbors' → logprob: -3.8319458961486816
    8. ' collapse' → logprob: -4.081945896148682
    9. ' move' → logprob: -4.331945896148682
    10. ' possible' → logprob: -4.331945896148682

Token 513: '_t' (ID: 838)
  Prédit: '_enter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_enter' → logprob: -0.002078409306704998
    2. '_frag' → logprob: -6.502078533172607
    3. '_' → logprob: -7.627078533172607
    4. '_fragment' → logprob: -11.00207805633545
    5. '_in' → logprob: -12.12707805633545
    6. ' _' → logprob: -12.25207805633545
    7. '_open' → logprob: -12.25207805633545
    8. '_safe' → logprob: -12.25207805633545
    9. '_ent' → logprob: -12.37707805633545
    10. '_ENTER' → logprob: -12.37707805633545

Token 514: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.00034964739461429417
    2. 'reas' → logprob: -9.250349998474121
    3. 'r' → logprob: -9.625349998474121
    4. 'res' → logprob: -9.750349998474121
    5. 'reachable' → logprob: -10.375349998474121
    6. '_re' → logprob: -10.500349998474121
    7. 'rea' → logprob: -11.625349998474121
    8. '_enter' → logprob: -11.875349998474121
    9. '```' → logprob: -11.875349998474121
    10. 'h' → logprob: -12.000349998474121

Token 515: 'asure' (ID: 5450)
  Prédit: 'asure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asure' → logprob: -0.009215030819177628
    2. 'as' → logprob: -4.759214878082275
    3. 'asurer' → logprob: -8.509215354919434
    4. 'asury' → logprob: -9.134215354919434
    5. 'a' → logprob: -9.884215354919434
    6. 'ASURE' → logprob: -9.884215354919434
    7. '_' → logprob: -10.009215354919434
    8. 'asured' → logprob: -10.009215354919434
    9. 'asu' → logprob: -10.759215354919434
    10. 'sure' → logprob: -11.384215354919434

Token 516: '_pos' (ID: 14692)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005229967646300793
    2. '_position' → logprob: -5.630229949951172
    3. '(' → logprob: -7.380229949951172
    4. '_pos' → logprob: -7.630229949951172
    5. '_at' → logprob: -8.255229949951172
    6. '(pos' → logprob: -9.005229949951172
    7. '_cell' → logprob: -10.005229949951172
    8. '_location' → logprob: -10.505229949951172
    9. 'pos' → logprob: -11.130229949951172
    10. 'position' → logprob: -11.880229949951172

Token 517: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00024846551241353154
    2. '(' → logprob: -8.625248908996582
    3. 'self' → logprob: -9.875248908996582
    4. ' (' → logprob: -11.500248908996582
    5. ')(' → logprob: -13.125248908996582
    6. ')' → logprob: -13.375248908996582
    7. 'elf' → logprob: -14.250248908996582
    8. ',' → logprob: -14.625248908996582
    9. '(
' → logprob: -14.625248908996582
    10. ' self' → logprob: -15.125248908996582

Token 518: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007859530858695507
    2. '(' → logprob: -6.132859706878662
    3. ')' → logprob: -6.507859706878662
    4. '(pos' → logprob: -6.632859706878662
    5. ',pos' → logprob: -7.132859706878662
    6. '(self' → logprob: -7.382859706878662
    7. ' ,' → logprob: -7.507859706878662
    8. '):' → logprob: -8.757859230041504
    9. '(position' → logprob: -9.007859230041504
    10. '(token' → logprob: -9.132859230041504

Token 519: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.20397217571735382
    2. ' pos' → logprob: -1.7039722204208374
    3. 'self' → logprob: -6.078972339630127
    4. ' self' → logprob: -8.328971862792969
    5. '   ' → logprob: -11.203971862792969
    6. 'position' → logprob: -12.453971862792969
    7. '       ' → logprob: -13.078971862792969
    8. '	pos' → logprob: -13.703971862792969
    9. ' ' → logprob: -14.203971862792969
    10. ' position' → logprob: -14.703971862792969

Token 520: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5677481293678284
    2. ')' → logprob: -1.6927480697631836
    3. '):
' → logprob: -2.0677480697631836
    4. ',' → logprob: -2.6927480697631836
    5. ' ):' → logprob: -3.8177480697631836
    6. ' )' → logprob: -4.317748069763184
    7. ' ,' → logprob: -5.567748069763184
    8. ':' → logprob: -5.817748069763184
    9. ' ):
' → logprob: -6.192748069763184
    10. '(self' → logprob: -6.317748069763184

Token 521: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.0243490319699049
    2. 'tuple' → logprob: -4.024349212646484
    3. ' Tuple' → logprob: -5.774349212646484
    4. ')' → logprob: -6.774349212646484
    5. ' tuple' → logprob: -6.899349212646484
    6. 'int' → logprob: -7.524349212646484
    7. 'lambda' → logprob: -8.399349212646484
    8. '   ' → logprob: -10.024349212646484
    9. '_tuple' → logprob: -10.524349212646484
    10. ' ' → logprob: -10.649349212646484

Token 522: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.981667537620524e-06
    2. 'int' → logprob: -13.750001907348633
    3. '<int' → logprob: -14.500001907348633
    4. '   ' → logprob: -15.750001907348633
    5. ',int' → logprob: -16.500001907348633
    6. '(int' → logprob: -17.000001907348633
    7. '[' → logprob: -17.750001907348633
    8. '[
' → logprob: -17.750001907348633
    9. '[Int' → logprob: -17.875001907348633
    10. ')' → logprob: -17.875001907348633

Token 523: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.0005345634999684989
    2. 'int' → logprob: -8.500535011291504
    3. '[int' → logprob: -8.500535011291504
    4. ',' → logprob: -9.000535011291504
    5. ' ,' → logprob: -13.250535011291504
    6. ':int' → logprob: -14.375535011291504
    7. ']int' → logprob: -14.375535011291504
    8. '(int' → logprob: -14.750535011291504
    9. '<int' → logprob: -15.500535011291504
    10. ',
' → logprob: -15.500535011291504

Token 524: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.623244553338736e-05
    2. '])' → logprob: -10.375065803527832
    3. ' )' → logprob: -10.500065803527832
    4. '))' → logprob: -13.250065803527832
    5. '):
' → logprob: -13.250065803527832
    6. '`)' → logprob: -13.500065803527832
    7. '})' → logprob: -13.875065803527832
    8. '>)' → logprob: -14.875065803527832
    9. '   ' → logprob: -15.250065803527832
    10. '")' → logprob: -15.375065803527832

Token 525: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15442737936973572
    2. ')' → logprob: -2.2794272899627686
    3. '->' → logprob: -3.7794272899627686
    4. '):' → logprob: -4.654427528381348
    5. ')->' → logprob: -5.279427528381348
    6. ' ->' → logprob: -5.779427528381348
    7. ' :' → logprob: -9.529427528381348
    8. '   ' → logprob: -10.154427528381348
    9. '):
' → logprob: -10.904427528381348
    10. ' )' → logprob: -11.029427528381348

Token 526: ' int' (ID: 677)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.014870671555399895
    2. 'int' → logprob: -4.264870643615723
    3. ' bool' → logprob: -7.389870643615723
    4. 'pos' → logprob: -10.389870643615723
    5. '   ' → logprob: -10.514870643615723
    6. 'return' → logprob: -12.139870643615723
    7. ' int' → logprob: -12.389870643615723
    8. '
' → logprob: -12.514870643615723
    9. ' ' → logprob: -12.889870643615723
    10. 'List' → logprob: -12.889870643615723

Token 527: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10632836818695068
    2. '   ' → logprob: -2.8563284873962402
    3. '       ' → logprob: -3.9813284873962402
    4. ':
' → logprob: -5.10632848739624
    5. ')' → logprob: -5.35632848739624
    6. ',' → logprob: -5.85632848739624
    7. '{' → logprob: -5.98132848739624
    8. ' if' → logprob: -6.35632848739624
    9. '(self' → logprob: -6.85632848739624
    10. '):' → logprob: -7.10632848739624

Token 528: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0042825848795473576
    2. ' for' → logprob: -5.629282474517822
    3. ' if' → logprob: -7.629282474517822
    4. 'for' → logprob: -9.00428295135498
    5. 'if' → logprob: -10.50428295135498
    6. 'try' → logprob: -10.87928295135498
    7. ' try' → logprob: -11.37928295135498
    8. '   ' → logprob: -12.87928295135498
    9. '#' → logprob: -13.37928295135498
    10. ' r' → logprob: -13.37928295135498

Token 529: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2173270434141159
    2. 'try' → logprob: -2.217327117919922
    3. 'for' → logprob: -2.717327117919922
    4. 'if' → logprob: -3.967327117919922
    5. 'return' → logprob: -6.967327117919922
    6. ' for' → logprob: -7.967327117919922
    7. ' try' → logprob: -9.092327117919922
    8. ' if' → logprob: -9.967327117919922
    9. '```' → logprob: -12.342327117919922
    10. '
' → logprob: -13.217327117919922

Token 530: ' Returns' (ID: 9609)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.18084704875946045
    2. 'for' → logprob: -2.68084716796875
    3. 'if' → logprob: -2.93084716796875
    4. '       ' → logprob: -3.55584716796875
    5. 'return' → logprob: -4.55584716796875
    6. ' try' → logprob: -5.80584716796875
    7. ' for' → logprob: -6.93084716796875
    8. ' if' → logprob: -8.18084716796875
    9. '
' → logprob: -8.80584716796875
    10. ' return' → logprob: -10.43084716796875

Token 531: ' index' (ID: 3472)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12719856202602386
    2. ' self' → logprob: -2.1271984577178955
    3. '-' → logprob: -8.627198219299316
    4. ' -' → logprob: -9.752198219299316
    5. '   ' → logprob: -11.252198219299316
    6. '-self' → logprob: -12.002198219299316
    7. '[self' → logprob: -12.877198219299316
    8. '       ' → logprob: -13.127198219299316
    9. ' next' → logprob: -13.377198219299316
    10. '(self' → logprob: -13.377198219299316

Token 532: ' of' (ID: 328)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.5373280048370361
    2. 'for' → logprob: -1.6623280048370361
    3. ' for' → logprob: -1.7873280048370361
    4. ' of' → logprob: -2.912328004837036
    5. 'if' → logprob: -2.912328004837036
    6. '(' → logprob: -3.037328004837036
    7. '       ' → logprob: -3.162328004837036
    8. '(
' → logprob: -3.412328004837036
    9. ',' → logprob: -3.537328004837036
    10. 'def' → logprob: -3.537328004837036

Token 533: ' treasure' (ID: 47849)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.39128589630126953
    2. 'next' → logprob: -2.0162858963012695
    3. 'tre' → logprob: -2.6412858963012695
    4. 'self' → logprob: -2.6412858963012695
    5. 'the' → logprob: -3.6412858963012695
    6. '[pos' → logprob: -4.5162858963012695
    7. ' next' → logprob: -5.1412858963012695
    8. '[' → logprob: -6.5162858963012695
    9. 'position' → logprob: -7.5162858963012695
    10. '(pos' → logprob: -7.5162858963012695

Token 534: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11486740410327911
    2. 'if' → logprob: -2.2398674488067627
    3. ' in' → logprob: -6.739867210388184
    4. '       ' → logprob: -7.614867210388184
    5. 'in' → logprob: -8.364867210388184
    6. '   ' → logprob: -9.739867210388184
    7. ' or' → logprob: -10.364867210388184
    8. 's' → logprob: -12.239867210388184
    9. '           ' → logprob: -12.239867210388184
    10. '(' → logprob: -12.489867210388184

Token 535: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00861468818038702
    2. ' pos' → logprob: -4.758614540100098
    3. '(pos' → logprob: -15.883614540100098
    4. '   ' → logprob: -18.383615493774414
    5. '	pos' → logprob: -18.508615493774414
    6. 'self' → logprob: -19.008615493774414
    7. '_pos' → logprob: -20.133615493774414
    8. '       ' → logprob: -20.383615493774414
    9. 'position' → logprob: -20.383615493774414
    10. '[pos' → logprob: -20.508615493774414

Token 536: ' is' (ID: 382)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38694149255752563
    2. 'in' → logprob: -1.1369414329528809
    3. '==' → logprob: -10.386941909790039
    4. ' is' → logprob: -11.261941909790039
    5. ' ==' → logprob: -11.261941909790039
    6. 'is' → logprob: -11.886941909790039
    7. ')' → logprob: -13.011941909790039
    8. ' ' → logprob: -13.386941909790039
    9. '[' → logprob: -14.636941909790039
    10. '_in' → logprob: -15.011941909790039

Token 537: ' a' (ID: 261)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3524663746356964
    2. ' in' → logprob: -1.227466344833374
    3. 'self' → logprob: -5.852466583251953
    4. 'one' → logprob: -7.477466583251953
    5. ' self' → logprob: -8.227466583251953
    6. ' one' → logprob: -8.477466583251953
    7. 'found' → logprob: -10.352466583251953
    8. 'a' → logprob: -10.852466583251953
    9. 'pos' → logprob: -11.227466583251953
    10. ' a' → logprob: -11.227466583251953

Token 538: ' treasure' (ID: 47849)
  Prédit: 'tre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.20050524175167084
    2. ' treasure' → logprob: -1.825505256652832
    3. 't' → logprob: -3.950505256652832
    4. '_t' → logprob: -7.575505256652832
    5. ' tre' → logprob: -8.200505256652832
    6. 'n' → logprob: -9.075505256652832
    7. 'self' → logprob: -9.450505256652832
    8. 'ccess' → logprob: -10.575505256652832
    9. 'pos' → logprob: -10.700505256652832
    10. ' in' → logprob: -10.700505256652832

Token 539: ' location' (ID: 5100)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.33584994077682495
    2. ' and' → logprob: -2.5858500003814697
    3. ' in' → logprob: -2.7108500003814697
    4. '       ' → logprob: -2.7108500003814697
    5. ',' → logprob: -3.0858500003814697
    6. ' or' → logprob: -4.085849761962891
    7. 'if' → logprob: -4.960849761962891
    8. '   ' → logprob: -6.335849761962891
    9. 'in' → logprob: -6.835849761962891
    10. 'and' → logprob: -7.335849761962891

Token 540: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03568543121218681
    2. 'if' → logprob: -3.5356855392456055
    3. '       ' → logprob: -5.9106855392456055
    4. ' in' → logprob: -6.5356855392456055
    5. ',' → logprob: -7.2856855392456055
    6. ' or' → logprob: -8.285685539245605
    7. '   ' → logprob: -8.910685539245605
    8. ' for' → logprob: -8.910685539245605
    9. ' and' → logprob: -9.035685539245605
    10. '.index' → logprob: -9.535685539245605

Token 541: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.07696687430143356
    2. 'else' → logprob: -2.9519667625427246
    3. ' or' → logprob: -4.076966762542725
    4. 'None' → logprob: -6.701966762542725
    5. ' None' → logprob: -6.701966762542725
    6. ' return' → logprob: -7.451966762542725
    7. '       ' → logprob: -7.701966762542725
    8. ' -' → logprob: -7.826966762542725
    9. '-' → logprob: -8.201967239379883
    10. 'or' → logprob: -8.326967239379883

Token 542: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08550170063972473
    2. ' -' → logprob: -2.5855016708374023
    3. 'None' → logprob: -5.335501670837402
    4. ' None' → logprob: -6.335501670837402
    5. ' ' → logprob: -15.710501670837402
    6. '   ' → logprob: -15.710501670837402
    7. '_None' → logprob: -17.08550262451172
    8. '-none' → logprob: -17.58550262451172
    9. '```' → logprob: -18.71050262451172
    10. '=None' → logprob: -18.83550262451172

Token 543: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. ' -' → logprob: -17.2500057220459
    4. '   ' → logprob: -18.5000057220459
    5. '  ' → logprob: -20.0000057220459
    6. '-' → logprob: -20.2500057220459
    7. '```' → logprob: -20.3750057220459
    8. '2' → logprob: -20.6250057220459
    9. '0' → logprob: -21.1250057220459
    10. '۱' → logprob: -21.6250057220459

Token 544: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0176716186106205
    2. ',' → logprob: -4.517671585083008
    3. ':' → logprob: -6.142671585083008
    4. '   ' → logprob: -7.267671585083008
    5. ' if' → logprob: -7.517671585083008
    6. ':
' → logprob: -7.642671585083008
    7. '
' → logprob: -7.892671585083008
    8. ' for' → logprob: -8.017671585083008
    9. '):
' → logprob: -8.267671585083008
    10. '<|end|>' → logprob: -8.267671585083008

Token 545: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00755350524559617
    2. ',' → logprob: -5.882553577423096
    3. '   ' → logprob: -6.007553577423096
    4. ' if' → logprob: -7.257553577423096
    5. ':' → logprob: -7.632553577423096
    6. ' for' → logprob: -9.132553100585938
    7. '
' → logprob: -9.257553100585938
    8. '(' → logprob: -9.382553100585938
    9. ' ' → logprob: -9.507553100585938
    10. '           ' → logprob: -9.757553100585938

Token 546: ' try' (ID: 2075)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34596580266952515
    2. 'try' (adapté à ' try') → logprob: -1.84596586227417
    3. ' for' → logprob: -2.84596586227417
    4. '       ' → logprob: -3.34596586227417
    5. 'if' → logprob: -3.34596586227417
    6. ' if' → logprob: -5.84596586227417
    7. ' try' → logprob: -6.34596586227417
    8. 'return' → logprob: -6.59596586227417
    9. '```' → logprob: -10.220965385437012
    10. ' return' → logprob: -11.595965385437012

Token 547: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44553452730178833
    2. ':
' → logprob: -1.0705344676971436
    3. '           ' → logprob: -4.195534706115723
    4. '       ' → logprob: -6.695534706115723
    5. '   ' → logprob: -9.195534706115723
    6. 'index' → logprob: -9.570534706115723
    7. ':return' → logprob: -10.195534706115723
    8. '[' → logprob: -10.570534706115723
    9. '{' → logprob: -10.945534706115723
    10. 'to' → logprob: -11.320534706115723

Token 548: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03638848662376404
    2. 'return' → logprob: -4.161388397216797
    3. ' return' → logprob: -4.286388397216797
    4. 'self' → logprob: -5.661388397216797
    5. ' self' → logprob: -6.286388397216797
    6. '       ' → logprob: -7.786388397216797
    7. '
' → logprob: -8.286388397216797
    8. '	       ' → logprob: -9.411388397216797
    9. ':
' → logprob: -9.536388397216797
    10. '   ' → logprob: -10.036388397216797

Token 549: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1963030844926834
    2. 'self' → logprob: -1.946303129196167
    3. ' return' → logprob: -3.571303129196167
    4. '           ' → logprob: -5.446302890777588
    5. ' self' → logprob: -5.821302890777588
    6. '               ' → logprob: -10.321303367614746
    7. 'index' → logprob: -13.571303367614746
    8. '       ' → logprob: -13.571303367614746
    9. '[self' → logprob: -13.696303367614746
    10. '{return' → logprob: -14.071303367614746

Token 550: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0789230540394783
    2. ' self' → logprob: -2.578922986984253
    3. '           ' → logprob: -10.453923225402832
    4. '[self' → logprob: -12.953923225402832
    5. '       ' → logprob: -14.328923225402832
    6. '               ' → logprob: -14.453923225402832
    7. '	self' → logprob: -14.703923225402832
    8. '(self' → logprob: -15.828923225402832
    9. 'Self' → logprob: -16.078922271728516
    10. '
' → logprob: -16.203922271728516

Token 551: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -6.182190554682165e-05
    2. '.' → logprob: -9.875061988830566
    3. ' .' → logprob: -12.125061988830566
    4. 'tre' → logprob: -12.625061988830566
    5. 'Treas' → logprob: -13.750061988830566
    6. '.te' → logprob: -15.375061988830566
    7. 'Tre' → logprob: -16.87506103515625
    8. 't' → logprob: -16.87506103515625
    9. '.ten' → logprob: -17.62506103515625
    10. '>.' → logprob: -17.62506103515625

Token 552: 'reas' (ID: 20712)
  Prédit: 'reas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reas' → logprob: -1.8789383830153383e-05
    2. 're' → logprob: -11.000019073486328
    3. '.re' → logprob: -13.750019073486328
    4. 'rea' → logprob: -14.625019073486328
    5. 'tre' → logprob: -15.500019073486328
    6. 'Treas' → logprob: -15.500019073486328
    7. 'res' → logprob: -17.500019073486328
    8. 'RE' → logprob: -17.500019073486328
    9. ' treasures' → logprob: -18.000019073486328
    10. 'r' → logprob: -18.375019073486328

Token 553: 'ures' (ID: 1609)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0015378349926322699
    2. 'ures' → logprob: -7.126537799835205
    3. 'asures' → logprob: -7.501537799835205
    4. 'sure' → logprob: -8.751538276672363
    5. 'sur' → logprob: -12.376538276672363
    6. '_' → logprob: -12.376538276672363
    7. '```' → logprob: -12.626538276672363
    8. 'ure' → logprob: -13.626538276672363
    9. '``' → logprob: -13.876538276672363
    10. 'us' → logprob: -14.001538276672363

Token 554: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -6.2729995988775045e-06
    2. 'index' → logprob: -12.000006675720215
    3. '.' → logprob: -17.7500057220459
    4. '#index' → logprob: -18.2500057220459
    5. ' index' → logprob: -18.6250057220459
    6. ' .' → logprob: -18.8750057220459
    7. '.Index' → logprob: -19.3750057220459
    8. '   ' → logprob: -20.2500057220459
    9. '_index' → logprob: -20.8750057220459
    10. '/index' → logprob: -21.1250057220459

Token 555: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -2.696889623621246e-06
    2. 'pos' → logprob: -13.00000286102295
    3. '(' → logprob: -15.00000286102295
    4. ' pos' → logprob: -17.875001907348633
    5. '[pos' → logprob: -18.125001907348633
    6. '(p' → logprob: -19.000001907348633
    7. ',pos' → logprob: -19.125001907348633
    8. '(
' → logprob: -19.875001907348633
    9. '(Pos' → logprob: -20.000001907348633
    10. '(position' → logprob: -20.000001907348633

Token 556: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25254935026168823
    2. ')
' → logprob: -1.502549409866333
    3. '       ' → logprob: -7.627549171447754
    4. ')
' → logprob: -9.002549171447754
    5. ')+' → logprob: -12.627549171447754
    6. 'except' → logprob: -13.002549171447754
    7. '   ' → logprob: -13.252549171447754
    8. ')

' → logprob: -14.252549171447754
    9. ' )
' → logprob: -14.752549171447754
    10. ')return' → logprob: -14.752549171447754

Token 557: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09868449717760086
    2. 'except' → logprob: -2.598684549331665
    3. ' except' → logprob: -3.973684549331665
    4. '	except' → logprob: -7.223684310913086
    5. '
' → logprob: -10.223684310913086
    6. ',' → logprob: -11.848684310913086
    7. ')' → logprob: -12.848684310913086
    8. '<|end|>' → logprob: -13.098684310913086
    9. '<|end|>' → logprob: -13.098684310913086
    10. '  ' → logprob: -13.098684310913086

Token 558: ' except' (ID: 6384)
  Prédit: 'except'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'except' (adapté à ' except') → logprob: -0.7871796488761902
    2. '       ' → logprob: -1.037179708480835
    3. ' except' → logprob: -1.662179708480835
    4. '	except' → logprob: -7.287179470062256
    5. '   ' → logprob: -12.162179946899414
    6. '	' → logprob: -13.662179946899414
    7. ',' → logprob: -13.912179946899414
    8. 'return' → logprob: -14.412179946899414
    9. '
' → logprob: -14.537179946899414
    10. '           ' → logprob: -14.537179946899414

Token 559: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.00043233807082287967
    2. ' Value' → logprob: -7.75043249130249
    3. '_value' → logprob: -14.250432014465332
    4. '(Value' → logprob: -14.375432014465332
    5. '.Value' → logprob: -16.00043296813965
    6. '	Value' → logprob: -16.00043296813965
    7. '_Value' → logprob: -16.12543296813965
    8. 'Val' → logprob: -16.62543296813965
    9. 'Index' → logprob: -17.37543296813965
    10. 'value' → logprob: -17.62543296813965

Token 560: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00010044389637187123
    2. 'Value' → logprob: -9.750100135803223
    3. 'rror' → logprob: -10.125100135803223
    4. 'Index' → logprob: -14.125100135803223
    5. 'Exception' → logprob: -15.000100135803223
    6. 'error' → logprob: -15.500100135803223
    7. '_error' → logprob: -15.875100135803223
    8. 'Errors' → logprob: -16.12510108947754
    9. '.Error' → logprob: -16.37510108947754
    10. '.Value' → logprob: -16.37510108947754

Token 561: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01354793831706047
    2. ':
' → logprob: -5.263547897338867
    3. '-' → logprob: -5.888547897338867
    4. '(-' → logprob: -6.138547897338867
    5. ' -' → logprob: -7.013547897338867
    6. '):' → logprob: -7.263547897338867
    7. ':return' → logprob: -7.263547897338867
    8. '   ' → logprob: -7.888547897338867
    9. '       ' → logprob: -9.013547897338867
    10. '(' → logprob: -9.013547897338867

Token 562: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0347788333892822
    2. '-' → logprob: -1.1597788333892822
    3. '       ' → logprob: -1.2847788333892822
    4. '   ' → logprob: -3.7847788333892822
    5. 'return' → logprob: -4.409778594970703
    6. ' -' → logprob: -4.534778594970703
    7. ' return' → logprob: -5.034778594970703
    8. '	return' → logprob: -6.409778594970703
    9. ':return' → logprob: -8.284778594970703
    10. '
' → logprob: -9.534778594970703

Token 563: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13439223170280457
    2. ' return' → logprob: -2.134392261505127
    3. '           ' → logprob: -5.634392261505127
    4. '-' → logprob: -5.884392261505127
    5. '       ' → logprob: -8.134391784667969
    6. ' -' → logprob: -8.259391784667969
    7. '   ' → logprob: -8.259391784667969
    8. '	return' → logprob: -8.384391784667969
    9. ':return' → logprob: -10.384391784667969
    10. '
' → logprob: -12.634391784667969

Token 564: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0019286326132714748
    2. ' -' → logprob: -6.251928806304932
    3. '   ' → logprob: -20.126928329467773
    4. '−' → logprob: -21.626928329467773
    5. '-c' → logprob: -23.001928329467773
    6. '-l' → logprob: -23.126928329467773
    7. '-int' → logprob: -23.126928329467773
    8. '-i' → logprob: -23.251928329467773
    9. '-f' → logprob: -23.626928329467773
    10. '\-' → logprob: -23.626928329467773

Token 565: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '１' → logprob: -20.875
    4. '<|end|>' → logprob: -21.0
    5. '2' → logprob: -21.5625
    6. '```' → logprob: -21.6875
    7. '۱' → logprob: -21.75
    8. '-' → logprob: -22.0
    9. '১' → logprob: -22.125
    10. '१' → logprob: -22.5625

Token 566: '

' (ID: 279)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.1676519811153412
    2. '
' → logprob: -2.042651891708374
    3. '   ' → logprob: -4.542652130126953
    4. '<|end|>' → logprob: -5.167652130126953
    5. '  
' → logprob: -5.542652130126953
    6. '\n' → logprob: -6.917652130126953
    7. ' 
' → logprob: -6.917652130126953
    8. '   
' → logprob: -7.167652130126953
    9. '        
' → logprob: -7.542652130126953
    10. '
    
' → logprob: -7.667652130126953

Token 567: '   ' (ID: 271)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.048154398798942566
    2. '   ' → logprob: -3.298154354095459
    3. '
' → logprob: -4.798154354095459
    4. 'def' → logprob: -7.173154354095459
    5. '        
' → logprob: -7.298154354095459
    6. '  
' → logprob: -8.673154830932617
    7. ' 
' → logprob: -9.423154830932617
    8. '   
' → logprob: -9.798154830932617
    9. '<|end|>' → logprob: -11.048154830932617
    10. '     
' → logprob: -11.548154830932617

Token 568: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.787507714354433e-05
    2. ' def' → logprob: -10.50004768371582
    3. '   ' → logprob: -11.12504768371582
    4. '    
' → logprob: -12.25004768371582
    5. '
' → logprob: -14.37504768371582
    6. '        
' → logprob: -16.50004768371582
    7. '  
' → logprob: -17.25004768371582
    8. '	def' → logprob: -17.37504768371582
    9. '#' → logprob: -18.37504768371582
    10. '   
' → logprob: -19.37504768371582

Token 569: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.7765572667121887
    2. 'can' → logprob: -0.7765572667121887
    3. ' move' → logprob: -3.776557207107544
    4. ' collapse' → logprob: -4.776557445526123
    5. 'def' → logprob: -4.901557445526123
    6. 'move' → logprob: -5.026557445526123
    7. ' step' → logprob: -5.026557445526123
    8. 'simulate' → logprob: -5.151557445526123
    9. 'step' → logprob: -5.401557445526123
    10. 'collapse' → logprob: -5.526557445526123

Token 570: '_step' (ID: 27360)
  Prédit: '_move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_move' → logprob: -0.6744701862335205
    2. '_enter' → logprob: -1.0494701862335205
    3. '_st' → logprob: -2.1744701862335205
    4. '_' → logprob: -4.549469947814941
    5. '_step' → logprob: -5.299469947814941
    6. '_walk' → logprob: -5.549469947814941
    7. '_use' → logprob: -6.799469947814941
    8. '_visit' → logprob: -6.799469947814941
    9. '_pass' → logprob: -7.049469947814941
    10. '_take' → logprob: -7.049469947814941

Token 571: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.8193366486229934e-05
    2. 'self' → logprob: -11.250018119812012
    3. '(' → logprob: -13.500018119812012
    4. '_on' → logprob: -13.875018119812012
    5. 'on' → logprob: -14.375018119812012
    6. '_to' → logprob: -14.500018119812012
    7. '_(' → logprob: -14.750018119812012
    8. '_' → logprob: -14.875018119812012
    9. ' (' → logprob: -15.250018119812012
    10. '_into' → logprob: -15.500018119812012

Token 572: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03672109171748161
    2. '(self' → logprob: -3.6617209911346436
    3. 'self' → logprob: -4.786721229553223
    4. ' ,' → logprob: -6.911721229553223
    5. ' self' → logprob: -7.911721229553223
    6. ')' → logprob: -7.911721229553223
    7. ',self' → logprob: -8.536721229553223
    8. '   ' → logprob: -10.411721229553223
    9. '       ' → logprob: -11.161721229553223
    10. ' (' → logprob: -11.411721229553223

Token 573: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.23135903477668762
    2. 'self' → logprob: -2.2313590049743652
    3. ' pos' → logprob: -3.1063590049743652
    4. 'from' → logprob: -4.106359004974365
    5. 'state' → logprob: -4.356359004974365
    6. '   ' → logprob: -5.481359004974365
    7. ' self' → logprob: -5.481359004974365
    8. 'current' → logprob: -5.606359004974365
    9. 'prev' → logprob: -5.981359004974365
    10. '       ' → logprob: -6.106359004974365

Token 574: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.900876522064209
    2. ':' → logprob: -1.150876522064209
    3. ')' → logprob: -1.400876522064209
    4. '):
' → logprob: -4.400876522064209
    5. ' ):' → logprob: -4.400876522064209
    6. ' )' → logprob: -5.275876522064209
    7. ',' → logprob: -7.025876522064209
    8. ' ):
' → logprob: -8.650876998901367
    9. '   ' → logprob: -8.900876998901367
    10. ' :' → logprob: -9.525876998901367

Token 575: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.026596004143357277
    2. ' Tuple' → logprob: -3.6515960693359375
    3. ')' → logprob: -8.776596069335938
    4. '   ' → logprob: -9.276596069335938
    5. '       ' → logprob: -11.276596069335938
    6. ' ' → logprob: -11.651596069335938
    7. 'int' → logprob: -11.776596069335938
    8. '           ' → logprob: -12.401596069335938
    9. 'tuple' → logprob: -12.526596069335938
    10. '  ' → logprob: -12.901596069335938

Token 576: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -4.842555426876061e-06
    2. '(int' → logprob: -13.250004768371582
    3. 'int' → logprob: -13.625004768371582
    4. '[' → logprob: -14.125004768371582
    5. ',int' → logprob: -14.500004768371582
    6. '[(' → logprob: -15.625004768371582
    7. '   ' → logprob: -15.875004768371582
    8. '<int' → logprob: -16.2500057220459
    9. '
' → logprob: -16.8750057220459
    10. ':int' → logprob: -17.1250057220459

Token 577: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.0007504248642362654
    2. '[int' → logprob: -7.375750541687012
    3. ',' → logprob: -9.375750541687012
    4. 'int' → logprob: -11.000750541687012
    5. '(int' → logprob: -11.750750541687012
    6. '   ' → logprob: -12.125750541687012
    7. ' ,' → logprob: -13.000750541687012
    8. '<int' → logprob: -13.125750541687012
    9. ',bool' → logprob: -13.625750541687012
    10. ':int' → logprob: -14.000750541687012

Token 578: '],' (ID: 2155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013137406669557095
    2. ',' → logprob: -4.513137340545654
    3. ' )' → logprob: -6.263137340545654
    4. '):' → logprob: -9.513137817382812
    5. '):
' → logprob: -9.638137817382812
    6. ' ,' → logprob: -10.763137817382812
    7. '   ' → logprob: -11.638137817382812
    8. ' ' → logprob: -12.138137817382812
    9. ' ):' → logprob: -13.388137817382812
    10. '):

' → logprob: -13.638137817382812

Token 579: ' fragile' (ID: 68256)
  Prédit: 'frag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frag' → logprob: -0.12724651396274567
    2. ' fragile' → logprob: -2.377246618270874
    3. 'current' → logprob: -4.377246379852295
    4. 'state' → logprob: -5.377246379852295
    5. ' current' → logprob: -6.002246379852295
    6. 'visited' → logprob: -6.127246379852295
    7. 'collapsed' → logprob: -6.627246379852295
    8. 'prev' → logprob: -7.377246379852295
    9. ' state' → logprob: -7.502246379852295
    10. 'curr' → logprob: -7.627246379852295

Token 580: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -9.93710636976175e-05
    2. '_set' → logprob: -10.250099182128906
    3. 'map' → logprob: -10.375099182128906
    4. '_positions' → logprob: -11.250099182128906
    5. ')' → logprob: -12.125099182128906
    6. 'Map' → logprob: -12.500099182128906
    7. 's' → logprob: -13.125099182128906
    8. '_' → logprob: -13.250099182128906
    9. '):' → logprob: -13.875099182128906
    10. '):
' → logprob: -14.250099182128906

Token 581: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01134677603840828
    2. '):' → logprob: -5.011346817016602
    3. ' )' → logprob: -5.636346817016602
    4. ',' → logprob: -7.636346817016602
    5. ':' → logprob: -7.636346817016602
    6. '):
' → logprob: -10.136346817016602
    7. ' ):' → logprob: -10.386346817016602
    8. ' ' → logprob: -12.261346817016602
    9. '   ' → logprob: -12.386346817016602
    10. ')->' → logprob: -13.011346817016602

Token 582: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.0017361093778163195
    2. ' Set' → logprob: -6.501736164093018
    3. ')' → logprob: -8.50173568725586
    4. 'set' → logprob: -10.62673568725586
    5. '_set' → logprob: -13.12673568725586
    6. '	Set' → logprob: -14.25173568725586
    7. '):
' → logprob: -14.37673568725586
    8. '   ' → logprob: -14.50173568725586
    9. 'fro' → logprob: -14.62673568725586
    10. '       ' → logprob: -14.62673568725586

Token 583: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02269674837589264
    2. '):
' → logprob: -4.5226969718933105
    3. '):' → logprob: -5.7726969718933105
    4. '[int' → logprob: -5.7726969718933105
    5. '[' → logprob: -5.8976969718933105
    6. '   ' → logprob: -7.1476969718933105
    7. ',' → logprob: -7.5226969718933105
    8. '
' → logprob: -7.5226969718933105
    9. ' )' → logprob: -9.272696495056152
    10. '])' → logprob: -9.647696495056152

Token 584: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -2.045823566731997e-05
    2. ' Tuple' → logprob: -11.250020027160645
    3. 'pos' → logprob: -12.625020027160645
    4. 'tuple' → logprob: -13.500020027160645
    5. '[' → logprob: -13.750020027160645
    6. '           ' → logprob: -14.750020027160645
    7. ')' → logprob: -14.875020027160645
    8. '   ' → logprob: -15.500020027160645
    9. '_tuple' → logprob: -15.500020027160645
    10. '<Tuple' → logprob: -15.625020027160645

Token 585: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -3.2378600735682994e-05
    2. ',int' → logprob: -10.875032424926758
    3. 'int' → logprob: -11.875032424926758
    4. '
' → logprob: -13.250032424926758
    5. '<int' → logprob: -13.375032424926758
    6. 'pos' → logprob: -14.250032424926758
    7. '[pos' → logprob: -14.375032424926758
    8. '[' → logprob: -14.875032424926758
    9. '(int' → logprob: -14.875032424926758
    10. '])' → logprob: -15.500032424926758

Token 586: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.0016087667318060994
    2. ',pos' → logprob: -6.501608848571777
    3. ',' → logprob: -9.376608848571777
    4. 'int' → logprob: -11.876608848571777
    5. ' ,' → logprob: -12.376608848571777
    6. ',bool' → logprob: -12.751608848571777
    7. '<int' → logprob: -12.876608848571777
    8. ',
' → logprob: -13.876608848571777
    9. 'pos' → logprob: -14.251608848571777
    10. '[int' → logprob: -14.501608848571777

Token 587: ']])' (ID: 64959)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.005070568062365055
    2. ']):' → logprob: -6.755070686340332
    3. ']):
' → logprob: -6.755070686340332
    4. '>)' → logprob: -7.005070686340332
    5. ')])' → logprob: -7.755070686340332
    6. ')' → logprob: -7.755070686340332
    7. ']' → logprob: -8.005070686340332
    8. '>' → logprob: -8.255070686340332
    9. ''])' → logprob: -9.505070686340332
    10. ']])' → logprob: -9.755070686340332

Token 588: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.8782535791397095
    2. ')' → logprob: -1.0032535791397095
    3. '->' → logprob: -1.6282535791397095
    4. ':' → logprob: -4.75325345993042
    5. ')->' → logprob: -5.25325345993042
    6. '       ' → logprob: -5.62825345993042
    7. '   ' → logprob: -5.62825345993042
    8. ',' → logprob: -9.003253936767578
    9. ':
' → logprob: -9.003253936767578
    10. '    ' → logprob: -9.628253936767578

Token 589: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -6.76628842484206e-05
    2. ' bool' → logprob: -9.625067710876465
    3. '   ' → logprob: -13.500067710876465
    4. '
' → logprob: -16.87506675720215
    5. '	bool' → logprob: -17.00006675720215
    6. '<bool' → logprob: -17.37506675720215
    7. '       ' → logprob: -17.50006675720215
    8. '(bool' → logprob: -17.50006675720215
    9. '           ' → logprob: -18.12506675720215
    10. ' ' → logprob: -18.12506675720215

Token 590: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10742437839508057
    2. ':
' → logprob: -2.857424259185791
    3. '       ' → logprob: -3.232424259185791
    4. '):
' → logprob: -6.482424259185791
    5. '<|end|>' → logprob: -6.482424259185791
    6. '):' → logprob: -7.607424259185791
    7. ',' → logprob: -7.857424259185791
    8. ')' → logprob: -8.35742473602295
    9. '(self' → logprob: -8.85742473602295
    10. ' and' → logprob: -9.10742473602295

Token 591: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.453737710718997e-05
    2. ' return' → logprob: -10.500044822692871
    3. 'return' → logprob: -12.250044822692871
    4. ' if' → logprob: -12.625044822692871
    5. '   ' → logprob: -13.125044822692871
    6. '#' → logprob: -13.250044822692871
    7. ',' → logprob: -13.625044822692871
    8. '        
' → logprob: -13.875044822692871
    9. ' #' → logprob: -14.500044822692871
    10. '           ' → logprob: -14.875044822692871

Token 592: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7013022899627686
    2. 'return' → logprob: -0.7013022899627686
    3. ' return' → logprob: -4.826302528381348
    4. 'if' → logprob: -9.451302528381348
    5. ' if' → logprob: -11.201302528381348
    6. '
' → logprob: -12.076302528381348
    7. '   ' → logprob: -12.701302528381348
    8. '        
' → logprob: -13.701302528381348
    9. '	return' → logprob: -13.826302528381348
    10. '#' (adapté à ' #') → logprob: -14.451302528381348

Token 593: ' Entrance' (ID: 117244)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.010485394857823849
    2. 'if' → logprob: -5.1354851722717285
    3. '       ' → logprob: -5.8854851722717285
    4. ' return' → logprob: -6.5104851722717285
    5. 'pos' → logprob: -8.385485649108887
    6. ' if' → logprob: -10.635485649108887
    7. 'r' → logprob: -11.385485649108887
    8. '   ' → logprob: -11.510485649108887
    9. '
' → logprob: -13.385485649108887
    10. 'not' → logprob: -13.635485649108887

Token 594: ' never' (ID: 3779)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.39841437339782715
    2. '!=' → logprob: -1.6484143733978271
    3. ' not' → logprob: -2.523414373397827
    4. ' in' → logprob: -3.898414373397827
    5. 'not' → logprob: -4.648414611816406
    6. 'pos' → logprob: -4.648414611816406
    7. ')' → logprob: -5.773414611816406
    8. ',' → logprob: -6.398414611816406
    9. ' and' → logprob: -6.523414611816406
    10. 'in' → logprob: -6.523414611816406

Token 595: ' collaps' (ID: 87851)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4522460103034973
    2. 'coll' → logprob: -1.5772459506988525
    3. ' in' → logprob: -2.4522459506988525
    4. ' collaps' → logprob: -2.9522459506988525
    5. 'collapsed' → logprob: -4.077246189117432
    6. 'collapse' → logprob: -6.952246189117432
    7. '_coll' → logprob: -7.702246189117432
    8. ' collapsed' → logprob: -9.327245712280273
    9. ' collapse' → logprob: -9.452245712280273
    10. '```' → logprob: -9.577245712280273

Token 596: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.028246238827705383
    2. 'edes' → logprob: -4.4032464027404785
    3. 'ed' → logprob: -4.5282464027404785
    4. 'e' → logprob: -6.0282464027404785
    5. 'apses' → logprob: -7.0282464027404785
    6. 'eds' → logprob: -7.1532464027404785
    7. '       ' → logprob: -8.90324592590332
    8. 'and' → logprob: -9.02824592590332
    9. 'aps' → logprob: -9.15324592590332
    10. 'apsed' → logprob: -9.40324592590332

Token 597: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.18779467046260834
    2. '       ' → logprob: -1.8127946853637695
    3. ' or' → logprob: -5.8127946853637695
    4. 'and' → logprob: -6.0627946853637695
    5. ',' → logprob: -7.4377946853637695
    6. '<|end|>' → logprob: -7.6877946853637695
    7. '   ' → logprob: -7.8127946853637695
    8. '
' → logprob: -8.18779468536377
    9. ' if' → logprob: -8.68779468536377
    10. ' return' → logprob: -9.06279468536377

Token 598: ' others' (ID: 5036)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6837722659111023
    2. 'pos' → logprob: -1.183772325515747
    3. ' return' → logprob: -1.933772325515747
    4. ' pos' → logprob: -3.183772325515747
    5. '       ' → logprob: -6.433772087097168
    6. ' and' → logprob: -7.558772087097168
    7. '           ' → logprob: -7.808772087097168
    8. 'and' → logprob: -8.308772087097168
    9. '   ' → logprob: -9.558772087097168
    10. '    ' → logprob: -9.933772087097168

Token 599: ' not' (ID: 625)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.13029779493808746
    2. 'and' → logprob: -2.380297899246216
    3. ' if' → logprob: -4.005297660827637
    4. ' not' → logprob: -5.255297660827637
    5. '       ' → logprob: -6.255297660827637
    6. 'if' → logprob: -6.630297660827637
    7. ' !=' → logprob: -6.880297660827637
    8. ' in' → logprob: -7.755297660827637
    9. 'not' → logprob: -7.755297660827637
    10. ',' → logprob: -8.505297660827637

Token 600: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.18137559294700623
    2. ' in' → logprob: -1.9313756227493286
    3. 'pos' → logprob: -4.306375503540039
    4. '(pos' → logprob: -5.181375503540039
    5. ' pos' → logprob: -6.681375503540039
    6. '   ' → logprob: -8.431375503540039
    7. ' (' → logprob: -8.681375503540039
    8. '       ' → logprob: -10.556375503540039
    9. '    ' → logprob: -10.806375503540039
    10. ')' → logprob: -11.181375503540039

Token 601: ' fragile' (ID: 68256)
  Prédit: 'frag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frag' → logprob: -0.0010378103470429778
    2. ' fragile' → logprob: -6.87603759765625
    3. ' frag' → logprob: -13.50103759765625
    4. '   ' → logprob: -14.00103759765625
    5. 'fragment' → logprob: -14.00103759765625
    6. '```' → logprob: -14.50103759765625
    7. 'fra' → logprob: -14.62603759765625
    8. 'fr' → logprob: -15.25103759765625
    9. '_frag' → logprob: -16.25103759765625
    10. 'the' → logprob: -16.25103759765625

Token 602: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0001214237418025732
    2. 'map' → logprob: -9.125121116638184
    3. '_' → logprob: -11.750121116638184
    4. '   ' → logprob: -14.500121116638184
    5. '\' → logprob: -14.750121116638184
    6. 'Map' → logprob: -15.000121116638184
    7. '
' → logprob: -15.250121116638184
    8. 'ap' → logprob: -15.250121116638184
    9. '_set' → logprob: -15.500121116638184
    10. ')' → logprob: -15.500121116638184

Token 603: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01575196348130703
    2. '       ' → logprob: -4.765751838684082
    3. 'and' → logprob: -5.140751838684082
    4. ' or' → logprob: -7.140751838684082
    5. '   ' → logprob: -8.765751838684082
    6. ',' → logprob: -9.515751838684082
    7. ')' → logprob: -9.765751838684082
    8. '
' → logprob: -10.390751838684082
    9. '    ' → logprob: -10.640751838684082
    10. '        ' → logprob: -10.765751838684082

Token 604: ' enter' (ID: 5747)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4536149799823761
    2. 'pos' → logprob: -1.0786149501800537
    3. ' self' → logprob: -4.328615188598633
    4. ' pos' → logprob: -4.703615188598633
    5. 'not' → logprob: -7.578615188598633
    6. '   ' → logprob: -7.953615188598633
    7. '0' → logprob: -8.078615188598633
    8. '       ' → logprob: -8.578615188598633
    9. '           ' → logprob: -8.828615188598633
    10. ' not' → logprob: -9.078615188598633

Token 605: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -6.396757089532912e-05
    2. 'pos' → logprob: -11.8750638961792
    3. '   ' → logprob: -12.2500638961792
    4. ' able' → logprob: -12.2500638961792
    5. '```' → logprob: -12.6250638961792
    6. '_pos' → logprob: -12.8750638961792
    7. 'er' → logprob: -12.8750638961792
    8. '       ' → logprob: -12.8750638961792
    9. ' ' → logprob: -13.1250638961792
    10. '(self' → logprob: -13.2500638961792

Token 606: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.13855667412281036
    2. '       ' → logprob: -2.138556718826294
    3. 'and' → logprob: -4.763556480407715
    4. '   ' → logprob: -6.763556480407715
    5. ' or' → logprob: -7.388556480407715
    6. ')' → logprob: -8.138556480407715
    7. ',' → logprob: -8.263556480407715
    8. ' ' → logprob: -9.138556480407715
    9. 'return' → logprob: -9.138556480407715
    10. '
' → logprob: -9.763556480407715

Token 607: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3894605040550232
    2. '       ' → logprob: -1.139460563659668
    3. 'and' → logprob: -7.139460563659668
    4. '   ' → logprob: -7.139460563659668
    5. ',' → logprob: -7.889460563659668
    6. ')' → logprob: -8.889460563659668
    7. ' ' → logprob: -9.264460563659668
    8. ' or' → logprob: -9.389460563659668
    9. ' return' → logprob: -9.889460563659668
    10. '    ' → logprob: -10.014460563659668

Token 608: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5233624577522278
    2. 'return' → logprob: -1.273362398147583
    3. ' if' → logprob: -2.898362398147583
    4. 'if' (adapté à ' if') → logprob: -3.148362398147583
    5. ' return' → logprob: -3.523362398147583
    6. '   ' → logprob: -10.773362159729004
    7. ' r' → logprob: -11.523362159729004
    8. 'r' → logprob: -11.523362159729004
    9. 'pos' → logprob: -13.148362159729004
    10. '	return' → logprob: -13.648362159729004

Token 609: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.061968132853507996
    2. ' pos' → logprob: -2.8119680881500244
    3. '   ' → logprob: -15.686967849731445
    4. 'self' → logprob: -15.686967849731445
    5. '	pos' → logprob: -16.186967849731445
    6. '    ' → logprob: -16.686967849731445
    7. '       ' → logprob: -17.811967849731445
    8. '_pos' → logprob: -18.186967849731445
    9. '           ' → logprob: -18.561967849731445
    10. ' self' → logprob: -18.686967849731445

Token 610: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2811920940876007
    2. '==' → logprob: -1.4061920642852783
    3. ' !=' → logprob: -11.5311918258667
    4. ')==' → logprob: -11.9061918258667
    5. ' not' → logprob: -12.1561918258667
    6. '!=' → logprob: -12.5311918258667
    7. ' in' → logprob: -12.6561918258667
    8. '=' → logprob: -12.7811918258667
    9. 'not' → logprob: -13.0311918258667
    10. '==
' → logprob: -13.2811918258667

Token 611: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005656610010191798
    2. ' self' → logprob: -7.500565528869629
    3. '(' → logprob: -11.875565528869629
    4. '(self' → logprob: -12.125565528869629
    5. ' (' → logprob: -16.375566482543945
    6. '   ' → logprob: -17.000566482543945
    7. '	self' → logprob: -17.250566482543945
    8. ' ' → logprob: -18.000566482543945
    9. '       ' → logprob: -20.125566482543945
    10. '0' → logprob: -20.500566482543945

Token 612: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.7252845029579476e-05
    2. 'entr' → logprob: -10.875027656555176
    3. '.ent' → logprob: -12.625027656555176
    4. '.enter' → logprob: -13.000027656555176
    5. ' .' → logprob: -13.000027656555176
    6. '\.' → logprob: -16.62502670288086
    7. '>.' → logprob: -16.75002670288086
    8. ' entrance' → logprob: -17.00002670288086
    9. '.en' → logprob: -17.00002670288086
    10. 'self' → logprob: -17.37502670288086

Token 613: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -1.3544423381972592e-05
    2. ' entrance' → logprob: -11.25001335144043
    3. 'Entrance' → logprob: -15.37501335144043
    4. 'entrée' → logprob: -16.12501335144043
    5. 'entrant' → logprob: -17.00001335144043
    6. 'ent' → logprob: -17.12501335144043
    7. 'enter' → logprob: -17.37501335144043
    8. 'entrada' → logprob: -18.75001335144043
    9. ' ' → logprob: -18.87501335144043
    10. '(' → logprob: -19.37501335144043

Token 614: 'ance' (ID: 766)
  Prédit: 'ance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.00028493450372479856
    2. 'ace' → logprob: -8.750285148620605
    3. 'rance' → logprob: -10.250285148620605
    4. '   ' → logprob: -10.750285148620605
    5. 'ce' → logprob: -11.375285148620605
    6. '
' → logprob: -11.875285148620605
    7. 'a' → logprob: -12.250285148620605
    8. '[' → logprob: -12.375285148620605
    9. 'tr' → logprob: -12.500285148620605
    10. 'ence' → logprob: -12.625285148620605

Token 615: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6179460287094116
    2. ' or' → logprob: -1.3679460287094116
    3. ':' → logprob: -1.8679460287094116
    4. ':return' → logprob: -3.117946147918701
    5. 'or' → logprob: -5.367946147918701
    6. '   ' → logprob: -6.367946147918701
    7. '       ' → logprob: -7.367946147918701
    8. '):
' → logprob: -8.617945671081543
    9. ' ' → logprob: -9.117945671081543
    10. ')' → logprob: -9.367945671081543

Token 616: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32045096158981323
    2. '           ' → logprob: -1.570451021194458
    3. ' and' → logprob: -3.320451021194458
    4. ' return' → logprob: -4.195450782775879
    5. 'return' → logprob: -4.445450782775879
    6. '   ' → logprob: -7.445450782775879
    7. ':' → logprob: -7.695450782775879
    8. '
' → logprob: -7.695450782775879
    9. ':
' → logprob: -8.070450782775879
    10. ',' → logprob: -8.320450782775879

Token 617: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1896468549966812
    2. '           ' → logprob: -2.3146469593048096
    3. ' return' → logprob: -2.6896469593048096
    4. '       ' → logprob: -5.1896467208862305
    5. '
' → logprob: -8.06464672088623
    6. '   ' → logprob: -9.81464672088623
    7. '               ' → logprob: -10.43964672088623
    8. '	return' → logprob: -10.56464672088623
    9. ' ' → logprob: -11.56464672088623
    10. ':return' → logprob: -12.06464672088623

Token 618: ' self' (ID: 1051)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0005892522749491036
    2. 'self' → logprob: -7.750589370727539
    3. ' True' → logprob: -8.750589370727539
    4. '   ' → logprob: -16.62558937072754
    5. 'true' → logprob: -16.75058937072754
    6. ' self' → logprob: -17.00058937072754
    7. '           ' → logprob: -18.12558937072754
    8. '       ' → logprob: -18.25058937072754
    9. '(True' → logprob: -18.62558937072754
    10. 'False' → logprob: -20.25058937072754

Token 619: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.0006420228746719658
    2. '.' → logprob: -7.375641822814941
    3. 'is' → logprob: -11.875641822814941
    4. ' .' → logprob: -12.375641822814941
    5. '   ' → logprob: -13.875641822814941
    6. '.can' → logprob: -13.875641822814941
    7. '           ' → logprob: -14.250641822814941
    8. '       ' → logprob: -14.875641822814941
    9. ').' → logprob: -15.000641822814941
    10. '._' → logprob: -16.000642776489258

Token 620: '_enter' (ID: 88636)
  Prédit: '_enter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_enter' → logprob: -0.00023762896307744086
    2. 'enter' → logprob: -8.500237464904785
    3. '_' → logprob: -10.875237464904785
    4. '_ENTER' → logprob: -12.375237464904785
    5. 'Enter' → logprob: -12.500237464904785
    6. '_ent' → logprob: -13.875237464904785
    7. '.enter' → logprob: -14.000237464904785
    8. '	enter' → logprob: -14.000237464904785
    9. ' _' → logprob: -14.500237464904785
    10. '._' → logprob: -14.625237464904785

Token 621: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -5.512236498361744e-07
    2. ' able' → logprob: -15.375000953674316
    3. ' ' → logprob: -17.0
    4. '   ' → logprob: -17.0
    5. 'er' → logprob: -17.5
    6. 'e' → logprob: -17.625
    7. '```' → logprob: -18.0
    8. 'ble' → logprob: -18.25
    9. '           ' → logprob: -18.5
    10. 'enter' → logprob: -18.625

Token 622: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.0022141309455037117
    2. '(' → logprob: -6.127213954925537
    3. ' (' → logprob: -10.752214431762695
    4. '(p' → logprob: -12.627214431762695
    5. '(position' → logprob: -13.627214431762695
    6. '(
' → logprob: -14.002214431762695
    7. 'pos' → logprob: -14.127214431762695
    8. '[pos' → logprob: -14.377214431762695
    9. '(Pos' → logprob: -15.127214431762695
    10. '((' → logprob: -15.502214431762695

Token 623: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010565068805590272
    2. ' )' → logprob: -6.876056671142578
    3. ' or' → logprob: -11.751056671142578
    4. ' and' → logprob: -12.126056671142578
    5. 'and' → logprob: -12.376056671142578
    6. '   ' → logprob: -12.876056671142578
    7. ')
' → logprob: -13.626056671142578
    8. '       ' → logprob: -13.751056671142578
    9. 'or' → logprob: -15.376056671142578
    10. '           ' → logprob: -15.376056671142578

Token 624: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.750436007976532e-05
    2. ' and' → logprob: -10.50003719329834
    3. '           ' → logprob: -12.75003719329834
    4. '   ' → logprob: -13.25003719329834
    5. ' or' → logprob: -13.62503719329834
    6. '	' → logprob: -14.00003719329834
    7. ' if' → logprob: -14.50003719329834
    8. '
' → logprob: -14.62503719329834
    9. '      ' → logprob: -14.62503719329834
    10. '        
' → logprob: -15.00003719329834

Token 625: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11153163760900497
    2. ' if' → logprob: -2.6115317344665527
    3. 'if' (adapté à ' if') → logprob: -3.4865317344665527
    4. 'return' → logprob: -6.861531734466553
    5. ' return' → logprob: -7.986531734466553
    6. '   ' → logprob: -9.736531257629395
    7. 'elif' → logprob: -10.611531257629395
    8. ' elif' → logprob: -11.111531257629395
    9. '        
' → logprob: -11.861531257629395
    10. '           ' → logprob: -12.611531257629395

Token 626: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.1132894828915596
    2. ' pos' → logprob: -2.2382895946502686
    3. '       ' → logprob: -8.238289833068848
    4. '           ' → logprob: -9.488289833068848
    5. '   ' → logprob: -9.613289833068848
    6. 'not' → logprob: -10.863289833068848
    7. '(pos' → logprob: -11.488289833068848
    8. ' not' → logprob: -11.738289833068848
    9. ' ' → logprob: -12.613289833068848
    10. '	pos' → logprob: -12.738289833068848

Token 627: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.36154672503471375
    2. ' in' → logprob: -1.2365467548370361
    3. 'not' → logprob: -4.611546516418457
    4. 'in' → logprob: -5.861546516418457
    5. ' ' → logprob: -8.611546516418457
    6. '   ' → logprob: -10.986546516418457
    7. ')' → logprob: -11.736546516418457
    8. ',' → logprob: -12.111546516418457
    9. '  ' → logprob: -12.486546516418457
    10. 'n' → logprob: -12.861546516418457

Token 628: ' fragile' (ID: 68256)
  Prédit: 'frag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frag' → logprob: -0.008622966706752777
    2. ' fragile' → logprob: -4.758623123168945
    3. ' frag' → logprob: -12.883623123168945
    4. '   ' → logprob: -13.508623123168945
    5. 'fragment' → logprob: -13.508623123168945
    6. 'fr' → logprob: -14.133623123168945
    7. 'fra' → logprob: -14.633623123168945
    8. 'Frag' → logprob: -14.758623123168945
    9. '_frag' → logprob: -15.133623123168945
    10. 'self' → logprob: -15.383623123168945

Token 629: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: 0.0
    2. '_' → logprob: -18.0
    3. ' _' → logprob: -18.25
    4. '   ' → logprob: -20.5
    5. '_MAP' → logprob: -21.125
    6. 'map' → logprob: -21.25
    7. '_maps' → logprob: -21.25
    8. '_set' → logprob: -21.375
    9. 'Map' → logprob: -22.375
    10. '._' → logprob: -22.75

Token 630: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.40811586380004883
    2. ':' → logprob: -1.2831158638000488
    3. '       ' → logprob: -3.533115863800049
    4. ' or' → logprob: -4.908115863800049
    5. ':return' → logprob: -4.908115863800049
    6. '==' → logprob: -5.158115863800049
    7. '           ' → logprob: -5.783115863800049
    8. '   ' → logprob: -6.158115863800049
    9. '):
' → logprob: -6.533115863800049
    10. ' ==' → logprob: -7.408115863800049

Token 631: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030366351827979088
    2. '           ' → logprob: -3.5303664207458496
    3. ' return' → logprob: -7.90536642074585
    4. 'return' → logprob: -9.405365943908691
    5. ' and' → logprob: -10.030365943908691
    6. ' False' → logprob: -10.905365943908691
    7. ',' → logprob: -11.280365943908691
    8. '   ' → logprob: -11.655365943908691
    9. ':' → logprob: -11.780365943908691
    10. ' or' → logprob: -11.780365943908691

Token 632: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.267055481672287
    2. '           ' → logprob: -1.8920555114746094
    3. ' return' → logprob: -3.0170555114746094
    4. '       ' → logprob: -3.3920555114746094
    5. '   ' → logprob: -7.767055511474609
    6. '
' → logprob: -8.51705551147461
    7. '	return' → logprob: -8.76705551147461
    8. 'False' → logprob: -9.26705551147461
    9. '               ' → logprob: -10.26705551147461
    10. ' ' → logprob: -10.39205551147461

Token 633: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0009114635176956654
    2. ' False' → logprob: -7.000911235809326
    3. '   ' → logprob: -19.125911712646484
    4. '(False' → logprob: -19.500911712646484
    5. '       ' → logprob: -20.500911712646484
    6. 'True' → logprob: -21.625911712646484
    7. '=False' → logprob: -21.625911712646484
    8. 'false' → logprob: -22.500911712646484
    9. '           ' → logprob: -23.375911712646484
    10. '.False' → logprob: -24.000911712646484

Token 634: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003663968062028289
    2. '
' → logprob: -5.878664016723633
    3. '   ' → logprob: -8.378664016723633
    4. '        
' → logprob: -8.503664016723633
    5. 'return' → logprob: -8.503664016723633
    6. '    
' → logprob: -8.878664016723633
    7. ' return' → logprob: -10.378664016723633
    8. '  
' → logprob: -11.128664016723633
    9. '           ' → logprob: -11.378664016723633
    10. '	' → logprob: -12.753664016723633

Token 635: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002426671329885721
    2. 'return' → logprob: -6.252426624298096
    3. '
' → logprob: -8.127427101135254
    4. ' return' → logprob: -9.252427101135254
    5. '   ' → logprob: -9.627427101135254
    6. '        
' → logprob: -10.627427101135254
    7. '           ' → logprob: -12.002427101135254
    8. '    
' → logprob: -12.252427101135254
    9. ' and' → logprob: -13.752427101135254
    10. '  
' → logprob: -14.002427101135254

Token 636: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3881605267524719
    2. 'return' (adapté à ' return') → logprob: -1.1381604671478271
    3. ' return' → logprob: -7.013160705566406
    4. '   ' → logprob: -7.888160705566406
    5. '
' → logprob: -11.638160705566406
    6. '	return' → logprob: -13.388160705566406
    7. '        
' → logprob: -13.638160705566406
    8. '           ' → logprob: -14.263160705566406
    9. 'if' → logprob: -15.138160705566406
    10. ' ' → logprob: -15.513160705566406

Token 637: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00761136319488287
    2. ' self' → logprob: -4.882611274719238
    3. '   ' → logprob: -12.757611274719238
    4. '       ' → logprob: -13.507611274719238
    5. '	self' → logprob: -15.132611274719238
    6. ' ' → logprob: -15.882611274719238
    7. '           ' → logprob: -16.132612228393555
    8. ' ' → logprob: -16.257612228393555
    9. '     ' → logprob: -16.632612228393555
    10. '(self' → logprob: -16.632612228393555

Token 638: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -4.286852345103398e-05
    2. '.' → logprob: -10.250042915344238
    3. 'is' → logprob: -12.125042915344238
    4. ' .' → logprob: -13.875042915344238
    5. '.can' → logprob: -14.500042915344238
    6. '   ' → logprob: -15.000042915344238
    7. ').' → logprob: -17.125041961669922
    8. '..' → logprob: -17.250041961669922
    9. '.enter' → logprob: -18.000041961669922
    10. '```' → logprob: -18.000041961669922

Token 639: '_enter' (ID: 88636)
  Prédit: '_enter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_enter' → logprob: -4.0722858102526516e-05
    2. 'enter' → logprob: -10.125041007995605
    3. 'Enter' → logprob: -15.375041007995605
    4. '_ENTER' → logprob: -15.625041007995605
    5. '_' → logprob: -16.12504005432129
    6. '_ent' → logprob: -17.25004005432129
    7. '	enter' → logprob: -18.12504005432129
    8. '__' → logprob: -18.12504005432129
    9. '.enter' → logprob: -18.37504005432129
    10. '._' → logprob: -18.37504005432129

Token 640: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -9.729906196298543e-06
    2. 'er' → logprob: -12.000009536743164
    3. 'ter' → logprob: -12.875009536743164
    4. 'enter' → logprob: -15.250009536743164
    5. 'ble' → logprob: -15.375009536743164
    6. 'table' → logprob: -15.375009536743164
    7. 'r' → logprob: -15.375009536743164
    8. 't' → logprob: -16.375009536743164
    9. 'nable' → logprob: -17.250009536743164
    10. '_enter' → logprob: -17.875009536743164

Token 641: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.375006675720215
    3. ' (' → logprob: -13.250006675720215
    4. '(Pos' → logprob: -16.5000057220459
    5. ',pos' → logprob: -16.7500057220459
    6. '[pos' → logprob: -17.2500057220459
    7. '(position' → logprob: -17.3750057220459
    8. 'pos' → logprob: -17.8750057220459
    9. ' pos' → logprob: -19.1250057220459
    10. '(p' → logprob: -19.1250057220459

Token 642: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4021237802808173e-05
    2. ' )' → logprob: -11.625014305114746
    3. '   ' → logprob: -13.000014305114746
    4. '       ' → logprob: -13.500014305114746
    5. ')
' → logprob: -14.625014305114746
    6. ',' → logprob: -15.625014305114746
    7. ')return' → logprob: -15.625014305114746
    8. '))' → logprob: -16.25001335144043
    9. '<|end|>' → logprob: -16.25001335144043
    10. '  ' → logprob: -16.75001335144043

Token 643: '    
' (ID: 1944)
  Prédit: '    
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.2371458262205124
    2. '
' → logprob: -1.9871457815170288
    3. '   ' → logprob: -2.6121459007263184
    4. '  
' → logprob: -8.23714542388916
    5. '        
' → logprob: -8.48714542388916
    6. '<|end|>' → logprob: -9.48714542388916
    7. ' 
' → logprob: -10.11214542388916
    8. '   
' → logprob: -10.23714542388916
    9. 'def' → logprob: -11.36214542388916
    10. '	
' → logprob: -11.61214542388916

Token 644: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7125779986381531
    2. '   ' → logprob: -1.2125780582427979
    3. '    
' → logprob: -1.7125780582427979
    4. 'def' → logprob: -3.462578058242798
    5. '        
' → logprob: -8.087577819824219
    6. '  
' → logprob: -9.712577819824219
    7. ' def' → logprob: -10.587577819824219
    8. '

' → logprob: -11.337577819824219
    9. ' 
' → logprob: -11.337577819824219
    10. '   
' → logprob: -12.212577819824219

Token 645: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0012030890211462975
    2. '
' → logprob: -7.3762030601501465
    3. '    
' → logprob: -8.251203536987305
    4. '   ' → logprob: -8.501203536987305
    5. ' def' → logprob: -9.126203536987305
    6. '        
' → logprob: -13.251203536987305
    7. '  
' → logprob: -13.876203536987305
    8. ' 
' → logprob: -15.376203536987305
    9. '   
' → logprob: -16.001203536987305
    10. '

' → logprob: -16.251203536987305

Token 646: ' next' (ID: 2613)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.6852298974990845
    2. 'next' → logprob: -1.3102298974990845
    3. 'step' → logprob: -2.185229778289795
    4. 'update' → logprob: -2.935229778289795
    5. 'possible' → logprob: -3.310229778289795
    6. 'move' → logprob: -4.560229778289795
    7. 'collapse' → logprob: -6.435229778289795
    8. 'get' → logprob: -6.560229778289795
    9. 'def' → logprob: -6.560229778289795
    10. 'valid' → logprob: -6.810229778289795

Token 647: '_states' (ID: 53795)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.3184695243835449
    2. '_states' → logprob: -1.318469524383545
    3. '_step' → logprob: -5.693469524383545
    4. '_move' → logprob: -7.568469524383545
    5. '_positions' → logprob: -7.693469524383545
    6. '_moves' → logprob: -7.943469524383545
    7. '_steps' → logprob: -9.068470001220703
    8. '_pos' → logprob: -9.068470001220703
    9. '_position' → logprob: -9.193470001220703
    10. '(self' → logprob: -9.318470001220703

Token 648: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005694755236618221
    2. '(' → logprob: -7.5005693435668945
    3. ' (' → logprob: -11.375569343566895
    4. '(
' → logprob: -13.125569343566895
    5. '(s' → logprob: -13.375569343566895
    6. '   ' → logprob: -13.500569343566895
    7. 'self' → logprob: -16.25057029724121
    8. '       ' → logprob: -17.50057029724121
    9. ' self' → logprob: -18.12557029724121
    10. ' ' → logprob: -18.50057029724121

Token 649: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.14125263690948486
    2. ',' → logprob: -2.2662525177001953
    3. 'self' → logprob: -4.141252517700195
    4. '   ' → logprob: -5.141252517700195
    5. '       ' → logprob: -5.516252517700195
    6. ' self' → logprob: -6.891252517700195
    7. ')' → logprob: -7.141252517700195
    8. ',self' → logprob: -8.641252517700195
    9. ' (' → logprob: -9.141252517700195
    10. '):
' → logprob: -10.016252517700195

Token 650: ' state' (ID: 2608)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08849385380744934
    2. 'state' → logprob: -2.838493824005127
    3. ' self' → logprob: -3.963493824005127
    4. ' state' → logprob: -6.088493824005127
    5. 'current' → logprob: -6.088493824005127
    6. '   ' → logprob: -6.588493824005127
    7. '       ' → logprob: -7.088493824005127
    8. ' current' → logprob: -7.963493824005127
    9. 'path' → logprob: -11.088494300842285
    10. ' ' → logprob: -11.088494300842285

Token 651: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6632696390151978
    2. ',' → logprob: -0.9132696390151978
    3. 'self' → logprob: -3.663269519805908
    4. '       ' → logprob: -3.663269519805908
    5. '   ' → logprob: -4.413269519805908
    6. ' (' → logprob: -4.538269519805908
    7. '):
' → logprob: -5.038269519805908
    8. ' self' → logprob: -6.413269519805908
    9. '):' → logprob: -7.163269519805908
    10. ')' → logprob: -7.913269519805908

Token 652: ' Path' (ID: 14027)
  Prédit: 'Path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -0.12727580964565277
    2. ' Path' → logprob: -2.1272757053375244
    3. '   ' → logprob: -8.252275466918945
    4. ')' → logprob: -10.127275466918945
    5. '       ' → logprob: -11.002275466918945
    6. 'self' → logprob: -11.502275466918945
    7. 'State' → logprob: -12.002275466918945
    8. '(Path' → logprob: -12.127275466918945
    9. '):
' → logprob: -13.377275466918945
    10. 'path' → logprob: -13.752275466918945

Token 653: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -3.128163257315464e-07
    2. 'state' → logprob: -16.0
    3. 'States' → logprob: -16.375
    4. '_state' → logprob: -18.125
    5. '   ' → logprob: -19.0
    6. ')' → logprob: -19.125
    7. '_State' → logprob: -19.25
    8. '	State' → logprob: -19.25
    9. '_STATE' → logprob: -19.75
    10. ' State' → logprob: -20.125

Token 654: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02028084173798561
    2. ')' → logprob: -5.020280838012695
    3. '):' → logprob: -5.270280838012695
    4. 'self' → logprob: -5.770280838012695
    5. '       ' → logprob: -6.020280838012695
    6. '):
' → logprob: -6.270280838012695
    7. '   ' → logprob: -7.270280838012695
    8. ' ,' → logprob: -9.270280838012695
    9. ' self' → logprob: -10.395280838012695
    10. ',self' → logprob: -10.520280838012695

Token 655: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08416704833507538
    2. '       ' → logprob: -2.709167003631592
    3. ':' → logprob: -5.334167003631592
    4. '   ' → logprob: -5.709167003631592
    5. ' self' → logprob: -6.584167003631592
    6. ' ->' → logprob: -6.709167003631592
    7. '->' → logprob: -6.959167003631592
    8. 'self' → logprob: -7.834167003631592
    9. ':
' → logprob: -7.834167003631592
    10. ' (' → logprob: -7.959167003631592

Token 656: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0019868058152496815
    2. ' List' → logprob: -6.251986980438232
    3. 'Iterator' → logprob: -10.376986503601074
    4. '   ' → logprob: -11.126986503601074
    5. 'Set' → logprob: -12.001986503601074
    6. 'Generator' → logprob: -12.251986503601074
    7. 'Iterable' → logprob: -13.876986503601074
    8. '       ' → logprob: -15.501986503601074
    9. ' Iterator' → logprob: -16.25198745727539
    10. ' Generator' → logprob: -16.50198745727539

Token 657: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.3080716346157715e-05
    2. '[
' → logprob: -11.625022888183594
    3. '<Path' → logprob: -12.125022888183594
    4. '[(' → logprob: -13.375022888183594
    5. '[path' → logprob: -13.500022888183594
    6. '   ' → logprob: -13.750022888183594
    7. '[List' → logprob: -14.000022888183594
    8. '(Path' → logprob: -14.125022888183594
    9. '):
' → logprob: -14.375022888183594
    10. '```' → logprob: -14.375022888183594

Token 658: 'Path' (ID: 2619)
  Prédit: 'Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -2.339278580620885e-06
    2. ' Path' → logprob: -13.250001907348633
    3. 'State' → logprob: -14.750001907348633
    4. '   ' → logprob: -16.000001907348633
    5. '[' → logprob: -17.625001907348633
    6. '	Path' → logprob: -17.750001907348633
    7. 'Tuple' → logprob: -18.375001907348633
    8. '       ' → logprob: -20.250001907348633
    9. 'path' → logprob: -20.250001907348633
    10. ' ' → logprob: -20.250001907348633

Token 659: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -1.0280383548888494e-06
    2. 'States' → logprob: -14.375000953674316
    3. '[' → logprob: -15.625000953674316
    4. 'state' → logprob: -16.875001907348633
    5. 'ate' → logprob: -17.375001907348633
    6. '<State' → logprob: -17.500001907348633
    7. '	State' → logprob: -18.000001907348633
    8. '_State' → logprob: -18.125001907348633
    9. 't' → logprob: -18.125001907348633
    10. '_STATE' → logprob: -18.250001907348633

Token 660: ']:
' (ID: 22152)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16843494772911072
    2. '):
' → logprob: -2.1684348583221436
    3. '       ' → logprob: -3.5434348583221436
    4. '):' → logprob: -5.168435096740723
    5. '   ' → logprob: -5.543435096740723
    6. ':
' → logprob: -7.043435096740723
    7. ':' → logprob: -7.668435096740723
    8. ']:
' → logprob: -8.043435096740723
    9. '```' → logprob: -8.793435096740723
    10. 'self' → logprob: -9.043435096740723

Token 661: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5094070477061905e-05
    2. '```' → logprob: -11.750015258789062
    3. '[' → logprob: -13.125015258789062
    4. '   ' → logprob: -13.250015258789062
    5. '
' → logprob: -13.750015258789062
    6. 'result' → logprob: -14.125015258789062
    7. '        
' → logprob: -14.750015258789062
    8. 'tokens' → logprob: -15.375015258789062
    9. '[]' → logprob: -15.625015258789062
    10. '    
' → logprob: -16.125015258789062

Token 662: ' results' (ID: 4376)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01019386388361454
    2. 'result' → logprob: -4.885193824768066
    3. 'next' → logprob: -6.510193824768066
    4. 'results' (adapté à ' results') → logprob: -7.510193824768066
    5. 'res' → logprob: -8.760193824768066
    6. 'states' → logprob: -9.010193824768066
    7. ' result' → logprob: -9.260193824768066
    8. ' next' → logprob: -10.260193824768066
    9. 'new' → logprob: -10.385193824768066
    10. 'current' → logprob: -10.635193824768066

Token 663: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03481932729482651
    2. '=' → logprob: -3.4098193645477295
    3. '       ' → logprob: -6.90981912612915
    4. '=[]' → logprob: -9.034819602966309
    5. '   ' → logprob: -11.034819602966309
    6. '[]' → logprob: -11.159819602966309
    7. ':' → logprob: -11.409819602966309
    8. '=[]
' → logprob: -12.034819602966309
    9. '(self' → logprob: -12.534819602966309
    10. '        ' → logprob: -14.409819602966309

Token 664: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.2014547437429428
    2. '[]' → logprob: -1.701454758644104
    3. ' []
' → logprob: -10.201455116271973
    4. ' []' → logprob: -12.951455116271973
    5. '[]

' → logprob: -13.201455116271973
    6. '[])
' → logprob: -16.701454162597656
    7. '[' → logprob: -17.951454162597656
    8. '[],' → logprob: -18.576454162597656
    9. '[])' → logprob: -18.951454162597656
    10. '   ' → logprob: -19.076454162597656

Token 665: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011818927014246583
    2. ' for' → logprob: -7.3761820793151855
    3. '
' → logprob: -8.001181602478027
    4. 'for' → logprob: -8.626181602478027
    5. '        
' → logprob: -10.501181602478027
    6. ',' → logprob: -12.376181602478027
    7. 'current' → logprob: -13.376181602478027
    8. '   ' → logprob: -13.501181602478027
    9. '```' → logprob: -14.001181602478027
    10. 'r' → logprob: -14.001181602478027

Token 666: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.022791722789406776
    2. '       ' → logprob: -4.772791862487793
    3. 'current' → logprob: -4.897791862487793
    4. 'pos' → logprob: -6.147791862487793
    5. ' for' → logprob: -6.397791862487793
    6. 'curr' → logprob: -6.522791862487793
    7. 'r' → logprob: -6.772791862487793
    8. 'cur' → logprob: -8.647791862487793
    9. ' current' → logprob: -11.772791862487793
    10. 'position' → logprob: -12.772791862487793

Token 667: ' n' (ID: 297)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.5807043313980103
    2. 'next' → logprob: -1.3307043313980103
    3. 'nbr' → logprob: -2.3307042121887207
    4. 'n' → logprob: -2.8307042121887207
    5. 'npos' → logprob: -4.830704212188721
    6. 'nei' → logprob: -5.455704212188721
    7. 'nr' → logprob: -5.580704212188721
    8. 'nb' → logprob: -7.205704212188721
    9. ' neighbor' → logprob: -7.205704212188721
    10. 'new' → logprob: -7.330704212188721

Token 668: 'pos' (ID: 1103)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.29631760716438293
    2. 'e' → logprob: -1.5463175773620605
    3. '_pos' → logprob: -4.5463175773620605
    4. 'pos' → logprob: -4.6713175773620605
    5. 'in' → logprob: -4.7963175773620605
    6. 'ext' → logprob: -5.2963175773620605
    7. ',' → logprob: -5.5463175773620605
    8. 'n' → logprob: -5.7963175773620605
    9. 'b' → logprob: -7.1713175773620605
    10. '```' → logprob: -7.2963175773620605

Token 669: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07892206311225891
    2. 'in' → logprob: -2.5789220333099365
    3. '	in' → logprob: -11.328922271728516
    4. ',' → logprob: -12.203922271728516
    5. '        ' → logprob: -12.578922271728516
    6. '_in' → logprob: -13.203922271728516
    7. ')' → logprob: -13.328922271728516
    8. 'n' → logprob: -13.578922271728516
    9. '       ' → logprob: -13.953922271728516
    10. ' ' → logprob: -13.953922271728516

Token 670: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.048606324940919876
    2. ' self' → logprob: -3.0486063957214355
    3. '       ' → logprob: -11.298605918884277
    4. '[self' → logprob: -12.673605918884277
    5. '(self' → logprob: -13.423605918884277
    6. '           ' → logprob: -13.423605918884277
    7. '   ' → logprob: -16.298606872558594
    8. '[' → logprob: -16.548606872558594
    9. '	self' → logprob: -16.673606872558594
    10. '               ' → logprob: -17.048606872558594

Token 671: '.ne' (ID: 39319)
  Prédit: '.ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ne' → logprob: -0.00034356804098933935
    2. 'neighbors' → logprob: -8.000343322753906
    3. ' .' → logprob: -12.125343322753906
    4. '.' → logprob: -13.125343322753906
    5. ' neighbors' → logprob: -15.625343322753906
    6. '.Ne' → logprob: -15.875343322753906
    7. '_neighbors' → logprob: -16.125343322753906
    8. 'Neighbors' → logprob: -17.000343322753906
    9. '.positions' → logprob: -17.000343322753906
    10. ').' → logprob: -17.125343322753906

Token 672: 'ighbors' (ID: 46483)
  Prédit: 'ighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbors' → logprob: -3.726595241460018e-05
    2. 'igh' → logprob: -11.00003719329834
    3. 'gh' → logprob: -11.75003719329834
    4. 'neighbors' → logprob: -12.00003719329834
    5. '(state' → logprob: -13.37503719329834
    6. 'ighbor' → logprob: -13.62503719329834
    7. 'ighbours' → logprob: -13.75003719329834
    8. 'ig' → logprob: -14.25003719329834
    9. 'bors' → logprob: -14.37503719329834
    10. 'w' → logprob: -14.87503719329834

Token 673: '(state' (ID: 16114)
  Prédit: '(state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -3.786196975852363e-05
    2. ' (' → logprob: -10.500038146972656
    3. '(n' → logprob: -11.625038146972656
    4. '       ' → logprob: -14.625038146972656
    5. '(' → logprob: -15.625038146972656
    6. 'state' → logprob: -15.875038146972656
    7. ',state' → logprob: -15.875038146972656
    8. '[state' → logprob: -16.250038146972656
    9. '(State' → logprob: -16.875038146972656
    10. '(states' → logprob: -17.250038146972656

Token 674: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.0024259560741484165
    2. '(position' → logprob: -6.2524261474609375
    3. '.state' → logprob: -8.502426147460938
    4. ' .' → logprob: -9.252426147460938
    5. ')' → logprob: -9.877426147460938
    6. '(n' → logprob: -10.127426147460938
    7. '.n' → logprob: -10.377426147460938
    8. ' (' → logprob: -10.877426147460938
    9. ').' → logprob: -11.127426147460938
    10. '.' → logprob: -11.502426147460938

Token 675: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2042417973279953
    2. '):' → logprob: -1.7042417526245117
    3. '       ' → logprob: -6.204241752624512
    4. '):
' → logprob: -7.454241752624512
    5. '           ' → logprob: -8.829241752624512
    6. ')' → logprob: -9.829241752624512
    7. '   ' → logprob: -11.704241752624512
    8. '):

' → logprob: -12.204241752624512
    9. ':' → logprob: -12.704241752624512
    10. '```' → logprob: -13.829241752624512

Token 676: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00029387109680101275
    2. '	       ' → logprob: -8.875293731689453
    3. '       ' → logprob: -9.000293731689453
    4. ' if' → logprob: -12.125293731689453
    5. '```' → logprob: -12.125293731689453
    6. '		' → logprob: -12.625293731689453
    7. '	   ' → logprob: -12.750293731689453
    8. '          ' → logprob: -13.125293731689453
    9. '               ' → logprob: -13.625293731689453
    10. '    	   ' → logprob: -13.625293731689453

Token 677: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3571259677410126
    2. 'if' (adapté à ' if') → logprob: -1.732125997543335
    3. '           ' → logprob: -2.357125997543335
    4. '#' → logprob: -4.607125759124756
    5. ' if' → logprob: -4.732125759124756
    6. 'new' → logprob: -5.607125759124756
    7. 'frag' → logprob: -5.732125759124756
    8. 'can' → logprob: -6.357125759124756
    9. '   ' → logprob: -7.857125759124756
    10. ' new' → logprob: -8.482126235961914

Token 678: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.39863166213035583
    2. ' self' → logprob: -1.5236316919326782
    3. ' not' → logprob: -2.6486315727233887
    4. 'not' → logprob: -3.2736315727233887
    5. '               ' → logprob: -6.648631572723389
    6. '           ' → logprob: -7.148631572723389
    7. '(self' → logprob: -10.023632049560547
    8. '                   ' → logprob: -10.148632049560547
    9. '   ' → logprob: -10.523632049560547
    10. '(not' → logprob: -11.648632049560547

Token 679: '.can' (ID: 46002)
  Prédit: '.can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.can' → logprob: -1.0280383548888494e-06
    2. '.' → logprob: -14.875000953674316
    3. 'can' → logprob: -15.000000953674316
    4. ' .' → logprob: -15.625000953674316
    5. '.Can' → logprob: -15.875000953674316
    6. ' can' → logprob: -17.125001907348633
    7. '	can' → logprob: -17.500001907348633
    8. '_can' → logprob: -18.625001907348633
    9. '(can' → logprob: -19.375001907348633
    10. ').' → logprob: -19.625001907348633

Token 680: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -6.988221684878226e-06
    2. 'step' → logprob: -12.375006675720215
    3. '_' → logprob: -13.625006675720215
    4. '_STEP' → logprob: -14.625006675720215
    5. '```' → logprob: -15.625006675720215
    6. '   ' → logprob: -15.875006675720215
    7. 'Step' → logprob: -15.875006675720215
    8. '_steps' → logprob: -16.12500762939453
    9. '_can' → logprob: -16.12500762939453
    10. '
' → logprob: -16.25000762939453

Token 681: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00014370749704539776
    2. '(' → logprob: -8.875144004821777
    3. ' (' → logprob: -12.625144004821777
    4. '(
' → logprob: -14.750144004821777
    5. '((' → logprob: -17.12514305114746
    6. '(pos' → logprob: -17.25014305114746
    7. ' ' → logprob: -18.12514305114746
    8. '   ' → logprob: -18.50014305114746
    9. ')' → logprob: -18.75014305114746
    10. 'n' → logprob: -18.87514305114746

Token 682: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0005863950937055051
    2. '(n' → logprob: -8.25058650970459
    3. '(pos' → logprob: -8.37558650970459
    4. '[pos' → logprob: -10.37558650970459
    5. 'npos' → logprob: -10.50058650970459
    6. 'os' → logprob: -11.62558650970459
    7. '[n' → logprob: -12.00058650970459
    8. 'pose' → logprob: -12.50058650970459
    9. ',pos' → logprob: -12.62558650970459
    10. '_pos' → logprob: -13.50058650970459

Token 683: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038903378881514072
    2. ' ,' → logprob: -5.753890514373779
    3. ',state' → logprob: -7.253890514373779
    4. ',
' → logprob: -13.003890037536621
    5. 'state' → logprob: -13.628890037536621
    6. ',n' → logprob: -14.878890037536621
    7. ')' → logprob: -15.753890037536621
    8. '   ' → logprob: -16.003890991210938
    9. '(state' → logprob: -16.128890991210938
    10. '           ' → logprob: -16.378890991210938

Token 684: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.043101731687784195
    2. ' state' → logprob: -3.1681017875671387
    3. '           ' → logprob: -10.41810131072998
    4. '   ' → logprob: -10.41810131072998
    5. '               ' → logprob: -11.66810131072998
    6. '    ' → logprob: -12.29310131072998
    7. '       ' → logprob: -12.29310131072998
    8. '	state' → logprob: -12.41810131072998
    9. ' ' → logprob: -12.54310131072998
    10. '                   ' → logprob: -12.79310131072998

Token 685: '.fr' (ID: 11435)
  Prédit: '.fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fr' → logprob: -0.00019185843120794743
    2. '.' → logprob: -8.750191688537598
    3. '.fragment' → logprob: -11.250191688537598
    4. '.fragments' → logprob: -11.625191688537598
    5. '.fre' → logprob: -12.250191688537598
    6. 'frag' → logprob: -13.375191688537598
    7. ' fragile' → logprob: -13.625191688537598
    8. ').' → logprob: -13.875191688537598
    9. ' .' → logprob: -14.000191688537598
    10. '.f' → logprob: -15.250191688537598

Token 686: 'ag' (ID: 348)
  Prédit: 'ag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ag' → logprob: -8.399378566537052e-05
    2. 'agle' → logprob: -10.375083923339844
    3. 'frag' → logprob: -10.375083923339844
    4. ' fragile' → logprob: -11.250083923339844
    5. 'angible' → logprob: -13.000083923339844
    6. 'aggable' → logprob: -13.625083923339844
    7. 'age' → logprob: -14.125083923339844
    8. 'agi' → logprob: -14.500083923339844
    9. 'atile' → logprob: -14.750083923339844
    10. 'rag' → logprob: -15.000083923339844

Token 687: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -1.27099974633893e-05
    2. 'tile' → logprob: -11.750012397766113
    3. 'le' → logprob: -14.125012397766113
    4. 'frag' → logprob: -14.375012397766113
    5. ' fragile' → logprob: -14.625012397766113
    6. 'iles' → logprob: -15.000012397766113
    7. '   ' → logprob: -15.250012397766113
    8. 'ule' → logprob: -15.375012397766113
    9. 'ale' → logprob: -15.500012397766113
    10. '[' → logprob: -15.500012397766113

Token 688: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -1.723973582556937e-05
    2. 'map' → logprob: -11.000017166137695
    3. 'Map' → logprob: -15.125017166137695
    4. 'emap' → logprob: -17.000017166137695
    5. 'e' → logprob: -17.125017166137695
    6. '_MAP' → logprob: -18.250017166137695
    7. '   ' → logprob: -18.250017166137695
    8. 'able' → logprob: -18.375017166137695
    9. 'o' → logprob: -18.375017166137695
    10. ' map' → logprob: -18.500017166137695

Token 689: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.576203465461731
    2. '):
' → logprob: -0.826203465461731
    3. '):
' → logprob: -8.701203346252441
    4. ')' → logprob: -10.326203346252441
    5. '):

' → logprob: -10.576203346252441
    6. '           ' → logprob: -11.076203346252441
    7. ' ):' → logprob: -11.451203346252441
    8. ' ):
' → logprob: -11.951203346252441
    9. '               ' → logprob: -12.326203346252441
    10. ':' → logprob: -13.951203346252441

Token 690: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007962852250784636
    2. '                
' → logprob: -7.875796318054199
    3. '           ' → logprob: -8.5007963180542
    4. ',' → logprob: -9.6257963180542
    5. '       ' → logprob: -10.0007963180542
    6. '                ' → logprob: -10.6257963180542
    7. '              ' → logprob: -11.6257963180542
    8. '                               ' → logprob: -11.7507963180542
    9. ':' → logprob: -11.7507963180542
    10. '            
' → logprob: -12.0007963180542

Token 691: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.7659315466880798
    2. '                   ' → logprob: -1.5159316062927246
    3. 'visited' → logprob: -1.6409316062927246
    4. '               ' → logprob: -2.3909316062927246
    5. '#' (adapté à ' #') → logprob: -4.390931606292725
    6. ' new' → logprob: -4.765931606292725
    7. '   ' → logprob: -5.015931606292725
    8. 'next' → logprob: -7.265931606292725
    9. ' visited' → logprob: -7.640931606292725
    10. ' #' → logprob: -7.890931606292725

Token 692: ' Calculate' (ID: 38942)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.4475407898426056
    2. 'new' → logprob: -1.0725407600402832
    3. '#' → logprob: -4.322540760040283
    4. 'if' → logprob: -6.447540760040283
    5. '               ' → logprob: -6.947540760040283
    6. 'next' → logprob: -7.197540760040283
    7. 'npos' → logprob: -8.197541236877441
    8. 'nt' → logprob: -8.197541236877441
    9. 'frag' → logprob: -8.322541236877441
    10. '           ' → logprob: -8.697541236877441

Token 693: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.19883526861667633
    2. ' new' → logprob: -2.4488353729248047
    3. 'visited' → logprob: -2.4488353729248047
    4. '#' → logprob: -5.698835372924805
    5. 'next' → logprob: -6.573835372924805
    6. ' visited' → logprob: -6.948835372924805
    7. '               ' → logprob: -7.573835372924805
    8. '   ' → logprob: -7.948835372924805
    9. 'if' → logprob: -8.573835372924805
    10. '           ' → logprob: -8.573835372924805

Token 694: ' treasures' (ID: 82685)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6269119381904602
    2. '_' → logprob: -0.8769119381904602
    3. 'frag' → logprob: -3.6269118785858154
    4. '_frag' → logprob: -4.6269121170043945
    5. ' visited' → logprob: -5.0019121170043945
    6. 'position' → logprob: -5.7519121170043945
    7. '_position' → logprob: -6.7519121170043945
    8. ' position' → logprob: -7.7519121170043945
    9. ' frag' → logprob: -8.001912117004395
    10. '   ' → logprob: -8.376912117004395

Token 695: ' visited' (ID: 18416)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06752674281597137
    2. 'visited' → logprob: -2.9425268173217773
    3. '               ' → logprob: -5.067526817321777
    4. ' =' → logprob: -5.192526817321777
    5. '                   ' → logprob: -8.692526817321777
    6. '       ' → logprob: -9.442526817321777
    7. '=' → logprob: -9.442526817321777
    8. '_index' → logprob: -9.692526817321777
    9. '_indices' → logprob: -9.942526817321777
    10. '   ' → logprob: -9.942526817321777

Token 696: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01323952991515398
    2. 'visited' → logprob: -5.38823938369751
    3. ',' → logprob: -6.01323938369751
    4. 'new' → logprob: -6.26323938369751
    5. '                
' → logprob: -7.01323938369751
    6. ' new' → logprob: -7.01323938369751
    7. ':' → logprob: -7.38823938369751
    8. ' visited' → logprob: -7.51323938369751
    9. '                   ' → logprob: -7.76323938369751
    10. '                ' → logprob: -8.388239860534668

Token 697: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009313485352322459
    2. 'visited' → logprob: -7.375931262969971
    3. '                
' → logprob: -9.250931739807129
    4. ',' → logprob: -9.375931739807129
    5. '                   ' → logprob: -10.500931739807129
    6. 'new' → logprob: -10.625931739807129
    7. '                ' → logprob: -11.250931739807129
    8. ' =' → logprob: -11.375931739807129
    9. ' visited' → logprob: -11.625931739807129
    10. '           ' → logprob: -12.125931739807129

Token 698: ' treasures' (ID: 82685)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.507002592086792
    2. 'new' → logprob: -1.382002592086792
    3. 'tre' → logprob: -3.132002592086792
    4. '               ' → logprob: -3.132002592086792
    5. 'idx' → logprob: -3.632002592086792
    6. ' new' → logprob: -4.632002830505371
    7. 't' → logprob: -4.757002830505371
    8. ' visited' → logprob: -5.382002830505371
    9. ' idx' → logprob: -6.257002830505371
    10. 'nt' → logprob: -6.382002830505371

Token 699: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15939861536026
    2. '_idx' → logprob: -2.1593985557556152
    3. ' =' → logprob: -3.5343985557556152
    4. '_index' → logprob: -6.534398555755615
    5. '=' → logprob: -7.784398555755615
    6. 'visited' → logprob: -8.034399032592773
    7. '_set' → logprob: -8.284399032592773
    8. 'idx' → logprob: -9.909399032592773
    9. '_indices' → logprob: -9.909399032592773
    10. '_found' → logprob: -10.034399032592773

Token 700: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.05984334647655487
    2. 'idx' → logprob: -3.3098433017730713
    3. 'pos' → logprob: -4.55984354019165
    4. '_idx' → logprob: -5.30984354019165
    5. '_pos' → logprob: -6.05984354019165
    6. 'index' → logprob: -6.43484354019165
    7. '_index' → logprob: -7.55984354019165
    8. ' =' → logprob: -7.68484354019165
    9. 'found' → logprob: -7.80984354019165
    10. '=' → logprob: -7.80984354019165

Token 701: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12694354355335236
    2. ' =' → logprob: -2.126943588256836
    3. '=set' → logprob: -11.126943588256836
    4. '   ' → logprob: -15.626943588256836
    5. 'new' → logprob: -15.876943588256836
    6. '=new' → logprob: -16.126943588256836
    7. 'updated' → logprob: -16.251943588256836
    8. '=
' → logprob: -16.626943588256836
    9. '_new' → logprob: -17.126943588256836
    10. '    ' → logprob: -17.251943588256836

Token 702: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.002250887919217348
    2. ' set' → logprob: -6.502250671386719
    3. 'state' → logprob: -7.252250671386719
    4. '{' → logprob: -11.002250671386719
    5. '(set' → logprob: -11.252250671386719
    6. '   ' → logprob: -12.127250671386719
    7. 'list' → logprob: -13.627250671386719
    8. ' state' → logprob: -14.127250671386719
    9. '	set' → logprob: -14.377250671386719
    10. '{
' → logprob: -14.877250671386719

Token 703: '(state' (ID: 16114)
  Prédit: '(state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -0.00043102685594931245
    2. 'state' → logprob: -7.750431060791016
    3. '[state' → logprob: -15.625431060791016
    4. '(' → logprob: -16.750431060791016
    5. '(list' → logprob: -18.000431060791016
    6. ' state' → logprob: -18.875431060791016
    7. '	state' → logprob: -19.250431060791016
    8. ',state' → logprob: -19.500431060791016
    9. '(
' → logprob: -19.750431060791016
    10. '```' → logprob: -20.000431060791016

Token 704: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -0.0006938508013263345
    2. '.state' → logprob: -7.3756937980651855
    3. 'visited' → logprob: -10.750694274902344
    4. '_' → logprob: -10.875694274902344
    5. '.' → logprob: -11.875694274902344
    6. '(state' → logprob: -12.375694274902344
    7. '_vis' → logprob: -12.875694274902344
    8. ' .' → logprob: -13.125694274902344
    9. '.visible' → logprob: -13.125694274902344
    10. '.visit' → logprob: -13.250694274902344

Token 705: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -0.00021891399228479713
    2. 'isted' → logprob: -8.500219345092773
    3. 'visited' → logprob: -12.125219345092773
    4. 'itors' → logprob: -12.625219345092773
    5. 's' → logprob: -12.625219345092773
    6. 'ored' → logprob: -14.125219345092773
    7. 'ered' → logprob: -14.500219345092773
    8. 'it' → logprob: -14.750219345092773
    9. 'ITED' → logprob: -14.875219345092773
    10. 'itored' → logprob: -15.500219345092773

Token 706: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -4.0484450437361374e-05
    2. 't' → logprob: -10.500040054321289
    3. 'tre' → logprob: -12.250040054321289
    4. 's' → logprob: -12.375040054321289
    5. ')' → logprob: -13.875040054321289
    6. '
' → logprob: -15.625040054321289
    7. '   ' → logprob: -15.750040054321289
    8. 'es' → logprob: -15.750040054321289
    9. 'Treas' → logprob: -15.750040054321289
    10. 'e' → logprob: -16.00004005432129

Token 707: 'reas' (ID: 20712)
  Prédit: 'reas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reas' → logprob: -0.32129213213920593
    2. 'asures' → logprob: -1.9462921619415283
    3. 're' → logprob: -2.0712921619415283
    4. 'ures' → logprob: -6.071291923522949
    5. 'e' → logprob: -6.821291923522949
    6. 'res' → logprob: -6.946291923522949
    7. 'r' → logprob: -7.821291923522949
    8. 's' → logprob: -7.821291923522949
    9. ' treasures' → logprob: -8.82129192352295
    10. '   ' → logprob: -9.32129192352295

Token 708: 'ures' (ID: 1609)
  Prédit: 'ures'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ures' → logprob: -0.0071226307190954685
    2. 's' → logprob: -5.50712251663208
    3. 'asures' → logprob: -6.00712251663208
    4. 't' → logprob: -8.257122993469238
    5. 'ured' → logprob: -8.882122993469238
    6. 'res' → logprob: -9.382122993469238
    7. 'ores' → logprob: -10.132122993469238
    8. '_' → logprob: -11.132122993469238
    9. 'es' → logprob: -11.882122993469238
    10. '[' → logprob: -12.132122993469238

Token 709: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0932905375957489
    2. ')' → logprob: -2.4682905673980713
    3. '               ' → logprob: -5.468290328979492
    4. '                   ' → logprob: -9.218290328979492
    5. ')
' → logprob: -11.468290328979492
    6. '           ' → logprob: -12.593290328979492
    7. '                       ' → logprob: -13.468290328979492
    8. ')

' → logprob: -13.468290328979492
    9. '       ' → logprob: -13.593290328979492
    10. '                ' → logprob: -14.218290328979492

Token 710: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009769558673724532
    2. 'token' → logprob: -7.375977039337158
    3. 'if' → logprob: -9.2509765625
    4. '```' → logprob: -9.2509765625
    5. ' if' → logprob: -10.3759765625
    6. '                   ' → logprob: -10.6259765625
    7. 'tokens' → logprob: -11.0009765625
    8. 'next' → logprob: -11.1259765625
    9. '                
' → logprob: -11.1259765625
    10. 't' → logprob: -11.1259765625

Token 711: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.6809165477752686
    2. 'tre' → logprob: -1.4309165477752686
    3. 't' → logprob: -1.5559165477752686
    4. 'ti' → logprob: -3.6809165477752686
    5. 'tid' → logprob: -4.055916786193848
    6. 'index' → logprob: -7.430916786193848
    7. 'tt' → logprob: -8.805916786193848
    8. ' idx' → logprob: -9.430916786193848
    9. '   ' → logprob: -9.555916786193848
    10. 'i' → logprob: -9.555916786193848

Token 712: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.576028048992157
    2. '=' → logprob: -0.826028048992157
    3. '=self' → logprob: -9.701027870178223
    4. '                   ' → logprob: -11.326027870178223
    5. '               ' → logprob: -11.951027870178223
    6. 't' → logprob: -12.951027870178223
    7. '_pos' → logprob: -14.076027870178223
    8. '=t' → logprob: -14.076027870178223
    9. '_t' → logprob: -14.201027870178223
    10. 'self' → logprob: -14.576027870178223

Token 713: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007102862582542002
    2. ' self' → logprob: -7.250710487365723
    3. '               ' → logprob: -15.000710487365723
    4. '(self' → logprob: -16.500709533691406
    5. '                   ' → logprob: -17.375709533691406
    6. '[self' → logprob: -18.250709533691406
    7. '	self' → logprob: -19.125709533691406
    8. '=self' → logprob: -19.500709533691406
    9. '0' → logprob: -20.000709533691406
    10. '           ' → logprob: -20.500709533691406

Token 714: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.0006289214943535626
    2. 'is' → logprob: -7.37562894821167
    3. '_.' → logprob: -14.500628471374512
    4. '.' → logprob: -14.625628471374512
    5. 't' → logprob: -15.000628471374512
    6. ' .' → logprob: -15.125628471374512
    7. '_is' → logprob: -15.250628471374512
    8. '```' → logprob: -16.375629425048828
    9. '   ' → logprob: -16.500629425048828
    10. '_' → logprob: -16.625629425048828

Token 715: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -4.320199877838604e-07
    2. 'tre' → logprob: -15.5
    3. '_' → logprob: -16.375
    4. '_frag' → logprob: -18.125
    5. ' _' → logprob: -18.75
    6. 't' → logprob: -19.0
    7. 'frag' → logprob: -19.25
    8. '   ' → logprob: -19.375
    9. ' ' → logprob: -20.5
    10. '```' → logprob: -20.625

Token 716: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0024093042593449354
    2. 'reas' → logprob: -6.3774094581604
    3. 'res' → logprob: -8.252408981323242
    4. 'tre' → logprob: -9.002408981323242
    5. 'rea' → logprob: -9.127408981323242
    6. 'r' → logprob: -9.752408981323242
    7. 'e' → logprob: -10.252408981323242
    8. '_re' → logprob: -11.127408981323242
    9. 'pos' → logprob: -11.752408981323242
    10. '(' → logprob: -12.064908981323242

Token 717: 'asure' (ID: 5450)
  Prédit: 'asure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asure' → logprob: -0.0004191138141322881
    2. 'as' → logprob: -8.500418663024902
    3. 'sure' → logprob: -9.250418663024902
    4. 'a' → logprob: -10.375418663024902
    5. 'asures' → logprob: -11.250418663024902
    6. 'ASURE' → logprob: -11.375418663024902
    7. 'asurer' → logprob: -11.625418663024902
    8. 'asu' → logprob: -11.875418663024902
    9. 'pos' → logprob: -12.125418663024902
    10. 'asured' → logprob: -12.250418663024902

Token 718: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00020461321400944144
    2. 'pos' → logprob: -8.500205039978027
    3. '(pos' → logprob: -14.500205039978027
    4. 'Pos' → logprob: -14.875205039978027
    5. '	pos' → logprob: -16.12520408630371
    6. '[pos' → logprob: -16.62520408630371
    7. 's' → logprob: -17.37520408630371
    8. 'npos' → logprob: -17.62520408630371
    9. '-pos' → logprob: -18.00020408630371
    10. '   ' → logprob: -18.75020408630371

Token 719: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -12.87500286102295
    3. '((' → logprob: -15.50000286102295
    4. '(
' → logprob: -16.625003814697266
    5. ' (' → logprob: -16.875003814697266
    6. '(next' → logprob: -17.625003814697266
    7. 'n' → logprob: -18.250003814697266
    8. '(pos' → logprob: -18.875003814697266
    9. '(nx' → logprob: -19.125003814697266
    10. '(noun' → logprob: -19.250003814697266

Token 720: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0016304324381053448
    2. 'os' → logprob: -7.3766303062438965
    3. '(n' → logprob: -7.6266303062438965
    4. '(pos' → logprob: -7.6266303062438965
    5. 'osp' → logprob: -11.376630783081055
    6. '_pos' → logprob: -12.751630783081055
    7. 'npos' → logprob: -12.751630783081055
    8. '(os' → logprob: -13.126630783081055
    9. '[pos' → logprob: -13.126630783081055
    10. '(p' → logprob: -13.626630783081055

Token 721: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31355196237564087
    2. ')
' → logprob: -1.313551902770996
    3. ')
' → logprob: -8.188551902770996
    4. ' )
' → logprob: -12.813551902770996
    5. ')`
' → logprob: -12.938551902770996
    6. ' )' → logprob: -13.188551902770996
    7. '())
' → logprob: -13.563551902770996
    8. '(n' → logprob: -14.313551902770996
    9. '())' → logprob: -14.438551902770996
    10. '   ' → logprob: -14.688551902770996

Token 722: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00034845535992644727
    2. ' if' → logprob: -8.750348091125488
    3. '                
' → logprob: -10.250348091125488
    4. '<|end|>' → logprob: -10.250348091125488
    5. '```' → logprob: -10.375348091125488
    6. '                ' → logprob: -10.375348091125488
    7. '                   ' → logprob: -10.750348091125488
    8. '                               ' → logprob: -11.875348091125488
    9. '              ' → logprob: -12.000348091125488
    10. 'if' → logprob: -12.625348091125488

Token 723: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1621711552143097
    2. ' if' → logprob: -2.1621711254119873
    3. 'if' (adapté à ' if') → logprob: -3.5371711254119873
    4. '                ' → logprob: -5.787171363830566
    5. '                
' → logprob: -6.787171363830566
    6. ' 
' → logprob: -7.412171363830566
    7. ' ' → logprob: -8.912171363830566
    8. '			' → logprob: -9.287171363830566
    9. '              ' → logprob: -9.412171363830566
    10. '                   ' → logprob: -9.662171363830566

Token 724: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.048605985939502716
    2. ' idx' → logprob: -3.0486059188842773
    3. '(idx' → logprob: -11.173605918884277
    4. '	idx' → logprob: -12.798605918884277
    5. '[idx' → logprob: -13.798605918884277
    6. '                   ' → logprob: -15.173605918884277
    7. '_idx' → logprob: -16.173606872558594
    8. '.idx' → logprob: -16.298606872558594
    9. '               ' → logprob: -16.798606872558594
    10. ' ' → logprob: -17.423606872558594

Token 725: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2728945314884186
    2. '>=' → logprob: -2.1478946208953857
    3. '!=' → logprob: -2.2728946208953857
    4. '!=-' → logprob: -4.397894382476807
    5. ' >=' → logprob: -5.272894382476807
    6. ')' → logprob: -6.772894382476807
    7. ' not' → logprob: -8.897894859313965
    8. ')!=' → logprob: -9.522894859313965
    9. ')>=' → logprob: -9.522894859313965
    10. '()!=' → logprob: -9.647894859313965

Token 726: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001170225441455841
    2. ' -' → logprob: -6.7511701583862305
    3. '   ' → logprob: -20.251171112060547
    4. ' ' → logprob: -20.251171112060547
    5. '−' → logprob: -21.876171112060547
    6. '  ' → logprob: -23.376171112060547
    7. '```' → logprob: -23.376171112060547
    8. '–' → logprob: -23.751171112060547
    9. '1' → logprob: -24.376171112060547
    10. '
' → logprob: -24.501171112060547

Token 727: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -18.0
    4. '   ' → logprob: -18.875
    5. ',' → logprob: -19.1875
    6. '-' → logprob: -19.25
    7. ' -' → logprob: -19.4375
    8. '  ' → logprob: -20.0
    9. '`' → logprob: -20.0625
    10. '2' → logprob: -20.25

Token 728: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.29233887791633606
    2. ':' → logprob: -1.4173388481140137
    3. '                   ' → logprob: -4.792338848114014
    4. ' and' → logprob: -6.542338848114014
    5. '                       ' → logprob: -7.292338848114014
    6. '):
' → logprob: -8.417339324951172
    7. '               ' → logprob: -8.667339324951172
    8. '                           ' → logprob: -8.792339324951172
    9. 'and' → logprob: -10.292339324951172
    10. '           ' → logprob: -10.792339324951172

Token 729: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005003782454878092
    2. 'tre' → logprob: -6.005003929138184
    3. ' treasures' → logprob: -6.380003929138184
    4. '               ' → logprob: -7.505003929138184
    5. '   ' → logprob: -9.130003929138184
    6. '                       ' → logprob: -9.380003929138184
    7. '           ' → logprob: -10.505003929138184
    8. ' tre' → logprob: -11.005003929138184
    9. '```' → logprob: -11.255003929138184
    10. '                           ' → logprob: -11.755003929138184

Token 730: ' treasures' (ID: 82685)
  Prédit: ' treasures'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' treasures' → logprob: -0.5864759683609009
    2. 'tre' → logprob: -0.9614759683609009
    3. '               ' → logprob: -3.3364758491516113
    4. '                   ' → logprob: -3.8364758491516113
    5. '                       ' → logprob: -6.086475849151611
    6. '   ' → logprob: -7.336475849151611
    7. '           ' → logprob: -7.336475849151611
    8. '       ' → logprob: -8.71147632598877
    9. '                               ' → logprob: -9.08647632598877
    10. '                           ' → logprob: -9.58647632598877

Token 731: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0445127372804563e-05
    2. 'visited' → logprob: -11.50001049041748
    3. '               ' → logprob: -16.000009536743164
    4. '                   ' → logprob: -16.125009536743164
    5. '   ' → logprob: -17.625009536743164
    6. '           ' → logprob: -18.125009536743164
    7. ' =' → logprob: -18.750009536743164
    8. '
' → logprob: -19.000009536743164
    9. '                
' → logprob: -19.125009536743164
    10. '                    
' → logprob: -19.250009536743164

Token 732: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -3.128163257315464e-07
    2. ' visited' → logprob: -15.5
    3. 'add' → logprob: -16.375
    4. 'added' → logprob: -18.875
    5. 'Visited' → logprob: -19.375
    6. '   ' → logprob: -19.5
    7. '```' → logprob: -19.625
    8. '
' → logprob: -19.75
    9. '_' → logprob: -20.25
    10. 'vis' → logprob: -20.375

Token 733: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0003373694489710033
    2. '.' → logprob: -8.000337600708008
    3. 'add' → logprob: -13.500337600708008
    4. ' .' → logprob: -14.375337600708008
    5. ' =' → logprob: -18.375337600708008
    6. '.Add' → logprob: -19.125337600708008
    7. '.update' → logprob: -19.250337600708008
    8. '.append' → logprob: -19.250337600708008
    9. ' |=' → logprob: -19.375337600708008
    10. '_add' → logprob: -19.500337600708008

Token 734: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -1.9361264946837764e-07
    2. 'idx' → logprob: -15.75
    3. '[idx' → logprob: -18.25
    4. '(
' → logprob: -18.75
    5. '(index' → logprob: -19.125
    6. '(' → logprob: -19.125
    7. '	idx' → logprob: -20.25
    8. '(id' → logprob: -20.625
    9. '(i' → logprob: -20.875
    10. ' idx' → logprob: -21.875

Token 735: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005252018105238676
    2. ')
' → logprob: -5.505251884460449
    3. '               ' → logprob: -6.755251884460449
    4. '                   ' → logprob: -13.13025188446045
    5. ' )' → logprob: -13.25525188446045
    6. ')
' → logprob: -14.13025188446045
    7. '<|end|>' → logprob: -14.50525188446045
    8. '):
' → logprob: -14.63025188446045
    9. '                       ' → logprob: -15.13025188446045
    10. '           ' → logprob: -15.13025188446045

Token 736: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11584940552711487
    2. '                
' → logprob: -2.490849494934082
    3. '
' → logprob: -3.865849494934082
    4. '                    
' → logprob: -5.990849494934082
    5. '```' → logprob: -6.865849494934082
    6. 'new' → logprob: -7.115849494934082
    7. '                   ' → logprob: -8.365849494934082
    8. '  
' → logprob: -8.615849494934082
    9. '               
' → logprob: -8.740849494934082
    10. '                 
' → logprob: -8.865849494934082

Token 737: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.9478955268859863
    2. 'new' → logprob: -1.1978955268859863
    3. '               ' → logprob: -1.3228955268859863
    4. 'frag' → logprob: -3.4478955268859863
    5. '                
' → logprob: -5.572895526885986
    6. ' #' → logprob: -5.697895526885986
    7. ' new' → logprob: -5.822895526885986
    8. '```' → logprob: -6.697895526885986
    9. '``' → logprob: -8.322895050048828
    10. '
' → logprob: -8.572895050048828

Token 738: ' Calculate' (ID: 38942)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5142006874084473
    2. 'new' → logprob: -1.0142006874084473
    3. 'frag' → logprob: -3.5142006874084473
    4. '               ' → logprob: -4.889200687408447
    5. 'if' → logprob: -6.889200687408447
    6. ' #' → logprob: -8.889200210571289
    7. 'collapsed' → logprob: -8.889200210571289
    8. 'next' → logprob: -9.139200210571289
    9. '           ' → logprob: -9.264200210571289
    10. ' new' → logprob: -9.389200210571289

Token 739: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.08226829767227173
    2. '#' → logprob: -3.082268238067627
    3. 'collapsed' → logprob: -3.957268238067627
    4. 'frag' → logprob: -4.457268238067627
    5. ' new' → logprob: -6.207268238067627
    6. '           ' → logprob: -9.457268714904785
    7. '               ' → logprob: -10.082268714904785
    8. 'next' → logprob: -10.082268714904785
    9. '       ' → logprob: -10.457268714904785
    10. ' #' → logprob: -10.457268714904785

Token 740: ' fragile' (ID: 68256)
  Prédit: 'frag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frag' → logprob: -0.014232140965759754
    2. '_frag' → logprob: -4.764232158660889
    3. ' fragile' → logprob: -5.264232158660889
    4. '#' → logprob: -8.63923168182373
    5. ' frag' → logprob: -8.76423168182373
    6. 'fr' → logprob: -10.38923168182373
    7. 'collapsed' → logprob: -11.38923168182373
    8. '```' → logprob: -11.63923168182373
    9. '_' → logprob: -11.76423168182373
    10. ' #' → logprob: -12.01423168182373

Token 741: ' map' (ID: 4014)
  Prédit: '_map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0003529814421199262
    2. 'map' → logprob: -8.87535285949707
    3. '_floor' → logprob: -9.50035285949707
    4. '_positions' → logprob: -9.50035285949707
    5. 'floor' → logprob: -10.50035285949707
    6. 'positions' → logprob: -11.62535285949707
    7. '_' → logprob: -11.75035285949707
    8. '_set' → logprob: -12.12535285949707
    9. 'flo' → logprob: -12.50035285949707
    10. 'frag' → logprob: -13.75035285949707

Token 742: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009935164824128151
    2. '                
' → logprob: -4.75993537902832
    3. ',' → logprob: -7.88493537902832
    4. ' =' → logprob: -8.25993537902832
    5. 'new' → logprob: -8.75993537902832
    6. '
' → logprob: -9.13493537902832
    7. '```' → logprob: -9.38493537902832
    8. '                ' → logprob: -9.88493537902832
    9. 'frag' → logprob: -9.88493537902832
    10. '			' → logprob: -10.50993537902832

Token 743: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010545915924012661
    2. ' new' → logprob: -5.26054573059082
    3. 'new' → logprob: -5.38554573059082
    4. '                
' → logprob: -7.88554573059082
    5. 'frag' → logprob: -9.26054573059082
    6. '```' → logprob: -9.26054573059082
    7. '                   ' → logprob: -10.01054573059082
    8. '                ' → logprob: -10.38554573059082
    9. ' fragile' → logprob: -11.26054573059082
    10. ' if' → logprob: -12.01054573059082

Token 744: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.09258249402046204
    2. 'frag' → logprob: -3.0925824642181396
    3. ' new' → logprob: -3.5925824642181396
    4. '               ' → logprob: -4.217582702636719
    5. 'collapsed' → logprob: -8.592582702636719
    6. ' fragile' → logprob: -8.842582702636719
    7. '```' → logprob: -9.467582702636719
    8. '#' (adapté à ' #') → logprob: -9.467582702636719
    9. '                   ' → logprob: -9.842582702636719
    10. '   ' → logprob: -10.217582702636719

Token 745: ' If' (ID: 1843)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.10081913322210312
    2. '               ' → logprob: -2.8508191108703613
    3. 'frag' → logprob: -3.6008191108703613
    4. '#' → logprob: -5.350819110870361
    5. 'if' → logprob: -5.850819110870361
    6. ' new' → logprob: -5.975819110870361
    7. '   ' → logprob: -9.35081958770752
    8. 'next' → logprob: -9.60081958770752
    9. '```' → logprob: -9.60081958770752
    10. 'collapsed' → logprob: -9.72581958770752

Token 746: ' current' (ID: 2208)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.11360853910446167
    2. 'npos' → logprob: -2.2386085987091064
    3. ' state' → logprob: -8.113608360290527
    4. 'pos' → logprob: -8.113608360290527
    5. 'self' → logprob: -10.363608360290527
    6. 'np' → logprob: -10.613608360290527
    7. 'npc' → logprob: -10.613608360290527
    8. '   ' → logprob: -10.738608360290527
    9. 'n' → logprob: -11.113608360290527
    10. '(state' → logprob: -11.238608360290527

Token 747: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.6136676073074341
    2. '.position' → logprob: -1.363667607307434
    3. 'state' → logprob: -1.863667607307434
    4. 'pos' → logprob: -3.9886674880981445
    5. ' position' → logprob: -4.7386674880981445
    6. '(position' → logprob: -5.6136674880981445
    7. '.state' → logprob: -5.6136674880981445
    8. ' state' → logprob: -5.8636674880981445
    9. '_pos' → logprob: -6.4886674880981445
    10. '_frag' → logprob: -6.6136674880981445

Token 748: ' is' (ID: 382)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4325640797615051
    2. ' not' → logprob: -1.3075640201568604
    3. '!=' → logprob: -3.0575640201568604
    4. ' in' → logprob: -4.0575642585754395
    5. 'not' → logprob: -4.8075642585754395
    6. ' is' → logprob: -4.9325642585754395
    7. '()!=' → logprob: -8.057563781738281
    8. 'is' → logprob: -8.682563781738281
    9. ')!=' → logprob: -8.932563781738281
    10. ' ==' → logprob: -8.932563781738281

Token 749: ' not' (ID: 625)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.12186609953641891
    2. 'not' → logprob: -2.24686598777771
    3. ' not' → logprob: -5.621866226196289
    4. ' state' → logprob: -5.621866226196289
    5. 'npos' → logprob: -6.621866226196289
    6. 'self' → logprob: -8.871866226196289
    7. 'pos' → logprob: -9.246866226196289
    8. '!=' → logprob: -9.746866226196289
    9. 'neq' → logprob: -10.121866226196289
    10. '(state' → logprob: -10.496866226196289

Token 750: ' entrance' (ID: 27326)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006585848750546575
    2. ' self' → logprob: -7.3756585121154785
    3. '(self' → logprob: -11.000658988952637
    4. '=self' → logprob: -11.750658988952637
    5. '	self' → logprob: -14.000658988952637
    6. '0' → logprob: -14.250658988952637
    7. '           ' → logprob: -14.250658988952637
    8. 'the' → logprob: -14.375658988952637
    9. '(' → logprob: -14.500658988952637
    10. '       ' → logprob: -14.625658988952637

Token 751: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02942887507379055
    2. 'and' → logprob: -3.6544289588928223
    3. ',' → logprob: -6.279428958892822
    4. '               ' → logprob: -7.529428958892822
    5. '                   ' → logprob: -7.654428958892822
    6. ':' → logprob: -8.779428482055664
    7. ':
' → logprob: -9.904428482055664
    8. '                       ' → logprob: -11.529428482055664
    9. '           ' → logprob: -11.779428482055664
    10. ' or' → logprob: -12.404428482055664

Token 752: ' it' (ID: 480)
  Prédit: 'frag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frag' → logprob: -0.44412583112716675
    2. 'new' → logprob: -1.9441258907318115
    3. '                   ' → logprob: -2.1941258907318115
    4. ' new' → logprob: -3.1941258907318115
    5. ' fragile' → logprob: -3.4441258907318115
    6. '               ' → logprob: -3.6941258907318115
    7. '#' → logprob: -6.569125652313232
    8. 'if' → logprob: -6.944125652313232
    9. '                ' → logprob: -7.444125652313232
    10. ' if' → logprob: -7.569125652313232

Token 753: ' collaps' (ID: 87851)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9717832207679749
    2. ' not' → logprob: -1.47178316116333
    3. '               ' → logprob: -2.09678316116333
    4. '                   ' → logprob: -2.59678316116333
    5. 'not' → logprob: -2.97178316116333
    6. ' !=' → logprob: -3.34678316116333
    7. 'is' → logprob: -3.34678316116333
    8. ' should' → logprob: -4.72178316116333
    9. 'cannot' → logprob: -5.09678316116333
    10. ' has' → logprob: -5.34678316116333

Token 754: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -7.896309739408025e-07
    2. 'ed' → logprob: -14.375000953674316
    3. 'e' → logprob: -16.625
    4. 'ses' → logprob: -19.0
    5. '   ' → logprob: -19.125
    6. 's' → logprob: -19.5
    7. 'eses' → logprob: -19.75
    8. 'edes' → logprob: -20.25
    9. '```' → logprob: -20.75
    10. '#' → logprob: -21.125

Token 755: ' after' (ID: 1934)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009633887093514204
    2. ',' → logprob: -7.87596321105957
    3. '                   ' → logprob: -8.50096321105957
    4. ' if' → logprob: -8.50096321105957
    5. ' and' → logprob: -9.50096321105957
    6. 'if' → logprob: -9.87596321105957
    7. '                
' → logprob: -11.00096321105957
    8. ':' → logprob: -11.37596321105957
    9. '                ' → logprob: -12.25096321105957
    10. '           ' → logprob: -12.50096321105957

Token 756: ' leaving' (ID: 15021)
  Prédit: 'moving'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moving' → logprob: -0.10765401273965836
    2. 'le' → logprob: -3.232654094696045
    3. 'move' → logprob: -3.857654094696045
    4. 'the' → logprob: -4.232654094696045
    5. 'departure' → logprob: -4.857654094696045
    6. 'ste' → logprob: -5.107654094696045
    7. ' moving' → logprob: -5.732654094696045
    8. 'step' → logprob: -6.232654094696045
    9. 'movement' → logprob: -6.357654094696045
    10. ' leaving' → logprob: -6.607654094696045

Token 757: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00038837024476379156
    2. ' if' → logprob: -8.750388145446777
    3. ',' → logprob: -9.125388145446777
    4. 'if' → logprob: -9.250388145446777
    5. '                
' → logprob: -11.125388145446777
    6. ' (' → logprob: -13.250388145446777
    7. '			' → logprob: -13.625388145446777
    8. ' and' → logprob: -13.750388145446777
    9. '                   ' → logprob: -13.875388145446777
    10. '.' → logprob: -14.125388145446777

Token 758: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004622472042683512
    2. '                   ' → logprob: -8.375462532043457
    3. '                
' → logprob: -9.250462532043457
    4. ' if' → logprob: -9.875462532043457
    5. '           ' → logprob: -10.000462532043457
    6. 'if' → logprob: -11.625462532043457
    7. '
' → logprob: -11.625462532043457
    8. ',' → logprob: -12.625462532043457
    9. '```' → logprob: -12.750462532043457
    10. '                    
' → logprob: -12.875462532043457

Token 759: ' new' (ID: 620)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019075737800449133
    2. ' if' → logprob: -7.1269073486328125
    3. 'if' → logprob: -7.6269073486328125
    4. '                
' → logprob: -7.6269073486328125
    5. '           ' → logprob: -10.501907348632812
    6. 'new' (adapté à ' new') → logprob: -10.876907348632812
    7. '                   ' → logprob: -11.001907348632812
    8. '                ' → logprob: -11.251907348632812
    9. 'frag' → logprob: -11.251907348632812
    10. '```' → logprob: -11.751907348632812

Token 760: '_frag' (ID: 154555)
  Prédit: '_frag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_frag' → logprob: -0.0031995740719139576
    2. 'frag' → logprob: -5.753199577331543
    3. '_fr' → logprob: -11.128199577331543
    4. '_pos' → logprob: -12.753199577331543
    5. '_fragment' → logprob: -12.878199577331543
    6. 'Frag' → logprob: -14.503199577331543
    7. '_' → logprob: -14.628199577331543
    8. '_f' → logprob: -16.003198623657227
    9. '_frac' → logprob: -16.128198623657227
    10. ' fragile' → logprob: -16.128198623657227

Token 761: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -4.656383680412546e-05
    2. 'tile' → logprob: -10.125046730041504
    3. 'r' → logprob: -12.750046730041504
    4. ' fragile' → logprob: -14.000046730041504
    5. '   ' → logprob: -15.000046730041504
    6. '```' → logprob: -15.125046730041504
    7. '_' → logprob: -15.375046730041504
    8. '       ' → logprob: -15.500046730041504
    9. '               ' → logprob: -15.500046730041504
    10. 'frag' → logprob: -15.625046730041504

Token 762: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -3.8889261304575484e-06
    2. 'map' → logprob: -13.250003814697266
    3. '_' → logprob: -13.500003814697266
    4. 'Map' → logprob: -16.125003814697266
    5. '=_' → logprob: -16.125003814697266
    6. '_set' → logprob: -16.375003814697266
    7. ' =' → logprob: -16.375003814697266
    8. '=' → logprob: -17.000003814697266
    9. ' _' → logprob: -17.375003814697266
    10. '_pos' → logprob: -17.875003814697266

Token 763: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519300878047943
    2. '=' → logprob: -1.5019301176071167
    3. '=set' → logprob: -13.876930236816406
    4. '＝' → logprob: -18.126930236816406
    5. ',' → logprob: -18.251930236816406
    6. ' ' → logprob: -19.126930236816406
    7. '=
' → logprob: -19.251930236816406
    8. ')' → logprob: -19.376930236816406
    9. ' =
' → logprob: -19.501930236816406
    10. ':' → logprob: -19.751930236816406

Token 764: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.1090736836194992
    2. ' set' → logprob: -2.8590736389160156
    3. 'state' → logprob: -3.1090736389160156
    4. ' state' → logprob: -6.609073638916016
    5. '   ' → logprob: -10.984073638916016
    6. '       ' → logprob: -12.984073638916016
    7. '(set' → logprob: -14.359073638916016
    8. '  ' → logprob: -14.484073638916016
    9. ' ' → logprob: -14.734073638916016
    10. '{' → logprob: -14.734073638916016

Token 765: '(state' (ID: 16114)
  Prédit: '(state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -0.003178071230649948
    2. 'state' → logprob: -5.753178119659424
    3. ' state' → logprob: -16.378177642822266
    4. '(' → logprob: -16.628177642822266
    5. '   ' → logprob: -16.753177642822266
    6. '[state' → logprob: -17.128177642822266
    7. '(
' → logprob: -17.753177642822266
    8. '	state' → logprob: -17.753177642822266
    9. '       ' → logprob: -18.128177642822266
    10. ',state' → logprob: -18.503177642822266

Token 766: '.fr' (ID: 11435)
  Prédit: '.fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fr' → logprob: -1.2233183042553719e-05
    2. '.fragments' → logprob: -13.000012397766113
    3. 'Frag' → logprob: -13.250012397766113
    4. '.fragment' → logprob: -13.250012397766113
    5. 'frag' → logprob: -13.375012397766113
    6. '.' → logprob: -13.500012397766113
    7. ' .' → logprob: -14.000012397766113
    8. '.fre' → logprob: -14.000012397766113
    9. '.f' → logprob: -14.625012397766113
    10. ' fragile' → logprob: -15.125012397766113

Token 767: 'ag' (ID: 348)
  Prédit: 'ag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ag' → logprob: -2.2603901015827432e-05
    2. 'agle' → logprob: -11.625022888183594
    3. 'frag' → logprob: -12.625022888183594
    4. ' fragile' → logprob: -12.625022888183594
    5. 'angible' → logprob: -13.000022888183594
    6. 'aggable' → logprob: -13.875022888183594
    7. 'il' → logprob: -14.125022888183594
    8. 'act' → logprob: -14.250022888183594
    9. 'age' → logprob: -15.000022888183594
    10. 'able' → logprob: -15.500022888183594

Token 768: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -0.00037502311170101166
    2. 'tile' → logprob: -8.375374794006348
    3. 'ible' → logprob: -9.500374794006348
    4. '_' → logprob: -11.875374794006348
    5. 'frag' → logprob: -11.875374794006348
    6. '_map' → logprob: -12.125374794006348
    7. '
' → logprob: -12.500374794006348
    8. '...' → logprob: -12.500374794006348
    9. 'r' → logprob: -12.875374794006348
    10. '[' → logprob: -12.875374794006348

Token 769: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -1.0445127372804563e-05
    2. 'map' → logprob: -12.12501049041748
    3. '.fr' → logprob: -13.50001049041748
    4. 'frag' → logprob: -13.62501049041748
    5. 'Map' → logprob: -14.00001049041748
    6. '_frag' → logprob: -14.62501049041748
    7. '.map' → logprob: -15.37501049041748
    8. 'state' → logprob: -15.50001049041748
    9. '.state' → logprob: -16.000009536743164
    10. '.position' → logprob: -16.250009536743164

Token 770: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.023470595479011536
    2. ')' → logprob: -3.773470640182495
    3. '(state' → logprob: -9.023470878601074
    4. ')
' → logprob: -10.523470878601074
    5. '               ' → logprob: -10.648470878601074
    6. 'state' → logprob: -10.898470878601074
    7. '       ' → logprob: -11.148470878601074
    8. ')

' → logprob: -12.023470878601074
    9. ',state' → logprob: -12.148470878601074
    10. '   ' → logprob: -12.648470878601074

Token 771: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012522367760539055
    2. 'if' → logprob: -4.512522220611572
    3. ' if' → logprob: -7.012522220611572
    4. 'new' → logprob: -7.637522220611572
    5. '                   ' → logprob: -10.01252269744873
    6. '```' → logprob: -11.01252269744873
    7. '                
' → logprob: -11.63752269744873
    8. '           ' → logprob: -11.88752269744873
    9. '
' → logprob: -12.13752269744873
    10. ' new' → logprob: -13.13752269744873

Token 772: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00037085101939737797
    2. '               ' → logprob: -8.000370979309082
    3. ' if' → logprob: -10.250370979309082
    4. '```' → logprob: -16.875370025634766
    5. 'new' → logprob: -17.500370025634766
    6. '	if' → logprob: -18.875370025634766
    7. '                
' → logprob: -18.875370025634766
    8. '       ' → logprob: -19.000370025634766
    9. '           ' → logprob: -19.875370025634766
    10. '   ' → logprob: -20.625370025634766

Token 773: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.011063147336244583
    2. ' state' → logprob: -4.511063098907471
    3. '               ' → logprob: -11.511063575744629
    4. '                   ' → logprob: -12.511063575744629
    5. '           ' → logprob: -14.511063575744629
    6. '(state' → logprob: -15.261063575744629
    7. 'self' → logprob: -15.386063575744629
    8. '   ' → logprob: -16.011062622070312
    9. '	state' → logprob: -16.011062622070312
    10. ' ' → logprob: -16.386062622070312

Token 774: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -5.717296517104842e-05
    2. '.' → logprob: -9.875057220458984
    3. 'position' → logprob: -12.625057220458984
    4. '[position' → logprob: -13.375057220458984
    5. ' .' → logprob: -14.625057220458984
    6. '.location' → logprob: -16.125057220458984
    7. '.status' → logprob: -17.375057220458984
    8. '	position' → logprob: -17.625057220458984
    9. ').' → logprob: -17.875057220458984
    10. '.positions' → logprob: -17.875057220458984

Token 775: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.2823697030544281
    2. ' !=' → logprob: -1.4073697328567505
    3. ')!=' → logprob: -7.157369613647461
    4. '!=(' → logprob: -8.907369613647461
    5. '()!=' → logprob: -9.157369613647461
    6. ' not' → logprob: -9.532369613647461
    7. 'not' → logprob: -9.907369613647461
    8. ')' → logprob: -10.157369613647461
    9. '!='' → logprob: -11.282369613647461
    10. ']!=' → logprob: -11.407369613647461

Token 776: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002490522339940071
    2. ' self' → logprob: -6.002490520477295
    3. '(self' → logprob: -11.127490997314453
    4. '(' → logprob: -16.752490997314453
    5. '	self' → logprob: -17.127490997314453
    6. '=self' → logprob: -18.752490997314453
    7. ' ' → logprob: -19.377490997314453
    8. '
' → logprob: -19.502490997314453
    9. '   ' → logprob: -19.627490997314453
    10. ' (' → logprob: -19.627490997314453

Token 777: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0004895264864899218
    2. 'entr' → logprob: -7.625489711761475
    3. '.ent' → logprob: -14.875489234924316
    4. 'self' → logprob: -15.000489234924316
    5. ' .' → logprob: -15.875489234924316
    6. 'Entrance' → logprob: -16.125490188598633
    7. '.enter' → logprob: -16.250490188598633
    8. '#' → logprob: -16.875490188598633
    9. 'ent' → logprob: -17.000490188598633
    10. ' entrance' → logprob: -17.000490188598633

Token 778: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -1.6240566083070007e-06
    2. ' entrance' → logprob: -13.500001907348633
    3. 'Entrance' → logprob: -15.875001907348633
    4. 'entrée' → logprob: -16.750001907348633
    5. 'ent' → logprob: -16.875001907348633
    6. 'entrant' → logprob: -17.500001907348633
    7. 'enter' → logprob: -18.875001907348633
    8. '_' → logprob: -19.625001907348633
    9. 'entrada' → logprob: -19.625001907348633
    10. '
' → logprob: -20.125001907348633

Token 779: 'ance' (ID: 766)
  Prédit: 'ance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.001117234816774726
    2. 'ace' → logprob: -7.62611722946167
    3. 'tr' → logprob: -8.376117706298828
    4. 'rance' → logprob: -8.626117706298828
    5. 'ce' → logprob: -9.251117706298828
    6. 't' → logprob: -10.376117706298828
    7. 'dance' → logprob: -11.251117706298828
    8. '
' → logprob: -11.251117706298828
    9. '   ' → logprob: -11.751117706298828
    10. 'race' → logprob: -11.876117706298828

Token 780: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2051837146282196
    2. ':' → logprob: -2.080183744430542
    3. ' and' → logprob: -3.080183744430542
    4. '):
' → logprob: -4.705183506011963
    5. '                   ' → logprob: -6.580183506011963
    6. '           ' → logprob: -7.080183506011963
    7. '                       ' → logprob: -7.330183506011963
    8. 'and' → logprob: -7.330183506011963
    9. '               ' → logprob: -7.830183506011963
    10. '                           ' → logprob: -7.830183506011963

Token 781: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003494231030344963
    2. 'new' → logprob: -5.8784942626953125
    3. ' new' → logprob: -7.3784942626953125
    4. '   ' → logprob: -10.878494262695312
    5. '               ' → logprob: -10.878494262695312
    6. '           ' → logprob: -11.628494262695312
    7. '
' → logprob: -12.253494262695312
    8. '                       ' → logprob: -12.503494262695312
    9. '```' → logprob: -12.878494262695312
    10. '                  ' → logprob: -13.128494262695312

Token 782: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.023515429347753525
    2. ' new' → logprob: -3.773515462875366
    3. '                   ' → logprob: -8.273515701293945
    4. '                       ' → logprob: -11.398515701293945
    5. '   ' → logprob: -13.398515701293945
    6. '               ' → logprob: -14.523515701293945
    7. ' ' → logprob: -14.523515701293945
    8. '	new' → logprob: -15.148515701293945
    9. '  ' → logprob: -15.773515701293945
    10. '       ' → logprob: -16.273515701293945

Token 783: '_frag' (ID: 154555)
  Prédit: '_frag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_frag' → logprob: -0.00010950337309623137
    2. 'frag' → logprob: -9.125109672546387
    3. '_' → logprob: -15.125109672546387
    4. '_fr' → logprob: -16.25010871887207
    5. ' fragile' → logprob: -17.00010871887207
    6. '_fragment' → logprob: -17.12510871887207
    7. 'Frag' → logprob: -18.00010871887207
    8. '_pos' → logprob: -18.25010871887207
    9. '_f' → logprob: -18.37510871887207
    10. ' Frag' → logprob: -18.62510871887207

Token 784: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -4.1080467781284824e-05
    2. 'tile' → logprob: -10.375041007995605
    3. 'ible' → logprob: -13.000041007995605
    4. 'frag' → logprob: -13.125041007995605
    5. '_' → logprob: -13.625041007995605
    6. 'il' → logprob: -14.625041007995605
    7. '```' → logprob: -15.375041007995605
    8. 'atile' → logprob: -15.375041007995605
    9. 'r' → logprob: -15.500041007995605
    10. 'e' → logprob: -15.500041007995605

Token 785: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -8.061054359131958e-06
    2. 'map' → logprob: -11.750007629394531
    3. 'Map' → logprob: -16.87500762939453
    4. '_set' → logprob: -17.75000762939453
    5. '_maps' → logprob: -19.37500762939453
    6. '_MAP' → logprob: -19.50000762939453
    7. 'pos' → logprob: -19.87500762939453
    8. 'm' → logprob: -19.87500762939453
    9. ' map' → logprob: -19.87500762939453
    10. '{' → logprob: -20.00000762939453

Token 786: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -4.7994282795116305e-05
    2. '.' → logprob: -10.00004768371582
    3. ' .' → logprob: -13.62504768371582
    4. 'add' → logprob: -14.37504768371582
    5. '                   ' → logprob: -14.37504768371582
    6. '.Add' → logprob: -16.62504768371582
    7. ')add' → logprob: -17.62504768371582
    8. '.setdefault' → logprob: -17.87504768371582
    9. ').' → logprob: -18.12504768371582
    10. '.append' → logprob: -18.37504768371582

Token 787: '(state' (ID: 16114)
  Prédit: '(state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -2.176947600673884e-05
    2. 'state' → logprob: -10.750021934509277
    3. '(' → logprob: -15.500021934509277
    4. '(
' → logprob: -17.62502098083496
    5. ' state' → logprob: -18.37502098083496
    6. '((' → logprob: -18.62502098083496
    7. '[state' → logprob: -19.25002098083496
    8. ' (' → logprob: -19.50002098083496
    9. ',state' → logprob: -19.50002098083496
    10. '(st' → logprob: -19.50002098083496

Token 788: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -4.60414821645827e-06
    2. '.' → logprob: -12.750004768371582
    3. 'position' → logprob: -13.500004768371582
    4. '.state' → logprob: -16.250003814697266
    5. ' .' → logprob: -16.750003814697266
    6. '[position' → logprob: -17.125003814697266
    7. '.pos' → logprob: -17.250003814697266
    8. ').' → logprob: -18.000003814697266
    9. '(position' → logprob: -18.500003814697266
    10. '	position' → logprob: -19.625003814697266

Token 789: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006442877347581089
    2. '               ' → logprob: -7.875644207000732
    3. ')
' → logprob: -8.25064468383789
    4. ')
' → logprob: -13.37564468383789
    5. ' )' → logprob: -14.37564468383789
    6. '                   ' → logprob: -15.62564468383789
    7. '           ' → logprob: -15.87564468383789
    8. ')`' → logprob: -16.25064468383789
    9. '`)' → logprob: -16.62564468383789
    10. ')return' → logprob: -16.75064468383789

Token 790: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011092590866610408
    2. '                
' → logprob: -6.8761091232299805
    3. '                   ' → logprob: -10.87610912322998
    4. '
' → logprob: -11.50110912322998
    5. '                ' → logprob: -11.50110912322998
    6. '<|end|>' → logprob: -11.50110912322998
    7. '                    
' → logprob: -11.87610912322998
    8. 'new' → logprob: -12.50110912322998
    9. ' new' → logprob: -13.00110912322998
    10. '           ' → logprob: -13.00110912322998

Token 791: ' results' (ID: 4376)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01412906777113676
    2. 'results' (adapté à ' results') → logprob: -5.264129161834717
    3. ' results' → logprob: -5.389129161834717
    4. 'new' → logprob: -6.389129161834717
    5. '                
' → logprob: -6.764129161834717
    6. '
' → logprob: -7.139129161834717
    7. ' new' → logprob: -7.639129161834717
    8. 'state' → logprob: -9.514128684997559
    9. ' state' → logprob: -10.514128684997559
    10. 'token' → logprob: -11.139128684997559

Token 792: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.048635851591825485
    2. '.' → logprob: -3.048635959625244
    3. '.ap' → logprob: -10.673635482788086
    4. '.app' → logprob: -11.423635482788086
    5. '.extend' → logprob: -11.423635482788086
    6. ' .' → logprob: -13.173635482788086
    7. ').' → logprob: -13.923635482788086
    8. '.Append' → logprob: -15.673635482788086
    9. 'append' → logprob: -15.923635482788086
    10. '.push' → logprob: -16.048635482788086

Token 793: '(Path' (ID: 66508)
  Prédit: '(Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Path' → logprob: -4.394135612528771e-05
    2. '(
' → logprob: -10.625043869018555
    3. '(' → logprob: -11.250043869018555
    4. 'Path' → logprob: -12.250043869018555
    5. ' Path' → logprob: -13.500043869018555
    6. '	Path' → logprob: -15.750043869018555
    7. ' (' → logprob: -16.750043869018555
    8. '   ' → logprob: -16.750043869018555
    9. '(path' → logprob: -17.125043869018555
    10. '(Paths' → logprob: -17.375043869018555

Token 794: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -1.9361264946837764e-07
    2. 'States' → logprob: -15.75
    3. 'state' → logprob: -20.125
    4. '_state' → logprob: -20.375
    5. '	State' → logprob: -20.75
    6. '_State' → logprob: -20.875
    7. '_STATE' → logprob: -21.25
    8. 'Stat' → logprob: -21.25
    9. '<State' → logprob: -21.25
    10. '[' → logprob: -21.75

Token 795: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00015598179015796632
    2. '(' → logprob: -9.25015640258789
    3. '(
' → logprob: -9.75015640258789
    4. ' (' → logprob: -13.87515640258789
    5. '((' → logprob: -14.87515640258789
    6. 'n' → logprob: -16.25015640258789
    7. '   ' → logprob: -16.62515640258789
    8. 'npos' → logprob: -17.12515640258789
    9. '(

' → logprob: -17.62515640258789
    10. '(
' → logprob: -17.75015640258789

Token 796: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00012237003829795867
    2. '(pos' → logprob: -9.5001220703125
    3. '(n' → logprob: -10.1251220703125
    4. 'position' → logprob: -13.1251220703125
    5. 'npos' → logprob: -13.2501220703125
    6. 'os' → logprob: -13.8751220703125
    7. '[pos' → logprob: -14.0001220703125
    8. 'pose' → logprob: -15.0001220703125
    9. '_pos' → logprob: -15.2501220703125
    10. 'op' → logprob: -16.0001220703125

Token 797: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014418430509977043
    2. ',
' → logprob: -9.750144004821777
    3. '               ' → logprob: -10.125144004821777
    4. ' ,' → logprob: -10.375144004821777
    5. '                   ' → logprob: -12.625144004821777
    6. '                ' → logprob: -13.500144004821777
    7. ',
' → logprob: -13.500144004821777
    8. '              ' → logprob: -13.875144004821777
    9. ',{
' → logprob: -13.875144004821777
    10. ',set' → logprob: -14.000144004821777

Token 798: ' treasures' (ID: 82685)
  Prédit: 'tre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.01423238031566143
    2. ' treasures' → logprob: -4.389232158660889
    3. 'fro' → logprob: -6.764232158660889
    4. '   ' → logprob: -8.889232635498047
    5. '       ' → logprob: -9.889232635498047
    6. '               ' → logprob: -9.889232635498047
    7. '           ' → logprob: -10.014232635498047
    8. 'Treas' → logprob: -10.514232635498047
    9. 't' → logprob: -10.889232635498047
    10. ' fro' → logprob: -11.014232635498047

Token 799: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1756367712223437e-05
    2. 'visited' → logprob: -11.375011444091797
    3. '   ' → logprob: -17.125011444091797
    4. 't' → logprob: -17.250011444091797
    5. '{' → logprob: -17.250011444091797
    6. '[' → logprob: -17.375011444091797
    7. '       ' → logprob: -17.625011444091797
    8. 'Visited' → logprob: -17.875011444091797
    9. '```' → logprob: -18.125011444091797
    10. ')' → logprob: -18.250011444091797

Token 800: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.000284696085145697
    2. '_' → logprob: -8.750285148620605
    3. 'vis' → logprob: -9.875285148620605
    4. 'is' → logprob: -11.375285148620605
    5. 'set' → logprob: -11.750285148620605
    6. 's' → logprob: -12.000285148620605
    7. 'isted' → logprob: -12.250285148620605
    8. ' visited' → logprob: -12.375285148620605
    9. '{' → logprob: -12.500285148620605
    10. 'Visited' → logprob: -12.625285148620605

Token 801: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003884894831571728
    2. ',new' → logprob: -7.8753886222839355
    3. ',
' → logprob: -12.000388145446777
    4. ' ,' → logprob: -13.250388145446777
    5. 'new' → logprob: -15.250388145446777
    6. ',

' → logprob: -16.750389099121094
    7. ',
' → logprob: -17.125389099121094
    8. ')' → logprob: -17.625389099121094
    9. ',n' → logprob: -17.875389099121094
    10. '‌,' → logprob: -18.000389099121094

Token 802: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.10020806640386581
    2. ' new' → logprob: -2.350208044052124
    3. '               ' → logprob: -14.725208282470703
    4. '                   ' → logprob: -14.975208282470703
    5. '	new' → logprob: -15.975208282470703
    6. '                ' → logprob: -16.475208282470703
    7. '              ' → logprob: -16.975208282470703
    8. '                       ' → logprob: -16.975208282470703
    9. '                  ' → logprob: -17.100208282470703
    10. '                    ' → logprob: -17.100208282470703

Token 803: '_frag' (ID: 154555)
  Prédit: '_frag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_frag' → logprob: -1.3425219549390022e-05
    2. 'frag' → logprob: -11.25001335144043
    3. '_fr' → logprob: -15.12501335144043
    4. '\' → logprob: -17.37501335144043
    5. '_f' → logprob: -17.87501335144043
    6. '{' → logprob: -17.87501335144043
    7. '_frac' → logprob: -18.00001335144043
    8. '_fac' → logprob: -18.37501335144043
    9. '``' → logprob: -18.37501335144043
    10. 'Frag' → logprob: -18.37501335144043

Token 804: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -8.061054359131958e-06
    2. 'tile' → logprob: -12.000007629394531
    3. '_' → logprob: -14.750007629394531
    4. '[' → logprob: -15.625007629394531
    5. '
' → logprob: -15.750007629394531
    6. 'atile' → logprob: -15.875007629394531
    7. 'frag' → logprob: -16.00000762939453
    8. 'le' → logprob: -16.25000762939453
    9. '_map' → logprob: -16.37500762939453
    10. 'able' → logprob: -16.50000762939453

Token 805: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0009802898857742548
    2. 'map' → logprob: -7.000980377197266
    3. 'ap' → logprob: -9.625980377197266
    4. 'Map' → logprob: -14.125980377197266
    5. 'p' → logprob: -14.250980377197266
    6. 'aps' → logprob: -15.500980377197266
    7. 'm' → logprob: -15.500980377197266
    8. 'emap' → logprob: -15.625980377197266
    9. 'frag' → logprob: -15.625980377197266
    10. ')' → logprob: -16.625980377197266

Token 806: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.08030916005373001
    2. ')' → logprob: -2.5803091526031494
    3. '))
' → logprob: -6.8303093910217285
    4. '       ' → logprob: -8.08030891418457
    5. ')
' → logprob: -10.83030891418457
    6. '   ' → logprob: -12.83030891418457
    7. '           ' → logprob: -12.83030891418457
    8. '               ' → logprob: -13.83030891418457
    9. ')))' → logprob: -13.95530891418457
    10. ' ))' → logprob: -14.45530891418457

Token 807: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005713104270398617
    2. '	' → logprob: -5.630712985992432
    3. 'return' → logprob: -7.255712985992432
    4. '	return' → logprob: -7.255712985992432
    5. '
' → logprob: -8.25571346282959
    6. '        
' → logprob: -9.00571346282959
    7. '		
' → logprob: -9.13071346282959
    8. ' return' → logprob: -9.50571346282959
    9. '   ' → logprob: -9.88071346282959
    10. '```' → logprob: -10.63071346282959

Token 808: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027653291821479797
    2. 'return' (adapté à ' return') → logprob: -3.652653217315674
    3. ' return' → logprob: -7.277653217315674
    4. '
' → logprob: -7.527653217315674
    5. '	return' → logprob: -10.027653694152832
    6. '   ' → logprob: -10.152653694152832
    7. '        
' → logprob: -10.902653694152832
    8. '	' → logprob: -11.527653694152832
    9. '
' → logprob: -13.277653694152832
    10. 'eturn' → logprob: -13.527653694152832

Token 809: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0009114635176956654
    2. ' results' → logprob: -7.000911235809326
    3. '	results' → logprob: -19.750911712646484
    4. '(results' → logprob: -20.125911712646484
    5. '.results' → logprob: -22.125911712646484
    6. '[' → logprob: -22.625911712646484
    7. 'result' → logprob: -22.625911712646484
    8. '_results' → logprob: -23.750911712646484
    9. 'Results' → logprob: -23.875911712646484
    10. '[]' → logprob: -24.750911712646484

Token 810: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.34936630725860596
    2. 'def' → logprob: -1.349366307258606
    3. '<|end|>' → logprob: -4.224366188049316
    4. '   ' → logprob: -4.474366188049316
    5. 'class' → logprob: -5.224366188049316
    6. '
' → logprob: -6.474366188049316
    7. '<|end|>' → logprob: -6.474366188049316
    8. '```' → logprob: -7.599366188049316
    9. '    
' → logprob: -8.224366188049316
    10. 'from' → logprob: -9.849366188049316

Token 811: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12748539447784424
    2. 'def' → logprob: -2.1274852752685547
    3. 'class' → logprob: -8.002485275268555
    4. '```' → logprob: -8.877485275268555
    5. 'from' → logprob: -9.752485275268555
    6. '   ' → logprob: -11.502485275268555
    7. '
' → logprob: -12.252485275268555
    8. '<|end|>' → logprob: -12.752485275268555
    9. 'import' → logprob: -13.252485275268555
    10. '<|end|>' → logprob: -13.377485275268555

Token 812: ' A' (ID: 355)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09823562949895859
    2. 'class' → logprob: -2.598235607147217
    3. '#' → logprob: -4.223235607147217
    4. 'from' → logprob: -5.473235607147217
    5. 'import' → logprob: -8.098236083984375
    6. '```' → logprob: -12.723236083984375
    7. ' def' → logprob: -13.598236083984375
    8. ' class' → logprob: -14.223236083984375
    9. 'The' → logprob: -14.973236083984375
    10. '#!/' → logprob: -15.473236083984375

Token 813: ' generic' (ID: 21081)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5376271605491638
    2. 'from' → logprob: -1.7876272201538086
    3. '#' → logprob: -2.2876272201538086
    4. '*' → logprob: -3.1626272201538086
    5. 'def' → logprob: -3.1626272201538086
    6. 'Star' → logprob: -3.6626272201538086
    7. 'star' → logprob: -4.662627220153809
    8. 'b' → logprob: -5.162627220153809
    9. ' class' → logprob: -5.412627220153809
    10. 'd' → logprob: -6.162627220153809

Token 814: ' graph' (ID: 7465)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.3330094814300537
    2. 'from' → logprob: -2.0830094814300537
    3. 'Solver' → logprob: -2.9580094814300537
    4. 'B' → logprob: -3.7080094814300537
    5. ' BFS' → logprob: -3.8330094814300537
    6. 'Bread' → logprob: -3.9580094814300537
    7. ' class' → logprob: -4.208009719848633
    8. 'deque' → logprob: -5.333009719848633
    9. '#' → logprob: -5.458009719848633
    10. 'Search' → logprob: -5.958009719848633

Token 815: ' search' (ID: 3684)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.16962940990924835
    2. 'search' → logprob: -2.0446293354034424
    3. 'solver' → logprob: -4.1696295738220215
    4. '#' → logprob: -6.2946295738220215
    5. 'Traversal' → logprob: -6.4196295738220215
    6. 'walker' → logprob: -6.9196295738220215
    7. 'Solver' → logprob: -7.0446295738220215
    8. 'Node' → logprob: -7.1696295738220215
    9. '_search' → logprob: -7.2946295738220215
    10. 'Search' → logprob: -7.2946295738220215

Token 816: ' interface' (ID: 6225)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0008837147615849972
    2. ' class' → logprob: -7.75088357925415
    3. 'def' → logprob: -8.250884056091309
    4. '
' → logprob: -8.750884056091309
    5. '#' → logprob: -11.000884056091309
    6. 'from' → logprob: -11.500884056091309
    7. 'search' → logprob: -13.625884056091309
    8. ':
' → logprob: -14.000884056091309
    9. '(class' → logprob: -14.000884056091309
    10. 'algorithm' → logprob: -14.500884056091309

Token 817: ' to' (ID: 316)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -2.5776860184123507e-06
    2. '
' → logprob: -13.37500286102295
    3. 'from' → logprob: -14.62500286102295
    4. ' class' → logprob: -14.62500286102295
    5. '<class' → logprob: -17.750001907348633
    6. '"class' → logprob: -19.000001907348633
    7. '```' → logprob: -19.750001907348633
    8. 'import' → logprob: -20.000001907348633
    9. 'clas' → logprob: -20.250001907348633
    10. '-class' → logprob: -20.625001907348633

Token 818: ' solve' (ID: 17722)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.2110152393579483
    2. 'solve' → logprob: -1.836015224456787
    3. 'class' → logprob: -4.211015224456787
    4. 'be' → logprob: -5.461015224456787
    5. 'perform' → logprob: -5.711015224456787
    6. '#' → logprob: -6.086015224456787
    7. 'expl' → logprob: -6.336015224456787
    8. 'search' → logprob: -6.836015224456787
    9. 'implement' → logprob: -7.211015224456787
    10. ' find' → logprob: -7.461015224456787

Token 819: ' the' (ID: 290)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -2.618001053633634e-05
    2. ' class' → logprob: -11.500025749206543
    3. '
' → logprob: -11.625025749206543
    4. 'from' → logprob: -12.250025749206543
    5. '<class' → logprob: -13.500025749206543
    6. 'the' → logprob: -15.250025749206543
    7. '#' → logprob: -15.750025749206543
    8. '<|end|>' → logprob: -15.750025749206543
    9. '"class' → logprob: -15.875025749206543
    10. 'def' → logprob: -16.50002670288086

Token 820: ' labyrinth' (ID: 184257)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.4524633288383484
    2. 'Frag' → logprob: -1.9524633884429932
    3. 'Lab' → logprob: -2.202463388442993
    4. 'lab' → logprob: -2.952463388442993
    5. 'class' → logprob: -4.327463150024414
    6. ' problem' → logprob: -4.577463150024414
    7. '#' → logprob: -4.827463150024414
    8. 'frag' → logprob: -4.952463150024414
    9. 'solver' → logprob: -5.452463150024414
    10. ' Frag' → logprob: -5.952463150024414

Token 821: ' challenge' (ID: 12160)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -9.088346359931165e-07
    2. '
' → logprob: -14.250000953674316
    3. ' class' → logprob: -15.250000953674316
    4. 'from' → logprob: -19.75
    5. '"class' → logprob: -19.875
    6. '<class' → logprob: -19.875
    7. '-class' → logprob: -21.375
    8. '```' → logprob: -21.625
    9. 'clas' → logprob: -22.5
    10. ',class' → logprob: -23.125

Token 822: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -3.173704271830502e-06
    2. '
' → logprob: -12.75000286102295
    3. ' class' → logprob: -15.62500286102295
    4. '<class' → logprob: -19.625003814697266
    5. '"class' → logprob: -20.000003814697266
    6. 'from' → logprob: -20.000003814697266
    7. 'def' → logprob: -20.375003814697266
    8. '```' → logprob: -20.625003814697266
    9. 'clas' → logprob: -20.875003814697266
    10. 'c' → logprob: -21.750003814697266

Token 823: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -5.512236498361744e-07
    2. 'from' → logprob: -14.875000953674316
    3. ' class' → logprob: -16.625
    4. 'def' → logprob: -19.25
    5. '
' → logprob: -20.0
    6. '<class' → logprob: -20.125
    7. '```' → logprob: -20.75
    8. '"class' → logprob: -21.75
    9. 'clas' → logprob: -22.125
    10. 'import' → logprob: -22.75

Token 824: ' Lab' (ID: 19557)
  Prédit: 'Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -0.5857029557228088
    2. 'Lab' → logprob: -0.8357029557228088
    3. ' Solver' → logprob: -5.835702896118164
    4. 'Solution' → logprob: -6.210702896118164
    5. 'T' → logprob: -6.960702896118164
    6. 'Bread' → logprob: -7.085702896118164
    7. ' Lab' → logprob: -7.210702896118164
    8. 'Path' → logprob: -7.585702896118164
    9. 'Frag' → logprob: -7.835702896118164
    10. 'Tre' → logprob: -7.835702896118164

Token 825: 'yrinth' (ID: 113153)
  Prédit: 'yrinth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yrinth' → logprob: -7.703443770878948e-06
    2. 'yr' → logprob: -12.125007629394531
    3. 'ir' → logprob: -13.625007629394531
    4. 'y' → logprob: -14.625007629394531
    5. 'ynth' → logprob: -16.12500762939453
    6. '_search' → logprob: -16.75000762939453
    7. 'path' → logprob: -16.75000762939453
    8. '_path' → logprob: -17.12500762939453
    9. '```' → logprob: -17.25000762939453
    10. 'search' → logprob: -17.25000762939453

Token 826: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -7.822646693966817e-06
    2. 'Searcher' → logprob: -13.250007629394531
    3. 'Search' → logprob: -13.500007629394531
    4. '
' → logprob: -13.875007629394531
    5. 'Runner' → logprob: -14.000007629394531
    6. 'Explorer' → logprob: -14.125007629394531
    7. 'solver' → logprob: -14.500007629394531
    8. ' Solver' → logprob: -14.875007629394531
    9. '_solver' → logprob: -14.875007629394531
    10. 'Solution' → logprob: -15.000007629394531

Token 827: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06211008131504059
    2. ':
' → logprob: -2.812110185623169
    3. '):' → logprob: -9.68710994720459
    4. '(' → logprob: -10.43710994720459
    5. '):
' → logprob: -10.93710994720459
    6. '(L' → logprob: -11.93710994720459
    7. ' :' → logprob: -12.31210994720459
    8. ':

' → logprob: -12.43710994720459
    9. '(object' → logprob: -12.43710994720459
    10. '   ' → logprob: -12.68710994720459

Token 828: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00017386233957950026
    2. ' def' → logprob: -8.750173568725586
    3. 'def' → logprob: -12.000173568725586
    4. 'class' → logprob: -12.125173568725586
    5. '```' → logprob: -13.500173568725586
    6. ' class' → logprob: -13.750173568725586
    7. '	def' → logprob: -14.750173568725586
    8. '    
' → logprob: -15.750173568725586
    9. '
' → logprob: -15.875173568725586
    10. ')' → logprob: -15.875173568725586

Token 829: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.22046419978141785
    2. 'def' (adapté à ' def') → logprob: -1.7204642295837402
    3. '   ' → logprob: -3.9704642295837402
    4. 'class' → logprob: -13.220463752746582
    5. ':def' → logprob: -13.845463752746582
    6. ' ' → logprob: -14.220463752746582
    7. '	def' → logprob: -14.220463752746582
    8. ':' → logprob: -14.220463752746582
    9. '
' → logprob: -15.095463752746582
    10. '```' → logprob: -15.220463752746582

Token 830: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.32441434264183044
    2. '__' → logprob: -1.4494143724441528
    3. 'def' → logprob: -3.8244142532348633
    4. '_init' → logprob: -3.9494142532348633
    5. ' __' → logprob: -7.074414253234863
    6. ' def' → logprob: -8.449414253234863
    7. '```' → logprob: -9.199414253234863
    8. '_def' → logprob: -11.324414253234863
    9. '___' → logprob: -11.574414253234863
    10. '_code' → logprob: -11.824414253234863

Token 831: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0111380098387599
    2. 'nit' → logprob: -4.511137962341309
    3. '_init' → logprob: -10.011137962341309
    4. 'it' → logprob: -10.636137962341309
    5. '```' → logprob: -12.261137962341309
    6. 'class' → logprob: -12.761137962341309
    7. 'def' → logprob: -12.761137962341309
    8. 'int' → logprob: -12.886137962341309
    9. 'iter' → logprob: -13.011137962341309
    10. '__' → logprob: -13.136137962341309

Token 832: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.5286568999290466
    2. '(self' → logprob: -0.9036568999290466
    3. '(' → logprob: -5.528656959533691
    4. '__(
' → logprob: -6.778656959533691
    5. ' (' → logprob: -8.653656959533691
    6. '__' → logprob: -9.528656959533691
    7. '(
' → logprob: -10.403656959533691
    8. '_(' → logprob: -10.403656959533691
    9. ')(' → logprob: -10.653656959533691
    10. 'self' → logprob: -10.778656959533691

Token 833: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.13388703338569e-06
    2. '(self' → logprob: -12.125009536743164
    3. ' self' → logprob: -13.250009536743164
    4. '   ' → logprob: -14.375009536743164
    5. '	self' → logprob: -14.500009536743164
    6. '
' → logprob: -15.250009536743164
    7. '       ' → logprob: -15.625009536743164
    8. ',self' → logprob: -15.625009536743164
    9. ')' → logprob: -16.375009536743164
    10. 'lab' → logprob: -17.375009536743164

Token 834: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.921253225300461e-05
    2. 'self' → logprob: -9.625069618225098
    3. ',self' → logprob: -13.250069618225098
    4. ' ,' → logprob: -14.250069618225098
    5. ',
' → logprob: -14.375069618225098
    6. ',l' → logprob: -15.875069618225098
    7. ',

' → logprob: -18.75006866455078
    8. ' self' → logprob: -19.25006866455078
    9. '   ' → logprob: -19.75006866455078
    10. '
' → logprob: -20.00006866455078

Token 835: ' labyrinth' (ID: 184257)
  Prédit: 'lab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lab' → logprob: -0.0036266776733100414
    2. ' labyrinth' → logprob: -5.753626823425293
    3. ' lab' → logprob: -7.753626823425293
    4. 'self' → logprob: -12.003626823425293
    5. 'Lab' → logprob: -12.378626823425293
    6. 'frag' → logprob: -13.003626823425293
    7. ' лаб' → logprob: -13.378626823425293
    8. '   ' → logprob: -13.878626823425293
    9. 'maze' → logprob: -14.128626823425293
    10. 'l' → logprob: -14.753626823425293

Token 836: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01826840452849865
    2. '):' → logprob: -4.018268585205078
    3. ' :' → logprob: -10.143268585205078
    4. ')' → logprob: -10.143268585205078
    5. ',' → logprob: -10.768268585205078
    6. ' ):' → logprob: -11.518268585205078
    7. '):
' → logprob: -12.143268585205078
    8. '_:' → logprob: -14.018268585205078
    9. '}:' → logprob: -14.393268585205078
    10. '   ' → logprob: -14.893268585205078

Token 837: ' Frag' (ID: 122221)
  Prédit: 'Lab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Lab' → logprob: -0.01631505787372589
    2. 'Frag' → logprob: -4.39131498336792
    3. ' Lab' → logprob: -5.64131498336792
    4. ' Frag' → logprob: -8.391315460205078
    5. 'lab' → logprob: -11.266315460205078
    6. 'Labor' → logprob: -12.766315460205078
    7. ' lab' → logprob: -12.766315460205078
    8. '   ' → logprob: -13.766315460205078
    9. 'frag' → logprob: -14.391315460205078
    10. ' ' → logprob: -14.391315460205078

Token 838: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -1.5048530030981055e-06
    2. 'tile' → logprob: -14.750001907348633
    3. 'r' → logprob: -15.000001907348633
    4. 'Frag' → logprob: -15.500001907348633
    5. 'ible' → logprob: -15.875001907348633
    6. ' fragile' → logprob: -16.375001907348633
    7. 'ILE' → logprob: -16.875001907348633
    8. 'atile' → logprob: -17.000001907348633
    9. 'i' → logprob: -17.000001907348633
    10. 'иле' → logprob: -17.250001907348633

Token 839: 'Lab' (ID: 34048)
  Prédit: 'Lab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Lab' → logprob: -3.128163257315464e-07
    2. ' Lab' → logprob: -16.5
    3. '_lab' → logprob: -16.625
    4. 'Labor' → logprob: -17.375
    5. ')' → logprob: -18.25
    6. 'Labs' → logprob: -18.875
    7. 'lab' → logprob: -19.0
    8. '
' → logprob: -20.125
    9. '```' → logprob: -21.125
    10. 'Lap' → logprob: -21.5

Token 840: 'yrinth' (ID: 113153)
  Prédit: 'yrinth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yrinth' → logprob: -0.004483173601329327
    2. 'inth' → logprob: -5.629483222961426
    3. 'ynth' → logprob: -8.504483222961426
    4. ' labyrinth' → logprob: -8.754483222961426
    5. 'ith' → logprob: -9.504483222961426
    6. 'ern' → logprob: -9.879483222961426
    7. 'yr' → logprob: -9.879483222961426
    8. 'rin' → logprob: -10.129483222961426
    9. 'r' → logprob: -10.129483222961426
    10. 'irth' → logprob: -10.254483222961426

Token 841: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07511303573846817
    2. '):
' → logprob: -2.70011305809021
    3. ',' → logprob: -5.325112819671631
    4. ')' → logprob: -8.450113296508789
    5. '   ' → logprob: -10.325113296508789
    6. ' ):' → logprob: -10.700113296508789
    7. '):
' → logprob: -10.825113296508789
    8. '       ' → logprob: -13.450113296508789
    9. ' ' → logprob: -13.450113296508789
    10. ' ):
' → logprob: -13.700113296508789

Token 842: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010160179808735847
    2. 'self' → logprob: -7.126016139984131
    3. ' self' → logprob: -9.251015663146973
    4. '
' → logprob: -9.876015663146973
    5. '):
' → logprob: -10.626015663146973
    6. ',' → logprob: -11.001015663146973
    7. 'def' → logprob: -11.876015663146973
    8. '   ' → logprob: -12.501015663146973
    9. '        
' → logprob: -12.751015663146973
    10. ')' → logprob: -13.001015663146973

Token 843: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.16332542896270752
    2. '       ' → logprob: -1.9133254289627075
    3. ' self' → logprob: -5.788325309753418
    4. '   ' → logprob: -10.413325309753418
    5. 'import' → logprob: -14.163325309753418
    6. 'from' → logprob: -14.538325309753418
    7. '
' → logprob: -14.663325309753418
    8. '	self' → logprob: -14.788325309753418
    9. '     ' → logprob: -15.038325309753418
    10. ' ' → logprob: -15.038325309753418

Token 844: '.lab' (ID: 90464)
  Prédit: '.lab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lab' → logprob: -9.829823102336377e-05
    2. '.l' → logprob: -9.25009822845459
    3. 'lab' → logprob: -14.37509822845459
    4. '.' → logprob: -14.87509822845459
    5. '.la' → logprob: -15.50009822845459
    6. '.land' → logprob: -16.000099182128906
    7. '.lat' → logprob: -16.125099182128906
    8. '.lb' → logprob: -16.375099182128906
    9. ' .' → logprob: -16.375099182128906
    10. ' labyrinth' → logprob: -16.375099182128906

Token 845: 'yrinth' (ID: 113153)
  Prédit: 'yrinth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yrinth' → logprob: -5.200166469876422e-06
    2. 'yr' → logprob: -12.250004768371582
    3. 'y' → logprob: -15.750004768371582
    4. '```' → logprob: -17.0000057220459
    5. 'ирин' → logprob: -17.7500057220459
    6. '_y' → logprob: -17.7500057220459
    7. '``' → logprob: -18.2500057220459
    8. '
' → logprob: -18.5000057220459
    9. '[' → logprob: -18.7500057220459
    10. 'ryn' → logprob: -18.8750057220459

Token 846: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932151913642883
    2. ' =' → logprob: -0.6932151913642883
    3. '   ' → logprob: -9.693215370178223
    4. ':' → logprob: -12.693215370178223
    5. '    ' → logprob: -13.818215370178223
    6. ' ' → logprob: -13.943215370178223
    7. '  ' → logprob: -14.318215370178223
    8. '=
' → logprob: -15.818215370178223
    9. '.' → logprob: -16.318214416503906
    10. ' =
' → logprob: -16.568214416503906

Token 847: ' labyrinth' (ID: 184257)
  Prédit: 'lab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lab' → logprob: -0.16130585968494415
    2. ' labyrinth' → logprob: -1.9113059043884277
    3. ' lab' → logprob: -6.911305904388428
    4. 'labor' → logprob: -9.91130542755127
    5. 'Lab' → logprob: -11.28630542755127
    6. 'l' → logprob: -12.03630542755127
    7. ' laboratory' → logprob: -12.91130542755127
    8. '_lab' → logprob: -12.91130542755127
    9. ' лаб' → logprob: -13.03630542755127
    10. 'labs' → logprob: -13.78630542755127

Token 848: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011459209956228733
    2. '<|end|>' → logprob: -5.0114593505859375
    3. '    
' → logprob: -5.6364593505859375
    4. '   ' → logprob: -7.7614593505859375
    5. '  
' → logprob: -8.636459350585938
    6. 'def' → logprob: -8.761459350585938
    7. '<|end|>' → logprob: -9.011459350585938
    8. ' 
' → logprob: -9.386459350585938
    9. '	
' → logprob: -9.636459350585938
    10. ' def' → logprob: -10.761459350585938

Token 849: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2646614909172058
    2. '
' → logprob: -1.7646615505218506
    3. '    
' → logprob: -3.2646615505218506
    4. '<|end|>' → logprob: -4.6396613121032715
    5. 'def' → logprob: -4.8896613121032715
    6. '        
' → logprob: -6.2646613121032715
    7. '       ' → logprob: -6.7646613121032715
    8. '```' → logprob: -7.0146613121032715
    9. ' def' → logprob: -7.1396613121032715
    10. '  
' → logprob: -7.5146613121032715

Token 850: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01605231873691082
    2. 'from' → logprob: -4.64105224609375
    3. '       ' → logprob: -5.76605224609375
    4. 'def' → logprob: -6.26605224609375
    5. ' self' → logprob: -7.76605224609375
    6. '
' → logprob: -8.01605224609375
    7. '   ' → logprob: -8.26605224609375
    8. 'import' → logprob: -8.51605224609375
    9. ' from' → logprob: -11.64105224609375
    10. '#' → logprob: -12.01605224609375

Token 851: '.total' (ID: 23374)
  Prédit: '.vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.vis' → logprob: -0.012446430511772633
    2. '.states' → logprob: -5.637446403503418
    3. '.queue' → logprob: -6.012446403503418
    4. '.' → logprob: -6.012446403503418
    5. '.start' → logprob: -6.387446403503418
    6. '.front' → logprob: -7.262446403503418
    7. '.ex' → logprob: -8.262446403503418
    8. '.state' → logprob: -8.387446403503418
    9. '.initial' → logprob: -8.762446403503418
    10. '.best' → logprob: -8.762446403503418

Token 852: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.0015761636896058917
    2. '=' → logprob: -6.876575946807861
    3. ' =' → logprob: -8.00157642364502
    4. 'tre' → logprob: -9.37657642364502
    5. '_targets' → logprob: -10.25157642364502
    6. '   ' → logprob: -10.37657642364502
    7. '=len' → logprob: -11.50157642364502
    8. 'Treas' → logprob: -11.50157642364502
    9. '_' → logprob: -12.12657642364502
    10. 't' → logprob: -12.37657642364502

Token 853: 'reas' (ID: 20712)
  Prédit: 'reas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reas' → logprob: -0.0012501158053055406
    2. 're' → logprob: -6.751250267028809
    3. 'rea' → logprob: -10.126250267028809
    4. 'r' → logprob: -10.876250267028809
    5. 'res' → logprob: -11.001250267028809
    6. '_re' → logprob: -13.876250267028809
    7. '#' → logprob: -14.751250267028809
    8. '```' → logprob: -14.751250267028809
    9. '``' → logprob: -15.376250267028809
    10. 'reat' → logprob: -15.501250267028809

Token 854: 'ures' (ID: 1609)
  Prédit: 'ures'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ures' → logprob: -0.00028386167832650244
    2. 'ores' → logprob: -8.250284194946289
    3. 'ure' → logprob: -11.750284194946289
    4. '_' → logprob: -12.000284194946289
    5. 'res' → logprob: -13.500284194946289
    6. 'u' → logprob: -13.875284194946289
    7. '#' → logprob: -14.125284194946289
    8. '```' → logprob: -14.125284194946289
    9. 'ues' → logprob: -14.375284194946289
    10. 'urses' → logprob: -14.625284194946289

Token 855: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0013267839094623923
    2. '=' → logprob: -6.626326560974121
    3. '=len' → logprob: -14.376326560974121
    4. '   ' → logprob: -16.251327514648438
    5. ':' → logprob: -16.501327514648438
    6. ' ' → logprob: -17.126327514648438
    7. '    ' → logprob: -17.876327514648438
    8. '<|end|>' → logprob: -18.126327514648438
    9. ',' → logprob: -19.626327514648438
    10. '  ' → logprob: -20.376327514648438

Token 856: ' set' (ID: 920)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0760333240032196
    2. 'len' → logprob: -2.826033353805542
    3. ' len' → logprob: -4.326033115386963
    4. ' ' → logprob: -7.201033115386963
    5. '   ' → logprob: -14.576033592224121
    6. '(len' → logprob: -14.701033592224121
    7. 'set' → logprob: -15.826033592224121
    8. '	len' → logprob: -15.951033592224121
    9. '=len' → logprob: -16.451032638549805
    10. ' set' → logprob: -16.951032638549805

Token 857: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -7.350386295001954e-05
    2. 'range' → logprob: -10.000073432922363
    3. '([' → logprob: -10.500073432922363
    4. '({' → logprob: -15.500073432922363
    5. '(i' → logprob: -16.00007438659668
    6. '(' → logprob: -16.12507438659668
    7. '{' → logprob: -18.50007438659668
    8. '((' → logprob: -18.62507438659668
    9. '()' → logprob: -19.50007438659668
    10. '(r' → logprob: -20.62507438659668

Token 858: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2520528733730316
    2. '(len' → logprob: -1.502052903175354
    3. 'len' → logprob: -9.127053260803223
    4. '3' → logprob: -11.127053260803223
    5. ' len' → logprob: -15.377053260803223
    6. '(
' → logprob: -17.127052307128906
    7. '(self' → logprob: -17.252052307128906
    8. ' (' → logprob: -17.502052307128906
    9. '((' → logprob: -18.502052307128906
    10. '	len' → logprob: -19.127052307128906

Token 859: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04862982779741287
    2. '(l' → logprob: -3.0486297607421875
    3. 'self' → logprob: -10.673629760742188
    4. '(' → logprob: -11.423629760742188
    5. 'lab' → logprob: -11.798629760742188
    6. '(
' → logprob: -15.548629760742188
    7. '(this' → logprob: -15.923629760742188
    8. '_lab' → logprob: -16.298629760742188
    9. ' self' → logprob: -16.548629760742188
    10. 'Lab' → logprob: -16.798629760742188

Token 860: '.lab' (ID: 90464)
  Prédit: '.lab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lab' → logprob: -5.478889215737581e-05
    2. 'lab' → logprob: -10.000054359436035
    3. '.l' → logprob: -11.625054359436035
    4. '.land' → logprob: -16.75005531311035
    5. '_lab' → logprob: -16.87505531311035
    6. ' .' → logprob: -17.00005531311035
    7. ' лаб' → logprob: -17.12505531311035
    8. 'Lab' → logprob: -17.12505531311035
    9. '(l' → logprob: -17.12505531311035
    10. '.la' → logprob: -17.37505531311035

Token 861: 'yrinth' (ID: 113153)
  Prédit: 'yrinth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yrinth' → logprob: -0.0010162565158680081
    2. 'ir' → logprob: -8.001016616821289
    3. 'r' → logprob: -9.501016616821289
    4. 'urch' → logprob: -10.001016616821289
    5. 'tre' → logprob: -10.126016616821289
    6. 'reath' → logprob: -10.251016616821289
    7. '```' → logprob: -10.251016616821289
    8. 'self' → logprob: -10.876016616821289
    9. 'ur' → logprob: -11.001016616821289
    10. 'yr' → logprob: -11.126016616821289

Token 862: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.00015014449309092015
    2. ' .' → logprob: -8.875149726867676
    3. '.' → logprob: -11.500149726867676
    4. ').' → logprob: -16.750150680541992
    5. '.T' → logprob: -18.625150680541992
    6. 't' → logprob: -18.625150680541992
    7. '.te' → logprob: -19.125150680541992
    8. '.tr' → logprob: -19.375150680541992
    9. '   ' → logprob: -19.625150680541992
    10. '.targets' → logprob: -19.750150680541992

Token 863: 'reas' (ID: 20712)
  Prédit: 'reas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reas' → logprob: -9.372294698550832e-06
    2. 're' → logprob: -12.000009536743164
    3. 'r' → logprob: -13.125009536743164
    4. 'rea' → logprob: -13.750009536743164
    5. 'res' → logprob: -16.500009536743164
    6. ')' → logprob: -18.625009536743164
    7. '_re' → logprob: -18.750009536743164
    8. ' treasures' → logprob: -18.750009536743164
    9. '.re' → logprob: -18.875009536743164
    10. '
' → logprob: -19.250009536743164

Token 864: 'ures' (ID: 1609)
  Prédit: 'ures'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ures' → logprob: -2.7848862373502925e-05
    2. 'ure' → logprob: -12.000027656555176
    3. 's' → logprob: -12.500027656555176
    4. 'urs' → logprob: -12.500027656555176
    5. 'asures' → logprob: -12.750027656555176
    6. 'ur' → logprob: -12.875027656555176
    7. '>' → logprob: -13.250027656555176
    8. ')' → logprob: -13.375027656555176
    9. 'ues' → logprob: -13.875027656555176
    10. ']' → logprob: -14.500027656555176

Token 865: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01661558449268341
    2. ')))' → logprob: -4.141615390777588
    3. '))
' → logprob: -7.516615390777588
    4. ' ))' → logprob: -10.641615867614746
    5. ')))
' → logprob: -12.391615867614746
    6. '))

' → logprob: -12.766615867614746
    7. '()))' → logprob: -12.891615867614746
    8. '))))' → logprob: -13.516615867614746
    9. '))}
' → logprob: -14.516615867614746
    10. ' ' → logprob: -14.766615867614746

Token 866: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13676215708255768
    2. '    
' → logprob: -2.2617621421813965
    3. '
' → logprob: -4.0117621421813965
    4. 'def' → logprob: -5.7617621421813965
    5. '  
' → logprob: -6.7617621421813965
    6. '<|end|>' → logprob: -7.5117621421813965
    7. ' def' → logprob: -8.636762619018555
    8. '        
' → logprob: -8.636762619018555
    9. '   
' → logprob: -8.886762619018555
    10. '```' → logprob: -9.261762619018555

Token 867: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2046496421098709
    2. '   ' → logprob: -1.7046496868133545
    3. ' def' → logprob: -5.954649448394775
    4. '
' → logprob: -7.454649448394775
    5. '<|end|>' → logprob: -10.704649925231934
    6. '    
' → logprob: -11.454649925231934
    7. '	def' → logprob: -11.704649925231934
    8. '```' → logprob: -12.079649925231934
    9. ' ' → logprob: -13.079649925231934
    10. '<|end|>' → logprob: -13.329649925231934

Token 868: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00023166877508629113
    2. ' def' → logprob: -8.375231742858887
    3. '   ' → logprob: -14.000231742858887
    4. '
' → logprob: -15.875231742858887
    5. '	def' → logprob: -16.00023078918457
    6. '```' → logprob: -17.62523078918457
    7. 'from' → logprob: -18.75023078918457
    8. 'de' → logprob: -19.12523078918457
    9. ' ' → logprob: -19.25023078918457
    10. 'Def' → logprob: -20.37523078918457

Token 869: ' can' (ID: 665)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.0366080179810524
    2. 'b' → logprob: -4.1616082191467285
    3. 'find' → logprob: -4.6616082191467285
    4. ' solve' → logprob: -4.9116082191467285
    5. ' bfs' → logprob: -6.4116082191467285
    6. 'short' → logprob: -7.1616082191467285
    7. 'search' → logprob: -7.6616082191467285
    8. ' find' → logprob: -8.53660774230957
    9. 'minimum' → logprob: -9.03660774230957
    10. ' shortest' → logprob: -9.66160774230957

Token 870: '_collect' (ID: 169999)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.35571613907814026
    2. '_visit' → logprob: -1.8557161092758179
    3. '_complete' → logprob: -2.4807162284851074
    4. '_find' → logprob: -4.105716228485107
    5. '_finish' → logprob: -4.105716228485107
    6. '_collect' → logprob: -4.480716228485107
    7. '_take' → logprob: -5.105716228485107
    8. '_' → logprob: -5.230716228485107
    9. '_s' → logprob: -6.980716228485107
    10. '_pass' → logprob: -7.480716228485107

Token 871: '_all' (ID: 13305)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7707834839820862
    2. 'all' → logprob: -1.0207834243774414
    3. '_all' → logprob: -1.7707834243774414
    4. 'self' → logprob: -5.645783424377441
    5. ' all' → logprob: -6.645783424377441
    6. '_t' → logprob: -7.020783424377441
    7. '(' → logprob: -7.645783424377441
    8. ' (' → logprob: -8.770783424377441
    9. 'All' → logprob: -9.145783424377441
    10. '(
' → logprob: -9.270783424377441

Token 872: '_and' (ID: 18645)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008411920862272382
    2. '_t' → logprob: -7.12584114074707
    3. '(' → logprob: -10.50084114074707
    4. ' (' → logprob: -12.12584114074707
    5. 'self' → logprob: -14.00084114074707
    6. '_(' → logprob: -14.12584114074707
    7. '   ' → logprob: -14.25084114074707
    8. '(
' → logprob: -14.37584114074707
    9. '```' → logprob: -15.87584114074707
    10. '_' → logprob: -16.00084114074707

Token 873: '_return' (ID: 29287)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07430129498243332
    2. 'exit' → logprob: -3.449301242828369
    3. '_return' → logprob: -4.074301242828369
    4. 'escape' → logprob: -4.324301242828369
    5. '_escape' → logprob: -5.324301242828369
    6. '_exit' → logprob: -5.824301242828369
    7. 'reach' → logprob: -6.949301242828369
    8. ' return' → logprob: -7.574301242828369
    9. 'back' → logprob: -9.324301719665527
    10. 'Return' → logprob: -10.574301719665527

Token 874: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0014017868088558316
    2. '_to' → logprob: -7.001401901245117
    3. '(' → logprob: -7.751401901245117
    4. ' (' → logprob: -10.751401901245117
    5. '_back' → logprob: -11.376401901245117
    6. '_home' → logprob: -11.751401901245117
    7. 'self' → logprob: -12.501401901245117
    8. '_(' → logprob: -12.751401901245117
    9. 'to' → logprob: -12.876401901245117
    10. '_' → logprob: -13.001401901245117

Token 875: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017243190086446702
    2. '(self' → logprob: -9.12517261505127
    3. 'self' → logprob: -10.50017261505127
    4. ')(' → logprob: -10.62517261505127
    5. ' ,' → logprob: -12.12517261505127
    6. '):
' → logprob: -12.62517261505127
    7. ')' → logprob: -14.50017261505127
    8. '   ' → logprob: -14.62517261505127
    9. ',
' → logprob: -14.87517261505127
    10. '):' → logprob: -15.00017261505127

Token 876: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009938681032508612
    2. '(' → logprob: -7.000993728637695
    3. ' (' → logprob: -9.500993728637695
    4. 'self' → logprob: -12.875993728637695
    5. ' ->' → logprob: -13.375993728637695
    6. '(
' → logprob: -13.625993728637695
    7. ':' → logprob: -14.250993728637695
    8. '       ' → logprob: -14.375993728637695
    9. '   ' → logprob: -15.125993728637695
    10. '(s' → logprob: -15.375993728637695

Token 877: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.005932828411459923
    2. ' bool' → logprob: -5.130932807922363
    3. 'int' → logprob: -13.755932807922363
    4. '   ' → logprob: -14.130932807922363
    5. 'None' → logprob: -15.005932807922363
    6. '	bool' → logprob: -15.005932807922363
    7. ' ' → logprob: -15.130932807922363
    8. 'List' → logprob: -15.255932807922363
    9. 'Bool' → logprob: -15.255932807922363
    10. '
' → logprob: -15.755932807922363

Token 878: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.040174566209316254
    2. '(' → logprob: -4.16517448425293
    3. '       ' → logprob: -4.41517448425293
    4. ':' → logprob: -4.66517448425293
    5. '(
' → logprob: -6.91517448425293
    6. '   ' → logprob: -7.29017448425293
    7. ':
' → logprob: -7.41517448425293
    8. '(s' → logprob: -10.79017448425293
    9. 'self' → logprob: -11.41517448425293
    10. ',' → logprob: -11.91517448425293

Token 879: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0325924449716695e-05
    2. '```' → logprob: -13.00001049041748
    3. '        
' → logprob: -13.50001049041748
    4. ' start' → logprob: -14.12501049041748
    5. ' states' → logprob: -14.12501049041748
    6. '
' → logprob: -14.12501049041748
    7. ',' → logprob: -14.37501049041748
    8. ' current' → logprob: -14.37501049041748
    9. ' state' → logprob: -14.50001049041748
    10. ' queue' → logprob: -14.50001049041748

Token 880: ' start' (ID: 1604)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016012312844395638
    2. 'start' (adapté à ' start') → logprob: -4.641012191772461
    3. 'from' → logprob: -5.641012191772461
    4. ' start' → logprob: -6.391012191772461
    5. 'queue' → logprob: -7.766012191772461
    6. ' from' → logprob: -8.141012191772461
    7. 'visited' → logprob: -9.141012191772461
    8. ' queue' → logprob: -9.641012191772461
    9. 'initial' → logprob: -9.891012191772461
    10. 'import' → logprob: -11.141012191772461

Token 881: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.001617453875951469
    2. '_' → logprob: -6.501617431640625
    3. ' _' → logprob: -9.751617431640625
    4. 'state' → logprob: -10.251617431640625
    5. ' =' → logprob: -11.251617431640625
    6. '=_' → logprob: -12.876617431640625
    7. '=' → logprob: -13.376617431640625
    8. '   ' → logprob: -14.126617431640625
    9. '_
' → logprob: -14.376617431640625
    10. ' state' → logprob: -14.376617431640625

Token 882: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029750484973192215
    2. '=' → logprob: -3.5297505855560303
    3. ' ' → logprob: -19.65475082397461
    4. '＝' → logprob: -20.15475082397461
    5. '()' → logprob: -20.52975082397461
    6. ' =
' → logprob: -20.77975082397461
    7. '    ' → logprob: -21.40475082397461
    8. 's' → logprob: -21.40475082397461
    9. '=self' → logprob: -21.40475082397461
    10. '=start' → logprob: -21.40475082397461

Token 883: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.16022463142871857
    2. 'self' → logprob: -1.9102246761322021
    3. '	self' → logprob: -15.410224914550781
    4. '       ' → logprob: -16.03522491455078
    5. '(self' → logprob: -16.03522491455078
    6. '=self' → logprob: -16.53522491455078
    7. '[self' → logprob: -18.16022491455078
    8. '        ' → logprob: -19.78522491455078
    9. ':self' → logprob: -19.91022491455078
    10. '$self' → logprob: -20.28522491455078

Token 884: '.lab' (ID: 90464)
  Prédit: '.lab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lab' → logprob: -2.6060808522743173e-05
    2. 'lab' → logprob: -10.625025749206543
    3. '.l' → logprob: -13.625025749206543
    4. 'olab' → logprob: -15.500025749206543
    5. '.ab' → logprob: -16.62502670288086
    6. '.' → logprob: -16.62502670288086
    7. ' лаб' → logprob: -16.75002670288086
    8. '_lab' → logprob: -16.75002670288086
    9. '.land' → logprob: -17.12502670288086
    10. ' lab' → logprob: -17.62502670288086

Token 885: 'yrinth' (ID: 113153)
  Prédit: 'yrinth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yrinth' → logprob: -1.4140441635390744e-05
    2. 'yr' → logprob: -11.375014305114746
    3. '_state' → logprob: -14.125014305114746
    4. 'irth' → logprob: -14.875014305114746
    5. 'ir' → logprob: -15.000014305114746
    6. 'y' → logprob: -15.000014305114746
    7. 'orithm' → logprob: -16.25001335144043
    8. 'ymph' → logprob: -16.50001335144043
    9. '_s' → logprob: -16.75001335144043
    10. 'r' → logprob: -16.75001335144043

Token 886: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.00013727048644796014
    2. 'start' → logprob: -9.000137329101562
    3. '.' → logprob: -11.250137329101562
    4. ' .' → logprob: -14.750137329101562
    5. '().' → logprob: -15.875137329101562
    6. ' start' → logprob: -16.250137329101562
    7. '   ' → logprob: -16.750137329101562
    8. ').' → logprob: -17.375137329101562
    9. '       ' → logprob: -17.375137329101562
    10. '.next' → logprob: -17.625137329101562

Token 887: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -1.2664456789934775e-06
    2. 'state' → logprob: -13.750000953674316
    3. '_' → logprob: -16.125001907348633
    4. '_states' → logprob: -18.250001907348633
    5. '_STATE' → logprob: -19.250001907348633
    6. 'State' → logprob: -19.375001907348633
    7. '()' → logprob: -19.375001907348633
    8. ' _' → logprob: -19.750001907348633
    9. '_State' → logprob: -19.875001907348633
    10. ')' → logprob: -20.000001907348633

Token 888: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.8444881536415778e-05
    2. 'queue' → logprob: -12.000028610229492
    3. '
' → logprob: -12.250028610229492
    4. ',' → logprob: -12.250028610229492
    5. '	' → logprob: -12.500028610229492
    6. 'visited' → logprob: -12.500028610229492
    7. ' queue' → logprob: -13.625028610229492
    8. '        
' → logprob: -14.000028610229492
    9. 'stack' → logprob: -14.125028610229492
    10. '   ' → logprob: -14.750028610229492

Token 889: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001497006742283702
    2. '
' → logprob: -6.7514967918396
    3. ' queue' → logprob: -9.001497268676758
    4. '        
' → logprob: -9.751497268676758
    5. 'queue' → logprob: -10.251497268676758
    6. 'visited' → logprob: -10.376497268676758
    7. '   ' → logprob: -10.626497268676758
    8. ' visited' → logprob: -10.876497268676758
    9. '```' → logprob: -11.001497268676758
    10. '	' → logprob: -12.876497268676758

Token 890: ' queue' (ID: 13661)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.7780104875564575
    2. 'queue' (adapté à ' queue') → logprob: -1.0280104875564575
    3. '       ' → logprob: -2.278010368347168
    4. 'from' → logprob: -2.528010368347168
    5. 'seen' → logprob: -7.528010368347168
    6. 'stack' → logprob: -10.278010368347168
    7. 'front' → logprob: -10.403010368347168
    8. 'import' → logprob: -11.278010368347168
    9. '
' → logprob: -11.528010368347168
    10. ' visited' → logprob: -11.653010368347168

Token 891: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602257490158081
    2. '=' → logprob: -1.910225749015808
    3. ' =
' → logprob: -14.285225868225098
    4. ' ' → logprob: -15.035225868225098
    5. ',' → logprob: -16.16022491455078
    6. ')' → logprob: -16.41022491455078
    7. '<|end|>' → logprob: -16.53522491455078
    8. 'deque' → logprob: -16.78522491455078
    9. ':' → logprob: -16.91022491455078
    10. '=[]' → logprob: -17.03522491455078

Token 892: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0002613358374219388
    2. ' deque' → logprob: -8.250261306762695
    3. 'collections' → logprob: -18.375261306762695
    4. '   ' → logprob: -18.375261306762695
    5. 'Deque' → logprob: -19.000261306762695
    6. '```' → logprob: -19.625261306762695
    7. '       ' → logprob: -21.125261306762695
    8. '{' → logprob: -21.500261306762695
    9. ' ' → logprob: -21.875261306762695
    10. '	de' → logprob: -22.625261306762695

Token 893: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -5.764977686339989e-05
    2. '()
' → logprob: -10.750057220458984
    3. '([(' → logprob: -10.875057220458984
    4. '()' → logprob: -11.000057220458984
    5. '[' → logprob: -14.875057220458984
    6. '[(' → logprob: -16.750057220458984
    7. '(' → logprob: -17.500057220458984
    8. '([
' → logprob: -17.625057220458984
    9. '[start' → logprob: -17.625057220458984
    10. '()

' → logprob: -17.625057220458984

Token 894: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00016027313540689647
    2. ' start' → logprob: -8.750160217285156
    3. '(start' → logprob: -13.250160217285156
    4. '(' → logprob: -20.750160217285156
    5. '[start' → logprob: -21.500160217285156
    6. '   ' → logprob: -21.750160217285156
    7. '	start' → logprob: -22.250160217285156
    8. ')' → logprob: -22.500160217285156
    9. ',start' → logprob: -23.250160217285156
    10. ':start' → logprob: -23.375160217285156

Token 895: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -3.1186566047836095e-05
    2. 'state' → logprob: -10.500031471252441
    3. '_start' → logprob: -13.250031471252441
    4. '_states' → logprob: -14.000031471252441
    5. 'State' → logprob: -15.000031471252441
    6. 'start' → logprob: -15.625031471252441
    7. '_' → logprob: -15.875031471252441
    8. '_STATE' → logprob: -16.500030517578125
    9. ' state' → logprob: -17.250030517578125
    10. '_s' → logprob: -17.375030517578125

Token 896: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.16027753055095673
    2. '])' → logprob: -1.9102774858474731
    3. ' ])
' → logprob: -10.785277366638184
    4. '])
' → logprob: -11.035277366638184
    5. '       ' → logprob: -11.785277366638184
    6. ')
' → logprob: -12.285277366638184
    7. ' ])' → logprob: -13.035277366638184
    8. ')' → logprob: -13.785277366638184
    9. '])

' → logprob: -14.410277366638184
    10. '   ' → logprob: -15.410277366638184

Token 897: '       ' (ID: 309)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.3188571631908417
    2. '       ' → logprob: -1.318857192993164
    3. ' visited' → logprob: -5.443857192993164
    4. 'seen' → logprob: -6.693857192993164
    5. ' seen' → logprob: -11.568857192993164
    6. '   ' → logprob: -12.693857192993164
    7. '```' → logprob: -12.943857192993164
    8. '        
' → logprob: -13.568857192993164
    9. '
' → logprob: -14.068857192993164
    10. '_seen' → logprob: -14.943857192993164

Token 898: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.0004484269011300057
    2. 'seen' → logprob: -7.750448226928711
    3. '       ' → logprob: -11.250448226928711
    4. ' visited' → logprob: -12.625448226928711
    5. '        
' → logprob: -13.500448226928711
    6. 'expl' → logprob: -18.12544822692871
    7. 'dist' → logprob: -18.50044822692871
    8. '
' → logprob: -19.12544822692871
    9. '   ' → logprob: -19.62544822692871
    10. '```' → logprob: -19.62544822692871

Token 899: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869006633758545
    2. '=' → logprob: -1.1369006633758545
    3. '=set' → logprob: -10.511900901794434
    4. ':' → logprob: -13.636900901794434
    5. 'set' → logprob: -14.261900901794434
    6. 's' → logprob: -14.636900901794434
    7. '_set' → logprob: -16.386899948120117
    8. ' ' → logprob: -17.136899948120117
    9. ')' → logprob: -17.761899948120117
    10. '<|end|>' → logprob: -17.886899948120117

Token 900: ' set' (ID: 920)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.16049595177173615
    2. 'set' → logprob: -1.9104959964752197
    3. ' set' → logprob: -8.91049575805664
    4. ' {' → logprob: -8.91049575805664
    5. '{
' → logprob: -14.41049575805664
    6. '{s' → logprob: -14.78549575805664
    7. '	set' → logprob: -14.91049575805664
    8. '   ' → logprob: -15.41049575805664
    9. '=set' → logprob: -15.53549575805664
    10. '{sub' → logprob: -17.03549575805664

Token 901: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.08132877200841904
    2. '({' → logprob: -2.956328868865967
    3. '(queue' → logprob: -4.706328868865967
    4. '{' → logprob: -5.081328868865967
    5. '()' → logprob: -5.206328868865967
    6. '(start' → logprob: -5.456328868865967
    7. '()
' → logprob: -6.956328868865967
    8. '[start' → logprob: -9.706328392028809
    9. '(' → logprob: -10.456328392028809
    10. '       ' → logprob: -11.081328392028809

Token 902: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.676292231422849e-05
    2. ' start' → logprob: -11.000017166137695
    3. '(start' → logprob: -19.125017166137695
    4. '	start' → logprob: -23.500017166137695
    5. '   ' → logprob: -23.625017166137695
    6. ' ' → logprob: -24.875017166137695
    7. ')' → logprob: -25.125017166137695
    8. '[start' → logprob: -25.250017166137695
    9. 'Start' → logprob: -25.375017166137695
    10. '.start' → logprob: -25.375017166137695

Token 903: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -1.27099974633893e-05
    2. 'state' → logprob: -11.375012397766113
    3. '_states' → logprob: -14.375012397766113
    4. '_start' → logprob: -14.875012397766113
    5. 'State' → logprob: -16.62501335144043
    6. '_' → logprob: -17.00001335144043
    7. 'start' → logprob: -17.37501335144043
    8. '   ' → logprob: -17.62501335144043
    9. '_status' → logprob: -18.25001335144043
    10. ')' → logprob: -18.50001335144043

Token 904: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0046412344090640545
    2. '])
' → logprob: -5.379641056060791
    3. ' ])' → logprob: -11.62964153289795
    4. ')' → logprob: -12.37964153289795
    5. '])

' → logprob: -12.37964153289795
    6. ')])' → logprob: -13.75464153289795
    7. '       ' → logprob: -13.87964153289795
    8. '])
' → logprob: -14.25464153289795
    9. ']);' → logprob: -15.50464153289795
    10. '])]' → logprob: -15.62964153289795

Token 905: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11595312505960464
    2. 'while' → logprob: -2.365953207015991
    3. '   ' → logprob: -4.490952968597412
    4. ' while' → logprob: -5.615952968597412
    5. '
' → logprob: -7.990952968597412
    6. '	while' → logprob: -7.990952968597412
    7. '```' → logprob: -9.61595344543457
    8. '        
' → logprob: -10.86595344543457
    9. '    
' → logprob: -11.86595344543457
    10. '           ' → logprob: -13.86595344543457

Token 906: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08036098629236221
    2. 'while' → logprob: -2.5803608894348145
    3. ' while' → logprob: -6.7053608894348145
    4. '   ' → logprob: -8.330361366271973
    5. '	while' → logprob: -12.580361366271973
    6. '```' → logprob: -14.830361366271973
    7. '
' → logprob: -15.080361366271973
    8. '        
' → logprob: -15.580361366271973
    9. '           ' → logprob: -15.705361366271973
    10. 'While' → logprob: -16.705360412597656

Token 907: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0002967320033349097
    2. '       ' → logprob: -8.250296592712402
    3. ' while' → logprob: -10.250296592712402
    4. '   ' → logprob: -17.37529754638672
    5. '	while' → logprob: -19.37529754638672
    6. '        
' → logprob: -19.87529754638672
    7. '```' → logprob: -20.37529754638672
    8. '           ' → logprob: -20.50029754638672
    9. '
' → logprob: -20.87529754638672
    10. 'While' → logprob: -20.87529754638672

Token 908: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.004078758880496025
    2. ' queue' → logprob: -5.5040788650512695
    3. '(queue' → logprob: -15.12907886505127
    4. 'len' → logprob: -16.879077911376953
    5. '	queue' → logprob: -17.254077911376953
    6. 'que' → logprob: -18.129077911376953
    7. '   ' → logprob: -19.254077911376953
    8. ' ' → logprob: -20.004077911376953
    9. '.queue' → logprob: -20.129077911376953
    10. 'deque' → logprob: -21.254077911376953

Token 909: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4741162657737732
    2. ':' → logprob: -0.9741162657737732
    3. '):
' → logprob: -10.724116325378418
    4. '       ' → logprob: -12.849116325378418
    5. ':
' → logprob: -12.849116325378418
    6. '():
' → logprob: -13.099116325378418
    7. 'opleft' → logprob: -13.099116325378418
    8. '.pop' → logprob: -13.224116325378418
    9. '           ' → logprob: -13.474116325378418
    10. ':

' → logprob: -13.974116325378418

Token 910: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000538497231900692
    2. 'state' → logprob: -8.12553882598877
    3. ' state' → logprob: -8.50053882598877
    4. ' current' → logprob: -10.62553882598877
    5. 'current' → logprob: -12.87553882598877
    6. '   ' → logprob: -12.87553882598877
    7. '            
' → logprob: -13.25053882598877
    8. '```' → logprob: -13.37553882598877
    9. ' s' → logprob: -13.50053882598877
    10. '       ' → logprob: -13.75053882598877

Token 911: ' current' (ID: 2208)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.43413016200065613
    2. 'current' (adapté à ' current') → logprob: -1.6841301918029785
    3. ' current' → logprob: -2.1841301918029785
    4. ' state' → logprob: -2.9341301918029785
    5. 'cur' → logprob: -8.30912971496582
    6. 'curr' → logprob: -8.30912971496582
    7. '           ' → logprob: -8.43412971496582
    8. '               ' → logprob: -9.93412971496582
    9. ' curr' → logprob: -9.93412971496582
    10. ' cur' → logprob: -12.18412971496582

Token 912: ' =' (ID: 314)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.037985943257808685
    2. ' =' → logprob: -3.4129860401153564
    3. '=' → logprob: -5.537985801696777
    4. '_' → logprob: -8.287985801696777
    5. 'state' → logprob: -9.162985801696777
    6. ' _' → logprob: -11.037985801696777
    7. '_states' → logprob: -12.037985801696777
    8. '=_' → logprob: -12.162985801696777
    9. ' state' → logprob: -12.787985801696777
    10. 'State' → logprob: -13.037985801696777

Token 913: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.4740772247314453
    2. ' queue' → logprob: -0.9740772247314453
    3. '	queue' → logprob: -15.974077224731445
    4. '(queue' → logprob: -16.724077224731445
    5. '.queue' → logprob: -16.849077224731445
    6. 'que' → logprob: -18.349077224731445
    7. 'deque' → logprob: -19.349077224731445
    8. '_queue' → logprob: -19.724077224731445
    9. '   ' → logprob: -21.474077224731445
    10. ' que' → logprob: -21.599077224731445

Token 914: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -4.692145012086257e-05
    2. '.' → logprob: -10.625046730041504
    3. '.pop' → logprob: -10.750046730041504
    4. '=' → logprob: -14.750046730041504
    5. '   ' → logprob: -15.125046730041504
    6. 'p' → logprob: -15.500046730041504
    7. ' =' → logprob: -16.00004768371582
    8. ' .' → logprob: -16.25004768371582
    9. ' p' → logprob: -18.37504768371582
    10. ' ' → logprob: -18.87504768371582

Token 915: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.00033832306507974863
    2. 'op' → logprob: -8.000338554382324
    3. 'ople' → logprob: -12.875338554382324
    4. 'opl' → logprob: -15.375338554382324
    5. 'opf' → logprob: -17.375337600708008
    6. 'opt' → logprob: -17.750337600708008
    7. 'opy' → logprob: -18.250337600708008
    8. 'opup' → logprob: -18.500337600708008
    9. 'oplevel' → logprob: -19.000337600708008
    10. 'opped' → logprob: -19.625337600708008

Token 916: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37441301345825195
    2. '
' → logprob: -1.249413013458252
    3. '            
' → logprob: -4.499413013458252
    4. ')' → logprob: -5.249413013458252
    5. ')
' → logprob: -5.499413013458252
    6. '<|end|>' → logprob: -7.124413013458252
    7. '):
' → logprob: -7.249413013458252
    8. ',' → logprob: -7.374413013458252
    9. '               ' → logprob: -7.624413013458252
    10. ':
' → logprob: -7.999413013458252

Token 917: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007755621336400509
    2. 'if' → logprob: -7.500775337219238
    3. ' if' → logprob: -8.500775337219238
    4. '       ' → logprob: -11.000775337219238
    5. '               ' → logprob: -14.375775337219238
    6. '          ' → logprob: -14.500775337219238
    7. 'position' → logprob: -15.000775337219238
    8. '            
' → logprob: -15.375775337219238
    9. '   ' → logprob: -15.750775337219238
    10. '
' → logprob: -15.750775337219238

Token 918: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014534716494381428
    2. '           ' → logprob: -4.264534950256348
    3. '#' (adapté à ' #') → logprob: -8.014534950256348
    4. ' if' → logprob: -10.264534950256348
    5. 'pos' → logprob: -12.389534950256348
    6. '               ' → logprob: -14.889534950256348
    7. '            
' → logprob: -14.889534950256348
    8. 'position' → logprob: -15.014534950256348
    9. 'current' → logprob: -15.139534950256348
    10. '```' → logprob: -15.889534950256348

Token 919: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0007747277268208563
    2. '#' → logprob: -7.87577486038208
    3. '           ' → logprob: -7.87577486038208
    4. ' if' → logprob: -11.375774383544922
    5. 'pos' → logprob: -14.000774383544922
    6. 'If' → logprob: -14.000774383544922
    7. '               ' → logprob: -14.375774383544922
    8. 'current' → logprob: -14.875774383544922
    9. '            
' → logprob: -15.125774383544922
    10. '```' → logprob: -15.750774383544922

Token 920: ' success' (ID: 3505)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07918311655521393
    2. ' if' → logprob: -2.5791831016540527
    3. '           ' → logprob: -8.329183578491211
    4. 'current' → logprob: -10.079183578491211
    5. ' current' → logprob: -11.954183578491211
    6. '   ' → logprob: -13.454183578491211
    7. 'len' → logprob: -13.454183578491211
    8. '               ' → logprob: -15.329183578491211
    9. 'for' → logprob: -15.579183578491211
    10. ' len' → logprob: -16.70418357849121

Token 921: ' conditions' (ID: 6409)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04083086550235748
    2. ' if' → logprob: -3.2908308506011963
    3. '       ' → logprob: -6.040831089019775
    4. 'if' → logprob: -8.415830612182617
    5. '            
' → logprob: -9.415830612182617
    6. '               ' → logprob: -10.540830612182617
    7. '
' → logprob: -11.040830612182617
    8. '<|end|>' → logprob: -11.290830612182617
    9. ',' → logprob: -11.540830612182617
    10. '        
' → logprob: -11.665830612182617

Token 922: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29502663016319275
    2. ' if' → logprob: -1.4200266599655151
    3. 'if' → logprob: -4.295026779174805
    4. '       ' → logprob: -9.170026779174805
    5. '```' → logprob: -11.295026779174805
    6. '               ' → logprob: -11.670026779174805
    7. '            
' → logprob: -12.170026779174805
    8. '          ' → logprob: -12.670026779174805
    9. ',' → logprob: -13.295026779174805
    10. '            ' → logprob: -13.420026779174805

Token 923: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10809332132339478
    2. ' if' → logprob: -2.35809326171875
    3. 'if' → logprob: -4.85809326171875
    4. '       ' → logprob: -9.60809326171875
    5. '               ' → logprob: -11.23309326171875
    6. '```' → logprob: -12.23309326171875
    7. '          ' → logprob: -13.23309326171875
    8. '            ' → logprob: -13.35809326171875
    9. '            
' → logprob: -14.73309326171875
    10. 'If' → logprob: -14.98309326171875

Token 924: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006000725086778402
    2. ' if' → logprob: -5.256000518798828
    3. 'current' → logprob: -7.756000518798828
    4. '           ' → logprob: -8.006000518798828
    5. ' current' → logprob: -12.256000518798828
    6. '               ' → logprob: -15.756000518798828
    7. '(current' → logprob: -16.006000518798828
    8. 'len' → logprob: -17.006000518798828
    9. '```' → logprob: -17.381000518798828
    10. '            
' → logprob: -17.381000518798828

Token 925: ' Col' (ID: 2445)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.001197966979816556
    2. ' if' → logprob: -6.751197814941406
    3. '           ' → logprob: -10.501197814941406
    4. '```' → logprob: -15.876197814941406
    5. 'current' → logprob: -16.751197814941406
    6. 'all' → logprob: -17.876197814941406
    7. 'If' → logprob: -18.501197814941406
    8. '#' → logprob: -18.751197814941406
    9. '               ' → logprob: -18.751197814941406
    10. '            
' → logprob: -18.876197814941406

Token 926: 'lected' (ID: 2576)
  Prédit: 'lected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lected' → logprob: -0.02984941564500332
    2. 'lect' → logprob: -3.5298495292663574
    3. 'lections' → logprob: -9.7798490524292
    4. 'lection' → logprob: -10.5298490524292
    5. 'l' → logprob: -12.0298490524292
    6. 'le' → logprob: -12.5298490524292
    7. 'lec' → logprob: -13.9048490524292
    8. '   ' → logprob: -14.2798490524292
    9. 'lector' → logprob: -14.2798490524292
    10. 'lekt' → logprob: -14.2798490524292

Token 927: ' all' (ID: 722)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.514936089515686
    2. 'current' → logprob: -1.514936089515686
    3. 'all' → logprob: -1.764936089515686
    4. ' current' → logprob: -5.2649359703063965
    5. ' all' → logprob: -5.7649359703063965
    6. ' self' → logprob: -6.0149359703063965
    7. '==' → logprob: -7.7649359703063965
    8. '           ' → logprob: -9.139936447143555
    9. ' ==' → logprob: -10.264936447143555
    10. 'and' → logprob: -10.264936447143555

Token 928: ' treasures' (ID: 82685)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.1165042445063591
    2. 'tre' → logprob: -2.616504192352295
    3. ' treasures' → logprob: -3.366504192352295
    4. ' and' → logprob: -6.866504192352295
    5. '_' → logprob: -7.866504192352295
    6. 'and' → logprob: -7.991504192352295
    7. 't' → logprob: -8.866504669189453
    8. 'Treas' → logprob: -9.116504669189453
    9. '       ' → logprob: -9.366504669189453
    10. '   ' → logprob: -9.866504669189453

Token 929: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.21259042620658875
    2. 'and' → logprob: -1.7125904560089111
    3. '           ' → logprob: -4.587590217590332
    4. ' if' → logprob: -7.712590217590332
    5. 'if' → logprob: -8.087590217590332
    6. '       ' → logprob: -9.212590217590332
    7. ',' → logprob: -10.337590217590332
    8. '               ' → logprob: -10.462590217590332
    9. '          ' → logprob: -12.212590217590332
    10. '        ' → logprob: -12.462590217590332

Token 930: ' currently' (ID: 6821)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.1602860689163208
    2. ' current' → logprob: -1.9102860689163208
    3. '           ' → logprob: -9.785285949707031
    4. 'return' → logprob: -12.660285949707031
    5. ' return' → logprob: -14.410285949707031
    6. '
' → logprob: -14.535285949707031
    7. 'returned' → logprob: -14.535285949707031
    8. '(current' → logprob: -15.535285949707031
    9. '               ' → logprob: -15.910285949707031
    10. '   ' → logprob: -16.53528594970703

Token 931: ' at' (ID: 540)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5830180048942566
    2. ' at' → logprob: -1.4580180644989014
    3. 'at' → logprob: -2.0830180644989014
    4. ' current' → logprob: -2.8330180644989014
    5. 'position' → logprob: -3.8330180644989014
    6. ' is' → logprob: -6.458017826080322
    7. 'is' → logprob: -7.583017826080322
    8. ' are' → logprob: -8.20801830291748
    9. '.current' → logprob: -8.20801830291748
    10. ' position' → logprob: -8.33301830291748

Token 932: ' entrance' (ID: 27326)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01815614476799965
    2. ' self' → logprob: -4.018156051635742
    3. '           ' → logprob: -12.643156051635742
    4. '(self' → logprob: -13.018156051635742
    5. '   ' → logprob: -14.893156051635742
    6. '       ' → logprob: -16.143156051635742
    7. '
' → logprob: -16.518156051635742
    8. '	self' → logprob: -16.518156051635742
    9. '0' → logprob: -16.893156051635742
    10. 'the' → logprob: -17.143156051635742

Token 933: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029592987149953842
    2. ' and' → logprob: -3.904592990875244
    3. '       ' → logprob: -4.904592990875244
    4. ' if' → logprob: -6.779592990875244
    5. '
' → logprob: -8.404592514038086
    6. 'and' → logprob: -9.279592514038086
    7. ',' → logprob: -9.779592514038086
    8. '          ' → logprob: -10.904592514038086
    9. '<|end|>' → logprob: -11.154592514038086
    10. ' or' → logprob: -11.279592514038086

Token 934: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.268254896393046e-05
    2. '       ' → logprob: -10.500082969665527
    3. ' if' → logprob: -10.750082969665527
    4. 'if' → logprob: -10.875082969665527
    5. '
' → logprob: -11.250082969665527
    6. '```' → logprob: -14.500082969665527
    7. '            
' → logprob: -14.500082969665527
    8. '               ' → logprob: -14.875082969665527
    9. '          ' → logprob: -15.500082969665527
    10. '   ' → logprob: -15.750082969665527

Token 935: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7735557556152344
    2. '           ' → logprob: -1.0235557556152344
    3. ' if' → logprob: -1.7735557556152344
    4. '       ' → logprob: -4.648555755615234
    5. '               ' → logprob: -12.023555755615234
    6. '   ' → logprob: -12.648555755615234
    7. '          ' → logprob: -14.023555755615234
    8. '```' → logprob: -15.273555755615234
    9. ' ' → logprob: -15.398555755615234
    10. '        ' → logprob: -15.773555755615234

Token 936: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0181704293936491
    2. ' current' → logprob: -4.018170356750488
    3. 'len' → logprob: -11.143170356750488
    4. '           ' → logprob: -12.768170356750488
    5. '(current' → logprob: -13.268170356750488
    6. ' len' → logprob: -14.268170356750488
    7. '   ' → logprob: -15.018170356750488
    8. '
' → logprob: -15.268170356750488
    9. '               ' → logprob: -15.518170356750488
    10. ' ' → logprob: -17.143171310424805

Token 937: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -9.13388703338569e-06
    2. '.' → logprob: -12.625009536743164
    3. ' .' → logprob: -12.625009536743164
    4. '.vis' → logprob: -13.750009536743164
    5. 'position' → logprob: -14.375009536743164
    6. '.positions' → logprob: -15.500009536743164
    7. '.location' → logprob: -15.625009536743164
    8. '.visit' → logprob: -16.375009536743164
    9. '.state' → logprob: -16.625009536743164
    10. '.status' → logprob: -17.125009536743164

Token 938: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.011048054322600365
    2. '==' → logprob: -4.511047840118408
    3. ' ' → logprob: -16.76104736328125
    4. ')==' → logprob: -17.01104736328125
    5. '=' → logprob: -17.26104736328125
    6. '==(' → logprob: -17.26104736328125
    7. ' =' → logprob: -18.01104736328125
    8. '===' → logprob: -18.26104736328125
    9. ')' → logprob: -18.63604736328125
    10. '==
' → logprob: -18.88604736328125

Token 939: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.38687410950660706
    2. 'self' → logprob: -1.1368740797042847
    3. '(self' → logprob: -12.886874198913574
    4. ' (' → logprob: -14.886874198913574
    5. '           ' → logprob: -16.261873245239258
    6. '	self' → logprob: -16.636873245239258
    7. '(' → logprob: -17.636873245239258
    8. '   ' → logprob: -18.886873245239258
    9. '               ' → logprob: -19.011873245239258
    10. '=self' → logprob: -19.136873245239258

Token 940: '.lab' (ID: 90464)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0018359452951699495
    2. '.lab' → logprob: -6.751835823059082
    3. 'lab' → logprob: -7.751835823059082
    4. 'entr' → logprob: -8.376835823059082
    5. '.l' → logprob: -13.126835823059082
    6. '.ent' → logprob: -13.501835823059082
    7. '.en' → logprob: -14.376835823059082
    8. '.enter' → logprob: -15.001835823059082
    9. 'Lab' → logprob: -15.251835823059082
    10. '```' → logprob: -16.6268367767334

Token 941: 'yrinth' (ID: 113153)
  Prédit: 'yrinth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yrinth' → logprob: -0.00011975488450843841
    2. 'ir' → logprob: -10.375120162963867
    3. 'irth' → logprob: -10.375120162963867
    4. 'entr' → logprob: -10.875120162963867
    5. 'rin' → logprob: -11.625120162963867
    6. 'yr' → logprob: -11.750120162963867
    7. 'r' → logprob: -12.000120162963867
    8. 'ynth' → logprob: -12.625120162963867
    9. '```' → logprob: -13.500120162963867
    10. 'y' → logprob: -13.500120162963867

Token 942: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.3902033970225602e-05
    2. 'entr' → logprob: -11.750014305114746
    3. ' .' → logprob: -12.375014305114746
    4. '.ent' → logprob: -14.250014305114746
    5. '   ' → logprob: -14.875014305114746
    6. '.enter' → logprob: -15.625014305114746
    7. '.en' → logprob: -16.37501335144043
    8. '
' → logprob: -16.87501335144043
    9. '```' → logprob: -17.25001335144043
    10. '       ' → logprob: -17.50001335144043

Token 943: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -6.034592388459714e-06
    2. ' entrance' → logprob: -12.250005722045898
    3. 'entrée' → logprob: -14.750005722045898
    4. 'Entrance' → logprob: -15.000005722045898
    5. 'ent' → logprob: -15.875005722045898
    6. '.' → logprob: -16.1250057220459
    7. '_' → logprob: -16.3750057220459
    8. 'entrant' → logprob: -17.0000057220459
    9. 'entrada' → logprob: -17.8750057220459
    10. '
' → logprob: -18.0000057220459

Token 944: 'ance' (ID: 766)
  Prédit: 'ance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -7.226628895296017e-06
    2. 'ace' → logprob: -13.125007629394531
    3. '
' → logprob: -13.750007629394531
    4. '   ' → logprob: -13.750007629394531
    5. 'a' → logprob: -14.250007629394531
    6. 'rance' → logprob: -14.625007629394531
    7. 'ence' → logprob: -15.125007629394531
    8. 'ANCE' → logprob: -15.500007629394531
    9. 'an' → logprob: -15.875007629394531
    10. '#' → logprob: -15.875007629394531

Token 945: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07896073162555695
    2. 'and' → logprob: -2.578960657119751
    3. '           ' → logprob: -9.953960418701172
    4. '               ' → logprob: -10.828960418701172
    5. '       ' → logprob: -13.703960418701172
    6. '              ' → logprob: -14.203960418701172
    7. '          ' → logprob: -14.578960418701172
    8. '            ' → logprob: -14.578960418701172
    9. '	and' → logprob: -15.953960418701172
    10. '      ' → logprob: -16.078960418701172

Token 946: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0012057077838107944
    2. ' current' → logprob: -6.751205921173096
    3. 'self' → logprob: -10.751205444335938
    4. '           ' → logprob: -11.376205444335938
    5. '   ' → logprob: -13.751205444335938
    6. '       ' → logprob: -14.251205444335938
    7. 'len' → logprob: -14.626205444335938
    8. '               ' → logprob: -15.126205444335938
    9. '                   ' → logprob: -17.126205444335938
    10. ' self' → logprob: -17.126205444335938

Token 947: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -7.159660890465602e-05
    2. '.' → logprob: -9.62507152557373
    3. 'visited' → logprob: -13.00007152557373
    4. ' .' → logprob: -14.00007152557373
    5. '.t' → logprob: -14.25007152557373
    6. '.visit' → logprob: -14.25007152557373
    7. '.completed' → logprob: -15.25007152557373
    8. '.has' → logprob: -15.62507152557373
    9. '.v' → logprob: -15.62507152557373
    10. '.visible' → logprob: -16.000072479248047

Token 948: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -6.861651490908116e-05
    2. 'isted' → logprob: -9.625068664550781
    3. '_' → logprob: -13.500068664550781
    4. 'visited' → logprob: -15.250068664550781
    5. 'ITED' → logprob: -15.625068664550781
    6. '.vis' → logprob: -15.875068664550781
    7. 'it' → logprob: -16.00006866455078
    8. 'itted' → logprob: -16.25006866455078
    9. 'its' → logprob: -16.37506866455078
    10. 'i' → logprob: -16.75006866455078

Token 949: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -2.935296834039036e-06
    2. '_' → logprob: -13.00000286102295
    3. 't' → logprob: -14.87500286102295
    4. '_f' → logprob: -16.375003814697266
    5. '{' → logprob: -17.250003814697266
    6. ' _' → logprob: -17.375003814697266
    7. 's' → logprob: -17.625003814697266
    8. '_
' → logprob: -17.875003814697266
    9. '\' → logprob: -18.125003814697266
    10. '_s' → logprob: -18.250003814697266

Token 950: 'reas' (ID: 20712)
  Prédit: 'reas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reas' → logprob: -0.0005244385101832449
    2. 're' → logprob: -7.750524520874023
    3. 'e' → logprob: -9.875524520874023
    4. 'asures' → logprob: -10.625524520874023
    5. 'res' → logprob: -11.500524520874023
    6. 'r' → logprob: -12.375524520874023
    7. 'rea' → logprob: -13.125524520874023
    8. ' treasures' → logprob: -15.000524520874023
    9. '
' → logprob: -15.750524520874023
    10. '_' → logprob: -15.750524520874023

Token 951: 'ures' (ID: 1609)
  Prédit: 'ures'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ures' → logprob: -0.00019567293929867446
    2. 'ues' → logprob: -8.750195503234863
    3. 'es' → logprob: -10.625195503234863
    4. 's' → logprob: -12.500195503234863
    5. '_' → logprob: -13.000195503234863
    6. 'uses' → logprob: -13.750195503234863
    7. 'asures' → logprob: -14.000195503234863
    8. 'ure' → logprob: -14.125195503234863
    9. 'u' → logprob: -14.625195503234863
    10. 'ores' → logprob: -14.875195503234863

Token 952: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.012697055004537106
    2. ' ==' → logprob: -4.387697219848633
    3. '=' → logprob: -8.637697219848633
    4. '==
' → logprob: -12.762697219848633
    5. ')==' → logprob: -13.387697219848633
    6. ')' → logprob: -13.762697219848633
    7. '>=' → logprob: -14.262697219848633
    8. '===' → logprob: -14.637697219848633
    9. '       ' → logprob: -14.637697219848633
    10. '   ' → logprob: -14.762697219848633

Token 953: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015024791937321424
    2. ' self' → logprob: -6.501502513885498
    3. '(self' → logprob: -16.751502990722656
    4. '           ' → logprob: -19.501502990722656
    5. '       ' → logprob: -19.751502990722656
    6. '=self' → logprob: -20.001502990722656
    7. '	self' → logprob: -20.626502990722656
    8. '   ' → logprob: -20.876502990722656
    9. 's' → logprob: -21.751502990722656
    10. '
' → logprob: -21.876502990722656

Token 954: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -0.014175849966704845
    2. 'total' → logprob: -4.264175891876221
    3. 'otal' → logprob: -11.764175415039062
    4. '.t' → logprob: -12.889175415039062
    5. '.' → logprob: -13.639175415039062
    6. 'tot' → logprob: -15.264175415039062
    7. ' total' → logprob: -15.514175415039062
    8. '	total' → logprob: -15.639175415039062
    9. ',total' → logprob: -16.764175415039062
    10. '(total' → logprob: -16.889175415039062

Token 955: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.625
    3. 't' → logprob: -16.25
    4. ')' → logprob: -16.875
    5. 'Treas' → logprob: -17.125
    6. 'tre' → logprob: -18.25
    7. '\' → logprob: -18.875
    8. 's' → logprob: -19.25
    9. ' _' → logprob: -19.625
    10. '_
' → logprob: -20.0

Token 956: 'reas' (ID: 20712)
  Prédit: 'reas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reas' → logprob: -0.0015861510764807463
    2. 're' → logprob: -6.626585960388184
    3. 'tre' → logprob: -8.876585960388184
    4. 'Treas' → logprob: -10.251585960388184
    5. 'res' → logprob: -10.751585960388184
    6. '_t' → logprob: -11.501585960388184
    7. '_re' → logprob: -11.626585960388184
    8. 'reat' → logprob: -11.751585960388184
    9. 'asures' → logprob: -11.876585960388184
    10. 'rea' → logprob: -12.376585960388184

Token 957: 'ures' (ID: 1609)
  Prédit: 'ures'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ures' → logprob: -0.0661897361278534
    2. 's' → logprob: -2.816189765930176
    3. 'asures' → logprob: -5.691189765930176
    4. 'es' → logprob: -7.316189765930176
    5. 'ues' → logprob: -10.191189765930176
    6. 'sure' → logprob: -10.691189765930176
    7. 'uses' → logprob: -11.066189765930176
    8. 'ure' → logprob: -11.191189765930176
    9. '```' → logprob: -11.191189765930176
    10. '``' → logprob: -11.441189765930176

Token 958: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06378016620874405
    2. ':
' → logprob: -3.0637800693511963
    3. ' and' → logprob: -4.313780307769775
    4. 'and' → logprob: -7.188780307769775
    5. '           ' → logprob: -7.438780307769775
    6. '       ' → logprob: -9.063779830932617
    7. '):' → logprob: -9.563779830932617
    8. ':return' → logprob: -9.813779830932617
    9. '               ' → logprob: -9.938779830932617
    10. '):
' → logprob: -10.438779830932617

Token 959: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002084277366520837
    2. '           ' → logprob: -8.500208854675293
    3. '                   ' → logprob: -13.125208854675293
    4. '              ' → logprob: -14.125208854675293
    5. ' return' → logprob: -14.500208854675293
    6. '
' → logprob: -14.875208854675293
    7. '                       ' → logprob: -15.000208854675293
    8. '                ' → logprob: -15.000208854675293
    9. '                
' → logprob: -15.125208854675293
    10. 'return' → logprob: -15.250208854675293

Token 960: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05805017426609993
    2. '               ' → logprob: -3.5580501556396484
    3. '                   ' → logprob: -4.058050155639648
    4. ' return' → logprob: -4.558050155639648
    5. '           ' → logprob: -9.058050155639648
    6. '   ' → logprob: -11.683050155639648
    7. '	return' → logprob: -12.183050155639648
    8. '                       ' → logprob: -12.308050155639648
    9. ':return' → logprob: -14.058050155639648
    10. '                           ' → logprob: -14.433050155639648

Token 961: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.4740770161151886
    2. ' True' → logprob: -0.9740769863128662
    3. '(True' → logprob: -18.849077224731445
    4. '=True' → logprob: -20.474077224731445
    5. '   ' → logprob: -21.099077224731445
    6. 'Tr' → logprob: -21.474077224731445
    7. 'true' → logprob: -22.349077224731445
    8. ' ' → logprob: -23.474077224731445
    9. ' Tru' → logprob: -23.474077224731445
    10. '_true' → logprob: -23.474077224731445

Token 962: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4835827350616455
    2. '
' → logprob: -0.9835827350616455
    3. '            
' → logprob: -5.358582496643066
    4. '       ' → logprob: -6.483582496643066
    5. '        
' → logprob: -6.608582496643066
    6. '    
' → logprob: -6.608582496643066
    7. '  
' → logprob: -8.108582496643066
    8. ' 
' → logprob: -9.483582496643066
    9. '\n' → logprob: -9.983582496643066
    10. '           
' → logprob: -10.983582496643066

Token 963: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029417868703603745
    2. '
' → logprob: -4.279417991638184
    3. '       ' → logprob: -4.779417991638184
    4. '            
' → logprob: -5.654417991638184
    5. '        
' → logprob: -6.029417991638184
    6. '    
' → logprob: -7.529417991638184
    7. '  
' → logprob: -9.529417991638184
    8. '<|end|>' → logprob: -9.904417991638184
    9. '```' → logprob: -10.279417991638184
    10. '               ' → logprob: -10.654417991638184

Token 964: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.43318483233451843
    2. '           ' → logprob: -1.5581848621368408
    3. ' for' → logprob: -2.308184862136841
    4. '       ' → logprob: -3.183184862136841
    5. '            
' → logprob: -9.933184623718262
    6. 'next' → logprob: -10.308184623718262
    7. '   ' → logprob: -10.558184623718262
    8. '
' → logprob: -11.308184623718262
    9. '        
' → logprob: -11.558184623718262
    10. '	for' → logprob: -12.558184623718262

Token 965: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.023973282426595688
    2. ' next' → logprob: -3.773973226547241
    3. 'neighbor' → logprob: -8.02397346496582
    4. ' nxt' → logprob: -8.77397346496582
    5. 'n' → logprob: -9.39897346496582
    6. 'state' → logprob: -9.64897346496582
    7. 'new' → logprob: -9.89897346496582
    8. 'ns' → logprob: -10.14897346496582
    9. ' neighbor' → logprob: -12.52397346496582
    10. ' state' → logprob: -13.77397346496582

Token 966: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.003413562895730138
    2. '_' → logprob: -5.753413677215576
    3. '_states' → logprob: -9.503413200378418
    4. 'state' → logprob: -9.628413200378418
    5. '_token' → logprob: -9.753413200378418
    6. ' _' → logprob: -11.253413200378418
    7. '```' → logprob: -12.378413200378418
    8. '_step' → logprob: -13.003413200378418
    9. '`' → logprob: -13.128413200378418
    10. ' in' → logprob: -13.253413200378418

Token 967: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001929228543303907
    2. 'in' → logprob: -6.25192928314209
    3. ' ' → logprob: -15.12692928314209
    4. '	in' → logprob: -15.37692928314209
    5. ',' → logprob: -17.376928329467773
    6. '_in' → logprob: -17.626928329467773
    7. 'space' → logprob: -17.751928329467773
    8. ' 
' → logprob: -17.876928329467773
    9. ' ' → logprob: -18.001928329467773
    10. '  ' → logprob: -18.501928329467773

Token 968: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12693093717098236
    2. ' self' → logprob: -2.1269309520721436
    3. '           ' → logprob: -13.251931190490723
    4. '(self' → logprob: -14.126931190490723
    5. '[self' → logprob: -15.501931190490723
    6. '       ' → logprob: -16.876930236816406
    7. '               ' → logprob: -17.126930236816406
    8. 'queue' → logprob: -17.251930236816406
    9. '   ' → logprob: -17.251930236816406
    10. '	self' → logprob: -17.376930236816406

Token 969: '.lab' (ID: 90464)
  Prédit: '.lab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lab' → logprob: -0.0017070822650566697
    2. 'lab' → logprob: -6.376707077026367
    3. ' lab' → logprob: -13.251707077026367
    4. '_lab' → logprob: -13.626707077026367
    5. 'self' → logprob: -14.126707077026367
    6. '.l' → logprob: -14.501707077026367
    7. 'Lab' → logprob: -15.251707077026367
    8. ' лаб' → logprob: -15.626707077026367
    9. 'labor' → logprob: -16.501707077026367
    10. '.' → logprob: -16.626707077026367

Token 970: 'yrinth' (ID: 113153)
  Prédit: 'yrinth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yrinth' → logprob: -0.2678011655807495
    2. 'ab' → logprob: -1.6428011655807495
    3. 'irst' → logprob: -3.392801284790039
    4. 'arch' → logprob: -6.142801284790039
    5. 'ymph' → logprob: -6.767801284790039
    6. '_states' → logprob: -7.142801284790039
    7. 'abs' → logprob: -7.267801284790039
    8. 'ir' → logprob: -8.392801284790039
    9. 'orph' → logprob: -8.642801284790039
    10. '   ' → logprob: -9.142801284790039

Token 971: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -2.4391956685576588e-05
    2. 'next' → logprob: -10.875024795532227
    3. '.' → logprob: -12.250024795532227
    4. ' .' → logprob: -14.625024795532227
    5. ' next' → logprob: -16.500024795532227
    6. '   ' → logprob: -17.500024795532227
    7. '	next' → logprob: -18.000024795532227
    8. ').' → logprob: -18.125024795532227
    9. '```' → logprob: -18.250024795532227
    10. '[next' → logprob: -18.625024795532227

Token 972: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -1.747814349073451e-05
    2. '_state' → logprob: -11.000017166137695
    3. 'States' → logprob: -15.875017166137695
    4. '(_' → logprob: -16.375017166137695
    5. '_' → logprob: -16.500017166137695
    6. ')_' → logprob: -16.750017166137695
    7. '```' → logprob: -16.750017166137695
    8. 'states' → logprob: -17.375017166137695
    9. '_st' → logprob: -17.500017166137695
    10. '(next' → logprob: -17.625017166137695

Token 973: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -1.9981420336989686e-05
    2. 'current' → logprob: -11.750020027160645
    3. ' (' → logprob: -12.000020027160645
    4. '(' → logprob: -13.000020027160645
    5. '[current' → logprob: -13.375020027160645
    6. ' current' → logprob: -13.750020027160645
    7. ')' → logprob: -15.750020027160645
    8. '           ' → logprob: -15.875020027160645
    9. '(queue' → logprob: -15.875020027160645
    10. ',current' → logprob: -15.875020027160645

Token 974: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03458961471915245
    2. '):' → logprob: -3.5345895290374756
    3. ':
' → logprob: -6.034589767456055
    4. ':' → logprob: -6.409589767456055
    5. '):
' → logprob: -8.034589767456055
    6. '():
' → logprob: -8.659589767456055
    7. '           ' → logprob: -8.659589767456055
    8. '       ' → logprob: -9.784589767456055
    9. '               ' → logprob: -10.034589767456055
    10. ')' → logprob: -12.159589767456055

Token 975: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002251483965665102
    2. ' if' → logprob: -6.127251625061035
    3. 'if' → logprob: -10.252251625061035
    4. '           ' → logprob: -10.752251625061035
    5. '```' → logprob: -12.377251625061035
    6. '	           ' → logprob: -13.252251625061035
    7. '<|end|>' → logprob: -13.752251625061035
    8. '                   ' → logprob: -13.877251625061035
    9. '              ' → logprob: -15.002251625061035
    10. '		       ' → logprob: -15.377251625061035

Token 976: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.32374265789985657
    2. '               ' → logprob: -1.3237426280975342
    3. 'if' (adapté à ' if') → logprob: -4.698742866516113
    4. '           ' → logprob: -6.698742866516113
    5. '                   ' → logprob: -9.448742866516113
    6. '   ' → logprob: -13.073742866516113
    7. '                ' → logprob: -13.448742866516113
    8. '	           ' → logprob: -14.198742866516113
    9. '```' → logprob: -14.323742866516113
    10. '
' → logprob: -14.698742866516113

Token 977: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.02975349873304367
    2. 'next' → logprob: -3.5297534465789795
    3. '(next' → logprob: -13.154753684997559
    4. ' not' → logprob: -15.029753684997559
    5. '	next' → logprob: -15.279753684997559
    6. '[next' → logprob: -15.529753684997559
    7. '.next' → logprob: -16.154752731323242
    8. '_next' → logprob: -16.779752731323242
    9. 'not' → logprob: -17.154752731323242
    10. ',next' → logprob: -18.154752731323242

Token 978: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -3.3451433409936726e-05
    2. 'state' → logprob: -10.875033378601074
    3. '_states' → logprob: -12.500033378601074
    4. '_next' → logprob: -12.625033378601074
    5. '_' → logprob: -13.250033378601074
    6. 'next' → logprob: -13.750033378601074
    7. 't' → logprob: -14.375033378601074
    8. '...' → logprob: -14.625033378601074
    9. '[next' → logprob: -14.625033378601074
    10. '._' → logprob: -14.625033378601074

Token 979: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.003178306156769395
    2. 'not' → logprob: -5.753178119659424
    3. '	not' → logprob: -15.128178596496582
    4. ' no' → logprob: -15.878178596496582
    5. ')' → logprob: -17.628177642822266
    6. ' ' → logprob: -17.753177642822266
    7. ' in' → logprob: -17.878177642822266
    8. '_not' → logprob: -18.878177642822266
    9. ':not' → logprob: -18.878177642822266
    10. '<|end|>' → logprob: -18.878177642822266

Token 980: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11583815515041351
    2. 'in' → logprob: -2.240838050842285
    3. 'visited' → logprob: -5.865838050842285
    4. ' visited' → logprob: -8.740838050842285
    5. '               ' → logprob: -12.240838050842285
    6. '<|end|>' → logprob: -12.740838050842285
    7. '                   ' → logprob: -12.990838050842285
    8. '   ' → logprob: -13.490838050842285
    9. ')' → logprob: -14.115838050842285
    10. ' ' → logprob: -14.115838050842285

Token 981: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0021852378267794847
    2. ' visited' → logprob: -6.127185344696045
    3. '
' → logprob: -16.002185821533203
    4. '   ' → logprob: -17.877185821533203
    5. 'visit' → logprob: -18.252185821533203
    6. 'Visited' → logprob: -18.877185821533203
    7. ' ' → logprob: -19.627185821533203
    8. 'vis' → logprob: -19.627185821533203
    9. 'visible' → logprob: -19.752185821533203
    10. 'seen' → logprob: -19.752185821533203

Token 982: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2126041203737259
    2. ':
' → logprob: -1.8376041650772095
    3. '                   ' → logprob: -3.71260404586792
    4. '):
' → logprob: -6.08760404586792
    5. '                       ' → logprob: -6.58760404586792
    6. '<|end|>' → logprob: -6.71260404586792
    7. '):' → logprob: -7.33760404586792
    8. '               ' → logprob: -7.33760404586792
    9. ')' → logprob: -7.83760404586792
    10. ' and' → logprob: -8.087604522705078

Token 983: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.012911605648696423
    2. ' visited' → logprob: -5.137911796569824
    3. '                       ' → logprob: -5.887911796569824
    4. '               ' → logprob: -6.637911796569824
    5. 'visited' → logprob: -6.637911796569824
    6. '                    
' → logprob: -8.137911796569824
    7. '<|end|>' → logprob: -8.262911796569824
    8. '                           ' → logprob: -8.887911796569824
    9. '                ' → logprob: -8.887911796569824
    10. '                    ' → logprob: -9.012911796569824

Token 984: ' visited' (ID: 18416)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02166440337896347
    2. ' queue' → logprob: -3.8966643810272217
    3. ' visited' → logprob: -7.646664619445801
    4. '                       ' → logprob: -7.896664619445801
    5. 'queue' → logprob: -8.7716646194458
    6. 'visited' (adapté à ' visited') → logprob: -10.1466646194458
    7. '   ' → logprob: -11.1466646194458
    8. '               ' → logprob: -11.1466646194458
    9. '                    ' → logprob: -11.1466646194458
    10. '           ' → logprob: -11.3966646194458

Token 985: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00041017719195224345
    2. '.' → logprob: -7.875410079956055
    3. '                   ' → logprob: -10.875410079956055
    4. '.append' → logprob: -12.500410079956055
    5. 'add' → logprob: -12.625410079956055
    6. ' .' → logprob: -13.750410079956055
    7. '.enqueue' → logprob: -14.125410079956055
    8. '                       ' → logprob: -14.500410079956055
    9. ' add' → logprob: -14.750410079956055
    10. '.Add' → logprob: -14.875410079956055

Token 986: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.0007105246186256409
    2. '(' → logprob: -7.250710487365723
    3. '(
' → logprob: -14.500710487365723
    4. ' (' → logprob: -16.87571144104004
    5. '(n' → logprob: -18.00071144104004
    6. 'next' → logprob: -18.50071144104004
    7. '(

' → logprob: -19.25071144104004
    8. ',next' → logprob: -19.25071144104004
    9. '(new' → logprob: -20.00071144104004
    10. '[next' → logprob: -20.00071144104004

Token 987: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.750000953674316
    3. 'state' → logprob: -15.750000953674316
    4. '_token' → logprob: -17.625
    5. '_next' → logprob: -18.0
    6. '_STATE' → logprob: -18.125
    7. '_states' → logprob: -18.375
    8. '_State' → logprob: -18.875
    9. '(next' → logprob: -19.125
    10. ')' → logprob: -19.625

Token 988: ')
' (ID: 446)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.22659797966480255
    2. ')' → logprob: -1.7265980243682861
    3. ')
' → logprob: -3.726598024368286
    4. '               ' → logprob: -7.601597785949707
    5. ',' → logprob: -9.351597785949707
    6. '           ' → logprob: -9.976597785949707
    7. '<|end|>' → logprob: -10.476597785949707
    8. '                       ' → logprob: -10.601597785949707
    9. '),' → logprob: -10.726597785949707
    10. '```' → logprob: -11.601597785949707

Token 989: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.018376212567090988
    2. '				' → logprob: -4.768376350402832
    3. ' queue' → logprob: -5.143376350402832
    4. '		           ' → logprob: -6.268376350402832
    5. 'queue' → logprob: -7.268376350402832
    6. '	               ' → logprob: -8.018376350402832
    7. '			       ' → logprob: -8.518376350402832
    8. '	                   ' → logprob: -9.143376350402832
    9. '	queue' → logprob: -9.393376350402832
    10. '				   ' → logprob: -9.643376350402832

Token 990: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -5.8961017202818766e-05
    2. ' queue' → logprob: -9.750059127807617
    3. '                   ' → logprob: -14.250059127807617
    4. '               ' → logprob: -18.750059127807617
    5. '.queue' → logprob: -19.500059127807617
    6. '                       ' → logprob: -19.625059127807617
    7. '           ' → logprob: -19.750059127807617
    8. '   ' → logprob: -19.875059127807617
    9. '	queue' → logprob: -19.875059127807617
    10. '```' → logprob: -21.000059127807617

Token 991: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.3822154111694545e-05
    2. '.' → logprob: -10.500043869018555
    3. '.extend' → logprob: -11.250043869018555
    4. '.enqueue' → logprob: -13.375043869018555
    5. '.p' → logprob: -14.125043869018555
    6. '.put' → logprob: -14.875043869018555
    7. '.app' → logprob: -15.500043869018555
    8. '.push' → logprob: -15.750043869018555
    9. '.Append' → logprob: -17.000043869018555
    10. ').' → logprob: -17.125043869018555

Token 992: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -5.080963092041202e-06
    2. '(' → logprob: -12.250004768371582
    3. 'next' → logprob: -15.375004768371582
    4. ' next' → logprob: -18.8750057220459
    5. ' (' → logprob: -19.0000057220459
    6. '(
' → logprob: -19.2500057220459
    7. '[next' → logprob: -20.1250057220459
    8. ',next' → logprob: -21.1250057220459
    9. '(n' → logprob: -21.7500057220459
    10. '	next' → logprob: -22.3750057220459

Token 993: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -1.8624639324116288e-06
    2. 'state' → logprob: -14.250001907348633
    3. ')' → logprob: -15.000001907348633
    4. ')_' → logprob: -15.500001907348633
    5. '_STATE' → logprob: -15.875001907348633
    6. '_states' → logprob: -16.250001907348633
    7. '```' → logprob: -16.500001907348633
    8. '_' → logprob: -16.750001907348633
    9. '_State' → logprob: -17.125001907348633
    10. '   ' → logprob: -17.250001907348633

Token 994: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. ')
' → logprob: -12.500004768371582
    3. '               ' → logprob: -14.750004768371582
    4. '                   ' → logprob: -15.125004768371582
    5. ' )' → logprob: -15.250004768371582
    6. '       ' → logprob: -16.1250057220459
    7. '))' → logprob: -17.0000057220459
    8. '                       ' → logprob: -17.3750057220459
    9. '           ' → logprob: -17.5000057220459
    10. ')`' → logprob: -18.0000057220459

Token 995: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023429463617503643
    2. '
' → logprob: -7.62734317779541
    3. '        
' → logprob: -7.62734317779541
    4. '<|end|>' → logprob: -8.25234317779541
    5. '	' → logprob: -8.37734317779541
    6. '               ' → logprob: -8.75234317779541
    7. '   ' → logprob: -8.75234317779541
    8. 'return' → logprob: -9.50234317779541
    9. '    
' → logprob: -9.75234317779541
    10. '                   ' → logprob: -9.87734317779541

Token 996: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07972054928541183
    2. 'return' (adapté à ' return') → logprob: -2.5797204971313477
    3. '
' → logprob: -7.829720497131348
    4. '   ' → logprob: -8.454720497131348
    5. ' return' → logprob: -8.829720497131348
    6. '           ' → logprob: -10.704720497131348
    7. '               ' → logprob: -10.829720497131348
    8. '        
' → logprob: -11.454720497131348
    9. '```' → logprob: -12.079720497131348
    10. '	return' → logprob: -12.954720497131348

Token 997: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0004306692280806601
    2. ' False' → logprob: -7.750430583953857
    3. '(False' → logprob: -19.125431060791016
    4. 'false' → logprob: -22.125431060791016
    5. '=False' → logprob: -23.125431060791016
    6. '_false' → logprob: -23.625431060791016
    7. '   ' → logprob: -24.000431060791016
    8. 'True' → logprob: -25.250431060791016
    9. '.False' → logprob: -25.750431060791016
    10. 'FALSE' → logprob: -26.625431060791016

Token 998: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 999: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16230079531669617
    2. '<|end|>' → logprob: -2.1623008251190186
    3. 'def' → logprob: -3.4123008251190186
    4. '```' → logprob: -6.7873005867004395
    5. '<|end|>' → logprob: -7.9123005867004395
    6. 'import' → logprob: -9.037301063537598
    7. '
' → logprob: -10.162301063537598
    8. 'if' → logprob: -10.537301063537598
    9. '...' → logprob: -10.912301063537598
    10. 'data' → logprob: -11.287301063537598

Token 1000: ' Factory' (ID: 28905)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5847386121749878
    2. '#' → logprob: -0.8347386121749878
    3. 'import' → logprob: -5.709738731384277
    4. '<|end|>' → logprob: -6.209738731384277
    5. '```' → logprob: -6.209738731384277
    6. 'if' → logprob: -6.584738731384277
    7. '#!/' → logprob: -11.584738731384277
    8. '
' → logprob: -11.834738731384277
    9. '...' → logprob: -12.334738731384277
    10. '<|end|>' → logprob: -12.334738731384277

Token 1001: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10023784637451172
    2. 'class' → logprob: -2.3502378463745117
    3. ' def' → logprob: -11.350237846374512
    4. '(
' → logprob: -11.975237846374512
    5. ' class' → logprob: -12.225237846374512
    6. '#' → logprob: -12.975237846374512
    7. '
' → logprob: -13.350237846374512
    8. '<|end|>' → logprob: -13.975237846374512
    9. 'from' → logprob: -14.225237846374512
    10. '(' → logprob: -14.350237846374512

Token 1002: ' parse' (ID: 8420)
  Prédit: 'create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.03371439874172211
    2. 'def' → logprob: -4.408714294433594
    3. 'generate' → logprob: -4.783714294433594
    4. 'class' → logprob: -5.033714294433594
    5. ' create' → logprob: -5.283714294433594
    6. 'build' → logprob: -7.908714294433594
    7. 'provide' → logprob: -8.033714294433594
    8. 'produce' → logprob: -9.158714294433594
    9. 'parse' → logprob: -9.783714294433594
    10. '...' → logprob: -10.783714294433594

Token 1003: ' input' (ID: 3422)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.028655357658863068
    2. 'class' → logprob: -3.6536552906036377
    3. '<|end|>' → logprob: -6.278655529022217
    4. ' def' → logprob: -8.528655052185059
    5. '```' → logprob: -9.528655052185059
    6. '
' → logprob: -9.778655052185059
    7. 'code' → logprob: -10.153655052185059
    8. '<|end|>' → logprob: -10.778655052185059
    9. 'input' → logprob: -11.153655052185059
    10. '_code' → logprob: -11.903655052185059

Token 1004: ' into' (ID: 1511)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.029764382168650627
    2. 'def' → logprob: -3.529764413833618
    3. '
' → logprob: -12.279764175415039
    4. '(class' → logprob: -12.779764175415039
    5. '(
' → logprob: -12.779764175415039
    6. ' class' → logprob: -12.904764175415039
    7. '(' → logprob: -15.279764175415039
    8. ')' → logprob: -15.654764175415039
    9. '```' → logprob: -16.02976417541504
    10. '   ' → logprob: -16.27976417541504

Token 1005: ' labyrinth' (ID: 184257)
  Prédit: 'Frag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Frag' → logprob: -0.3711700737476349
    2. 'Lab' → logprob: -1.6211700439453125
    3. 'a' → logprob: -2.3711700439453125
    4. 'lab' → logprob: -3.9961700439453125
    5. 'frag' → logprob: -7.7461700439453125
    6. ' Frag' → logprob: -9.371170043945312
    7. 'the' → logprob: -9.996170043945312
    8. 'grid' → logprob: -10.371170043945312
    9. 'def' → logprob: -10.996170043945312
    10. 'code' → logprob: -11.246170043945312

Token 1006: ' objects' (ID: 11736)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0007239909609779716
    2. 'def' → logprob: -7.250723838806152
    3. ' class' → logprob: -11.875723838806152
    4. '
' → logprob: -11.875723838806152
    5. ',class' → logprob: -17.12572479248047
    6. '```' → logprob: -17.62572479248047
    7. '<class' → logprob: -17.75072479248047
    8. ')' → logprob: -17.87572479248047
    9. '(class' → logprob: -18.00072479248047
    10. '"class' → logprob: -18.12572479248047

Token 1007: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.8670179997570813e-05
    2. '
' → logprob: -11.000019073486328
    3. 'def' → logprob: -13.250019073486328
    4. ' class' → logprob: -15.750019073486328
    5. '<class' → logprob: -19.000019073486328
    6. '"class' → logprob: -19.750019073486328
    7. '```' → logprob: -20.250019073486328
    8. '  
' → logprob: -20.875019073486328
    9. ',class' → logprob: -21.000019073486328
    10. 'from' → logprob: -21.750019073486328

Token 1008: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.8624639324116288e-06
    2. 'def' → logprob: -13.250001907348633
    3. ' class' → logprob: -19.125001907348633
    4. '```' → logprob: -20.750001907348633
    5. '
' → logprob: -21.125001907348633
    6. 'from' → logprob: -21.750001907348633
    7. '"class' → logprob: -22.875001907348633
    8. '<class' → logprob: -23.500001907348633
    9. '@dat' → logprob: -23.625001907348633
    10. 'Class' → logprob: -24.125001907348633

Token 1009: ' Lab' (ID: 19557)
  Prédit: 'Lab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Lab' → logprob: -0.0025319026317447424
    2. 'Frag' → logprob: -6.252532005310059
    3. 'Input' → logprob: -8.002532005310059
    4. ' Lab' → logprob: -8.377532005310059
    5. 'Parser' → logprob: -10.502532005310059
    6. 'Factory' → logprob: -12.752532005310059
    7. ' Frag' → logprob: -13.002532005310059
    8. '_lab' → logprob: -13.502532005310059
    9. 'Maze' → logprob: -14.377532005310059
    10. 'Fragment' → logprob: -15.002532005310059

Token 1010: 'yrinth' (ID: 113153)
  Prédit: 'yrinth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yrinth' → logprob: -2.618001053633634e-05
    2. 'yr' → logprob: -10.625025749206543
    3. 'y' → logprob: -14.000025749206543
    4. '```' → logprob: -15.250025749206543
    5. 'ir' → logprob: -15.500025749206543
    6. 'Lab' → logprob: -16.00002670288086
    7. 'YR' → logprob: -16.75002670288086
    8. '_lab' → logprob: -17.12502670288086
    9. 'ryn' → logprob: -17.25002670288086
    10. '**' → logprob: -17.62502670288086

Token 1011: 'Factory' (ID: 4870)
  Prédit: 'Factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factory' → logprob: -0.2521917521953583
    2. 'Parser' → logprob: -1.5021917819976807
    3. 'Builder' → logprob: -8.377191543579102
    4. 'Input' → logprob: -11.127191543579102
    5. 'Reader' → logprob: -11.252191543579102
    6. ':
' → logprob: -13.127191543579102
    7. 'Solver' → logprob: -14.127191543579102
    8. 'Loader' → logprob: -14.752191543579102
    9. '(factory' → logprob: -15.252191543579102
    10. ':' → logprob: -15.377191543579102

Token 1012: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10025627166032791
    2. ':
' → logprob: -2.3502562046051025
    3. '):
' → logprob: -11.600255966186523
    4. ':def' → logprob: -11.600255966186523
    5. '():
' → logprob: -11.850255966186523
    6. '```' → logprob: -12.350255966186523
    7. ':

' → logprob: -12.475255966186523
    8. '<|end|>' → logprob: -12.475255966186523
    9. 'def' → logprob: -12.725255966186523
    10. '(object' → logprob: -12.975255966186523

Token 1013: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00032366468803957105
    2. 'class' → logprob: -8.750323295593262
    3. 'def' → logprob: -9.125323295593262
    4. '```' → logprob: -9.875323295593262
    5. ' def' → logprob: -12.750323295593262
    6. ' class' → logprob: -14.125323295593262
    7. '	def' → logprob: -14.500323295593262
    8. '   ' → logprob: -15.250323295593262
    9. 'classmethod' → logprob: -16.000324249267578
    10. '    
' → logprob: -17.125324249267578

Token 1014: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3308544158935547
    2. ' def' → logprob: -1.3308544158935547
    3. '   ' → logprob: -4.080854415893555
    4. '@' (adapté à ' @') → logprob: -7.705854415893555
    5. ' @' → logprob: -9.330854415893555
    6. '```' → logprob: -12.580854415893555
    7. 'class' → logprob: -13.080854415893555
    8. 'staticmethod' → logprob: -13.705854415893555
    9. ' ' → logprob: -16.080854415893555
    10. 'classmethod' → logprob: -16.205854415893555

Token 1015: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -3.8889261304575484e-06
    2. 'classmethod' → logprob: -12.500003814697266
    3. 'static' → logprob: -16.250003814697266
    4. 'dat' → logprob: -19.375003814697266
    5. ' static' → logprob: -22.625003814697266
    6. 'property' → logprob: -25.125003814697266
    7. 'stat' → logprob: -26.500003814697266
    8. 'Static' → logprob: -26.625003814697266
    9. '_static' → logprob: -27.125003814697266
    10. 'st' → logprob: -27.375003814697266

Token 1016: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0692659243941307
    2. '
' → logprob: -2.819265842437744
    3. ' def' → logprob: -4.944265842437744
    4. '    
' → logprob: -9.444266319274902
    5. '   ' → logprob: -10.319266319274902
    6. '  
' → logprob: -10.819266319274902
    7. '(def' → logprob: -12.569266319274902
    8. '   
' → logprob: -12.694266319274902
    9. '(' → logprob: -12.944266319274902
    10. '_def' → logprob: -13.194266319274902

Token 1017: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0034062094055116177
    2. ' def' → logprob: -5.753406047821045
    3. '   ' → logprob: -8.503406524658203
    4. '
' → logprob: -10.628406524658203
    5. '	def' → logprob: -14.003406524658203
    6. ' ' → logprob: -15.378406524658203
    7. '  ' → logprob: -16.003406524658203
    8. '    
' → logprob: -16.503406524658203
    9. '_def' → logprob: -16.628406524658203
    10. '```' → logprob: -17.003406524658203

Token 1018: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00016766376211307943
    2. ' def' → logprob: -9.250167846679688
    3. 'from' → logprob: -9.625167846679688
    4. 'parse' → logprob: -12.875167846679688
    5. '
' → logprob: -13.375167846679688
    6. '   ' → logprob: -15.125167846679688
    7. 'decode' → logprob: -15.500167846679688
    8. 'create' → logprob: -15.750167846679688
    9. 'read' → logprob: -15.875167846679688
    10. '```' → logprob: -15.875167846679688

Token 1019: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.09186731278896332
    2. 'create' → logprob: -3.341867208480835
    3. 'parse' → logprob: -3.341867208480835
    4. 'read' → logprob: -4.091867446899414
    5. 'build' → logprob: -8.216867446899414
    6. 'load' → logprob: -10.716867446899414
    7. 'def' → logprob: -11.341867446899414
    8. ' from' → logprob: -11.841867446899414
    9. 'make' → logprob: -12.091867446899414
    10. 'generate' → logprob: -13.091867446899414

Token 1020: '_input' (ID: 12507)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.6840755939483643
    2. '_input' → logprob: -1.6840755939483643
    3. '_strings' → logprob: -2.6840755939483643
    4. 'input' → logprob: -2.8090755939483643
    5. 'string' → logprob: -3.0590755939483643
    6. 'lines' → logprob: -3.3090755939483643
    7. '_list' → logprob: -3.3090755939483643
    8. 'strings' → logprob: -4.184075355529785
    9. '_string' → logprob: -4.434075355529785
    10. 'stdin' → logprob: -4.559075355529785

Token 1021: '(N' (ID: 10564)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.08121281862258911
    2. '(' → logprob: -3.8312127590179443
    3. '_lines' → logprob: -4.081212997436523
    4. '():' → logprob: -4.081212997436523
    5. '(stdin' → logprob: -5.581212997436523
    6. '(grid' → logprob: -6.081212997436523
    7. '(line' → logprob: -6.081212997436523
    8. '(input' → logprob: -6.206212997436523
    9. '_line' → logprob: -6.206212997436523
    10. '(stream' → logprob: -6.581212997436523

Token 1022: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011761216446757317
    2. ':int' → logprob: -5.26176118850708
    3. ':' → logprob: -5.63676118850708
    4. '):' → logprob: -6.26176118850708
    5. ',int' → logprob: -8.261761665344238
    6. '   ' → logprob: -8.511761665344238
    7. ' ,' → logprob: -8.636761665344238
    8. ')' → logprob: -8.886761665344238
    9. '):
' → logprob: -9.261761665344238
    10. 'int' → logprob: -9.761761665344238

Token 1023: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00011832444579340518
    2. ' int' → logprob: -9.125118255615234
    3. ')' → logprob: -12.250118255615234
    4. '[int' → logprob: -13.250118255615234
    5. '
' → logprob: -14.500118255615234
    6. '   ' → logprob: -14.500118255615234
    7. '=int' → logprob: -14.625118255615234
    8. '(int' → logprob: -14.750118255615234
    9. '):
' → logprob: -15.875118255615234
    10. ':int' → logprob: -15.875118255615234

Token 1024: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.792751032160595e-05
    2. ',List' → logprob: -10.25008773803711
    3. ')' → logprob: -10.75008773803711
    4. '   ' → logprob: -11.62508773803711
    5. ',
' → logprob: -11.62508773803711
    6. ' ,' → logprob: -12.00008773803711
    7. ',int' → logprob: -13.25008773803711
    8. ',n' → logprob: -14.00008773803711
    9. ',list' → logprob: -14.12508773803711
    10. ',N' → logprob: -14.37508773803711

Token 1025: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.039319634437561
    2. 'grid' → logprob: -1.039319634437561
    3. 'lines' → logprob: -1.289319634437561
    4. ' lines' → logprob: -5.2893195152282715
    5. ' M' → logprob: -5.4143195152282715
    6. ' grid' → logprob: -5.5393195152282715
    7. 'rows' → logprob: -5.6643195152282715
    8. 'input' → logprob: -9.03931999206543
    9. '   ' → logprob: -9.91431999206543
    10. 'maze' → logprob: -11.16431999206543

Token 1026: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4391956685576588e-05
    2. ' ,' → logprob: -11.000024795532227
    3. ',List' → logprob: -12.750024795532227
    4. '   ' → logprob: -13.000024795532227
    5. ',int' → logprob: -13.875024795532227
    6. ')' → logprob: -14.625024795532227
    7. ',
' → logprob: -14.875024795532227
    8. ',n' → logprob: -15.375024795532227
    9. ':' → logprob: -16.000024795532227
    10. ',line' → logprob: -16.375024795532227

Token 1027: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004381347913295031
    2. ' int' → logprob: -5.87938117980957
    3. 'M' → logprob: -6.87938117980957
    4. ')' → logprob: -8.50438117980957
    5. '   ' → logprob: -8.62938117980957
    6. 'List' → logprob: -10.25438117980957
    7. '
' → logprob: -11.00438117980957
    8. '[int' → logprob: -11.12938117980957
    9. ' ' → logprob: -11.37938117980957
    10. 'N' → logprob: -11.37938117980957

Token 1028: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.868328920158092e-05
    2. ')' → logprob: -11.500028610229492
    3. ' ,' → logprob: -11.625028610229492
    4. ',List' → logprob: -12.375028610229492
    5. '   ' → logprob: -12.750028610229492
    6. ',
' → logprob: -14.125028610229492
    7. ',int' → logprob: -14.375028610229492
    8. ',line' → logprob: -14.500028610229492
    9. ',list' → logprob: -16.000028610229492
    10. ',input' → logprob: -16.125028610229492

Token 1029: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.1316329687833786
    2. 'lines' → logprob: -2.1316330432891846
    3. ' grid' → logprob: -5.7566328048706055
    4. ' lines' → logprob: -6.6316328048706055
    5. 'rows' → logprob: -8.506632804870605
    6. '   ' → logprob: -11.881632804870605
    7. 'cells' → logprob: -13.756632804870605
    8. 'input' → logprob: -14.131632804870605
    9. 'data' → logprob: -14.381632804870605
    10. 'line' → logprob: -15.006632804870605

Token 1030: '_lines' (ID: 42980)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005881153047084808
    2. '):' → logprob: -5.380881309509277
    3. ')' → logprob: -6.880881309509277
    4. '):
' → logprob: -8.505881309509277
    5. ':list' → logprob: -11.505881309509277
    6. '   ' → logprob: -12.005881309509277
    7. '=' → logprob: -12.380881309509277
    8. ' :' → logprob: -12.630881309509277
    9. '):

' → logprob: -13.880881309509277
    10. '[List' → logprob: -14.005881309509277

Token 1031: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6831337213516235
    2. ')' → logprob: -0.9331337213516235
    3. '):' → logprob: -2.433133602142334
    4. '):
' → logprob: -4.683133602142334
    5. '=' → logprob: -5.433133602142334
    6. '   ' → logprob: -9.558134078979492
    7. ':list' → logprob: -10.433134078979492
    8. ')=' → logprob: -10.808134078979492
    9. '=[]' → logprob: -11.058134078979492
    10. '=None' → logprob: -11.183134078979492

Token 1032: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.002511808415874839
    2. '[List' → logprob: -6.002511978149414
    3. ' List' → logprob: -11.002511978149414
    4. ')' → logprob: -11.252511978149414
    5. 'list' → logprob: -12.127511978149414
    6. '[str' → logprob: -14.752511978149414
    7. '```' → logprob: -15.377511978149414
    8. '(List' → logprob: -15.752511978149414
    9. '_list' → logprob: -16.377511978149414
    10. '<List' → logprob: -17.002511978149414

Token 1033: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: 0.0
    2. 'str' → logprob: -16.75
    3. '[' → logprob: -18.375
    4. ')' → logprob: -18.625
    5. '=str' → logprob: -19.375
    6. '[
' → logprob: -19.5
    7. '[int' → logprob: -19.625
    8. '```' → logprob: -19.625
    9. '[List' → logprob: -19.625
    10. '[String' → logprob: -20.0

Token 1034: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003286209423094988
    2. '])' → logprob: -5.878286361694336
    3. '   ' → logprob: -7.878286361694336
    4. '):
' → logprob: -10.003286361694336
    5. '):' → logprob: -10.378286361694336
    6. ' )' → logprob: -11.878286361694336
    7. '`)' → logprob: -12.378286361694336
    8. ']' → logprob: -12.503286361694336
    9. ')->' → logprob: -12.878286361694336
    10. '       ' → logprob: -13.128286361694336

Token 1035: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.40072551369667053
    2. ' ->' → logprob: -1.5257254838943481
    3. ':' → logprob: -2.4007256031036377
    4. ')' → logprob: -4.650725364685059
    5. '   ' → logprob: -5.525725364685059
    6. ':
' → logprob: -6.025725364685059
    7. '       ' → logprob: -6.025725364685059
    8. ')->' → logprob: -6.775725364685059
    9. ' ->
' → logprob: -7.150725364685059
    10. '()->' → logprob: -7.150725364685059

Token 1036: ' Frag' (ID: 122221)
  Prédit: 'Frag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Frag' → logprob: -0.03808005899190903
    2. ' Frag' → logprob: -3.2880799770355225
    3. 'Lab' → logprob: -10.538080215454102
    4. ' fragile' → logprob: -12.538080215454102
    5. 'Fragment' → logprob: -12.663080215454102
    6. '   ' → logprob: -13.413080215454102
    7. 'frag' → logprob: -13.538080215454102
    8. ' frag' → logprob: -14.663080215454102
    9. 'Fra' → logprob: -14.663080215454102
    10. 'List' → logprob: -15.663080215454102

Token 1037: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -0.20187373459339142
    2. 'Frag' → logprob: -1.701873779296875
    3. ' fragile' → logprob: -8.201873779296875
    4. 'ible' → logprob: -9.951873779296875
    5. 'r' → logprob: -9.951873779296875
    6. ' Frag' → logprob: -10.326873779296875
    7. 'frag' → logprob: -10.576873779296875
    8. 'tile' → logprob: -10.951873779296875
    9. 'atile' → logprob: -12.326873779296875
    10. 'Tile' → logprob: -12.951873779296875

Token 1038: 'Lab' (ID: 34048)
  Prédit: 'Lab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Lab' → logprob: 0.0
    2. ' Lab' → logprob: -17.375
    3. 'Labor' → logprob: -19.75
    4. '_lab' → logprob: -20.5
    5. 'Frag' → logprob: -20.875
    6. 'Labs' → logprob: -20.875
    7. 'lab' → logprob: -20.875
    8. '
' → logprob: -21.5
    9. 'Lib' → logprob: -22.625
    10. 'LAB' → logprob: -22.75

Token 1039: 'yrinth' (ID: 113153)
  Prédit: 'yrinth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yrinth' → logprob: -0.002346514957025647
    2. 'yr' → logprob: -6.752346515655518
    3. 'ab' → logprob: -7.377346515655518
    4. 'y' → logprob: -8.62734603881836
    5. ' labyrinth' → logprob: -9.75234603881836
    6. 'r' → logprob: -9.87734603881836
    7. 'ir' → logprob: -10.00234603881836
    8. 'ar' → logprob: -10.50234603881836
    9. 'ry' → logprob: -10.62734603881836
    10. 'Lab' → logprob: -10.87734603881836

Token 1040: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10458577424287796
    2. ':
' → logprob: -2.729585886001587
    3. '       ' → logprob: -3.729585886001587
    4. '   ' → logprob: -5.229585647583008
    5. '():' → logprob: -6.604585647583008
    6. ':return' → logprob: -7.104585647583008
    7. '():
' → logprob: -7.229585647583008
    8. '(' → logprob: -8.104585647583008
    9. '{' → logprob: -8.104585647583008
    10. '<|end|>' → logprob: -8.479585647583008

Token 1041: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00033999193692579865
    2. 'return' → logprob: -8.000340461730957
    3. ' return' → logprob: -12.500340461730957
    4. '```' → logprob: -15.125340461730957
    5. '           ' → logprob: -15.750340461730957
    6. '      ' → logprob: -16.00033950805664
    7. '{return' → logprob: -16.00033950805664
    8. '   ' → logprob: -16.25033950805664
    9. '               ' → logprob: -16.75033950805664
    10. ':return' → logprob: -17.75033950805664

Token 1042: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.003312342334538698
    2. '       ' → logprob: -5.753312110900879
    3. 'grid' → logprob: -9.003312110900879
    4. ' return' → logprob: -11.378312110900879
    5. '```' → logprob: -17.378313064575195
    6. '   ' → logprob: -18.003313064575195
    7. '	return' → logprob: -18.378313064575195
    8. ' grid' → logprob: -19.378313064575195
    9. '
' → logprob: -19.378313064575195
    10. '{return' → logprob: -19.628313064575195

Token 1043: ' Build' (ID: 10885)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08406129479408264
    2. 'grid' → logprob: -2.58406138420105
    3. '       ' → logprob: -5.459061145782471
    4. ' return' → logprob: -7.084061145782471
    5. ' grid' → logprob: -9.709061622619629
    6. '   ' → logprob: -14.709061622619629
    7. '#' → logprob: -15.459061622619629
    8. '```' → logprob: -15.584061622619629
    9. 'lines' → logprob: -16.084060668945312
    10. '        ' → logprob: -16.084060668945312

Token 1044: ' labyrinth' (ID: 184257)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.10731205344200134
    2. ' grid' → logprob: -3.232311964035034
    3. 'return' → logprob: -3.482311964035034
    4. ' Frag' → logprob: -3.982311964035034
    5. 'Frag' → logprob: -4.607312202453613
    6. 'frag' → logprob: -6.232312202453613
    7. ' return' → logprob: -7.482312202453613
    8. '       ' → logprob: -8.357312202453613
    9. 'lab' → logprob: -10.107312202453613
    10. 'Lab' → logprob: -10.232312202453613

Token 1045: ',' (ID: 11)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09162325412034988
    2. '       ' → logprob: -3.091623306274414
    3. '(grid' → logprob: -3.466623306274414
    4. 'grid' → logprob: -4.716623306274414
    5. ' return' → logprob: -6.466623306274414
    6. ':
' → logprob: -9.966623306274414
    7. '
' → logprob: -9.966623306274414
    8. '(' → logprob: -9.966623306274414
    9. '```' → logprob: -10.091623306274414
    10. '   ' → logprob: -10.216623306274414

Token 1046: ' validate' (ID: 14986)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3871343731880188
    2. ' return' → logprob: -1.887134313583374
    3. 'grid' → logprob: -1.887134313583374
    4. ' grid' → logprob: -4.137134552001953
    5. '       ' → logprob: -6.262134552001953
    6. '        ' → logprob: -9.762134552001953
    7. '
' → logprob: -10.262134552001953
    8. '           ' → logprob: -11.637134552001953
    9. '        
' → logprob: -13.012134552001953
    10. '```' → logprob: -13.012134552001953

Token 1047: ' entrance' (ID: 27326)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.385174959897995
    2. 'return' → logprob: -1.2601749897003174
    3. '       ' → logprob: -4.260174751281738
    4. ' grid' → logprob: -4.385174751281738
    5. ' return' → logprob: -5.385174751281738
    6. 'for' → logprob: -6.260174751281738
    7. 'assert' → logprob: -6.385174751281738
    8. '
' → logprob: -7.510174751281738
    9. ' for' → logprob: -7.885174751281738
    10. 'if' → logprob: -8.885174751281738

Token 1048: ' and' (ID: 326)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.165602445602417
    2. 'if' → logprob: -1.290602445602417
    3. ' =' → logprob: -1.540602445602417
    4. '       ' → logprob: -2.290602445602417
    5. ' if' → logprob: -3.415602445602417
    6. '(grid' → logprob: -3.415602445602417
    7. ' and' → logprob: -4.415602684020996
    8. 'and' → logprob: -4.915602684020996
    9. '):
' → logprob: -6.290602684020996
    10. ',' → logprob: -6.665602684020996

Token 1049: ' treasure' (ID: 47849)
  Prédit: 'tre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.12277442216873169
    2. 'exit' → logprob: -2.372774362564087
    3. 'grid' → logprob: -4.997774600982666
    4. 'frag' → logprob: -5.247774600982666
    5. '#' → logprob: -5.872774600982666
    6. 'entr' → logprob: -6.497774600982666
    7. 'return' → logprob: -6.497774600982666
    8. 'all' → logprob: -6.997774600982666
    9. 'for' → logprob: -7.372774600982666
    10. ' treasures' → logprob: -7.622774600982666

Token 1050: ' rooms' (ID: 11348)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23677758872509003
    2. ' if' → logprob: -2.8617775440216064
    3. 'positions' → logprob: -2.8617775440216064
    4. 'cells' → logprob: -3.4867775440216064
    5. 'grid' → logprob: -3.9867775440216064
    6. 'assert' → logprob: -4.1117777824401855
    7. '       ' → logprob: -5.2367777824401855
    8. '   ' → logprob: -5.4867777824401855
    9. 'for' → logprob: -5.7367777824401855
    10. 'cell' → logprob: -5.8617777824401855

Token 1051: ' are' (ID: 553)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01007597055286169
    2. ' if' → logprob: -5.88507604598999
    3. ':
' → logprob: -6.26007604598999
    4. '        
' → logprob: -7.01007604598999
    5. '
' → logprob: -7.13507604598999
    6. ':' → logprob: -7.13507604598999
    7. 'if' → logprob: -7.38507604598999
    8. ',' → logprob: -7.51007604598999
    9. '        ' → logprob: -7.63507604598999
    10. ' and' → logprob: -7.76007604598999

Token 1052: ' enter' (ID: 5747)
  Prédit: 'enter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enter' → logprob: -0.3876217007637024
    2. '.' → logprob: -2.0126216411590576
    3. 'all' → logprob: -3.2626216411590576
    4. 'valid' → logprob: -3.3876216411590576
    5. ''.' → logprob: -3.5126216411590576
    6. 'accessible' → logprob: -3.6376216411590576
    7. 'reachable' → logprob: -4.012621879577637
    8. 'pass' → logprob: -4.137621879577637
    9. 'open' → logprob: -5.012621879577637
    10. 'walk' → logprob: -5.637621879577637

Token 1053: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -5.512236498361744e-07
    2. '-able' → logprob: -15.875000953674316
    3. '```' → logprob: -16.25
    4. ' able' → logprob: -16.875
    5. 'ables' → logprob: -17.375
    6. '       ' → logprob: -18.125
    7. 'ble' → logprob: -18.625
    8. '   ' → logprob: -18.875
    9. 'table' → logprob: -18.875
    10. 'abble' → logprob: -19.25

Token 1054: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012734467163681984
    2. ' if' → logprob: -7.2512736320495605
    3. 'if' → logprob: -8.751273155212402
    4. ':' → logprob: -9.376273155212402
    5. ',' → logprob: -9.501273155212402
    6. ' for' → logprob: -9.751273155212402
    7. ':
' → logprob: -9.876273155212402
    8. ' and' → logprob: -10.126273155212402
    9. 'for' → logprob: -10.626273155212402
    10. '        
' → logprob: -11.001273155212402

Token 1055: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002070802263915539
    2. 'for' → logprob: -7.002070903778076
    3. ' for' → logprob: -7.752070903778076
    4. 'if' → logprob: -7.752070903778076
    5. ' if' → logprob: -8.752070426940918
    6. 'grid' → logprob: -9.502070426940918
    7. 'assert' → logprob: -10.377070426940918
    8. '```' → logprob: -10.752070426940918
    9. '
' → logprob: -13.127070426940918
    10. ':' → logprob: -13.127070426940918

Token 1056: ' labyrinth' (ID: 184257)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06457629054784775
    2. 'if' → logprob: -3.0645763874053955
    3. 'grid' → logprob: -4.314576148986816
    4. 'assert' → logprob: -6.939576148986816
    5. '       ' → logprob: -7.314576148986816
    6. ' for' → logprob: -7.314576148986816
    7. 'lab' → logprob: -9.064576148986816
    8. ' if' → logprob: -9.814576148986816
    9. ' grid' → logprob: -11.814576148986816
    10. 'entr' → logprob: -12.689576148986816

Token 1057: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760267972946167
    2. '=' → logprob: -0.8260267972946167
    3. '   ' → logprob: -10.201026916503906
    4. '       ' → logprob: -10.326026916503906
    5. '=
' → logprob: -11.451026916503906
    6. ' =
' → logprob: -13.326026916503906
    7. '    ' → logprob: -13.451026916503906
    8. '        ' → logprob: -13.576026916503906
    9. '_grid' → logprob: -14.701026916503906
    10. ' ' → logprob: -14.951026916503906

Token 1058: ' Frag' (ID: 122221)
  Prédit: 'Frag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Frag' → logprob: -0.0001234428636962548
    2. ' Frag' → logprob: -9.000123023986816
    3. 'Fragment' → logprob: -18.375123977661133
    4. ' fragile' → logprob: -18.625123977661133
    5. 'frag' → logprob: -20.125123977661133
    6. ' frag' → logprob: -23.125123977661133
    7. 'Fra' → logprob: -23.250123977661133
    8. '_frag' → logprob: -23.625123977661133
    9. 'Frac' → logprob: -24.625123977661133
    10. 'Fr' → logprob: -24.750123977661133

Token 1059: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -0.023286247625947
    2. 'Frag' → logprob: -3.7732863426208496
    3. 'ure' → logprob: -11.148285865783691
    4. 'ible' → logprob: -11.273285865783691
    5. 'able' → logprob: -12.398285865783691
    6. 'atile' → logprob: -12.773285865783691
    7. 'frag' → logprob: -13.273285865783691
    8. ' Frag' → logprob: -13.523285865783691
    9. ' fragile' → logprob: -13.898285865783691
    10. 'ire' → logprob: -14.148285865783691

Token 1060: 'Lab' (ID: 34048)
  Prédit: 'Lab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Lab' → logprob: 0.0
    2. ' Lab' → logprob: -17.0
    3. 'Labor' → logprob: -17.25
    4. 'Frag' → logprob: -17.625
    5. 'Labs' → logprob: -18.25
    6. '_lab' → logprob: -18.75
    7. 'lab' → logprob: -19.875
    8. 'LAB' → logprob: -20.75
    9. 'Lib' → logprob: -21.375
    10. 'Lap' → logprob: -21.875

Token 1061: 'yrinth' (ID: 113153)
  Prédit: 'yrinth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yrinth' → logprob: -0.7223215103149414
    2. 'inth' → logprob: -1.3473215103149414
    3. 'ith' → logprob: -1.4723215103149414
    4. 'ynth' → logprob: -4.722321510314941
    5. 'ab' → logprob: -5.097321510314941
    6. ' labyrinth' → logprob: -5.847321510314941
    7. 'Lab' → logprob: -6.222321510314941
    8. 'ymph' → logprob: -6.597321510314941
    9. 'abin' → logprob: -7.597321510314941
    10. 'yth' → logprob: -7.597321510314941

Token 1062: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.008867230266332626
    2. 'grid' → logprob: -4.758867263793945
    3. '([' → logprob: -8.508867263793945
    4. '(
' → logprob: -10.758867263793945
    5. '(' → logprob: -10.883867263793945
    6. ' grid' → logprob: -13.133867263793945
    7. '[' → logprob: -13.133867263793945
    8. '(list' → logprob: -13.133867263793945
    9. '([
' → logprob: -13.633867263793945
    10. '   ' → logprob: -14.508867263793945

Token 1063: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -9.686778503237292e-05
    2. '(grid' → logprob: -9.875097274780273
    3. '=' → logprob: -10.750097274780273
    4. '(lines' → logprob: -12.250097274780273
    5. 'Lines' → logprob: -12.375097274780273
    6. '   ' → logprob: -12.500097274780273
    7. 'lines' → logprob: -13.000097274780273
    8. 'grid' → logprob: -13.250097274780273
    9. '       ' → logprob: -13.375097274780273
    10. ')' → logprob: -13.375097274780273

Token 1064: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016929637640714645
    2. ')
' → logprob: -4.516929626464844
    3. '       ' → logprob: -5.141929626464844
    4. '   ' → logprob: -11.516929626464844
    5. ')
' → logprob: -13.016929626464844
    6. '[' → logprob: -13.641929626464844
    7. ' )' → logprob: -13.891929626464844
    8. ')return' → logprob: -14.141929626464844
    9. '      ' → logprob: -14.641929626464844
    10. ')

' → logprob: -14.766929626464844

Token 1065: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013512482109945267
    2. 'for' → logprob: -9.12513542175293
    3. ' for' → logprob: -10.75013542175293
    4. '   ' → logprob: -13.37513542175293
    5. 'if' → logprob: -14.12513542175293
    6. '           ' → logprob: -14.25013542175293
    7. '```' → logprob: -14.25013542175293
    8. ' if' → logprob: -14.62513542175293
    9. '
' → logprob: -15.25013542175293
    10. '	' → logprob: -16.00013542175293

Token 1066: ' assert' (ID: 3696)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3852253258228302
    2. '       ' → logprob: -1.6352252960205078
    3. 'if' → logprob: -2.135225296020508
    4. 'assert' (adapté à ' assert') → logprob: -5.135225296020508
    5. ' for' → logprob: -7.885225296020508
    6. ' if' → logprob: -8.385225296020508
    7. '#' → logprob: -10.010225296020508
    8. '
' → logprob: -11.010225296020508
    9. 'valid' → logprob: -12.135225296020508
    10. '        
' → logprob: -12.260225296020508

Token 1067: ' labyrinth' (ID: 184257)
  Prédit: 'lab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lab' → logprob: -0.0012318959925323725
    2. 'all' → logprob: -6.751231670379639
    3. ' labyrinth' → logprob: -9.751232147216797
    4. 'len' → logprob: -13.626232147216797
    5. ' lab' → logprob: -14.001232147216797
    6. ' all' → logprob: -14.626232147216797
    7. 'labor' → logprob: -15.376232147216797
    8. 'labs' → logprob: -15.876232147216797
    9. 'grid' → logprob: -16.001232147216797
    10. 'lap' → logprob: -16.501232147216797

Token 1068: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.023689020425081253
    2. '.' → logprob: -3.773689031600952
    3. '.grid' → logprob: -8.023689270019531
    4. 'is' → logprob: -10.148689270019531
    5. '.enter' → logprob: -10.648689270019531
    6. '.ent' → logprob: -10.773689270019531
    7. 'entr' → logprob: -11.023689270019531
    8. '.can' → logprob: -12.898689270019531
    9. '   ' → logprob: -13.273689270019531
    10. 'grid' → logprob: -13.398689270019531

Token 1069: '_enter' (ID: 88636)
  Prédit: '_enter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_enter' → logprob: -0.0005650650127790868
    2. 'enter' → logprob: -7.500565052032471
    3. '_' → logprob: -12.000565528869629
    4. '_ent' → logprob: -12.750565528869629
    5. 'Enter' → logprob: -14.000565528869629
    6. '_ENTER' → logprob: -14.250565528869629
    7. '	enter' → logprob: -15.125565528869629
    8. '__' → logprob: -15.750565528869629
    9. '\' → logprob: -16.000564575195312
    10. '_in' → logprob: -16.125564575195312

Token 1070: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -4.320199877838604e-07
    2. 'enter' → logprob: -15.625
    3. 'ble' → logprob: -17.125
    4. '_enter' → logprob: -17.125
    5. 'er' → logprob: -17.25
    6. 'table' → logprob: -17.375
    7. '(' → logprob: -17.5
    8. '   ' → logprob: -18.25
    9. '```' → logprob: -18.25
    10. 'nable' → logprob: -18.625

Token 1071: '(l' (ID: 4179)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.062344424426555634
    2. '(l' → logprob: -2.8123443126678467
    3. '(' → logprob: -7.937344551086426
    4. 'lab' → logprob: -10.937344551086426
    5. '(((' → logprob: -14.312344551086426
    6. '(
' → logprob: -15.062344551086426
    7. ' ((' → logprob: -15.812344551086426
    8. ' (' → logprob: -16.18734359741211
    9. ')((' → logprob: -16.18734359741211
    10. 'l' → logprob: -16.81234359741211

Token 1072: 'ab' (ID: 378)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7002549171447754
    2. 'ab' → logprob: -0.7002549171447754
    3. '((' → logprob: -5.450254917144775
    4. '(ab' → logprob: -6.450254917144775
    5. '(l' → logprob: -7.325254917144775
    6. 'abl' → logprob: -10.075254440307617
    7. '('' → logprob: -10.075254440307617
    8. 'aby' → logprob: -10.200254440307617
    9. 'abd' → logprob: -10.325254440307617
    10. '(self' → logprob: -10.450254440307617

Token 1073: 'yrinth' (ID: 113153)
  Prédit: 'yrinth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yrinth' → logprob: -0.0009938681032508612
    2. 'yr' → logprob: -7.000993728637695
    3. '[' → logprob: -10.500993728637695
    4. 'y' → logprob: -11.250993728637695
    5. '(' → logprob: -11.875993728637695
    6. '@' → logprob: -12.000993728637695
    7. 'ynth' → logprob: -13.000993728637695
    8. ')' → logprob: -13.000993728637695
    9. '['' → logprob: -13.000993728637695
    10. '**' → logprob: -13.625993728637695

Token 1074: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00011844364780699834
    2. 'entr' → logprob: -9.125118255615234
    3. '(' → logprob: -12.000118255615234
    4. '.ent' → logprob: -13.375118255615234
    5. '().' → logprob: -14.500118255615234
    6. '.enter' → logprob: -15.375118255615234
    7. ').' → logprob: -15.500118255615234
    8. '#' → logprob: -15.625118255615234
    9. ')' → logprob: -15.875118255615234
    10. ' .' → logprob: -16.500118255615234

Token 1075: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.00043126524542458355
    2. '(' → logprob: -7.750431060791016
    3. ' entrance' → logprob: -15.000431060791016
    4. '0' → logprob: -16.625431060791016
    5. '((' → logprob: -17.000431060791016
    6. 'entrée' → logprob: -17.250431060791016
    7. 'Entrance' → logprob: -17.375431060791016
    8. '(
' → logprob: -17.625431060791016
    9. '```' → logprob: -17.750431060791016
    10. '``' → logprob: -18.625431060791016

Token 1076: 'ance' (ID: 766)
  Prédit: 'ance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.00019126241386402398
    2. 'ace' → logprob: -9.750191688537598
    3. 'ce' → logprob: -10.125191688537598
    4. 'rance' → logprob: -10.375191688537598
    5. 'ence' → logprob: -11.250191688537598
    6. 'lace' → logprob: -11.625191688537598
    7. '
' → logprob: -11.875191688537598
    8. '[' → logprob: -12.125191688537598
    9. '   ' → logprob: -12.500191688537598
    10. 'race' → logprob: -12.625191688537598

Token 1077: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14594459533691406
    2. '),' → logprob: -2.020944595336914
    3. ')
' → logprob: -5.895944595336914
    4. '       ' → logprob: -8.895944595336914
    5. '[' → logprob: -8.895944595336914
    6. '),'' → logprob: -9.270944595336914
    7. '),"' → logprob: -10.020944595336914
    8. '   ' → logprob: -10.270944595336914
    9. ')==' → logprob: -10.770944595336914
    10. ' )' → logprob: -11.520944595336914

Token 1078: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2448015809059143
    2. ' "' → logprob: -1.8698015213012695
    3. ' True' → logprob: -4.2448015213012695
    4. '       ' → logprob: -4.2448015213012695
    5. 'lab' → logprob: -4.6198015213012695
    6. 'True' → logprob: -4.7448015213012695
    7. ' labyrinth' → logprob: -5.1198015213012695
    8. '           ' → logprob: -5.8698015213012695
    9. ''' → logprob: -5.9948015213012695
    10. ' '' → logprob: -6.7448015213012695

Token 1079: 'Entrance' (ID: 171091)
  Prédit: 'Entrance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Entrance' → logprob: -0.008437154814600945
    2. 'Lab' → logprob: -5.133437156677246
    3. 'Entr' → logprob: -7.008437156677246
    4. '"' → logprob: -7.008437156677246
    5. 'entr' → logprob: -8.133437156677246
    6. ''' → logprob: -8.633437156677246
    7. 'lab' → logprob: -9.633437156677246
    8. ' Entrance' → logprob: -9.883437156677246
    9. 'Grid' → logprob: -10.133437156677246
    10. 'Invalid' → logprob: -10.383437156677246

Token 1080: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.19629143178462982
    2. ' is' → logprob: -1.821291446685791
    3. ' position' → logprob: -4.446291446685791
    4. ' floor' → logprob: -6.071291446685791
    5. ' should' → logprob: -6.696291446685791
    6. ' cell' → logprob: -8.446290969848633
    7. ' tile' → logprob: -8.571290969848633
    8. 'must' → logprob: -8.571290969848633
    9. ' not' → logprob: -9.321290969848633
    10. ' at' → logprob: -9.696290969848633

Token 1081: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.009824917651712894
    2. 'be' → logprob: -4.634824752807617
    3. '_be' → logprob: -10.884824752807617
    4. '<|end|>' → logprob: -11.009824752807617
    5. '[' → logprob: -11.884824752807617
    6. '.be' → logprob: -12.384824752807617
    7. '_' → logprob: -12.634824752807617
    8. ' not' → logprob: -12.634824752807617
    9. '.' → logprob: -13.134824752807617
    10. '==' → logprob: -13.384824752807617

Token 1082: ' enter' (ID: 5747)
  Prédit: 'enter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -0.06337074935436249
    2. '.' → logprob: -3.313370704650879
    3. 'True' → logprob: -4.688370704650879
    4. ''.' → logprob: -4.688370704650879
    5. ' enter' → logprob: -5.938370704650879
    6. 'entr' → logprob: -7.438370704650879
    7. '"."' → logprob: -7.438370704650879
    8. '."' → logprob: -7.938370704650879
    9. ' True' → logprob: -7.938370704650879
    10. 'true' → logprob: -7.938370704650879

Token 1083: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -3.128163257315464e-07
    2. ' able' → logprob: -16.125
    3. '.' → logprob: -17.0
    4. 'ble' → logprob: -17.625
    5. '-able' → logprob: -17.875
    6. '```' → logprob: -18.125
    7. 'abl' → logprob: -19.0
    8. 'al' → logprob: -19.0
    9. 'a' → logprob: -19.125
    10. '
' → logprob: -19.375

Token 1084: '"
' (ID: 1092)
  Prédit: '"
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"
' → logprob: -0.1357695609331131
    2. '"' → logprob: -2.3857696056365967
    3. ')"
' → logprob: -3.7607696056365967
    4. ')"' → logprob: -5.135769367218018
    5. '."
' → logprob: -5.760769367218018
    6. ')' → logprob: -7.010769367218018
    7. '."' → logprob: -7.010769367218018
    8. '")' → logprob: -8.385769844055176
    9. ')
' → logprob: -8.635769844055176
    10. ' at' → logprob: -9.010769844055176

Token 1085: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006882481975480914
    2. 'for' → logprob: -7.875688076019287
    3. 'assert' → logprob: -8.500688552856445
    4. ' for' → logprob: -9.250688552856445
    5. '   ' → logprob: -13.500688552856445
    6. '.assert' → logprob: -13.750688552856445
    7. '<|end|>' → logprob: -13.750688552856445
    8. '           ' → logprob: -13.875688552856445
    9. 'return' → logprob: -14.000688552856445
    10. '```' → logprob: -14.375688552856445

Token 1086: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001247612526640296
    2. '       ' → logprob: -7.001247406005859
    3. 'assert' → logprob: -8.12624740600586
    4. ' for' → logprob: -10.12624740600586
    5. '```' → logprob: -16.12624740600586
    6. '	for' → logprob: -16.37624740600586
    7. 'forall' → logprob: -17.25124740600586
    8. 'all' → logprob: -17.37624740600586
    9. '   ' → logprob: -17.37624740600586
    10. '#' → logprob: -17.62624740600586

Token 1087: ' t' (ID: 260)
  Prédit: 'tre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.5376582145690918
    2. 'pos' → logprob: -1.2876582145690918
    3. 't' → logprob: -2.037658214569092
    4. ' treasure' → logprob: -5.162658214569092
    5. ' pos' → logprob: -5.912658214569092
    6. 'idx' → logprob: -7.912658214569092
    7. 'i' → logprob: -8.03765869140625
    8. ' t' → logprob: -8.41265869140625
    9. 'tr' → logprob: -9.66265869140625
    10. 'tp' → logprob: -10.03765869140625

Token 1088: 'pos' (ID: 1103)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01906743273139
    2. 're' → logprob: -4.269067287445068
    3. 'pos' → logprob: -5.519067287445068
    4. 'in' → logprob: -7.394067287445068
    5. ' pos' → logprob: -9.019067764282227
    6. 'r' → logprob: -9.894067764282227
    7. '_pos' → logprob: -10.644067764282227
    8. 'reas' → logprob: -10.894067764282227
    9. 'idx' → logprob: -11.019067764282227
    10. 'tre' → logprob: -11.519067764282227

Token 1089: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3484511375427246
    2. 'in' → logprob: -1.2234511375427246
    3. 't' → logprob: -12.723451614379883
    4. ',' → logprob: -14.598451614379883
    5. ' ' → logprob: -14.598451614379883
    6. '_in' → logprob: -14.598451614379883
    7. ')' → logprob: -14.973451614379883
    8. '
' → logprob: -15.348451614379883
    9. '<|end|>' → logprob: -15.473451614379883
    10. 'n' → logprob: -15.723451614379883

Token 1090: ' labyrinth' (ID: 184257)
  Prédit: 'lab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lab' → logprob: -0.00046975704026408494
    2. ' labyrinth' → logprob: -7.75046968460083
    3. 'labor' → logprob: -11.125470161437988
    4. '[' → logprob: -11.250470161437988
    5. '[l' → logprob: -12.375470161437988
    6. 'self' → logprob: -13.500470161437988
    7. ' lab' → logprob: -13.625470161437988
    8. 'l' → logprob: -13.875470161437988
    9. 'labs' → logprob: -14.000470161437988
    10. '[
' → logprob: -14.375470161437988

Token 1091: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -1.8624639324116288e-06
    2. 'Treas' → logprob: -14.000001907348633
    3. 'tre' → logprob: -14.625001907348633
    4. ' .' → logprob: -15.375001907348633
    5. '.' → logprob: -15.375001907348633
    6. '#' → logprob: -18.250001907348633
    7. 't' → logprob: -18.750001907348633
    8. '[' → logprob: -19.625001907348633
    9. '   ' → logprob: -19.750001907348633
    10. ' treasures' → logprob: -19.875001907348633

Token 1092: 'reas' (ID: 20712)
  Prédit: '.t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.7366895079612732
    2. 'tre' → logprob: -1.236689567565918
    3. 'reas' → logprob: -1.486689567565918
    4. 'Treas' → logprob: -6.111689567565918
    5. 't' → logprob: -7.111689567565918
    6. '.' → logprob: -7.361689567565918
    7. 're' → logprob: -7.986689567565918
    8. '_t' → logprob: -8.361689567565918
    9. '.re' → logprob: -9.361689567565918
    10. '#' → logprob: -9.736689567565918

Token 1093: 'ures' (ID: 1609)
  Prédit: 'ures'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ures' → logprob: -0.02801547944545746
    2. 's' → logprob: -3.903015375137329
    3. 'res' → logprob: -5.153015613555908
    4. 'asures' → logprob: -8.02801513671875
    5. '   ' → logprob: -8.27801513671875
    6. 't' → logprob: -8.52801513671875
    7. 'sure' → logprob: -8.52801513671875
    8. 'ur' → logprob: -8.90301513671875
    9. 'urses' → logprob: -9.02801513671875
    10. 'urers' → logprob: -9.27801513671875

Token 1094: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.35504150390625
    2. ':' → logprob: -1.35504150390625
    3. '           ' → logprob: -3.60504150390625
    4. '       ' → logprob: -4.35504150390625
    5. ',' → logprob: -7.98004150390625
    6. '):
' → logprob: -9.35504150390625
    7. '=' → logprob: -9.60504150390625
    8. 'assert' → logprob: -9.98004150390625
    9. ' if' → logprob: -10.10504150390625
    10. ' in' → logprob: -10.48004150390625

Token 1095: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15891744196414948
    2. '       ' → logprob: -2.0339174270629883
    3. ':
' → logprob: -5.533917427062988
    4. 'assert' → logprob: -5.658917427062988
    5. '.assert' → logprob: -6.283917427062988
    6. ' if' → logprob: -6.283917427062988
    7. ' assert' → logprob: -6.408917427062988
    8. ':' → logprob: -6.783917427062988
    9. ',' → logprob: -7.408917427062988
    10. '_ASSERT' → logprob: -7.908917427062988

Token 1096: ' assert' (ID: 3696)
  Prédit: 'assert'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assert' (adapté à ' assert') → logprob: -0.005305858328938484
    2. ' assert' → logprob: -5.380305767059326
    3. '           ' → logprob: -7.380305767059326
    4. '       ' → logprob: -10.380306243896484
    5. '.assert' → logprob: -10.630306243896484
    6. '               ' → logprob: -12.755306243896484
    7. '	assert' → logprob: -13.380306243896484
    8. '_assert' → logprob: -13.380306243896484
    9. '(assert' → logprob: -15.255306243896484
    10. '_ASSERT' → logprob: -15.755306243896484

Token 1097: ' labyrinth' (ID: 184257)
  Prédit: 'lab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lab' → logprob: -0.10022812336683273
    2. ' labyrinth' → logprob: -2.3502280712127686
    3. ' lab' → logprob: -11.350228309631348
    4. 'labor' → logprob: -11.975228309631348
    5. 'labs' → logprob: -14.225228309631348
    6. 'l' → logprob: -14.350228309631348
    7. 'Lab' → logprob: -14.475228309631348
    8. 'lap' → logprob: -14.725228309631348
    9. '   ' → logprob: -15.100228309631348
    10. 'lad' → logprob: -15.600228309631348

Token 1098: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -9.353008499601856e-05
    2. 'is' → logprob: -9.375093460083008
    3. '.' → logprob: -11.750093460083008
    4. '
' → logprob: -15.500093460083008
    5. ' .' → logprob: -16.125093460083008
    6. '.
' → logprob: -16.375093460083008
    7. '   ' → logprob: -16.375093460083008
    8. '.grid' → logprob: -16.500093460083008
    9. '[' → logprob: -17.375093460083008
    10. 't' → logprob: -17.625093460083008

Token 1099: '_enter' (ID: 88636)
  Prédit: 'enter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -0.2256735861301422
    2. '_enter' → logprob: -1.6006735563278198
    3. 't' → logprob: -8.85067367553711
    4. '_' → logprob: -9.97567367553711
    5. '_t' → logprob: -10.85067367553711
    6. 'Enter' → logprob: -11.22567367553711
    7. 'tre' → logprob: -11.72567367553711
    8. '	enter' → logprob: -12.10067367553711
    9. '__' → logprob: -12.60067367553711
    10. 'ent' → logprob: -12.72567367553711

Token 1100: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.0003500050224829465
    2. 't' → logprob: -8.250349998474121
    3. '(t' → logprob: -10.500349998474121
    4. '   ' → logprob: -11.750349998474121
    5. 'r' → logprob: -12.000349998474121
    6. '           ' → logprob: -12.250349998474121
    7. '       ' → logprob: -12.375349998474121
    8. 'ble' → logprob: -12.375349998474121
    9. 'enter' → logprob: -12.375349998474121
    10. 'pos' → logprob: -12.625349998474121

Token 1101: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -4.723352049040841e-06
    2. '(' → logprob: -13.000004768371582
    3. 't' → logprob: -13.625004768371582
    4. '(
' → logprob: -13.875004768371582
    5. '((' → logprob: -16.375003814697266
    6. ' (' → logprob: -16.625003814697266
    7. '(*' → logprob: -18.750003814697266
    8. '   ' → logprob: -19.750003814697266
    9. '(tuple' → logprob: -19.875003814697266
    10. '
' → logprob: -20.000003814697266

Token 1102: 'pos' (ID: 1103)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.047392625361680984
    2. 'pos' → logprob: -3.5473926067352295
    3. 't' → logprob: -4.047392845153809
    4. '(pos' → logprob: -12.172392845153809
    5. '(' → logprob: -12.547392845153809
    6. ' t' → logprob: -12.922392845153809
    7. ')t' → logprob: -12.922392845153809
    8. 'p' → logprob: -13.297392845153809
    9. '_pos' → logprob: -14.047392845153809
    10. '[t' → logprob: -14.297392845153809

Token 1103: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.000616293225903064
    2. '           ' → logprob: -7.750616073608398
    3. ')' → logprob: -9.625616073608398
    4. '       ' → logprob: -9.750616073608398
    5. '),"' → logprob: -10.125616073608398
    6. ' ),' → logprob: -11.625616073608398
    7. '),'' → logprob: -12.500616073608398
    8. '   ' → logprob: -12.875616073608398
    9. ')),' → logprob: -13.500616073608398
    10. '               ' → logprob: -13.875616073608398

Token 1104: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.14287978410720825
    2. 't' → logprob: -2.5178797245025635
    3. 'f' → logprob: -3.8928797245025635
    4. ' "' → logprob: -4.017879962921143
    5. ' f' → logprob: -5.017879962921143
    6. '               ' → logprob: -5.892879962921143
    7. ' t' → logprob: -5.892879962921143
    8. '           ' → logprob: -7.017879962921143
    9. ')' → logprob: -8.392879486083984
    10. '
' → logprob: -8.392879486083984

Token 1105: 'Tre' (ID: 61774)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00013774730905424803
    2. ' t' → logprob: -9.250137329101562
    3. 'lab' → logprob: -10.875137329101562
    4. 'Lab' → logprob: -12.125137329101562
    5. 'tre' → logprob: -12.375137329101562
    6. '`t' → logprob: -12.625137329101562
    7. '#' → logprob: -12.750137329101562
    8. 'all' → logprob: -13.250137329101562
    9. '(t' → logprob: -13.625137329101562
    10. '
' → logprob: -14.500137329101562

Token 1106: 'asure' (ID: 5450)
  Prédit: 'asure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asure' → logprob: -0.011683332733809948
    2. 'asures' → logprob: -4.886683464050293
    3. 'as' → logprob: -6.011683464050293
    4. 'asury' → logprob: -6.886683464050293
    5. 'asurer' → logprob: -8.636683464050293
    6. 'sure' → logprob: -8.761683464050293
    7. 'a' → logprob: -9.011683464050293
    8. 'ASURE' → logprob: -9.886683464050293
    9. '#' → logprob: -10.386683464050293
    10. 'asu' → logprob: -11.261683464050293

Token 1107: ' room' (ID: 3435)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.2728976905345917
    2. 'positions' → logprob: -1.772897720336914
    3. ' must' → logprob: -3.147897720336914
    4. 's' → logprob: -4.522897720336914
    5. '_positions' → logprob: -5.147897720336914
    6. 'pos' → logprob: -6.022897720336914
    7. ' position' → logprob: -6.647897720336914
    8. ' locations' → logprob: -6.772897720336914
    9. 'position' → logprob: -6.897897720336914
    10. 'must' → logprob: -6.897897720336914

Token 1108: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.03742503002285957
    2. 'must' → logprob: -4.1624250411987305
    3. ' positions' → logprob: -4.6624250411987305
    4. 'positions' → logprob: -5.6624250411987305
    5. ' at' → logprob: -5.7874250411987305
    6. 's' → logprob: -6.4124250411987305
    7. ')' → logprob: -7.0374250411987305
    8. ' is' → logprob: -7.5374250411987305
    9. ' or' → logprob: -8.03742504119873
    10. '[pos' → logprob: -8.16242504119873

Token 1109: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.01608598604798317
    2. 'be' → logprob: -4.141086101531982
    3. ' not' → logprob: -10.891085624694824
    4. '_be' → logprob: -11.016085624694824
    5. ' have' → logprob: -12.766085624694824
    6. '<|end|>' → logprob: -12.891085624694824
    7. '```' → logprob: -13.016085624694824
    8. 'continue' → logprob: -13.641085624694824
    9. '	be' → logprob: -13.641085624694824
    10. ' continue' → logprob: -13.891085624694824

Token 1110: ' enter' (ID: 5747)
  Prédit: 'enter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -0.0006282062386162579
    2. 'entr' → logprob: -8.500628471374512
    3. 'tre' → logprob: -8.750628471374512
    4. 't' → logprob: -9.125628471374512
    5. ' enter' → logprob: -9.125628471374512
    6. '.' → logprob: -11.500628471374512
    7. 'reachable' → logprob: -11.625628471374512
    8. '
' → logprob: -12.750628471374512
    9. '.enter' → logprob: -12.750628471374512
    10. '	enter' → logprob: -12.750628471374512

Token 1111: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.0032412861473858356
    2. 'er' → logprob: -6.503241062164307
    3. 'enter' → logprob: -6.753241062164307
    4. 'r' → logprob: -8.003241539001465
    5. 'ter' → logprob: -8.628241539001465
    6. '```' → logprob: -10.753241539001465
    7. ' enter' → logprob: -11.503241539001465
    8. ' able' → logprob: -12.128241539001465
    9. '_enter' → logprob: -12.753241539001465
    10. 'Enter' → logprob: -12.878241539001465

Token 1112: '"
' (ID: 1092)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.3724130094051361
    2. ')' → logprob: -1.7474130392074585
    3. '       ' → logprob: -2.872412919998169
    4. '"),' → logprob: -3.622412919998169
    5. '"' → logprob: -4.122413158416748
    6. '")
' → logprob: -4.122413158416748
    7. '),' → logprob: -4.997413158416748
    8. '"
' → logprob: -5.622413158416748
    9. ',' → logprob: -5.747413158416748
    10. ')
' → logprob: -6.372413158416748

Token 1113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008378617349080741
    2. '
' → logprob: -7.875837802886963
    3. '<|end|>' → logprob: -8.000838279724121
    4. 'return' → logprob: -10.000838279724121
    5. ' return' → logprob: -10.750838279724121
    6. ')' → logprob: -11.375838279724121
    7. '        
' → logprob: -11.500838279724121
    8. ')
' → logprob: -11.875838279724121
    9. '   ' → logprob: -12.250838279724121
    10. ',' → logprob: -12.375838279724121

Token 1114: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011748670367524028
    2. 'return' (adapté à ' return') → logprob: -6.7511749267578125
    3. ' return' → logprob: -13.001174926757812
    4. '   ' → logprob: -13.251174926757812
    5. '
' → logprob: -15.626174926757812
    6. '	return' → logprob: -15.751174926757812
    7. '	' → logprob: -15.751174926757812
    8. '           ' → logprob: -16.126174926757812
    9. '      ' → logprob: -17.876174926757812
    10. '```' → logprob: -18.126174926757812

Token 1115: ' labyrinth' (ID: 184257)
  Prédit: 'lab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lab' → logprob: -0.0007245833403430879
    2. ' labyrinth' → logprob: -7.250724792480469
    3. 'labor' → logprob: -11.500724792480469
    4. ' lab' → logprob: -12.500724792480469
    5. 'Lab' → logprob: -15.125724792480469
    6. 'lap' → logprob: -15.625724792480469
    7. 'lav' → logprob: -15.750724792480469
    8. 'labs' → logprob: -15.875724792480469
    9. 'frag' → logprob: -16.25072479248047
    10. ' лаб' → logprob: -17.00072479248047

Token 1116: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1117: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04825526848435402
    2. '#' → logprob: -3.548255205154419
    3. 'if' → logprob: -4.298255443572998
    4. 'class' → logprob: -5.548255443572998
    5. '```' → logprob: -7.173255443572998
    6. 'import' → logprob: -9.67325496673584
    7. 'n' → logprob: -11.79825496673584
    8. ' if' → logprob: -12.67325496673584
    9. '#!/' → logprob: -13.29825496673584
    10. 'N' → logprob: -13.79825496673584

Token 1118: ' Main' (ID: 7956)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04863596335053444
    2. 'if' → logprob: -3.048635959625244
    3. '#' → logprob: -10.173636436462402
    4. 'import' → logprob: -12.173636436462402
    5. 'class' → logprob: -12.548636436462402
    6. '```' → logprob: -13.548636436462402
    7. ' if' → logprob: -15.423636436462402
    8. 'n' → logprob: -16.673635482788086
    9. 'N' → logprob: -16.798635482788086
    10. ' def' → logprob: -17.798635482788086

Token 1119: ' processing' (ID: 12323)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20146410167217255
    2. 'if' → logprob: -1.701464056968689
    3. '
' → logprob: -10.57646369934082
    4. ' if' → logprob: -10.82646369934082
    5. '```' → logprob: -12.82646369934082
    6. ' def' → logprob: -13.57646369934082
    7. 'class' → logprob: -13.95146369934082
    8. 'import' → logprob: -14.32646369934082
    9. '\' → logprob: -18.32646369934082
    10. '

' → logprob: -18.32646369934082

Token 1120: ' pipeline' (ID: 29412)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00861681904643774
    2. 'if' → logprob: -4.758616924285889
    3. '```' → logprob: -14.00861644744873
    4. ' def' → logprob: -14.50861644744873
    5. ' if' → logprob: -14.88361644744873
    6. 'class' → logprob: -15.38361644744873
    7. '
' → logprob: -15.50861644744873
    8. 'import' → logprob: -15.63361644744873
    9. 'for' → logprob: -17.258617401123047
    10. '   ' → logprob: -20.758617401123047

Token 1121: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0019469641847535968
    2. 'if' → logprob: -6.251946926116943
    3. 'class' → logprob: -11.251947402954102
    4. '
' → logprob: -13.126947402954102
    5. 'import' → logprob: -13.126947402954102
    6. '```' → logprob: -13.751947402954102
    7. ' def' → logprob: -15.501947402954102
    8. ' if' → logprob: -16.6269474029541
    9. 'for' → logprob: -20.3769474029541
    10. '    
' → logprob: -20.5019474029541

Token 1122: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00013500562636181712
    2. 'if' → logprob: -9.50013542175293
    3. 'class' → logprob: -9.75013542175293
    4. '
' → logprob: -13.75013542175293
    5. '```' → logprob: -14.50013542175293
    6. ' def' → logprob: -15.25013542175293
    7. 'import' → logprob: -17.62513542175293
    8. ' if' → logprob: -19.62513542175293
    9. ' 
' → logprob: -20.37513542175293
    10. 'ndef' → logprob: -20.50013542175293

Token 1123: ' process' (ID: 2273)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5804219245910645
    2. ' main' → logprob: -0.8304219245910645
    3. 'solve' → logprob: -5.8304219245910645
    4. ' solve' → logprob: -6.5804219245910645
    5. 'process' → logprob: -9.080421447753906
    6. ' process' → logprob: -10.830421447753906
    7. 'parse' → logprob: -12.455421447753906
    8. 'read' → logprob: -12.955421447753906
    9. 'def' → logprob: -13.330421447753906
    10. 'run' → logprob: -13.455421447753906

Token 1124: '_d' (ID: 1565)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.8459459543228149
    2. '():' → logprob: -0.9709459543228149
    3. '():
' → logprob: -2.7209458351135254
    4. '_input' → logprob: -2.7209458351135254
    5. '(N' → logprob: -3.0959458351135254
    6. '(lines' → logprob: -4.845945835113525
    7. '(inputs' → logprob: -6.470945835113525
    8. 'input' → logprob: -6.720945835113525
    9. '(L' → logprob: -7.345945835113525
    10. '(stdin' → logprob: -7.720945835113525

Token 1125: 'atasets' (ID: 105003)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.49122172594070435
    2. 'ata' → logprob: -0.9912217259407043
    3. 'ataset' → logprob: -4.616221904754639
    4. 'atasets' → logprob: -6.116221904754639
    5. 'ec' → logprob: -7.116221904754639
    6. 'e' → logprob: -7.366221904754639
    7. 'emand' → logprob: -7.866221904754639
    8. 'efs' → logprob: -7.866221904754639
    9. 'el' → logprob: -8.11622142791748
    10. 'ay' → logprob: -8.36622142791748

Token 1126: '(inputs' (ID: 78697)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07901018857955933
    2. '():
' → logprob: -3.204010248184204
    3. '(lines' → logprob: -4.329010009765625
    4. '(input' → logprob: -4.454010009765625
    5. '(num' → logprob: -5.829010009765625
    6. '(d' → logprob: -6.079010009765625
    7. '(N' → logprob: -6.579010009765625
    8. '(data' → logprob: -6.829010009765625
    9. '(line' → logprob: -7.329010009765625
    10. '(inputs' → logprob: -7.704010009765625

Token 1127: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6720293164253235
    2. '):' → logprob: -0.7970293164253235
    3. '):
' → logprob: -3.2970292568206787
    4. '(lines' → logprob: -7.047029495239258
    5. ')' → logprob: -8.422029495239258
    6. ':list' → logprob: -8.797029495239258
    7. '   ' → logprob: -9.547029495239258
    8. '():' → logprob: -9.547029495239258
    9. '```' → logprob: -9.547029495239258
    10. '(inputs' → logprob: -9.922029495239258

Token 1128: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0004564135451801121
    2. ')' → logprob: -8.125456809997559
    3. ' List' → logprob: -8.875456809997559
    4. '[List' → logprob: -11.000456809997559
    5. '   ' → logprob: -14.000456809997559
    6. 'Iterator' → logprob: -14.000456809997559
    7. '):
' → logprob: -15.000456809997559
    8. '
' → logprob: -15.000456809997559
    9. '(List' → logprob: -15.125456809997559
    10. 'Iterable' → logprob: -15.125456809997559

Token 1129: '[' (ID: 58)
  Prédit: '[List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.0031185373663902283
    2. '[str' → logprob: -6.378118515014648
    3. '[int' → logprob: -6.628118515014648
    4. '[' → logprob: -9.503118515014648
    5. '[
' → logprob: -11.503118515014648
    6. ':' → logprob: -13.378118515014648
    7. '[list' → logprob: -13.378118515014648
    8. ')' → logprob: -13.628118515014648
    9. '   ' → logprob: -13.753118515014648
    10. '):
' → logprob: -13.878118515014648

Token 1130: 'Tuple' (ID: 40048)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.9582474231719971
    2. 'Tuple' → logprob: -0.9582474231719971
    3. 'List' → logprob: -1.458247423171997
    4. '[str' → logprob: -8.708247184753418
    5. '[List' → logprob: -10.333247184753418
    6. ' str' → logprob: -11.833247184753418
    7. ' Tuple' → logprob: -11.958247184753418
    8. 'tuple' → logprob: -12.083247184753418
    9. ' List' → logprob: -12.833247184753418
    10. 'Str' → logprob: -12.958247184753418

Token 1131: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.3132970929145813
    2. 'int' → logprob: -1.3132970333099365
    3. '[List' → logprob: -10.563297271728516
    4. '[
' → logprob: -12.438297271728516
    5. 'List' → logprob: -12.438297271728516
    6. '   ' → logprob: -13.938297271728516
    7. ' int' → logprob: -15.438297271728516
    8. ',int' → logprob: -15.438297271728516
    9. '(int' → logprob: -16.688297271728516
    10. '[' → logprob: -17.188297271728516

Token 1132: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.8723723292350769
    2. ',' → logprob: -1.1223723888397217
    3. 'int' → logprob: -1.3723723888397217
    4. '[int' → logprob: -5.872372150421143
    5. ',
' → logprob: -9.4973726272583
    6. ' ,' → logprob: -9.7473726272583
    7. ',List' → logprob: -10.3723726272583
    8. ']int' → logprob: -11.1223726272583
    9. '   ' → logprob: -11.7473726272583
    10. ' int' → logprob: -11.7473726272583

Token 1133: ',List' (ID: 166273)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011058438569307327
    2. ',List' → logprob: -4.511058330535889
    3. ',int' → logprob: -12.261058807373047
    4. ',
' → logprob: -13.136058807373047
    5. ' ,' → logprob: -13.511058807373047
    6. ',String' → logprob: -14.011058807373047
    7. ',str' → logprob: -14.136058807373047
    8. ',list' → logprob: -14.511058807373047
    9. '
' → logprob: -15.261058807373047
    10. '   ' → logprob: -16.511058807373047

Token 1134: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.00522237503901124
    2. '[int' → logprob: -5.505222320556641
    3. '[' → logprob: -7.005222320556641
    4. '[List' → logprob: -8.38022232055664
    5. ']])' → logprob: -12.63022232055664
    6. 'str' → logprob: -13.50522232055664
    7. ']]]' → logprob: -13.75522232055664
    8. ']]' → logprob: -14.88022232055664
    9. '[
' → logprob: -14.88022232055664
    10. ')])' → logprob: -16.50522232055664

Token 1135: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.6933332085609436
    2. ']])' → logprob: -0.6933332085609436
    3. '])' → logprob: -9.443333625793457
    4. ']' → logprob: -10.068333625793457
    5. ']]:
' → logprob: -10.568333625793457
    6. ']])
' → logprob: -11.443333625793457
    7. ']]]' → logprob: -11.443333625793457
    8. ']],' → logprob: -11.943333625793457
    9. '```' → logprob: -12.943333625793457
    10. ')]' → logprob: -13.193333625793457

Token 1136: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22852256894111633
    2. '])' → logprob: -1.603522539138794
    3. '):' → logprob: -6.978522777557373
    4. '):
' → logprob: -7.103522777557373
    5. ']):
' → logprob: -7.853522777557373
    6. ']):' → logprob: -7.978522777557373
    7. '>)' → logprob: -8.603522300720215
    8. '   ' → logprob: -8.728522300720215
    9. ')->' → logprob: -9.353522300720215
    10. '`)' → logprob: -9.603522300720215

Token 1137: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.701314389705658
    2. '->' → logprob: -1.7013144493103027
    3. ':
' → logprob: -2.4513144493103027
    4. ' ->' → logprob: -2.4513144493103027
    5. '   ' → logprob: -2.9513144493103027
    6. 'def' → logprob: -3.5763144493103027
    7. '(outputs' → logprob: -3.5763144493103027
    8. ')' → logprob: -4.201314449310303
    9. '(inputs' → logprob: -4.201314449310303
    10. '```' → logprob: -6.076314449310303

Token 1138: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.00011760921915993094
    2. ' List' → logprob: -9.250117301940918
    3. '[List' → logprob: -10.750117301940918
    4. '   ' → logprob: -17.875118255615234
    5. '	List' → logprob: -18.750118255615234
    6. '[' → logprob: -19.000118255615234
    7. 'list' → logprob: -20.125118255615234
    8. '[]' → logprob: -21.000118255615234
    9. '_list' → logprob: -21.125118255615234
    10. '[str' → logprob: -22.250118255615234

Token 1139: '[str' (ID: 33439)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008444105042144656
    2. '[List' → logprob: -7.250844478607178
    3. '[int' → logprob: -9.00084400177002
    4. '[
' → logprob: -11.87584400177002
    5. 'bool' → logprob: -12.50084400177002
    6. '
' → logprob: -15.50084400177002
    7. '[str' → logprob: -16.125844955444336
    8. '```' → logprob: -16.625844955444336
    9. '   ' → logprob: -17.250844955444336
    10. '<bool' → logprob: -17.875844955444336

Token 1140: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.014442491345107555
    2. ']:' → logprob: -4.514442443847656
    3. ']' → logprob: -6.764442443847656
    4. ':
' → logprob: -6.889442443847656
    5. ']:
' → logprob: -8.014442443847656
    6. '   ' → logprob: -8.514442443847656
    7. '']:
' → logprob: -9.139442443847656
    8. '):
' → logprob: -9.139442443847656
    9. ']>
' → logprob: -9.139442443847656
    10. ':' → logprob: -9.639442443847656

Token 1141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033847857266664505
    2. 'results' → logprob: -3.5338478088378906
    3. ' results' → logprob: -5.533847808837891
    4. 'outputs' → logprob: -9.53384780883789
    5. 'result' → logprob: -10.15884780883789
    6. '```' → logprob: -11.53384780883789
    7. 'output' → logprob: -11.90884780883789
    8. '	results' → logprob: -12.28384780883789
    9. ' outputs' → logprob: -12.90884780883789
    10. ' result' → logprob: -13.65884780883789

Token 1142: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.0029673574026674032
    2. ' results' → logprob: -6.002967357635498
    3. '   ' → logprob: -7.752967357635498
    4. 'outputs' → logprob: -9.75296688079834
    5. 'result' → logprob: -13.12796688079834
    6. '	results' → logprob: -14.25296688079834
    7. 'output' → logprob: -14.37796688079834
    8. 'answers' → logprob: -15.00296688079834
    9. 'responses' → logprob: -15.25296688079834
    10. '```' → logprob: -15.62796688079834

Token 1143: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6988521814346313
    2. ' =' → logprob: -0.6988521814346313
    3. '=[]' → logprob: -5.823852062225342
    4. '   ' → logprob: -6.198852062225342
    5. ':' → logprob: -7.698852062225342
    6. '.append' → logprob: -8.9488525390625
    7. '=[]
' → logprob: -9.6988525390625
    8. '[]' → logprob: -10.3238525390625
    9. '```' → logprob: -12.5738525390625
    10. ' ' → logprob: -12.5738525390625

Token 1144: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.02330021746456623
    2. '[]' → logprob: -3.7733001708984375
    3. ' []
' → logprob: -10.023300170898438
    4. '   ' → logprob: -11.773300170898438
    5. '[]

' → logprob: -13.023300170898438
    6. ' []' → logprob: -15.398300170898438
    7. '[' → logprob: -15.773300170898438
    8. '[
' → logprob: -17.148300170898438
    9. '["' → logprob: -18.148300170898438
    10. '[])
' → logprob: -18.773300170898438

Token 1145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036439071409404278
    2. 'for' → logprob: -6.003643989562988
    3. ' for' → logprob: -6.753643989562988
    4. '	for' → logprob: -14.628643989562988
    5. '    
' → logprob: -15.253643989562988
    6. '       ' → logprob: -15.628643989562988
    7. '
' → logprob: -15.878643989562988
    8. '```' → logprob: -17.628643035888672
    9. '   ' → logprob: -18.628643035888672
    10. '    ' → logprob: -19.003643035888672

Token 1146: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.32135966420173645
    2. '   ' → logprob: -1.321359634399414
    3. ' for' → logprob: -4.821359634399414
    4. '	for' → logprob: -11.946359634399414
    5. '
' → logprob: -13.446359634399414
    6. '    
' → logprob: -13.821359634399414
    7. '```' → logprob: -14.571359634399414
    8. '       ' → logprob: -17.196359634399414
    9. ' ' → logprob: -17.571359634399414
    10. '   ' → logprob: -18.071359634399414

Token 1147: ' (' (ID: 350)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0015560438623651862
    2. '(N' → logprob: -6.501555919647217
    3. '   ' → logprob: -10.751556396484375
    4. 'n' → logprob: -10.751556396484375
    5. ' N' → logprob: -11.751556396484375
    6. '_N' → logprob: -13.501556396484375
    7. '(n' → logprob: -14.126556396484375
    8. ' (' → logprob: -15.376556396484375
    9. ' ' → logprob: -15.751556396484375
    10. '(' → logprob: -16.126556396484375

Token 1148: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.5451681974809617e-05
    2. 'n' → logprob: -11.750015258789062
    3. '   ' → logprob: -12.375015258789062
    4. ' N' → logprob: -12.750015258789062
    5. ' ' → logprob: -15.625015258789062
    6. ')' → logprob: -16.750015258789062
    7. '_N' → logprob: -16.750015258789062
    8. '
' → logprob: -16.875015258789062
    9. '(N' → logprob: -17.500015258789062
    10. '	N' → logprob: -17.750015258789062

Token 1149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006347587914206088
    2. ',M' → logprob: -7.500634670257568
    3. ' ,' → logprob: -9.625635147094727
    4. ',
' → logprob: -11.375635147094727
    5. '   ' → logprob: -13.875635147094727
    6. ',int' → logprob: -14.250635147094727
    7. ',N' → logprob: -14.375635147094727
    8. ',m' → logprob: -14.500635147094727
    9. '‌,' → logprob: -14.875635147094727
    10. ',K' → logprob: -16.125635147094727

Token 1150: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0015040287980809808
    2. ' M' → logprob: -6.501503944396973
    3. '   ' → logprob: -13.376503944396973
    4. '    ' → logprob: -16.37650489807129
    5. '  ' → logprob: -18.00150489807129
    6. '       ' → logprob: -18.12650489807129
    7. ' ' → logprob: -18.25150489807129
    8. '     ' → logprob: -19.62650489807129
    9. '           ' → logprob: -20.50150489807129
    10. '
' → logprob: -20.75150489807129

Token 1151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9385402993066236e-05
    2. ' ,' → logprob: -11.250019073486328
    3. ',List' → logprob: -13.500019073486328
    4. '   ' → logprob: -13.750019073486328
    5. ',
' → logprob: -13.875019073486328
    6. ',n' → logprob: -14.250019073486328
    7. ',input' → logprob: -14.500019073486328
    8. '       ' → logprob: -15.125019073486328
    9. '‌,' → logprob: -15.625019073486328
    10. ',line' → logprob: -15.875019073486328

Token 1152: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.00020568605395965278
    2. ' grid' → logprob: -8.500205993652344
    3. 'lines' → logprob: -13.375205993652344
    4. '   ' → logprob: -14.375205993652344
    5. 'rows' → logprob: -18.000205993652344
    6. '	grid' → logprob: -18.000205993652344
    7. '    ' → logprob: -18.125205993652344
    8. '_grid' → logprob: -18.375205993652344
    9. ' lines' → logprob: -18.625205993652344
    10. '       ' → logprob: -18.625205993652344

Token 1153: '_lines' (ID: 42980)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001182607957161963
    2. '_lines' → logprob: -6.876182556152344
    3. '   ' → logprob: -9.001182556152344
    4. '),' → logprob: -12.376182556152344
    5. ' )' → logprob: -12.376182556152344
    6. 'lines' → logprob: -12.501182556152344
    7. '):
' → logprob: -12.626182556152344
    8. '       ' → logprob: -13.001182556152344
    9. '_)' → logprob: -13.126182556152344
    10. ')
' → logprob: -13.376182556152344

Token 1154: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000614028365816921
    2. '):' → logprob: -8.375614166259766
    3. '):
' → logprob: -8.625614166259766
    4. '   ' → logprob: -8.750614166259766
    5. '       ' → logprob: -10.875614166259766
    6. '),' → logprob: -11.250614166259766
    7. ' )' → logprob: -12.000614166259766
    8. ',' → logprob: -13.375614166259766
    9. '    ' → logprob: -14.125614166259766
    10. '):

' → logprob: -14.125614166259766

Token 1155: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.27881085872650146
    2. ',' → logprob: -2.528810977935791
    3. ':' → logprob: -2.778810977935791
    4. 'in' → logprob: -3.403810977935791
    5. ':
' → logprob: -3.528810977935791
    6. '   ' → logprob: -3.903810977935791
    7. '):
' → logprob: -4.653810977935791
    8. '       ' → logprob: -5.028810977935791
    9. ')' → logprob: -6.528810977935791
    10. '):' → logprob: -7.278810977935791

Token 1156: ' inputs' (ID: 21963)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.0019294669618830085
    2. ' inputs' → logprob: -6.25192928314209
    3. '   ' → logprob: -14.50192928314209
    4. '(inputs' → logprob: -15.00192928314209
    5. '.inputs' → logprob: -18.126930236816406
    6. 'outputs' → logprob: -18.501930236816406
    7. '
' → logprob: -19.251930236816406
    8. ' ' → logprob: -19.376930236816406
    9. '_inputs' → logprob: -19.501930236816406
    10. 'input' → logprob: -19.751930236816406

Token 1157: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5630893111228943
    2. ':
' → logprob: -0.9380893111228943
    3. '       ' → logprob: -3.313089370727539
    4. '   ' → logprob: -6.563089370727539
    5. '):
' → logprob: -7.063089370727539
    6. ',' → logprob: -8.063089370727539
    7. '():
' → logprob: -10.063089370727539
    8. '):' → logprob: -10.563089370727539
    9. '        
' → logprob: -10.563089370727539
    10. ':

' → logprob: -10.688089370727539

Token 1158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028274620417505503
    2. '   ' → logprob: -5.8778276443481445
    3. '
' → logprob: -11.877827644348145
    4. '    
' → logprob: -12.502827644348145
    5. '        
' → logprob: -12.877827644348145
    6. '```' → logprob: -13.127827644348145
    7. '    ' → logprob: -13.502827644348145
    8. '           ' → logprob: -13.627827644348145
    9. 'lab' → logprob: -14.502827644348145
    10. '	   ' → logprob: -14.502827644348145

Token 1159: ' labyrinth' (ID: 184257)
  Prédit: 'lab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lab' → logprob: -0.10053616762161255
    2. '       ' → logprob: -2.3505361080169678
    3. ' labyrinth' → logprob: -8.225536346435547
    4. ' lab' → logprob: -10.850536346435547
    5. '   ' → logprob: -10.975536346435547
    6. '           ' → logprob: -11.975536346435547
    7. '```' → logprob: -12.100536346435547
    8. 'labor' → logprob: -12.225536346435547
    9. 'l' → logprob: -12.975536346435547
    10. '
' → logprob: -13.100536346435547

Token 1160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011062674224376678
    2. '=' → logprob: -4.5110626220703125
    3. '       ' → logprob: -11.761062622070312
    4. '   ' → logprob: -12.136062622070312
    5. '    ' → logprob: -14.011062622070312
    6. '        ' → logprob: -14.636062622070312
    7. ' =
' → logprob: -15.511062622070312
    8. '           ' → logprob: -16.136062622070312
    9. ')' → logprob: -16.261062622070312
    10. '=
' → logprob: -16.886062622070312

Token 1161: ' Lab' (ID: 19557)
  Prédit: 'Lab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Lab' → logprob: -0.00020354038861114532
    2. ' Lab' → logprob: -8.500203132629395
    3. 'Labor' → logprob: -17.25020408630371
    4. 'Frag' → logprob: -18.37520408630371
    5. 'Labs' → logprob: -19.87520408630371
    6. '       ' → logprob: -20.37520408630371
    7. '   ' → logprob: -20.75020408630371
    8. 'L' → logprob: -22.00020408630371
    9. 'LAB' → logprob: -22.37520408630371
    10. '    ' → logprob: -22.75020408630371

Token 1162: 'yrinth' (ID: 113153)
  Prédit: 'yrinth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yrinth' → logprob: -0.0003799104888457805
    2. 'yr' → logprob: -8.37537956237793
    3. 'Frag' → logprob: -10.62537956237793
    4. 'ry' → logprob: -11.00037956237793
    5. 'ymph' → logprob: -11.00037956237793
    6. 'raph' → logprob: -11.25037956237793
    7. 'rypt' → logprob: -11.50037956237793
    8. 'ynth' → logprob: -11.50037956237793
    9. 'r' → logprob: -12.00037956237793
    10. 'y' → logprob: -12.12537956237793

Token 1163: 'Factory' (ID: 4870)
  Prédit: 'Factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factory' → logprob: -2.975612187583465e-05
    2. 'factory' → logprob: -10.750029563903809
    3. 'Frag' → logprob: -12.750029563903809
    4. '_factory' → logprob: -13.750029563903809
    5. 'Factor' → logprob: -14.000029563903809
    6. 'from' → logprob: -14.000029563903809
    7. '   ' → logprob: -14.625029563903809
    8. 'Solver' → logprob: -15.375029563903809
    9. 'Fact' → logprob: -15.500029563903809
    10. '(' → logprob: -15.500029563903809

Token 1164: '.from' (ID: 10935)
  Prédit: '.from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.001611866056919098
    2. 'from' → logprob: -6.501611709594727
    3. '.' → logprob: -9.126611709594727
    4. ' .' → logprob: -15.626611709594727
    5. '#from' → logprob: -15.626611709594727
    6. '```' → logprob: -15.626611709594727
    7. '   ' → logprob: -16.626611709594727
    8. '.From' → logprob: -17.126611709594727
    9. '	from' → logprob: -17.251611709594727
    10. '.of' → logprob: -17.626611709594727

Token 1165: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -5.097437315271236e-05
    2. 'Input' → logprob: -10.62505054473877
    3. '_inputs' → logprob: -11.12505054473877
    4. 'input' → logprob: -11.62505054473877
    5. 'inputs' → logprob: -13.62505054473877
    6. '_INPUT' → logprob: -14.62505054473877
    7. '_Input' → logprob: -14.62505054473877
    8. '```' → logprob: -14.87505054473877
    9. 'INPUT' → logprob: -16.500051498413086
    10. '_output' → logprob: -16.625051498413086

Token 1166: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -2.6060808522743173e-05
    2. 'N' → logprob: -10.750025749206543
    3. '
' → logprob: -13.250025749206543
    4. ' (' → logprob: -14.125025749206543
    5. '   ' → logprob: -14.500025749206543
    6. '(' → logprob: -14.750025749206543
    7. '```' → logprob: -14.875025749206543
    8. '(M' → logprob: -15.000025749206543
    9. '(
' → logprob: -15.375025749206543
    10. '       ' → logprob: -16.62502670288086

Token 1167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011129508493468165
    2. ',M' → logprob: -6.876112937927246
    3. ' ,' → logprob: -9.751112937927246
    4. '       ' → logprob: -11.751112937927246
    5. 'M' → logprob: -12.376112937927246
    6. ',
' → logprob: -12.751112937927246
    7. '(M' → logprob: -13.126112937927246
    8. '   ' → logprob: -13.376112937927246
    9. '           ' → logprob: -13.751112937927246
    10. '               ' → logprob: -14.501112937927246

Token 1168: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -4.036524842376821e-05
    2. ' M' → logprob: -10.125040054321289
    3. '   ' → logprob: -15.875040054321289
    4. '       ' → logprob: -17.37504005432129
    5. '           ' → logprob: -18.00004005432129
    6. '               ' → logprob: -18.25004005432129
    7. '```' → logprob: -18.37504005432129
    8. '    ' → logprob: -18.75004005432129
    9. '                   ' → logprob: -18.87504005432129
    10. ' ' → logprob: -19.62504005432129

Token 1169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.5014188799541444e-05
    2. ',
' → logprob: -11.125044822692871
    3. ' ,' → logprob: -11.125044822692871
    4. '(grid' → logprob: -12.125044822692871
    5. 'grid' → logprob: -12.250044822692871
    6. '       ' → logprob: -13.375044822692871
    7. '
' → logprob: -13.625044822692871
    8. '```' → logprob: -14.375044822692871
    9. ')' → logprob: -14.875044822692871
    10. '   ' → logprob: -14.875044822692871

Token 1170: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.002227098448202014
    2. 'M' → logprob: -6.502227306365967
    3. ' grid' → logprob: -7.252227306365967
    4. ' M' → logprob: -11.752226829528809
    5. '
' → logprob: -13.627226829528809
    6. '(grid' → logprob: -13.752226829528809
    7. '   ' → logprob: -13.752226829528809
    8. '```' → logprob: -13.877226829528809
    9. 'maze' → logprob: -14.252226829528809
    10. '       ' → logprob: -14.252226829528809

Token 1171: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -2.5107177862082608e-05
    2. 'lines' → logprob: -10.875024795532227
    3. 'grid' → logprob: -13.125024795532227
    4. '   ' → logprob: -14.125024795532227
    5. '_grid' → logprob: -14.375024795532227
    6. '       ' → logprob: -14.375024795532227
    7. '```' → logprob: -14.500024795532227
    8. 'Lines' → logprob: -15.000024795532227
    9. '_LINES' → logprob: -15.250024795532227
    10. ')' → logprob: -15.625024795532227

Token 1172: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6809858679771423
    2. '       ' → logprob: -0.9309858679771423
    3. ')
' → logprob: -2.305985927581787
    4. '<|end|>' → logprob: -11.055985450744629
    5. '):
' → logprob: -11.555985450744629
    6. '
' → logprob: -12.180985450744629
    7. '),' → logprob: -12.680985450744629
    8. ')
' → logprob: -12.680985450744629
    9. '           ' → logprob: -13.180985450744629
    10. ',' → logprob: -13.180985450744629

Token 1173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014691782183945179
    2. 'solver' → logprob: -4.2646918296813965
    3. ' solver' → logprob: -7.8896918296813965
    4. '   ' → logprob: -9.389691352844238
    5. '```' → logprob: -10.514691352844238
    6. 'solution' → logprob: -11.139691352844238
    7. '_solver' → logprob: -11.514691352844238
    8. 'result' → logprob: -12.014691352844238
    9. '
' → logprob: -12.639691352844238
    10. '           ' → logprob: -12.764691352844238

Token 1174: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.0011454568011686206
    2. '       ' → logprob: -7.251145362854004
    3. ' solver' → logprob: -7.751145362854004
    4. '   ' → logprob: -12.376145362854004
    5. 'solution' → logprob: -14.251145362854004
    6. 'sol' → logprob: -15.751145362854004
    7. 'resolver' → logprob: -16.62614631652832
    8. 'result' → logprob: -17.50114631652832
    9. '        
' → logprob: -17.50114631652832
    10. '_solver' → logprob: -17.50114631652832

Token 1175: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01642622984945774
    2. '=' → logprob: -4.141426086425781
    3. '.can' → logprob: -8.266426086425781
    4. '       ' → logprob: -10.016426086425781
    5. '   ' → logprob: -10.266426086425781
    6. '_can' → logprob: -10.891426086425781
    7. '.' → logprob: -11.766426086425781
    8. '_result' → logprob: -11.891426086425781
    9. 'can' → logprob: -12.016426086425781
    10. ' can' → logprob: -12.266426086425781

Token 1176: ' Lab' (ID: 19557)
  Prédit: 'Lab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Lab' → logprob: -0.00033546582562848926
    2. ' Lab' → logprob: -8.000335693359375
    3. 'Labor' → logprob: -20.000335693359375
    4. 'Labs' → logprob: -21.500335693359375
    5. ' lab' → logprob: -22.875335693359375
    6. '   ' → logprob: -23.125335693359375
    7. 'LAB' → logprob: -23.250335693359375
    8. '_lab' → logprob: -25.125335693359375
    9. 'L' → logprob: -25.500335693359375
    10. 'lab' → logprob: -25.750335693359375

Token 1177: 'yrinth' (ID: 113153)
  Prédit: 'yrinth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yrinth' → logprob: -1.9623810658231378e-05
    2. 'ryn' → logprob: -11.875020027160645
    3. 'rin' → logprob: -12.500020027160645
    4. 'ry' → logprob: -13.125020027160645
    5. 'yr' → logprob: -13.250020027160645
    6. 'ynth' → logprob: -13.625020027160645
    7. 'arith' → logprob: -14.125020027160645
    8. 'r' → logprob: -14.500020027160645
    9. 'ir' → logprob: -14.750020027160645
    10. 'y' → logprob: -15.000020027160645

Token 1178: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -7.584239938296378e-06
    2. 'solver' → logprob: -11.875007629394531
    3. '_solver' → logprob: -16.00000762939453
    4. '(L' → logprob: -16.12500762939453
    5. 'Solve' → logprob: -16.75000762939453
    6. 'olver' → logprob: -16.75000762939453
    7. '
' → logprob: -17.25000762939453
    8. '       ' → logprob: -17.87500762939453
    9. ' Solver' → logprob: -18.25000762939453
    10. 'Resolver' → logprob: -18.25000762939453

Token 1179: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0005904443096369505
    2. 'lab' → logprob: -7.5005903244018555
    3. '.lab' → logprob: -11.125590324401855
    4. '(' → logprob: -11.500590324401855
    5. '(
' → logprob: -12.125590324401855
    6. 'Lab' → logprob: -12.750590324401855
    7. '(self' → logprob: -12.875590324401855
    8. ' lab' → logprob: -14.750590324401855
    9. '_lab' → logprob: -15.625590324401855
    10. '(lat' → logprob: -15.625590324401855

Token 1180: 'ab' (ID: 378)
  Prédit: 'ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.0008276138687506318
    2. 'aby' → logprob: -7.625827789306641
    3. 'abr' → logprob: -8.75082778930664
    4. 'lab' → logprob: -9.75082778930664
    5. 'abor' → logprob: -10.50082778930664
    6. 'l' → logprob: -11.00082778930664
    7. '
' → logprob: -11.75082778930664
    8. '(' → logprob: -12.25082778930664
    9. 'a' → logprob: -12.50082778930664
    10. 'abd' → logprob: -12.50082778930664

Token 1181: 'yrinth' (ID: 113153)
  Prédit: 'yrinth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yrinth' → logprob: -0.001684228191152215
    2. 'r' → logprob: -7.001684188842773
    3. '   ' → logprob: -8.501684188842773
    4. 'rin' → logprob: -8.876684188842773
    5. 'arith' → logprob: -9.126684188842773
    6. '       ' → logprob: -9.501684188842773
    7. 'raph' → logprob: -10.876684188842773
    8. 'ith' → logprob: -11.126684188842773
    9. ' labyrinth' → logprob: -11.126684188842773
    10. ' ' → logprob: -11.251684188842773

Token 1182: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.26937973499298096
    2. '       ' → logprob: -2.0193796157836914
    3. ')' → logprob: -2.2693796157836914
    4. ')
' → logprob: -11.394379615783691
    5. '   ' → logprob: -12.019379615783691
    6. ').' → logprob: -12.769379615783691
    7. '
' → logprob: -13.019379615783691
    8. ' )
' → logprob: -13.144379615783691
    9. '<|end|>' → logprob: -13.269379615783691
    10. '):
' → logprob: -14.144379615783691

Token 1183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003920655872207135
    2. 'result' → logprob: -7.875391960144043
    3. 'results' → logprob: -11.625391960144043
    4. '   ' → logprob: -13.750391960144043
    5. ' result' → logprob: -14.125391960144043
    6. '```' → logprob: -14.250391960144043
    7. 'if' → logprob: -15.875391960144043
    8. 'response' → logprob: -16.00039291381836
    9. 'answer' → logprob: -17.00039291381836
    10. '
' → logprob: -17.37539291381836

Token 1184: ' can' (ID: 665)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6032894253730774
    2. 'results' → logprob: -0.8532894253730774
    3. '       ' → logprob: -4.228289604187012
    4. ' results' → logprob: -5.478289604187012
    5. 'if' → logprob: -5.603289604187012
    6. ' result' → logprob: -5.728289604187012
    7. 'can' (adapté à ' can') → logprob: -6.978289604187012
    8. 'res' → logprob: -8.603289604187012
    9. ' if' → logprob: -9.228289604187012
    10. 'success' → logprob: -10.728289604187012

Token 1185: '_complete' (ID: 67286)
  Prédit: '_collect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_collect' → logprob: -0.010329666547477245
    2. '_' → logprob: -5.135329723358154
    3. '_complete' → logprob: -7.135329723358154
    4. 'collect' → logprob: -7.260329723358154
    5. '_continue' → logprob: -7.260329723358154
    6. '   ' → logprob: -7.635329723358154
    7. '_col' → logprob: -7.885329723358154
    8. ' collect' → logprob: -8.135329246520996
    9. '_re' → logprob: -8.260329246520996
    10. '_return' → logprob: -8.260329246520996

Token 1186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01837562583386898
    2. '=' → logprob: -4.018375396728516
    3. '       ' → logprob: -9.143375396728516
    4. 'd' → logprob: -9.768375396728516
    5. '   ' → logprob: -10.268375396728516
    6. '=True' → logprob: -11.518375396728516
    7. '           ' → logprob: -12.768375396728516
    8. ',' → logprob: -12.893375396728516
    9. '_complete' → logprob: -13.018375396728516
    10. '_' → logprob: -13.393375396728516

Token 1187: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.3869830071926117
    2. ' solver' → logprob: -1.136983036994934
    3. '"' → logprob: -9.386982917785645
    4. ''' → logprob: -11.136982917785645
    5. ' "' → logprob: -12.386982917785645
    6. 'sol' → logprob: -12.511982917785645
    7. ' '' → logprob: -13.011982917785645
    8. '"s' → logprob: -13.636982917785645
    9. ''s' → logprob: -13.886982917785645
    10. '_solver' → logprob: -15.136982917785645

Token 1188: '.can' (ID: 46002)
  Prédit: '.can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.can' → logprob: -2.618001053633634e-05
    2. 'can' → logprob: -10.625025749206543
    3. '_can' → logprob: -13.625025749206543
    4. '	can' → logprob: -15.250025749206543
    5. '.' → logprob: -15.750025749206543
    6. '(can' → logprob: -16.12502670288086
    7. ' can' → logprob: -17.37502670288086
    8. ' .' → logprob: -17.50002670288086
    9. '.Can' → logprob: -18.00002670288086
    10. '   ' → logprob: -18.25002670288086

Token 1189: '_collect' (ID: 169999)
  Prédit: '_collect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_collect' → logprob: -0.005801755469292402
    2. 'collect' → logprob: -5.630801677703857
    3. '_complete' → logprob: -6.130801677703857
    4. 'complete' → logprob: -10.755802154541016
    5. '.collect' → logprob: -13.880802154541016
    6. '_col' → logprob: -14.505802154541016
    7. 'Collect' → logprob: -15.130802154541016
    8. ' collect' → logprob: -15.505802154541016
    9. '```' → logprob: -15.630802154541016
    10. '
' → logprob: -15.630802154541016

Token 1190: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -7.107425062713446e-06
    2. 'all' → logprob: -11.875006675720215
    3. '_complete' → logprob: -18.75000762939453
    4. '_' → logprob: -19.37500762939453
    5. '
' → logprob: -19.50000762939453
    6. '_ALL' → logprob: -19.50000762939453
    7. '```' → logprob: -19.62500762939453
    8. ' all' → logprob: -20.00000762939453
    9. '_every' → logprob: -20.50000762939453
    10. '	all' → logprob: -20.62500762939453

Token 1191: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.006036276929080486
    2. '_all' → logprob: -5.256036281585693
    3. 'and' → logprob: -7.131036281585693
    4. ' and' → logprob: -13.506035804748535
    5. 'all' → logprob: -15.256035804748535
    6. '```' → logprob: -15.381035804748535
    7. '_every' → logprob: -16.25603675842285
    8. '_t' → logprob: -16.88103675842285
    9. '_' → logprob: -17.00603675842285
    10. '_then' → logprob: -17.38103675842285

Token 1192: '_return' (ID: 29287)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.5048530030981055e-06
    2. '_return' → logprob: -13.750001907348633
    3. ' return' → logprob: -14.750001907348633
    4. '{return' → logprob: -17.000001907348633
    5. '
' → logprob: -17.375001907348633
    6. 'eturn' → logprob: -18.500001907348633
    7. 'Return' → logprob: -18.875001907348633
    8. '.return' → logprob: -19.500001907348633
    9. ')return' → logprob: -19.625001907348633
    10. ':return' → logprob: -20.500001907348633

Token 1193: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018911674851551652
    2. '
' → logprob: -9.125188827514648
    3. '<|end|>' → logprob: -10.125188827514648
    4. '<|end|>' → logprob: -12.000188827514648
    5. '        
' → logprob: -12.125188827514648
    6. ')' → logprob: -12.375188827514648
    7. '```' → logprob: -12.500188827514648
    8. '           ' → logprob: -13.125188827514648
    9. 'results' → logprob: -13.250188827514648
    10. ' results' → logprob: -13.500188827514648

Token 1194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.723352049040841e-06
    2. '
' → logprob: -13.375004768371582
    3. '```' → logprob: -13.375004768371582
    4. '<|end|>' → logprob: -14.000004768371582
    5. '        
' → logprob: -14.625004768371582
    6. '<|end|>' → logprob: -16.375003814697266
    7. '           ' → logprob: -16.625003814697266
    8. '   ' → logprob: -16.875003814697266
    9. '{
' → logprob: -17.625003814697266
    10. 'result' → logprob: -18.125003814697266

Token 1195: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.1699157953262329
    2. '       ' → logprob: -2.1699156761169434
    3. ' results' → logprob: -3.1699156761169434
    4. 'result' → logprob: -10.294916152954102
    5. 'if' → logprob: -10.919916152954102
    6. '	results' → logprob: -11.669916152954102
    7. ' if' → logprob: -11.919916152954102
    8. '```' → logprob: -14.419916152954102
    9. '_results' → logprob: -14.544916152954102
    10. '           ' → logprob: -14.919916152954102

Token 1196: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00040660108788870275
    2. '.' → logprob: -7.875406742095947
    3. '.app' → logprob: -11.125406265258789
    4. '.extend' → logprob: -11.625406265258789
    5. 'append' → logprob: -14.125406265258789
    6. '.setdefault' → logprob: -14.625406265258789
    7. ' .' → logprob: -14.750406265258789
    8. '.Append' → logprob: -15.375406265258789
    9. '.ap' → logprob: -15.625406265258789
    10. '<|end|>' → logprob: -15.750406265258789

Token 1197: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0011108051985502243
    2. '('' → logprob: -7.001111030578613
    3. '"' → logprob: -8.626111030578613
    4. '(' → logprob: -11.001111030578613
    5. '(
' → logprob: -13.126111030578613
    6. ''' → logprob: -14.126111030578613
    7. '(("' → logprob: -15.126111030578613
    8. '(""' → logprob: -16.376110076904297
    9. '   ' → logprob: -17.001110076904297
    10. ' "' → logprob: -17.126110076904297

Token 1198: 'YES' (ID: 31958)
  Prédit: 'YES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.4813712239265442
    2. '"' → logprob: -1.7313711643218994
    3. 'Yes' → logprob: -1.7313711643218994
    4. 'Possible' → logprob: -4.3563714027404785
    5. 'possible' → logprob: -4.3563714027404785
    6. 'yes' → logprob: -6.9813714027404785
    7. 'P' → logprob: -7.4813714027404785
    8. 'TA' → logprob: -8.60637092590332
    9. ''' → logprob: -8.73137092590332
    10. 'Y' → logprob: -9.35637092590332

Token 1199: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: 0.0
    2. '\n' → logprob: -18.875
    3. ''' → logprob: -20.25
    4. '```' → logprob: -20.25
    5. '"""' → logprob: -21.0
    6. ' "' → logprob: -21.0
    7. 'if' → logprob: -21.0
    8. '"
' → logprob: -21.875
    9. ' if' → logprob: -22.0
    10. '""' → logprob: -22.375

Token 1200: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.008716450072824955
    2. 'if' → logprob: -4.758716583251953
    3. ')' → logprob: -9.258716583251953
    4. '"' → logprob: -12.133716583251953
    5. '	if' → logprob: -14.633716583251953
    6. '```' → logprob: -15.008716583251953
    7. '   ' → logprob: -15.133716583251953
    8. 'If' → logprob: -17.133716583251953
    9. ')
' → logprob: -17.383716583251953
    10. '")' → logprob: -17.758716583251953

Token 1201: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.693147599697113
    2. 'can' → logprob: -0.693147599697113
    3. '	can' → logprob: -15.443147659301758
    4. '(can' → logprob: -16.193147659301758
    5. '_can' → logprob: -17.068147659301758
    6. ' ' → logprob: -19.068147659301758
    7. '.can' → logprob: -19.443147659301758
    8. '-can' → logprob: -22.943147659301758
    9. 'Can' → logprob: -22.943147659301758
    10. 'c' → logprob: -22.943147659301758

Token 1202: '_complete' (ID: 67286)
  Prédit: '_complete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_complete' → logprob: -0.00015681622608099133
    2. 'complete' → logprob: -9.37515640258789
    3. 'can' → logprob: -10.00015640258789
    4. '_can' → logprob: -11.00015640258789
    5. '_continue' → logprob: -12.25015640258789
    6. ' can' → logprob: -13.50015640258789
    7. ' complete' → logprob: -13.62515640258789
    8. '_com' → logprob: -14.37515640258789
    9. '_collect' → logprob: -15.12515640258789
    10. '_' → logprob: -15.25015640258789

Token 1203: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.008638089522719383
    2. 'else' → logprob: -4.75863790512085
    3. ')' → logprob: -11.008638381958008
    4. '==' → logprob: -12.133638381958008
    5. ' ==' → logprob: -14.508638381958008
    6. '```' → logprob: -15.133638381958008
    7. ' )' → logprob: -15.508638381958008
    8. '	else' → logprob: -15.758638381958008
    9. '           ' → logprob: -16.133638381958008
    10. '<|end|>' → logprob: -16.258638381958008

Token 1204: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0004897649050690234
    2. ' "' → logprob: -7.625489711761475
    3. '   ' → logprob: -14.625490188598633
    4. ''' → logprob: -14.625490188598633
    5. '"No' → logprob: -14.750490188598633
    6. '       ' → logprob: -15.375490188598633
    7. ')' → logprob: -15.625490188598633
    8. '
' → logprob: -17.125490188598633
    9. '    ' → logprob: -17.625490188598633
    10. '("' → logprob: -17.750490188598633

Token 1205: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.0009163398644886911
    2. '"' → logprob: -7.000916481018066
    3. '"No' → logprob: -12.250916481018066
    4. ' NO' → logprob: -17.12591552734375
    5. '_NO' → logprob: -19.25091552734375
    6. '"N' → logprob: -19.37591552734375
    7. 'no' → logprob: -20.25091552734375
    8. '   ' → logprob: -20.37591552734375
    9. '.NO' → logprob: -20.75091552734375
    10. ''' → logprob: -21.50091552734375

Token 1206: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00022153646568767726
    2. ')' → logprob: -8.750221252441406
    3. '")
' → logprob: -9.875221252441406
    4. ')")' → logprob: -11.375221252441406
    5. '")

' → logprob: -17.625221252441406
    6. '')' → logprob: -17.750221252441406
    7. '}")' → logprob: -17.875221252441406
    8. '"' → logprob: -17.875221252441406
    9. ')")
' → logprob: -18.250221252441406
    10. ')
' → logprob: -18.375221252441406

Token 1207: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48942455649375916
    2. '   ' → logprob: -1.3644245862960815
    3. 'return' → logprob: -2.489424467086792
    4. '    
' → logprob: -3.864424467086792
    5. ' return' → logprob: -4.364424705505371
    6. '\n' → logprob: -4.864424705505371
    7. '```' → logprob: -6.239424705505371
    8. '  
' → logprob: -6.364424705505371
    9. '	return' → logprob: -6.614424705505371
    10. ' 
' → logprob: -7.864424705505371

Token 1208: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4861632287502289
    2. 'return' (adapté à ' return') → logprob: -0.9861632585525513
    3. '
' → logprob: -4.736163139343262
    4. ' return' → logprob: -6.111163139343262
    5. '	return' → logprob: -7.486163139343262
    6. '    
' → logprob: -7.736163139343262
    7. '       ' → logprob: -11.986163139343262
    8. '```' → logprob: -12.236163139343262
    9. ' ' → logprob: -12.736163139343262
    10. '  
' → logprob: -12.986163139343262

Token 1209: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.011047814972698689
    2. ' results' → logprob: -4.511047840118408
    3. '	results' → logprob: -18.88604736328125
    4. '[' → logprob: -19.26104736328125
    5. '(results' → logprob: -19.26104736328125
    6. '.results' → logprob: -21.63604736328125
    7. 'Results' → logprob: -22.38604736328125
    8. '_results' → logprob: -22.51104736328125
    9. 'result' → logprob: -23.51104736328125
    10. '[]' → logprob: -24.88604736328125

Token 1210: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5465700626373291
    2. '<|end|>' → logprob: -1.296570062637329
    3. '#' → logprob: -1.921570062637329
    4. '<|end|>' → logprob: -7.92156982421875
    5. 'def' → logprob: -8.17156982421875
    6. '``' → logprob: -8.54656982421875
    7. '
' → logprob: -9.29656982421875
    8. 'import' → logprob: -9.42156982421875
    9. 'if' → logprob: -9.79656982421875
    10. '...' → logprob: -10.29656982421875

Token 1211: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6076973080635071
    2. '<|end|>' → logprob: -0.8576973080635071
    3. '```' → logprob: -3.6076972484588623
    4. 'def' → logprob: -5.857697486877441
    5. '<|end|>' → logprob: -7.482697486877441
    6. 'if' → logprob: -8.482697486877441
    7. 'import' → logprob: -9.107697486877441
    8. ')' → logprob: -9.232697486877441
    9. '
' → logprob: -9.482697486877441
    10. '``' → logprob: -10.857697486877441

Token 1212: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.00032926726271398365
    2. 'main' → logprob: -8.25032901763916
    3. ' process' → logprob: -10.12532901763916
    4. ' parse' → logprob: -11.50032901763916
    5. ' solve' → logprob: -11.87532901763916
    6. ' read' → logprob: -12.50032901763916
    7. ' run' → logprob: -12.62532901763916
    8. ' __' → logprob: -12.87532901763916
    9. '__' → logprob: -14.37532901763916
    10. ' solution' → logprob: -15.50032901763916

Token 1213: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0009219424682669342
    2. '():
' → logprob: -7.000921726226807
    3. ' ():' → logprob: -12.000922203063965
    4. '()' → logprob: -13.250922203063965
    5. '(argv' → logprob: -13.875922203063965
    6. '(args' → logprob: -14.000922203063965
    7. '():
' → logprob: -15.500922203063965
    8. '(' → logprob: -15.750922203063965
    9. '():

' → logprob: -15.875922203063965
    10. '(argc' → logprob: -16.12592124938965

Token 1214: '   ' (ID: 271)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.32951751351356506
    2. ' import' → logprob: -1.5795174837112427
    3. '   ' → logprob: -2.8295176029205322
    4. '```' → logprob: -4.579517364501953
    5. '	import' → logprob: -5.329517364501953
    6. ' input' → logprob: -8.579517364501953
    7. 'input' → logprob: -9.829517364501953
    8. ' lines' → logprob: -9.829517364501953
    9. ' imports' → logprob: -10.204517364501953
    10. '
' → logprob: -10.329517364501953

Token 1215: ' inputs' (ID: 21963)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.02904265560209751
    2. ' import' → logprob: -3.7790427207946777
    3. '   ' → logprob: -5.654042720794678
    4. 'n' → logprob: -6.279042720794678
    5. ' n' → logprob: -8.27904224395752
    6. 't' → logprob: -9.27904224395752
    7. 'input' → logprob: -10.15404224395752
    8. '	import' → logprob: -12.15404224395752
    9. ' input' → logprob: -12.52904224395752
    10. ' t' → logprob: -13.52904224395752

Token 1216: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12700265645980835
    2. '()' → logprob: -3.002002716064453
    3. '   ' → logprob: -3.377002716064453
    4. '():' → logprob: -4.377002716064453
    5. '=' → logprob: -4.627002716064453
    6. '=[]' → logprob: -4.877002716064453
    7. '[]' → logprob: -5.877002716064453
    8. ':' → logprob: -6.877002716064453
    9. '():
' → logprob: -8.127002716064453
    10. '=[]
' → logprob: -8.502002716064453

Token 1217: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2031334489583969
    2. '[]
' → logprob: -1.703133463859558
    3. ' []' → logprob: -6.453133583068848
    4. ' []
' → logprob: -8.953133583068848
    5. '[int' → logprob: -12.078133583068848
    6. '[' → logprob: -12.328133583068848
    7. '[]

' → logprob: -13.078133583068848
    8. '[
' → logprob: -14.078133583068848
    9. '[]"' → logprob: -14.453133583068848
    10. '   ' → logprob: -16.20313262939453

Token 1218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006780149880796671
    2. ' n' → logprob: -5.63178014755249
    3. 'n' → logprob: -7.13178014755249
    4. ' line' → logprob: -7.25678014755249
    5. ' while' → logprob: -7.50678014755249
    6. '```' → logprob: -7.63178014755249
    7. ' for' → logprob: -9.006780624389648
    8. 'import' → logprob: -9.006780624389648
    9. ' lines' → logprob: -9.381780624389648
    10. 'while' → logprob: -9.506780624389648

Token 1219: ' input' (ID: 3422)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3988955616950989
    2. '   ' → logprob: -2.398895502090454
    3. 'n' → logprob: -2.648895502090454
    4. 'import' → logprob: -2.773895502090454
    5. ' t' → logprob: -3.273895502090454
    6. 'for' → logprob: -3.523895502090454
    7. 'T' → logprob: -4.398895740509033
    8. 'num' → logprob: -4.398895740509033
    9. ' n' → logprob: -5.023895740509033
    10. ' T' → logprob: -6.148895740509033

Token 1220: '_iter' (ID: 27043)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6999702453613281
    2. '_line' → logprob: -0.6999702453613281
    3. '_lines' → logprob: -5.199970245361328
    4. '_' → logprob: -7.824970245361328
    5. '_data' → logprob: -7.949970245361328
    6. 'line' → logprob: -8.449970245361328
    7. '()
' → logprob: -8.949970245361328
    8. '().' → logprob: -9.324970245361328
    9. '=' → logprob: -10.949970245361328
    10. '_str' → logprob: -11.699970245361328

Token 1221: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24784879386425018
    2. ' =' → logprob: -1.6228487491607666
    3. '()' → logprob: -3.8728487491607666
    4. '(' → logprob: -7.997848987579346
    5. '().' → logprob: -7.997848987579346
    6. '=input' → logprob: -8.872848510742188
    7. '=line' → logprob: -9.247848510742188
    8. '   ' → logprob: -9.247848510742188
    9. '().__' → logprob: -9.372848510742188
    10. '.readline' → logprob: -9.747848510742188

Token 1222: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.005738697946071625
    2. 'sys' → logprob: -5.255738735198975
    3. ' iter' → logprob: -7.755738735198975
    4. '(iter' → logprob: -9.505738258361816
    5. '(sys' → logprob: -13.755738258361816
    6. ' sys' → logprob: -13.880738258361816
    7. 'map' → logprob: -16.755739212036133
    8. '	iter' → logprob: -17.880739212036133
    9. '_iter' → logprob: -18.380739212036133
    10. '=sys' → logprob: -18.755739212036133

Token 1223: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -1.4974866644479334e-05
    2. 'sys' → logprob: -11.500015258789062
    3. '(input' → logprob: -12.500015258789062
    4. '(iter' → logprob: -15.000015258789062
    5. '(stdin' → logprob: -15.500015258789062
    6. '=sys' → logprob: -15.625015258789062
    7. ' sys' → logprob: -15.875015258789062
    8. '	sys' → logprob: -16.750015258789062
    9. '(lines' → logprob: -16.750015258789062
    10. '((' → logprob: -17.000015258789062

Token 1224: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.6240566083070007e-06
    2. 'stdin' → logprob: -14.125001907348633
    3. '.argv' → logprob: -14.625001907348633
    4. '.stdout' → logprob: -16.125001907348633
    5. '.' → logprob: -16.375001907348633
    6. '(stdin' → logprob: -16.375001907348633
    7. '.std' → logprob: -17.250001907348633
    8. ' stdin' → logprob: -18.625001907348633
    9. '().' → logprob: -18.625001907348633
    10. ').' → logprob: -19.000001907348633

Token 1225: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.05647921562194824
    2. ')' → logprob: -2.9314792156219482
    3. ')
' → logprob: -6.681479454040527
    4. '.readlines' → logprob: -8.181479454040527
    5. '   ' → logprob: -10.931479454040527
    6. ' readline' → logprob: -11.306479454040527
    7. '())' → logprob: -11.681479454040527
    8. '.' → logprob: -12.556479454040527
    9. '()' → logprob: -12.681479454040527
    10. '.__' → logprob: -12.806479454040527

Token 1226: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.006445949897170067
    2. '())' → logprob: -5.25644588470459
    3. '()' → logprob: -6.75644588470459
    4. '('\' → logprob: -11.50644588470459
    5. '())
' → logprob: -11.50644588470459
    6. ')' → logprob: -11.63144588470459
    7. '(' → logprob: -12.00644588470459
    8. '()
' → logprob: -12.13144588470459
    9. '()\' → logprob: -12.75644588470459
    10. 'lines' → logprob: -13.13144588470459

Token 1227: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.05972307175397873
    2. 'strip' → logprob: -3.559723138809204
    3. 'lines' → logprob: -3.809723138809204
    4. 'read' → logprob: -5.434722900390625
    5. 'decode' → logprob: -5.934722900390625
    6. '().' → logprob: -8.059722900390625
    7. 'line' → logprob: -10.809722900390625
    8. 'rstrip' → logprob: -11.309722900390625
    9. ')' → logprob: -12.559722900390625
    10. 'tokens' → logprob: -12.809722900390625

Token 1228: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.4121114822482923e-06
    2. '()' → logprob: -13.125003814697266
    3. '('\' → logprob: -13.625003814697266
    4. '()
' → logprob: -16.875003814697266
    5. '.split' → logprob: -16.875003814697266
    6. '())' → logprob: -17.000003814697266
    7. '()\' → logprob: -17.000003814697266
    8. 'split' → logprob: -18.125003814697266
    9. '(' → logprob: -18.500003814697266
    10. '("\' → logprob: -19.250003814697266

Token 1229: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.2664456789934775e-06
    2. 'lines' → logprob: -14.375000953674316
    3. '().' → logprob: -15.375000953674316
    4. ' split' → logprob: -15.500000953674316
    5. '(split' → logprob: -16.500001907348633
    6. '.split' → logprob: -18.625001907348633
    7. 'spl' → logprob: -19.875001907348633
    8. '_split' → logprob: -20.375001907348633
    9. '()' → logprob: -20.875001907348633
    10. 'read' → logprob: -21.125001907348633

Token 1230: '('\' (ID: 24345)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.22965280711650848
    2. '('\' → logprob: -1.729652762413025
    3. '()' → logprob: -3.7296528816223145
    4. 'lines' → logprob: -5.7296528816223145
    5. '()\' → logprob: -8.479652404785156
    6. '())
' → logprob: -8.854652404785156
    7. '()
' → logprob: -9.354652404785156
    8. '("\' → logprob: -9.979652404785156
    9. ')' → logprob: -10.604652404785156
    10. '()[' → logprob: -10.729652404785156

Token 1231: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002837087959051132
    2. '\n' → logprob: -5.877837181091309
    3. 'newline' → logprob: -11.377837181091309
    4. ''\' → logprob: -12.252837181091309
    5. '```' → logprob: -12.252837181091309
    6. '
' → logprob: -12.502837181091309
    7. 'lines' → logprob: -12.627837181091309
    8. 'ndef' → logprob: -14.002837181091309
    9. '\' → logprob: -14.002837181091309
    10. 'nt' → logprob: -14.877837181091309

Token 1232: ''))
' (ID: 15277)
  Prédit: ''))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))
' → logprob: -0.06388350576162338
    2. ''))' → logprob: -2.8138835430145264
    3. ')' → logprob: -7.313883304595947
    4. '))
' → logprob: -7.563883304595947
    5. '))' → logprob: -7.938883304595947
    6. '   ' → logprob: -8.438883781433105
    7. '()' → logprob: -9.688883781433105
    8. ''))
' → logprob: -10.188883781433105
    9. '')' → logprob: -10.438883781433105
    10. ' '))
' → logprob: -11.938883781433105

Token 1233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.579838752746582
    2. 'while' → logprob: -0.829838752746582
    3. ' while' → logprob: -5.704838752746582
    4. 'for' → logprob: -7.829838752746582
    5. 'try' → logprob: -9.079838752746582
    6. '```' → logprob: -10.204838752746582
    7. ' for' → logprob: -12.204838752746582
    8. '	while' → logprob: -12.579838752746582
    9. 'line' → logprob: -13.329838752746582
    10. '
' → logprob: -13.454838752746582

Token 1234: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0028495676815509796
    2. 'for' → logprob: -6.002849578857422
    3. '   ' → logprob: -8.002849578857422
    4. 'try' → logprob: -10.252849578857422
    5. ' while' → logprob: -12.502849578857422
    6. 'line' → logprob: -15.002849578857422
    7. 'n' → logprob: -17.002849578857422
    8. 'N' → logprob: -18.502849578857422
    9. '
' → logprob: -18.627849578857422
    10. ' for' → logprob: -18.752849578857422

Token 1235: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0003384422743692994
    2. ' True' → logprob: -8.000338554382324
    3. '(True' → logprob: -12.875338554382324
    4. '
' → logprob: -15.500338554382324
    5. 'true' → logprob: -16.375337600708008
    6. '   ' → logprob: -17.000337600708008
    7. '1' → logprob: -17.500337600708008
    8. 'TRUE' → logprob: -18.625337600708008
    9. 'len' → logprob: -18.875337600708008
    10. '=True' → logprob: -19.000337600708008

Token 1236: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032098591327667236
    2. ':' → logprob: -3.6570985317230225
    3. '   ' → logprob: -6.032098770141602
    4. ':
' → logprob: -6.032098770141602
    5. 'try' → logprob: -7.032098770141602
    6. ' try' → logprob: -11.407098770141602
    7. 'line' → logprob: -11.532098770141602
    8. ',' → logprob: -11.782098770141602
    9. ' line' → logprob: -11.907098770141602
    10. '```' → logprob: -11.907098770141602

Token 1237: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01940198428928852
    2. 'try' → logprob: -4.019402027130127
    3. 'line' → logprob: -6.769402027130127
    4. '       ' → logprob: -9.894401550292969
    5. ' try' → logprob: -10.269401550292969
    6. ' line' → logprob: -11.019401550292969
    7. '```' → logprob: -14.519401550292969
    8. '	try' → logprob: -15.144401550292969
    9. '	line' → logprob: -15.269401550292969
    10. '   ' → logprob: -15.519401550292969

Token 1238: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' (adapté à ' try') → logprob: -0.3219285011291504
    2. 'line' → logprob: -1.3219285011291504
    3. '   ' → logprob: -4.82192850112915
    4. '       ' → logprob: -7.94692850112915
    5. ' try' → logprob: -9.071928024291992
    6. ' line' → logprob: -9.321928024291992
    7. '```' → logprob: -11.196928024291992
    8. '	line' → logprob: -13.446928024291992
    9. 'size' → logprob: -13.821928024291992
    10. 'n' → logprob: -13.821928024291992

Token 1239: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3144626021385193
    2. '       ' → logprob: -1.689462661743164
    3. ' line' → logprob: -3.189462661743164
    4. 'line' → logprob: -3.189462661743164
    5. '   ' → logprob: -6.939462661743164
    6. 'n' → logprob: -7.064462661743164
    7. '(line' → logprob: -7.814462661743164
    8. '_line' → logprob: -8.189462661743164
    9. 'row' → logprob: -9.189462661743164
    10. '	line' → logprob: -10.064462661743164

Token 1240: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18812520802021027
    2. 'line' → logprob: -1.9381252527236938
    3. ' line' → logprob: -3.8131251335144043
    4. '           ' → logprob: -5.313125133514404
    5. 'n' → logprob: -8.313125610351562
    6. '   ' → logprob: -8.688125610351562
    7. '#line' → logprob: -10.688125610351562
    8. '	line' → logprob: -10.938125610351562
    9. 'size' → logprob: -11.063125610351562
    10. 'row' → logprob: -11.688125610351562

Token 1241: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.004320691339671612
    2. 'N' → logprob: -5.5043206214904785
    3. ' line' → logprob: -9.254321098327637
    4. '   ' → logprob: -9.754321098327637
    5. '       ' → logprob: -9.879321098327637
    6. 'n' → logprob: -11.129321098327637
    7. 'NM' → logprob: -11.629321098327637
    8. '           ' → logprob: -12.629321098327637
    9. 'header' → logprob: -12.754321098327637
    10. 'size' → logprob: -13.379321098327637

Token 1242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06205787509679794
    2. '=' → logprob: -2.8120579719543457
    3. '=line' → logprob: -9.562057495117188
    4. '       ' → logprob: -11.312057495117188
    5. '           ' → logprob: -12.687057495117188
    6. 'tokens' → logprob: -13.312057495117188
    7. '   ' → logprob: -14.312057495117188
    8. 'token' → logprob: -15.187057495117188
    9. '=input' → logprob: -15.187057495117188
    10. '_tokens' → logprob: -15.437057495117188

Token 1243: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.20142066478729248
    2. ' next' → logprob: -1.7014206647872925
    3. 'input' → logprob: -11.951420783996582
    4. ' input' → logprob: -14.451420783996582
    5. '(next' → logprob: -14.701420783996582
    6. '.next' → logprob: -18.576419830322266
    7. '	next' → logprob: -18.576419830322266
    8. '[next' → logprob: -19.576419830322266
    9. '_next' → logprob: -20.451419830322266
    10. 'line' → logprob: -20.451419830322266

Token 1244: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.38703280687332153
    2. '(input' → logprob: -1.1370327472686768
    3. ' input' → logprob: -8.762032508850098
    4. '=input' → logprob: -12.512032508850098
    5. '	input' → logprob: -14.887032508850098
    6. '(' → logprob: -14.887032508850098
    7. '_input' → logprob: -15.387032508850098
    8. 'line' → logprob: -15.637032508850098
    9. ',input' → logprob: -15.637032508850098
    10. '<input' → logprob: -15.762032508850098

Token 1245: '_iter' (ID: 27043)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.3415973484516144
    2. '_' → logprob: -1.716597318649292
    3. ')' → logprob: -3.216597318649292
    4. '_token' → logprob: -3.341597318649292
    5. '_)' → logprob: -4.341597557067871
    6. '_tokens' → logprob: -4.966597557067871
    7. '_iter' → logprob: -5.466597557067871
    8. '()' → logprob: -5.716597557067871
    9. ')_' → logprob: -6.091597557067871
    10. '_lines' → logprob: -6.716597557067871

Token 1246: ')
' (ID: 446)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.6386026740074158
    2. ')
' → logprob: -1.3886027336120605
    3. ')' → logprob: -1.7636027336120605
    4. '()
' → logprob: -3.3886027336120605
    5. '()' → logprob: -4.8886027336120605
    6. '       ' → logprob: -5.7636027336120605
    7. '().' → logprob: -6.0136027336120605
    8. '())
' → logprob: -6.2636027336120605
    9. '()).' → logprob: -6.7636027336120605
    10. '           ' → logprob: -7.3886027336120605

Token 1247: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004641118925064802
    2. '       ' → logprob: -5.379641056060791
    3. ' if' → logprob: -11.62964153289795
    4. 'if' → logprob: -12.00464153289795
    5. '		' → logprob: -13.12964153289795
    6. '   ' → logprob: -13.87964153289795
    7. '               ' → logprob: -14.50464153289795
    8. '	       ' → logprob: -14.62964153289795
    9. '          ' → logprob: -15.00464153289795
    10. '```' → logprob: -15.12964153289795

Token 1248: ' except' (ID: 6384)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10329409688711166
    2. '       ' → logprob: -2.4782941341400146
    3. '
' → logprob: -4.4782938957214355
    4. '        
' → logprob: -7.2282938957214355
    5. '            
' → logprob: -7.3532938957214355
    6. ' if' → logprob: -7.4782938957214355
    7. 'if' → logprob: -7.8532938957214355
    8. '.strip' → logprob: -8.728294372558594
    9. '               ' → logprob: -9.228294372558594
    10. '		' → logprob: -10.103294372558594

Token 1249: ' Stop' (ID: 22535)
  Prédit: 'Stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -0.0025324986781924963
    2. 'EOF' → logprob: -6.002532482147217
    3. ' Stop' → logprob: -10.002532958984375
    4. 'Break' → logprob: -11.627532958984375
    5. ' EOF' → logprob: -13.377532958984375
    6. 'End' → logprob: -15.127532958984375
    7. 'Keyboard' → logprob: -15.752532958984375
    8. 'Index' → logprob: -15.877532958984375
    9. 'Stopping' → logprob: -16.127532958984375
    10. 'STOP' → logprob: -16.252532958984375

Token 1250: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -9.088346359931165e-07
    2. 'Iterator' → logprob: -14.375000953674316
    3. 'Async' → logprob: -15.875000953674316
    4. 'iteration' → logprob: -16.625
    5. 'Iter' → logprob: -17.0
    6. 'Token' → logprob: -17.75
    7. ' iteration' → logprob: -17.875
    8. 'Exception' → logprob: -18.125
    9. 'Error' → logprob: -18.125
    10. 'Exit' → logprob: -18.25

Token 1251: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1546572893857956
    2. '       ' → logprob: -2.1546573638916016
    3. ':
' → logprob: -4.154657363891602
    4. '           ' → logprob: -4.529657363891602
    5. '   ' → logprob: -7.529657363891602
    6. '<|end|>' → logprob: -9.279657363891602
    7. ',' → logprob: -10.154657363891602
    8. '=' → logprob: -10.529657363891602
    9. '               ' → logprob: -10.779657363891602
    10. ' if' → logprob: -10.904657363891602

Token 1252: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1025473028421402
    2. '       ' → logprob: -2.3525474071502686
    3. ':' → logprob: -6.6025471687316895
    4. '   ' → logprob: -7.4775471687316895
    5. ':
' → logprob: -8.602547645568848
    6. '               ' → logprob: -8.727547645568848
    7. '		' → logprob: -11.352547645568848
    8. '                   ' → logprob: -11.477547645568848
    9. '                       ' → logprob: -11.852547645568848
    10. '	   ' → logprob: -11.977547645568848

Token 1253: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2362345457077026
    2. ' break' → logprob: -1.3612345457077026
    3. '           ' → logprob: -1.6112345457077026
    4. 'break' (adapté à ' break') → logprob: -1.7362345457077026
    5. '   ' → logprob: -2.611234664916992
    6. '	break' → logprob: -6.236234664916992
    7. '               ' → logprob: -6.861234664916992
    8. '
' → logprob: -7.861234664916992
    9. '_break' → logprob: -9.361234664916992
    10. ' ' → logprob: -9.361234664916992

Token 1254: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005398084758780897
    2. ' if' → logprob: -8.250539779663086
    3. '        
' → logprob: -9.375539779663086
    4. '           ' → logprob: -9.375539779663086
    5. 'if' → logprob: -9.375539779663086
    6. '   ' → logprob: -11.500539779663086
    7. '	' → logprob: -12.500539779663086
    8. ',' → logprob: -13.250539779663086
    9. '  
' → logprob: -13.500539779663086
    10. '
' → logprob: -14.000539779663086

Token 1255: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005825583357363939
    2. 'if' → logprob: -5.505825519561768
    3. ' if' → logprob: -6.630825519561768
    4. '           ' → logprob: -7.880825519561768
    5. '        
' → logprob: -10.880825996398926
    6. '   ' → logprob: -11.005825996398926
    7. '```' → logprob: -12.255825996398926
    8. '
' → logprob: -12.755825996398926
    9. '	' → logprob: -13.005825996398926
    10. '	if' → logprob: -14.630825996398926

Token 1256: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20390237867832184
    2. '       ' → logprob: -2.32890248298645
    3. ' if' → logprob: -2.45390248298645
    4. 'n' → logprob: -7.328902244567871
    5. 'N' → logprob: -8.453902244567871
    6. '   ' → logprob: -9.453902244567871
    7. 'parts' → logprob: -9.953902244567871
    8. ' n' → logprob: -10.328902244567871
    9. '        
' → logprob: -11.203902244567871
    10. ' parts' → logprob: -11.328902244567871

Token 1257: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5983343720436096
    2. 'not' → logprob: -0.8483343720436096
    3. 'line' → logprob: -3.848334312438965
    4. ' line' → logprob: -7.098334312438965
    5. '   ' → logprob: -12.473334312438965
    6. 'len' → logprob: -15.723334312438965
    7. '(line' → logprob: -15.973334312438965
    8. '#line' → logprob: -16.47333526611328
    9. ' ' → logprob: -16.97333526611328
    10. '=line' → logprob: -17.22333526611328

Token 1258: '.strip' (ID: 40613)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14488725364208221
    2. '.strip' → logprob: -2.6448872089385986
    3. ' ==' → logprob: -2.7698872089385986
    4. '.' → logprob: -7.144887447357178
    5. '   ' → logprob: -8.64488697052002
    6. '=' → logprob: -9.39488697052002
    7. '.startswith' → logprob: -10.14488697052002
    8. '()==' → logprob: -10.26988697052002
    9. '==
' → logprob: -10.64488697052002
    10. '===' → logprob: -11.51988697052002

Token 1259: '()' (ID: 416)
  Prédit: '()=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()==' → logprob: -0.43174076080322266
    2. '()' → logprob: -1.1817407608032227
    3. '==' → logprob: -3.1817407608032227
    4. ' ==' → logprob: -6.056740760803223
    5. '():' → logprob: -11.306740760803223
    6. '===' → logprob: -12.431740760803223
    7. '()=="' → logprob: -12.931740760803223
    8. '():
' → logprob: -13.556740760803223
    9. ']==' → logprob: -14.056740760803223
    10. '=' → logprob: -14.431740760803223

Token 1260: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.002048197668045759
    2. ' ==' → logprob: -6.252048015594482
    3. '()==' → logprob: -9.25204849243164
    4. '==
' → logprob: -11.62704849243164
    5. ')==' → logprob: -12.12704849243164
    6. '===' → logprob: -12.50204849243164
    7. ']==' → logprob: -13.25204849243164
    8. '=' → logprob: -13.62704849243164
    9. '=='' → logprob: -14.12704849243164
    10. '=="' → logprob: -14.75204849243164

Token 1261: ' '':
' (ID: 125614)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.31881505250930786
    2. '"' → logprob: -1.818814992904663
    3. '''' → logprob: -2.318814992904663
    4. '"":' → logprob: -5.193815231323242
    5. '""' → logprob: -5.318815231323242
    6. '0' → logprob: -6.318815231323242
    7. ''end' → logprob: -9.568815231323242
    8. ''#' → logprob: -10.693815231323242
    9. ''ex' → logprob: -12.193815231323242
    10. ' '' → logprob: -12.568815231323242

Token 1262: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00017505438881926239
    2. ':' → logprob: -9.375175476074219
    3. 'continue' → logprob: -10.375175476074219
    4. ' continue' → logprob: -10.750175476074219
    5. '       ' → logprob: -11.000175476074219
    6. ':
' → logprob: -11.250175476074219
    7. '               ' → logprob: -12.250175476074219
    8. '		' → logprob: -13.375175476074219
    9. '          ' → logprob: -14.375175476074219
    10. '	       ' → logprob: -16.00017547607422

Token 1263: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10264907032251358
    2. 'continue' (adapté à ' continue') → logprob: -2.352648973464966
    3. 'break' → logprob: -6.602649211883545
    4. ' continue' → logprob: -7.102649211883545
    5. '       ' → logprob: -8.602648735046387
    6. '               ' → logprob: -9.727648735046387
    7. ' break' → logprob: -11.602648735046387
    8. '   ' → logprob: -12.477648735046387
    9. '		' → logprob: -13.102648735046387
    10. '	continue' → logprob: -14.227648735046387

Token 1264: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008214225526899099
    2. 'n' → logprob: -8.000821113586426
    3. 'num' → logprob: -9.000821113586426
    4. 'N' → logprob: -9.250821113586426
    5. '```' → logprob: -9.500821113586426
    6. 'tokens' → logprob: -10.125821113586426
    7. '        
' → logprob: -10.625821113586426
    8. 'parts' → logprob: -10.750821113586426
    9. 'if' → logprob: -11.000821113586426
    10. '
' → logprob: -11.250821113586426

Token 1265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016216540709137917
    2. 'n' → logprob: -4.76621675491333
    3. 'N' → logprob: -5.14121675491333
    4. 'num' → logprob: -6.89121675491333
    5. 'parts' → logprob: -8.641216278076172
    6. 'if' → logprob: -9.266216278076172
    7. ' n' → logprob: -9.391216278076172
    8. 'count' → logprob: -9.516216278076172
    9. ' parts' → logprob: -9.891216278076172
    10. '           ' → logprob: -10.016216278076172

Token 1266: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.008752011694014072
    2. 'n' → logprob: -4.88375186920166
    3. 'parts' → logprob: -7.50875186920166
    4. 'NM' → logprob: -8.13375186920166
    5. '       ' → logprob: -8.50875186920166
    6. ' N' → logprob: -10.13375186920166
    7. 'nm' → logprob: -11.00875186920166
    8. ' parts' → logprob: -11.25875186920166
    9. 'dims' → logprob: -11.75875186920166
    10. '   ' → logprob: -12.13375186920166

Token 1267: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019792422652244568
    2. '=' → logprob: -4.019792556762695
    3. ' =' → logprob: -6.644792556762695
    4. ' ,' → logprob: -8.519792556762695
    5. ',M' → logprob: -10.269792556762695
    6. ',N' → logprob: -10.394792556762695
    7. '<|end|>' → logprob: -10.644792556762695
    8. ')' → logprob: -11.269792556762695
    9. 'tokens' → logprob: -11.519792556762695
    10. '<|end|>' → logprob: -12.394792556762695

Token 1268: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.003178901970386505
    2. ' M' → logprob: -5.75317907333374
    3. ' ' → logprob: -14.128178596496582
    4. '  ' → logprob: -16.2531795501709
    5. ' 
' → logprob: -16.5031795501709
    6. '    ' → logprob: -16.5031795501709
    7. '=' → logprob: -16.8781795501709
    8. '  
' → logprob: -17.2531795501709
    9. '   ' → logprob: -17.7531795501709
    10. 'space' → logprob: -18.0031795501709

Token 1269: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014179493300616741
    2. ' =' → logprob: -4.264179706573486
    3. ',' → logprob: -11.139179229736328
    4. '=line' → logprob: -14.389179229736328
    5. '=int' → logprob: -15.389179229736328
    6. '＝' → logprob: -15.639179229736328
    7. '=
' → logprob: -15.764179229736328
    8. '<|end|>' → logprob: -16.639179229736328
    9. '.=' → logprob: -16.764179229736328
    10. ')' → logprob: -17.264179229736328

Token 1270: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.47407805919647217
    2. 'map' → logprob: -0.9740780591964722
    3. '(map' → logprob: -14.724078178405762
    4. '	map' → logprob: -14.974078178405762
    5. '_map' → logprob: -16.349077224731445
    6. 'tuple' → logprob: -16.599077224731445
    7. '[' → logprob: -16.724077224731445
    8. 'm' → logprob: -17.224077224731445
    9. 'list' → logprob: -17.599077224731445
    10. ' tuple' → logprob: -17.724077224731445

Token 1271: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001998704159632325
    2. 'int' → logprob: -6.2519989013671875
    3. '(str' → logprob: -9.876998901367188
    4. '[int' → logprob: -11.626998901367188
    5. 'str' → logprob: -12.126998901367188
    6. '(' → logprob: -13.001998901367188
    7. '<int' → logprob: -14.251998901367188
    8. '=int' → logprob: -14.251998901367188
    9. '(lambda' → logprob: -14.876998901367188
    10. ',int' → logprob: -15.876998901367188

Token 1272: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.002130041131749749
    2. ',line' → logprob: -7.252130031585693
    3. 'line' → logprob: -7.502130031585693
    4. ',' → logprob: -7.627130031585693
    5. ')' → logprob: -8.377130508422852
    6. ' line' → logprob: -9.252130508422852
    7. '=line' → logprob: -10.502130508422852
    8. '[line' → logprob: -11.502130508422852
    9. '#line' → logprob: -11.752130508422852
    10. '(' → logprob: -12.252130508422852

Token 1273: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.1472419600977446e-06
    2. ' line' → logprob: -13.750000953674316
    3. '(line' → logprob: -18.000001907348633
    4. '[line' → logprob: -21.875001907348633
    5. '#line' → logprob: -22.250001907348633
    6. '=line' → logprob: -22.500001907348633
    7. '	line' → logprob: -22.875001907348633
    8. '_line' → logprob: -23.375001907348633
    9. '   ' → logprob: -24.500001907348633
    10. 'Line' → logprob: -24.750001907348633

Token 1274: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.27068567276000977
    2. '.split' → logprob: -1.8956856727600098
    3. '.' → logprob: -2.7706856727600098
    4. '.strip' → logprob: -3.7706856727600098
    5. ' .' → logprob: -6.77068567276001
    6. '.readline' → logprob: -9.645685195922852
    7. '   ' → logprob: -10.895685195922852
    8. '(line' → logprob: -11.145685195922852
    9. '.rstrip' → logprob: -11.645685195922852
    10. '[line' → logprob: -12.145685195922852

Token 1275: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0014538055984303355
    2. '()' → logprob: -6.751453876495361
    3. ')' → logprob: -8.751453399658203
    4. '())
' → logprob: -9.251453399658203
    5. '('' → logprob: -10.626453399658203
    6. '(' → logprob: -13.001453399658203
    7. '(','' → logprob: -13.876453399658203
    8. '())

' → logprob: -14.501453399658203
    9. ' ())' → logprob: -15.126453399658203
    10. '()
' → logprob: -15.501453399658203

Token 1276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007582728285342455
    2. 'grid' → logprob: -5.007582664489746
    3. 'if' → logprob: -8.007582664489746
    4. '```' → logprob: -8.382582664489746
    5. 'try' → logprob: -9.132582664489746
    6. 'line' → logprob: -9.382582664489746
    7. 'lines' → logprob: -10.757582664489746
    8. '   ' → logprob: -10.757582664489746
    9. 'next' → logprob: -10.882582664489746
    10. ' if' → logprob: -11.257582664489746

Token 1277: ' if' (ID: 538)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.030942127108573914
    2. '       ' → logprob: -3.53094220161438
    3. 'if' (adapté à ' if') → logprob: -7.030941963195801
    4. ' grid' → logprob: -8.2809419631958
    5. 'lines' → logprob: -10.2809419631958
    6. 'rows' → logprob: -12.0309419631958
    7. ' if' → logprob: -12.6559419631958
    8. '	grid' → logprob: -12.6559419631958
    9. '           ' → logprob: -13.1559419631958
    10. 'for' → logprob: -13.4059419631958

Token 1278: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.014684110297821e-06
    2. ' N' → logprob: -11.625008583068848
    3. '(' → logprob: -17.500009536743164
    4. '(N' → logprob: -17.625009536743164
    5. ' (' → logprob: -19.125009536743164
    6. '   ' → logprob: -19.125009536743164
    7. 'n' → logprob: -20.250009536743164
    8. ' ' → logprob: -20.250009536743164
    9. '  ' → logprob: -21.250009536743164
    10. '0' → logprob: -21.375009536743164

Token 1279: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6327788829803467
    2. ' ==' → logprob: -0.7577788829803467
    3. '=' → logprob: -9.132779121398926
    4. '   ' → logprob: -11.132779121398926
    5. '>' → logprob: -11.507779121398926
    6. ' ' → logprob: -12.132779121398926
    7. ' !=' → logprob: -12.257779121398926
    8. '```' → logprob: -12.632779121398926
    9. '===' → logprob: -12.757779121398926
    10. ')==' → logprob: -12.882779121398926

Token 1280: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. 'M' → logprob: -20.000009536743164
    4. '۰' → logprob: -20.375009536743164
    5. '０' → logprob: -22.125009536743164
    6. '   ' → logprob: -22.500009536743164
    7. '```' → logprob: -22.625009536743164
    8. '  ' → logprob: -23.375009536743164
    9. '
' → logprob: -23.375009536743164
    10. '=' → logprob: -23.500009536743164

Token 1281: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. 'M' → logprob: -17.375
    4. '۰' → logprob: -19.0
    5. '０' → logprob: -19.625
    6. '
' → logprob: -20.125
    7. '-' → logprob: -20.375
    8. '```' → logprob: -20.625
    9. 'N' → logprob: -21.375
    10. 'H' → logprob: -21.625

Token 1282: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1269361972808838
    2. 'and' → logprob: -2.126936197280884
    3. '   ' → logprob: -12.251935958862305
    4. ' ' → logprob: -13.626935958862305
    5. '	and' → logprob: -14.251935958862305
    6. ' or' → logprob: -14.751935958862305
    7. '0' → logprob: -14.876935958862305
    8. '    ' → logprob: -15.251935958862305
    9. '       ' → logprob: -16.126935958862305
    10. ':' → logprob: -16.376935958862305

Token 1283: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -6.635164754698053e-05
    2. ' M' → logprob: -9.625066757202148
    3. '   ' → logprob: -15.375066757202148
    4. '  ' → logprob: -18.75006675720215
    5. '       ' → logprob: -18.75006675720215
    6. '    ' → logprob: -19.12506675720215
    7. ' ' → logprob: -19.87506675720215
    8. '0' → logprob: -19.87506675720215
    9. '	M' → logprob: -20.62506675720215
    10. '           ' → logprob: -21.00006675720215

Token 1284: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931533813476562
    2. ' ==' → logprob: -0.6931533813476562
    3. '=' → logprob: -13.068153381347656
    4. ')==' → logprob: -13.193153381347656
    5. ' ' → logprob: -14.443153381347656
    6. '()==' → logprob: -15.193153381347656
    7. ']==' → logprob: -15.193153381347656
    8. '===' → logprob: -15.318153381347656
    9. '<|end|>' → logprob: -15.443153381347656
    10. '==
' → logprob: -15.818153381347656

Token 1285: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '۰' → logprob: -22.125001907348633
    4. '=' → logprob: -23.125001907348633
    5. '   ' → logprob: -23.375001907348633
    6. '<|end|>' → logprob: -23.375001907348633
    7. '
' → logprob: -23.625001907348633
    8. '```' → logprob: -23.875001907348633
    9. '०' → logprob: -24.125001907348633
    10. '০' → logprob: -24.375001907348633

Token 1286: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -20.250001907348633
    4. '۰' → logprob: -20.375001907348633
    5. '<|end|>' → logprob: -20.500001907348633
    6. '  ' → logprob: -20.750001907348633
    7. '```' → logprob: -21.625001907348633
    8. '০' → logprob: -21.875001907348633
    9. '०' → logprob: -21.875001907348633
    10. '<|end|>' → logprob: -22.000001907348633

Token 1287: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.494937539100647
    2. '           ' → logprob: -1.369937539100647
    3. ':
' → logprob: -1.994937539100647
    4. '       ' → logprob: -8.744937896728516
    5. ':return' → logprob: -10.369937896728516
    6. '          ' → logprob: -11.369937896728516
    7. '               ' → logprob: -11.369937896728516
    8. '		' → logprob: -11.869937896728516
    9. '   ' → logprob: -12.119937896728516
    10. '):
' → logprob: -12.619937896728516

Token 1288: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010306637705070898
    2. '       ' → logprob: -9.875102996826172
    3. '		' → logprob: -10.625102996826172
    4. '               ' → logprob: -11.875102996826172
    5. '   ' → logprob: -12.250102996826172
    6. '	       ' → logprob: -12.375102996826172
    7. ' break' → logprob: -13.125102996826172
    8. 'break' → logprob: -13.625102996826172
    9. ':' → logprob: -13.750102996826172
    10. '          ' → logprob: -13.875102996826172

Token 1289: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.036921367049217224
    2. '           ' → logprob: -3.536921262741089
    3. ' break' → logprob: -5.036921501159668
    4. 'return' → logprob: -7.536921501159668
    5. '               ' → logprob: -9.286921501159668
    6. '	break' → logprob: -10.786921501159668
    7. '       ' → logprob: -12.661921501159668
    8. '		' → logprob: -13.786921501159668
    9. ' return' → logprob: -14.536921501159668
    10. '_break' → logprob: -15.286921501159668

Token 1290: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.180879816180095e-05
    2. '   ' → logprob: -10.375051498413086
    3. '           ' → logprob: -12.000051498413086
    4. '```' → logprob: -12.250051498413086
    5. 'next' → logprob: -13.000051498413086
    6. '        
' → logprob: -13.250051498413086
    7. '<|end|>' → logprob: -13.500051498413086
    8. 'line' → logprob: -14.125051498413086
    9. '	' → logprob: -14.375051498413086
    10. 'for' → logprob: -14.750051498413086

Token 1291: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0042455545626580715
    2. 'grid' → logprob: -5.629245758056641
    3. '   ' → logprob: -7.379245758056641
    4. ' grid' → logprob: -11.87924575805664
    5. 'lines' → logprob: -12.25424575805664
    6. '           ' → logprob: -13.00424575805664
    7. 'rows' → logprob: -13.50424575805664
    8. '```' → logprob: -13.62924575805664
    9. ' lines' → logprob: -13.75424575805664
    10. '	grid' → logprob: -13.87924575805664

Token 1292: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.0012334455968812108
    2. '       ' → logprob: -7.2512335777282715
    3. ' grid' → logprob: -7.6262335777282715
    4. 'lines' → logprob: -10.626233100891113
    5. 'rows' → logprob: -11.626233100891113
    6. '	grid' → logprob: -13.251233100891113
    7. ' lines' → logprob: -14.876233100891113
    8. '   ' → logprob: -15.751233100891113
    9. '```' → logprob: -15.751233100891113
    10. 'Grid' → logprob: -16.37623405456543

Token 1293: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0006639453349635005
    2. ' =' → logprob: -7.625663757324219
    3. '_line' → logprob: -9.125663757324219
    4. '=' → logprob: -9.875663757324219
    5. '   ' → logprob: -12.500663757324219
    6. '=[]' → logprob: -12.875663757324219
    7. 'lines' → logprob: -12.875663757324219
    8. '=[]
' → logprob: -13.375663757324219
    9. '_' → logprob: -13.625663757324219
    10. '_LINES' → logprob: -14.000663757324219

Token 1294: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3877662420272827
    2. '=' → logprob: -1.1377662420272827
    3. '=[]' → logprob: -7.762766361236572
    4. '=[]
' → logprob: -8.762765884399414
    5. '       ' → logprob: -8.887765884399414
    6. '   ' → logprob: -9.137765884399414
    7. '.append' → logprob: -9.887765884399414
    8. '    ' → logprob: -12.762765884399414
    9. '           ' → logprob: -13.012765884399414
    10. '        ' → logprob: -13.012765884399414

Token 1295: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01477717887610197
    2. '[next' → logprob: -5.014777183532715
    3. ' [' → logprob: -6.514777183532715
    4. '[list' → logprob: -6.514777183532715
    5. '[]
' → logprob: -6.764777183532715
    6. '[N' → logprob: -7.014777183532715
    7. '[n' → logprob: -7.014777183532715
    8. '[List' → logprob: -7.764777183532715
    9. '[str' → logprob: -8.014777183532715
    10. '[line' → logprob: -8.639777183532715

Token 1296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037070848047733307
    2. 'for' → logprob: -5.878706932067871
    3. ' for' → logprob: -7.128706932067871
    4. '   ' → logprob: -9.253706932067871
    5. '           ' → logprob: -13.128706932067871
    6. '	for' → logprob: -13.878706932067871
    7. '```' → logprob: -14.378706932067871
    8. ' ' → logprob: -15.003706932067871
    9. '	' → logprob: -15.753706932067871
    10. '	   ' → logprob: -16.628707885742188

Token 1297: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04114174842834473
    2. '       ' → logprob: -3.2911417484283447
    3. ' for' → logprob: -5.791141510009766
    4. '   ' → logprob: -10.416141510009766
    5. '           ' → logprob: -11.791141510009766
    6. '	for' → logprob: -12.791141510009766
    7. 'while' → logprob: -14.916141510009766
    8. '```' → logprob: -15.291141510009766
    9. '	' → logprob: -16.791141510009766
    10. ' ' → logprob: -17.291141510009766

Token 1298: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.9040898880339228e-05
    2. '_i' → logprob: -10.625028610229492
    3. '_in' → logprob: -13.750028610229492
    4. '_range' → logprob: -14.250028610229492
    5. '_
' → logprob: -14.750028610229492
    6. ' _' → logprob: -14.875028610229492
    7. '_line' → logprob: -15.125028610229492
    8. '_n' → logprob: -15.875028610229492
    9. '_input' → logprob: -16.125028610229492
    10. '_index' → logprob: -16.375028610229492

Token 1299: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -2.522638169466518e-05
    2. 'in' → logprob: -10.625024795532227
    3. 'i' → logprob: -14.625024795532227
    4. ' ' → logprob: -15.375024795532227
    5. ' _' → logprob: -16.500024795532227
    6. '_' → logprob: -17.125024795532227
    7. ' i' → logprob: -18.250024795532227
    8. '	in' → logprob: -18.875024795532227
    9. ' ' → logprob: -19.125024795532227
    10. '  ' → logprob: -19.125024795532227

Token 1300: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011235489509999752
    2. ' range' → logprob: -7.501123428344727
    3. '_' → logprob: -7.751123428344727
    4. '_range' → logprob: -8.876123428344727
    5. '	range' → logprob: -15.251123428344727
    6. '_input' → logprob: -17.001123428344727
    7. '_in' → logprob: -17.126123428344727
    8. '0' → logprob: -17.126123428344727
    9. '(range' → logprob: -17.126123428344727
    10. '   ' → logprob: -17.876123428344727

Token 1301: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.002003580564633012
    2. '(N' → logprob: -6.2520036697387695
    3. '   ' → logprob: -10.00200366973877
    4. ' N' → logprob: -11.37700366973877
    5. 'M' → logprob: -11.75200366973877
    6. '0' → logprob: -12.12700366973877
    7. '       ' → logprob: -12.87700366973877
    8. '(M' → logprob: -13.62700366973877
    9. '	N' → logprob: -14.87700366973877
    10. '(' → logprob: -15.62700366973877

Token 1302: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6576787233352661
    2. '           ' → logprob: -0.7826787233352661
    3. '       ' → logprob: -4.782678604125977
    4. ':
' → logprob: -4.907678604125977
    5. '):' → logprob: -5.032678604125977
    6. ':' → logprob: -7.032678604125977
    7. '   ' → logprob: -8.157678604125977
    8. ',' → logprob: -8.657678604125977
    9. '```' → logprob: -8.782678604125977
    10. '):
' → logprob: -8.907678604125977

Token 1303: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00019173922191839665
    2. '   ' → logprob: -9.000191688537598
    3. 'grid' → logprob: -11.250191688537598
    4. ' line' → logprob: -11.375191688537598
    5. '	       ' → logprob: -11.375191688537598
    6. 'line' → logprob: -12.250191688537598
    7. '```' → logprob: -12.250191688537598
    8. ' lines' → logprob: -12.500191688537598
    9. '       ' → logprob: -12.625191688537598
    10. '		' → logprob: -12.750191688537598

Token 1304: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.008937526494264603
    2. ' grid' → logprob: -5.258937358856201
    3. 'line' → logprob: -5.758937358856201
    4. '               ' → logprob: -8.25893783569336
    5. '           ' → logprob: -8.38393783569336
    6. '   ' → logprob: -11.13393783569336
    7. ' line' → logprob: -11.13393783569336
    8. '	grid' → logprob: -11.25893783569336
    9. 'row' → logprob: -12.00893783569336
    10. ' ' → logprob: -13.25893783569336

Token 1305: '_lines' (ID: 42980)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.03125874698162079
    2. '_lines' → logprob: -3.7812588214874268
    3. '.append' → logprob: -5.281258583068848
    4. 'line' → logprob: -6.406258583068848
    5. '_' → logprob: -7.531258583068848
    6. '=' → logprob: -7.906258583068848
    7. '           ' → logprob: -9.156258583068848
    8. '=line' → logprob: -10.031258583068848
    9. 'lines' → logprob: -10.156258583068848
    10. '_row' → logprob: -10.406258583068848

Token 1306: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.76628842484206e-05
    2. '.' → logprob: -10.125067710876465
    3. '           ' → logprob: -10.750067710876465
    4. '=' → logprob: -13.000067710876465
    5. 'append' → logprob: -13.375067710876465
    6. ' .' → logprob: -14.000067710876465
    7. ' =' → logprob: -14.375067710876465
    8. '   ' → logprob: -15.250067710876465
    9. '+=' → logprob: -16.37506675720215
    10. '.next' → logprob: -16.37506675720215

Token 1307: '(next' (ID: 28757)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -3.166338137816638e-05
    2. '(next' → logprob: -10.750031471252441
    3. ' next' → logprob: -11.500031471252441
    4. '[next' → logprob: -18.000032424926758
    5. 'line' → logprob: -18.625032424926758
    6. '	next' → logprob: -18.750032424926758
    7. '.next' → logprob: -18.875032424926758
    8. '           ' → logprob: -19.625032424926758
    9. '   ' → logprob: -19.875032424926758
    10. ',next' → logprob: -21.125032424926758

Token 1308: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029757777228951454
    2. '(input' → logprob: -3.5297577381134033
    3. ' input' → logprob: -11.904757499694824
    4. '=input' → logprob: -14.654757499694824
    5. '	input' → logprob: -16.65475845336914
    6. '<input' → logprob: -16.77975845336914
    7. '[input' → logprob: -17.15475845336914
    8. '_input' → logprob: -17.15475845336914
    9. ',input' → logprob: -17.40475845336914
    10. '.input' → logprob: -20.52975845336914

Token 1309: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -3.650518920039758e-06
    2. 'iter' → logprob: -13.250003814697266
    3. '(input' → logprob: -13.750003814697266
    4. '_input' → logprob: -15.250003814697266
    5. '_iterator' → logprob: -15.625003814697266
    6. 'input' → logprob: -15.625003814697266
    7. '_it' → logprob: -17.625003814697266
    8. '_iters' → logprob: -17.625003814697266
    9. '(iter' → logprob: -17.750003814697266
    10. '_inter' → logprob: -17.875003814697266

Token 1310: '))
' (ID: 2210)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10453005135059357
    2. ')' → logprob: -2.854530096054077
    3. '().' → logprob: -3.729530096054077
    4. '())
' → logprob: -4.354529857635498
    5. '))' → logprob: -5.854529857635498
    6. '()))' → logprob: -6.604529857635498
    7. '()' → logprob: -7.979529857635498
    8. ')
' → logprob: -8.979530334472656
    9. ' ())' → logprob: -9.854530334472656
    10. '()))
' → logprob: -10.104530334472656

Token 1311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09061769396066666
    2. '<|end|>' → logprob: -2.4656176567077637
    3. '        
' → logprob: -6.715617656707764
    4. '<|end|>' → logprob: -8.215618133544922
    5. ')' → logprob: -9.465618133544922
    6. '
' → logprob: -10.215618133544922
    7. '   ' → logprob: -10.840618133544922
    8. '```' → logprob: -11.215618133544922
    9. '            
' → logprob: -11.965618133544922
    10. '      ' → logprob: -12.340618133544922

Token 1312: ' inputs' (ID: 21963)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001394161517964676
    2. '   ' → logprob: -10.125139236450195
    3. 'lab' → logprob: -10.125139236450195
    4. 'solver' → logprob: -10.750139236450195
    5. '```' → logprob: -11.000139236450195
    6. '<|end|>' → logprob: -11.875139236450195
    7. '           ' → logprob: -12.375139236450195
    8. '        
' → logprob: -13.125139236450195
    9. '
' → logprob: -13.250139236450195
    10. ' lab' → logprob: -13.625139236450195

Token 1313: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.021040676161646843
    2. '.' → logprob: -3.896040678024292
    3. '       ' → logprob: -7.896040439605713
    4. 'append' → logprob: -10.521040916442871
    5. '<|end|>' → logprob: -10.521040916442871
    6. ' .' → logprob: -10.646040916442871
    7. '<|end|>' → logprob: -11.271040916442871
    8. '.app' → logprob: -12.146040916442871
    9. '           ' → logprob: -12.271040916442871
    10. '        ' → logprob: -12.521040916442871

Token 1314: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6810328960418701
    2. ' (' → logprob: -1.1810328960418701
    3. '((' → logprob: -1.9310328960418701
    4. '(N' → logprob: -3.18103289604187
    5. '   ' → logprob: -7.931033134460449
    6. '       ' → logprob: -11.30603313446045
    7. ' ((' → logprob: -11.43103313446045
    8. '(n' → logprob: -12.43103313446045
    9. '(None' → logprob: -12.55603313446045
    10. '(
' → logprob: -12.68103313446045

Token 1315: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: 0.0
    2. ' N' → logprob: -16.875
    3. '	N' → logprob: -21.375
    4. '   ' → logprob: -21.375
    5. '(N' → logprob: -22.375
    6. '_N' → logprob: -23.125
    7. '
' → logprob: -23.375
    8. '[N' → logprob: -25.125
    9. ',N' → logprob: -25.25
    10. ' ' → logprob: -25.375

Token 1316: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001399879576638341
    2. ',M' → logprob: -6.626399993896484
    3. ' ,' → logprob: -9.626399993896484
    4. ',
' → logprob: -12.376399993896484
    5. '       ' → logprob: -13.501399993896484
    6. '   ' → logprob: -14.001399993896484
    7. ',N' → logprob: -14.501399993896484
    8. '<|end|>' → logprob: -16.126399993896484
    9. ',m' → logprob: -16.376399993896484
    10. '           ' → logprob: -16.376399993896484

Token 1317: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0006267757853493094
    2. ' M' → logprob: -7.375626564025879
    3. '   ' → logprob: -16.625627517700195
    4. '<|end|>' → logprob: -17.375627517700195
    5. '       ' → logprob: -17.875627517700195
    6. '    ' → logprob: -18.125627517700195
    7. ' ' → logprob: -18.625627517700195
    8. '           ' → logprob: -18.625627517700195
    9. '```' → logprob: -19.500627517700195
    10. '	M' → logprob: -19.625627517700195

Token 1318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002258277963846922
    2. ' ,' → logprob: -9.375226020812988
    3. ',
' → logprob: -9.375226020812988
    4. '       ' → logprob: -11.500226020812988
    5. '   ' → logprob: -11.750226020812988
    6. ',line' → logprob: -12.125226020812988
    7. '<|end|>' → logprob: -12.250226020812988
    8. ',input' → logprob: -12.375226020812988
    9. ',n' → logprob: -12.750226020812988
    10. ',None' → logprob: -12.875226020812988

Token 1319: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -9.615255839889869e-05
    2. ' grid' → logprob: -9.250096321105957
    3. '	grid' → logprob: -20.12509536743164
    4. '(grid' → logprob: -21.12509536743164
    5. '   ' → logprob: -21.37509536743164
    6. '.grid' → logprob: -22.37509536743164
    7. '
' → logprob: -22.87509536743164
    8. '           ' → logprob: -23.37509536743164
    9. ':grid' → logprob: -23.75009536743164
    10. '_grid' → logprob: -23.87509536743164

Token 1320: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.9361264946837764e-07
    2. '_LINES' → logprob: -17.0
    3. 'Lines' → logprob: -17.75
    4. 'lines' → logprob: -18.125
    5. '```' → logprob: -18.125
    6. '   ' → logprob: -18.75
    7. '       ' → logprob: -19.5
    8. ')_' → logprob: -19.75
    9. ')' → logprob: -20.125
    10. '(lines' → logprob: -20.25

Token 1321: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4885983467102051
    2. ')' → logprob: -0.9885983467102051
    3. '       ' → logprob: -4.363598346710205
    4. '))
' → logprob: -6.613598346710205
    5. ')
' → logprob: -8.488597869873047
    6. '   ' → logprob: -9.238597869873047
    7. ')))' → logprob: -10.488597869873047
    8. '           ' → logprob: -13.238597869873047
    9. ' ' → logprob: -13.863597869873047
    10. ' ))' → logprob: -13.988597869873047

Token 1322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027997508645057678
    2. 'results' → logprob: -4.1529974937438965
    3. 'result' → logprob: -5.6529974937438965
    4. 'for' → logprob: -5.7779974937438965
    5. '
' → logprob: -6.4029974937438965
    6. ' for' → logprob: -6.5279974937438965
    7. '    
' → logprob: -7.2779974937438965
    8. '```' → logprob: -7.4029974937438965
    9. ' results' → logprob: -7.5279974937438965
    10. 'outputs' → logprob: -8.652997970581055

Token 1323: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.05723600834608078
    2. '   ' → logprob: -3.0572359561920166
    3. ' results' → logprob: -4.807236194610596
    4. 'outputs' → logprob: -7.932236194610596
    5. '	results' → logprob: -10.432235717773438
    6. 'result' → logprob: -10.557235717773438
    7. '
' → logprob: -11.557235717773438
    8. '    
' → logprob: -12.432235717773438
    9. 'for' → logprob: -12.557235717773438
    10. '```' → logprob: -12.557235717773438

Token 1324: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.4667733609676361
    2. ' =' → logprob: -1.3417733907699585
    3. '.extend' → logprob: -2.966773271560669
    4. '   ' → logprob: -3.091773271560669
    5. '=' → logprob: -4.841773509979248
    6. '<|end|>' → logprob: -6.591773509979248
    7. ' +=' → logprob: -6.841773509979248
    8. '=[]' → logprob: -6.966773509979248
    9. '```' → logprob: -7.591773509979248
    10. '<|end|>' → logprob: -7.841773509979248

Token 1325: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.00861456897109747
    2. ' process' → logprob: -4.758614540100098
    3. '(process' → logprob: -17.883615493774414
    4. '.process' → logprob: -19.633615493774414
    5. '	process' → logprob: -20.008615493774414
    6. '   ' → logprob: -21.508615493774414
    7. '_process' → logprob: -23.383615493774414
    8. 'Process' → logprob: -23.508615493774414
    9. 'proces' → logprob: -23.508615493774414
    10. 'results' → logprob: -23.633615493774414

Token 1326: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.08129866421222687
    2. 'datasets' → logprob: -2.581298589706421
    3. 'results' → logprob: -6.206298828125
    4. 'inputs' → logprob: -8.206298828125
    5. 'd' → logprob: -9.581298828125
    6. '_results' → logprob: -10.956298828125
    7. '(d' → logprob: -12.081298828125
    8. '(results' → logprob: -12.206298828125
    9. ' datasets' → logprob: -12.706298828125
    10. '(inputs' → logprob: -12.831298828125

Token 1327: 'atasets' (ID: 105003)
  Prédit: 'atasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atasets' → logprob: -0.0172126442193985
    2. 'datasets' → logprob: -4.267212867736816
    3. 'ataset' → logprob: -6.017212867736816
    4. 'inputs' → logprob: -7.767212867736816
    5. 'results' → logprob: -9.142212867736816
    6. 'sets' → logprob: -10.892212867736816
    7. ' datasets' → logprob: -10.892212867736816
    8. 'ata' → logprob: -11.267212867736816
    9. '_dataset' → logprob: -11.892212867736816
    10. 'at' → logprob: -12.017212867736816

Token 1328: '(inputs' (ID: 78697)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04208330065011978
    2. '   ' → logprob: -3.292083263397217
    3. ' for' → logprob: -5.542083263397217
    4. '(' → logprob: -10.042083740234375
    5. '
' → logprob: -10.792083740234375
    6. 'print' → logprob: -11.167083740234375
    7. '```' → logprob: -11.417083740234375
    8. '	for' → logprob: -12.167083740234375
    9. '(
' → logprob: -12.167083740234375
    10. '(results' → logprob: -12.167083740234375

Token 1329: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007516595534980297
    2. ')
' → logprob: -5.632516384124756
    3. ')' → logprob: -5.757516384124756
    4. '
' → logprob: -7.757516384124756
    5. '    
' → logprob: -9.007516860961914
    6. 'for' → logprob: -9.132516860961914
    7. ' for' → logprob: -10.507516860961914
    8. '<|end|>' → logprob: -11.007516860961914
    9. '<|end|>' → logprob: -11.382516860961914
    10. '```' → logprob: -11.882516860961914

Token 1330: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5761678814888
    2. '   ' → logprob: -0.8261678814888
    3. ' for' → logprob: -8.451168060302734
    4. '	for' → logprob: -11.326168060302734
    5. '```' → logprob: -13.326168060302734
    6. '
' → logprob: -14.451168060302734
    7. 'import' → logprob: -15.201168060302734
    8. '    
' → logprob: -15.701168060302734
    9. '``' → logprob: -17.201168060302734
    10. '       ' → logprob: -17.201168060302734

Token 1331: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.3213025744771585e-05
    2. '   ' → logprob: -10.500033378601074
    3. 'print' → logprob: -12.250033378601074
    4. ' for' → logprob: -14.000033378601074
    5. '
' → logprob: -17.250032424926758
    6. '	for' → logprob: -17.750032424926758
    7. '```' → logprob: -18.875032424926758
    8. '    
' → logprob: -20.750032424926758
    9. 'import' → logprob: -20.750032424926758
    10. 'from' → logprob: -22.750032424926758

Token 1332: ' r' (ID: 428)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.1609865427017212
    2. 'result' → logprob: -2.1609864234924316
    3. ' res' → logprob: -3.4109864234924316
    4. ' result' → logprob: -7.660986423492432
    5. 'r' → logprob: -12.16098690032959
    6. '   ' → logprob: -14.91098690032959
    7. ' r' → logprob: -17.160985946655273
    8. 'line' → logprob: -18.160985946655273
    9. 'answer' → logprob: -19.410985946655273
    10. '	res' → logprob: -19.410985946655273

Token 1333: ' in' (ID: 306)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.003196727717295289
    2. ' in' → logprob: -5.753196716308594
    3. ' es' → logprob: -11.628196716308594
    4. 'e' → logprob: -12.003196716308594
    5. 'esu' → logprob: -13.253196716308594
    6. 'ef' → logprob: -14.128196716308594
    7. '   ' → logprob: -14.753196716308594
    8. ' ' → logprob: -14.878196716308594
    9. 'esp' → logprob: -15.378196716308594
    10. 'esize' → logprob: -16.253196716308594

Token 1334: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.06694047152996063
    2. 'print' → logprob: -2.8169405460357666
    3. ' results' → logprob: -5.3169403076171875
    4. ' print' → logprob: -10.191940307617188
    5. 'result' → logprob: -11.441940307617188
    6. 'r' → logprob: -12.691940307617188
    7. '   ' → logprob: -14.316940307617188
    8. 'range' → logprob: -14.941940307617188
    9. '(results' → logprob: -15.316940307617188
    10. '	results' → logprob: -16.566940307617188

Token 1335: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09372252970933914
    2. 'print' → logprob: -3.3437225818634033
    3. ':' → logprob: -3.8437225818634033
    4. ':
' → logprob: -3.9687225818634033
    5. '   ' → logprob: -4.343722343444824
    6. ' print' → logprob: -7.468722343444824
    7. '.print' → logprob: -8.843722343444824
    8. '	print' → logprob: -10.218722343444824
    9. '(print' → logprob: -10.468722343444824
    10. '.' → logprob: -11.093722343444824

Token 1336: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33089038729667664
    2. 'print' → logprob: -1.330890417098999
    3. '   ' → logprob: -4.08089017868042
    4. ' print' → logprob: -7.45589017868042
    5. '```' → logprob: -12.705890655517578
    6. '	print' → logprob: -14.705890655517578
    7. '
' → logprob: -15.955890655517578
    8. 'println' → logprob: -17.080890655517578
    9. '           ' → logprob: -17.205890655517578
    10. '_print' → logprob: -18.080890655517578

Token 1337: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. '   ' → logprob: -21.0
    3. ' print' → logprob: -21.0
    4. '       ' → logprob: -24.75
    5. '	print' → logprob: -26.25
    6. '```' → logprob: -26.25
    7. 'println' → logprob: -26.25
    8. '
' → logprob: -28.75
    9. 'printf' → logprob: -29.75
    10. '           ' → logprob: -30.125

Token 1338: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0007108822464942932
    2. 'r' → logprob: -7.250710964202881
    3. '(' → logprob: -14.250710487365723
    4. ' r' → logprob: -15.375710487365723
    5. '(
' → logprob: -17.62571144104004
    6. '	r' → logprob: -18.00071144104004
    7. '_r' → logprob: -19.12571144104004
    8. '=r' → logprob: -20.12571144104004
    9. '()' → logprob: -21.12571144104004
    10. '*r' → logprob: -21.37571144104004

Token 1339: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002193908003391698
    2. '())' → logprob: -8.875219345092773
    3. '()' → logprob: -9.500219345092773
    4. '")' → logprob: -13.500219345092773
    5. '')' → logprob: -14.000219345092773
    6. ')
' → logprob: -14.000219345092773
    7. '   ' → logprob: -14.875219345092773
    8. ' )' → logprob: -15.000219345092773
    9. '(' → logprob: -15.375219345092773
    10. '(r' → logprob: -16.250219345092773

Token 1340: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.7954958821064793e-05
    2. '```' → logprob: -11.750018119812012
    3. 'main' → logprob: -11.875018119812012
    4. ' if' → logprob: -12.750018119812012
    5. '#' → logprob: -16.500017166137695
    6. '    
' → logprob: -17.500017166137695
    7. '
' → logprob: -17.500017166137695
    8. '#if' → logprob: -17.625017166137695
    9. '``' → logprob: -18.250017166137695
    10. '  
' → logprob: -19.625017166137695

Token 1341: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2520855665206909
    2. ' __' → logprob: -1.502085566520691
    3. 'name' → logprob: -9.25208568572998
    4. '_name' → logprob: -9.87708568572998
    5. '_' → logprob: -12.62708568572998
    6. ' ' → logprob: -13.25208568572998
    7. ' name' → logprob: -13.75208568572998
    8. 'Name' → logprob: -13.75208568572998
    9. '```' → logprob: -14.62708568572998
    10. '___' → logprob: -14.75208568572998

Token 1342: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03818768262863159
    2. '==' → logprob: -3.7881877422332764
    3. ' ==' → logprob: -4.413187503814697
    4. 'name' → logprob: -6.288187503814697
    5. 'if' → logprob: -7.663187503814697
    6. ' __' → logprob: -8.663187980651855
    7. '=="' → logprob: -9.163187980651855
    8. '=='' → logprob: -10.663187980651855
    9. '```' → logprob: -10.663187980651855
    10. '__.__' → logprob: -11.538187980651855

Token 1343: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0001454955490771681
    2. '__.__' → logprob: -8.87514591217041
    3. '==' → logprob: -12.62514591217041
    4. '__.' → logprob: -14.12514591217041
    5. '__
' → logprob: -14.62514591217041
    6. '=="' → logprob: -15.62514591217041
    7. '__["' → logprob: -15.62514591217041
    8. ' ==' → logprob: -16.000144958496094
    9. '__":
' → logprob: -16.125144958496094
    10. '____' → logprob: -16.125144958496094

Token 1344: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.48754167556762695
    2. '==' → logprob: -0.987541675567627
    3. ' ==' → logprob: -4.862541675567627
    4. '=="' → logprob: -5.362541675567627
    5. '=='' → logprob: -7.112541675567627
    6. '__.__' → logprob: -9.987541198730469
    7. '==
' → logprob: -10.987541198730469
    8. '.__' → logprob: -11.112541198730469
    9. '"' → logprob: -11.237541198730469
    10. '=' → logprob: -11.487541198730469

Token 1345: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2014836072921753
    2. ''' → logprob: -1.7014836072921753
    3. '__' → logprob: -9.576483726501465
    4. ' "__' → logprob: -14.076483726501465
    5. ' '__' → logprob: -16.20148277282715
    6. '"name' → logprob: -17.07648277282715
    7. 'main' → logprob: -17.82648277282715
    8. ''name' → logprob: -17.95148277282715
    9. ''"' → logprob: -18.07648277282715
    10. '   ' → logprob: -18.20148277282715

Token 1346: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.02333923429250717
    2. '__' → logprob: -3.77333927154541
    3. 'name' → logprob: -9.89833927154541
    4. '"' → logprob: -11.02333927154541
    5. 'python' → logprob: -11.39833927154541
    6. 'py' → logprob: -12.64833927154541
    7. ''' → logprob: -12.64833927154541
    8. 'built' → logprob: -13.02333927154541
    9. '__":
' → logprob: -13.27333927154541
    10. '_main' → logprob: -13.27333927154541

Token 1347: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.032667893916368484
    2. '__' → logprob: -3.532667875289917
    3. '__':
' → logprob: -5.907668113708496
    4. '__.__' → logprob: -9.657668113708496
    5. '__.' → logprob: -9.782668113708496
    6. '__
' → logprob: -10.157668113708496
    7. '__["' → logprob: -10.657668113708496
    8. '__
' → logprob: -12.282668113708496
    9. '__()
' → logprob: -13.532668113708496
    10. '__[' → logprob: -13.782668113708496

Token 1348: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.842555426876061e-06
    2. '__' → logprob: -12.500004768371582
    3. ' main' → logprob: -14.500004768371582
    4. '	main' → logprob: -15.000004768371582
    5. '   ' → logprob: -15.625004768371582
    6. '_main' → logprob: -16.7500057220459
    7. ' ' → logprob: -20.7500057220459
    8. '    
' → logprob: -21.1250057220459
    9. '
' → logprob: -21.1250057220459
    10. '(main' → logprob: -21.2500057220459

Token 1349: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.75
    3. '   ' → logprob: -19.0
    4. '	main' → logprob: -21.125
    5. '(main' → logprob: -25.0
    6. 'import' → logprob: -25.125
    7. '_main' → logprob: -25.125
    8. '.main' → logprob: -25.875
    9. '__' → logprob: -26.625
    10. '
' → logprob: -26.75

Token 1350: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1348
Tokens correctement prédits (1ère position, stricte): 645
Tokens correctement prédits (1ère position, avec adaptation): 702
Tokens correctement prédits (top 10): 1166
Précision stricte (1ère position): 47.85%
Précision adaptée (1ère position): 52.08%
Précision (top 10): 86.50%
================================================================================
