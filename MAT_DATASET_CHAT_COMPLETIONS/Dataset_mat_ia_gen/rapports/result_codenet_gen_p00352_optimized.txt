================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a,b=map(int,input().split())
print((a+b)//2)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',b' (ID: 17568)
  → Token d'amorce (pas de prédiction)

Token 2: '=' (ID: 28)
  → Token d'amorce (pas de prédiction)

Token 3: 'map' (ID: 3726)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21952158212661743
    2. '1' → logprob: -1.8445215225219727
    3. '[]' → logprob: -3.9695215225219727
    4. ' ' → logprob: -4.844521522521973
    5. '[' → logprob: -5.344521522521973
    6. '10' → logprob: -5.969521522521973
    7. 'b' → logprob: -6.344521522521973
    8. '5' → logprob: -6.719521522521973
    9. '42' → logprob: -7.719521522521973
    10. ' []' → logprob: -8.219521522521973

Token 4: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0038748965598642826
    2. '(lambda' → logprob: -6.378874778747559
    3. '<|end|>' → logprob: -6.753874778747559
    4. '```' → logprob: -7.378874778747559
    5. '(user' → logprob: -10.128874778747559
    6. ')' → logprob: -10.128874778747559
    7. '(token' → logprob: -10.378874778747559
    8. '<|end|>' → logprob: -10.628874778747559
    9. '(int' → logprob: -11.003874778747559
    10. '(operator' → logprob: -11.128874778747559

Token 5: ',input' (ID: 123014)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6243677735328674
    2. '(input' → logprob: -0.9993677735328674
    3. '<|end|>' → logprob: -3.2493677139282227
    4. '(' → logprob: -3.9993677139282227
    5. '(token' → logprob: -4.749367713928223
    6. '(raw' → logprob: -5.499367713928223
    7. '<|end|>' → logprob: -5.624367713928223
    8. '```' → logprob: -5.749367713928223
    9. ')(' → logprob: -5.874367713928223
    10. '(user' → logprob: -6.124367713928223

Token 6: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.9899082183837891
    2. ')' → logprob: -1.239908218383789
    3. '()' → logprob: -1.239908218383789
    4. '(' → logprob: -3.614908218383789
    5. '(()' → logprob: -5.614908218383789
    6. '```' → logprob: -5.739908218383789
    7. '('' → logprob: -6.364908218383789
    8. '`()' → logprob: -6.489908218383789
    9. '();)' → logprob: -6.489908218383789
    10. '()">' → logprob: -6.864908218383789

Token 7: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005249153473414481
    2. ')' → logprob: -7.875524997711182
    3. 'strip' → logprob: -9.125524520874023
    4. ' split' → logprob: -10.500524520874023
    5. '(split' → logprob: -12.250524520874023
    6. 'rstrip' → logprob: -13.000524520874023
    7. 'read' → logprob: -14.500524520874023
    8. 'spl' → logprob: -15.375524520874023
    9. 's' → logprob: -15.500524520874023
    10. 'replace' → logprob: -16.125524520874023

Token 8: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14080817997455597
    2. '())' → logprob: -2.26580810546875
    3. '))' → logprob: -3.64080810546875
    4. '()' → logprob: -7.64080810546875
    5. '(' → logprob: -7.76580810546875
    6. '()))' → logprob: -8.39080810546875
    7. '`)' → logprob: -8.89080810546875
    8. ')`' → logprob: -10.51580810546875
    9. '')' → logprob: -11.89080810546875
    10. ')")' → logprob: -11.89080810546875

Token 9: 'print' (ID: 1598)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2772359549999237
    2. '#' → logprob: -1.902235984802246
    3. '*' → logprob: -2.527235984802246
    4. '+
' → logprob: -5.527235984802246
    5. 'c' → logprob: -5.652235984802246
    6. '+c' → logprob: -6.402235984802246
    7. '<|end|>' → logprob: -7.402235984802246
    8. ',' → logprob: -7.777235984802246
    9. '
' → logprob: -7.902235984802246
    10. '\' → logprob: -8.277235984802246

Token 10: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007829454843886197
    2. '('' → logprob: -7.8757829666137695
    3. '(a' → logprob: -8.00078296661377
    4. '("("' → logprob: -9.87578296661377
    5. '((' → logprob: -12.50078296661377
    6. '()' → logprob: -12.50078296661377
    7. '(
' → logprob: -13.37578296661377
    8. '(b' → logprob: -13.87578296661377
    9. ' (' → logprob: -14.00078296661377
    10. '(`' → logprob: -14.12578296661377

Token 11: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004658233083318919
    2. ' a' → logprob: -8.000465393066406
    3. 'max' → logprob: -10.000465393066406
    4. '(a' → logprob: -10.000465393066406
    5. 'min' → logprob: -10.750465393066406
    6. 'abs' → logprob: -11.500465393066406
    7. 'pow' → logprob: -13.000465393066406
    8. ' (' → logprob: -13.500465393066406
    9. ' max' → logprob: -13.500465393066406
    10. ' min' → logprob: -14.375465393066406

Token 12: '+b' (ID: 76609)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04208936169743538
    2. ' +' → logprob: -3.6670894622802734
    3. '+b' → logprob: -4.542089462280273
    4. '+a' → logprob: -5.542089462280273
    5. '*' → logprob: -7.667089462280273
    6. '>' → logprob: -8.542089462280273
    7. '+)' → logprob: -8.667089462280273
    8. ')' → logprob: -9.667089462280273
    9. '%' → logprob: -10.167089462280273
    10. '-' → logprob: -10.292089462280273

Token 13: ')//' (ID: 60375)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.47683534026145935
    2. ')' → logprob: -0.9768353700637817
    3. ')**' → logprob: -6.101835250854492
    4. '**' → logprob: -8.351835250854492
    5. ')))' → logprob: -8.476835250854492
    6. ')*' → logprob: -10.351835250854492
    7. '*' → logprob: -11.851835250854492
    8. ')a' → logprob: -11.976835250854492
    9. '```' → logprob: -12.726835250854492
    10. ')+' → logprob: -12.726835250854492

Token 14: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.723973582556937e-05
    2. '3' → logprob: -11.125017166137695
    3. ' ' → logprob: -13.000017166137695
    4. '1' → logprob: -15.875017166137695
    5. ')' → logprob: -17.250017166137695
    6. '```' → logprob: -17.750017166137695
    7. '7' → logprob: -18.375017166137695
    8. '   ' → logprob: -18.500017166137695
    9. '4' → logprob: -18.750017166137695
    10. 'b' → logprob: -19.000017166137695

Token 15: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.491498531133402e-06
    2. '))' → logprob: -11.875009536743164
    3. '`)' → logprob: -14.000009536743164
    4. ' )' → logprob: -14.500009536743164
    5. ')`' → logprob: -15.125009536743164
    6. '*' → logprob: -15.750009536743164
    7. '```' → logprob: -15.750009536743164
    8. '')' → logprob: -16.000009536743164
    9. ')))' → logprob: -16.125009536743164
    10. ')
' → logprob: -16.250009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 13
Tokens correctement prédits (1ère position, stricte): 4
Tokens correctement prédits (1ère position, avec adaptation): 4
Tokens correctement prédits (top 10): 7
Précision stricte (1ère position): 30.77%
Précision adaptée (1ère position): 30.77%
Précision (top 10): 53.85%
================================================================================
