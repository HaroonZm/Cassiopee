================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from collections import deque
input=sys.stdin.readline

class MaxFlow:
    def __init__(self,n):
        self.n=n
        self.g=[[] for _ in range(n)]
    def add_edge(self,a,b,c):
        self.g[a].append([b,c,len(self.g[b])])
        self.g[b].append([a,0,len(self.g[a])-1])
    def bfs(self,s,t,level):
        q=deque([s])
        level[s]=0
        while q:
            v=q.popleft()
            for i,(to,cap,rev) in enumerate(self.g[v]):
                if cap>0 and level[to]<0:
                    level[to]=level[v]+1
                    q.append(to)
        return level[t]>=0
    def dfs(self,v,t,f,level,iter):
        if v==t:
            return f
        while iter[v]<len(self.g[v]):
            to,cap,rev=self.g[v][iter[v]]
            if cap>0 and level[v]<level[to]:
                d=self.dfs(to,t,min(f,cap),level,iter)
                if d>0:
                    self.g[v][iter[v]][1]-=d
                    self.g[to][rev][1]+=d
                    return d
            iter[v]+=1
        return 0
    def max_flow(self,s,t):
        flow=0
        INF=10**9
        level=[-1]*self.n
        while self.bfs(s,t,level):
            iter=[0]*self.n
            while True:
                f=self.dfs(s,t,INF,level,iter)
                if f==0:
                    break
                flow+=f
            level=[-1]*self.n
        return flow

N,E,Q=map(int,input().split())
edges=set()
for _ in range(E):
    f,t_=map(int,input().split())
    a,b=f-1,t_-1
    if a>b:
        a,b=b,a
    edges.add((a,b))
queries=[]
for _ in range(Q):
    M,A,B=map(int,input().split())
    a,b=A-1,B-1
    if a>b:
        a,b=b,a
    queries.append((M,a,b))

for M,a,b in queries:
    if M==1:
        edges.add((a,b))
    else:
        edges.remove((a,b))
    mf=MaxFlow(N)
    for x,y in edges:
        mf.add_edge(x,y,1)
        mf.add_edge(y,x,1)
    print(mf.max_flow(0,N-1))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183791756629944
    2. '.' → logprob: -2.3368380069732666
    3. '<|end|>' → logprob: -2.8368380069732666
    4. '\' → logprob: -4.7118377685546875
    5. 'newline' → logprob: -5.0868377685546875
    6. 'import' → logprob: -5.0868377685546875
    7. '
' → logprob: -5.7118377685546875
    8. '' → logprob: -5.8368377685546875
    9. '<|end|>' → logprob: -5.8368377685546875
    10. '\r' → logprob: -6.3368377685546875

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.006869417615234852
    2. 'os' → logprob: -5.756869316101074
    3. ' math' → logprob: -6.881869316101074
    4. ' collections' → logprob: -7.256869316101074
    5. ' pathlib' → logprob: -7.756869316101074
    6. ' typing' → logprob: -8.131869316101074
    7. ' ' → logprob: -8.256869316101074
    8. ' datetime' → logprob: -9.006869316101074
    9. 'collections' → logprob: -9.131869316101074
    10. ' Py' → logprob: -9.256869316101074

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.47534993290901184
    2. 'import' → logprob: -1.1003499031066895
    3. '.' → logprob: -3.1003499031066895
    4. ' ' → logprob: -8.725350379943848
    5. '```' → logprob: -9.100350379943848
    6. '.import' → logprob: -9.600350379943848
    7. '<|end|>' → logprob: -9.725350379943848
    8. '_' → logprob: -10.100350379943848
    9. '	import' → logprob: -10.725350379943848
    10. '_import' → logprob: -11.475350379943848

Token 6: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.6384101510047913
    2. ' deque' → logprob: -0.8884101510047913
    3. 'deque' → logprob: -2.8884100914001465
    4. ' abc' → logprob: -5.6384100914001465
    5. ' named' → logprob: -7.6384100914001465
    6. 'abc' → logprob: -7.8884100914001465
    7. 'named' → logprob: -8.763410568237305
    8. ' Counter' → logprob: -8.888410568237305
    9. 'default' → logprob: -9.013410568237305
    10. 'Counter' → logprob: -10.638410568237305

Token 7: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.9286866784095764
    2. '\n' → logprob: -1.0536866188049316
    3. '
' → logprob: -1.9286866188049316
    4. 'import' → logprob: -3.1786866188049316
    5. '```' → logprob: -3.3036866188049316
    6. '\' → logprob: -3.8036866188049316
    7. '<|end|>' → logprob: -5.803686618804932
    8. 'newline' → logprob: -6.178686618804932
    9. '' → logprob: -6.928686618804932
    10. '<|end|>' → logprob: -7.053686618804932

Token 8: 'input' (ID: 2586)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5088411569595337
    2. 'import' → logprob: -2.008841037750244
    3. '\n' → logprob: -2.258841037750244
    4. '```' → logprob: -2.633841037750244
    5. '
' → logprob: -3.008841037750244
    6. '\' → logprob: -3.758841037750244
    7. 'def' → logprob: -6.008841037750244
    8. ',' → logprob: -6.133841037750244
    9. '<|end|>' → logprob: -6.258841037750244
    10. '`' → logprob: -6.383841037750244

Token 9: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003019660711288452
    2. '.' → logprob: -5.8780198097229
    3. '()' → logprob: -9.503019332885742
    4. ' (' → logprob: -9.878019332885742
    5. ')' → logprob: -11.003019332885742
    6. '=' → logprob: -11.128019332885742
    7. '(.)' → logprob: -11.503019332885742
    8. '('' → logprob: -12.128019332885742
    9. ''' → logprob: -12.253019332885742
    10. '[' → logprob: -12.753019332885742

Token 10: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0002814775798469782
    2. '.readline' → logprob: -9.00028133392334
    3. '[' → logprob: -9.25028133392334
    4. ' .' → logprob: -10.75028133392334
    5. '.
' → logprob: -11.25028133392334
    6. '.stdin' → logprob: -12.50028133392334
    7. '.​' → logprob: -12.87528133392334
    8. '```' → logprob: -13.25028133392334
    9. '.[' → logprob: -13.37528133392334
    10. '.

' → logprob: -13.50028133392334

Token 11: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04946114495396614
    2. '.readline' → logprob: -3.0494611263275146
    3. '.read' → logprob: -7.174461364746094
    4. '.Read' → logprob: -10.174461364746094
    5. 'read' → logprob: -10.674461364746094
    6. '[' → logprob: -11.924461364746094
    7. '.
' → logprob: -12.049461364746094
    8. '.​' → logprob: -12.174461364746094
    9. '.readlines' → logprob: -12.424461364746094
    10. '.READ' → logprob: -12.799461364746094

Token 12: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0485762394964695
    2. '(' → logprob: -3.4235763549804688
    3. '()
' → logprob: -5.048576354980469
    4. '(
' → logprob: -5.673576354980469
    5. '()

' → logprob: -6.298576354980469
    6. '
' → logprob: -6.298576354980469
    7. '

' → logprob: -7.548576354980469
    8. '()\' → logprob: -8.423576354980469
    9. '(

' → logprob: -9.048576354980469
    10. ' ()' → logprob: -9.673576354980469

Token 13: 'class' (ID: 1444)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.030402658507227898
    2. 'def' → logprob: -4.655402660369873
    3. 'd' → logprob: -4.780402660369873
    4. '(n' → logprob: -5.280402660369873
    5. '(' → logprob: -6.030402660369873
    6. 'q' → logprob: -6.655402660369873
    7. 'N' → logprob: -6.780402660369873
    8. 'b' → logprob: -7.780402660369873
    9. 'queue' → logprob: -8.405402183532715
    10. '()' → logprob: -8.530402183532715

Token 14: ' Max' (ID: 10093)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012023082002997398
    2. ' Queue' → logprob: -6.137022972106934
    3. ' Solution' → logprob: -6.137022972106934
    4. ' My' → logprob: -6.262022972106934
    5. ' Node' → logprob: -6.387022972106934
    6. ' De' → logprob: -6.887022972106934
    7. ' BFS' → logprob: -7.012022972106934
    8. ' Solver' → logprob: -7.887022972106934
    9. ' Stack' → logprob: -8.137022972106934
    10. ' Trie' → logprob: -8.387022972106934

Token 15: 'Flow' (ID: 18017)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1178359985351562
    2. ':' → logprob: -1.1178359985351562
    3. 'Queue' → logprob: -1.9928359985351562
    4. 'Deque' → logprob: -2.4928359985351562
    5. 'Stack' → logprob: -2.8678359985351562
    6. ' :' → logprob: -3.8678359985351562
    7. 'Heap' → logprob: -4.617835998535156
    8. '(Stack' → logprob: -4.617835998535156
    9. '):' → logprob: -4.992835998535156
    10. '(queue' → logprob: -5.242835998535156

Token 16: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006839605630375445
    2. '(' → logprob: -7.750683784484863
    3. '():' → logprob: -9.500683784484863
    4. '(:' → logprob: -9.750683784484863
    5. ' :' → logprob: -10.000683784484863
    6. '>:' → logprob: -11.000683784484863
    7. '):' → logprob: -11.750683784484863
    8. ',:' → logprob: -11.875683784484863
    9. ':**' → logprob: -12.000683784484863
    10. ':
' → logprob: -12.250683784484863

Token 17: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7767435908317566
    2. '   ' → logprob: -1.1517436504364014
    3. '(' → logprob: -2.4017436504364014
    4. '(object' → logprob: -3.1517436504364014
    5. ' :' → logprob: -3.6517436504364014
    6. ' ' → logprob: -3.9017436504364014
    7. ' (' → logprob: -4.151743412017822
    8. '<|end|>' → logprob: -4.901743412017822
    9. '  ' → logprob: -5.401743412017822
    10. '    ' → logprob: -5.401743412017822

Token 18: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0037076810840517282
    2. 'def' (adapté à ' def') → logprob: -5.6287078857421875
    3. '   ' → logprob: -9.878707885742188
    4. ' (' → logprob: -11.128707885742188
    5. 'class' → logprob: -12.003707885742188
    6. ' ' → logprob: -12.128707885742188
    7. ' class' → logprob: -12.378707885742188
    8. '(' → logprob: -12.628707885742188
    9. ' de' → logprob: -12.628707885742188
    10. '	def' → logprob: -12.878707885742188

Token 19: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.007477783132344484
    2. ' init' → logprob: -5.632477760314941
    3. '__' → logprob: -6.132477760314941
    4. 'init' → logprob: -6.632477760314941
    5. '_init' → logprob: -8.757477760314941
    6. ' def' → logprob: -8.882477760314941
    7. '   ' → logprob: -10.257477760314941
    8. ' _' → logprob: -11.007477760314941
    9. 'itialize' → logprob: -11.632477760314941
    10. ' ' → logprob: -12.257477760314941

Token 20: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -18.375
    3. '_init' → logprob: -19.25
    4. 'ini' → logprob: -19.75
    5. 'int' → logprob: -20.0
    6. '	init' → logprob: -20.75
    7. '(init' → logprob: -21.5
    8. 'inite' → logprob: -21.5
    9. '   ' → logprob: -22.125
    10. 'innit' → logprob: -22.125

Token 21: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.02406790293753147
    2. '__' → logprob: -4.0240678787231445
    3. '(' → logprob: -5.3990678787231445
    4. '(self' → logprob: -7.2740678787231445
    5. '__(
' → logprob: -8.149067878723145
    6. '__((' → logprob: -8.774067878723145
    7. '__(*' → logprob: -9.899067878723145
    8. '__('' → logprob: -10.024067878723145
    9. '```' → logprob: -10.774067878723145
    10. '<|end|>' → logprob: -11.024067878723145

Token 22: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006293982733041048
    2. ' self' → logprob: -7.375629425048828
    3. ')' → logprob: -13.875629425048828
    4. ' ' → logprob: -14.000629425048828
    5. '(self' → logprob: -14.875629425048828
    6. '   ' → logprob: -15.125629425048828
    7. '	self' → logprob: -15.750629425048828
    8. ',self' → logprob: -16.500629425048828
    9. 's' → logprob: -17.000629425048828
    10. ',' → logprob: -17.250629425048828

Token 23: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5282604694366455
    2. ' ,' → logprob: -0.9032604694366455
    3. ',self' → logprob: -6.278260231018066
    4. '(self' → logprob: -6.528260231018066
    5. ' )' → logprob: -7.153260231018066
    6. 'self' → logprob: -8.403260231018066
    7. ' ' → logprob: -8.528260231018066
    8. ')' → logprob: -8.653260231018066
    9. '(' → logprob: -9.153260231018066
    10. ' self' → logprob: -9.278260231018066

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.39689356088638306
    2. ',' → logprob: -1.1468935012817383
    3. ')' → logprob: -4.771893501281738
    4. ',n' → logprob: -7.396893501281738
    5. ' ):' → logprob: -7.771893501281738
    6. ' ,' → logprob: -8.021893501281738
    7. ',int' → logprob: -10.521893501281738
    8. '   ' → logprob: -10.646893501281738
    9. ',num' → logprob: -11.021893501281738
    10. ',k' → logprob: -11.396893501281738

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.064297824399546e-05
    2. '        ' → logprob: -10.500070571899414
    3. 'self' → logprob: -10.625070571899414
    4. '      ' → logprob: -12.250070571899414
    5. ' self' → logprob: -12.625070571899414
    6. '   ' → logprob: -12.875070571899414
    7. '     ' → logprob: -12.875070571899414
    8. '    ' → logprob: -13.500070571899414
    9. '	' → logprob: -14.125070571899414
    10. 'n' → logprob: -14.250070571899414

Token 26: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.49654918909072876
    2. 'self' (adapté à ' self') → logprob: -1.371549129486084
    3. '       ' → logprob: -1.996549129486084
    4. '   ' → logprob: -6.746549129486084
    5. '	self' → logprob: -8.121549606323242
    6. '        ' → logprob: -9.746549606323242
    7. '    ' → logprob: -9.746549606323242
    8. ' n' → logprob: -10.246549606323242
    9. ' ' → logprob: -10.621549606323242
    10. 'n' → logprob: -10.746549606323242

Token 27: '.n' (ID: 1835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04496461898088455
    2. '.n' → logprob: -3.544964551925659
    3. ' .' → logprob: -5.044964790344238
    4. '.graph' → logprob: -5.419964790344238
    5. '.ad' → logprob: -6.294964790344238
    6. '.edges' → logprob: -6.544964790344238
    7. '.nodes' → logprob: -8.294964790344238
    8. '.max' → logprob: -9.544964790344238
    9. '.size' → logprob: -9.919964790344238
    10. '.vertices' → logprob: -10.044964790344238

Token 28: '=n' (ID: 47985)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.049196068197488785
    2. '=' → logprob: -3.0491960048675537
    3. ' ' → logprob: -8.174196243286133
    4. ')' → logprob: -9.674196243286133
    5. ' =)' → logprob: -9.799196243286133
    6. '=int' → logprob: -10.049196243286133
    7. ',' → logprob: -10.174196243286133
    8. '<|end|>' → logprob: -10.674196243286133
    9. '   ' → logprob: -11.174196243286133
    10. '  ' → logprob: -11.424196243286133

Token 29: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002925598528236151
    2. '
' → logprob: -9.250292778015137
    3. 'self' → logprob: -9.500292778015137
    4. '   ' → logprob: -10.125292778015137
    5. '<|end|>' → logprob: -10.875292778015137
    6. '        ' → logprob: -11.125292778015137
    7. '      ' → logprob: -11.625292778015137
    8. ',' → logprob: -11.750292778015137
    9. ' self' → logprob: -11.875292778015137
    10. '     ' → logprob: -12.500292778015137

Token 30: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.302704761968926e-05
    2. 'self' → logprob: -10.625073432922363
    3. '   ' → logprob: -10.875073432922363
    4. '
' → logprob: -11.875073432922363
    5. ',' → logprob: -12.000073432922363
    6. '      ' → logprob: -12.125073432922363
    7. '        ' → logprob: -13.125073432922363
    8. '     ' → logprob: -13.125073432922363
    9. '<|end|>' → logprob: -13.500073432922363
    10. ' self' → logprob: -13.750073432922363

Token 31: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005755526013672352
    2. 'self' (adapté à ' self') → logprob: -5.255755424499512
    3. ' self' → logprob: -8.005755424499512
    4. '   ' → logprob: -8.755755424499512
    5. '	self' → logprob: -12.005755424499512
    6. '      ' → logprob: -12.380755424499512
    7. '    ' → logprob: -12.630755424499512
    8. ' ' → logprob: -13.005755424499512
    9. 'def' → logprob: -13.005755424499512
    10. '	' → logprob: -13.005755424499512

Token 32: '.g' (ID: 1940)
  Prédit: '.graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.04362155497074127
    2. '.ad' → logprob: -3.91862154006958
    3. 'graph' → logprob: -4.91862154006958
    4. '.g' → logprob: -5.04362154006958
    5. '.edges' → logprob: -5.54362154006958
    6. ' .' → logprob: -6.79362154006958
    7. '.' → logprob: -7.54362154006958
    8. '   ' → logprob: -7.79362154006958
    9. '.inf' → logprob: -7.91862154006958
    10. ' graph' → logprob: -7.91862154006958

Token 33: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11944491416215897
    2. '=[' → logprob: -2.9944448471069336
    3. '=[]' → logprob: -3.1194448471069336
    4. 'raph' → logprob: -4.119444847106934
    5. '={}' → logprob: -6.994444847106934
    6. '=[[' → logprob: -7.119444847106934
    7. '={' → logprob: -8.744444847106934
    8. ' =' → logprob: -9.119444847106934
    9. 'raf' → logprob: -11.119444847106934
    10. '[' → logprob: -11.369444847106934

Token 34: '[]' (ID: 1951)
  Prédit: '[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.5570885807392187e-05
    2. 'deque' → logprob: -11.875015258789062
    3. ' []' → logprob: -12.000015258789062
    4. '[' → logprob: -13.750015258789062
    5. '[]}' → logprob: -14.500015258789062
    6. '[]
' → logprob: -14.500015258789062
    7. '[]

' → logprob: -16.250015258789062
    8. '][]' → logprob: -17.000015258789062
    9. 'list' → logprob: -17.000015258789062
    10. ']' → logprob: -17.500015258789062

Token 35: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8509345650672913
    2. 'for' → logprob: -1.2259345054626465
    3. '()' → logprob: -1.7259345054626465
    4. '(' → logprob: -2.9759345054626465
    5. ']' → logprob: -3.1009345054626465
    6. '()]' → logprob: -5.8509345054626465
    7. ')' → logprob: -6.8509345054626465
    8. '[]' → logprob: -7.4759345054626465
    9. ']()' → logprob: -8.225934982299805
    10. ')]' → logprob: -8.975934982299805

Token 36: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.44105175137519836
    2. ' range' → logprob: -1.441051721572876
    3. ' _' → logprob: -2.441051721572876
    4. 'range' → logprob: -3.941051721572876
    5. ' ' → logprob: -4.941051959991455
    6. '(range' → logprob: -5.441051959991455
    7. ' i' → logprob: -7.191051959991455
    8. ' in' → logprob: -7.816051959991455
    9. '_range' → logprob: -7.816051959991455
    10. '	range' → logprob: -9.441051483154297

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1430330127477646
    2. 'in' → logprob: -2.018033027648926
    3. 'range' → logprob: -8.518033027648926
    4. 'i' → logprob: -9.643033027648926
    5. ' ' → logprob: -9.768033027648926
    6. '  ' → logprob: -11.893033027648926
    7. 'g' → logprob: -12.018033027648926
    8. '0' → logprob: -12.393033027648926
    9. 'n' → logprob: -12.518033027648926
    10. '_' → logprob: -13.143033027648926

Token 38: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024756586644798517
    2. ' range' → logprob: -6.002475738525391
    3. '(range' → logprob: -17.62747573852539
    4. '	range' → logprob: -17.87747573852539
    5. ' ' → logprob: -18.00247573852539
    6. '   ' → logprob: -18.12747573852539
    7. '  ' → logprob: -19.37747573852539
    8. '_range' → logprob: -19.50247573852539
    9. 'rang' → logprob: -20.25247573852539
    10. '_' → logprob: -21.25247573852539

Token 39: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.792751032160595e-05
    2. '(' → logprob: -9.50008773803711
    3. '(self' → logprob: -11.25008773803711
    4. ' (' → logprob: -17.75008773803711
    5. 'n' → logprob: -18.00008773803711
    6. '(s' → logprob: -18.12508773803711
    7. '(nn' → logprob: -19.37508773803711
    8. '(N' → logprob: -19.50008773803711
    9. '(
' → logprob: -19.62508773803711
    10. ')n' → logprob: -19.75008773803711

Token 40: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.1398757123970427e-05
    2. ' )' → logprob: -12.375011444091797
    3. ')' → logprob: -13.000011444091797
    4. ']' → logprob: -13.000011444091797
    5. '       ' → logprob: -14.000011444091797
    6. ')])' → logprob: -14.750011444091797
    7. '   ' → logprob: -15.125011444091797
    8. '])' → logprob: -15.500011444091797
    9. '])]' → logprob: -15.750011444091797
    10. '))' → logprob: -15.750011444091797

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025463560596108437
    2. '
' → logprob: -3.900463581085205
    3. 'def' → logprob: -5.650463581085205
    4. '    
' → logprob: -7.400463581085205
    5. ' def' → logprob: -7.650463581085205
    6. '       ' → logprob: -9.150463104248047
    7. '	def' → logprob: -9.650463104248047
    8. '        
' → logprob: -10.275463104248047
    9. '
' → logprob: -10.400463104248047
    10. '

' → logprob: -11.275463104248047

Token 42: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.16880173981189728
    2. '   ' → logprob: -1.9188017845153809
    3. ' def' → logprob: -5.043801784515381
    4. '
' → logprob: -6.418801784515381
    5. '	def' → logprob: -8.543801307678223
    6. '    
' → logprob: -8.668801307678223
    7. '<|end|>' → logprob: -10.418801307678223
    8. '       ' → logprob: -10.918801307678223
    9. ':def' → logprob: -11.668801307678223
    10. '```' → logprob: -11.918801307678223

Token 43: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.012627365998923779
    2. 'add' → logprob: -4.387627601623535
    3. 'b' → logprob: -10.012627601623535
    4. ' bfs' → logprob: -10.762627601623535
    5. ' addedge' → logprob: -11.262627601623535
    6. 'a' → logprob: -11.262627601623535
    7. ' ad' → logprob: -11.637627601623535
    8. ' ' → logprob: -11.887627601623535
    9. '_add' → logprob: -12.887627601623535
    10. 'ad' → logprob: -13.512627601623535

Token 44: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0017084944993257523
    2. '_' → logprob: -6.376708507537842
    3. '_edges' → logprob: -13.626708030700684
    4. 'Edge' → logprob: -14.126708030700684
    5. '(_' → logprob: -14.376708030700684
    6. 'edge' → logprob: -14.751708030700684
    7. ' _' → logprob: -14.751708030700684
    8. '```' → logprob: -14.751708030700684
    9. '(' → logprob: -15.001708030700684
    10. '_e' → logprob: -15.001708030700684

Token 45: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1476772129535675
    2. '(self' → logprob: -2.022677183151245
    3. ' (' → logprob: -5.772677421569824
    4. '(u' → logprob: -7.147677421569824
    5. '(s' → logprob: -7.272677421569824
    6. '(a' → logprob: -8.522677421569824
    7. '(i' → logprob: -9.522677421569824
    8. ' ' → logprob: -10.897677421569824
    9. '   ' → logprob: -11.647677421569824
    10. '(x' → logprob: -11.647677421569824

Token 46: ',a' (ID: 26776)
  Prédit: ',u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',u' → logprob: -0.5763430595397949
    2. ',' → logprob: -0.8263430595397949
    3. ' ,' → logprob: -8.576343536376953
    4. ',v' → logprob: -9.201343536376953
    5. 'u' → logprob: -10.451343536376953
    6. ',node' → logprob: -10.701343536376953
    7. ',a' → logprob: -10.951343536376953
    8. ',n' → logprob: -11.451343536376953
    9. ',j' → logprob: -12.076343536376953
    10. ',line' → logprob: -12.201343536376953

Token 47: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2939165234565735
    2. ',b' → logprob: -1.4189164638519287
    3. ' ,' → logprob: -4.418916702270508
    4. ',a' → logprob: -7.793916702270508
    5. ',int' → logprob: -9.543916702270508
    6. ',c' → logprob: -10.043916702270508
    7. ',self' → logprob: -11.543916702270508
    8. ',p' → logprob: -11.543916702270508
    9. ',d' → logprob: -11.668916702270508
    10. ',f' → logprob: -11.793916702270508

Token 48: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010500968433916569
    2. ',c' → logprob: -5.260500907897949
    3. ' ,' → logprob: -5.385500907897949
    4. ',a' → logprob: -8.26050090789795
    5. ',value' → logprob: -9.01050090789795
    6. ',v' → logprob: -9.51050090789795
    7. ',u' → logprob: -9.88550090789795
    8. ',size' → logprob: -10.76050090789795
    9. ',f' → logprob: -10.76050090789795
    10. ',r' → logprob: -11.13550090789795

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015181921189650893
    2. ' ):' → logprob: -7.126518249511719
    3. ')' → logprob: -7.626518249511719
    4. ',' → logprob: -8.501518249511719
    5. '):
' → logprob: -11.001518249511719
    6. ' )' → logprob: -13.501518249511719
    7. ' ,' → logprob: -13.876518249511719
    8. ')：' → logprob: -14.251518249511719
    9. '   ' → logprob: -14.376518249511719
    10. '       ' → logprob: -14.876518249511719

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.195421494543552e-05
    2. ' self' → logprob: -10.25007152557373
    3. 'self' → logprob: -10.50007152557373
    4. '   ' → logprob: -12.87507152557373
    5. '	' → logprob: -13.37507152557373
    6. '	self' → logprob: -13.75007152557373
    7. '    ' → logprob: -13.87507152557373
    8. '      ' → logprob: -14.12507152557373
    9. ',' → logprob: -14.37507152557373
    10. '     ' → logprob: -15.25007152557373

Token 51: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2119549959897995
    2. ' self' → logprob: -2.0869550704956055
    3. '       ' → logprob: -2.7119550704956055
    4. '   ' → logprob: -7.8369550704956055
    5. '	self' → logprob: -9.086955070495605
    6. ' ' → logprob: -11.711955070495605
    7. '	' → logprob: -12.961955070495605
    8. '```' → logprob: -13.461955070495605
    9. '    ' → logprob: -13.711955070495605
    10. '  ' → logprob: -14.211955070495605

Token 52: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.0005243193008936942
    2. '.' → logprob: -7.625524520874023
    3. 'g' → logprob: -11.125524520874023
    4. ' .' → logprob: -11.625524520874023
    5. '`.' → logprob: -13.500524520874023
    6. '​.' → logprob: -13.750524520874023
    7. '```' → logprob: -13.750524520874023
    8. '   ' → logprob: -13.750524520874023
    9. '	g' → logprob: -13.875524520874023

Token 53: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.6240566083070007e-06
    2. 'a' → logprob: -14.000001907348633
    3. '[' → logprob: -14.750001907348633
    4. ' [' → logprob: -16.250001907348633
    5. '   ' → logprob: -17.000001907348633
    6. '[A' → logprob: -17.625001907348633
    7. '```' → logprob: -18.125001907348633
    8. '[u' → logprob: -18.125001907348633
    9. '[int' → logprob: -18.625001907348633
    10. '[g' → logprob: -18.875001907348633

Token 54: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.051313772797584534
    2. '].' → logprob: -3.176313877105713
    3. '.' → logprob: -5.051313877105713
    4. ').' → logprob: -6.301313877105713
    5. '   ' → logprob: -11.801313400268555
    6. ']' → logprob: -12.176313400268555
    7. ' .' → logprob: -12.176313400268555
    8. '.add' → logprob: -12.551313400268555
    9. ')' → logprob: -12.676313400268555
    10. '.push' → logprob: -12.801313400268555

Token 55: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. '.append' → logprob: -16.625
    3. ' append' → logprob: -16.875
    4. 'app' → logprob: -17.375
    5. 'appen' → logprob: -18.875
    6. 'pp' → logprob: -21.125
    7. 'pend' → logprob: -21.25
    8. '_append' → logprob: -21.375
    9. 'Append' → logprob: -21.75
    10. 'push' → logprob: -21.75

Token 56: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0025723290164023638
    2. '((' → logprob: -6.002572536468506
    3. '[' → logprob: -9.627572059631348
    4. '[b' → logprob: -11.002572059631348
    5. '(' → logprob: -12.002572059631348
    6. '(b' → logprob: -12.502572059631348
    7. '(([' → logprob: -12.877572059631348
    8. '[(' → logprob: -13.877572059631348
    9. ' ([' → logprob: -15.377572059631348
    10. '({'' → logprob: -15.627572059631348

Token 57: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -4.620622712536715e-05
    2. ' b' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.000045776367188
    4. '	b' → logprob: -16.250045776367188
    5. '[b' → logprob: -16.375045776367188
    6. ',b' → logprob: -16.375045776367188
    7. 'len' → logprob: -16.750045776367188
    8. '  ' → logprob: -16.750045776367188
    9. ' ' → logprob: -16.875045776367188
    10. '    ' → logprob: -17.125045776367188

Token 58: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.5808165073394775
    2. ',' → logprob: -0.8308165073394775
    3. ' ,' → logprob: -5.330816268920898
    4. 'c' → logprob: -10.955816268920898
    5. ' c' → logprob: -12.330816268920898
    6. ' ' → logprob: -14.330816268920898
    7. ',len' → logprob: -14.330816268920898
    8. '	c' → logprob: -14.955816268920898
    9. '‌,' → logprob: -15.330816268920898
    10. ',int' → logprob: -15.330816268920898

Token 59: ',len' (ID: 73338)
  Prédit: ',len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',len' → logprob: -0.12786635756492615
    2. ',' → logprob: -2.127866268157959
    3. ' ,' → logprob: -7.627866268157959
    4. ',self' → logprob: -7.752866268157959
    5. 'len' → logprob: -11.877866744995117
    6. ',None' → logprob: -12.502866744995117
    7. ',length' → logprob: -13.502866744995117
    8. ',c' → logprob: -13.627866744995117
    9. ' len' → logprob: -13.752866744995117
    10. ',int' → logprob: -13.877866744995117

Token 60: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0013530949363484979
    2. 'self' → logprob: -6.6263532638549805
    3. '(' → logprob: -11.12635326385498
    4. ' self' → logprob: -11.62635326385498
    5. '[self' → logprob: -13.50135326385498
    6. '=self' → logprob: -14.37635326385498
    7. '	self' → logprob: -14.75135326385498
    8. ' (' → logprob: -15.25135326385498
    9. ',self' → logprob: -15.37635326385498
    10. ':self' → logprob: -15.50135326385498

Token 61: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.034420792013406754
    2. 'self' → logprob: -3.4094207286834717
    3. '(self' → logprob: -7.409420967102051
    4. '.self' → logprob: -9.15942096710205
    5. ' self' → logprob: -10.78442096710205
    6. 'g' → logprob: -11.15942096710205
    7. ' .' → logprob: -11.53442096710205
    8. '[self' → logprob: -12.15942096710205
    9. '.s' → logprob: -12.40942096710205
    10. '.' → logprob: -12.65942096710205

Token 62: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.09200985729694366
    2. 'b' → logprob: -3.0920097827911377
    3. '[self' → logprob: -3.7170097827911377
    4. 'self' → logprob: -4.092010021209717
    5. '[g' → logprob: -6.842010021209717
    6. '[' → logprob: -8.842009544372559
    7. 'g' → logprob: -8.842009544372559
    8. '   ' → logprob: -10.467009544372559
    9. ')b' → logprob: -10.467009544372559
    10. '(b' → logprob: -11.217009544372559

Token 63: '])' (ID: 4636)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.0025107357650995255
    2. ')' → logprob: -6.2525105476379395
    3. '])' → logprob: -7.8775105476379395
    4. '[])' → logprob: -9.877511024475098
    5. ')])
' → logprob: -10.002511024475098
    6. ')]' → logprob: -10.252511024475098
    7. ')])

' → logprob: -11.002511024475098
    8. ']])' → logprob: -11.252511024475098
    9. ' )' → logprob: -11.377511024475098
    10. '])]' → logprob: -11.877511024475098

Token 64: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.012874064967036247
    2. '])
' → logprob: -4.387874126434326
    3. ' ])' → logprob: -8.512873649597168
    4. ')' → logprob: -9.637873649597168
    5. ' ])
' → logprob: -10.387873649597168
    6. ')])' → logprob: -10.512873649597168
    7. '])

' → logprob: -11.012873649597168
    8. ',' → logprob: -12.137873649597168
    9. ')
' → logprob: -12.512873649597168
    10. ' )' → logprob: -13.137873649597168

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18109405040740967
    2. 'self' → logprob: -1.8060940504074097
    3. ')' → logprob: -7.931094169616699
    4. ',' → logprob: -8.3060941696167
    5. ' self' → logprob: -8.5560941696167
    6. '	self' → logprob: -8.9310941696167
    7. '<|end|>' → logprob: -9.3060941696167
    8. ',self' → logprob: -9.6810941696167
    9. ' ' → logprob: -9.8060941696167
    10. '	' → logprob: -10.3060941696167

Token 66: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.011610052548348904
    2. '       ' → logprob: -4.51161003112793
    3. ' self' → logprob: -7.51161003112793
    4. '	self' → logprob: -11.88661003112793
    5. '   ' → logprob: -12.13661003112793
    6. '0' → logprob: -13.51161003112793
    7. ' ' → logprob: -13.76161003112793
    8. '```' → logprob: -15.38661003112793
    9. '    ' → logprob: -16.38661003112793
    10. '  ' → logprob: -16.38661003112793

Token 67: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.0001495484757469967
    2. '.' → logprob: -9.125149726867676
    3. 'g' → logprob: -11.750149726867676
    4. '<|end|>' → logprob: -12.125149726867676
    5. ' .' → logprob: -12.375149726867676
    6. '```' → logprob: -12.750149726867676
    7. '[' → logprob: -12.875149726867676
    8. '<|end|>' → logprob: -13.125149726867676
    9. '].' → logprob: -13.250149726867676

Token 68: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.00013285996101330966
    2. 'b' → logprob: -9.00013256072998
    3. '[' → logprob: -11.75013256072998
    4. '[g' → logprob: -14.12513256072998
    5. '[a' → logprob: -15.12513256072998
    6. '[s' → logprob: -16.250133514404297
    7. '[m' → logprob: -17.000133514404297
    8. '[
' → logprob: -17.125133514404297
    9. ' [' → logprob: -17.250133514404297
    10. '[q' → logprob: -17.500133514404297

Token 69: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.6266152858734131
    2. '.append' → logprob: -0.8766152858734131
    3. '.' → logprob: -3.376615285873413
    4. '[' → logprob: -4.751615524291992
    5. ').' → logprob: -5.751615524291992
    6. '   ' → logprob: -6.626615524291992
    7. ' .' → logprob: -6.751615524291992
    8. '       ' → logprob: -7.626615524291992
    9. '`.' → logprob: -10.126615524291992
    10. '[].' → logprob: -10.126615524291992

Token 70: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.0001242772996192798
    2. '.append' → logprob: -9.375123977661133
    3. 'app' → logprob: -10.375123977661133
    4. ' append' → logprob: -12.500123977661133
    5. 'appen' → logprob: -13.375123977661133
    6. 'Append' → logprob: -13.500123977661133
    7. '_append' → logprob: -13.875123977661133
    8. '	append' → logprob: -15.875123977661133
    9. 'pp' → logprob: -16.000123977661133
    10. '0' → logprob: -17.000123977661133

Token 71: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -14.125000953674316
    3. '((' → logprob: -15.750000953674316
    4. '(a' → logprob: -15.875000953674316
    5. ' ([' → logprob: -16.250001907348633
    6. '[' → logprob: -16.875001907348633
    7. '[a' → logprob: -17.375001907348633
    8. '(([' → logprob: -18.625001907348633
    9. '(
' → logprob: -18.750001907348633
    10. '([
' → logprob: -19.250001907348633

Token 72: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.306760805164231e-05
    2. '[a' → logprob: -11.50001335144043
    3. ' a' → logprob: -12.87501335144043
    4. '	a' → logprob: -16.75001335144043
    5. ',a' → logprob: -17.00001335144043
    6. '(a' → logprob: -17.37501335144043
    7. ')a' → logprob: -18.37501335144043
    8. '   ' → logprob: -18.37501335144043
    9. '[
' → logprob: -18.50001335144043
    10. '#a' → logprob: -20.00001335144043

Token 73: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.252296507358551
    2. ',' → logprob: -1.5022964477539062
    3. ' ,' → logprob: -8.252296447753906
    4. ' ' → logprob: -9.502296447753906
    5. ',c' → logprob: -11.127296447753906
    6. '       ' → logprob: -12.752296447753906
    7. '[],' → logprob: -13.252296447753906
    8. '`,' → logprob: -13.377296447753906
    9. '   ' → logprob: -13.752296447753906
    10. ',
' → logprob: -13.877296447753906

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -16.625001907348633
    4. '00' → logprob: -17.500001907348633
    5. ',' → logprob: -18.000001907348633
    6. '000' → logprob: -18.125001907348633
    7. 'c' → logprob: -18.375001907348633
    8. '۰' → logprob: -18.500001907348633
    9. '```' → logprob: -18.625001907348633
    10. '  ' → logprob: -19.625001907348633

Token 75: ',len' (ID: 73338)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3876752257347107
    2. ',len' → logprob: -1.1376752853393555
    3. ' ,' → logprob: -7.5126752853393555
    4. ',int' → logprob: -9.137675285339355
    5. ',length' → logprob: -10.012675285339355
    6. ',sizeof' → logprob: -11.137675285339355
    7. ',index' → logprob: -11.512675285339355
    8. ',num' → logprob: -11.637675285339355
    9. ',size' → logprob: -11.887675285339355
    10. ',n' → logprob: -11.887675285339355

Token 76: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002929174806922674
    2. '(' → logprob: -8.375292778015137
    3. '(s' → logprob: -10.375292778015137
    4. '<|end|>' → logprob: -11.000292778015137
    5. 'self' → logprob: -11.625292778015137
    6. '[self' → logprob: -13.375292778015137
    7. '(this' → logprob: -13.500292778015137
    8. '(
' → logprob: -15.000292778015137
    9. '	self' → logprob: -15.000292778015137
    10. '(user' → logprob: -15.375292778015137

Token 77: '.g' (ID: 1940)
  Prédit: '[g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -0.03168129920959473
    2. 'g' → logprob: -4.906681060791016
    3. '.g' → logprob: -4.906681060791016
    4. '[self' → logprob: -5.031681060791016
    5. '<|end|>' → logprob: -5.781681060791016
    6. '[' → logprob: -6.031681060791016
    7. 'self' → logprob: -6.156681060791016
    8. '[a' → logprob: -6.781681060791016
    9. '(g' → logprob: -8.031681060791016
    10. '[
' → logprob: -8.656681060791016

Token 78: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -2.339278580620885e-06
    2. 'a' → logprob: -13.000001907348633
    3. '[
' → logprob: -18.875001907348633
    4. '	a' → logprob: -19.000001907348633
    5. ')a' → logprob: -19.000001907348633
    6. '   ' → logprob: -19.750001907348633
    7. '[A' → logprob: -19.750001907348633
    8. '[' → logprob: -20.000001907348633
    9. '[b' → logprob: -20.125001907348633
    10. ',a' → logprob: -20.125001907348633

Token 79: '])-' (ID: 160447)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.42888858914375305
    2. ')-' → logprob: -1.1788885593414307
    3. '[-' → logprob: -4.05388879776001
    4. ')' → logprob: -4.55388879776001
    5. '])-' → logprob: -4.55388879776001
    6. '])' → logprob: -6.80388879776001
    7. ']-' → logprob: -7.17888879776001
    8. '[b' → logprob: -8.053888320922852
    9. '[' → logprob: -8.678888320922852
    10. ')]' → logprob: -9.428888320922852

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.375000953674316
    3. '１' → logprob: -15.625000953674316
    4. '۱' → logprob: -16.187501907348633
    5. '11' → logprob: -16.500001907348633
    6. '   ' → logprob: -17.187501907348633
    7. '```' → logprob: -17.437501907348633
    8. '2' → logprob: -17.687501907348633
    9. '١' → logprob: -17.875001907348633
    10. ' ' → logprob: -18.062501907348633

Token 81: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0002831464516930282
    2. '])
' → logprob: -8.875283241271973
    3. ')])' → logprob: -9.500283241271973
    4. ')' → logprob: -10.125283241271973
    5. ' ])' → logprob: -11.000283241271973
    6. '   ' → logprob: -12.500283241271973
    7. '       ' → logprob: -13.500283241271973
    8. '])
' → logprob: -13.625283241271973
    9. '])

' → logprob: -13.625283241271973
    10. '])]' → logprob: -13.875283241271973

Token 82: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008635726757347584
    2. '   ' → logprob: -5.508635520935059
    3. '    
' → logprob: -6.383635520935059
    4. ' 
' → logprob: -6.633635520935059
    5. '  
' → logprob: -7.758635520935059
    6. ' ' → logprob: -8.883635520935059
    7. '```' → logprob: -9.008635520935059
    8. 'def' → logprob: -9.133635520935059
    9. '<|end|>' → logprob: -9.133635520935059
    10. '' → logprob: -9.133635520935059

Token 83: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.039671480655670166
    2. ' def' → logprob: -4.164671421051025
    3. 'def' (adapté à ' def') → logprob: -4.414671421051025
    4. '   ' → logprob: -4.914671421051025
    5. ' 
' → logprob: -6.289671421051025
    6. '    
' → logprob: -6.664671421051025
    7. '  
' → logprob: -8.164671897888184
    8. '   
' → logprob: -8.914671897888184
    9. '	def' → logprob: -9.039671897888184
    10. '```' → logprob: -9.039671897888184

Token 84: ' bfs' (ID: 147571)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6933174133300781
    2. ' bfs' → logprob: -0.6933174133300781
    3. 'dfs' → logprob: -9.068317413330078
    4. '_b' → logprob: -10.818317413330078
    5. ' dfs' → logprob: -11.068317413330078
    6. '```' → logprob: -12.568317413330078
    7. ' b' → logprob: -12.818317413330078
    8. 's' → logprob: -13.193317413330078
    9. ' ' → logprob: -13.193317413330078
    10. 'max' → logprob: -13.318317413330078

Token 85: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31898149847984314
    2. '(self' → logprob: -1.3189815282821655
    3. ' (' → logprob: -5.193981647491455
    4. '   ' → logprob: -9.943981170654297
    5. '(s' → logprob: -10.068981170654297
    6. '(
' → logprob: -10.568981170654297
    7. ' ' → logprob: -10.943981170654297
    8. '_' → logprob: -12.818981170654297
    9. '()' → logprob: -13.443981170654297
    10. '       ' → logprob: -13.443981170654297

Token 86: ',s' (ID: 20379)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013093761168420315
    2. ',self' → logprob: -4.763093948364258
    3. ',a' → logprob: -6.888093948364258
    4. ' ,' → logprob: -6.888093948364258
    5. ',n' → logprob: -7.513093948364258
    6. ',s' → logprob: -7.763093948364258
    7. ',node' → logprob: -7.888093948364258
    8. ',v' → logprob: -8.763093948364258
    9. ',e' → logprob: -9.013093948364258
    10. '):' → logprob: -9.263093948364258

Token 87: ',t' (ID: 26927)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020530566573143005
    2. ',self' → logprob: -4.395530700683594
    3. ',v' → logprob: -5.895530700683594
    4. ',q' → logprob: -6.645530700683594
    5. ' ,' → logprob: -6.895530700683594
    6. ',t' → logprob: -7.395530700683594
    7. ',e' → logprob: -7.520530700683594
    8. ',u' → logprob: -7.895530700683594
    9. ',b' → logprob: -8.020530700683594
    10. ',l' → logprob: -8.020530700683594

Token 88: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011728928424417973
    2. ',' → logprob: -4.886728763580322
    3. ' ):' → logprob: -6.261728763580322
    4. '):
' → logprob: -6.636728763580322
    5. ')' → logprob: -7.136728763580322
    6. '   ' → logprob: -10.26172924041748
    7. '):
' → logprob: -11.26172924041748
    8. ' ,' → logprob: -11.88672924041748
    9. ':' → logprob: -12.01172924041748
    10. ' )' → logprob: -12.38672924041748

Token 89: 'level' (ID: 6164)
  Prédit: 'level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.0007904515950940549
    2. 'lev' → logprob: -7.625790596008301
    3. ' level' → logprob: -9.2507905960083
    4. 'd' → logprob: -9.5007905960083
    5. 'p' → logprob: -10.1257905960083
    6. 'parent' → logprob: -10.5007905960083
    7. 'lvl' → logprob: -10.8757905960083
    8. 'dis' → logprob: -11.6257905960083
    9. 'depth' → logprob: -11.6257905960083
    10. 'dist' → logprob: -11.8757905960083

Token 90: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003863438032567501
    2. ')' → logprob: -8.250386238098145
    3. ' ):' → logprob: -9.625386238098145
    4. ',' → logprob: -10.500386238098145
    5. '):
' → logprob: -10.750386238098145
    6. ':' → logprob: -12.375386238098145
    7. '   ' → logprob: -13.750386238098145
    8. ']:' → logprob: -14.250386238098145
    9. '):
' → logprob: -14.250386238098145
    10. '=' → logprob: -14.625386238098145

Token 91: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003320783842355013
    2. '   ' → logprob: -6.378320693969727
    3. '<|end|>' → logprob: -7.503320693969727
    4. '    ' → logprob: -8.128320693969727
    5. ':' → logprob: -8.503320693969727
    6. '      ' → logprob: -9.378320693969727
    7. ' queue' → logprob: -9.628320693969727
    8. ' ' → logprob: -9.628320693969727
    9. '        
' → logprob: -10.128320693969727
    10. '[]' → logprob: -10.503320693969727

Token 92: ' q' (ID: 2335)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.653922975063324
    2. '   ' → logprob: -1.2789230346679688
    3. '       ' → logprob: -2.0289230346679688
    4. ' queue' → logprob: -3.4039230346679688
    5. 'q' (adapté à ' q') → logprob: -3.5289230346679688
    6. 'from' → logprob: -6.153923034667969
    7. '	queue' → logprob: -6.528923034667969
    8. 'for' → logprob: -6.903923034667969
    9. ' q' → logprob: -7.403923034667969
    10. 'deque' → logprob: -7.653923034667969

Token 93: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029762065038084984
    2. ' =' → logprob: -3.529762029647827
    3. '=q' → logprob: -12.029762268066406
    4. '=u' → logprob: -14.029762268066406
    5. ' ' → logprob: -14.154762268066406
    6. '=d' → logprob: -14.154762268066406
    7. '=[]' → logprob: -14.404762268066406
    8. '=torch' → logprob: -15.279762268066406
    9. '	' → logprob: -15.404762268066406
    10. 'ue' → logprob: -15.654762268066406

Token 94: 'deque' (ID: 143563)
  Prédit: 'deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0002613358374219388
    2. ' deque' → logprob: -8.250261306762695
    3. 'de' → logprob: -17.875261306762695
    4. 'Deque' → logprob: -19.500261306762695
    5. '	de' → logprob: -20.250261306762695
    6. 'dq' → logprob: -21.250261306762695
    7. 'd' → logprob: -21.250261306762695
    8. ' ' → logprob: -21.500261306762695
    9. '```' → logprob: -21.500261306762695
    10. '   ' → logprob: -21.500261306762695

Token 95: '([' (ID: 5194)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006324975984171033
    2. '(' → logprob: -8.125632286071777
    3. '()
' → logprob: -8.500632286071777
    4. '([' → logprob: -9.750632286071777
    5. '([(' → logprob: -10.000632286071777
    6. '([]' → logprob: -11.125632286071777
    7. '()

' → logprob: -12.125632286071777
    8. '()\' → logprob: -12.500632286071777
    9. ' ()' → logprob: -13.625632286071777
    10. '()
' → logprob: -14.250632286071777

Token 96: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3902033970225602e-05
    2. '(s' → logprob: -11.375014305114746
    3. ' s' → logprob: -13.000014305114746
    4. '{s' → logprob: -16.62501335144043
    5. ')s' → logprob: -18.25001335144043
    6. '	s' → logprob: -18.37501335144043
    7. '[s' → logprob: -19.25001335144043
    8. '_s' → logprob: -20.37501335144043
    9. '`s' → logprob: -20.37501335144043
    10. ']' → logprob: -20.37501335144043

Token 97: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -8.566264295950532e-05
    2. '])
' → logprob: -9.625085830688477
    3. ' ])' → logprob: -11.000085830688477
    4. ')' → logprob: -13.250085830688477
    5. '])
' → logprob: -15.375085830688477
    6. ')])' → logprob: -15.500085830688477
    7. '])

' → logprob: -15.625085830688477
    8. ']);' → logprob: -15.875085830688477
    9. ']))' → logprob: -16.250085830688477
    10. ']' → logprob: -16.500085830688477

Token 98: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018736153841018677
    2. ' 
' → logprob: -4.143736362457275
    3. '
' → logprob: -7.393736362457275
    4. '<|end|>' → logprob: -7.518736362457275
    5. '    
' → logprob: -7.643736362457275
    6. '  
' → logprob: -7.643736362457275
    7. '   ' → logprob: -9.143735885620117
    8. '       ' → logprob: -9.143735885620117
    9. '        
' → logprob: -9.768735885620117
    10. ' while' → logprob: -10.018735885620117

Token 99: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' (adapté à ' level') → logprob: -0.12379726022481918
    2. ' level' → logprob: -2.9987971782684326
    3. '       ' → logprob: -3.2487971782684326
    4. 'while' → logprob: -4.373797416687012
    5. ' while' → logprob: -4.748797416687012
    6. 'for' → logprob: -6.123797416687012
    7. ' for' → logprob: -6.248797416687012
    8. '   ' → logprob: -7.123797416687012
    9. '	level' → logprob: -7.623797416687012
    10. '    ' → logprob: -8.498797416687012

Token 100: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -1.735893965815194e-05
    2. '[' → logprob: -11.000017166137695
    3. 's' → logprob: -15.750017166137695
    4. ' s' → logprob: -16.250017166137695
    5. '[q' → logprob: -16.250017166137695
    6. '[:]' → logprob: -16.625017166137695
    7. ' [' → logprob: -17.625017166137695
    8. '(s' → logprob: -17.750017166137695
    9. '<s' → logprob: -17.875017166137695
    10. '```' → logprob: -18.625017166137695

Token 101: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25317054986953735
    2. ']=' → logprob: -1.5031704902648926
    3. ' ]' → logprob: -6.753170490264893
    4. ']=-' → logprob: -10.00317096710205
    5. '=' → logprob: -11.62817096710205
    6. ']+=' → logprob: -11.75317096710205
    7. ']=(' → logprob: -12.50317096710205
    8. ']={' → logprob: -12.50317096710205
    9. ']==' → logprob: -13.87817096710205
    10. ']='' → logprob: -14.37817096710205

Token 102: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '1' → logprob: -17.250001907348633
    4. '０' → logprob: -18.000001907348633
    5. '۰' → logprob: -18.750001907348633
    6. '01' → logprob: -20.500001907348633
    7. '00' → logprob: -20.500001907348633
    8. '-' → logprob: -20.625001907348633
    9. '=' → logprob: -20.625001907348633
    10. '012' → logprob: -21.562501907348633

Token 103: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2539661228656769
    2. '<|end|>' → logprob: -1.5039660930633545
    3. '<|end|>' → logprob: -7.378966331481934
    4. '   ' → logprob: -7.628966331481934
    5. '\n' → logprob: -8.378966331481934
    6. '	while' → logprob: -8.628966331481934
    7. '       ' → logprob: -9.003966331481934
    8. ' 
' → logprob: -9.378966331481934
    9. ' while' → logprob: -9.753966331481934
    10. '
' → logprob: -10.128966331481934

Token 104: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32261598110198975
    2. '<|end|>' → logprob: -1.3226159811019897
    3. '   ' → logprob: -5.822616100311279
    4. ' 
' → logprob: -6.197616100311279
    5. '<|end|>' → logprob: -6.947616100311279
    6. '	while' → logprob: -7.072616100311279
    7. ' while' → logprob: -7.072616100311279
    8. '       ' → logprob: -7.322616100311279
    9. '  
' → logprob: -8.197615623474121
    10. ' ' → logprob: -8.322615623474121

Token 105: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.1808788776397705
    2. ' while' → logprob: -1.8058788776397705
    3. '	while' → logprob: -7.430878639221191
    4. '   ' → logprob: -7.680878639221191
    5. '       ' → logprob: -10.680878639221191
    6. '
' → logprob: -11.305878639221191
    7. ' ' → logprob: -11.305878639221191
    8. '  ' → logprob: -11.430878639221191
    9. '1' → logprob: -12.055878639221191
    10. 'While' → logprob: -12.180878639221191

Token 106: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.006719991099089384
    2. ' q' → logprob: -5.006720066070557
    3. 'len' → logprob: -12.381719589233398
    4. ' len' → logprob: -15.006719589233398
    5. '	q' → logprob: -16.2567195892334
    6. ' ' → logprob: -17.0067195892334
    7. '   ' → logprob: -18.0067195892334
    8. '(q' → logprob: -18.5067195892334
    9. '    ' → logprob: -19.0067195892334
    10. ' ' → logprob: -19.1317195892334

Token 107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000563638168387115
    2. ':
' → logprob: -8.125563621520996
    3. '.' → logprob: -9.125563621520996
    4. '):' → logprob: -10.000563621520996
    5. ':not' → logprob: -10.250563621520996
    6. '.pop' → logprob: -11.250563621520996
    7. '[' → logprob: -11.875563621520996
    8. ' and' → logprob: -11.875563621520996
    9. ':**' → logprob: -12.250563621520996
    10. '.dequeue' → logprob: -12.500563621520996

Token 108: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.5062169432640076
    2. 'u' → logprob: -1.5062170028686523
    3. ' v' → logprob: -2.1312170028686523
    4. ' u' → logprob: -2.8812170028686523
    5. '   ' → logprob: -7.381217002868652
    6. 'node' → logprob: -10.631217002868652
    7. 'x' → logprob: -10.756217002868652
    8. '```' → logprob: -10.881217002868652
    9. '	v' → logprob: -11.881217002868652
    10. '           ' → logprob: -12.006217002868652

Token 110: '=q' (ID: 151306)
  Prédit: '=q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=q' → logprob: -0.6800847053527832
    2. ' =' → logprob: -1.1800847053527832
    3. '=' → logprob: -1.8050847053527832
    4. '=v' → logprob: -3.930084705352783
    5. ',q' → logprob: -7.180084705352783
    6. '=len' → logprob: -8.680084228515625
    7. '=int' → logprob: -8.805084228515625
    8. '=p' → logprob: -8.930084228515625
    9. '=sys' → logprob: -8.930084228515625
    10. '=query' → logprob: -9.305084228515625

Token 111: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0003933768020942807
    2. '.pop' → logprob: -8.12539291381836
    3. '.' → logprob: -9.25039291381836
    4. 'p' → logprob: -14.50039291381836
    5. ' .' → logprob: -15.37539291381836
    6. '].' → logprob: -15.75039291381836
    7. '   ' → logprob: -16.12539291381836
    8. 'pop' → logprob: -16.25039291381836
    9. '[' → logprob: -16.75039291381836
    10. ').' → logprob: -17.62539291381836

Token 112: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.01498658861964941
    2. 'ople' → logprob: -4.264986515045166
    3. 'op' → logprob: -7.264986515045166
    4. 'opl' → logprob: -9.014986991882324
    5. 'oplevel' → logprob: -14.139986991882324
    6. 'opf' → logprob: -14.264986991882324
    7. 'oph' → logprob: -17.014986038208008
    8. 'opt' → logprob: -17.014986038208008
    9. 'oples' → logprob: -17.889986038208008
    10. 'oppable' → logprob: -18.014986038208008

Token 113: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018157554790377617
    2. '()
' → logprob: -4.018157482147217
    3. '()
' → logprob: -12.143157958984375
    4. '()

' → logprob: -13.768157958984375
    5. '(' → logprob: -14.393157958984375
    6. ')' → logprob: -15.018157958984375
    7. '()`' → logprob: -15.768157958984375
    8. '())' → logprob: -16.268157958984375
    9. '           ' → logprob: -17.018157958984375
    10. ' ()' → logprob: -17.018157958984375

Token 114: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02589358389377594
    2. ' for' → logprob: -4.650893688201904
    3. '<|end|>' → logprob: -5.400893688201904
    4. '            
' → logprob: -5.525893688201904
    5. '
' → logprob: -6.150893688201904
    6. '       ' → logprob: -6.650893688201904
    7. 'for' → logprob: -7.025893688201904
    8. ' 
' → logprob: -7.275893688201904
    9. ' ' → logprob: -7.900893688201904
    10. '        ' → logprob: -8.275893211364746

Token 115: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.053763821721076965
    2. ' for' → logprob: -3.0537638664245605
    3. '           ' → logprob: -5.3037638664245605
    4. '            
' → logprob: -9.178763389587402
    5. '	for' → logprob: -10.178763389587402
    6. '
' → logprob: -10.678763389587402
    7. '   ' → logprob: -11.428763389587402
    8. '               ' → logprob: -11.803763389587402
    9. '	       ' → logprob: -13.553763389587402
    10. '       ' → logprob: -13.678763389587402

Token 116: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22347846627235413
    2. 'to' → logprob: -1.7234784364700317
    3. 'e' → logprob: -3.8484785556793213
    4. '(to' → logprob: -8.848478317260742
    5. '(i' → logprob: -9.223478317260742
    6. 'idx' → logprob: -10.098478317260742
    7. ' to' → logprob: -10.098478317260742
    8. 'u' → logprob: -10.598478317260742
    9. 'nx' → logprob: -10.598478317260742
    10. 'nv' → logprob: -10.848478317260742

Token 117: ',(' (ID: 27243)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7051090598106384
    2. ' in' → logprob: -0.9551090598106384
    3. ' ,' → logprob: -2.330109119415283
    4. ',v' → logprob: -4.205109119415283
    5. 'in' → logprob: -5.080109119415283
    6. ' ' → logprob: -7.205109119415283
    7. ',in' → logprob: -8.080108642578125
    8. ',n' → logprob: -8.330108642578125
    9. '  ' → logprob: -8.705108642578125
    10. ',value' → logprob: -8.955108642578125

Token 118: 'to' (ID: 935)
  Prédit: 'to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.005890991538763046
    2. 'u' → logprob: -5.380890846252441
    3. 'nv' → logprob: -7.755890846252441
    4. 'nx' → logprob: -8.005890846252441
    5. 'n' → logprob: -8.755890846252441
    6. 'w' → logprob: -8.880890846252441
    7. ',to' → logprob: -9.380890846252441
    8. 't' → logprob: -10.880890846252441
    9. ' to' → logprob: -11.130890846252441
    10. 'e' → logprob: -11.130890846252441

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7035216689109802
    2. ',c' → logprob: -0.7035216689109802
    3. ',w' → logprob: -4.828521728515625
    4. ' ,' → logprob: -7.578521728515625
    5. ',val' → logprob: -7.578521728515625
    6. ',v' → logprob: -8.078521728515625
    7. ',value' → logprob: -8.328521728515625
    8. ',size' → logprob: -8.703521728515625
    9. ',count' → logprob: -9.328521728515625
    10. ',num' → logprob: -9.578521728515625

Token 120: 'cap' (ID: 15558)
  Prédit: 'cap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.0026497363578528166
    2. 'c' → logprob: -6.377649784088135
    3. 'capacity' → logprob: -7.002649784088135
    4. ' cap' → logprob: -10.752649307250977
    5. ' capacity' → logprob: -12.252649307250977
    6. 'f' → logprob: -12.502649307250977
    7. '-cap' → logprob: -13.627649307250977
    8. 'flow' → logprob: -13.627649307250977
    9. '_cap' → logprob: -14.377649307250977
    10. '   ' → logprob: -14.377649307250977

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013940460048615932
    2. ',i' → logprob: -8.626394271850586
    3. ',c' → logprob: -9.001394271850586
    4. ',index' → logprob: -9.126394271850586
    5. ',count' → logprob: -9.126394271850586
    6. ')' → logprob: -9.251394271850586
    7. ',value' → logprob: -9.376394271850586
    8. ' ,' → logprob: -9.501394271850586
    9. ',)' → logprob: -9.501394271850586
    10. ',int' → logprob: -9.751394271850586

Token 122: 'rev' (ID: 25656)
  Prédit: 'rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.002647240413352847
    2. '_' → logprob: -6.252647399902344
    3. '_rev' → logprob: -7.502647399902344
    4. ' rev' → logprob: -9.752647399902344
    5. 'idx' → logprob: -10.002647399902344
    6. ')' → logprob: -10.627647399902344
    7. '_)' → logprob: -12.002647399902344
    8. '.rev' → logprob: -12.127647399902344
    9. 'rid' → logprob: -12.627647399902344
    10. 'ind' → logprob: -12.752647399902344

Token 123: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.069664333248511e-05
    2. ')=' → logprob: -11.125020980834961
    3. ' )' → logprob: -12.250020980834961
    4. ')
' → logprob: -14.750020980834961
    5. '))' → logprob: -16.25002098083496
    6. ')=>' → logprob: -16.50002098083496
    7. '
' → logprob: -16.62502098083496
    8. ')i' → logprob: -16.87502098083496
    9. ')==' → logprob: -17.00002098083496
    10. ' in' → logprob: -17.12502098083496

Token 124: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1813386082649231
    2. ' in' → logprob: -1.8063385486602783
    3. ')' → logprob: -6.556338787078857
    4. '
' → logprob: -9.9313383102417
    5. ' ' → logprob: -10.5563383102417
    6. '   ' → logprob: -10.9313383102417
    7. 'enumer' → logprob: -11.0563383102417
    8. '	in' → logprob: -11.1813383102417
    9. ' )' → logprob: -11.6813383102417
    10. '  ' → logprob: -11.8063383102417

Token 125: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.0024802929256111383
    2. 'enumer' → logprob: -6.002480506896973
    3. ' ' → logprob: -13.002480506896973
    4. 'self' → logprob: -14.002480506896973
    5. ' self' → logprob: -14.127480506896973
    6. '```' → logprob: -14.877480506896973
    7. ' enumer' → logprob: -16.627479553222656
    8. '   ' → logprob: -16.627479553222656
    9. 'Enumer' → logprob: -16.752479553222656
    10. '    ' → logprob: -16.877479553222656

Token 126: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.051696017384529114
    2. '(self' → logprob: -3.3016960620880127
    3. ' self' → logprob: -4.301695823669434
    4. ')' → logprob: -12.426695823669434
    5. '	self' → logprob: -12.676695823669434
    6. ',self' → logprob: -12.926695823669434
    7. ' ' → logprob: -13.301695823669434
    8. '(' → logprob: -13.551695823669434
    9. '[self' → logprob: -13.801695823669434
    10. ' (' → logprob: -13.801695823669434

Token 127: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.0001916200271807611
    2. '.' → logprob: -8.625191688537598
    3. ' .' → logprob: -12.375191688537598
    4. 'g' → logprob: -12.375191688537598
    5. ').' → logprob: -13.625191688537598
    6. '[' → logprob: -14.750191688537598
    7. '
' → logprob: -15.500191688537598
    8. '.s' → logprob: -15.500191688537598
    9. '].' → logprob: -15.500191688537598
    10. 'self' → logprob: -15.500191688537598

Token 128: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.3306015716807451e-05
    2. 'v' → logprob: -11.75001335144043
    3. ')v' → logprob: -13.37501335144043
    4. '[' → logprob: -13.87501335144043
    5. ')[' → logprob: -14.37501335144043
    6. ')' → logprob: -14.75001335144043
    7. '[
' → logprob: -14.87501335144043
    8. '	v' → logprob: -15.00001335144043
    9. ',v' → logprob: -15.62501335144043
    10. '[val' → logprob: -15.75001335144043

Token 129: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013879751786589622
    2. '):
' → logprob: -4.388879776000977
    3. ']):' → logprob: -7.013879776000977
    4. ']:' → logprob: -8.513879776000977
    5. ':' → logprob: -8.763879776000977
    6. ')' → logprob: -9.513879776000977
    7. '):
' → logprob: -11.763879776000977
    8. ']):
' → logprob: -11.888879776000977
    9. '       ' → logprob: -12.013879776000977
    10. ' ):' → logprob: -12.638879776000977

Token 130: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2516581118106842
    2. '<|end|>' → logprob: -2.1266582012176514
    3. ':' → logprob: -2.3766582012176514
    4. '           ' → logprob: -5.251657962799072
    5. '):' → logprob: -6.876657962799072
    6. ' ' → logprob: -7.251657962799072
    7. '<|end|>' → logprob: -7.251657962799072
    8. '              ' → logprob: -8.00165843963623
    9. '):
' → logprob: -8.12665843963623
    10. '       ' → logprob: -8.25165843963623

Token 131: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2536746859550476
    2. '<|end|>' → logprob: -1.8786747455596924
    3. '                ' → logprob: -3.5036747455596924
    4. ' if' → logprob: -4.003674507141113
    5. '               ' → logprob: -4.378674507141113
    6. ' 
' → logprob: -5.378674507141113
    7. '                   ' → logprob: -6.253674507141113
    8. 'if' (adapté à ' if') → logprob: -7.003674507141113
    9. '                    ' → logprob: -7.753674507141113
    10. '<|end|>' → logprob: -7.753674507141113

Token 132: ' cap' (ID: 2328)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.5249496102333069
    2. ' cap' → logprob: -0.8999496102333069
    3. ' level' → logprob: -6.774949550628662
    4. 'level' → logprob: -7.399949550628662
    5. '(cap' → logprob: -10.64995002746582
    6. ' ' → logprob: -11.14995002746582
    7. ' capa' → logprob: -12.02495002746582
    8. 'capacity' → logprob: -12.52495002746582
    9. ' ' → logprob: -12.77495002746582
    10. ' capacity' → logprob: -12.77495002746582

Token 133: '>' (ID: 29)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3135087490081787
    2. '>' → logprob: -1.3135087490081787
    3. ' and' → logprob: -8.438508987426758
    4. ' ' → logprob: -11.563508987426758
    5. 'and' → logprob: -11.563508987426758
    6. ')>' → logprob: -12.813508987426758
    7. '">' → logprob: -13.313508987426758
    8. '&gt' → logprob: -13.438508987426758
    9. '<|end|>' → logprob: -13.438508987426758
    10. '()>' → logprob: -13.563508987426758

Token 134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. '  ' → logprob: -18.12747573852539
    4. '<|end|>' → logprob: -18.12747573852539
    5. 'level' → logprob: -19.12747573852539
    6. '>' → logprob: -19.75247573852539
    7. ' ' → logprob: -20.12747573852539
    8. '1' → logprob: -20.37747573852539
    9. '   ' → logprob: -20.37747573852539
    10. '00' → logprob: -20.56497573852539

Token 135: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023247109726071358
    2. 'and' → logprob: -3.773247003555298
    3. ' ' → logprob: -13.398246765136719
    4. '	and' → logprob: -17.27324676513672
    5. ' ' → logprob: -17.77324676513672
    6. '<|end|>' → logprob: -17.89824676513672
    7. 'a' → logprob: -18.27324676513672
    8. ',' → logprob: -18.27324676513672
    9. '           ' → logprob: -18.64824676513672
    10. '            ' → logprob: -18.89824676513672

Token 136: ' level' (ID: 3211)
  Prédit: ' level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' level' → logprob: -0.4740802049636841
    2. 'level' → logprob: -0.9740802049636841
    3. '(level' → logprob: -13.224080085754395
    4. '	level' → logprob: -14.349080085754395
    5. '[level' → logprob: -14.474080085754395
    6. ' nivel' → logprob: -16.47408103942871
    7. '-level' → logprob: -16.84908103942871
    8. ' ' → logprob: -16.84908103942871
    9. '0' → logprob: -17.59908103942871
    10. '.level' → logprob: -17.59908103942871

Token 137: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -9.372294698550832e-06
    2. 'to' → logprob: -11.625009536743164
    3. '[' → logprob: -15.125009536743164
    4. '[
' → logprob: -18.000009536743164
    5. ' [' → logprob: -18.500009536743164
    6. '[temp' → logprob: -19.750009536743164
    7. '(to' → logprob: -19.875009536743164
    8. '[from' → logprob: -19.875009536743164
    9. 'To' → logprob: -20.000009536743164
    10. ' to' → logprob: -20.000009536743164

Token 138: ']<' (ID: 80424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.7339794039726257
    2. ']<' → logprob: -1.4839794635772705
    3. ']==' → logprob: -1.7339794635772705
    4. ']' → logprob: -2.7339794635772705
    5. '==-' → logprob: -3.7339794635772705
    6. '[' → logprob: -4.233979225158691
    7. ' <' → logprob: -4.608979225158691
    8. ' ==' → logprob: -6.733979225158691
    9. '==' → logprob: -7.858979225158691
    10. ')<' → logprob: -7.983979225158691

Token 139: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -15.125000953674316
    3. '۰' → logprob: -15.375000953674316
    4. '```' → logprob: -15.625000953674316
    5. '０' → logprob: -17.0
    6. ' ' → logprob: -18.125
    7. '   ' → logprob: -18.5
    8. '٠' → logprob: -19.25
    9. '
' → logprob: -19.375
    10. '  ' → logprob: -19.375

Token 140: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0902123674750328
    2. ':
' → logprob: -2.465212345123291
    3. ' and' → logprob: -7.590212345123291
    4. '               ' → logprob: -8.71521282196045
    5. '                   ' → logprob: -8.71521282196045
    6. ' :' → logprob: -9.21521282196045
    7. 'and' → logprob: -9.96521282196045
    8. '           ' → logprob: -9.96521282196045
    9. ':

' → logprob: -9.96521282196045
    10. '                       ' → logprob: -9.96521282196045

Token 141: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0019915630109608173
    2. '               ' → logprob: -7.1269917488098145
    3. '                       ' → logprob: -7.8769917488098145
    4. '           ' → logprob: -8.751991271972656
    5. ' level' → logprob: -8.876991271972656
    6. ' ' → logprob: -9.126991271972656
    7. '0' → logprob: -9.376991271972656
    8. '                    
' → logprob: -9.501991271972656
    9. '1' → logprob: -9.876991271972656
    10. '[level' → logprob: -10.126991271972656

Token 142: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' (adapté à ' level') → logprob: -0.5761902928352356
    2. ' level' → logprob: -0.8261902928352356
    3. '                   ' → logprob: -9.201189994812012
    4. '	level' → logprob: -9.701189994812012
    5. '                    ' → logprob: -10.201189994812012
    6. '[level' → logprob: -10.951189994812012
    7. '                       ' → logprob: -11.076189994812012
    8. '   ' → logprob: -12.451189994812012
    9. '    ' → logprob: -12.826189994812012
    10. '(level' → logprob: -12.826189994812012

Token 143: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.00016027313540689647
    2. 'to' → logprob: -8.750160217285156
    3. '
' → logprob: -14.000160217285156
    4. '=' → logprob: -14.875160217285156
    5. '[
' → logprob: -16.125160217285156
    6. '

' → logprob: -16.625160217285156
    7. '(to' → logprob: -17.000160217285156
    8. '	to' → logprob: -17.000160217285156
    9. ' =' → logprob: -17.125160217285156
    10. '[' → logprob: -17.250160217285156

Token 144: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.015226819552481174
    2. ']' → logprob: -4.5152268409729
    3. '=' → logprob: -5.6402268409729
    4. ']=-' → logprob: -7.7652268409729
    5. ')=' → logprob: -9.265226364135742
    6. ' ]' → logprob: -10.140226364135742
    7. ' =' → logprob: -10.765226364135742
    8. ']+=' → logprob: -10.890226364135742
    9. ']=(' → logprob: -12.015226364135742
    10. ']='' → logprob: -12.640226364135742

Token 145: 'level' (ID: 6164)
  Prédit: 'level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.029843514785170555
    2. ' level' → logprob: -3.52984356880188
    3. '	level' → logprob: -10.0298433303833
    4. 'v' → logprob: -10.6548433303833
    5. '[level' → logprob: -11.7798433303833
    6. '(level' → logprob: -12.0298433303833
    7. '    ' → logprob: -12.6548433303833
    8. '1' → logprob: -13.4048433303833
    9. '0' → logprob: -13.4048433303833
    10. ' v' → logprob: -13.7798433303833

Token 146: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0016055555315688252
    2. '[s' → logprob: -7.25160551071167
    3. 'v' → logprob: -7.75160551071167
    4. '+' → logprob: -8.126605987548828
    5. '[' → logprob: -9.501605987548828
    6. '[level' → logprob: -10.126605987548828
    7. '[
' → logprob: -11.251605987548828
    8. 'level' → logprob: -11.751605987548828
    9. ' +' → logprob: -11.876605987548828
    10. '[q' → logprob: -12.126605987548828

Token 147: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.0033923061564564705
    2. ']' → logprob: -6.003392219543457
    3. '+' → logprob: -7.003392219543457
    4. ')+' → logprob: -12.378392219543457
    5. '}+' → logprob: -13.253392219543457
    6. ' +' → logprob: -14.503392219543457
    7. '1' → logprob: -15.253392219543457
    8. ' ]' → logprob: -15.378392219543457
    9. ']+=' → logprob: -15.503392219543457
    10. '```' → logprob: -15.753392219543457

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.250001907348633
    4. '
' → logprob: -18.250001907348633
    5. '```' → logprob: -18.375001907348633
    6. '<|end|>' → logprob: -19.625001907348633
    7. '１' → logprob: -21.375001907348633
    8. '                   ' → logprob: -21.500001907348633
    9. '  ' → logprob: -21.875001907348633
    10. '                       ' → logprob: -22.125001907348633

Token 149: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01023633312433958
    2. '
' → logprob: -5.0102362632751465
    3. 'q' → logprob: -6.5102362632751465
    4. '               ' → logprob: -7.2602362632751465
    5. '           ' → logprob: -8.010236740112305
    6. '<|end|>' → logprob: -8.135236740112305
    7. ' q' → logprob: -8.760236740112305
    8. '                       ' → logprob: -8.885236740112305
    9. '				' → logprob: -9.010236740112305
    10. '       ' → logprob: -9.760236740112305

Token 150: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.012087632901966572
    2. 'q' → logprob: -4.637087821960449
    3. '               ' → logprob: -6.512087821960449
    4. '           ' → logprob: -8.26208782196045
    5. '                       ' → logprob: -8.51208782196045
    6. '
' → logprob: -9.13708782196045
    7. ' q' → logprob: -10.13708782196045
    8. '                    
' → logprob: -10.13708782196045
    9. '				' → logprob: -10.26208782196045
    10. '       ' → logprob: -10.38708782196045

Token 151: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -4.961759259458631e-06
    2. '                   ' → logprob: -12.875004768371582
    3. ' q' → logprob: -13.250004768371582
    4. '	q' → logprob: -14.625004768371582
    5. '                       ' → logprob: -16.8750057220459
    6. '   ' → logprob: -18.1250057220459
    7. '
' → logprob: -18.3750057220459
    8. '               ' → logprob: -18.3750057220459
    9. '```' → logprob: -18.7500057220459
    10. 'queue' → logprob: -19.1250057220459

Token 152: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0008426225394941866
    2. '.' → logprob: -7.125842571258545
    3. '.enqueue' → logprob: -11.750843048095703
    4. '>.' → logprob: -11.875843048095703
    5. '.app' → logprob: -12.250843048095703
    6. ').' → logprob: -12.625843048095703
    7. '.py' → logprob: -12.875843048095703
    8. '.extend' → logprob: -13.000843048095703
    9. '.p' → logprob: -13.375843048095703
    10. '.Append' → logprob: -13.500843048095703

Token 153: '(to' (ID: 24042)
  Prédit: '(to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(to' → logprob: -4.60414821645827e-06
    2. '(' → logprob: -12.750004768371582
    3. 'to' → logprob: -13.375004768371582
    4. ' (' → logprob: -17.625003814697266
    5. '(To' → logprob: -18.500003814697266
    6. '((' → logprob: -18.625003814697266
    7. ',to' → logprob: -18.750003814697266
    8. '[to' → logprob: -19.125003814697266
    9. '(the' → logprob: -19.625003814697266
    10. '(
' → logprob: -19.750003814697266

Token 154: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005587508203461766
    2. '])' → logprob: -7.875558853149414
    3. ')
' → logprob: -9.000558853149414
    4. ' )' → logprob: -10.250558853149414
    5. '))' → logprob: -11.500558853149414
    6. ']' → logprob: -12.750558853149414
    7. ')])' → logprob: -13.375558853149414
    8. '）' → logprob: -13.750558853149414
    9. ')return' → logprob: -14.375558853149414
    10. ')]' → logprob: -14.500558853149414

Token 155: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5240867137908936
    2. '       ' → logprob: -1.1490867137908936
    3. '   ' → logprob: -3.1490867137908936
    4. '           ' → logprob: -3.7740867137908936
    5. '               ' → logprob: -4.274086952209473
    6. ' return' → logprob: -5.524086952209473
    7. '                   ' → logprob: -5.899086952209473
    8. '
' → logprob: -6.399086952209473
    9. 'def' → logprob: -7.649086952209473
    10. 't' → logprob: -8.399086952209473

Token 156: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.030759917572140694
    2. ' return' → logprob: -4.155759811401367
    3. '   ' → logprob: -4.780759811401367
    4. '       ' → logprob: -5.780759811401367
    5. 't' → logprob: -7.530759811401367
    6. '           ' → logprob: -7.655759811401367
    7. 'def' → logprob: -7.780759811401367
    8. ' ' → logprob: -8.030759811401367
    9. ')' → logprob: -8.530759811401367
    10. '               ' → logprob: -8.780759811401367

Token 157: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.04314374178647995
    2. ' level' → logprob: -3.1681437492370605
    3. 'True' → logprob: -9.418143272399902
    4. '(level' → logprob: -10.918143272399902
    5. 'len' → logprob: -11.168143272399902
    6. ' True' → logprob: -11.668143272399902
    7. '[level' → logprob: -12.168143272399902
    8. 'bool' → logprob: -12.168143272399902
    9. '	level' → logprob: -12.793143272399902
    10. 'layer' → logprob: -13.668143272399902

Token 158: '[t' (ID: 32184)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 159: ']>=' (ID: 185954)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.694796621799469
    2. ']>=' → logprob: -0.694796621799469
    3. ']>' → logprob: -6.694796562194824
    4. ' ]' → logprob: -8.444796562194824
    5. ']!=' → logprob: -8.694796562194824
    6. ')>=' → logprob: -10.819796562194824
    7. '"]' → logprob: -13.069796562194824
    8. '>=' → logprob: -13.569796562194824
    9. ')' → logprob: -14.069796562194824
    10. '']' → logprob: -14.194796562194824

Token 160: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '۰' → logprob: -17.12506675720215
    4. '０' → logprob: -18.25006675720215
    5. '   ' → logprob: -18.37506675720215
    6. '```' → logprob: -18.75006675720215
    7. '00' → logprob: -19.37506675720215
    8. '1' → logprob: -19.37506675720215
    9. ' ' → logprob: -19.75006675720215
    10. '  ' → logprob: -20.25006675720215

Token 161: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4661928117275238
    2. '   ' → logprob: -1.3411928415298462
    3. '<|end|>' → logprob: -2.5911927223205566
    4. '    
' → logprob: -3.5911927223205566
    5. '<|end|>' → logprob: -5.841192722320557
    6. '  
' → logprob: -6.841192722320557
    7. '\n' → logprob: -7.091192722320557
    8. ' 
' → logprob: -7.341192722320557
    9. 'def' → logprob: -8.091193199157715
    10. '       ' → logprob: -8.216193199157715

Token 162: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8883582353591919
    2. '<|end|>' → logprob: -1.138358235359192
    3. '   ' → logprob: -1.388358235359192
    4. '
' → logprob: -4.388358116149902
    5. '<|end|>' → logprob: -6.638358116149902
    6. '  ' → logprob: -6.888358116149902
    7. ' def' → logprob: -6.888358116149902
    8. '    ' → logprob: -7.638358116149902
    9. ')' → logprob: -7.638358116149902
    10. '	def' → logprob: -7.888358116149902

Token 163: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5158650279045105
    2. ' 
' → logprob: -1.8908650875091553
    3. '<|end|>' → logprob: -2.1408650875091553
    4. '
' → logprob: -3.5158650875091553
    5. '    
' → logprob: -3.6408650875091553
    6. ' ' → logprob: -4.265864849090576
    7. '\' → logprob: -4.390864849090576
    8. '\t' → logprob: -4.640864849090576
    9. '	' → logprob: -4.765864849090576
    10. '\n' → logprob: -5.140864849090576

Token 164: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.5760703682899475
    2. ' dfs' → logprob: -0.8260703682899475
    3. 'din' → logprob: -9.701070785522461
    4. 'def' → logprob: -10.326070785522461
    5. 's' → logprob: -10.826070785522461
    6. ' din' → logprob: -12.701070785522461
    7. 'df' → logprob: -12.826070785522461
    8. '_d' → logprob: -13.076070785522461
    9. '```' → logprob: -13.701070785522461
    10. '
' → logprob: -13.701070785522461

Token 165: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.4855663721391466e-05
    2. '(' → logprob: -12.000015258789062
    3. '(s' → logprob: -12.375015258789062
    4. ' (' → logprob: -13.250015258789062
    5. '(
' → logprob: -13.750015258789062
    6. '   ' → logprob: -14.250015258789062
    7. 'self' → logprob: -15.000015258789062
    8. '	self' → logprob: -15.375015258789062
    9. 'def' → logprob: -16.500015258789062
    10. '<|end|>' → logprob: -16.750015258789062

Token 166: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.7094654440879822
    2. ',' → logprob: -0.9594654440879822
    3. ',s' → logprob: -2.334465503692627
    4. ',self' → logprob: -3.584465503692627
    5. 'self' → logprob: -9.584465026855469
    6. ',d' → logprob: -10.084465026855469
    7. ',t' → logprob: -10.084465026855469
    8. ',x' → logprob: -10.209465026855469
    9. ',a' → logprob: -10.584465026855469
    10. ',node' → logprob: -10.709465026855469

Token 167: ',t' (ID: 26927)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.379863440990448
    2. ',t' → logprob: -1.6298635005950928
    3. ',s' → logprob: -2.1298635005950928
    4. ',u' → logprob: -7.379863262176514
    5. ' ,' → logprob: -8.129863739013672
    6. ',d' → logprob: -8.879863739013672
    7. ',k' → logprob: -10.379863739013672
    8. ',x' → logprob: -10.504863739013672
    9. ',v' → logprob: -10.629863739013672
    10. ',int' → logprob: -11.254863739013672

Token 168: ',f' (ID: 38733)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008789234794676304
    2. ',l' → logprob: -4.7587890625
    3. ' ,' → logprob: -9.0087890625
    4. ',int' → logprob: -11.0087890625
    5. ',v' → logprob: -11.8837890625
    6. ',d' → logprob: -12.1337890625
    7. ',p' → logprob: -12.5087890625
    8. ',y' → logprob: -13.1337890625
    9. ',k' → logprob: -13.2587890625
    10. ',n' → logprob: -13.2587890625

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030415154993534088
    2. 'low' → logprob: -4.655415058135986
    3. '):' → logprob: -4.780415058135986
    4. ',int' → logprob: -4.905415058135986
    5. ',l' → logprob: -7.405415058135986
    6. ',n' → logprob: -7.530415058135986
    7. ',f' → logprob: -7.655415058135986
    8. '):
' → logprob: -7.655415058135986
    9. ',r' → logprob: -7.655415058135986
    10. 'loat' → logprob: -8.280415534973145

Token 170: 'level' (ID: 6164)
  Prédit: 'level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -5.908022285439074e-05
    2. ' level' → logprob: -9.750059127807617
    3. '   ' → logprob: -15.000059127807617
    4. '    ' → logprob: -16.375059127807617
    5. 'flow' → logprob: -16.500059127807617
    6. '  ' → logprob: -17.125059127807617
    7. '	level' → logprob: -17.125059127807617
    8. ' ' → logprob: -17.375059127807617
    9. '       ' → logprob: -17.500059127807617
    10. '
' → logprob: -17.750059127807617

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001969673437997699
    2. ',p' → logprob: -7.501969814300537
    3. ',int' → logprob: -8.001969337463379
    4. ',u' → logprob: -8.751969337463379
    5. ',l' → logprob: -9.126969337463379
    6. ',res' → logprob: -9.126969337463379
    7. '):' → logprob: -9.251969337463379
    8. ',parent' → logprob: -9.501969337463379
    9. ',array' → logprob: -9.876969337463379
    10. ',index' → logprob: -10.001969337463379

Token 172: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.002665311796590686
    2. 'itr' → logprob: -6.1276655197143555
    3. 'it' → logprob: -8.252665519714355
    4. ' iter' → logprob: -8.752665519714355
    5. 'ptr' → logprob: -10.252665519714355
    6. 'iters' → logprob: -11.752665519714355
    7. '	iter' → logprob: -12.502665519714355
    8. 'work' → logprob: -12.627665519714355
    9. '   ' → logprob: -12.877665519714355
    10. 'iterator' → logprob: -13.002665519714355

Token 173: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.218716099858284
    2. '):' → logprob: -1.8437161445617676
    3. ',' → logprob: -3.3437161445617676
    4. '):

' → logprob: -7.468716144561768
    5. ')' → logprob: -7.843716144561768
    6. 'e' → logprob: -7.968716144561768
    7. '):
' → logprob: -8.46871566772461
    8. ' ,' → logprob: -8.84371566772461
    9. ',v' → logprob: -8.96871566772461
    10. '   ' → logprob: -9.09371566772461

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07951413094997406
    2. '   ' → logprob: -2.7045140266418457
    3. '    ' → logprob: -5.954514026641846
    4. '	if' → logprob: -5.954514026641846
    5. ' if' → logprob: -6.579514026641846
    6. '	' → logprob: -6.829514026641846
    7. '	   ' → logprob: -7.829514026641846
    8. ':' → logprob: -8.329514503479004
    9. '<|end|>' → logprob: -8.329514503479004
    10. '	       ' → logprob: -8.704514503479004

Token 175: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3877297043800354
    2. ' if' → logprob: -1.1377296447753906
    3. '   ' → logprob: -7.512729644775391
    4. '       ' → logprob: -8.26272964477539
    5. '
' → logprob: -10.26272964477539
    6. '    ' → logprob: -11.63772964477539
    7. '	if' → logprob: -11.76272964477539
    8. '           ' → logprob: -14.26272964477539
    9. '        ' → logprob: -14.88772964477539
    10. 'If' → logprob: -15.01272964477539

Token 176: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.1002078503370285
    2. ' v' → logprob: -2.350207805633545
    3. '	v' → logprob: -14.100208282470703
    4. '_v' → logprob: -15.475208282470703
    5. ')v' → logprob: -16.225208282470703
    6. '   ' → logprob: -16.600208282470703
    7. ' ' → logprob: -16.850208282470703
    8. '    ' → logprob: -17.350208282470703
    9. '<|end|>' → logprob: -17.725208282470703
    10. ' ' → logprob: -18.100208282470703

Token 177: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.008616226725280285
    2. ' ==' → logprob: -4.7586164474487305
    3. '==
' → logprob: -14.13361644744873
    4. ')==' → logprob: -14.88361644744873
    5. '=' → logprob: -15.13361644744873
    6. ']==' → logprob: -15.75861644744873
    7. 't' → logprob: -16.383615493774414
    8. '==(' → logprob: -16.633615493774414
    9. '==-' → logprob: -17.758615493774414
    10. ')' → logprob: -17.758615493774414

Token 178: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0006284446571953595
    2. ' t' → logprob: -7.375628471374512
    3. '	t' → logprob: -14.000628471374512
    4. '<|end|>' → logprob: -14.875628471374512
    5. '   ' → logprob: -15.125628471374512
    6. '`t' → logprob: -15.375628471374512
    7. ' ' → logprob: -16.625627517700195
    8. ')t' → logprob: -17.125627517700195
    9. '_t' → logprob: -17.375627517700195
    10. '  ' → logprob: -17.625627517700195

Token 179: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13513772189617157
    2. ':return' → logprob: -2.1351377964019775
    3. ':
' → logprob: -5.010137557983398
    4. ' or' → logprob: -6.510137557983398
    5. 'return' → logprob: -12.510137557983398
    6. '       ' → logprob: -12.760137557983398
    7. ':
' → logprob: -13.135137557983398
    8. '<|end|>' → logprob: -13.385137557983398
    9. '   ' → logprob: -13.510137557983398
    10. ' return' → logprob: -14.135137557983398

Token 180: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0686875730752945
    2. '<|end|>' → logprob: -3.693687677383423
    3. 'return' → logprob: -3.943687677383423
    4. ':return' → logprob: -4.318687438964844
    5. ' return' → logprob: -5.943687438964844
    6. '       ' → logprob: -6.193687438964844
    7. '{return' → logprob: -6.818687438964844
    8. '   ' → logprob: -6.943687438964844
    9. '
' → logprob: -7.693687438964844
    10. '           ' → logprob: -7.943687438964844

Token 181: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0033454939257353544
    2. ' return' → logprob: -5.753345489501953
    3. '
' → logprob: -9.628345489501953
    4. '           ' → logprob: -10.128345489501953
    5. '       ' → logprob: -10.378345489501953
    6. ':return' → logprob: -11.128345489501953
    7. '{return' → logprob: -11.503345489501953
    8. ')return' → logprob: -13.503345489501953
    9. '   ' → logprob: -13.628345489501953
    10. '	return' → logprob: -14.003345489501953

Token 182: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.07889242470264435
    2. ' f' → logprob: -2.578892469406128
    3. '	f' → logprob: -12.953892707824707
    4. '
' → logprob: -15.828892707824707
    5. ' ' → logprob: -16.70389175415039
    6. ' ' → logprob: -16.95389175415039
    7. '<|end|>' → logprob: -17.07889175415039
    8. '\f' → logprob: -18.20389175415039
    9. '```' → logprob: -18.20389175415039
    10. ' 
' → logprob: -18.57889175415039

Token 183: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01378405187278986
    2. '       ' → logprob: -4.763783931732178
    3. '<|end|>' → logprob: -5.513783931732178
    4. '   ' → logprob: -7.638783931732178
    5. '    
' → logprob: -8.388784408569336
    6. '        
' → logprob: -9.513784408569336
    7. '<|end|>' → logprob: -9.638784408569336
    8. '\n' → logprob: -9.888784408569336
    9. '  
' → logprob: -9.888784408569336
    10. ' 
' → logprob: -9.888784408569336

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06244073808193207
    2. '   ' → logprob: -3.1874406337738037
    3. '
' → logprob: -4.062440872192383
    4. '0' → logprob: -7.062440872192383
    5. '           ' → logprob: -8.062440872192383
    6. 'if' → logprob: -8.937440872192383
    7. 'while' → logprob: -9.062440872192383
    8. '    ' → logprob: -9.437440872192383
    9. '    
' → logprob: -9.562440872192383
    10. '        
' → logprob: -9.687440872192383

Token 185: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16122417151927948
    2. 'while' (adapté à ' while') → logprob: -1.911224126815796
    3. ' for' → logprob: -7.536224365234375
    4. ' while' → logprob: -7.786224365234375
    5. 'l' → logprob: -10.536224365234375
    6. '   ' → logprob: -11.536224365234375
    7. '       ' → logprob: -12.411224365234375
    8. '    
' → logprob: -13.286224365234375
    9. 'i' → logprob: -13.286224365234375
    10. '        
' → logprob: -13.411224365234375

Token 186: ' iter' (ID: 10621)
  Prédit: ' iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' iter' → logprob: -0.5759568810462952
    2. 'iter' → logprob: -0.8259568810462952
    3. '	iter' → logprob: -11.200957298278809
    4. '(iter' → logprob: -12.700957298278809
    5. '_iter' → logprob: -14.575957298278809
    6. ' ' → logprob: -16.075956344604492
    7. '
' → logprob: -17.075956344604492
    8. '   ' → logprob: -17.700956344604492
    9. '1' → logprob: -17.950956344604492
    10. 'Iter' → logprob: -18.200956344604492

Token 187: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.3782830137643032e-05
    2. 'v' → logprob: -12.00001335144043
    3. '[' → logprob: -12.25001335144043
    4. '<v' → logprob: -13.25001335144043
    5. '[i' → logprob: -15.62501335144043
    6. '[f' → logprob: -16.25001335144043
    7. 'iter' → logprob: -16.50001335144043
    8. '```' → logprob: -16.62501335144043
    9. '[t' → logprob: -16.75001335144043
    10. '[u' → logprob: -16.87501335144043

Token 188: ']<' (ID: 80424)
  Prédit: ']<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']<' → logprob: -0.4990791380405426
    2. '<' → logprob: -2.1240792274475098
    3. ']' → logprob: -2.1240792274475098
    4. '[' → logprob: -2.2490792274475098
    5. '<len' → logprob: -3.3740792274475098
    6. '<v' → logprob: -4.74907922744751
    7. ' <' → logprob: -5.87407922744751
    8. '[v' → logprob: -6.99907922744751
    9. '][' → logprob: -7.12407922744751
    10. '<n' → logprob: -9.499078750610352

Token 189: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -6.12258882028982e-05
    2. ' len' → logprob: -9.75006103515625
    3. '(len' → logprob: -13.00006103515625
    4. '<len' → logprob: -15.50006103515625
    5. '=len' → logprob: -15.75006103515625
    6. '[len' → logprob: -16.37506103515625
    7. '	len' → logprob: -16.50006103515625
    8. ',len' → logprob: -16.50006103515625
    9. '<|end|>' → logprob: -18.00006103515625
    10. '
' → logprob: -18.37506103515625

Token 190: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.200166469876422e-06
    2. 'self' → logprob: -12.250004768371582
    3. '(' → logprob: -15.000004768371582
    4. '[self' → logprob: -17.0000057220459
    5. '(this' → logprob: -17.3750057220459
    6. '=self' → logprob: -18.1250057220459
    7. ' self' → logprob: -18.5000057220459
    8. ',self' → logprob: -20.2500057220459
    9. '	self' → logprob: -20.3750057220459
    10. ' (' → logprob: -20.7500057220459

Token 191: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -9.341087570646778e-05
    2. '.' → logprob: -9.500093460083008
    3. 'g' → logprob: -11.625093460083008
    4. 'self' → logprob: -12.250093460083008
    5. ' .' → logprob: -12.500093460083008
    6. '[g' → logprob: -15.250093460083008
    7. '```' → logprob: -15.500093460083008
    8. '].' → logprob: -16.500093460083008
    9. '[' → logprob: -16.750093460083008
    10. '	g' → logprob: -16.875093460083008

Token 192: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -6.988221684878226e-06
    2. 'v' → logprob: -12.000006675720215
    3. ')v' → logprob: -15.375006675720215
    4. '[' → logprob: -15.500006675720215
    5. ')' → logprob: -15.500006675720215
    6. '```' → logprob: -17.00000762939453
    7. '<v' → logprob: -17.12500762939453
    8. '(v' → logprob: -17.87500762939453
    9. '[self' → logprob: -18.00000762939453
    10. '[
' → logprob: -18.12500762939453

Token 193: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.0697193145751953
    2. ']):' → logprob: -1.4447193145751953
    3. '[v' → logprob: -1.4447193145751953
    4. '):
' → logprob: -2.1947193145751953
    5. ')' → logprob: -3.1947193145751953
    6. ']):
' → logprob: -3.5697193145751953
    7. '])' → logprob: -6.194719314575195
    8. ']' → logprob: -6.944719314575195
    9. '       ' → logprob: -8.444719314575195
    10. ')v' → logprob: -8.444719314575195

Token 194: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06047281250357628
    2. '       ' → logprob: -3.3104727268218994
    3. '               ' → logprob: -5.6854729652404785
    4. '            
' → logprob: -5.6854729652404785
    5. '   ' → logprob: -5.8104729652404785
    6. '
' → logprob: -5.8104729652404785
    7. '	       ' → logprob: -6.4354729652404785
    8. '        ' → logprob: -6.5604729652404785
    9. ' i' → logprob: -7.3104729652404785
    10. '            ' → logprob: -7.5604729652404785

Token 195: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.08414820581674576
    2. '           ' → logprob: -2.8341481685638428
    3. ' to' → logprob: -4.459148406982422
    4. '               ' → logprob: -5.459148406982422
    5. 'i' → logprob: -5.959148406982422
    6. '   ' → logprob: -6.459148406982422
    7. 'b' → logprob: -7.334148406982422
    8. ',to' → logprob: -7.334148406982422
    9. ' i' → logprob: -8.334148406982422
    10. '(to' → logprob: -9.709148406982422

Token 196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033645043149590492
    2. ',c' → logprob: -5.753364562988281
    3. ',self' → logprob: -9.253364562988281
    4. ',i' → logprob: -9.628364562988281
    5. ' ,' → logprob: -12.003364562988281
    6. ',s' → logprob: -13.003364562988281
    7. ',index' → logprob: -13.003364562988281
    8. ',num' → logprob: -13.253364562988281
    9. ',pos' → logprob: -13.503364562988281
    10. ',b' → logprob: -13.503364562988281

Token 197: 'cap' (ID: 15558)
  Prédit: 'cap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -2.868328920158092e-05
    2. ' cap' → logprob: -10.875028610229492
    3. 'self' → logprob: -12.250028610229492
    4. '(cap' → logprob: -13.625028610229492
    5. 'capacity' → logprob: -13.625028610229492
    6. ',' → logprob: -13.750028610229492
    7. 'c' → logprob: -15.000028610229492
    8. 'caps' → logprob: -15.500028610229492
    9. '_cap' → logprob: -15.750028610229492
    10. 'capac' → logprob: -15.750028610229492

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038713314570486546
    2. ',i' → logprob: -6.753871440887451
    3. ',self' → logprob: -7.503871440887451
    4. ',index' → logprob: -8.003870964050293
    5. ',pos' → logprob: -8.128870964050293
    6. ',d' → logprob: -8.378870964050293
    7. ',val' → logprob: -8.503870964050293
    8. ',c' → logprob: -8.628870964050293
    9. ',re' → logprob: -8.878870964050293
    10. ',w' → logprob: -9.003870964050293

Token 199: 'rev' (ID: 25656)
  Prédit: 'rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -3.47626737493556e-05
    2. 'self' → logprob: -10.75003433227539
    3. ' rev' → logprob: -11.62503433227539
    4. '_rev' → logprob: -13.75003433227539
    5. 'rep' → logprob: -14.12503433227539
    6. '   ' → logprob: -14.75003433227539
    7. '=' → logprob: -15.25003433227539
    8. ' ' → logprob: -15.37503433227539
    9. 'prev' → logprob: -15.50003433227539
    10. 'iter' → logprob: -15.62503433227539

Token 200: '=self' (ID: 16945)
  Prédit: '=self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=self' → logprob: -0.7252954840660095
    2. '=' → logprob: -0.9752954840660095
    3. ' =' → logprob: -1.9752955436706543
    4. '=_' → logprob: -11.975295066833496
    5. 'self' → logprob: -12.850295066833496
    6. ')=' → logprob: -13.475295066833496
    7. ' ' → logprob: -13.725295066833496
    8. ']=' → logprob: -14.100295066833496
    9. '=
' → logprob: -14.225295066833496
    10. '   ' → logprob: -14.225295066833496

Token 201: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -4.847109812544659e-05
    2. 'g' → logprob: -10.125048637390137
    3. '.' → logprob: -12.125048637390137
    4. 'self' → logprob: -13.125048637390137
    5. '_g' → logprob: -15.250048637390137
    6. '```' → logprob: -15.875048637390137
    7. ' .' → logprob: -16.12504768371582
    8. '[g' → logprob: -16.37504768371582
    9. '	g' → logprob: -17.50004768371582

Token 202: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.318681188422488e-05
    2. 'v' → logprob: -11.25001335144043
    3. '[g' → logprob: -17.50001335144043
    4. '[self' → logprob: -17.75001335144043
    5. '<v' → logprob: -17.87501335144043
    6. ' v' → logprob: -18.25001335144043
    7. '[' → logprob: -18.62501335144043
    8. 'g' → logprob: -19.00001335144043
    9. '	v' → logprob: -19.00001335144043
    10. '[
' → logprob: -19.37501335144043

Token 203: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.49274545907974243
    2. '][' → logprob: -0.9927454590797424
    3. 'v' → logprob: -3.9927453994750977
    4. ']' → logprob: -10.992745399475098
    5. '[' → logprob: -11.492745399475098
    6. '	v' → logprob: -11.867745399475098
    7. ' v' → logprob: -12.617745399475098
    8. ',v' → logprob: -13.117745399475098
    9. ' ][' → logprob: -13.742745399475098
    10. '.v' → logprob: -14.367745399475098

Token 204: 'iter' (ID: 2340)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.3663626305060461e-05
    2. '[v' → logprob: -11.25001335144043
    3. ' v' → logprob: -14.37501335144043
    4. '	v' → logprob: -16.62501335144043
    5. '[' → logprob: -17.50001335144043
    6. ')v' → logprob: -18.00001335144043
    7. '```' → logprob: -18.75001335144043
    8. ' ' → logprob: -19.50001335144043
    9. '][' → logprob: -19.50001335144043
    10. '
' → logprob: -19.87501335144043

Token 205: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.002589573385193944
    2. 'v' → logprob: -6.002589702606201
    3. '][' → logprob: -9.252589225769043
    4. '	v' → logprob: -11.752589225769043
    5. '[' → logprob: -12.377589225769043
    6. ']' → logprob: -12.752589225769043
    7. '_v' → logprob: -14.752589225769043
    8. '```' → logprob: -14.752589225769043
    9. ' v' → logprob: -14.877589225769043
    10. '<v' → logprob: -15.002589225769043

Token 206: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19428980350494385
    2. '][' → logprob: -2.5692896842956543
    3. ']][' → logprob: -2.6942896842956543
    4. ']]' → logprob: -3.5692896842956543
    5. ']
' → logprob: -5.819289684295654
    6. ']+' → logprob: -8.069290161132812
    7. ']]
' → logprob: -8.694290161132812
    8. ')][' → logprob: -8.819290161132812
    9. ' ]' → logprob: -9.569290161132812
    10. '].' → logprob: -9.694290161132812

Token 207: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008729918859899044
    2. '<|end|>' → logprob: -6.008729934692383
    3. '            
' → logprob: -6.508729934692383
    4. '               ' → logprob: -6.883729934692383
    5. ' 
' → logprob: -7.383729934692383
    6. '       ' → logprob: -7.508729934692383
    7. '  
' → logprob: -7.508729934692383
    8. ' if' → logprob: -7.758729934692383
    9. '	       ' → logprob: -8.008729934692383
    10. '            ' → logprob: -8.633729934692383

Token 208: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4870648682117462
    2. '           ' → logprob: -0.9870648384094238
    3. 'if' (adapté à ' if') → logprob: -4.862064838409424
    4. '   ' → logprob: -6.112064838409424
    5. '       ' → logprob: -6.237064838409424
    6. '               ' → logprob: -7.737064838409424
    7. ' ' → logprob: -8.737065315246582
    8. '	if' → logprob: -8.987065315246582
    9. ' 
' → logprob: -10.237065315246582
    10. '            
' → logprob: -10.237065315246582

Token 209: ' cap' (ID: 2328)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.4740859866142273
    2. ' cap' → logprob: -0.9740859866142273
    3. '(cap' → logprob: -11.849085807800293
    4. ' ' → logprob: -14.974085807800293
    5. 'capacity' → logprob: -15.099085807800293
    6. ' capa' → logprob: -15.224085807800293
    7. ' capacity' → logprob: -15.474085807800293
    8. ' ' → logprob: -15.849085807800293
    9. '   ' → logprob: -16.22408676147461
    10. '_cap' → logprob: -16.59908676147461

Token 210: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.07889562100172043
    2. ' >' → logprob: -2.5788955688476562
    3. ' and' → logprob: -12.203895568847656
    4. 'and' → logprob: -14.578895568847656
    5. ' ' → logprob: -16.078895568847656
    6. '&gt' → logprob: -16.203895568847656
    7. ')>' → logprob: -16.703895568847656
    8. '">' → logprob: -17.078895568847656
    9. '()>' → logprob: -17.328895568847656
    10. ' ' → logprob: -18.078895568847656

Token 211: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '>' → logprob: -17.875059127807617
    4. '=' → logprob: -20.000059127807617
    5. '```' → logprob: -21.750059127807617
    6. '   ' → logprob: -21.875059127807617
    7. '.' → logprob: -22.500059127807617
    8. '  ' → logprob: -22.750059127807617
    9. '
' → logprob: -22.750059127807617
    10. '<|end|>' → logprob: -23.125059127807617

Token 212: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.008615988306701183
    2. 'and' → logprob: -4.758615970611572
    3. '            ' → logprob: -14.88361644744873
    4. '           ' → logprob: -15.25861644744873
    5. '	and' → logprob: -15.25861644744873
    6. ' ' → logprob: -15.75861644744873
    7. '               ' → logprob: -15.88361644744873
    8. '<|end|>' → logprob: -16.008615493774414
    9. '                ' → logprob: -16.383615493774414
    10. '             ' → logprob: -18.508615493774414

Token 213: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.07889275997877121
    2. ' level' → logprob: -2.578892707824707
    3. '(level' → logprob: -13.328892707824707
    4. '	level' → logprob: -13.828892707824707
    5. '[level' → logprob: -14.953892707824707
    6. ' nivel' → logprob: -17.453893661499023
    7. '-level' → logprob: -18.078893661499023
    8. '.level' → logprob: -18.328893661499023
    9. ' ' → logprob: -18.703893661499023
    10. '           ' → logprob: -18.953893661499023

Token 214: '[v' (ID: 36561)
  Prédit: '[to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.011741181835532188
    2. '[v' → logprob: -4.6367411613464355
    3. 'to' → logprob: -6.2617411613464355
    4. 'v' → logprob: -9.761741638183594
    5. '[' → logprob: -11.636741638183594
    6. ' [' → logprob: -12.761741638183594
    7. '(to' → logprob: -13.386741638183594
    8. 'To' → logprob: -14.011741638183594
    9. ' to' → logprob: -14.011741638183594
    10. '```' → logprob: -14.511741638183594

Token 215: ']<' (ID: 80424)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.18903028964996338
    2. ']' → logprob: -1.9390302896499634
    3. ']<' → logprob: -3.564030170440674
    4. ']==' → logprob: -10.564030647277832
    5. '[' → logprob: -11.314030647277832
    6. '<' → logprob: -11.314030647277832
    7. '+' → logprob: -12.064030647277832
    8. '']' → logprob: -12.439030647277832
    9. ']+=' → logprob: -12.814030647277832
    10. ')+' → logprob: -12.814030647277832

Token 216: 'level' (ID: 6164)
  Prédit: 'level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.00026991849881596863
    2. ' level' → logprob: -8.250269889831543
    3. 'to' → logprob: -12.375269889831543
    4. '[level' → logprob: -12.500269889831543
    5. '	level' → logprob: -14.875269889831543
    6. '(level' → logprob: -15.750269889831543
    7. '
' → logprob: -17.12527084350586
    8. ' to' → logprob: -17.37527084350586
    9. 'levels' → logprob: -17.87527084350586
    10. '.level' → logprob: -18.37527084350586

Token 217: '[to' (ID: 139069)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0789790153503418
    2. '[to' → logprob: -2.578979015350342
    3. ' to' → logprob: -9.3289794921875
    4. '(to' → logprob: -15.3289794921875
    5. '	to' → logprob: -15.4539794921875
    6. '_to' → logprob: -17.7039794921875
    7. ',to' → logprob: -17.9539794921875
    8. 'tos' → logprob: -18.8289794921875
    9. '.to' → logprob: -18.9539794921875
    10. '[' → logprob: -19.4539794921875

Token 218: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.6542441248893738
    2. ']:
' → logprob: -1.0292441844940186
    3. ':' → logprob: -2.6542441844940186
    4. ':
' → logprob: -3.1542441844940186
    5. ']' → logprob: -5.1542439460754395
    6. '               ' → logprob: -7.0292439460754395
    7. ' and' → logprob: -7.2792439460754395
    8. '           ' → logprob: -7.5292439460754395
    9. ']:
' → logprob: -8.029244422912598
    10. ']+' → logprob: -8.279244422912598

Token 219: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0022614714689552784
    2. '                
' → logprob: -6.877261638641357
    3. '           ' → logprob: -7.752261638641357
    4. ' 
' → logprob: -8.5022611618042
    5. '                ' → logprob: -9.0022611618042
    6. '\n' → logprob: -9.6272611618042
    7. '                   ' → logprob: -9.8772611618042
    8. '                               ' → logprob: -9.8772611618042
    9. '            ' → logprob: -10.1272611618042
    10. ' ' → logprob: -10.1272611618042

Token 220: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.13192719221115112
    2. ' d' → logprob: -2.131927251815796
    3. '                   ' → logprob: -5.506927013397217
    4. 'res' → logprob: -7.631927013397217
    5. '               ' → logprob: -8.381927490234375
    6. 'df' → logprob: -9.381927490234375
    7. '                       ' → logprob: -10.631927490234375
    8. '	d' → logprob: -10.881927490234375
    9. '           ' → logprob: -11.131927490234375
    10. '                 ' → logprob: -11.631927490234375

Token 221: '=self' (ID: 16945)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5409741997718811
    2. '=self' → logprob: -1.2909741401672363
    3. ' =' → logprob: -2.1659741401672363
    4. '=min' → logprob: -4.040974140167236
    5. '=f' → logprob: -4.790974140167236
    6. '=max' → logprob: -6.665974140167236
    7. '=int' → logprob: -7.290974140167236
    8. '=_' → logprob: -9.915974617004395
    9. '=d' → logprob: -9.915974617004395
    10. '=len' → logprob: -10.040974617004395

Token 222: '.d' (ID: 1380)
  Prédit: 'fs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.5778516530990601
    2. 'dfs' → logprob: -0.8278516530990601
    3. 's' → logprob: -7.07785177230835
    4. ' dfs' → logprob: -7.32785177230835
    5. 'f' → logprob: -8.577851295471191
    6. 'self' → logprob: -8.702851295471191
    7. 'sf' → logprob: -10.202851295471191
    8. 'efs' → logprob: -11.827851295471191
    9. '   ' → logprob: -13.327851295471191
    10. 'min' → logprob: -13.827851295471191

Token 223: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -2.2200749754119897e-06
    2. 'dfs' → logprob: -13.875001907348633
    3. 'f' → logprob: -14.125001907348633
    4. ' fs' → logprob: -15.375001907348633
    5. '(fs' → logprob: -15.375001907348633
    6. '   ' → logprob: -17.500001907348633
    7. 'ps' → logprob: -17.625001907348633
    8. 'efs' → logprob: -18.125001907348633
    9. '	fs' → logprob: -18.375001907348633
    10. '
' → logprob: -18.625001907348633

Token 224: '(to' (ID: 24042)
  Prédit: '(to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(to' → logprob: -0.005970269441604614
    2. 'to' → logprob: -5.130970478057861
    3. '[to' → logprob: -10.505970001220703
    4. ' to' → logprob: -11.505970001220703
    5. '(' → logprob: -13.630970001220703
    6. '(
' → logprob: -14.255970001220703
    7. '	to' → logprob: -14.255970001220703
    8. ',to' → logprob: -14.380970001220703
    9. '<|end|>' → logprob: -14.505970001220703
    10. 'To' → logprob: -14.755970001220703

Token 225: ',t' (ID: 26927)
  Prédit: ',t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',t' → logprob: -0.07995089888572693
    2. ',' → logprob: -2.8299508094787598
    3. 't' → logprob: -4.20495080947876
    4. ' t' → logprob: -5.95495080947876
    5. ' ,' → logprob: -9.079951286315918
    6. '	t' → logprob: -9.079951286315918
    7. '(t' → logprob: -10.329951286315918
    8. ')t' → logprob: -10.954951286315918
    9. '<|end|>' → logprob: -11.704951286315918
    10. '```' → logprob: -12.579951286315918

Token 226: ',min' (ID: 129117)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.01819548010826111
    2. ' min' → logprob: -4.018195629119873
    3. ',min' → logprob: -10.143195152282715
    4. '	min' → logprob: -12.268195152282715
    5. ',' → logprob: -13.768195152282715
    6. '[min' → logprob: -16.01819610595703
    7. '(min' → logprob: -16.51819610595703
    8. '               ' → logprob: -16.89319610595703
    9. '=min' → logprob: -17.26819610595703
    10. '.min' → logprob: -17.64319610595703

Token 227: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.00016325322212651372
    2. 'f' → logprob: -8.750163078308105
    3. '(' → logprob: -12.625163078308105
    4. ' f' → logprob: -14.250163078308105
    5. '(
' → logprob: -14.750163078308105
    6. ' (' → logprob: -15.500163078308105
    7. '	f' → logprob: -15.750163078308105
    8. ',f' → logprob: -18.250164031982422
    9. '```' → logprob: -18.250164031982422
    10. '
' → logprob: -18.750164031982422

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008940708357840776
    2. ' ,' → logprob: -7.500894069671631
    3. ',c' → logprob: -8.000894546508789
    4. ',d' → logprob: -12.625894546508789
    5. 'cap' → logprob: -14.125894546508789
    6. '(cap' → logprob: -14.625894546508789
    7. ',int' → logprob: -15.125894546508789
    8. ',self' → logprob: -15.750894546508789
    9. ' cap' → logprob: -16.00089454650879
    10. '_cap' → logprob: -16.25089454650879

Token 229: 'cap' (ID: 15558)
  Prédit: 'cap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.011048054322600365
    2. ' cap' → logprob: -4.511047840118408
    3. '(cap' → logprob: -15.511048316955566
    4. '_cap' → logprob: -17.88604736328125
    5. '-cap' → logprob: -18.38604736328125
    6. 'capac' → logprob: -19.13604736328125
    7. 'capacity' → logprob: -19.38604736328125
    8. 'Cap' → logprob: -19.51104736328125
    9. '
' → logprob: -19.63604736328125
    10. '.cap' → logprob: -19.88604736328125

Token 230: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.07051961869001389
    2. ')' → logprob: -2.9455196857452393
    3. '))' → logprob: -4.19551944732666
    4. ')
' → logprob: -8.07051944732666
    5. '))
' → logprob: -9.32051944732666
    6. ' ),' → logprob: -10.32051944732666
    7. ' )' → logprob: -11.82051944732666
    8. '
' → logprob: -13.32051944732666
    9. '),
' → logprob: -13.32051944732666
    10. ' ' → logprob: -13.44551944732666

Token 231: 'level' (ID: 6164)
  Prédit: 'level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -3.5716304410016164e-05
    2. ' level' → logprob: -10.250035285949707
    3. '[level' → logprob: -16.250036239624023
    4. '	level' → logprob: -16.625036239624023
    5. '           ' → logprob: -17.500036239624023
    6. '(level' → logprob: -17.500036239624023
    7. '
' → logprob: -17.625036239624023
    8. '   ' → logprob: -18.375036239624023
    9. ' ' → logprob: -18.625036239624023
    10. '               ' → logprob: -18.750036239624023

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3557529857498594e-05
    2. ' ,' → logprob: -10.87502384185791
    3. '           ' → logprob: -12.62502384185791
    4. '   ' → logprob: -14.50002384185791
    5. '       ' → logprob: -15.37502384185791
    6. ',
' → logprob: -15.62502384185791
    7. ',int' → logprob: -16.750022888183594
    8. '               ' → logprob: -16.875022888183594
    9. '[' → logprob: -17.125022888183594
    10. ',i' → logprob: -17.500022888183594

Token 233: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.00018065694894175977
    2. ' iter' → logprob: -8.6251802444458
    3. '   ' → logprob: -14.7501802444458
    4. ' ' → logprob: -15.3751802444458
    5. '	iter' → logprob: -15.5001802444458
    6. '
' → logprob: -16.000181198120117
    7. '[' → logprob: -16.750181198120117
    8. '           ' → logprob: -17.125181198120117
    9. '(iter' → logprob: -17.125181198120117
    10. ')' → logprob: -17.375181198120117

Token 234: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931748390197754
    2. ')
' → logprob: -0.6931748390197754
    3. ')
' → logprob: -11.443174362182617
    4. '               ' → logprob: -11.568174362182617
    5. '           ' → logprob: -11.943174362182617
    6. ')

' → logprob: -15.193174362182617
    7. '                   ' → logprob: -15.693174362182617
    8. ')`
' → logprob: -16.568174362182617
    9. ')d' → logprob: -16.693174362182617
    10. '       ' → logprob: -16.943174362182617

Token 235: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1838807612657547
    2. '           ' → logprob: -1.8088808059692383
    3. '                   ' → logprob: -6.058880805969238
    4. '```' → logprob: -6.808880805969238
    5. ' if' → logprob: -8.808880805969238
    6. '<|end|>' → logprob: -8.933880805969238
    7. ')' → logprob: -9.683880805969238
    8. '
' → logprob: -9.683880805969238
    9. 'if' → logprob: -10.183880805969238
    10. '                
' → logprob: -10.183880805969238

Token 236: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3254574239253998
    2. 'if' (adapté à ' if') → logprob: -1.3254574537277222
    3. ' if' → logprob: -4.575457572937012
    4. '                   ' → logprob: -6.450457572937012
    5. '           ' → logprob: -9.075457572937012
    6. '                ' → logprob: -9.950457572937012
    7. '                       ' → logprob: -11.200457572937012
    8. 'If' → logprob: -11.325457572937012
    9. '	if' → logprob: -11.450457572937012
    10. '              ' → logprob: -11.700457572937012

Token 237: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.023245595395565033
    2. ' d' → logprob: -3.7732455730438232
    3. '                   ' → logprob: -16.148244857788086
    4. '
' → logprob: -17.023244857788086
    5. '               ' → logprob: -18.023244857788086
    6. '	d' → logprob: -18.398244857788086
    7. ' not' → logprob: -19.148244857788086
    8. '>d' → logprob: -19.273244857788086
    9. '0' → logprob: -19.398244857788086
    10. ' ' → logprob: -19.398244857788086

Token 238: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.001516768941655755
    2. ' >' → logprob: -6.626516819000244
    3. ':' → logprob: -9.501516342163086
    4. ')>' → logprob: -9.876516342163086
    5. '">' → logprob: -11.126516342163086
    6. '>null' → logprob: -11.126516342163086
    7. ':
' → logprob: -12.251516342163086
    8. ')' → logprob: -12.501516342163086
    9. ']>' → logprob: -12.626516342163086
    10. ' is' → logprob: -12.626516342163086

Token 239: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '=' → logprob: -18.62504005432129
    4. '```' → logprob: -19.75004005432129
    5. '<|end|>' → logprob: -20.12504005432129
    6. '
' → logprob: -20.50004005432129
    7. '۰' → logprob: -20.87504005432129
    8. '   ' → logprob: -21.50004005432129
    9. '>' → logprob: -21.62504005432129
    10. '00' → logprob: -21.62504005432129

Token 240: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09034176170825958
    2. ':' → logprob: -2.590341806411743
    3. '                   ' → logprob: -4.590341567993164
    4. '):
' → logprob: -7.090341567993164
    5. '               ' → logprob: -8.465341567993164
    6. ':return' → logprob: -8.965341567993164
    7. '           ' → logprob: -11.465341567993164
    8. '                       ' → logprob: -11.715341567993164
    9. ' :
' → logprob: -11.965341567993164
    10. '):' → logprob: -11.965341567993164

Token 241: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004576565232127905
    2. 'self' → logprob: -5.754576683044434
    3. '                       ' → logprob: -7.379576683044434
    4. ' self' → logprob: -7.629576683044434
    5. '               ' → logprob: -8.504576683044434
    6. '           ' → logprob: -10.504576683044434
    7. '                    ' → logprob: -11.379576683044434
    8. '                  ' → logprob: -11.629576683044434
    9. '                    
' → logprob: -11.754576683044434
    10. '```' → logprob: -12.129576683044434

Token 242: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.005788362585008144
    2. '                   ' → logprob: -5.630788326263428
    3. ' self' → logprob: -6.130788326263428
    4. '                       ' → logprob: -12.505788803100586
    5. '               ' → logprob: -13.130788803100586
    6. '           ' → logprob: -13.380788803100586
    7. '
' → logprob: -13.630788803100586
    8. '                    
' → logprob: -14.380788803100586
    9. '                    ' → logprob: -15.005788803100586
    10. '=self' → logprob: -15.130788803100586

Token 243: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.00015622020873706788
    2. 'g' → logprob: -9.37515640258789
    3. '.' → logprob: -10.00015640258789
    4. ' .' → logprob: -11.75015640258789
    5. 'self' → logprob: -11.87515640258789
    6. '.v' → logprob: -12.00015640258789
    7. 's' → logprob: -13.50015640258789
    8. '.s' → logprob: -14.12515640258789
    9. '].' → logprob: -14.37515640258789
    10. '```' → logprob: -14.37515640258789

Token 244: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -7.107425062713446e-06
    2. 'v' → logprob: -12.000006675720215
    3. '[' → logprob: -14.500006675720215
    4. '	v' → logprob: -16.00000762939453
    5. '[val' → logprob: -16.50000762939453
    6. '<|end|>' → logprob: -16.62500762939453
    7. ' v' → logprob: -17.25000762939453
    8. '[u' → logprob: -18.12500762939453
    9. '```' → logprob: -18.25000762939453
    10. '<v' → logprob: -18.25000762939453

Token 245: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1614944338798523
    2. '[' → logprob: -1.911494493484497
    3. '[v' → logprob: -6.911494255065918
    4. '```' → logprob: -9.411494255065918
    5. ' ][' → logprob: -9.786494255065918
    6. '           ' → logprob: -11.036494255065918
    7. ']' → logprob: -11.411494255065918
    8. '[self' → logprob: -11.536494255065918
    9. '   ' → logprob: -11.536494255065918
    10. '}[' → logprob: -11.786494255065918

Token 246: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.00020687808864749968
    2. ' iter' → logprob: -8.50020694732666
    3. '(iter' → logprob: -13.37520694732666
    4. '_iter' → logprob: -14.12520694732666
    5. ' ' → logprob: -14.62520694732666
    6. '	iter' → logprob: -15.12520694732666
    7. 'v' → logprob: -16.500205993652344
    8. '[' → logprob: -16.625205993652344
    9. '
' → logprob: -16.750205993652344
    10. '   ' → logprob: -17.375205993652344

Token 247: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.723352049040841e-06
    2. 'v' → logprob: -12.375004768371582
    3. '	v' → logprob: -16.250003814697266
    4. '<v' → logprob: -16.375003814697266
    5. '][' → logprob: -17.125003814697266
    6. ')v' → logprob: -17.375003814697266
    7. '[' → logprob: -17.625003814697266
    8. ' v' → logprob: -18.000003814697266
    9. '(v' → logprob: -18.250003814697266
    10. '```' → logprob: -18.875003814697266

Token 248: ']][' (ID: 61032)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -7.076218025758862e-05
    2. ' ][' → logprob: -9.875070571899414
    3. ']][' → logprob: -11.625070571899414
    4. '[' → logprob: -12.250070571899414
    5. ')][' → logprob: -13.125070571899414
    6. ']' → logprob: -13.125070571899414
    7. '=' → logprob: -15.000070571899414
    8. ''][' → logprob: -15.250070571899414
    9. '"][' → logprob: -15.375070571899414
    10. '][-' → logprob: -15.375070571899414

Token 249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2233183042553719e-05
    2. '
' → logprob: -11.375012397766113
    3. '[' → logprob: -15.500012397766113
    4. '

' → logprob: -15.875012397766113
    5. '
' → logprob: -16.000011444091797
    6. '```' → logprob: -16.625011444091797
    7. '   ' → logprob: -16.750011444091797
    8. ' ' → logprob: -17.250011444091797
    9. '`' → logprob: -17.750011444091797
    10. '	' → logprob: -17.812511444091797

Token 250: ']-' (ID: 27107)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.6312771439552307
    2. ']-' → logprob: -1.256277084350586
    3. ' -=' → logprob: -2.006277084350586
    4. ']' → logprob: -3.506277084350586
    5. '-' → logprob: -4.006277084350586
    6. ']+=' → logprob: -8.506277084350586
    7. ')-' → logprob: -9.006277084350586
    8. ' -' → logprob: -9.256277084350586
    9. '=' → logprob: -9.756277084350586
    10. ' ]' → logprob: -9.881277084350586

Token 251: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008616581559181213
    2. '=d' → logprob: -4.7586164474487305
    3. '=
' → logprob: -14.13361644744873
    4. '=_' → logprob: -14.75861644744873
    5. '=

' → logprob: -14.88361644744873
    6. '=b' → logprob: -16.133617401123047
    7. '=int' → logprob: -16.383617401123047
    8. '=D' → logprob: -16.383617401123047
    9. '=}' → logprob: -16.508617401123047
    10. '=s' → logprob: -16.508617401123047

Token 252: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -7.493430894101039e-05
    2. ' d' → logprob: -9.500075340270996
    3. '
' → logprob: -20.50007438659668
    4. '	d' → logprob: -20.50007438659668
    5. '                   ' → logprob: -21.87507438659668
    6. '```' → logprob: -22.00007438659668
    7. ')d' → logprob: -22.12507438659668
    8. '>d' → logprob: -23.37507438659668
    9. '_d' → logprob: -24.00007438659668
    10. '<|end|>' → logprob: -24.12507438659668

Token 253: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2954883575439453
    2. '
' → logprob: -1.6704883575439453
    3. '<|end|>' → logprob: -2.7954883575439453
    4. 'self' → logprob: -5.670488357543945
    5. '               ' → logprob: -6.670488357543945
    6. '                    
' → logprob: -7.795488357543945
    7. '           ' → logprob: -7.795488357543945
    8. '                    ' → logprob: -8.795488357543945
    9. '                  ' → logprob: -9.045488357543945
    10. '<|end|>' → logprob: -9.170488357543945

Token 254: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002835661405697465
    2. '
' → logprob: -6.252835750579834
    3. 'self' → logprob: -8.002835273742676
    4. '                    
' → logprob: -8.252835273742676
    5. '               ' → logprob: -9.377835273742676
    6. '                  ' → logprob: -10.002835273742676
    7. '           ' → logprob: -10.002835273742676
    8. '                    ' → logprob: -10.127835273742676
    9. '<|end|>' → logprob: -10.502835273742676
    10. '				' → logprob: -10.752835273742676

Token 255: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.003983177710324526
    2. '                   ' → logprob: -6.003983020782471
    3. ' self' → logprob: -6.503983020782471
    4. 'd' → logprob: -12.128983497619629
    5. '[self' → logprob: -13.378983497619629
    6. '                       ' → logprob: -14.003983497619629
    7. '
' → logprob: -15.128983497619629
    8. '               ' → logprob: -15.503983497619629
    9. '	self' → logprob: -15.628983497619629
    10. '=self' → logprob: -15.878983497619629

Token 256: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.00011570196511456743
    2. '.' → logprob: -9.375115394592285
    3. 'g' → logprob: -10.500115394592285
    4. ' .' → logprob: -13.375115394592285
    5. '[' → logprob: -14.375115394592285
    6. '.v' → logprob: -15.375115394592285
    7. '].' → logprob: -15.375115394592285
    8. '<|end|>' → logprob: -16.0001163482666
    9. '[g' → logprob: -16.3751163482666
    10. 'self' → logprob: -16.5001163482666

Token 257: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.31454530358314514
    2. '[b' → logprob: -1.3145452737808228
    3. '[g' → logprob: -7.439545154571533
    4. '[v' → logprob: -8.314545631408691
    5. '[' → logprob: -8.689545631408691
    6. 'b' → logprob: -8.814545631408691
    7. '[u' → logprob: -9.564545631408691
    8. '[t' → logprob: -10.189545631408691
    9. 'to' → logprob: -10.939545631408691
    10. '[
' → logprob: -13.814545631408691

Token 258: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005242000916041434
    2. '[' → logprob: -7.750524044036865
    3. ' ][' → logprob: -10.125524520874023
    4. ']' → logprob: -10.250524520874023
    5. '[][' → logprob: -12.625524520874023
    6. ']][' → logprob: -13.000524520874023
    7. '][-' → logprob: -13.125524520874023
    8. '][_' → logprob: -13.625524520874023
    9. ''][' → logprob: -13.750524520874023
    10. '<|end|>' → logprob: -13.750524520874023

Token 259: 'rev' (ID: 25656)
  Prédit: 'rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.00016182278341148049
    2. ' rev' → logprob: -8.750162124633789
    3. '[' → logprob: -12.875162124633789
    4. ' ' → logprob: -14.750162124633789
    5. '   ' → logprob: -16.12516212463379
    6. '][' → logprob: -16.25016212463379
    7. '.rev' → logprob: -16.62516212463379
    8. '  ' → logprob: -16.75016212463379
    9. '
' → logprob: -17.25016212463379
    10. 'reverse' → logprob: -17.37516212463379

Token 260: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -1.6405310816480778e-05
    2. ' ][' → logprob: -12.125016212463379
    3. '[' → logprob: -12.625016212463379
    4. ''][' → logprob: -13.000016212463379
    5. ']' → logprob: -13.125016212463379
    6. '"][' → logprob: -13.875016212463379
    7. '           ' → logprob: -14.250016212463379
    8. '   ' → logprob: -14.875016212463379
    9. '       ' → logprob: -15.000016212463379
    10. ']][' → logprob: -15.250016212463379

Token 261: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. '
' → logprob: -12.500006675720215
    3. ' ' → logprob: -13.000006675720215
    4. '   ' → logprob: -15.250006675720215
    5. '```' → logprob: -15.250006675720215
    6. ']' → logprob: -15.875006675720215
    7. '[' → logprob: -17.06250762939453
    8. '

' → logprob: -17.50000762939453
    9. '>' → logprob: -17.75000762939453
    10. '  ' → logprob: -17.81250762939453

Token 262: ']+=' (ID: 123635)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.014646913856267929
    2. ']+=' → logprob: -4.264647006988525
    3. ' +=' → logprob: -7.639647006988525
    4. '+' → logprob: -13.264646530151367
    5. '+=(' → logprob: -15.514646530151367
    6. '+="' → logprob: -16.014646530151367
    7. '+='' → logprob: -16.264646530151367
    8. '   ' → logprob: -16.389646530151367
    9. '```' → logprob: -17.764646530151367
    10. '
' → logprob: -17.764646530151367

Token 263: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.8624639324116288e-06
    2. ' d' → logprob: -13.250001907348633
    3. '	d' → logprob: -21.875001907348633
    4. ')d' → logprob: -22.625001907348633
    5. '   ' → logprob: -23.500001907348633
    6. '
' → logprob: -23.750001907348633
    7. '```' → logprob: -24.250001907348633
    8. '>d' → logprob: -24.500001907348633
    9. '$d' → logprob: -24.625001907348633
    10. '*d' → logprob: -25.000001907348633

Token 264: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00016873658751137555
    2. 'return' → logprob: -9.125168800354004
    3. '
' → logprob: -10.750168800354004
    4. '				' → logprob: -11.250168800354004
    5. '               ' → logprob: -11.375168800354004
    6. '                  ' → logprob: -12.250168800354004
    7. '           ' → logprob: -12.875168800354004
    8. '                    
' → logprob: -13.125168800354004
    9. '   ' → logprob: -13.500168800354004
    10. '                       ' → logprob: -14.250168800354004

Token 265: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.771655115589965e-05
    2. '               ' → logprob: -11.750018119812012
    3. 'return' → logprob: -12.250018119812012
    4. '           ' → logprob: -13.500018119812012
    5. '                    
' → logprob: -14.000018119812012
    6. '                  ' → logprob: -14.250018119812012
    7. '				' → logprob: -14.500018119812012
    8. '                       ' → logprob: -14.625018119812012
    9. '   ' → logprob: -15.000018119812012
    10. '
' → logprob: -15.500018119812012

Token 266: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0016023407224565744
    2. ' return' → logprob: -6.7516021728515625
    3. '                   ' → logprob: -7.7516021728515625
    4. '	return' → logprob: -14.751602172851562
    5. '{return' → logprob: -14.751602172851562
    6. '                       ' → logprob: -15.126602172851562
    7. ':return' → logprob: -15.251602172851562
    8. '               ' → logprob: -15.376602172851562
    9. '           ' → logprob: -16.126602172851562
    10. '
' → logprob: -16.251602172851562

Token 267: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0015023599844425917
    2. ' d' → logprob: -6.501502513885498
    3. '	d' → logprob: -20.001502990722656
    4. '   ' → logprob: -20.626502990722656
    5. '           ' → logprob: -21.126502990722656
    6. '                   ' → logprob: -21.501502990722656
    7. '       ' → logprob: -22.001502990722656
    8. ' ' → logprob: -22.376502990722656
    9. '
' → logprob: -22.751502990722656
    10. '               ' → logprob: -22.876502990722656

Token 268: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004636776284314692
    2. '               ' → logprob: -7.750463485717773
    3. '
' → logprob: -11.250463485717773
    4. '            
' → logprob: -11.500463485717773
    5. '		' → logprob: -12.250463485717773
    6. '                
' → logprob: -13.625463485717773
    7. '	       ' → logprob: -13.750463485717773
    8. '       ' → logprob: -14.000463485717773
    9. '          ' → logprob: -14.875463485717773
    10. '           
' → logprob: -15.125463485717773

Token 269: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009734603576362133
    2. '               ' → logprob: -4.759734630584717
    3. '		' → logprob: -7.634734630584717
    4. '	       ' → logprob: -7.759734630584717
    5. '	           ' → logprob: -9.884734153747559
    6. '       ' → logprob: -9.884734153747559
    7. '            
' → logprob: -11.009734153747559
    8. '```' → logprob: -11.134734153747559
    9. '	' → logprob: -11.384734153747559
    10. '                
' → logprob: -11.509734153747559

Token 270: ' iter' (ID: 10621)
  Prédit: ' iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' iter' → logprob: -0.15976223349571228
    2. 'iter' (adapté à ' iter') → logprob: -2.409762144088745
    3. '           ' → logprob: -2.909762144088745
    4. '	iter' → logprob: -6.159762382507324
    5. '               ' → logprob: -7.534762382507324
    6. '   ' → logprob: -8.034762382507324
    7. '       ' → logprob: -9.034762382507324
    8. '(iter' → logprob: -9.534762382507324
    9. '                   ' → logprob: -10.409762382507324
    10. '		' → logprob: -10.659762382507324

Token 271: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.008129963040119e-06
    2. 'v' → logprob: -12.750003814697266
    3. '[' → logprob: -13.875003814697266
    4. '	v' → logprob: -17.625003814697266
    5. '[u' → logprob: -17.625003814697266
    6. '```' → logprob: -17.625003814697266
    7. '[val' → logprob: -17.750003814697266
    8. '[var' → logprob: -17.875003814697266
    9. '][' → logprob: -19.625003814697266
    10. '[x' → logprob: -19.625003814697266

Token 272: ']+=' (ID: 123635)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2586602568626404
    2. ']+=' → logprob: -1.5086603164672852
    3. ']+' → logprob: -5.008660316467285
    4. ' ]' → logprob: -10.633660316467285
    5. '']' → logprob: -13.633660316467285
    6. ']
' → logprob: -14.258660316467285
    7. '[' → logprob: -14.383660316467285
    8. '+=' → logprob: -14.383660316467285
    9. ']<' → logprob: -14.633660316467285
    10. '   ' → logprob: -15.133660316467285

Token 273: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '１' → logprob: -21.125
    4. '```' → logprob: -21.5
    5. '   ' → logprob: -22.25
    6. '
' → logprob: -22.375
    7. '۱' → logprob: -22.75
    8. '  ' → logprob: -23.25
    9. '' → logprob: -24.0
    10. ' ' → logprob: -24.1875

Token 274: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6489729285240173
    2. 'return' → logprob: -0.7739729285240173
    3. '
' → logprob: -5.023972988128662
    4. ' return' → logprob: -5.148972988128662
    5. '	return' → logprob: -6.148972988128662
    6. '   ' → logprob: -7.023972988128662
    7. '	' → logprob: -8.523972511291504
    8. '0' → logprob: -8.773972511291504
    9. '           ' → logprob: -8.898972511291504
    10. '        
' → logprob: -9.523972511291504

Token 275: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.31792768836021423
    2. '       ' → logprob: -1.3179277181625366
    3. ' return' → logprob: -6.442927837371826
    4. '
' → logprob: -7.067927837371826
    5. '   ' → logprob: -7.442927837371826
    6. '```' → logprob: -7.692927837371826
    7. '	return' → logprob: -8.067927360534668
    8. 'None' → logprob: -8.192927360534668
    9. '           ' → logprob: -8.567927360534668
    10. '        
' → logprob: -8.942927360534668

Token 276: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005202664178796113
    2. 'None' → logprob: -8.125520706176758
    3. '0' → logprob: -9.125520706176758
    4. ' return' → logprob: -9.625520706176758
    5. '       ' → logprob: -10.125520706176758
    6. '-' → logprob: -12.500520706176758
    7. '   ' → logprob: -13.375520706176758
    8. '```' → logprob: -13.625520706176758
    9. '	return' → logprob: -13.750520706176758
    10. '
' → logprob: -14.000520706176758

Token 277: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. 'None' → logprob: -18.375001907348633
    4. '０' → logprob: -21.000001907348633
    5. ' None' → logprob: -22.125001907348633
    6. '۰' → logprob: -22.375001907348633
    7. ' ' → logprob: -24.125001907348633
    8. '   ' → logprob: -24.500001907348633
    9. '000' → logprob: -24.625001907348633
    10. '00' → logprob: -25.000001907348633

Token 278: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. 'None' → logprob: -21.125
    4. '   ' → logprob: -22.5
    5. '０' → logprob: -22.625
    6. '۰' → logprob: -23.0
    7. '```' → logprob: -23.125
    8. ' ' → logprob: -24.375
    9. '
' → logprob: -24.5
    10. '  ' → logprob: -24.625

Token 279: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2732863426208496
    2. 'def' → logprob: -1.6482863426208496
    3. '
' → logprob: -3.8982863426208496
    4. '    
' → logprob: -4.02328634262085
    5. ' def' → logprob: -5.64828634262085
    6. '  
' → logprob: -6.52328634262085
    7. '<|end|>' → logprob: -6.89828634262085
    8. '	def' → logprob: -7.02328634262085
    9. '        
' → logprob: -7.64828634262085
    10. ' 
' → logprob: -8.273286819458008

Token 281: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03454045578837395
    2. ' def' → logprob: -4.03454065322876
    3. '   ' → logprob: -4.15954065322876
    4. '	def' → logprob: -8.034540176391602
    5. '
' → logprob: -8.284540176391602
    6. '    
' → logprob: -10.409540176391602
    7. ' ' → logprob: -11.784540176391602
    8. '```' → logprob: -11.784540176391602
    9. '  
' → logprob: -12.534540176391602
    10. ' 
' → logprob: -12.659540176391602

Token 282: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.31342944502830505
    2. 'max' → logprob: -1.3134294748306274
    3. ' flow' → logprob: -9.188429832458496
    4. 'flow' → logprob: -10.063429832458496
    5. 'din' → logprob: -11.313429832458496
    6. '
' → logprob: -12.688429832458496
    7. '_max' → logprob: -13.188429832458496
    8. ' din' → logprob: -13.313429832458496
    9. 'solve' → logprob: -14.188429832458496
    10. '```' → logprob: -14.563429832458496

Token 283: '_flow' (ID: 63802)
  Prédit: '_flow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flow' → logprob: -0.0007220837287604809
    2. 'flow' → logprob: -7.2507219314575195
    3. '_' → logprob: -11.50072193145752
    4. 'Flow' → logprob: -13.87572193145752
    5. '_FLOW' → logprob: -14.50072193145752
    6. ' flow' → logprob: -15.25072193145752
    7. 'f' → logprob: -17.000722885131836
    8. ' _' → logprob: -17.250722885131836
    9. '_flux' → logprob: -17.375722885131836
    10. '_
' → logprob: -17.625722885131836

Token 284: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00022237090161070228
    2. '(s' → logprob: -8.500222206115723
    3. '(' → logprob: -11.375222206115723
    4. ' (' → logprob: -11.875222206115723
    5. 'self' → logprob: -15.875222206115723
    6. '(
' → logprob: -16.62522315979004
    7. ' ' → logprob: -16.75022315979004
    8. '   ' → logprob: -16.87522315979004
    9. 'def' → logprob: -17.25022315979004
    10. ' self' → logprob: -17.87522315979004

Token 285: ',s' (ID: 20379)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4756813645362854
    2. ',s' → logprob: -0.9756813645362854
    3. ' ,' → logprob: -6.600681304931641
    4. ',self' → logprob: -8.47568130493164
    5. 'self' → logprob: -10.97568130493164
    6. ',v' → logprob: -11.47568130493164
    7. ',start' → logprob: -12.97568130493164
    8. 's' → logprob: -13.35068130493164
    9. ',n' → logprob: -14.35068130493164
    10. ',u' → logprob: -14.60068130493164

Token 286: ',t' (ID: 26927)
  Prédit: ',t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',t' → logprob: -0.03805205225944519
    2. ',' → logprob: -3.2880520820617676
    3. ' ,' → logprob: -11.53805160522461
    4. ',
' → logprob: -14.66305160522461
    5. 't' → logprob: -16.16305160522461
    6. ',T' → logprob: -16.28805160522461
    7. ',int' → logprob: -16.53805160522461
    8. ',n' → logprob: -16.53805160522461
    9. ' t' → logprob: -16.66305160522461
    10. '_,' → logprob: -17.78805160522461

Token 287: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006365468143485487
    2. '):
' → logprob: -8.250636100769043
    3. ' ):' → logprob: -8.500636100769043
    4. ',' → logprob: -9.500636100769043
    5. ')' → logprob: -9.625636100769043
    6. ',s' → logprob: -10.500636100769043
    7. '   ' → logprob: -13.500636100769043
    8. '):
' → logprob: -14.375636100769043
    9. ':' → logprob: -15.125636100769043
    10. ',start' → logprob: -16.12563705444336

Token 288: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005945152137428522
    2. 'level' → logprob: -5.255945205688477
    3. ' level' → logprob: -7.755945205688477
    4. '   ' → logprob: -8.630945205688477
    5. 'flow' → logprob: -9.880945205688477
    6. ' flow' → logprob: -10.255945205688477
    7. '	level' → logprob: -11.380945205688477
    8. '    ' → logprob: -13.505945205688477
    9. '      ' → logprob: -13.630945205688477
    10. '0' → logprob: -13.880945205688477

Token 289: ' flow' (ID: 7845)
  Prédit: 'flow'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flow' (adapté à ' flow') → logprob: -0.0001238004770129919
    2. ' flow' → logprob: -9.000123977661133
    3. 'f' → logprob: -16.125123977661133
    4. '   ' → logprob: -16.125123977661133
    5. '0' → logprob: -17.500123977661133
    6. 'inf' → logprob: -17.625123977661133
    7. '_flow' → logprob: -17.625123977661133
    8. 'Flow' → logprob: -18.500123977661133
    9. '       ' → logprob: -18.500123977661133
    10. 'level' → logprob: -18.750123977661133

Token 290: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0067154900170862675
    2. ' =' → logprob: -5.006715297698975
    3. ' ' → logprob: -15.631715774536133
    4. '0' → logprob: -18.381715774536133
    5. '＝' → logprob: -19.256715774536133
    6. ',' → logprob: -20.381715774536133
    7. '   ' → logprob: -20.756715774536133
    8. '  ' → logprob: -20.881715774536133
    9. '=int' → logprob: -20.881715774536133
    10. '=

' → logprob: -21.881715774536133

Token 291: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -20.625001907348633
    4. '０' → logprob: -22.875001907348633
    5. '۰' → logprob: -23.125001907348633
    6. '  ' → logprob: -24.750001907348633
    7. '000' → logprob: -24.875001907348633
    8. '    ' → logprob: -25.750001907348633
    9. '```' → logprob: -25.750001907348633
    10. '       ' → logprob: -25.750001907348633

Token 292: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22408334910869598
    2. '       ' → logprob: -1.8490833044052124
    3. ' 
' → logprob: -3.599083423614502
    4. '        
' → logprob: -4.849083423614502
    5. ' while' → logprob: -5.599083423614502
    6. '        ' → logprob: -7.224083423614502
    7. '' → logprob: -7.224083423614502
    8. ' ' → logprob: -7.599083423614502
    9. '
' → logprob: -7.724083423614502
    10. '	while' → logprob: -7.849083423614502

Token 293: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0100929606705904
    2. ' while' → logprob: -5.010092735290527
    3. '
' → logprob: -6.135092735290527
    4. ' level' → logprob: -8.135092735290527
    5. ' 
' → logprob: -8.260092735290527
    6. '        
' → logprob: -8.510092735290527
    7. '	' → logprob: -8.885092735290527
    8. '	while' → logprob: -9.135092735290527
    9. '	level' → logprob: -9.885092735290527
    10. 'level' → logprob: -10.010092735290527

Token 294: ' INF' (ID: 69196)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.02663767896592617
    2. 'INF' (adapté à ' INF') → logprob: -4.026637554168701
    3. 'level' → logprob: -5.276637554168701
    4. '       ' → logprob: -5.776637554168701
    5. 'inf' → logprob: -8.77663803100586
    6. ' while' → logprob: -9.52663803100586
    7. ' INF' → logprob: -11.40163803100586
    8. '   ' → logprob: -14.02663803100586
    9. 'import' → logprob: -14.15163803100586
    10. 'INT' → logprob: -14.27663803100586

Token 295: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3154143989086151
    2. '=' → logprob: -1.3154144287109375
    3. '=int' → logprob: -6.1904144287109375
    4. '=float' → logprob: -9.315414428710938
    5. '=sys' → logprob: -12.565414428710938
    6. '＝' → logprob: -12.940414428710938
    7. ' =
' → logprob: -13.940414428710938
    8. '=max' → logprob: -14.190414428710938
    9. '=
' → logprob: -14.440414428710938
    10. '=input' → logprob: -14.690414428710938

Token 296: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0010288810590282083
    2. 'float' → logprob: -7.001029014587402
    3. ' ' → logprob: -9.251029014587402
    4. '100' → logprob: -11.751029014587402
    5. 'int' → logprob: -11.876029014587402
    6. '1' → logprob: -12.501029014587402
    7. ' float' → logprob: -12.876029014587402
    8. '987' → logprob: -16.251028060913086
    9. '   ' → logprob: -16.751028060913086
    10. '999' → logprob: -16.876028060913086

Token 297: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.7994282795116305e-05
    2. '**' → logprob: -10.00004768371582
    3. '18' → logprob: -13.00004768371582
    4. '```' → logprob: -16.37504768371582
    5. '09' → logprob: -16.62504768371582
    6. '10' → logprob: -17.00004768371582
    7. '15' → logprob: -17.75004768371582
    8. '12' → logprob: -17.87504768371582
    9. '
' → logprob: -18.37504768371582
    10. '   ' → logprob: -19.25004768371582

Token 298: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0011749862460419536
    2. '18' → logprob: -6.8761749267578125
    3. '15' → logprob: -8.876174926757812
    4. '10' → logprob: -13.251174926757812
    5. '12' → logprob: -14.751174926757812
    6. '14' → logprob: -15.501174926757812
    7. '16' → logprob: -16.626174926757812
    8. '13' → logprob: -16.876174926757812
    9. '17' → logprob: -17.751174926757812
    10. '９' → logprob: -18.376174926757812

Token 299: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.579637885093689
    2. '
' → logprob: -0.829637885093689
    3. ' while' → logprob: -6.0796380043029785
    4. 'while' → logprob: -7.2046380043029785
    5. '        
' → logprob: -8.45463752746582
    6. ' 
' → logprob: -8.82963752746582
    7. '<|end|>' → logprob: -9.07963752746582
    8. '
' → logprob: -9.70463752746582
    9. '	while' → logprob: -10.45463752746582
    10. '  
' → logprob: -10.82963752746582

Token 300: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2719963490962982
    2. '       ' → logprob: -1.5219963788986206
    3. '        
' → logprob: -4.52199649810791
    4. ' 
' → logprob: -5.27199649810791
    5. '<|end|>' → logprob: -6.64699649810791
    6. '  
' → logprob: -6.89699649810791
    7. ' while' → logprob: -7.39699649810791
    8. '		
' → logprob: -8.64699649810791
    9. '    
' → logprob: -8.64699649810791
    10. 'while' → logprob: -9.02199649810791

Token 301: ' level' (ID: 3211)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06213775649666786
    2. 'level' (adapté à ' level') → logprob: -3.0621378421783447
    3. '       ' → logprob: -4.562137603759766
    4. ' while' → logprob: -5.812137603759766
    5. ' level' → logprob: -10.562137603759766
    6. '	while' → logprob: -14.187137603759766
    7. 'While' → logprob: -14.437137603759766
    8. '```' → logprob: -14.437137603759766
    9. '[level' → logprob: -15.687137603759766
    10. '	level' → logprob: -15.812137603759766

Token 302: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.004869399592280388
    2. ' =' → logprob: -5.37986946105957
    3. '=[]' → logprob: -9.12986946105957
    4. '[-' → logprob: -9.62986946105957
    5. '=' → logprob: -9.87986946105957
    6. '=-' → logprob: -11.25486946105957
    7. '=[]
' → logprob: -12.50486946105957
    8. '=['' → logprob: -13.12986946105957
    9. ' =[' → logprob: -13.12986946105957
    10. '[:]' → logprob: -14.50486946105957

Token 303: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.704273118884885e-07
    2. ' -' → logprob: -14.250000953674316
    3. '-f' → logprob: -18.875
    4. '-int' → logprob: -19.0
    5. '   ' → logprob: -19.75
    6. '-i' → logprob: -19.875
    7. '-s' → logprob: -20.375
    8. ']-' → logprob: -20.5
    9. '-level' → logprob: -20.5
    10. '-n' → logprob: -20.625

Token 304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.500000953674316
    3. '
' → logprob: -16.5
    4. '

' → logprob: -17.25
    5. '   ' → logprob: -17.25
    6. '-' → logprob: -17.5
    7. '```' → logprob: -18.5
    8. '  ' → logprob: -18.875
    9. '``' → logprob: -20.3125
    10. '１' → logprob: -20.5625

Token 305: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.2419232428073883
    2. ' for' → logprob: -1.741923213005066
    3. 'for' → logprob: -3.7419233322143555
    4. ']' → logprob: -4.3669233322143555
    5. ']*(' → logprob: -5.7419233322143555
    6. ' ]' → logprob: -9.616923332214355
    7. ']+' → logprob: -11.116923332214355
    8. '	for' → logprob: -12.366923332214355
    9. '   ' → logprob: -12.741923332214355
    10. '```' → logprob: -13.241923332214355

Token 306: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.44312788406387e-05
    2. '(self' → logprob: -10.000054359436035
    3. ' self' → logprob: -11.625054359436035
    4. '[self' → logprob: -16.75005531311035
    5. '
' → logprob: -17.50005531311035
    6. '       ' → logprob: -18.37505531311035
    7. '	self' → logprob: -19.62505531311035
    8. '           ' → logprob: -19.75005531311035
    9. '   ' → logprob: -20.12505531311035
    10. '```' → logprob: -20.12505531311035

Token 307: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.00018029935017693788
    2. 'n' → logprob: -8.6251802444458
    3. '.' → logprob: -14.3751802444458
    4. ',n' → logprob: -16.500181198120117
    5. '_n' → logprob: -18.000181198120117
    6. ' .' → logprob: -18.000181198120117
    7. '<n' → logprob: -18.750181198120117
    8. 'self' → logprob: -19.000181198120117
    9. '.u' → logprob: -19.375181198120117
    10. '
' → logprob: -19.625181198120117

Token 308: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.003175694728270173
    2. '       ' → logprob: -6.503175735473633
    3. '<|end|>' → logprob: -6.878175735473633
    4. 'while' → logprob: -8.378175735473633
    5. ' while' → logprob: -8.878175735473633
    6. '        
' → logprob: -9.128175735473633
    7. '
' → logprob: -9.753175735473633
    8. ' 
' → logprob: -9.878175735473633
    9. '	while' → logprob: -10.628175735473633
    10. '<|end|>' → logprob: -11.628175735473633

Token 309: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11007881909608841
    2. '       ' → logprob: -2.860078811645508
    3. '<|end|>' → logprob: -3.985078811645508
    4. 'while' → logprob: -4.235078811645508
    5. ' while' → logprob: -4.860078811645508
    6. '	while' → logprob: -5.485078811645508
    7. '        
' → logprob: -7.110078811645508
    8. '<|end|>' → logprob: -8.110078811645508
    9. '```' → logprob: -8.735078811645508
    10. '
' → logprob: -8.860078811645508

Token 310: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -7.266944157890975e-05
    2. ' while' → logprob: -10.000072479248047
    3. '       ' → logprob: -11.000072479248047
    4. 'iter' → logprob: -11.500072479248047
    5. '   ' → logprob: -15.625072479248047
    6. '	while' → logprob: -15.875072479248047
    7. 'While' → logprob: -16.750072479248047
    8. '```' → logprob: -18.250072479248047
    9. '        
' → logprob: -18.875072479248047
    10. '
' → logprob: -19.625072479248047

Token 311: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07973165810108185
    2. ' self' → logprob: -2.5797317028045654
    3. 'True' → logprob: -7.454731464385986
    4. ' True' → logprob: -8.329731941223145
    5. '(self' → logprob: -11.329731941223145
    6. ' ' → logprob: -12.829731941223145
    7. '	self' → logprob: -13.454731941223145
    8. '   ' → logprob: -13.579731941223145
    9. '
' → logprob: -13.704731941223145
    10. '[self' → logprob: -13.954731941223145

Token 312: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.8755815029144287
    2. '.max' → logprob: -0.8755815029144287
    3. 'max' → logprob: -2.3755815029144287
    4. '.g' → logprob: -2.7505815029144287
    5. 'b' → logprob: -6.375581741333008
    6. 'def' → logprob: -6.500581741333008
    7. '].' → logprob: -6.750581741333008
    8. ').' → logprob: -7.125581741333008
    9. '.' → logprob: -7.125581741333008
    10. ' max' → logprob: -7.375581741333008

Token 313: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -6.034592388459714e-06
    2. 'f' → logprob: -12.625005722045898
    3. 'sf' → logprob: -14.125005722045898
    4. 's' → logprob: -14.250005722045898
    5. 'FS' → logprob: -14.250005722045898
    6. '_fs' → logprob: -15.000005722045898
    7. '(fs' → logprob: -15.750005722045898
    8. 'fsm' → logprob: -16.3750057220459
    9. ' fs' → logprob: -17.1250057220459
    10. 'flow' → logprob: -17.7500057220459

Token 314: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -3.173704271830502e-06
    2. ' (' → logprob: -13.00000286102295
    3. '(' → logprob: -14.25000286102295
    4. 's' → logprob: -15.75000286102295
    5. '(
' → logprob: -16.375003814697266
    6. ' s' → logprob: -18.625003814697266
    7. '(self' → logprob: -18.750003814697266
    8. ')' → logprob: -20.000003814697266
    9. '```' → logprob: -20.125003814697266
    10. '
' → logprob: -20.375003814697266

Token 315: ',t' (ID: 26927)
  Prédit: ',t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',t' → logprob: -0.0036909321788698435
    2. ',' → logprob: -5.628690719604492
    3. 't' → logprob: -9.503690719604492
    4. ' ,' → logprob: -11.253690719604492
    5. '(t' → logprob: -14.003690719604492
    6. ',s' → logprob: -14.128690719604492
    7. ' t' → logprob: -14.128690719604492
    8. '       ' → logprob: -15.753690719604492
    9. ',
' → logprob: -15.753690719604492
    10. '<t' → logprob: -15.878690719604492

Token 316: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7848862373502925e-05
    2. ' ,' → logprob: -10.500027656555176
    3. ',
' → logprob: -16.250028610229492
    4. 'level' → logprob: -16.625028610229492
    5. '[level' → logprob: -16.750028610229492
    6. ',[' → logprob: -17.500028610229492
    7. ' level' → logprob: -18.750028610229492
    8. '(level' → logprob: -19.375028610229492
    9. ',line' → logprob: -19.750028610229492
    10. '
' → logprob: -20.500028610229492

Token 317: 'level' (ID: 6164)
  Prédit: 'level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -3.7697225252486533e-06
    2. ' level' → logprob: -12.500003814697266
    3. '[level' → logprob: -21.625003814697266
    4. '	level' → logprob: -23.750003814697266
    5. 'length' → logprob: -24.500003814697266
    6. '(level' → logprob: -24.875003814697266
    7. 'layer' → logprob: -26.000003814697266
    8. 'levels' → logprob: -26.125003814697266
    9. '.level' → logprob: -26.375003814697266
    10. ')' → logprob: -26.500003814697266

Token 318: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5763450860977173
    2. '):' → logprob: -0.8263450860977173
    3. ')' → logprob: -8.826345443725586
    4. ' ):' → logprob: -9.451345443725586
    5. '       ' → logprob: -9.826345443725586
    6. ':' → logprob: -9.951345443725586
    7. ' ):
' → logprob: -10.076345443725586
    8. '):
' → logprob: -10.576345443725586
    9. '):

' → logprob: -12.326345443725586
    10. ':
' → logprob: -12.326345443725586

Token 319: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000498701527249068
    2. ' iter' → logprob: -8.25049877166748
    3. 'iter' → logprob: -8.62549877166748
    4. '       ' → logprob: -10.87549877166748
    5. '               ' → logprob: -11.37549877166748
    6. 'level' → logprob: -11.50049877166748
    7. '```' → logprob: -12.00049877166748
    8. '   ' → logprob: -13.00049877166748
    9. '	iter' → logprob: -13.12549877166748
    10. '	       ' → logprob: -13.12549877166748

Token 320: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' (adapté à ' iter') → logprob: -0.0028461257461458445
    2. ' iter' → logprob: -6.2528462409973145
    3. '           ' → logprob: -7.0028462409973145
    4. ' ' → logprob: -13.002845764160156
    5. '               ' → logprob: -13.002845764160156
    6. '	iter' → logprob: -13.002845764160156
    7. '   ' → logprob: -14.002845764160156
    8. '  ' → logprob: -16.502845764160156
    9. '_iter' → logprob: -16.752845764160156
    10. '            ' → logprob: -17.002845764160156

Token 321: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.0017198040150105953
    2. '=' → logprob: -7.126719951629639
    3. ' =[' → logprob: -7.251719951629639
    4. ' =' → logprob: -8.75171947479248
    5. '[' → logprob: -10.00171947479248
    6. '=v' → logprob: -14.62671947479248
    7. '=[[' → logprob: -14.75171947479248
    8. '=[]' → logprob: -14.87671947479248
    9. ' [' → logprob: -15.50171947479248
    10. '   ' → logprob: -15.75171947479248

Token 322: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '[' → logprob: -17.0
    3. ' ' → logprob: -17.5
    4. '   ' → logprob: -23.125
    5. ' [' → logprob: -23.75
    6. '０' → logprob: -24.375
    7. '۰' → logprob: -25.25
    8. '```' → logprob: -25.25
    9. '
' → logprob: -25.375
    10. '-' → logprob: -26.375

Token 323: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.0001872094871941954
    2. ']' → logprob: -9.125186920166016
    3. '*self' → logprob: -10.000186920166016
    4. 'self' → logprob: -10.750186920166016
    5. ' for' → logprob: -12.500186920166016
    6. ']*(' → logprob: -12.625186920166016
    7. ']+' → logprob: -13.625186920166016
    8. 'for' → logprob: -13.875186920166016
    9. ' self' → logprob: -14.375186920166016
    10. '   ' → logprob: -14.875186920166016

Token 324: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.128163257315464e-07
    2. '(self' → logprob: -16.125
    3. ' self' → logprob: -16.375
    4. '           ' → logprob: -17.125
    5. '       ' → logprob: -17.875
    6. '
' → logprob: -18.125
    7. 'len' → logprob: -19.375
    8. '   ' → logprob: -19.875
    9. 'n' → logprob: -20.125
    10. '[self' → logprob: -21.25

Token 325: '.n' (ID: 1835)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1269306242465973
    2. '.n' → logprob: -2.1269307136535645
    3. '_n' → logprob: -13.626930236816406
    4. '	n' → logprob: -14.876930236816406
    5. '<n' → logprob: -15.251930236816406
    6. 'self' → logprob: -15.376930236816406
    7. ',n' → logprob: -15.376930236816406
    8. 'N' → logprob: -16.626930236816406
    9. '   ' → logprob: -17.626930236816406
    10. 's' → logprob: -17.876930236816406

Token 326: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0044923084788024426
    2. 'while' → logprob: -6.254492282867432
    3. ' while' → logprob: -7.254492282867432
    4. '
' → logprob: -7.379492282867432
    5. '<|end|>' → logprob: -7.754492282867432
    6. ',' → logprob: -8.00449275970459
    7. '	       ' → logprob: -9.00449275970459
    8. '		' → logprob: -9.87949275970459
    9. '       ' → logprob: -10.00449275970459
    10. '	while' → logprob: -10.25449275970459

Token 327: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30219021439552307
    2. 'while' → logprob: -1.4271901845932007
    3. ' while' → logprob: -3.9271903038024902
    4. 'f' → logprob: -7.42719030380249
    5. '   ' → logprob: -9.177189826965332
    6. '       ' → logprob: -9.302189826965332
    7. 'd' → logprob: -9.302189826965332
    8. '	while' → logprob: -9.427189826965332
    9. '```' → logprob: -10.427189826965332
    10. ' f' → logprob: -10.552189826965332

Token 328: ' while' (ID: 2049)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5763236284255981
    2. 'while' (adapté à ' while') → logprob: -0.8263236284255981
    3. ' while' → logprob: -8.201323509216309
    4. '           ' → logprob: -10.076323509216309
    5. 'd' → logprob: -10.451323509216309
    6. 'F' → logprob: -11.326323509216309
    7. '   ' → logprob: -11.576323509216309
    8. '            
' → logprob: -12.201323509216309
    9. ' f' → logprob: -12.326323509216309
    10. 'flow' → logprob: -12.826323509216309

Token 329: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.20154090225696564
    2. ' True' → logprob: -2.201540946960449
    3. '(True' → logprob: -2.701540946960449
    4. '1' → logprob: -6.076540946960449
    5. '(' → logprob: -6.826540946960449
    6. '(d' → logprob: -7.326540946960449
    7. ' (' → logprob: -8.32654094696045
    8. ' ' → logprob: -8.70154094696045
    9. '   ' → logprob: -8.82654094696045
    10. 'd' → logprob: -8.82654094696045

Token 330: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5119595527648926
    2. '               ' → logprob: -1.0119595527648926
    3. ':
' → logprob: -4.136959552764893
    4. '<|end|>' → logprob: -4.761959552764893
    5. '           ' → logprob: -5.011959552764893
    6. ',' → logprob: -6.636959552764893
    7. ' :' → logprob: -7.011959552764893
    8. ' ' → logprob: -7.136959552764893
    9. '<|end|>' → logprob: -7.511959552764893
    10. ')' → logprob: -8.386959075927734

Token 331: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0032712374813854694
    2. '           ' → logprob: -6.253271102905273
    3. 'd' → logprob: -7.378271102905273
    4. ' d' → logprob: -7.628271102905273
    5. '              ' → logprob: -9.628271102905273
    6. '   ' → logprob: -9.753271102905273
    7. '                   ' → logprob: -10.503271102905273
    8. '             ' → logprob: -10.753271102905273
    9. '                ' → logprob: -11.128271102905273
    10. '            ' → logprob: -11.378271102905273

Token 332: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.002530714264139533
    2. 'd' → logprob: -6.377530574798584
    3. ' f' → logprob: -7.627530574798584
    4. '                   ' → logprob: -8.127531051635742
    5. 'flow' → logprob: -10.502531051635742
    6. 'F' → logprob: -12.252531051635742
    7. '	f' → logprob: -12.252531051635742
    8. '   ' → logprob: -12.502531051635742
    9. 'df' → logprob: -13.502531051635742
    10. '               ' → logprob: -14.127531051635742

Token 333: '=self' (ID: 16945)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.027244683355093002
    2. '=self' → logprob: -3.7772445678710938
    3. ' =' → logprob: -5.527244567871094
    4. '=f' → logprob: -11.527244567871094
    5. 'self' → logprob: -13.027244567871094
    6. '=
' → logprob: -14.527244567871094
    7. '=sys' → logprob: -15.402244567871094
    8. '=max' → logprob: -15.652244567871094
    9. '=

' → logprob: -15.652244567871094
    10. '=int' → logprob: -15.652244567871094

Token 334: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.00015288250870071352
    2. 'dfs' → logprob: -8.875152587890625
    3. '.max' → logprob: -11.875152587890625
    4. 'max' → logprob: -12.750152587890625
    5. ' .' → logprob: -13.250152587890625
    6. '.' → logprob: -13.750152587890625
    7. ' dfs' → logprob: -15.750152587890625
    8. '
' → logprob: -16.750152587890625
    9. '   ' → logprob: -17.500152587890625
    10. '\.' → logprob: -17.625152587890625

Token 335: 'fs' (ID: 6469)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5830481648445129
    2. 'fs' → logprob: -0.8330481648445129
    3. 'sf' → logprob: -5.083048343658447
    4. 'f' → logprob: -7.958048343658447
    5. ''s' → logprob: -8.958047866821289
    6. ' s' → logprob: -9.083047866821289
    7. '(fs' → logprob: -9.958047866821289
    8. ' fs' → logprob: -10.458047866821289
    9. 'ps' → logprob: -10.833047866821289
    10. '_s' → logprob: -10.833047866821289

Token 336: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00010807292710524052
    2. 's' → logprob: -9.500107765197754
    3. '<|end|>' → logprob: -11.125107765197754
    4. '(' → logprob: -11.250107765197754
    5. '(
' → logprob: -12.750107765197754
    6. ' s' → logprob: -13.625107765197754
    7. '(t' → logprob: -15.500107765197754
    8. '<s' → logprob: -15.500107765197754
    9. '	s' → logprob: -16.00010871887207
    10. ' (' → logprob: -16.25010871887207

Token 337: ',t' (ID: 26927)
  Prédit: ',t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',t' → logprob: -0.005077803041785955
    2. ',' → logprob: -5.380077838897705
    3. 't' → logprob: -7.755077838897705
    4. ' ,' → logprob: -11.005077362060547
    5. ' t' → logprob: -12.505077362060547
    6. '           ' → logprob: -13.255077362060547
    7. '               ' → logprob: -14.005077362060547
    8. '(t' → logprob: -14.130077362060547
    9. '```' → logprob: -14.130077362060547
    10. '<t' → logprob: -14.255077362060547

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03908836096525192
    2. 'INF' → logprob: -3.289088249206543
    3. ',float' → logprob: -7.039088249206543
    4. ' ,' → logprob: -9.414088249206543
    5. ' INF' → logprob: -9.664088249206543
    6. 'float' → logprob: -11.664088249206543
    7. ',f' → logprob: -12.539088249206543
    8. 'flow' → logprob: -12.789088249206543
    9. 'inf' → logprob: -13.039088249206543
    10. ',
' → logprob: -13.664088249206543

Token 339: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -3.128163257315464e-07
    2. ' INF' → logprob: -15.25
    3. 'IN' → logprob: -17.5
    4. '   ' → logprob: -19.0
    5. '_INF' → logprob: -19.0
    6. '10' → logprob: -19.625
    7. '-INF' → logprob: -20.25
    8. 'inf' → logprob: -20.875
    9. '999' → logprob: -21.25
    10. '
' → logprob: -21.875

Token 340: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21118657290935516
    2. ')' → logprob: -1.7111865282058716
    3. ',f' → logprob: -4.836186408996582
    4. ' ,' → logprob: -6.961186408996582
    5. ',)' → logprob: -8.086186408996582
    6. ')
' → logprob: -8.086186408996582
    7. ' )' → logprob: -9.586186408996582
    8. ',
' → logprob: -10.336186408996582
    9. '           ' → logprob: -10.711186408996582
    10. ',None' → logprob: -11.211186408996582

Token 341: 'level' (ID: 6164)
  Prédit: 'level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -3.054500666621607e-06
    2. ' level' → logprob: -12.75000286102295
    3. '[level' → logprob: -16.375003814697266
    4. '(level' → logprob: -19.500003814697266
    5. '	level' → logprob: -20.375003814697266
    6. '-level' → logprob: -20.625003814697266
    7. 'length' → logprob: -21.250003814697266
    8. '.level' → logprob: -21.375003814697266
    9. '           ' → logprob: -22.250003814697266
    10. '
' → logprob: -22.250003814697266

Token 342: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033879990223795176
    2. ' ,' → logprob: -8.000338554382324
    3. '           ' → logprob: -13.375338554382324
    4. ',
' → logprob: -13.625338554382324
    5. '   ' → logprob: -15.500338554382324
    6. '       ' → logprob: -15.875338554382324
    7. '               ' → logprob: -16.37533950805664
    8. ',int' → logprob: -16.87533950805664
    9. '  ' → logprob: -17.12533950805664
    10. '          ' → logprob: -18.00033950805664

Token 343: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -9.615255839889869e-05
    2. ' iter' → logprob: -9.250096321105957
    3. '	iter' → logprob: -20.12509536743164
    4. '(iter' → logprob: -20.62509536743164
    5. '_iter' → logprob: -21.00009536743164
    6. '   ' → logprob: -21.62509536743164
    7. ' ' → logprob: -22.12509536743164
    8. '           ' → logprob: -22.50009536743164
    9. '
' → logprob: -22.62509536743164
    10. ')' → logprob: -22.87509536743164

Token 344: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03866513445973396
    2. '               ' → logprob: -3.6636650562286377
    3. ')
' → logprob: -4.413665294647217
    4. '):
' → logprob: -9.163664817810059
    5. '<|end|>' → logprob: -11.163664817810059
    6. '           ' → logprob: -11.788664817810059
    7. ')\
' → logprob: -12.038664817810059
    8. ')>' → logprob: -12.163664817810059
    9. ')==' → logprob: -12.663664817810059
    10. ' )' → logprob: -12.663664817810059

Token 345: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.3213025744771585e-05
    2. '                   ' → logprob: -10.625033378601074
    3. '           ' → logprob: -12.875033378601074
    4. '                ' → logprob: -12.875033378601074
    5. '              ' → logprob: -13.750033378601074
    6. '
' → logprob: -14.125033378601074
    7. '<|end|>' → logprob: -14.750033378601074
    8. '                
' → logprob: -14.875033378601074
    9. '			' → logprob: -15.125033378601074
    10. '       ' → logprob: -15.750033378601074

Token 346: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7092651724815369
    2. 'if' (adapté à ' if') → logprob: -0.9592651724815369
    3. ' if' → logprob: -2.0842652320861816
    4. '                   ' → logprob: -8.834264755249023
    5. '           ' → logprob: -9.459264755249023
    6. '
' → logprob: -9.584264755249023
    7. '0' → logprob: -10.084264755249023
    8. '                
' → logprob: -10.709264755249023
    9. '	if' → logprob: -11.334264755249023
    10. '                ' → logprob: -11.459264755249023

Token 347: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0007210109033621848
    2. ' f' → logprob: -7.250720977783203
    3. ' not' → logprob: -11.500720977783203
    4. 'not' → logprob: -13.875720977783203
    5. '   ' → logprob: -18.000720977783203
    6. '	f' → logprob: -18.750720977783203
    7. '0' → logprob: -19.875720977783203
    8. ' ' → logprob: -20.500720977783203
    9. '  ' → logprob: -20.625720977783203
    10. '
' → logprob: -22.000720977783203

Token 348: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12710900604724884
    2. ' ==' → logprob: -2.1271090507507324
    3. ')==' → logprob: -9.502108573913574
    4. '<=' → logprob: -9.877108573913574
    5. ']==' → logprob: -11.127108573913574
    6. '=' → logprob: -11.377108573913574
    7. '0' → logprob: -11.627108573913574
    8. '==
' → logprob: -12.002108573913574
    9. ' <=' → logprob: -12.377108573913574
    10. '()==' → logprob: -12.377108573913574

Token 349: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '۰' → logprob: -18.625
    4. '０' → logprob: -19.875
    5. '00' → logprob: -20.125
    6. '   ' → logprob: -21.75
    7. '000' → logprob: -22.125
    8. '০' → logprob: -22.625
    9. '٠' → logprob: -23.625
    10. '  ' → logprob: -24.0

Token 350: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04002682864665985
    2. ':
' → logprob: -4.040026664733887
    3. '               ' → logprob: -4.290026664733887
    4. ':' → logprob: -4.915026664733887
    5. '           ' → logprob: -8.040026664733887
    6. '	break' → logprob: -10.040026664733887
    7. '                       ' → logprob: -10.040026664733887
    8. 'break' → logprob: -10.165026664733887
    9. '   ' → logprob: -10.290026664733887
    10. ' break' → logprob: -10.540026664733887

Token 351: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00033200893085449934
    2. '               ' → logprob: -8.25033187866211
    3. '           ' → logprob: -10.87533187866211
    4. 'break' → logprob: -11.00033187866211
    5. ' break' → logprob: -11.37533187866211
    6. '                  ' → logprob: -11.87533187866211
    7. '   ' → logprob: -12.25033187866211
    8. '				' → logprob: -13.00033187866211
    9. '                       ' → logprob: -13.00033187866211
    10. '                    ' → logprob: -13.12533187866211

Token 352: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.03707875683903694
    2. '                   ' → logprob: -3.787078857421875
    3. ' break' → logprob: -4.537078857421875
    4. '	break' → logprob: -6.162078857421875
    5. '               ' → logprob: -7.162078857421875
    6. '                       ' → logprob: -9.162078857421875
    7. '           ' → logprob: -10.912078857421875
    8. '   ' → logprob: -11.912078857421875
    9. '_break' → logprob: -12.287078857421875
    10. '
' → logprob: -12.912078857421875

Token 353: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6958523988723755
    2. '               ' → logprob: -0.6958523988723755
    3. '           ' → logprob: -6.070852279663086
    4. '
' → logprob: -9.320852279663086
    5. '                
' → logprob: -9.445852279663086
    6. '       ' → logprob: -9.820852279663086
    7. '                   ' → logprob: -10.195852279663086
    8. '<|end|>' → logprob: -10.445852279663086
    9. ',
' → logprob: -11.195852279663086
    10. '(flow' → logprob: -11.195852279663086

Token 354: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007179087493568659
    2. '
' → logprob: -5.382179260253906
    3. '           ' → logprob: -6.007179260253906
    4. '       ' → logprob: -10.257179260253906
    5. '                
' → logprob: -11.007179260253906
    6. '                   ' → logprob: -11.382179260253906
    7. '```' → logprob: -11.757179260253906
    8. 'flow' → logprob: -12.882179260253906
    9. '(flow' → logprob: -12.882179260253906
    10. '<|end|>' → logprob: -13.007179260253906

Token 355: ' flow' (ID: 7845)
  Prédit: ' flow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flow' → logprob: -0.6396388411521912
    2. '               ' → logprob: -1.139638900756836
    3. 'flow' (adapté à ' flow') → logprob: -1.889638900756836
    4. '           ' → logprob: -6.764638900756836
    5. '
' → logprob: -9.014638900756836
    6. '(flow' → logprob: -9.889638900756836
    7. '       ' → logprob: -10.139638900756836
    8. '                   ' → logprob: -10.264638900756836
    9. '.flow' → logprob: -10.514638900756836
    10. '_flow' → logprob: -11.639638900756836

Token 356: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.38692599534988403
    2. ' +=' → logprob: -1.1369259357452393
    3. ']+=' → logprob: -10.01192569732666
    4. '+' → logprob: -12.38692569732666
    5. '+=(' → logprob: -12.88692569732666
    6. '+="' → logprob: -13.01192569732666
    7. '+='' → logprob: -14.01192569732666
    8. '   ' → logprob: -15.38692569732666
    9. '```' → logprob: -17.261926651000977
    10. ' +' → logprob: -17.511926651000977

Token 357: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0002613358374219388
    2. ' f' → logprob: -8.250261306762695
    3. '	f' → logprob: -20.875261306762695
    4. ' ' → logprob: -22.500261306762695
    5. '   ' → logprob: -22.750261306762695
    6. '
' → logprob: -23.125261306762695
    7. '_f' → logprob: -24.250261306762695
    8. '  ' → logprob: -24.500261306762695
    9. '```' → logprob: -24.500261306762695
    10. 'd' → logprob: -25.000261306762695

Token 358: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02689417637884617
    2. '
' → logprob: -3.6518940925598145
    3. '       ' → logprob: -7.6518940925598145
    4. 'return' → logprob: -10.276894569396973
    5. ' return' → logprob: -10.651894569396973
    6. '
' → logprob: -11.401894569396973
    7. '            
' → logprob: -11.526894569396973
    8. '          ' → logprob: -11.651894569396973
    9. '<|end|>' → logprob: -12.276894569396973
    10. ',' → logprob: -12.401894569396973

Token 359: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0081811947748065
    2. '
' → logprob: -4.883181095123291
    3. '       ' → logprob: -8.13318157196045
    4. ' return' → logprob: -9.13318157196045
    5. 'return' → logprob: -9.38318157196045
    6. '            
' → logprob: -10.50818157196045
    7. '          ' → logprob: -11.50818157196045
    8. '        
' → logprob: -11.63318157196045
    9. '
' → logprob: -11.88318157196045
    10. '    
' → logprob: -12.13318157196045

Token 360: ' level' (ID: 3211)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.056604932993650436
    2. 'level' (adapté à ' level') → logprob: -3.1816048622131348
    3. ' level' → logprob: -4.931604862213135
    4. '       ' → logprob: -5.181604862213135
    5. '   ' → logprob: -8.181605339050293
    6. '
' → logprob: -9.056605339050293
    7. '	level' → logprob: -9.431605339050293
    8. '[level' → logprob: -10.056605339050293
    9. '          ' → logprob: -10.306605339050293
    10. '(level' → logprob: -10.931605339050293

Token 361: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -2.451116051815916e-05
    2. '[:]' → logprob: -11.000024795532227
    3. '=' → logprob: -12.750024795532227
    4. ' =' → logprob: -13.000024795532227
    5. '=['' → logprob: -13.250024795532227
    6. '[-' → logprob: -14.750024795532227
    7. '=["' → logprob: -15.750024795532227
    8. '=[[' → logprob: -16.375024795532227
    9. '[:' → logprob: -16.750024795532227
    10. '	' → logprob: -16.750024795532227

Token 362: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.088346359931165e-07
    2. '[-' → logprob: -14.250000953674316
    3. ' -' → logprob: -15.500000953674316
    4. '   ' → logprob: -19.0
    5. '           ' → logprob: -21.5
    6. '  ' → logprob: -22.75
    7. ' ' → logprob: -22.75
    8. '                   ' → logprob: -23.125
    9. '(-' → logprob: -23.75
    10. '               ' → logprob: -23.875

Token 363: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '-' → logprob: -14.250000953674316
    3. ' -' → logprob: -18.125
    4. '```' → logprob: -18.875
    5. ' ' → logprob: -19.0
    6. ']' → logprob: -19.5
    7. '[' → logprob: -19.75
    8. '１' → logprob: -20.125
    9. '<|end|>' → logprob: -20.4375
    10. '   ' → logprob: -20.875

Token 364: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -1.5451681974809617e-05
    2. ']' → logprob: -11.125015258789062
    3. ']*(' → logprob: -14.875015258789062
    4. '           ' → logprob: -16.875015258789062
    5. ' for' → logprob: -17.000015258789062
    6. '*' → logprob: -17.125015258789062
    7. ']+' → logprob: -17.250015258789062
    8. ' ]' → logprob: -17.375015258789062
    9. ')*' → logprob: -17.500015258789062
    10. '       ' → logprob: -17.875015258789062

Token 365: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.128163257315464e-07
    2. ' self' → logprob: -16.0
    3. 'len' → logprob: -16.125
    4. '(self' → logprob: -17.625
    5. '```' → logprob: -17.875
    6. '           ' → logprob: -19.5
    7. '[self' → logprob: -20.625
    8. 'user' → logprob: -21.25
    9. '       ' → logprob: -21.375
    10. '_self' → logprob: -21.75

Token 366: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.00011093381908722222
    2. 'n' → logprob: -9.125110626220703
    3. 'self' → logprob: -13.625110626220703
    4. 'user' → logprob: -15.125110626220703
    5. 'len' → logprob: -15.250110626220703
    6. '.s' → logprob: -16.625110626220703
    7. '.user' → logprob: -17.125110626220703
    8. '.size' → logprob: -17.625110626220703
    9. '_n' → logprob: -17.875110626220703
    10. 'size' → logprob: -18.125110626220703

Token 367: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032423511147499084
    2. '<|end|>' → logprob: -3.907423496246338
    3. 'return' → logprob: -4.907423496246338
    4. ' return' → logprob: -6.032423496246338
    5. '
' → logprob: -6.407423496246338
    6. '	return' → logprob: -9.282423973083496
    7. ')return' → logprob: -9.532423973083496
    8. '<|end|>' → logprob: -9.657423973083496
    9. ')' → logprob: -10.532423973083496
    10. '```' → logprob: -10.782423973083496

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11349158734083176
    2. '<|end|>' → logprob: -2.4884915351867676
    3. 'return' → logprob: -3.9884915351867676
    4. ' return' → logprob: -5.238491535186768
    5. '<|end|>' → logprob: -9.113492012023926
    6. '
' → logprob: -9.738492012023926
    7. ')return' → logprob: -9.738492012023926
    8. '	return' → logprob: -10.113492012023926
    9. '```' → logprob: -10.363492012023926
    10. ')' → logprob: -10.488492012023926

Token 369: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3144713044166565
    2. 'return' (adapté à ' return') → logprob: -1.3144712448120117
    3. ' return' → logprob: -6.939471244812012
    4. '   ' → logprob: -8.564471244812012
    5. '	return' → logprob: -10.189471244812012
    6. '           ' → logprob: -12.939471244812012
    7. '      ' → logprob: -13.189471244812012
    8. '<|end|>' → logprob: -13.314471244812012
    9. ':return' → logprob: -13.314471244812012
    10. '{return' → logprob: -14.064471244812012

Token 370: ' flow' (ID: 7845)
  Prédit: 'flow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flow' → logprob: -0.004078401252627373
    2. ' flow' → logprob: -5.504078388214111
    3. '(flow' → logprob: -18.879077911376953
    4. '.flow' → logprob: -21.629077911376953
    5. '_flow' → logprob: -22.254077911376953
    6. 'Flow' → logprob: -22.379077911376953
    7. 'flux' → logprob: -22.504077911376953
    8. 'flows' → logprob: -22.504077911376953
    9. '0' → logprob: -22.754077911376953
    10. 'fluid' → logprob: -23.504077911376953

Token 371: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 372: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013806506991386414
    2. 'if' → logprob: -5.763806343078613
    3. 'N' → logprob: -6.138806343078613
    4. '#' → logprob: -6.138806343078613
    5. 't' → logprob: -6.388806343078613
    6. 'def' → logprob: -6.513806343078613
    7. 'a' → logprob: -7.638806343078613
    8. 's' → logprob: -7.763806343078613
    9. 'd' → logprob: -8.263806343078613
    10. 'w' → logprob: -8.388806343078613

Token 373: ',E' (ID: 101576)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.395585834980011
    2. '=' → logprob: -2.145585775375366
    3. ' =' → logprob: -2.395585775375366
    4. ',' → logprob: -2.895585775375366
    5. '+' → logprob: -3.145585775375366
    6. ')' → logprob: -5.520586013793945
    7. ' ,' → logprob: -5.770586013793945
    8. '[' → logprob: -5.895586013793945
    9. ' >' → logprob: -6.020586013793945
    10. '>' → logprob: -6.145586013793945

Token 374: ',Q' (ID: 130136)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39245927333831787
    2. ' =' → logprob: -1.7674592733383179
    3. '=' → logprob: -1.8924592733383179
    4. ',E' → logprob: -6.642459392547607
    5. ' ,' → logprob: -6.767459392547607
    6. ',K' → logprob: -8.26745891571045
    7. ',M' → logprob: -9.14245891571045
    8. ',N' → logprob: -9.51745891571045
    9. '=input' → logprob: -9.89245891571045
    10. ',P' → logprob: -10.26745891571045

Token 375: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2114243507385254
    2. ',' → logprob: -1.8364243507385254
    3. ' =' → logprob: -4.211424350738525
    4. ',M' → logprob: -4.711424350738525
    5. ',K' → logprob: -6.336424350738525
    6. ',E' → logprob: -6.461424350738525
    7. '=input' → logprob: -7.086424350738525
    8. '=int' → logprob: -7.086424350738525
    9. ',Q' → logprob: -7.711424350738525
    10. ',N' → logprob: -7.836424350738525

Token 376: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.01105878408998251
    2. ' map' → logprob: -4.511058807373047
    3. 'list' → logprob: -12.011058807373047
    4. 'int' → logprob: -12.511058807373047
    5. '0' → logprob: -14.636058807373047
    6. '	map' → logprob: -15.011058807373047
    7. '10' → logprob: -16.261058807373047
    8. '[' → logprob: -16.386058807373047
    9. ' ' → logprob: -16.511058807373047
    10. ',map' → logprob: -17.011058807373047

Token 377: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0383538082242012
    2. 'int' → logprob: -3.41335391998291
    3. 'map' → logprob: -6.03835391998291
    4. '[int' → logprob: -6.66335391998291
    5. 'list' → logprob: -7.78835391998291
    6. 'input' → logprob: -8.03835391998291
    7. '<int' → logprob: -9.28835391998291
    8. '```' → logprob: -9.78835391998291
    9. '(map' → logprob: -10.16335391998291
    10. '=int' → logprob: -10.53835391998291

Token 378: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.014342136681079865
    2. ',' → logprob: -5.014342308044434
    3. 'input' → logprob: -5.639342308044434
    4. '(input' → logprob: -6.264342308044434
    5. ',int' → logprob: -7.389342308044434
    6. '=input' → logprob: -7.514342308044434
    7. '(),' → logprob: -7.764342308044434
    8. '().' → logprob: -9.139342308044434
    9. '(' → logprob: -9.264342308044434
    10. '(sys' → logprob: -9.889342308044434

Token 379: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5213274309644476e-05
    2. '()' → logprob: -11.125015258789062
    3. '())' → logprob: -15.125015258789062
    4. '(' → logprob: -16.750015258789062
    5. ' ().' → logprob: -17.250015258789062
    6. '()
' → logprob: -18.625015258789062
    7. 'split' → logprob: -19.250015258789062
    8. ')' → logprob: -19.875015258789062
    9. '.split' → logprob: -20.250015258789062
    10. '.' → logprob: -20.875015258789062

Token 380: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.4736459888808895e-05
    2. 'strip' → logprob: -11.250014305114746
    3. 'rstrip' → logprob: -13.625014305114746
    4. ' split' → logprob: -15.125014305114746
    5. '(split' → logprob: -15.250014305114746
    6. 'spl' → logprob: -18.500015258789062
    7. '.split' → logprob: -19.375015258789062
    8. '().' → logprob: -19.375015258789062
    9. '```' → logprob: -19.500015258789062
    10. 'plit' → logprob: -19.625015258789062

Token 381: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028731001541018486
    2. '())' → logprob: -3.653731107711792
    3. '()' → logprob: -6.028730869293213
    4. '(' → logprob: -11.278731346130371
    5. '))' → logprob: -12.653731346130371
    6. ')`' → logprob: -14.403731346130371
    7. ')
' → logprob: -14.528731346130371
    8. ')")' → logprob: -15.028731346130371
    9. ' )' → logprob: -15.278731346130371
    10. '),' → logprob: -15.278731346130371

Token 382: 'edges' (ID: 39127)
  Prédit: 'edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.608416736125946
    2. 'max' → logprob: -1.4834167957305908
    3. 'mf' → logprob: -2.233416795730591
    4. 'graph' → logprob: -3.233416795730591
    5. 'g' → logprob: -4.233416557312012
    6. 'm' → logprob: -4.233416557312012
    7. 'M' → logprob: -4.858416557312012
    8. 'uf' → logprob: -4.858416557312012
    9. 'G' → logprob: -5.108416557312012
    10. 'f' → logprob: -5.733416557312012

Token 383: '=set' (ID: 166509)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3894910216331482
    2. '=[]' → logprob: -1.139491081237793
    3. ' =' → logprob: -6.014491081237793
    4. '=[' → logprob: -9.264491081237793
    5. '=[]
' → logprob: -10.639491081237793
    6. '=[],' → logprob: -10.889491081237793
    7. '={}' → logprob: -11.014491081237793
    8. '=list' → logprob: -11.764491081237793
    9. '=[]
' → logprob: -13.014491081237793
    10. '[]=' → logprob: -13.639491081237793

Token 384: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.694766489090398e-05
    2. '(' → logprob: -10.500066757202148
    3. '([]' → logprob: -10.750066757202148
    4. '([(' → logprob: -11.625066757202148
    5. '()
' → logprob: -13.250066757202148
    6. '((' → logprob: -13.500066757202148
    7. '[]' → logprob: -14.000066757202148
    8. '()=>' → logprob: -14.125066757202148
    9. '()]' → logprob: -14.375066757202148
    10. '(edges' → logprob: -14.625066757202148

Token 385: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5150511860847473
    2. '
' → logprob: -1.8900511264801025
    3. 'graph' → logprob: -1.8900511264801025
    4. 'edges' → logprob: -3.2650511264801025
    5. 'max' → logprob: -4.515051364898682
    6. 'nodes' → logprob: -4.765051364898682
    7. 'result' → logprob: -5.015051364898682
    8. ' for' → logprob: -5.015051364898682
    9. 'answer' → logprob: -6.140051364898682
    10. 'queries' → logprob: -6.140051364898682

Token 386: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0015024791937321424
    2. ' _' → logprob: -6.501502513885498
    3. '_i' → logprob: -16.501502990722656
    4. '_=' → logprob: -17.251502990722656
    5. '_range' → logprob: -17.626502990722656
    6. ' range' → logprob: -18.126502990722656
    7. ' ' → logprob: -18.251502990722656
    8. ' ' → logprob: -19.001502990722656
    9. ' in' → logprob: -19.001502990722656
    10. '_e' → logprob: -19.376502990722656

Token 387: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.11519487202167511
    2. ' in' → logprob: -2.240194797515869
    3. 'range' → logprob: -6.240194797515869
    4. '_' → logprob: -8.365195274353027
    5. ' range' → logprob: -9.740195274353027
    6. ' ' → logprob: -9.990195274353027
    7. '1' → logprob: -10.365195274353027
    8. '0' → logprob: -11.240195274353027
    9. ' _' → logprob: -11.490195274353027
    10. 'N' → logprob: -11.865195274353027

Token 388: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.615255839889869e-05
    2. ' range' → logprob: -9.250096321105957
    3. '(range' → logprob: -17.50009536743164
    4. '	range' → logprob: -17.87509536743164
    5. 'in' → logprob: -18.12509536743164
    6. 'E' → logprob: -18.50009536743164
    7. 'r' → logprob: -19.12509536743164
    8. 'input' → logprob: -19.37509536743164
    9. '```' → logprob: -19.50009536743164
    10. '0' → logprob: -19.50009536743164

Token 389: '(E' (ID: 20882)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.47465014457702637
    2. '(E' → logprob: -0.9746501445770264
    3. 'Q' → logprob: -7.9746503829956055
    4. '(' → logprob: -8.974650382995605
    5. 'E' → logprob: -9.349650382995605
    6. '(N' → logprob: -11.349650382995605
    7. '(int' → logprob: -12.974650382995605
    8. ' (' → logprob: -14.099650382995605
    9. '((' → logprob: -15.724650382995605
    10. '(I' → logprob: -16.59964942932129

Token 390: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.333920955657959
    2. ',' → logprob: -1.583920955657959
    3. '):
' → logprob: -2.708920955657959
    4. ')' → logprob: -5.708920955657959
    5. '():' → logprob: -5.958920955657959
    6. '()' → logprob: -6.208920955657959
    7. '():
' → logprob: -6.833920955657959
    8. ',input' → logprob: -6.958920955657959
    9. '()):
' → logprob: -7.958920955657959
    10. ' ):' → logprob: -7.958920955657959

Token 391: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6243624091148376
    2. '   ' → logprob: -0.9993624091148376
    3. ' a' → logprob: -2.3743624687194824
    4. '```' → logprob: -6.874362468719482
    5. '	a' → logprob: -6.999362468719482
    6. 'A' → logprob: -7.749362468719482
    7. 'u' → logprob: -7.874362468719482
    8. 'b' → logprob: -9.499361991882324
    9. ' u' → logprob: -9.749361991882324
    10. ' A' → logprob: -9.874361991882324

Token 392: ' f' (ID: 285)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6336583495140076
    2. 'u' → logprob: -0.7586583495140076
    3. ' u' → logprob: -8.008658409118652
    4. ' a' → logprob: -8.383658409118652
    5. 'x' → logprob: -8.383658409118652
    6. 'A' → logprob: -9.258658409118652
    7. 's' → logprob: -9.883658409118652
    8. 'U' → logprob: -10.008658409118652
    9. '   ' → logprob: -10.133658409118652
    10. '```' → logprob: -11.883658409118652

Token 393: ',t' (ID: 26927)
  Prédit: ',a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.5617637634277344
    2. 'rom' → logprob: -1.4367637634277344
    3. ',t' → logprob: -2.6867637634277344
    4. ',' → logprob: -3.1867637634277344
    5. ',u' → logprob: -3.3117637634277344
    6. ',s' → logprob: -4.061763763427734
    7. ',r' → logprob: -4.936763763427734
    8. ',v' → logprob: -5.186763763427734
    9. ',b' → logprob: -5.311763763427734
    10. 'a' → logprob: -5.561763763427734

Token 394: '_=' (ID: 115480)
  Prédit: ',r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',r' → logprob: -1.6236345767974854
    2. ',u' → logprob: -1.6236345767974854
    3. ',v' → logprob: -2.4986345767974854
    4. ',s' → logprob: -2.6236345767974854
    5. ',input' → logprob: -2.6236345767974854
    6. ',w' → logprob: -2.9986345767974854
    7. ',m' → logprob: -2.9986345767974854
    8. ',a' → logprob: -3.1236345767974854
    9. ',' → logprob: -3.3736345767974854
    10. ',i' → logprob: -3.4986345767974854

Token 395: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0009115827269852161
    2. ' map' → logprob: -7.000911712646484
    3. 'm' → logprob: -17.250911712646484
    4. '	map' → logprob: -17.625911712646484
    5. ',map' → logprob: -17.625911712646484
    6. ' ' → logprob: -19.000911712646484
    7. '   ' → logprob: -19.250911712646484
    8. '  ' → logprob: -19.875911712646484
    9. 'tuple' → logprob: -20.250911712646484
    10. 'input' → logprob: -20.875911712646484

Token 396: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.47442275285720825
    2. 'int' → logprob: -0.9744227528572083
    3. 'input' → logprob: -9.474422454833984
    4. 'list' → logprob: -9.599422454833984
    5. '[int' → logprob: -9.599422454833984
    6. '=int' → logprob: -10.224422454833984
    7. 'tuple' → logprob: -10.349422454833984
    8. '<int' → logprob: -10.974422454833984
    9. ',int' → logprob: -11.099422454833984
    10. '(input' → logprob: -11.349422454833984

Token 397: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.034650769084692
    2. '(input' → logprob: -3.7846508026123047
    3. ',' → logprob: -4.534650802612305
    4. '(),' → logprob: -7.909650802612305
    5. 'input' → logprob: -9.284650802612305
    6. ',int' → logprob: -9.784650802612305
    7. '=input' → logprob: -10.284650802612305
    8. ' input' → logprob: -11.409650802612305
    9. ',function' → logprob: -11.784650802612305
    10. '[input' → logprob: -12.159650802612305

Token 398: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0003424951864872128
    2. '()' → logprob: -8.12534236907959
    3. '())' → logprob: -10.00034236907959
    4. ')' → logprob: -14.62534236907959
    5. '();)' → logprob: -15.87534236907959
    6. '()
' → logprob: -16.250343322753906
    7. '(' → logprob: -16.750343322753906
    8. '().__' → logprob: -17.125343322753906
    9. '().'' → logprob: -17.375343322753906
    10. '());' → logprob: -17.500343322753906

Token 399: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.704273118884885e-07
    2. 'strip' → logprob: -14.375000953674316
    3. ' split' → logprob: -16.875
    4. '(split' → logprob: -17.75
    5. 'rstrip' → logprob: -17.875
    6. 'spl' → logprob: -18.25
    7. 'plit' → logprob: -19.375
    8. '_split' → logprob: -20.625
    9. '.split' → logprob: -21.0
    10. 'spread' → logprob: -21.875

Token 400: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.207937553524971
    2. '())' → logprob: -1.7079375982284546
    3. '()' → logprob: -5.207937717437744
    4. ')
' → logprob: -7.457937717437744
    5. '())
' → logprob: -7.832937717437744
    6. '(' → logprob: -10.457937240600586
    7. '()
' → logprob: -11.582937240600586
    8. '))' → logprob: -12.332937240600586
    9. ')`' → logprob: -12.457937240600586
    10. ' )' → logprob: -13.332937240600586

Token 401: '   ' (ID: 271)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.4409918189048767
    2. '   ' → logprob: -1.0659918785095215
    3. ' edges' → logprob: -4.4409918785095215
    4. 'if' → logprob: -8.440991401672363
    5. '(edges' → logprob: -9.940991401672363
    6. 'f' → logprob: -10.565991401672363
    7. '.edges' → logprob: -10.940991401672363
    8. ' ' → logprob: -10.940991401672363
    9. '```' → logprob: -11.065991401672363
    10. '
' → logprob: -11.190991401672363

Token 402: ' a' (ID: 261)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0411696620285511
    2. 'if' → logprob: -3.6661696434020996
    3. ' edges' → logprob: -4.6661696434021
    4. 'f' → logprob: -6.0411696434021
    5. '   ' → logprob: -6.0411696434021
    6. ' if' → logprob: -8.416170120239258
    7. 'e' → logprob: -8.541170120239258
    8. 'for' → logprob: -9.916170120239258
    9. ' f' → logprob: -10.291170120239258
    10. 'edge' → logprob: -11.041170120239258

Token 403: ',b' (ID: 17568)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.17081892490386963
    2. ',b' → logprob: -2.54581880569458
    3. '=' → logprob: -3.54581880569458
    4. 'd' → logprob: -3.92081880569458
    5. 'edges' → logprob: -4.17081880569458
    6. 'dds' → logprob: -5.29581880569458
    7. ',' → logprob: -5.79581880569458
    8. '=f' → logprob: -6.79581880569458
    9. 'dding' → logprob: -7.17081880569458
    10. '_edges' → logprob: -7.67081880569458

Token 404: '=f' (ID: 40464)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18632495403289795
    2. '=f' → logprob: -2.0613250732421875
    3. ' =' → logprob: -3.4363250732421875
    4. '=a' → logprob: -4.8113250732421875
    5. '=b' → logprob: -6.5613250732421875
    6. ',b' → logprob: -7.6863250732421875
    7. ',f' → logprob: -8.311325073242188
    8. '=(' → logprob: -9.436325073242188
    9. ',a' → logprob: -9.561325073242188
    10. '=min' → logprob: -9.936325073242188

Token 405: '-' (ID: 12)
  Prédit: ',b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.003016453003510833
    2. ',' → logprob: -6.878016471862793
    3. '=' → logprob: -7.128016471862793
    4. ',t' → logprob: -7.253016471862793
    5. ' =' → logprob: -8.628016471862793
    6. '=b' → logprob: -9.378016471862793
    7. 'b' → logprob: -9.878016471862793
    8. ',f' → logprob: -9.878016471862793
    9. '=min' → logprob: -10.503016471862793
    10. ' ,' → logprob: -10.753016471862793

Token 406: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029959288076497614
    2. ' ' → logprob: -8.125299453735352
    3. ',' → logprob: -12.625299453735352
    4. ' ,' → logprob: -16.00029945373535
    5. '   ' → logprob: -18.25029945373535
    6. '```' → logprob: -18.62529945373535
    7. '
' → logprob: -18.75029945373535
    8. '\t' → logprob: -18.75029945373535
    9. '<|end|>' → logprob: -18.75029945373535
    10. 't' → logprob: -18.87529945373535

Token 407: ',t' (ID: 26927)
  Prédit: ',b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.0018861611606553197
    2. ',' → logprob: -6.376886367797852
    3. 'b' → logprob: -8.876886367797852
    4. ' ,' → logprob: -10.626886367797852
    5. ',t' → logprob: -11.001886367797852
    6. ' b' → logprob: -13.126886367797852
    7. ',c' → logprob: -14.751886367797852
    8. ',f' → logprob: -15.501886367797852
    9. ',d' → logprob: -15.626886367797852
    10. '=' → logprob: -15.751886367797852

Token 408: '_-' (ID: 78132)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5769326090812683
    2. '_-' → logprob: -0.8269326090812683
    3. '-' → logprob: -6.951932430267334
    4. '-_' → logprob: -10.951932907104492
    5. '_=' → logprob: -11.451932907104492
    6. 't' → logprob: -12.701932907104492
    7. '_^' → logprob: -14.451932907104492
    8. '_
' → logprob: -14.576932907104492
    9. '_->' → logprob: -14.701932907104492
    10. ' -' → logprob: -14.826932907104492

Token 409: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.375004768371582
    3. '2' → logprob: -16.500003814697266
    4. '-' → logprob: -16.750003814697266
    5. '<|end|>' → logprob: -16.750003814697266
    6. '11' → logprob: -17.062503814697266
    7. '```' → logprob: -17.250003814697266
    8. '۱' → logprob: -18.937503814697266
    9. '<|end|>' → logprob: -19.125003814697266
    10. ' -' → logprob: -19.312503814697266

Token 410: '
' (ID: 198)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.14076168835163116
    2. '   ' → logprob: -2.390761613845825
    3. ' edges' → logprob: -4.265761852264404
    4. ')' → logprob: -4.515761852264404
    5. '
' → logprob: -5.140761852264404
    6. '(edges' → logprob: -5.765761852264404
    7. '<|end|>' → logprob: -6.140761852264404
    8. 'if' → logprob: -6.640761852264404
    9. '.edges' → logprob: -6.890761852264404
    10. ',' → logprob: -7.640761852264404

Token 411: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16865341365337372
    2. 'edges' → logprob: -2.0436534881591797
    3. ' edges' → logprob: -3.6686534881591797
    4. 'if' → logprob: -9.41865348815918
    5. ' if' → logprob: -10.91865348815918
    6. '(edges' → logprob: -11.16865348815918
    7. '.edges' → logprob: -12.41865348815918
    8. '
' → logprob: -12.91865348815918
    9. ')' → logprob: -13.16865348815918
    10. '_edges' → logprob: -13.16865348815918

Token 412: ' if' (ID: 538)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.04441869258880615
    2. 'if' (adapté à ' if') → logprob: -3.1694188117980957
    3. '   ' → logprob: -6.669418811798096
    4. 'edge' → logprob: -9.794418334960938
    5. ' edges' → logprob: -10.044418334960938
    6. 'e' → logprob: -10.919418334960938
    7. 'c' → logprob: -12.294418334960938
    8. 'for' → logprob: -12.294418334960938
    9. 'a' → logprob: -12.794418334960938
    10. 'assert' → logprob: -13.419418334960938

Token 413: ' a' (ID: 261)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.027681933715939522
    2. 'a' → logprob: -3.902681827545166
    3. '(f' → logprob: -5.027681827545166
    4. ' (' → logprob: -7.652681827545166
    5. ' a' → logprob: -9.652682304382324
    6. '(b' → logprob: -11.902682304382324
    7. '(t' → logprob: -12.527682304382324
    8. 'f' → logprob: -12.902682304382324
    9. '(' → logprob: -13.027682304382324
    10. '(not' → logprob: -13.277682304382324

Token 414: '>b' (ID: 150455)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7506107687950134
    2. '!=' → logprob: -1.3756108283996582
    3. ' !=' → logprob: -1.6256108283996582
    4. ' <' → logprob: -3.500610828399658
    5. '>' → logprob: -4.625610828399658
    6. ',' → logprob: -4.750610828399658
    7. ' >' → logprob: -5.375610828399658
    8. '==' → logprob: -5.500610828399658
    9. '<' → logprob: -5.750610828399658
    10. '<=' → logprob: -5.750610828399658

Token 415: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020995385944843292
    2. ':
' → logprob: -3.8959953784942627
    3. 'continue' → logprob: -8.770995140075684
    4. ' continue' → logprob: -9.395995140075684
    5. '   ' → logprob: -10.020995140075684
    6. '==' → logprob: -10.520995140075684
    7. ' and' → logprob: -10.645995140075684
    8. '       ' → logprob: -10.895995140075684
    9. ':return' → logprob: -11.020995140075684
    10. '):' → logprob: -11.145995140075684

Token 416: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3649359941482544
    2. '       ' → logprob: -1.7399359941482544
    3. '   ' → logprob: -2.239935874938965
    4. 'continue' → logprob: -4.114935874938965
    5. ' a' → logprob: -5.489935874938965
    6. 'edges' → logprob: -6.364935874938965
    7. ' continue' → logprob: -6.864935874938965
    8. ' edges' → logprob: -8.114935874938965
    9. '	continue' → logprob: -9.614935874938965
    10. '	a' → logprob: -9.864935874938965

Token 417: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.012135676108300686
    2. ' a' → logprob: -4.7621355056762695
    3. 'continue' → logprob: -6.0121355056762695
    4. '   ' → logprob: -7.1371355056762695
    5. ' continue' → logprob: -8.26213550567627
    6. '(a' → logprob: -12.01213550567627
    7. '       ' → logprob: -12.76213550567627
    8. '	a' → logprob: -13.63713550567627
    9. 'edges' → logprob: -13.88713550567627
    10. ' edges' → logprob: -14.38713550567627

Token 418: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.16332004964351654
    2. ',' → logprob: -1.9133200645446777
    3. ',a' → logprob: -5.788320064544678
    4. 'b' → logprob: -11.28831958770752
    5. '>b' → logprob: -12.53831958770752
    6. 'a' → logprob: -12.78831958770752
    7. ',
' → logprob: -13.03831958770752
    8. '>,' → logprob: -13.91331958770752
    9. ',c' → logprob: -13.91331958770752
    10. ' ,' → logprob: -13.91331958770752

Token 419: '=b' (ID: 49769)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1194145604968071
    2. '=a' → logprob: -2.8694145679473877
    3. ',a' → logprob: -3.7444145679473877
    4. ',' → logprob: -3.8694145679473877
    5. ',b' → logprob: -5.119414329528809
    6. '=b' → logprob: -5.494414329528809
    7. ' =' → logprob: -7.244414329528809
    8. 'a' → logprob: -7.744414329528809
    9. 'b' → logprob: -10.619414329528809
    10. '>a' → logprob: -11.119414329528809

Token 420: ',a' (ID: 26776)
  Prédit: ',a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.18253521621227264
    2. ',' → logprob: -2.307535171508789
    3. ',b' → logprob: -2.807535171508789
    4. '```' → logprob: -5.932535171508789
    5. 'else' → logprob: -6.182535171508789
    6. '
' → logprob: -7.682535171508789
    7. ',f' → logprob: -7.682535171508789
    8. 'a' → logprob: -7.932535171508789
    9. '<|end|>' → logprob: -8.057535171508789
    10. ' else' → logprob: -8.932535171508789

Token 421: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014354701852425933
    2. 'edges' → logprob: -6.876435279846191
    3. ' edges' → logprob: -7.876435279846191
    4. '
' → logprob: -10.876435279846191
    5. '(edges' → logprob: -13.376435279846191
    6. '```' → logprob: -13.876435279846191
    7. '    
' → logprob: -14.126435279846191
    8. '.edges' → logprob: -15.001435279846191
    9. '<|end|>' → logprob: -15.751435279846191
    10. ',' → logprob: -16.501436233520508

Token 422: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05683504790067673
    2. 'edges' → logprob: -3.0568349361419678
    3. ' edges' → logprob: -4.806835174560547
    4. '
' → logprob: -10.806835174560547
    5. '```' → logprob: -11.556835174560547
    6. '(edges' → logprob: -12.181835174560547
    7. '    
' → logprob: -14.056835174560547
    8. '.edges' → logprob: -14.306835174560547
    9. '       ' → logprob: -14.681835174560547
    10. 'for' → logprob: -14.681835174560547

Token 423: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.052192412316799164
    2. ' edges' → logprob: -3.052192449569702
    3. '   ' → logprob: -6.052192211151123
    4. 'if' → logprob: -6.802192211151123
    5. ' if' → logprob: -9.177192687988281
    6. '
' → logprob: -11.427192687988281
    7. '```' → logprob: -12.052192687988281
    8. '(edges' → logprob: -12.302192687988281
    9. 'e' → logprob: -12.802192687988281
    10. '.edges' → logprob: -12.927192687988281

Token 424: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -1.4498052223643754e-05
    2. '.' → logprob: -11.375014305114746
    3. '.append' → logprob: -13.750014305114746
    4. '.setdefault' → logprob: -14.125014305114746
    5. '.update' → logprob: -14.125014305114746
    6. ' .' → logprob: -15.875014305114746
    7. ').' → logprob: -16.125015258789062
    8. '.dis' → logprob: -17.250015258789062
    9. '.insert' → logprob: -17.375015258789062
    10. '>.' → logprob: -17.625015258789062

Token 425: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00023107275774236768
    2. '(' → logprob: -8.50023078918457
    3. '(a' → logprob: -10.50023078918457
    4. '(
' → logprob: -17.62523078918457
    5. '([' → logprob: -17.87523078918457
    6. '(tuple' → logprob: -18.37523078918457
    7. ' ((' → logprob: -18.62523078918457
    8. ' (' → logprob: -18.62523078918457
    9. '(ab' → logprob: -19.37523078918457
    10. '(f' → logprob: -19.50023078918457

Token 426: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.5048530030981055e-06
    2. ' a' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.375001907348633
    4. ')a' → logprob: -21.250001907348633
    5. '	a' → logprob: -21.500001907348633
    6. '(a' → logprob: -21.750001907348633
    7. ' ' → logprob: -22.000001907348633
    8. '```' → logprob: -23.125001907348633
    9. ',a' → logprob: -23.250001907348633
    10. '  ' → logprob: -23.375001907348633

Token 427: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.10041013360023499
    2. ',' → logprob: -2.350410223007202
    3. ' ,' → logprob: -8.600410461425781
    4. ',
' → logprob: -10.975410461425781
    5. 'b' → logprob: -13.600410461425781
    6. ',a' → logprob: -14.475410461425781
    7. ' b' → logprob: -16.85041046142578
    8. ' ,
' → logprob: -17.10041046142578
    9. ',f' → logprob: -17.10041046142578
    10. ',B' → logprob: -17.35041046142578

Token 428: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008643174543976784
    2. ')' → logprob: -4.75864315032959
    3. ',' → logprob: -11.75864315032959
    4. '))
' → logprob: -11.75864315032959
    5. ' ))' → logprob: -11.88364315032959
    6. ')))' → logprob: -13.13364315032959
    7. '),' → logprob: -13.75864315032959
    8. '   ' → logprob: -14.13364315032959
    9. ')}' → logprob: -14.63364315032959
    10. ')
' → logprob: -15.00864315032959

Token 429: 'queries' (ID: 63909)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3916735649108887
    2. 'queries' → logprob: -1.3916735649108887
    3. 'edges' → logprob: -2.2666735649108887
    4. 'res' → logprob: -2.3916735649108887
    5. 'ans' → logprob: -2.8916735649108887
    6. 'answer' → logprob: -3.1416735649108887
    7. 'answers' → logprob: -3.2666735649108887
    8. 'graph' → logprob: -3.5166735649108887
    9. 'query' → logprob: -3.7666735649108887
    10. 'result' → logprob: -4.141673564910889

Token 430: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2130747139453888
    2. '=[]' → logprob: -1.7130746841430664
    3. ' =' → logprob: -4.463074684143066
    4. '=list' → logprob: -10.463074684143066
    5. '=[' → logprob: -11.588074684143066
    6. '=[]
' → logprob: -11.713074684143066
    7. '={}' → logprob: -11.963074684143066
    8. '=int' → logprob: -12.338074684143066
    9. '=input' → logprob: -13.213074684143066
    10. '=[]
' → logprob: -13.338074684143066

Token 431: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3306015716807451e-05
    2. ' for' → logprob: -11.25001335144043
    3. '
' → logprob: -16.62501335144043
    4. '```' → logprob: -16.75001335144043
    5. '	for' → logprob: -17.50001335144043
    6. '[' → logprob: -17.87501335144043
    7. '[
' → logprob: -19.75001335144043
    8. '[]' → logprob: -20.25001335144043
    9. 'import' → logprob: -20.25001335144043
    10. 'from' → logprob: -21.12501335144043

Token 432: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00010199354437645525
    2. ' _' → logprob: -9.250102043151855
    3. '_range' → logprob: -12.750102043151855
    4. '_i' → logprob: -13.500102043151855
    5. ' in' → logprob: -14.125102043151855
    6. '_q' → logprob: -15.250102043151855
    7. '_=' → logprob: -15.250102043151855
    8. ' range' → logprob: -15.750102043151855
    9. '_query' → logprob: -16.50010108947754
    10. '_in' → logprob: -17.00010108947754

Token 433: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.060972344130277634
    2. ' in' → logprob: -2.9359724521636963
    3. 'range' → logprob: -5.185972213745117
    4. ' range' → logprob: -8.185972213745117
    5. '_' → logprob: -8.685972213745117
    6. ' ' → logprob: -11.310972213745117
    7. ' _' → logprob: -11.435972213745117
    8. 'q' → logprob: -13.935972213745117
    9. '  ' → logprob: -14.060972213745117
    10. '1' → logprob: -14.185972213745117

Token 434: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001452140393666923
    2. ' range' → logprob: -6.6264519691467285
    3. 'input' → logprob: -9.001452445983887
    4. 'queries' → logprob: -13.751452445983887
    5. 'in' → logprob: -14.001452445983887
    6. 'query' → logprob: -14.751452445983887
    7. 'Q' → logprob: -15.001452445983887
    8. ' input' → logprob: -16.75145149230957
    9. 'int' → logprob: -16.87645149230957
    10. '	range' → logprob: -17.25145149230957

Token 435: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.038045622408390045
    2. 'Q' → logprob: -3.288045644760132
    3. ' Q' → logprob: -13.038045883178711
    4. '(' → logprob: -13.288045883178711
    5. '(int' → logprob: -15.413045883178711
    6. '	Q' → logprob: -16.78804588317871
    7. ' (' → logprob: -17.03804588317871
    8. ',Q' → logprob: -17.28804588317871
    9. '(
' → logprob: -18.53804588317871
    10. 'int' → logprob: -18.78804588317871

Token 436: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5286182761192322
    2. '):' → logprob: -0.9036182761192322
    3. ',' → logprob: -5.278618335723877
    4. '():
' → logprob: -9.028617858886719
    5. '):
' → logprob: -9.278617858886719
    6. ')' → logprob: -10.028617858886719
    7. ':' → logprob: -10.278617858886719
    8. '():' → logprob: -11.028617858886719
    9. ',input' → logprob: -11.153617858886719
    10. '   ' → logprob: -11.278617858886719

Token 437: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1739136278629303
    2. 'x' → logprob: -2.9239137172698975
    3. 'q' → logprob: -3.0489137172698975
    4. 'queries' → logprob: -3.7989137172698975
    5. 'f' → logprob: -5.173913478851318
    6. 'l' → logprob: -5.298913478851318
    7. 'u' → logprob: -5.548913478851318
    8. 'query' → logprob: -5.673913478851318
    9. 'a' → logprob: -5.673913478851318
    10. 'b' → logprob: -5.798913478851318

Token 438: ' M' (ID: 391)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6912235021591187
    2. 'queries' → logprob: -1.9412235021591187
    3. 'a' → logprob: -2.316223621368408
    4. 'l' → logprob: -2.566223621368408
    5. 'u' → logprob: -2.691223621368408
    6. 'q' → logprob: -3.191223621368408
    7. 'f' → logprob: -3.816223621368408
    8. 's' → logprob: -4.191223621368408
    9. '   ' → logprob: -5.066223621368408
    10. 'v' → logprob: -5.441223621368408

Token 439: ',A' (ID: 59196)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08504128456115723
    2. '=int' → logprob: -3.0850412845611572
    3. ' =' → logprob: -3.4600412845611572
    4. '=input' → logprob: -6.210041046142578
    5. '=query' → logprob: -7.585041046142578
    6. ',M' → logprob: -7.960041046142578
    7. ',' → logprob: -8.085041046142578
    8. ',q' → logprob: -8.210041046142578
    9. ',Q' → logprob: -8.835041046142578
    10. ',K' → logprob: -9.335041046142578

Token 440: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.03587900847196579
    2. ',b' → logprob: -4.660879135131836
    3. ',K' → logprob: -5.160879135131836
    4. ',D' → logprob: -5.785879135131836
    5. ',S' → logprob: -5.910879135131836
    6. ',C' → logprob: -6.410879135131836
    7. ',R' → logprob: -6.535879135131836
    8. ',L' → logprob: -6.535879135131836
    9. ',T' → logprob: -6.785879135131836
    10. ',P' → logprob: -6.785879135131836

Token 441: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003963569179177284
    2. ' =' → logprob: -8.750396728515625
    3. ',C' → logprob: -9.625396728515625
    4. ',x' → logprob: -10.500396728515625
    5. ',M' → logprob: -10.625396728515625
    6. ',R' → logprob: -10.875396728515625
    7. ',K' → logprob: -11.250396728515625
    8. ',c' → logprob: -11.500396728515625
    9. ',f' → logprob: -11.625396728515625
    10. '=list' → logprob: -11.750396728515625

Token 442: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -6.988221684878226e-06
    2. ' map' → logprob: -11.875006675720215
    3. 'tuple' → logprob: -17.87500762939453
    4. '	map' → logprob: -18.00000762939453
    5. '(map' → logprob: -18.12500762939453
    6. 'input' → logprob: -18.50000762939453
    7. 'list' → logprob: -19.25000762939453
    8. '
' → logprob: -20.25000762939453
    9. '.map' → logprob: -20.50000762939453
    10. '_map' → logprob: -21.50000762939453

Token 443: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0032058770302683115
    2. '(int' → logprob: -5.7532057762146
    3. '=int' → logprob: -11.378206253051758
    4. '[int' → logprob: -11.503206253051758
    5. ' int' → logprob: -12.378206253051758
    6. ',int' → logprob: -13.628206253051758
    7. '<int' → logprob: -14.503206253051758
    8. '```' → logprob: -15.378206253051758
    9. ':int' → logprob: -15.878206253051758
    10. 'tuple' → logprob: -16.003206253051758

Token 444: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.04406822472810745
    2. ',int' → logprob: -3.1690683364868164
    3. ',' → logprob: -7.044068336486816
    4. 'int' → logprob: -9.419068336486816
    5. '(input' → logprob: -10.169068336486816
    6. '(int' → logprob: -10.169068336486816
    7. 'input' → logprob: -10.794068336486816
    8. '=input' → logprob: -12.294068336486816
    9. ' ,' → logprob: -12.669068336486816
    10. ',list' → logprob: -13.294068336486816

Token 445: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.054500666621607e-06
    2. '()' → logprob: -12.87500286102295
    3. '.' → logprob: -15.87500286102295
    4. ' ().' → logprob: -16.125003814697266
    5. '().__' → logprob: -16.250003814697266
    6. '(' → logprob: -17.000003814697266
    7. '.readline' → logprob: -17.875003814697266
    8. '())' → logprob: -18.125003814697266
    9. '().'' → logprob: -18.375003814697266
    10. '()
' → logprob: -18.625003814697266

Token 446: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.2729995988775045e-06
    2. '().' → logprob: -12.875006675720215
    3. '(split' → logprob: -13.000006675720215
    4. 'spl' → logprob: -14.125006675720215
    5. '())' → logprob: -15.500006675720215
    6. '.split' → logprob: -15.625006675720215
    7. ' split' → logprob: -16.2500057220459
    8. '()' → logprob: -17.1250057220459
    9. 'skip' → logprob: -17.2500057220459
    10. '```' → logprob: -17.6250057220459

Token 447: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1610656976699829
    2. ')
' → logprob: -1.911065697669983
    3. '()' → logprob: -7.411065578460693
    4. '())
' → logprob: -9.161066055297852
    5. '())' → logprob: -9.161066055297852
    6. '()
' → logprob: -11.911066055297852
    7. ')
' → logprob: -12.036066055297852
    8. ',' → logprob: -12.911066055297852
    9. '(' → logprob: -13.161066055297852
    10. ')

' → logprob: -13.536066055297852

Token 448: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2850821614265442
    2. '<|end|>' → logprob: -2.0350821018218994
    3. 'queries' → logprob: -2.4100821018218994
    4. '
' → logprob: -3.9100821018218994
    5. ')' → logprob: -5.9100823402404785
    6. ' queries' → logprob: -6.5350823402404785
    7. '<|end|>' → logprob: -7.2850823402404785
    8. ',' → logprob: -7.2850823402404785
    9. '_queries' → logprob: -7.5350823402404785
    10. '#' → logprob: -8.03508186340332

Token 449: ' a' (ID: 261)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.0018103641923516989
    2. ' queries' → logprob: -6.751810550689697
    3. '   ' → logprob: -7.376810550689697
    4. 'questions' → logprob: -12.751810073852539
    5. 'Q' → logprob: -12.876810073852539
    6. 'query' → logprob: -13.001810073852539
    7. '
' → logprob: -13.501810073852539
    8. 'if' → logprob: -14.251810073852539
    9. 'q' → logprob: -14.501810073852539
    10. '    
' → logprob: -14.501810073852539

Token 450: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.00034416402922943234
    2. ',' → logprob: -8.250344276428223
    3. ' ,' → logprob: -10.500344276428223
    4. ',B' → logprob: -10.625344276428223
    5. 'b' → logprob: -11.375344276428223
    6. '=' → logprob: -11.500344276428223
    7. ',a' → logprob: -12.375344276428223
    8. '=b' → logprob: -13.125344276428223
    9. ',A' → logprob: -14.000344276428223
    10. ',c' → logprob: -14.500344276428223

Token 451: '=A' (ID: 112591)
  Prédit: '=A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=A' → logprob: -0.007834807969629765
    2. '=' → logprob: -5.0078349113464355
    3. '=B' → logprob: -7.2578349113464355
    4. '=a' → logprob: -8.007834434509277
    5. '=b' → logprob: -10.382834434509277
    6. '=M' → logprob: -10.757834434509277
    7. ',A' → logprob: -11.757834434509277
    8. 'A' → logprob: -11.757834434509277
    9. ' =' → logprob: -12.132834434509277
    10. '=(' → logprob: -13.132834434509277

Token 452: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.030597023665905
    2. ',b' → logprob: -3.530596971511841
    3. '-,' → logprob: -7.78059720993042
    4. '-=' → logprob: -8.280596733093262
    5. ',' → logprob: -9.155596733093262
    6. '-b' → logprob: -10.280596733093262
    7. '=' → logprob: -10.905596733093262
    8. ' -' → logprob: -12.155596733093262
    9. 'b' → logprob: -12.155596733093262
    10. ',B' → logprob: -12.905596733093262

Token 453: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. ',' → logprob: -17.375
    4. '```' → logprob: -17.875
    5. '１' → logprob: -19.625
    6. '
' → logprob: -20.25
    7. '<|end|>' → logprob: -20.25
    8. '   ' → logprob: -21.125
    9. '2' → logprob: -21.1875
    10. '۱' → logprob: -21.5625

Token 454: ',B' (ID: 19853)
  Prédit: ',b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.006762498524039984
    2. ',' → logprob: -5.006762504577637
    3. ',B' → logprob: -10.006762504577637
    4. 'b' → logprob: -14.131762504577637
    5. ' ,' → logprob: -14.756762504577637
    6. ',
' → logprob: -14.881762504577637
    7. ',c' → logprob: -15.756762504577637
    8. '   ' → logprob: -15.881762504577637
    9. '<|end|>' → logprob: -17.00676155090332
    10. ',d' → logprob: -17.88176155090332

Token 455: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.392202976712724e-06
    2. ' -' → logprob: -12.250006675720215
    3. '<|end|>' → logprob: -13.625006675720215
    4. '1' → logprob: -16.5000057220459
    5. '-
' → logprob: -17.0000057220459
    6. '+' → logprob: -17.0000057220459
    7. '<|end|>' → logprob: -17.3750057220459
    8. ' ' → logprob: -17.8750057220459
    9. '   ' → logprob: -17.8750057220459
    10. '```' → logprob: -17.8750057220459

Token 456: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '-' → logprob: -17.875
    4. '<|end|>' → logprob: -19.375
    5. '```' → logprob: -20.0
    6. '<|end|>' → logprob: -20.75
    7. '2' → logprob: -20.875
    8. '１' → logprob: -21.0
    9. '۱' → logprob: -21.5625
    10. '   ' → logprob: -21.6875

Token 457: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.802049756515771e-05
    2. '<|end|>' → logprob: -10.250067710876465
    3. 'queries' → logprob: -11.625067710876465
    4. ',' → logprob: -11.875067710876465
    5. ' queries' → logprob: -12.000067710876465
    6. '
' → logprob: -12.000067710876465
    7. '<|end|>' → logprob: -13.125067710876465
    8. ')' → logprob: -14.000067710876465
    9. '	' → logprob: -14.375067710876465
    10. '_queries' → logprob: -15.500067710876465

Token 458: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.1093578804284334e-05
    2. 'queries' → logprob: -10.500051498413086
    3. '<|end|>' → logprob: -10.875051498413086
    4. ' queries' → logprob: -13.375051498413086
    5. '<|end|>' → logprob: -13.625051498413086
    6. '
' → logprob: -14.750051498413086
    7. '	' → logprob: -15.125051498413086
    8. '_queries' → logprob: -15.250051498413086
    9. ',' → logprob: -15.500051498413086
    10. 'tokens' → logprob: -15.500051498413086

Token 459: ' if' (ID: 538)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.008233346045017242
    2. '   ' → logprob: -4.883233547210693
    3. ' queries' → logprob: -7.383233547210693
    4. 'if' (adapté à ' if') → logprob: -12.758233070373535
    5. '
' → logprob: -14.133233070373535
    6. 'query' → logprob: -14.758233070373535
    7. '```' → logprob: -15.383233070373535
    8. 'for' → logprob: -15.508233070373535
    9. '       ' → logprob: -15.633233070373535
    10. 'questions' → logprob: -15.758233070373535

Token 460: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03804171830415726
    2. ' a' → logprob: -3.288041830062866
    3. '   ' → logprob: -15.538042068481445
    4. '	a' → logprob: -16.288042068481445
    5. 'b' → logprob: -17.288042068481445
    6. '>a' → logprob: -17.788042068481445
    7. '(a' → logprob: -18.038042068481445
    8. ' ' → logprob: -18.163042068481445
    9. '_a' → logprob: -19.163042068481445
    10. '#a' → logprob: -19.538042068481445

Token 461: '>b' (ID: 150455)
  Prédit: '>b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>b' → logprob: -0.0013821403263136744
    2. ' >' → logprob: -7.126382350921631
    3. '>' → logprob: -7.501382350921631
    4. 'b' → logprob: -11.001381874084473
    5. '>a' → logprob: -12.501381874084473
    6. '<b' → logprob: -13.126381874084473
    7. '>B' → logprob: -14.251381874084473
    8. '>
' → logprob: -14.501381874084473
    9. ',b' → logprob: -15.001381874084473
    10. '```' → logprob: -15.251381874084473

Token 462: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2259083241224289
    2. ':
' → logprob: -1.6009082794189453
    3. '       ' → logprob: -8.475908279418945
    4. '   ' → logprob: -9.725908279418945
    5. '=a' → logprob: -9.725908279418945
    6. 'a' → logprob: -10.225908279418945
    7. ':a' → logprob: -10.475908279418945
    8. '=' → logprob: -10.600908279418945
    9. '):
' → logprob: -10.600908279418945
    10. ',' → logprob: -11.725908279418945

Token 463: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4051819145679474
    2. '   ' → logprob: -1.530181884765625
    3. ' a' → logprob: -2.780181884765625
    4. '       ' → logprob: -3.030181884765625
    5. 'b' → logprob: -5.155181884765625
    6. ' b' → logprob: -8.280181884765625
    7. '```' → logprob: -8.655181884765625
    8. '	a' → logprob: -9.280181884765625
    9. ' ' → logprob: -12.280181884765625
    10. '    ' → logprob: -12.405181884765625

Token 464: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0004931025905534625
    2. 'b' → logprob: -7.750493049621582
    3. ' a' → logprob: -9.750493049621582
    4. '   ' → logprob: -12.500493049621582
    5. '       ' → logprob: -15.375493049621582
    6. ' b' → logprob: -15.750493049621582
    7. '	a' → logprob: -15.750493049621582
    8. '(a' → logprob: -16.7504940032959
    9. '>a' → logprob: -18.3754940032959
    10. ')a' → logprob: -20.6254940032959

Token 465: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.018281398341059685
    2. ',' → logprob: -4.01828145980835
    3. 'b' → logprob: -9.018280982971191
    4. ',a' → logprob: -12.393280982971191
    5. ',
' → logprob: -13.143280982971191
    6. ' ,' → logprob: -13.643280982971191
    7. '=' → logprob: -14.018280982971191
    8. '=b' → logprob: -14.018280982971191
    9. '>b' → logprob: -14.143280982971191
    10. 'a' → logprob: -15.768280982971191

Token 466: '=b' (ID: 49769)
  Prédit: '=b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=b' → logprob: -0.018680572509765625
    2. '=' → logprob: -4.018680572509766
    3. ',b' → logprob: -7.643680572509766
    4. 'b' → logprob: -10.518680572509766
    5. '=a' → logprob: -11.268680572509766
    6. ',' → logprob: -12.018680572509766
    7. ' =' → logprob: -12.893680572509766
    8. '=
' → logprob: -13.018680572509766
    9. '>b' → logprob: -15.018680572509766
    10. '=s' → logprob: -15.768680572509766

Token 467: ',a' (ID: 26776)
  Prédit: ',a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.0014157117111608386
    2. 'a' → logprob: -6.876415729522705
    3. ',' → logprob: -7.876415729522705
    4. ',b' → logprob: -13.376415252685547
    5. ' a' → logprob: -14.126415252685547
    6. ' ,' → logprob: -15.001415252685547
    7. '```' → logprob: -15.001415252685547
    8. '<|end|>' → logprob: -16.376415252685547
    9. ',
' → logprob: -16.626415252685547
    10. '>a' → logprob: -17.001415252685547

Token 468: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05569341406226158
    2. '
' → logprob: -3.0556933879852295
    3. 'queries' → logprob: -5.180693626403809
    4. ',' → logprob: -7.555693626403809
    5. '<|end|>' → logprob: -8.180693626403809
    6. ' queries' → logprob: -8.180693626403809
    7. '    
' → logprob: -8.430693626403809
    8. 'edges' → logprob: -10.930693626403809
    9. ',
' → logprob: -11.055693626403809
    10. '       ' → logprob: -11.180693626403809

Token 469: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0042353430762887
    2. 'queries' → logprob: -6.12923526763916
    3. '
' → logprob: -6.50423526763916
    4. '<|end|>' → logprob: -8.00423526763916
    5. ' queries' → logprob: -9.62923526763916
    6. '```' → logprob: -9.75423526763916
    7. ',' → logprob: -10.25423526763916
    8. '    
' → logprob: -10.62923526763916
    9. '<|end|>' → logprob: -12.00423526763916
    10. '       ' → logprob: -12.12923526763916

Token 470: ' queries' (ID: 32122)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' (adapté à ' queries') → logprob: -0.011268862523138523
    2. '   ' → logprob: -4.5112690925598145
    3. ' queries' → logprob: -8.511268615722656
    4. '
' → logprob: -11.011268615722656
    5. '       ' → logprob: -14.136268615722656
    6. '    
' → logprob: -14.261268615722656
    7. '```' → logprob: -14.636268615722656
    8. 'questions' → logprob: -14.761268615722656
    9. 'query' → logprob: -15.261268615722656
    10. '``' → logprob: -16.011268615722656

Token 471: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00041732576210051775
    2. '.' → logprob: -7.875417232513428
    3. '.app' → logprob: -11.125417709350586
    4. '.ap' → logprob: -11.500417709350586
    5. '.push' → logprob: -12.625417709350586
    6. ' .' → logprob: -13.250417709350586
    7. '.add' → logprob: -13.375417709350586
    8. '.py' → logprob: -13.750417709350586
    9. ').' → logprob: -14.000417709350586
    10. '.setdefault' → logprob: -14.125417709350586

Token 472: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -4.7159857786027715e-05
    2. '(M' → logprob: -10.250046730041504
    3. '(' → logprob: -11.375046730041504
    4. '([' → logprob: -15.250046730041504
    5. '(((' → logprob: -17.00004768371582
    6. ' ((' → logprob: -17.37504768371582
    7. '(([' → logprob: -18.00004768371582
    8. '(m' → logprob: -19.00004768371582
    9. '(("' → logprob: -19.25004768371582
    10. ' (' → logprob: -19.37504768371582

Token 473: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -7.135819760151207e-05
    2. ' M' → logprob: -9.62507152557373
    3. 'a' → logprob: -13.00007152557373
    4. 'Q' → logprob: -13.75007152557373
    5. '(M' → logprob: -13.75007152557373
    6. ')' → logprob: -14.75007152557373
    7. 'N' → logprob: -15.75007152557373
    8. '   ' → logprob: -16.375070571899414
    9. '0' → logprob: -16.500070571899414
    10. 'm' → logprob: -17.000070571899414

Token 474: ',a' (ID: 26776)
  Prédit: ',a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.25205814838409424
    2. ',' → logprob: -1.5020581483840942
    3. ' ,' → logprob: -9.002058029174805
    4. ',b' → logprob: -13.627058029174805
    5. ',
' → logprob: -13.627058029174805
    6. ',A' → logprob: -13.877058029174805
    7. 'a' → logprob: -14.752058029174805
    8. ',x' → logprob: -15.502058029174805
    9. ',input' → logprob: -15.502058029174805
    10. ',n' → logprob: -15.627058029174805

Token 475: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.0005595852271653712
    2. ',' → logprob: -7.5005598068237305
    3. ' ,' → logprob: -12.12555980682373
    4. 'b' → logprob: -13.75055980682373
    5. ' b' → logprob: -17.000558853149414
    6. ',
' → logprob: -18.125558853149414
    7. ',B' → logprob: -20.000558853149414
    8. ',a' → logprob: -20.375558853149414
    9. ',y' → logprob: -21.625558853149414
    10. ',n' → logprob: -21.875558853149414

Token 476: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.387035071849823
    2. ')' → logprob: -1.1370351314544678
    3. ',' → logprob: -8.887035369873047
    4. ',)' → logprob: -11.887035369873047
    5. '))
' → logprob: -12.137035369873047
    6. ')))' → logprob: -12.262035369873047
    7. ')
' → logprob: -12.637035369873047
    8. '),' → logprob: -13.137035369873047
    9. ' )' → logprob: -14.137035369873047
    10. ' ))' → logprob: -14.262035369873047

Token 477: 'for' (ID: 1938)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.0951788425445557
    2. 'answers' → logprob: -1.3451788425445557
    3. 'queries' → logprob: -1.4701788425445557
    4. 'res' → logprob: -2.5951788425445557
    5. 'ans' → logprob: -3.3451788425445557
    6. 'results' → logprob: -3.7201788425445557
    7. 'answer' → logprob: -4.970178604125977
    8. 'max' → logprob: -5.095178604125977
    9. 'result' → logprob: -5.470178604125977
    10. 'for' → logprob: -5.720178604125977

Token 478: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.02109414152801037
    2. 'M' → logprob: -4.27109432220459
    3. ' i' → logprob: -5.89609432220459
    4. ' m' → logprob: -6.52109432220459
    5. ' _' → logprob: -6.64609432220459
    6. ' q' → logprob: -7.39609432220459
    7. ' ' → logprob: -8.89609432220459
    8. 'q' → logprob: -9.02109432220459
    9. 'i' → logprob: -9.14609432220459
    10. 'm' → logprob: -9.14609432220459

Token 479: ',a' (ID: 26776)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08528268337249756
    2. ' in' → logprob: -2.835282802581787
    3. 'in' → logprob: -5.085282802581787
    4. ',in' → logprob: -5.585282802581787
    5. ',_' → logprob: -5.710282802581787
    6. ',q' → logprob: -5.960282802581787
    7. ',a' → logprob: -6.835282802581787
    8. ' ,' → logprob: -6.960282802581787
    9. ',b' → logprob: -7.210282802581787
    10. ',n' → logprob: -7.335282802581787

Token 480: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -3.810037742368877e-05
    2. 'b' → logprob: -10.375038146972656
    3. ',' → logprob: -12.000038146972656
    4. ' ,' → logprob: -14.375038146972656
    5. ',_' → logprob: -16.625038146972656
    6. ',B' → logprob: -17.625038146972656
    7. ',a' → logprob: -18.500038146972656
    8. '_,' → logprob: -18.750038146972656
    9. ',(' → logprob: -18.750038146972656
    10. ',c' → logprob: -19.000038146972656

Token 481: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1286429464817047
    2. 'in' → logprob: -2.128643035888672
    3. ',' → logprob: -6.378643035888672
    4. ',in' → logprob: -11.253643035888672
    5. ' ,' → logprob: -14.128643035888672
    6. '   ' → logprob: -14.128643035888672
    7. '	in' → logprob: -15.253643035888672
    8. ',_' → logprob: -15.878643035888672
    9. '_in' → logprob: -15.878643035888672
    10. ' ' → logprob: -16.003643035888672

Token 482: ' queries' (ID: 32122)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.004787295591086149
    2. 'sorted' → logprob: -5.379787445068359
    3. ' queries' → logprob: -8.75478744506836
    4. 'query' → logprob: -12.00478744506836
    5. 'range' → logprob: -13.87978744506836
    6. ' sorted' → logprob: -14.12978744506836
    7. 'requests' → logprob: -14.37978744506836
    8. 'questions' → logprob: -15.00478744506836
    9. 'quer' → logprob: -15.62978744506836
    10. '   ' → logprob: -16.87978744506836

Token 483: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1128312423825264
    2. ':
' → logprob: -2.2378313541412354
    3. ':

' → logprob: -12.987831115722656
    4. '   ' → logprob: -13.487831115722656
    5. ',' → logprob: -13.612831115722656
    6. ':
' → logprob: -13.737831115722656
    7. '):
' → logprob: -13.862831115722656
    8. ' :' → logprob: -14.362831115722656
    9. ' :
' → logprob: -14.987831115722656
    10. ':max' → logprob: -15.487831115722656

Token 484: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3971506655216217
    2. 'mf' → logprob: -1.1471506357192993
    3. ' mf' → logprob: -4.77215051651001
    4. 'flow' → logprob: -7.14715051651001
    5. 'max' → logprob: -7.64715051651001
    6. ' flow' → logprob: -8.272150993347168
    7. ' max' → logprob: -9.397150993347168
    8. 'm' → logprob: -9.522150993347168
    9. '```' → logprob: -10.147150993347168
    10. 'if' → logprob: -12.022150993347168

Token 485: ' if' (ID: 538)
  Prédit: 'mf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mf' → logprob: -0.0067864167504012585
    2. 'flow' → logprob: -5.756786346435547
    3. 'max' → logprob: -6.006786346435547
    4. '   ' → logprob: -7.131786346435547
    5. 'm' → logprob: -8.381786346435547
    6. ' mf' → logprob: -9.756786346435547
    7. 'f' → logprob: -11.631786346435547
    8. '```' → logprob: -11.631786346435547
    9. 'g' → logprob: -12.381786346435547
    10. 'graph' → logprob: -12.506786346435547

Token 486: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.24535633623600006
    2. '(M' → logprob: -1.7453563213348389
    3. '(a' → logprob: -4.245356559753418
    4. '(N' → logprob: -4.995356559753418
    5. '(E' → logprob: -5.120356559753418
    6. 'N' → logprob: -5.620356559753418
    7. 'a' → logprob: -5.995356559753418
    8. ' M' → logprob: -6.245356559753418
    9. '(' → logprob: -6.370356559753418
    10. 'E' → logprob: -6.745356559753418

Token 487: '==' (ID: 560)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4829973578453064
    2. '==' → logprob: -1.7329974174499512
    3. '<' → logprob: -2.357997417449951
    4. ' ==' → logprob: -2.732997417449951
    5. '<N' → logprob: -4.357997417449951
    6. ' <=' → logprob: -4.732997417449951
    7. '<=' → logprob: -4.857997417449951
    8. '>' → logprob: -5.357997417449951
    9. ' >=' → logprob: -5.607997417449951
    10. ' >' → logprob: -5.857997417449951

Token 488: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004379328340291977
    2. '1' → logprob: -5.5043792724609375
    3. '2' → logprob: -9.254379272460938
    4. ' ' → logprob: -9.629379272460938
    5. '-' → logprob: -9.879379272460938
    6. 'N' → logprob: -10.004379272460938
    7. 'E' → logprob: -11.129379272460938
    8. '100' → logprob: -12.254379272460938
    9. 'a' → logprob: -12.504379272460938
    10. '10' → logprob: -12.879379272460938

Token 489: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014167741872370243
    2. ':
' → logprob: -4.264167785644531
    3. '.' → logprob: -13.889167785644531
    4. ' and' → logprob: -14.139167785644531
    5. ' :' → logprob: -14.264167785644531
    6. '):' → logprob: -14.389167785644531
    7. ',' → logprob: -15.014167785644531
    8. ':

' → logprob: -15.139167785644531
    9. '):
' → logprob: -15.889167785644531
    10. ':
' → logprob: -16.13916778564453

Token 490: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006700330879539251
    2. 'print' → logprob: -6.00670051574707
    3. 'flow' → logprob: -6.75670051574707
    4. '   ' → logprob: -7.38170051574707
    5. 'mf' → logprob: -7.38170051574707
    6. '```' → logprob: -8.00670051574707
    7. 'max' → logprob: -8.13170051574707
    8. ' flow' → logprob: -8.25670051574707
    9. ' print' → logprob: -8.75670051574707
    10. '
' → logprob: -8.88170051574707

Token 491: ' edges' (ID: 22569)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04412126913666725
    2. 'if' → logprob: -3.919121265411377
    3. 'mf' → logprob: -3.919121265411377
    4. 'max' → logprob: -6.794121265411377
    5. 'g' → logprob: -7.544121265411377
    6. 'sys' → logprob: -7.794121265411377
    7. '   ' → logprob: -8.419121742248535
    8. 'edges' (adapté à ' edges') → logprob: -8.544121742248535
    9. 'graph' → logprob: -8.794121742248535
    10. 'flow' → logprob: -9.169121742248535

Token 492: '.add' (ID: 1950)
  Prédit: '.dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dis' → logprob: -0.230226069688797
    2. '.remove' → logprob: -1.7302260398864746
    3. '.add' → logprob: -3.7302260398864746
    4. '.' → logprob: -5.980226039886475
    5. 'discard' → logprob: -6.855226039886475
    6. '.clear' → logprob: -7.605226039886475
    7. '=' → logprob: -8.605226516723633
    8. ' =' → logprob: -9.605226516723633
    9. 'remove' → logprob: -10.480226516723633
    10. '-=' → logprob: -10.855226516723633

Token 493: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -7.941850526549388e-06
    2. '(' → logprob: -11.750007629394531
    3. ' ((' → logprob: -20.25000762939453
    4. '(((' → logprob: -20.37500762939453
    5. '(
' → logprob: -20.62500762939453
    6. '([' → logprob: -21.00000762939453
    7. '(({' → logprob: -21.00000762939453
    8. '[(' → logprob: -21.62500762939453
    9. '(a' → logprob: -21.87500762939453
    10. '({' → logprob: -21.87500762939453

Token 494: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023294975981116295
    2. '(a' → logprob: -3.7732949256896973
    3. ' a' → logprob: -10.148295402526855
    4. ' (' → logprob: -12.273295402526855
    5. '(' → logprob: -13.273295402526855
    6. ')a' → logprob: -13.273295402526855
    7. ',a' → logprob: -14.273295402526855
    8. '   ' → logprob: -14.898295402526855
    9. '	a' → logprob: -15.523295402526855
    10. ')' → logprob: -15.773295402526855

Token 495: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.029768766835331917
    2. ',' → logprob: -3.529768705368042
    3. ',
' → logprob: -11.404768943786621
    4. 'b' → logprob: -12.404768943786621
    5. ' ,' → logprob: -13.279768943786621
    6. ',a' → logprob: -14.779768943786621
    7. '       ' → logprob: -15.529768943786621
    8. '   ' → logprob: -15.779768943786621
    9. ',y' → logprob: -16.154767990112305
    10. ',

' → logprob: -16.404767990112305

Token 496: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4757292866706848
    2. ')' → logprob: -0.9757292866706848
    3. '))
' → logprob: -6.975729465484619
    4. ')
' → logprob: -7.350729465484619
    5. '       ' → logprob: -10.100728988647461
    6. '   ' → logprob: -10.725728988647461
    7. ')))' → logprob: -12.225728988647461
    8. ')}' → logprob: -13.350728988647461
    9. ' ))' → logprob: -13.725728988647461
    10. ' )' → logprob: -13.975728988647461

Token 497: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3527090847492218
    2. 'else' → logprob: -1.6027090549468994
    3. 'elif' → logprob: -2.3527090549468994
    4. ' else' → logprob: -7.4777092933654785
    5. ' elif' → logprob: -8.85270881652832
    6. '<|end|>' → logprob: -10.72770881652832
    7. '	elif' → logprob: -11.72770881652832
    8. '```' → logprob: -11.85270881652832
    9. ')' → logprob: -12.60270881652832
    10. '	else' → logprob: -13.10270881652832

Token 498: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.16059331595897675
    2. 'elif' → logprob: -1.9105932712554932
    3. ' else' → logprob: -8.785593032836914
    4. '   ' → logprob: -8.910593032836914
    5. 'if' → logprob: -10.160593032836914
    6. ' elif' → logprob: -10.285593032836914
    7. '```' → logprob: -12.285593032836914
    8. '       ' → logprob: -13.910593032836914
    9. 'print' → logprob: -14.410593032836914
    10. 'el' → logprob: -14.660593032836914

Token 499: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7358884811401367
    2. ':
' → logprob: -0.7358884811401367
    3. '       ' → logprob: -3.2358884811401367
    4. '   ' → logprob: -6.235888481140137
    5. 'if' → logprob: -8.360888481140137
    6. '):
' → logprob: -9.360888481140137
    7. ' if' → logprob: -9.610888481140137
    8. ',' → logprob: -10.735888481140137
    9. ':

' → logprob: -11.360888481140137
    10. '#' → logprob: -11.360888481140137

Token 500: '       ' (ID: 309)
  Prédit: 'mf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mf' → logprob: -0.7703766822814941
    2. '   ' → logprob: -1.6453766822814941
    3. '       ' → logprob: -2.020376682281494
    4. 'flow' → logprob: -2.770376682281494
    5. ' mf' → logprob: -2.895376682281494
    6. 'max' → logprob: -3.520376682281494
    7. ' flow' → logprob: -3.895376682281494
    8. '```' → logprob: -4.145376682281494
    9. ' max' → logprob: -5.020376682281494
    10. '           ' → logprob: -5.395376682281494

Token 501: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.059915874153375626
    2. 'mf' → logprob: -3.309915781021118
    3. 'if' → logprob: -4.559916019439697
    4. 'flow' → logprob: -5.434916019439697
    5. 'max' → logprob: -6.309916019439697
    6. ' edges' → logprob: -6.559916019439697
    7. '   ' → logprob: -6.684916019439697
    8. 'print' → logprob: -7.059916019439697
    9. 'pass' → logprob: -8.309915542602539
    10. '       ' → logprob: -8.684915542602539

Token 502: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.2067994475364685
    2. '.dis' → logprob: -2.0817995071411133
    3. '.' → logprob: -2.8317995071411133
    4. '=' → logprob: -7.331799507141113
    5. '.add' → logprob: -7.331799507141113
    6. '-=' → logprob: -7.331799507141113
    7. 'discard' → logprob: -7.581799507141113
    8. 'remove' → logprob: -7.706799507141113
    9. '.d' → logprob: -9.331799507141113
    10. ' .' → logprob: -9.956799507141113

Token 503: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: 0.0
    2. '(' → logprob: -16.875
    3. ' ((' → logprob: -18.875
    4. '(a' → logprob: -21.375
    5. '[(' → logprob: -22.125
    6. '(
' → logprob: -23.0
    7. ' ' → logprob: -23.25
    8. ' (' → logprob: -23.875
    9. ')((' → logprob: -24.0
    10. '(({' → logprob: -24.375

Token 504: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.029761601239442825
    2. '(a' → logprob: -3.529761552810669
    3. ' a' → logprob: -11.65476131439209
    4. ' (' → logprob: -13.40476131439209
    5. ')a' → logprob: -15.15476131439209
    6. '(' → logprob: -15.52976131439209
    7. '(
' → logprob: -15.65476131439209
    8. '   ' → logprob: -16.779762268066406
    9. ',a' → logprob: -16.779762268066406
    10. ''a' → logprob: -16.904762268066406

Token 505: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.015273544006049633
    2. ',' → logprob: -4.890273571014404
    3. 'b' → logprob: -5.640273571014404
    4. ',a' → logprob: -5.765273571014404
    5. 'a' → logprob: -7.015273571014404
    6. ' ,' → logprob: -10.890273094177246
    7. '(b' → logprob: -11.640273094177246
    8. '(a' → logprob: -11.640273094177246
    9. '   ' → logprob: -11.890273094177246
    10. ',
' → logprob: -12.140273094177246

Token 506: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8802491215174086e-05
    2. ')
' → logprob: -10.500028610229492
    3. '))' → logprob: -13.875028610229492
    4. ')}' → logprob: -15.875028610229492
    5. '   ' → logprob: -17.375028610229492
    6. '<|end|>' → logprob: -17.375028610229492
    7. ' )' → logprob: -17.500028610229492
    8. ')}}' → logprob: -17.625028610229492
    9. ')`' → logprob: -17.750028610229492
    10. '})' → logprob: -18.125028610229492

Token 507: '   ' (ID: 271)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.15337678790092468
    2. 'max' → logprob: -3.278376817703247
    3. '#' → logprob: -3.528376817703247
    4. 'if' → logprob: -4.278376579284668
    5. '```' → logprob: -4.278376579284668
    6. 'graph' → logprob: -4.653376579284668
    7. 'flow' → logprob: -4.653376579284668
    8. '   ' → logprob: -4.778376579284668
    9. 'print' → logprob: -5.028376579284668
    10. 'for' → logprob: -5.653376579284668

Token 508: ' mf' (ID: 45148)
  Prédit: 'mf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mf' (adapté à ' mf') → logprob: -0.4128669798374176
    2. 'g' → logprob: -1.4128669500350952
    3. 'max' → logprob: -3.1628670692443848
    4. 'flow' → logprob: -3.5378670692443848
    5. '   ' → logprob: -4.787867069244385
    6. 'm' → logprob: -5.037867069244385
    7. 'if' → logprob: -5.787867069244385
    8. 'G' → logprob: -7.037867069244385
    9. 'gf' → logprob: -7.037867069244385
    10. '#' → logprob: -7.162867069244385

Token 509: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002989351749420166
    2. ' =' → logprob: -5.877989292144775
    3. '=max' → logprob: -8.627989768981934
    4. '=
' → logprob: -13.002989768981934
    5. '=new' → logprob: -13.752989768981934
    6. '=tf' → logprob: -14.877989768981934
    7. '=m' → logprob: -15.377989768981934
    8. '=M' → logprob: -15.377989768981934
    9. '=ax' → logprob: -15.627989768981934
    10. '.' → logprob: -15.752989768981934

Token 510: 'Max' (ID: 6499)
  Prédit: 'Max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Max' → logprob: -3.7697225252486533e-06
    2. ' Max' → logprob: -12.500003814697266
    3. '	Max' → logprob: -19.750003814697266
    4. '_Max' → logprob: -20.000003814697266
    5. '(Max' → logprob: -20.250003814697266
    6. '-Max' → logprob: -21.000003814697266
    7. 'max' → logprob: -21.625003814697266
    8. '.Max' → logprob: -21.750003814697266
    9. '_max' → logprob: -22.250003814697266
    10. '0' → logprob: -23.750003814697266

Token 511: 'Flow' (ID: 18017)
  Prédit: 'Flow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Flow' → logprob: -3.292907877039397e-06
    2. '.Flow' → logprob: -13.00000286102295
    3. ' Flow' → logprob: -14.62500286102295
    4. '_FLOW' → logprob: -15.37500286102295
    5. '_flow' → logprob: -15.87500286102295
    6. 'Flows' → logprob: -16.500003814697266
    7. '(' → logprob: -17.375003814697266
    8. '```' → logprob: -17.875003814697266
    9. 'F' → logprob: -18.125003814697266
    10. '-flow' → logprob: -18.250003814697266

Token 512: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0002887490263674408
    2. '(' → logprob: -8.500288963317871
    3. 'N' → logprob: -9.625288963317871
    4. '(
' → logprob: -11.625288963317871
    5. '(n' → logprob: -11.750288963317871
    6. '(len' → logprob: -13.375288963317871
    7. ' (' → logprob: -14.875288963317871
    8. '<|end|>' → logprob: -15.125288963317871
    9. '```' → logprob: -16.250288009643555
    10. ' N' → logprob: -17.000288009643555

Token 513: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20157141983509064
    2. ')' → logprob: -1.7015714645385742
    3. ')
' → logprob: -8.826571464538574
    4. ')

' → logprob: -12.076571464538574
    5. ' )
' → logprob: -12.826571464538574
    6. '+' → logprob: -13.951571464538574
    7. ' )' → logprob: -14.826571464538574
    8. '```' → logprob: -14.951571464538574
    9. ')`
' → logprob: -15.576571464538574
    10. ',)
' → logprob: -16.451570510864258

Token 514: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1346966028213501
    2. 'for' → logprob: -2.1346964836120605
    3. ' for' → logprob: -4.8846964836120605
    4. '<|end|>' → logprob: -8.884696960449219
    5. '    
' → logprob: -11.009696960449219
    6. '```' → logprob: -11.259696960449219
    7. '	for' → logprob: -12.009696960449219
    8. '<|end|>' → logprob: -14.509696960449219
    9. '
' → logprob: -14.634696960449219
    10. ' ' → logprob: -14.759696960449219

Token 515: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.908022285439074e-05
    2. ' for' → logprob: -9.750059127807617
    3. '```' → logprob: -14.375059127807617
    4. '   ' → logprob: -16.625059127807617
    5. '	for' → logprob: -17.500059127807617
    6. '<|end|>' → logprob: -17.625059127807617
    7. '[' → logprob: -18.625059127807617
    8. '
' → logprob: -19.000059127807617
    9. '    
' → logprob: -19.125059127807617
    10. 'For' → logprob: -19.250059127807617

Token 516: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7481151223182678
    2. 'u' → logprob: -0.7481151223182678
    3. 'x' → logprob: -3.373115062713623
    4. '(u' → logprob: -4.623115062713623
    5. '(a' → logprob: -5.373115062713623
    6. 'e' → logprob: -6.248115062713623
    7. ' u' → logprob: -6.623115062713623
    8. ' a' → logprob: -7.873115062713623
    9. 'ea' → logprob: -7.998115062713623
    10. 'i' → logprob: -8.623115539550781

Token 517: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.027618154883384705
    2. ',a' → logprob: -4.152617931365967
    3. 'a' → logprob: -4.527617931365967
    4. ',' → logprob: -7.527617931365967
    5. 'y' → logprob: -9.277618408203125
    6. ',x' → logprob: -10.777618408203125
    7. ' in' → logprob: -11.152618408203125
    8. ',u' → logprob: -11.277618408203125
    9. 'in' → logprob: -11.777618408203125
    10. ',(' → logprob: -12.027618408203125

Token 518: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.17975099384784698
    2. ' in' → logprob: -1.8047510385513306
    3. ' ' → logprob: -13.3047513961792
    4. '   ' → logprob: -13.5547513961792
    5. ',' → logprob: -13.9297513961792
    6. 'edges' → logprob: -14.8047513961792
    7. '	in' → logprob: -15.0547513961792
    8. '(edges' → logprob: -15.3047513961792
    9. '_in' → logprob: -15.4297513961792
    10. '```' → logprob: -15.5547513961792

Token 519: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.2519353926181793
    2. ' edges' → logprob: -1.501935362815857
    3. 'list' → logprob: -13.251935005187988
    4. '(edges' → logprob: -13.751935005187988
    5. 'edge' → logprob: -14.126935005187988
    6. ' list' → logprob: -14.251935005187988
    7. 'sorted' → logprob: -14.376935005187988
    8. '.edges' → logprob: -14.501935005187988
    9. '   ' → logprob: -15.376935005187988
    10. '_edges' → logprob: -15.376935005187988

Token 520: ':
' (ID: 734)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.5569270849227905
    2. ':' → logprob: -1.6819270849227905
    3. ':
' → logprob: -1.9319270849227905
    4. '   ' → logprob: -3.05692720413208
    5. '.append' → logprob: -3.55692720413208
    6. '.' → logprob: -4.30692720413208
    7. '       ' → logprob: -5.55692720413208
    8. 'add' → logprob: -7.43192720413208
    9. ':add' → logprob: -7.55692720413208
    10. '):' → logprob: -7.80692720413208

Token 521: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007984189316630363
    2. 'mf' → logprob: -4.882984161376953
    3. ' mf' → logprob: -8.007984161376953
    4. '   ' → logprob: -10.132984161376953
    5. '-mf' → logprob: -13.507984161376953
    6. '        
' → logprob: -14.007984161376953
    7. '```' → logprob: -14.632984161376953
    8. ',m' → logprob: -14.757984161376953
    9. ',' → logprob: -15.132984161376953
    10. '      ' → logprob: -15.132984161376953

Token 522: ' mf' (ID: 45148)
  Prédit: 'mf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mf' (adapté à ' mf') → logprob: -0.008447202853858471
    2. '       ' → logprob: -5.008447170257568
    3. '   ' → logprob: -6.883447170257568
    4. ' mf' → logprob: -7.258447170257568
    5. '-mf' → logprob: -14.008447647094727
    6. '	m' → logprob: -16.383447647094727
    7. '           ' → logprob: -16.508447647094727
    8. '        
' → logprob: -16.508447647094727
    9. '     ' → logprob: -16.758447647094727
    10. '```' → logprob: -16.758447647094727

Token 523: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -6.704273118884885e-07
    2. '.' → logprob: -14.625000953674316
    3. 'add' → logprob: -15.750000953674316
    4. '   ' → logprob: -17.875
    5. ' .' → logprob: -18.0
    6. '.append' → logprob: -19.125
    7. '.Add' → logprob: -20.125
    8. '}.' → logprob: -20.625
    9. ').' → logprob: -20.875
    10. '`.' → logprob: -21.0

Token 524: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -4.632542913896032e-05
    2. 'edge' → logprob: -10.000046730041504
    3. '(x' → logprob: -14.875046730041504
    4. '_edges' → logprob: -15.500046730041504
    5. '_' → logprob: -17.000045776367188
    6. ' edge' → logprob: -17.250045776367188
    7. '_x' → logprob: -17.375045776367188
    8. 'x' → logprob: -17.500045776367188
    9. '```' → logprob: -17.750045776367188
    10. '_node' → logprob: -17.875045776367188

Token 525: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.4736459888808895e-05
    2. 'x' → logprob: -11.875014305114746
    3. '(' → logprob: -12.000014305114746
    4. '(
' → logprob: -13.875014305114746
    5. ' (' → logprob: -14.750014305114746
    6. ' x' → logprob: -16.625015258789062
    7. '<|end|>' → logprob: -17.375015258789062
    8. ',x' → logprob: -18.000015258789062
    9. '```' → logprob: -18.000015258789062
    10. '((' → logprob: -18.000015258789062

Token 526: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.008721290156245232
    2. ',' → logprob: -4.758721351623535
    3. ' ,' → logprob: -9.633721351623535
    4. ',b' → logprob: -10.508721351623535
    5. 'y' → logprob: -12.008721351623535
    6. ',
' → logprob: -13.133721351623535
    7. ',a' → logprob: -13.383721351623535
    8. ',x' → logprob: -13.758721351623535
    9. '(y' → logprob: -14.133721351623535
    10. '
' → logprob: -14.758721351623535

Token 527: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002212346764281392
    2. '1' → logprob: -6.3772125244140625
    3. ' ,' → logprob: -7.6272125244140625
    4. ' ' → logprob: -12.127212524414062
    5. ',
' → logprob: -12.252212524414062
    6. '       ' → logprob: -12.377212524414062
    7. '   ' → logprob: -12.752212524414062
    8. '10' → logprob: -13.377212524414062
    9. '           ' → logprob: -13.627212524414062
    10. '100' → logprob: -14.127212524414062

Token 528: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4736459888808895e-05
    2. '10' → logprob: -11.750014305114746
    3. ' ' → logprob: -12.750014305114746
    4. '   ' → logprob: -12.875014305114746
    5. '100' → logprob: -14.000014305114746
    6. '           ' → logprob: -16.125015258789062
    7. '
' → logprob: -16.250015258789062
    8. '       ' → logprob: -16.625015258789062
    9. 'float' → logprob: -16.875015258789062
    10. '  ' → logprob: -17.250015258789062

Token 529: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003212888026610017
    2. ')
' → logprob: -5.753212928771973
    3. ')m' → logprob: -10.503212928771973
    4. '<|end|>' → logprob: -12.378212928771973
    5. '
' → logprob: -14.003212928771973
    6. ',m' → logprob: -14.128212928771973
    7. '   ' → logprob: -14.878212928771973
    8. ' )' → logprob: -14.878212928771973
    9. ')

' → logprob: -15.503212928771973
    10. '),' → logprob: -15.503212928771973

Token 530: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11198321729898453
    2. 'mf' → logprob: -2.486983299255371
    3. '       ' → logprob: -3.861983299255371
    4. ' mf' → logprob: -6.486983299255371
    5. '```' → logprob: -9.861983299255371
    6. ' ' → logprob: -9.986983299255371
    7. 'm' → logprob: -10.361983299255371
    8. '	m' → logprob: -10.861983299255371
    9. '  ' → logprob: -11.361983299255371
    10. '-mf' → logprob: -11.361983299255371

Token 531: ' mf' (ID: 45148)
  Prédit: 'mf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mf' (adapté à ' mf') → logprob: -0.00010437761375214905
    2. '       ' → logprob: -9.750103950500488
    3. ' mf' → logprob: -10.375103950500488
    4. '   ' → logprob: -11.125103950500488
    5. '-mf' → logprob: -17.250104904174805
    6. '           ' → logprob: -17.875104904174805
    7. ' ' → logprob: -18.250104904174805
    8. '     ' → logprob: -19.375104904174805
    9. 'm' → logprob: -19.625104904174805
    10. '    ' → logprob: -19.625104904174805

Token 532: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00010032468708232045
    2. '.' → logprob: -9.250100135803223
    3. ' .' → logprob: -13.250100135803223
    4. 'add' → logprob: -14.375100135803223
    5. '   ' → logprob: -14.375100135803223
    6. '```' → logprob: -14.625100135803223
    7. ').' → logprob: -15.625100135803223
    8. '.g' → logprob: -16.12510108947754
    9. '.append' → logprob: -16.62510108947754
    10. '>.' → logprob: -16.62510108947754

Token 533: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -5.200166469876422e-06
    2. 'edge' → logprob: -12.875004768371582
    3. '_' → logprob: -13.500004768371582
    4. 'dge' → logprob: -14.250004768371582
    5. '_ed' → logprob: -15.875004768371582
    6. '-edge' → logprob: -16.6250057220459
    7. '_
' → logprob: -16.6250057220459
    8. '_e' → logprob: -16.7500057220459
    9. '__' → logprob: -16.8750057220459
    10. '_node' → logprob: -17.0000057220459

Token 534: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -2.5822400857578032e-05
    2. '(' → logprob: -11.000025749206543
    3. '(x' → logprob: -12.125025749206543
    4. 'y' → logprob: -12.750025749206543
    5. ' (' → logprob: -14.500025749206543
    6. '(
' → logprob: -16.25002670288086
    7. ',y' → logprob: -17.12502670288086
    8. '((' → logprob: -17.87502670288086
    9. ' y' → logprob: -18.25002670288086
    10. '```' → logprob: -18.75002670288086

Token 535: ',x' (ID: 29748)
  Prédit: ',x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.0011835616314783692
    2. ',' → logprob: -7.37618350982666
    3. 'x' → logprob: -7.50118350982666
    4. ' ,' → logprob: -12.87618350982666
    5. '(x' → logprob: -14.50118350982666
    6. '```' → logprob: -15.37618350982666
    7. ',
' → logprob: -15.50118350982666
    8. '[x' → logprob: -15.62618350982666
    9. ' x' → logprob: -16.126184463500977
    10. ',y' → logprob: -16.376184463500977

Token 536: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.1186566047836095e-05
    2. '1' → logprob: -10.750031471252441
    3. ' ,' → logprob: -11.625031471252441
    4. ',
' → logprob: -15.000031471252441
    5. '   ' → logprob: -15.750031471252441
    6. '```' → logprob: -16.500030517578125
    7. ')' → logprob: -16.750030517578125
    8. '       ' → logprob: -16.750030517578125
    9. '`,' → logprob: -17.875030517578125
    10. ' ' → logprob: -17.875030517578125

Token 537: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.125000953674316
    3. '0' → logprob: -15.375000953674316
    4. '
' → logprob: -15.625000953674316
    5. '   ' → logprob: -17.125
    6. '           ' → logprob: -19.25
    7. '

' → logprob: -19.375
    8. '       ' → logprob: -19.75
    9. '  ' → logprob: -19.875
    10. '```' → logprob: -20.125

Token 538: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007151735480874777
    2. ')
' → logprob: -7.250715255737305
    3. '   ' → logprob: -13.000715255737305
    4. '<|end|>' → logprob: -14.000715255737305
    5. '
' → logprob: -14.250715255737305
    6. ')return' → logprob: -14.375715255737305
    7. ')

' → logprob: -15.625715255737305
    8. ')n' → logprob: -15.875715255737305
    9. '       ' → logprob: -16.000715255737305
    10. '```' → logprob: -16.375715255737305

Token 539: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0573437474668026
    2. '
' → logprob: -2.9323437213897705
    3. ' print' → logprob: -6.93234395980835
    4. '```' → logprob: -7.18234395980835
    5. '<|end|>' → logprob: -7.55734395980835
    6. 'result' → logprob: -9.307343482971191
    7. 'flow' → logprob: -10.557343482971191
    8. '``' → logprob: -10.932343482971191
    9. 'next' → logprob: -11.557343482971191
    10. '   ' → logprob: -11.807343482971191

Token 540: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.4391956685576588e-05
    2. 'result' → logprob: -11.125024795532227
    3. 'res' → logprob: -12.625024795532227
    4. ' print' → logprob: -12.625024795532227
    5. '```' → logprob: -13.500024795532227
    6. 'pr' → logprob: -14.250024795532227
    7. '
' → logprob: -14.625024795532227
    8. '   ' → logprob: -14.875024795532227
    9. 'out' → logprob: -16.250024795532227
    10. '    
' → logprob: -16.750024795532227

Token 541: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.008291979320347309
    2. '(' → logprob: -5.508292198181152
    3. 'mf' → logprob: -5.508292198181152
    4. '1' → logprob: -9.633292198181152
    5. '0' → logprob: -10.258292198181152
    6. 'm' → logprob: -10.508292198181152
    7. '2' → logprob: -11.383292198181152
    8. '(-' → logprob: -13.008292198181152
    9. ' mf' → logprob: -13.383292198181152
    10. 'max' → logprob: -13.508292198181152

Token 542: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.10104218870401382
    2. 'ax' → logprob: -2.3510422706604004
    3. 'a' → logprob: -7.6010422706604
    4. '1' → logprob: -9.601041793823242
    5. 'x' → logprob: -9.976041793823242
    6. '(ax' → logprob: -10.351041793823242
    7. 'l' → logprob: -10.601041793823242
    8. 'len' → logprob: -11.226041793823242
    9. '(' → logprob: -11.226041793823242
    10. '[' → logprob: -11.351041793823242

Token 543: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -6.988221684878226e-06
    2. 'max' → logprob: -12.625006675720215
    3. '_.' → logprob: -13.750006675720215
    4. '_max' → logprob: -14.000006675720215
    5. ',max' → logprob: -14.000006675720215
    6. ').' → logprob: -15.125006675720215
    7. ')' → logprob: -15.875006675720215
    8. ' .' → logprob: -16.37500762939453
    9. '.min' → logprob: -16.37500762939453
    10. '._' → logprob: -16.75000762939453

Token 544: '_flow' (ID: 63802)
  Prédit: '_flow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flow' → logprob: 0.0
    2. '_flux' → logprob: -17.625
    3. '_FLOW' → logprob: -18.5
    4. '_fl' → logprob: -19.25
    5. '_floor' → logprob: -19.5
    6. '_' → logprob: -20.0
    7. 'flow' → logprob: -20.25
    8. ' flow' → logprob: -20.25
    9. ')_' → logprob: -20.375
    10. '_f' → logprob: -21.375

Token 545: '(' (ID: 7)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.014178793877363205
    2. '(' → logprob: -4.26417875289917
    3. '(
' → logprob: -12.014179229736328
    4. '0' → logprob: -12.639179229736328
    5. ' (' → logprob: -13.014179229736328
    6. ')' → logprob: -13.139179229736328
    7. '((' → logprob: -14.264179229736328
    8. 'a' → logprob: -14.639179229736328
    9. '(x' → logprob: -15.764179229736328
    10. '(A' → logprob: -16.264179229736328

Token 546: '0' (ID: 15)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.000627610192168504
    2. '0' → logprob: -7.375627517700195
    3. ' a' → logprob: -13.750627517700195
    4. ')a' → logprob: -17.500627517700195
    5. ')' → logprob: -18.250627517700195
    6. 'M' → logprob: -18.250627517700195
    7. '(a' → logprob: -19.250627517700195
    8. 'A' → logprob: -19.500627517700195
    9. ' ' → logprob: -19.500627517700195
    10. ',a' → logprob: -19.500627517700195

Token 547: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5313810110092163
    2. ',N' → logprob: -1.0313810110092163
    3. ',b' → logprob: -2.906381130218506
    4. ' ,' → logprob: -7.906381130218506
    5. ',a' → logprob: -7.906381130218506
    6. ',n' → logprob: -9.031380653381348
    7. ',y' → logprob: -10.031380653381348
    8. 'N' → logprob: -10.031380653381348
    9. ' N' → logprob: -10.406380653381348
    10. ',m' → logprob: -10.531380653381348

Token 548: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00013762809976469725
    2. ' -' → logprob: -9.375137329101562
    3. '1' → logprob: -9.875137329101562
    4. ')' → logprob: -14.000137329101562
    5. '```' → logprob: -16.125137329101562
    6. ')-' → logprob: -16.250137329101562
    7. '()-' → logprob: -16.375137329101562
    8. '))' → logprob: -16.625137329101562
    9. '−' → logprob: -17.500137329101562
    10. '–' → logprob: -19.000137329101562

Token 549: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.125005722045898
    3. ')' → logprob: -15.500005722045898
    4. '```' → logprob: -16.0000057220459
    5. '2' → logprob: -17.1250057220459
    6. '   ' → logprob: -17.7500057220459
    7. '-' → logprob: -17.7500057220459
    8. '１' → logprob: -18.1875057220459
    9. '
' → logprob: -18.3125057220459
    10. '۱' → logprob: -18.6875057220459

Token 550: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004185602068901062
    2. ')' → logprob: -5.504185676574707
    3. '()))' → logprob: -9.254185676574707
    4. '))
' → logprob: -12.129185676574707
    5. ')))' → logprob: -13.129185676574707
    6. '())' → logprob: -13.754185676574707
    7. ' ))' → logprob: -13.754185676574707
    8. '()' → logprob: -14.129185676574707
    9. ')
' → logprob: -15.629185676574707
    10. '),' → logprob: -15.754185676574707


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 548
Tokens correctement prédits (1ère position, stricte): 299
Tokens correctement prédits (1ère position, avec adaptation): 334
Tokens correctement prédits (top 10): 512
Précision stricte (1ère position): 54.56%
Précision adaptée (1ère position): 60.95%
Précision (top 10): 93.43%
================================================================================
