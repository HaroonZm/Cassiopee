================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

H, W = map(int, input().split())
garden = [input() for _ in range(H)]

# Les roses forment une entité connectée par au moins un point commun (voisinage 8 directions)
# Chaque case rose est '#' sinon '.'
# La balle part du coin bas gauche (H-1,0) et lance une ligne
# Le but est de trouver la droite partant de ce point divisant la forme en un maximum de parties
# Une droite divise une entité en autant de parties que:
# (nombre de blocs de rose traversés par la droite) + 1

# On recherche donc une droite passant par (H-1, 0)
# Chaque droite peut être identifiée par son angle
# On peut calculer pour chaque bloc rose ses coordonnées par rapport au point (H-1,0)
# Chaque droite passant par ce point est identique dans sa pente = (dy/dx)

# Pour chaque bloc, on calcule la direction depuis (H-1,0) vers ce bloc (central)
# Puis on compte combien de blocs ont la même direction (même angle)
# Le maximum de blocs alignés donne le nombre de blocs traversés par la droite
# Le nombre de morceaux sera donc ce nombre + 1

from math import gcd

start_y, start_x = H-1, 0

directions = {}

for y in range(H):
    for x in range(W):
        if garden[y][x] == '#':
            dy = y - start_y
            dx = x - start_x
            # On veut normaliser (dy, dx) pour représenter la même direction pour tous les points alignés
            if dx == 0:
                dir_key = (1, 0)  # verticale montant (par convention)
            elif dy == 0:
                dir_key = (0, 1)  # horizontale droite
            else:
                g = gcd(dy, dx)
                ny = dy // g
                nx = dx // g
                # Pour avoir un unique représentant, on fait en sorte que nx soit toujours positif
                # ou si nx==0, ny>0
                if nx < 0:
                    ny = -ny
                    nx = -nx
                dir_key = (ny, nx)
            directions[dir_key] = directions.get(dir_key, 0) + 1

max_parts = max(directions.values()) + 1
print(max_parts)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183791756629944
    2. '.' → logprob: -2.3368380069732666
    3. '<|end|>' → logprob: -2.8368380069732666
    4. '\' → logprob: -4.7118377685546875
    5. 'newline' → logprob: -5.0868377685546875
    6. 'import' → logprob: -5.0868377685546875
    7. '
' → logprob: -5.7118377685546875
    8. '' → logprob: -5.8368377685546875
    9. '<|end|>' → logprob: -5.8368377685546875
    10. '\r' → logprob: -6.3368377685546875

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.8087270038668066e-05
    2. ' .' → logprob: -11.625027656555176
    3. '.import' → logprob: -12.500027656555176
    4. '.readline' → logprob: -13.125027656555176
    5. '.user' → logprob: -13.375027656555176
    6. '.`' → logprob: -13.875027656555176
    7. '.stdout' → logprob: -14.000027656555176
    8. '[' → logprob: -14.000027656555176
    9. '."""' → logprob: -14.125027656555176
    10. '.exit' → logprob: -14.250027656555176

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.7549012303352356
    2. 's' → logprob: -1.1299011707305908
    3. 't' → logprob: -3.004901170730591
    4. 'sys' → logprob: -3.254901170730591
    5. 'set' → logprob: -3.629901170730591
    6. 'soft' → logprob: -4.00490140914917
    7. 'default' → logprob: -4.25490140914917
    8. '_' → logprob: -5.00490140914917
    9. 'ex' → logprob: -5.00490140914917
    10. 'suffix' → logprob: -5.12990140914917

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.003742952598258853
    2. 'ursive' → logprob: -6.3787431716918945
    3. 'limit' → logprob: -7.0037431716918945
    4. 'ur' → logprob: -7.5037431716918945
    5. 'urse' → logprob: -9.253743171691895
    6. '_limit' → logprob: -9.628743171691895
    7. 'urs' → logprob: -9.628743171691895
    8. 'ut' → logprob: -9.753743171691895
    9. 'u' → logprob: -10.003743171691895
    10. 't' → logprob: -10.128743171691895

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.25208455324172974
    2. '_limit' → logprob: -1.502084493637085
    3. '_depth' → logprob: -9.752084732055664
    4. 'lim' → logprob: -10.002084732055664
    5. ' limit' → logprob: -10.752084732055664
    6. 'depth' → logprob: -11.252084732055664
    7. '_lim' → logprob: -12.627084732055664
    8. '_' → logprob: -12.752084732055664
    9. 'Limit' → logprob: -13.502084732055664
    10. '(limit' → logprob: -13.752084732055664

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.494741632603109e-05
    2. '(
' → logprob: -10.25008487701416
    3. ' (' → logprob: -11.12508487701416
    4. '40' → logprob: -11.62508487701416
    5. '(

' → logprob: -12.25008487701416
    6. '```' → logprob: -12.50008487701416
    7. '((' → logprob: -12.62508487701416
    8. '(.' → logprob: -12.75008487701416
    9. '('' → logprob: -12.87508487701416
    10. '("("' → logprob: -13.12508487701416

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12741151452064514
    2. '100' → logprob: -2.1274116039276123
    3. ' ' → logprob: -8.002411842346191
    4. '500' → logprob: -9.752411842346191
    5. '300' → logprob: -9.877411842346191
    6. '250' → logprob: -10.752411842346191
    7. '  ' → logprob: -12.252411842346191
    8. '   ' → logprob: -12.502411842346191
    9. '200' → logprob: -12.877411842346191
    10. '150' → logprob: -13.127411842346191

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08653885871171951
    2. '000' → logprob: -2.586538791656494
    3. '6' → logprob: -5.461538791656494
    4. '00' → logprob: -6.336538791656494
    5. '7' → logprob: -7.461538791656494
    6. '**' → logprob: -7.586538791656494
    7. '5' → logprob: -8.086539268493652
    8. '4' → logprob: -9.211539268493652
    9. ')' → logprob: -9.711539268493652
    10. '```' → logprob: -10.461539268493652

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00714417127892375
    2. '9' → logprob: -5.632143974304199
    3. '6' → logprob: -5.757143974304199
    4. '8' → logprob: -7.882143974304199
    5. '```' → logprob: -15.7571439743042
    6. ' ' → logprob: -16.507144927978516
    7. '(' → logprob: -17.132144927978516
    8. '5' → logprob: -17.757144927978516
    9. '``' → logprob: -18.257144927978516
    10. '999' → logprob: -18.382144927978516

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.676292231422849e-05
    2. '))' → logprob: -11.375017166137695
    3. ' )' → logprob: -12.250017166137695
    4. ')
' → logprob: -15.875017166137695
    5. ')`' → logprob: -16.000017166137695
    6. ')))' → logprob: -16.625017166137695
    7. '`)' → logprob: -17.000017166137695
    8. ' ' → logprob: -17.750017166137695
    9. '）' → logprob: -17.875017166137695
    10. '),' → logprob: -17.875017166137695

Token 13: 'H' (ID: 39)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0465119332075119
    2. '
' → logprob: -3.5465118885040283
    3. '

' → logprob: -4.921512126922607
    4. '```' → logprob: -5.296512126922607
    5. '\' → logprob: -6.421512126922607
    6. '
' → logprob: -7.046512126922607
    7. 'class' → logprob: -7.546512126922607
    8. '\n' → logprob: -7.671512126922607
    9. 'import' → logprob: -8.04651165008545
    10. ')' → logprob: -8.92151165008545

Token 14: ',' (ID: 11)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.02062305435538292
    2. 'E' → logprob: -4.770623207092285
    3. 'ello' → logprob: -6.020623207092285
    4. '=' → logprob: -6.645623207092285
    5. 'H' → logprob: -6.770623207092285
    6. 'elper' → logprob: -7.020623207092285
    7. '   ' → logprob: -7.145623207092285
    8. '(e' → logprob: -7.270623207092285
    9. 'def' → logprob: -7.520623207092285
    10. '(' → logprob: -7.645623207092285

Token 15: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.47418251633644104
    2. ' W' → logprob: -0.9741824865341187
    3. ' ' → logprob: -9.34918212890625
    4. '  ' → logprob: -11.47418212890625
    5. 'w' → logprob: -13.09918212890625
    6. ' ' → logprob: -13.09918212890625
    7. 'I' → logprob: -13.84918212890625
    8. '   ' → logprob: -14.34918212890625
    9. '    ' → logprob: -14.84918212890625
    10. ' =' → logprob: -15.22418212890625

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03847231715917587
    2. '=' → logprob: -3.2884724140167236
    3. ',' → logprob: -7.7884721755981445
    4. ' ' → logprob: -11.663472175598145
    5. ' ,' → logprob: -12.538472175598145
    6. '<|end|>' → logprob: -13.538472175598145
    7. ')' → logprob: -14.288472175598145
    8. ' =
' → logprob: -14.788472175598145
    9. ' =",' → logprob: -15.163472175598145
    10. ' =)' → logprob: -15.288472175598145

Token 17: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.6366009712219238
    2. 'map' → logprob: -0.7616009712219238
    3. ' ' → logprob: -6.636600971221924
    4. '10' → logprob: -7.136600971221924
    5. 'int' → logprob: -7.636600971221924
    6. 'list' → logprob: -7.636600971221924
    7. ' list' → logprob: -8.011600494384766
    8. 'input' → logprob: -8.636600494384766
    9. ' input' → logprob: -9.136600494384766
    10. ' int' → logprob: -9.386600494384766

Token 18: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3015565276145935
    2. '(int' → logprob: -1.6765565872192383
    3. '(lambda' → logprob: -2.6765565872192383
    4. '(str' → logprob: -6.051556587219238
    5. '(input' → logprob: -6.926556587219238
    6. '(len' → logprob: -8.801556587219238
    7. '(eval' → logprob: -8.801556587219238
    8. '<|end|>' → logprob: -8.801556587219238
    9. ' (' → logprob: -9.426556587219238
    10. '(tuple' → logprob: -9.551556587219238

Token 19: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16349509358406067
    2. ',input' → logprob: -1.9134950637817383
    3. '(input' → logprob: -6.038495063781738
    4. '(' → logprob: -7.913495063781738
    5. 'input' → logprob: -8.538495063781738
    6. ',int' → logprob: -8.788495063781738
    7. '(sys' → logprob: -9.538495063781738
    8. ' ,' → logprob: -10.663495063781738
    9. ')' → logprob: -11.038495063781738
    10. ',(' → logprob: -11.538495063781738

Token 20: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47409164905548096
    2. ' input' → logprob: -0.974091649055481
    3. ' ' → logprob: -11.974091529846191
    4. ' sys' → logprob: -12.224091529846191
    5. 'sys' → logprob: -13.474091529846191
    6. '(input' → logprob: -14.224091529846191
    7. ',input' → logprob: -14.224091529846191
    8. '=input' → logprob: -15.099091529846191
    9. ')' → logprob: -15.599091529846191
    10. '	input' → logprob: -16.349092483520508

Token 21: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.038539886474609375
    2. '())' → logprob: -3.4135398864746094
    3. '()' → logprob: -5.413539886474609
    4. '(' → logprob: -8.78853988647461
    5. ')' → logprob: -9.03853988647461
    6. '());' → logprob: -10.16353988647461
    7. '()))' → logprob: -10.41353988647461
    8. '('' → logprob: -10.91353988647461
    9. '()>' → logprob: -11.28853988647461
    10. '()),' → logprob: -11.53853988647461

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001029471677611582
    2. 'strip' → logprob: -9.250102996826172
    3. 'rstrip' → logprob: -12.125102996826172
    4. ')' → logprob: -14.125102996826172
    5. 'spl' → logprob: -15.375102996826172
    6. ' split' → logprob: -15.625102996826172
    7. 'read' → logprob: -15.625102996826172
    8. '(split' → logprob: -16.750102996826172
    9. '```' → logprob: -17.875102996826172
    10. 's' → logprob: -18.000102996826172

Token 23: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25784915685653687
    2. '())' → logprob: -1.5078492164611816
    3. '()' → logprob: -5.382849216461182
    4. '))' → logprob: -6.757849216461182
    5. '()))' → logprob: -9.757848739624023
    6. '(' → logprob: -10.257848739624023
    7. '`)' → logprob: -11.632848739624023
    8. '),' → logprob: -11.757848739624023
    9. '('' → logprob: -11.882848739624023
    10. ' )' → logprob: -12.632848739624023

Token 24: 'garden' (ID: 176328)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.16921983659267426
    2. 'field' → logprob: -2.169219732284546
    3. 'dp' → logprob: -4.044219970703125
    4. 'A' → logprob: -5.419219970703125
    5. 'S' → logprob: -5.419219970703125
    6. 'graph' → logprob: -5.919219970703125
    7. ' grid' → logprob: -5.919219970703125
    8. 'a' → logprob: -6.419219970703125
    9. 's' → logprob: -6.794219970703125
    10. '```' → logprob: -7.169219970703125

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0364929661154747
    2. '[' → logprob: -4.161492824554443
    3. '=' → logprob: -4.411492824554443
    4. '_' → logprob: -4.911492824554443
    5. '[:]' → logprob: -8.161493301391602
    6. ' ' → logprob: -8.911493301391602
    7. ' =[' → logprob: -9.661493301391602
    8. '[]' → logprob: -10.411493301391602
    9. '_map' → logprob: -10.536493301391602
    10. '[][]' → logprob: -10.536493301391602

Token 26: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01521473191678524
    2. '[]' → logprob: -5.015214920043945
    3. '[list' → logprob: -5.265214920043945
    4. ' [' → logprob: -7.140214920043945
    5. '[int' → logprob: -7.390214920043945
    6. '[input' → logprob: -7.515214920043945
    7. '[array' → logprob: -8.390214920043945
    8. '[str' → logprob: -9.015214920043945
    9. '[i' → logprob: -9.015214920043945
    10. '[List' → logprob: -9.140214920043945

Token 27: 'input' (ID: 2586)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0111493319272995
    2. ' list' → logprob: -4.5111494064331055
    3. '[list' → logprob: -9.636149406433105
    4. '[]' → logprob: -10.761149406433105
    5. '(list' → logprob: -12.636149406433105
    6. ' []' → logprob: -12.761149406433105
    7. '[' → logprob: -12.886149406433105
    8. 'input' → logprob: -13.261149406433105
    9. ' [' → logprob: -13.511149406433105
    10. 'tuple' → logprob: -14.136149406433105

Token 28: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007268090266734362
    2. '()]' → logprob: -5.007267951965332
    3. '())' → logprob: -7.632267951965332
    4. '().' → logprob: -9.757267951965332
    5. '()+' → logprob: -13.382267951965332
    6. '()>' → logprob: -13.507267951965332
    7. '(),' → logprob: -14.007267951965332
    8. '(' → logprob: -14.132267951965332
    9. '());' → logprob: -14.132267951965332
    10. ' ()' → logprob: -14.132267951965332

Token 29: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7098448872566223
    2. 'for' → logprob: -0.7098448872566223
    3. '()' → logprob: -4.459845066070557
    4. ')' → logprob: -5.709845066070557
    5. '.strip' → logprob: -6.709845066070557
    6. ' ' → logprob: -8.959844589233398
    7. '().' → logprob: -9.334844589233398
    8. 'strip' → logprob: -9.334844589233398
    9. '	for' → logprob: -9.959844589233398
    10. '.rstrip' → logprob: -10.334844589233398

Token 30: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.21338841319084167
    2. ' range' → logprob: -2.088388442993164
    3. '_' → logprob: -2.713388442993164
    4. ' ' → logprob: -6.838388442993164
    5. ' i' → logprob: -7.713388442993164
    6. '_range' → logprob: -8.338388442993164
    7. 'range' → logprob: -9.213388442993164
    8. ' in' → logprob: -10.213388442993164
    9. '(range' → logprob: -10.838388442993164
    10. ' ' → logprob: -11.213388442993164

Token 31: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.24788200855255127
    2. ' range' → logprob: -2.4978818893432617
    3. ' in' → logprob: -2.6228818893432617
    4. 'in' → logprob: -2.7478818893432617
    5. ' ' → logprob: -7.997881889343262
    6. '_' → logprob: -8.872881889343262
    7. '	range' → logprob: -9.622881889343262
    8. 'ran' → logprob: -10.747881889343262
    9. '(range' → logprob: -11.372881889343262
    10. '  ' → logprob: -11.872881889343262

Token 32: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006715370807796717
    2. ' range' → logprob: -5.006715297698975
    3. '(range' → logprob: -16.881715774536133
    4. '	range' → logprob: -17.381715774536133
    5. ' ' → logprob: -18.881715774536133
    6. '.range' → logprob: -20.006715774536133
    7. '  ' → logprob: -21.006715774536133
    8. ')' → logprob: -21.131715774536133
    9. 'rang' → logprob: -21.381715774536133
    10. '   ' → logprob: -21.631715774536133

Token 33: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.00724856136366725
    2. '(W' → logprob: -5.507248401641846
    3. '(' → logprob: -5.757248401641846
    4. '(N' → logprob: -13.757248878479004
    5. '(I' → logprob: -14.257248878479004
    6. ' (' → logprob: -14.257248878479004
    7. '(M' → logprob: -14.757248878479004
    8. '(Q' → logprob: -14.757248878479004
    9. '(G' → logprob: -14.882248878479004
    10. '(F' → logprob: -15.507248878479004

Token 34: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0006327360169962049
    2. ')' → logprob: -8.000632286071777
    3. ']' → logprob: -8.125632286071777
    4. '])]' → logprob: -15.125632286071777
    5. ')]
' → logprob: -15.375632286071777
    6. '])' → logprob: -15.750632286071777
    7. '')]' → logprob: -15.875632286071777
    8. ')])' → logprob: -16.250633239746094
    9. ')],' → logprob: -16.625633239746094
    10. ')
' → logprob: -16.625633239746094

Token 35: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10143637657165527
    2. 'visited' → logprob: -2.7264363765716553
    3. 'dist' → logprob: -3.9764363765716553
    4. 'distance' → logprob: -5.851436614990234
    5. 'd' → logprob: -6.601436614990234
    6. 'dx' → logprob: -6.726436614990234
    7. 'def' → logprob: -6.726436614990234
    8. 'for' → logprob: -6.976436614990234
    9. 'dire' → logprob: -7.101436614990234
    10. '#' → logprob: -7.226436614990234

Token 36: ' Les' (ID: 7029)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07800894975662231
    2. 'visited' → logprob: -3.8280088901519775
    3. 'dx' → logprob: -3.9530088901519775
    4. 'from' → logprob: -4.953009128570557
    5. 'dire' → logprob: -5.078009128570557
    6. ' dp' → logprob: -5.078009128570557
    7. 'dist' → logprob: -5.328009128570557
    8. 'def' → logprob: -5.703009128570557
    9. ' visited' → logprob: -6.203009128570557
    10. ' directions' → logprob: -6.828009128570557

Token 37: ' roses' (ID: 43959)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.04610425978899002
    2. 's' → logprob: -3.1711041927337646
    3. 'ts' → logprob: -6.171104431152344
    4. 'st' → logprob: -7.171104431152344
    5. '#' → logprob: -9.671104431152344
    6. 'lie' → logprob: -10.546104431152344
    7. 'sv' → logprob: -10.546104431152344
    8. 'sons' → logprob: -10.796104431152344
    9. 'tas' → logprob: -11.046104431152344
    10. 'tle' → logprob: -11.421104431152344

Token 38: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6480981707572937
    2. '_positions' → logprob: -1.2730982303619385
    3. '_' → logprob: -2.0230982303619385
    4. '=' → logprob: -3.5230982303619385
    5. '_count' → logprob: -3.7730982303619385
    6. ' ' → logprob: -6.148097991943359
    7. 'positions' → logprob: -6.523097991943359
    8. '_in' → logprob: -6.523097991943359
    9. '_pos' → logprob: -6.523097991943359
    10. ',' → logprob: -7.523097991943359

Token 39: 'ment' (ID: 508)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.057340145111083984
    2. 'i' → logprob: -3.932340145111084
    3. ' ' → logprob: -4.057340145111084
    4. ' _' → logprob: -4.682340145111084
    5. '_' → logprob: -5.057340145111084
    6. 'r' → logprob: -6.682340145111084
    7. '  ' → logprob: -7.182340145111084
    8. ' r' → logprob: -8.057340621948242
    9. 't' → logprob: -8.807340621948242
    10. ' t' → logprob: -9.057340621948242

Token 40: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5622723698616028
    2. ' une' → logprob: -1.562272310256958
    3. ' des' → logprob: -1.812272310256958
    4. 'une' → logprob: -3.562272310256958
    5. 'un' → logprob: -4.687272548675537
    6. ' ' → logprob: -5.062272548675537
    7. 'des' → logprob: -5.062272548675537
    8. '_' → logprob: -6.437272548675537
    9. ' a' → logprob: -6.562272548675537
    10. 'a' → logprob: -7.062272548675537

Token 41: ' ent' (ID: 1121)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -2.5058505535125732
    2. ' chaîne' → logprob: -2.5058505535125732
    3. ' carré' → logprob: -2.7558505535125732
    4. ' ' → logprob: -2.7558505535125732
    5. 'rectangle' → logprob: -3.1308505535125732
    6. '+' → logprob: -3.5058505535125732
    7. 's' → logprob: -3.5683505535125732
    8. '"' → logprob: -3.6933505535125732
    9. '"""' → logprob: -3.8808505535125732
    10. 'pl' → logprob: -3.9433505535125732

Token 42: 'ité' (ID: 3761)
  Prédit: 'ière'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ière' → logprob: -0.7267979979515076
    2. 'ité' → logprob: -0.9767979979515076
    3. 'ire' → logprob: -3.1017980575561523
    4. 'ier' → logprob: -3.1017980575561523
    5. 're' → logprob: -3.9767980575561523
    6. 'r' → logprob: -5.101798057556152
    7. 'ite' → logprob: -5.351798057556152
    8. 'rée' → logprob: -5.601798057556152
    9. 'rel' → logprob: -6.226798057556152
    10. 'ity' → logprob: -6.601798057556152

Token 43: ' connect' (ID: 4837)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7622056007385254
    2. '.' → logprob: -1.0122056007385254
    3. ' ' → logprob: -2.0122056007385254
    4. ' ,' → logprob: -4.637205600738525
    5. '  ' → logprob: -5.387205600738525
    6. '_' → logprob: -5.512205600738525
    7. '#' → logprob: -5.887205600738525
    8. 's' → logprob: -6.137205600738525
    9. '<|end|>' → logprob: -6.262205600738525
    10. ' .' → logprob: -6.262205600738525

Token 44: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.006032723467797041
    2. 'é' → logprob: -5.381032943725586
    3. 'ées' → logprob: -6.756032943725586
    4. 'ee' → logprob: -9.256032943725586
    5. 'ed' → logprob: -9.506032943725586
    6. '#' → logprob: -11.006032943725586
    7. 'e' → logprob: -11.381032943725586
    8. '{' → logprob: -11.506032943725586
    9. '```' → logprob: -11.506032943725586
    10. 'és' → logprob: -12.006032943725586

Token 45: ' par' (ID: 686)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5582786798477173
    2. 'def' → logprob: -1.3082786798477173
    3. ',' → logprob: -2.8082785606384277
    4. 'visited' → logprob: -3.0582785606384277
    5. 'd' → logprob: -4.058278560638428
    6. '#' → logprob: -4.433278560638428
    7. ' ' → logprob: -5.308278560638428
    8. ' visited' → logprob: -5.558278560638428
    9. 's' → logprob: -5.933278560638428
    10. ':' → logprob: -6.058278560638428

Token 46: ' au' (ID: 2791)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.6033910512924194
    2. 'adj' → logprob: -1.6033910512924194
    3. ' ' → logprob: -2.478391170501709
    4. 'les' → logprob: -2.603391170501709
    5. 'l' → logprob: -2.853391170501709
    6. 'une' → logprob: -3.103391170501709
    7. '1' → logprob: -3.103391170501709
    8. 'un' → logprob: -3.353391170501709
    9. '```' → logprob: -3.478391170501709
    10. ''' → logprob: -3.603391170501709

Token 47: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.11415298283100128
    2. ' moins' → logprob: -2.7391529083251953
    3. 'x' → logprob: -4.364152908325195
    4. 'mo' → logprob: -4.489152908325195
    5. '-mo' → logprob: -5.739152908325195
    6. '```' → logprob: -5.864152908325195
    7. 'ssi' → logprob: -6.114152908325195
    8. '-' → logprob: -6.364152908325195
    9. '#' → logprob: -6.614152908325195
    10. '+' → logprob: -7.114152908325195

Token 48: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.5331485867500305
    2. 'l' → logprob: -1.2831485271453857
    3. 'un' → logprob: -3.2831485271453857
    4. ' une' → logprob: -3.4081485271453857
    5. '```' → logprob: -4.158148765563965
    6. ' un' → logprob: -4.283148765563965
    7. '1' → logprob: -4.408148765563965
    8. ' ' → logprob: -5.283148765563965
    9. ''une' → logprob: -5.283148765563965
    10. ''un' → logprob: -5.783148765563965

Token 49: ' point' (ID: 2438)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.34771862626075745
    2. ' ' → logprob: -2.4727187156677246
    3. ' espace' → logprob: -2.4727187156677246
    4. '```' → logprob: -3.2227187156677246
    5. 'esp' → logprob: -3.5977187156677246
    6. '_' → logprob: -5.347718715667725
    7. '-' → logprob: -5.347718715667725
    8. 'élé' → logprob: -5.472718715667725
    9. ''' → logprob: -5.597718715667725
    10. 'vo' → logprob: -5.847718715667725

Token 50: ' commun' (ID: 2797)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5237480998039246
    2. ',' → logprob: -2.2737481594085693
    3. '<|end|>' → logprob: -2.2737481594085693
    4. '.' → logprob: -2.3987481594085693
    5. 's' → logprob: -2.7737481594085693
    6. ' (' → logprob: -5.27374792098999
    7. ' contiguous' → logprob: -5.39874792098999
    8. ' de' → logprob: -5.52374792098999
    9. '```' → logprob: -5.64874792098999
    10. 'es' → logprob: -5.77374792098999

Token 51: ' (' (ID: 350)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5449599623680115
    2. ',' → logprob: -1.0449600219726562
    3. 's' → logprob: -3.5449600219726562
    4. ' ' → logprob: -3.7949600219726562
    5. '#' → logprob: -5.419960021972656
    6. ' .' → logprob: -6.044960021972656
    7. ':' → logprob: -6.419960021972656
    8. ' ,' → logprob: -6.669960021972656
    9. 'def' → logprob: -6.669960021972656
    10. ' #' → logprob: -6.794960021972656

Token 52: 'vo' (ID: 1190)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22667428851127625
    2. ',' → logprob: -2.6016743183135986
    3. ' ' → logprob: -3.1016743183135986
    4. ' )' → logprob: -3.1016743183135986
    5. 's' → logprob: -5.3516740798950195
    6. ''' → logprob: -5.4766740798950195
    7. '_' → logprob: -5.6016740798950195
    8. '.' → logprob: -5.7266740798950195
    9. '')' → logprob: -6.2266740798950195
    10. '   ' → logprob: -6.6016740798950195

Token 53: 'isin' (ID: 23933)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1766940355300903
    2. 't' → logprob: -1.4266940355300903
    3. 'c' → logprob: -1.6766940355300903
    4. 'i' → logprob: -2.551693916320801
    5. 'ix' → logprob: -2.676693916320801
    6. '```' → logprob: -3.176693916320801
    7. '#' → logprob: -3.551693916320801
    8. 'z' → logprob: -4.926693916320801
    9. 's' → logprob: -5.301693916320801
    10. ')' → logprob: -5.426693916320801

Token 54: 'age' (ID: 477)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03481380641460419
    2. 'é' → logprob: -3.90981388092041
    3. ')' → logprob: -4.78481388092041
    4. ' s' → logprob: -6.53481388092041
    5. ' de' → logprob: -6.65981388092041
    6. 'e' → logprob: -6.90981388092041
    7. ' ' → logprob: -7.40981388092041
    8. ',' → logprob: -8.40981388092041
    9. ' e' → logprob: -8.53481388092041
    10. ' )' → logprob: -8.53481388092041

Token 55: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8319163918495178
    2. ' à' → logprob: -0.8319163918495178
    3. '4' → logprob: -2.706916332244873
    4. ')' → logprob: -4.206916332244873
    5. ' de' → logprob: -4.831916332244873
    6. ' en' → logprob: -5.081916332244873
    7. ' orth' → logprob: -5.206916332244873
    8. ' )' → logprob: -5.331916332244873
    9. '```' → logprob: -5.581916332244873
    10. 's' → logprob: -5.581916332244873

Token 56: '8' (ID: 23)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.2112038135528564
    2. 'horizontal' → logprob: -1.3362038135528564
    3. 'vertical' → logprob: -2.2112038135528564
    4. 'à' → logprob: -2.3362038135528564
    5. ' à' → logprob: -2.8362038135528564
    6. ' ' → logprob: -3.3362038135528564
    7. 'orth' → logprob: -3.5862038135528564
    8. 'en' → logprob: -3.9612038135528564
    9. '8' → logprob: -3.9612038135528564
    10. ' horizontal' → logprob: -4.461203575134277

Token 57: ' directions' (ID: 24921)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07953064143657684
    2. '-direction' → logprob: -2.704530715942383
    3. '-)' → logprob: -5.704530715942383
    4. '-dire' → logprob: -6.204530715942383
    5. ' )' → logprob: -6.329530715942383
    6. '-connect' → logprob: -7.329530715942383
    7. '-' → logprob: -7.704530715942383
    8. '-connected' → logprob: -7.829530715942383
    9. ')-' → logprob: -8.204530715942383
    10. ' directions' → logprob: -8.954530715942383

Token 58: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004691068548709154
    2. ' )' → logprob: -6.254691123962402
    3. ').' → logprob: -6.379691123962402
    4. ',' → logprob: -7.629691123962402
    5. '):' → logprob: -8.629691123962402
    6. '),' → logprob: -9.254691123962402
    7. ':' → logprob: -9.379691123962402
    8. '#' → logprob: -10.379691123962402
    9. ')#' → logprob: -10.379691123962402
    10. ')
' → logprob: -10.504691123962402

Token 59: '#' (ID: 2)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.310373991727829
    2. 'dire' → logprob: -1.5603740215301514
    3. '#' → logprob: -4.310373783111572
    4. 'dx' → logprob: -5.060373783111572
    5. 'dirs' → logprob: -5.060373783111572
    6. 'def' → logprob: -5.435373783111572
    7. 'd' → logprob: -5.810373783111572
    8. 'dp' → logprob: -5.935373783111572
    9. 's' → logprob: -5.935373783111572
    10. 'neighbors' → logprob: -6.060373783111572

Token 60: ' Chaque' (ID: 94758)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.20786967873573303
    2. 'dire' → logprob: -2.3328697681427
    3. ' visited' → logprob: -3.8328697681427
    4. '#' → logprob: -4.207869529724121
    5. 'def' → logprob: -4.332869529724121
    6. ' directions' → logprob: -4.707869529724121
    7. 'dx' → logprob: -4.832869529724121
    8. 'from' → logprob: -5.707869529724121
    9. 'vis' → logprob: -5.707869529724121
    10. 's' → logprob: -5.832869529724121

Token 61: ' case' (ID: 1890)
  Prédit: 'rose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rose' → logprob: -0.8389890789985657
    2. 'ros' → logprob: -1.838989019393921
    3. ' rose' → logprob: -2.213989019393921
    4. ' '#'' → logprob: -2.963989019393921
    5. '#' → logprob: -3.213989019393921
    6. '```' → logprob: -3.463989019393921
    7. 'point' → logprob: -3.901489019393921
    8. ' point' → logprob: -4.0264892578125
    9. 'cell' → logprob: -4.0264892578125
    10. 'ligne' → logprob: -4.4639892578125

Token 62: ' rose' (ID: 23103)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.544081449508667
    2. ' is' → logprob: -3.294081449508667
    3. ' a' → logprob: -3.544081449508667
    4. ' de' → logprob: -3.669081449508667
    5. ' garden' → logprob: -3.669081449508667
    6. ',' → logprob: -3.669081449508667
    7. ' jardin' → logprob: -4.044081687927246
    8. ' ' → logprob: -4.169081687927246
    9. ' soit' → logprob: -4.169081687927246
    10. ' either' → logprob: -4.169081687927246

Token 63: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.4266383647918701
    2. ' ' → logprob: -1.6766383647918701
    3. '.' → logprob: -2.05163836479187
    4. ' is' → logprob: -2.92663836479187
    5. ' (' → logprob: -3.05163836479187
    6. ',' → logprob: -3.05163836479187
    7. '#' → logprob: -3.30163836479187
    8. 'est' → logprob: -3.55163836479187
    9. ' '#'' → logprob: -3.80163836479187
    10. ''' → logprob: -4.301638603210449

Token 64: ' '#'' (ID: 139870)
  Prédit: ' soit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.6751391291618347
    2. ' un' → logprob: -1.9251391887664795
    3. ' connect' → logprob: -3.1751391887664795
    4. 'connect' → logprob: -3.3001391887664795
    5. ' reli' → logprob: -3.4251391887664795
    6. ' mar' → logprob: -3.5501391887664795
    7. ' entour' → logprob: -3.6751391887664795
    8. ' au' → logprob: -3.8001391887664795
    9. 'so' → logprob: -4.4251389503479
    10. 'un' → logprob: -4.4251389503479

Token 65: ' sinon' (ID: 52915)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.3381810188293457
    2. '#' → logprob: -2.3381810188293457
    3. 'dire' → logprob: -2.4631810188293457
    4. 'def' → logprob: -3.9631810188293457
    5. 'neighbors' → logprob: -4.338181018829346
    6. ' directions' → logprob: -4.338181018829346
    7. 'dp' → logprob: -4.588181018829346
    8. ' visited' → logprob: -5.213181018829346
    9. 'dist' → logprob: -5.213181018829346
    10. 'import' → logprob: -5.338181018829346

Token 66: ' '.' (ID: 12662)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.7013357877731323
    2. '
' → logprob: -1.2013357877731323
    3. '#' → logprob: -1.9513357877731323
    4. 'def' → logprob: -4.076335906982422
    5. '

' → logprob: -4.951335906982422
    6. 'distance' → logprob: -4.951335906982422
    7. ' visited' → logprob: -5.076335906982422
    8. 'dist' → logprob: -5.451335906982422
    9. 'dire' → logprob: -5.701335906982422
    10. 'neighbors' → logprob: -6.201335906982422

Token 67: ''
' (ID: 2207)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.8457102179527283
    2. '#' → logprob: -1.720710277557373
    3. '
' → logprob: -2.095710277557373
    4. 'dire' → logprob: -2.220710277557373
    5. '

' → logprob: -2.970710277557373
    6. 'def' → logprob: -3.095710277557373
    7. 'neighbors' → logprob: -4.595710277557373
    8. 'dist' → logprob: -4.720710277557373
    9. 'distance' → logprob: -4.845710277557373
    10. 'dp' → logprob: -4.970710277557373

Token 68: '#' (ID: 2)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.1594085842370987
    2. 'dire' → logprob: -3.2844085693359375
    3. '#' → logprob: -3.5344085693359375
    4. 'dp' → logprob: -4.0344085693359375
    5. 'def' → logprob: -4.2844085693359375
    6. 'neighbors' → logprob: -4.2844085693359375
    7. 'dist' → logprob: -5.0344085693359375
    8. '
' → logprob: -5.7844085693359375
    9. 'rose' → logprob: -6.1594085693359375
    10. 'graph' → logprob: -6.1594085693359375

Token 69: ' La' (ID: 3038)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.2282295972108841
    2. 'def' → logprob: -2.728229522705078
    3. 'from' → logprob: -2.728229522705078
    4. 'dp' → logprob: -3.603229522705078
    5. 'dire' → logprob: -4.228229522705078
    6. '#' → logprob: -4.603229522705078
    7. 'dist' → logprob: -4.853229522705078
    8. 'import' → logprob: -5.728229522705078
    9. 'dx' → logprob: -6.478229522705078
    10. ' visited' → logprob: -6.478229522705078

Token 70: ' balle' (ID: 147386)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4873563349246979
    2. 'def' → logprob: -1.6123563051223755
    3. 'from' → logprob: -2.487356424331665
    4. 'r' → logprob: -3.862356424331665
    5. ' from' → logprob: -4.862356185913086
    6. 'visited' → logprob: -4.987356185913086
    7. ' roses' → logprob: -5.362356185913086
    8. 'import' → logprob: -5.362356185913086
    9. 'goal' → logprob: -5.487356185913086
    10. 'd' → logprob: -5.612356185913086

Token 71: ' part' (ID: 997)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.159220576286316
    2. 's' → logprob: -1.284220576286316
    3. ' ' → logprob: -1.659220576286316
    4. ' '' → logprob: -2.9092206954956055
    5. 'est' → logprob: -3.2842206954956055
    6. ' doit' → logprob: -3.6592206954956055
    7. ' is' → logprob: -4.6592206954956055
    8. ''' → logprob: -4.7842206954956055
    9. '.' → logprob: -4.7842206954956055
    10. '_' → logprob: -5.0342206954956055

Token 72: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.27267763018608093
    2. ' d' → logprob: -1.7726776599884033
    3. 'de' → logprob: -3.2726776599884033
    4. 'd' → logprob: -4.272677421569824
    5. ' du' → logprob: -5.647677421569824
    6. 'en' → logprob: -5.647677421569824
    7. ' en' → logprob: -6.272677421569824
    8. 'ir' → logprob: -6.647677421569824
    9. 'ant' → logprob: -6.772677421569824
    10. 'ent' → logprob: -7.022677421569824

Token 73: ' coin' (ID: 22179)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.1993820667266846
    2. 'point' → logprob: -2.0743820667266846
    3. 'coin' → logprob: -2.1993820667266846
    4. ' point' → logprob: -2.5743820667266846
    5. ' coin' → logprob: -2.6993820667266846
    6. 'b' → logprob: -3.0743820667266846
    7. ''s' → logprob: -3.5743820667266846
    8. ''#' → logprob: -3.6993820667266846
    9. ''b' → logprob: -3.8243820667266846
    10. '(' → logprob: -3.8243820667266846

Token 74: ' bas' (ID: 3222)
  Prédit: ' supérieur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' supérieur' → logprob: -0.23408247530460358
    2. '(' → logprob: -3.3590824604034424
    3. 'sup' → logprob: -3.7340824604034424
    4. '[' → logprob: -3.8590824604034424
    5. ' inférieur' → logprob: -4.2340826988220215
    6. '0' → logprob: -4.3590826988220215
    7. '`' → logprob: -4.3590826988220215
    8. 'g' → logprob: -4.4840826988220215
    9. ' ' → logprob: -4.4840826988220215
    10. ' (' → logprob: -4.6090826988220215

Token 75: ' gauche' (ID: 58367)
  Prédit: ' gauche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gauche' → logprob: -0.9450246095657349
    2. ' droite' → logprob: -1.5700246095657349
    3. ' droit' → logprob: -1.6950246095657349
    4. '-dro' → logprob: -2.0700244903564453
    5. 'dro' → logprob: -3.5700244903564453
    6. '-' → logprob: -3.5700244903564453
    7. '-right' → logprob: -4.070024490356445
    8. 'g' → logprob: -5.570024490356445
    9. '-left' → logprob: -5.570024490356445
    10. '-d' → logprob: -6.570024490356445

Token 76: ' (' (ID: 350)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5292869210243225
    2. 'r' → logprob: -2.4042868614196777
    3. 'd' → logprob: -2.5292868614196777
    4. 'x' → logprob: -3.0292868614196777
    5. ')' → logprob: -3.1542868614196777
    6. '
' → logprob: -3.5292868614196777
    7. 'def' → logprob: -4.279286861419678
    8. 'dp' → logprob: -4.279286861419678
    9. 'y' → logprob: -4.654286861419678
    10. 'v' → logprob: -5.154286861419678

Token 77: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.5475127100944519
    2. ')' → logprob: -1.2975127696990967
    3. ' H' → logprob: -2.5475127696990967
    4. '0' → logprob: -3.7975127696990967
    5. ' )' → logprob: -4.297512531280518
    6. ' (' → logprob: -4.422512531280518
    7. ',' → logprob: -4.672512531280518
    8. '(H' → logprob: -6.422512531280518
    9. ''' → logprob: -6.672512531280518
    10. '')' → logprob: -6.797512531280518

Token 78: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02659008838236332
    2. ' -' → logprob: -3.65159010887146
    3. ',' → logprob: -9.026590347290039
    4. ')' → logprob: -9.151590347290039
    5. ' ' → logprob: -10.776590347290039
    6. '1' → logprob: -11.401590347290039
    7. '-
' → logprob: -11.776590347290039
    8. ' ,' → logprob: -11.901590347290039
    9. '),' → logprob: -12.901590347290039
    10. '-,' → logprob: -12.901590347290039

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00031294001382775605
    2. ' ' → logprob: -8.125312805175781
    3. ')' → logprob: -12.000312805175781
    4. '2' → logprob: -12.875312805175781
    5. '-' → logprob: -13.125312805175781
    6. '<|end|>' → logprob: -13.125312805175781
    7. '```' → logprob: -14.125312805175781
    8. '
' → logprob: -14.125312805175781
    9. '

' → logprob: -14.625312805175781
    10. '１' → logprob: -14.812812805175781

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019187072291970253
    2. ')' → logprob: -4.019186973571777
    3. ' ,' → logprob: -7.519186973571777
    4. '),' → logprob: -7.894186973571777
    5. ')(' → logprob: -10.519186973571777
    6. '),(' → logprob: -10.894186973571777
    7. '][' → logprob: -11.269186973571777
    8. ').' → logprob: -11.769186973571777
    9. ',
' → logprob: -12.144186973571777
    10. '-' → logprob: -12.269186973571777

Token 81: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2254328727722168
    2. ' ' → logprob: -1.6004328727722168
    3. ')' → logprob: -12.100433349609375
    4. '<|end|>' → logprob: -12.350433349609375
    5. ' ' → logprob: -12.725433349609375
    6. ',' → logprob: -12.725433349609375
    7. '  ' → logprob: -13.100433349609375
    8. ' 
' → logprob: -14.912933349609375
    9. ' ,' → logprob: -14.912933349609375
    10. '`' → logprob: -14.975433349609375

Token 82: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.076218025758862e-05
    2. ' )' → logprob: -10.375070571899414
    3. ')
' → logprob: -11.000070571899414
    4. ')#' → logprob: -11.375070571899414
    5. '),' → logprob: -11.875070571899414
    6. ')

' → logprob: -13.750070571899414
    7. '#' → logprob: -14.125070571899414
    8. ').' → logprob: -14.750070571899414
    9. ')
' → logprob: -14.875070571899414
    10. '）' → logprob: -15.250070571899414

Token 83: ' et' (ID: 859)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5803830027580261
    2. 'visited' → logprob: -1.830383062362671
    3. 'ball' → logprob: -2.330383062362671
    4. 'dx' → logprob: -2.705383062362671
    5. 'queue' → logprob: -3.205383062362671
    6. 'dist' → logprob: -3.955383062362671
    7. '#' → logprob: -4.205382823944092
    8. 'dire' → logprob: -4.705382823944092
    9. 'x' → logprob: -5.205382823944092
    10. 'q' → logprob: -5.830382823944092

Token 84: ' lance' (ID: 66715)
  Prédit: ' se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' se' → logprob: -1.4552236795425415
    2. ' doit' → logprob: -1.7052236795425415
    3. ' part' → logprob: -2.330223560333252
    4. 'rem' → logprob: -2.330223560333252
    5. ' rem' → logprob: -2.580223560333252
    6. ' peut' → logprob: -2.705223560333252
    7. 'pe' → logprob: -2.705223560333252
    8. ' monte' → logprob: -3.205223560333252
    9. 'se' → logprob: -3.330223560333252
    10. 'part' → logprob: -4.455223560333252

Token 85: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.6097933650016785
    2. ' un' → logprob: -1.8597934246063232
    3. ' la' → logprob: -2.2347934246063232
    4. 'un' → logprob: -3.2347934246063232
    5. 'une' → logprob: -3.3597934246063232
    6. 's' → logprob: -3.4847934246063232
    7. 'le' → logprob: -4.234793186187744
    8. 'd' → logprob: -4.234793186187744
    9. 'es' → logprob: -4.984793186187744
    10. 'e' → logprob: -4.984793186187744

Token 86: ' ligne' (ID: 19583)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5221832990646362
    2. ' balle' → logprob: -1.7721832990646362
    3. 'ball' → logprob: -2.022183418273926
    4. 'bou' → logprob: -3.397183418273926
    5. ' ball' → logprob: -4.522183418273926
    6. ' boule' → logprob: -4.897183418273926
    7. 'direction' → logprob: -5.272183418273926
    8. 's' → logprob: -5.397183418273926
    9. ' bou' → logprob: -5.522183418273926
    10. ' direction' → logprob: -5.834683418273926

Token 87: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6810808777809143
    2. '#' → logprob: -1.9310808181762695
    3. ')' → logprob: -2.0560808181762695
    4. '.' → logprob: -3.0560808181762695
    5. 's' → logprob: -3.3060808181762695
    6. 'def' → logprob: -3.6810808181762695
    7. ',' → logprob: -3.8060808181762695
    8. '<|end|>' → logprob: -4.1810808181762695
    9. ' #' → logprob: -5.0560808181762695
    10. '(' → logprob: -5.0560808181762695

Token 88: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.14192798733711243
    2. ')' → logprob: -3.51692795753479
    3. 'for' → logprob: -3.51692795753479
    4. '.' → logprob: -3.89192795753479
    5. 'def' → logprob: -3.89192795753479
    6. 's' → logprob: -5.391928195953369
    7. ' for' → logprob: -6.016928195953369
    8. 'while' → logprob: -6.016928195953369
    9. 'import' → logprob: -6.141928195953369
    10. '...' → logprob: -6.141928195953369

Token 89: ' Le' (ID: 2018)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.48347002267837524
    2. 'dx' → logprob: -1.7334699630737305
    3. 'direction' → logprob: -2.7334699630737305
    4. 'for' → logprob: -3.2334699630737305
    5. 'def' → logprob: -3.4834699630737305
    6. 'd' → logprob: -4.1084699630737305
    7. 'from' → logprob: -4.3584699630737305
    8. ' for' → logprob: -5.2334699630737305
    9. 'dp' → logprob: -5.3584699630737305
    10. ' direction' → logprob: -5.4834699630737305

Token 90: ' but' (ID: 889)
  Prédit: ' but'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.8449356555938721
    2. ' code' → logprob: -1.969935655593872
    3. 'but' → logprob: -2.219935655593872
    4. 's' → logprob: -3.094935655593872
    5. 'ball' → logprob: -3.344935655593872
    6. '#' → logprob: -3.594935655593872
    7. 'code' → logprob: -3.844935655593872
    8. 'jeu' → logprob: -4.594935417175293
    9. 'l' → logprob: -4.719935417175293
    10. ' déplacement' → logprob: -4.844935417175293

Token 91: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.6204080581665039
    2. 'est' → logprob: -1.120408058166504
    3. '#' → logprob: -2.870408058166504
    4. ' is' → logprob: -3.370408058166504
    5. '=' → logprob: -3.620408058166504
    6. 'is' → logprob: -4.745408058166504
    7. 's' → logprob: -5.745408058166504
    8. ' =' → logprob: -6.120408058166504
    9. ':' → logprob: -7.495408058166504
    10. 'n' → logprob: -7.745408058166504

Token 92: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.27212658524513245
    2. ' d' → logprob: -2.3971266746520996
    3. 'de' → logprob: -2.6471266746520996
    4. 'd' → logprob: -3.0221266746520996
    5. ' ' → logprob: -4.3971266746521
    6. ' to' → logprob: -4.8971266746521
    7. 'to' → logprob: -5.7721266746521
    8. '#' → logprob: -6.2721266746521
    9. ':' → logprob: -7.5221266746521
    10. ',' → logprob: -7.6471266746521

Token 93: ' trouver' (ID: 23195)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.622885525226593
    2. 'determ' → logprob: -2.6228854656219482
    3. 'v' → logprob: -2.8728854656219482
    4. 's' → logprob: -2.9978854656219482
    5. 'dé' → logprob: -2.9978854656219482
    6. ' déterminer' → logprob: -3.4978854656219482
    7. 'det' → logprob: -3.7478854656219482
    8. ' savoir' → logprob: -3.7478854656219482
    9. 'voir' → logprob: -3.9978854656219482
    10. 'd' → logprob: -3.9978854656219482

Token 94: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9732696413993835
    2. 'le' → logprob: -1.4732697010040283
    3. 'la' → logprob: -1.9732697010040283
    4. ' le' → logprob: -2.0982697010040283
    5. 'l' → logprob: -3.2232697010040283
    6. ' l' → logprob: -4.598269462585449
    7. 's' → logprob: -4.598269462585449
    8. 'si' → logprob: -4.598269462585449
    9. ' si' → logprob: -4.723269462585449
    10. ' ' → logprob: -4.723269462585449

Token 95: ' droite' (ID: 61428)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -1.754860758781433
    2. ' longueur' → logprob: -2.0048608779907227
    3. 'plus' → logprob: -2.2548608779907227
    4. 'distance' → logprob: -2.3798608779907227
    5. 's' → logprob: -2.5048608779907227
    6. ' ' → logprob: -2.8798608779907227
    7. ' plus' → logprob: -3.0048608779907227
    8. 'nombre' → logprob: -3.1298608779907227
    9. 'l' → logprob: -3.5048608779907227
    10. ' distance' → logprob: -4.004860877990723

Token 96: ' part' (ID: 997)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08593957871198654
    2. '_' → logprob: -3.585939645767212
    3. 's' → logprob: -3.960939645767212
    4. ',' → logprob: -4.460939407348633
    5. 'def' → logprob: -5.460939407348633
    6. '<|end|>' → logprob: -5.585939407348633
    7. '(' → logprob: -5.960939407348633
    8. '#' → logprob: -5.960939407348633
    9. ''' → logprob: -6.335939407348633
    10. ' =' → logprob: -6.960939407348633

Token 97: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.010678142309188843
    2. 'ie' → logprob: -5.260678291320801
    3. 'i' → logprob: -5.885678291320801
    4. 'ir' → logprob: -6.885678291320801
    5. 'e' → logprob: -7.760678291320801
    6. 'a' → logprob: -8.0106782913208
    7. '```' → logprob: -8.1356782913208
    8. 'ante' → logprob: -8.2606782913208
    9. 'd' → logprob: -8.8856782913208
    10. ' d' → logprob: -10.1356782913208

Token 98: ' de' (ID: 334)
  Prédit: 'du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'du' → logprob: -0.5296863913536072
    2. ' du' → logprob: -1.529686450958252
    3. 'de' → logprob: -1.904686450958252
    4. 'from' → logprob: -3.404686450958252
    5. ' de' → logprob: -4.779686450958252
    6. 'd' → logprob: -6.279686450958252
    7. ' from' → logprob: -6.279686450958252
    8. '```' → logprob: -8.654685974121094
    9. 'del' → logprob: -9.904685974121094
    10. 'ent' → logprob: -10.904685974121094

Token 99: ' ce' (ID: 2357)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.2510606646537781
    2. ' (' → logprob: -2.751060724258423
    3. '<|end|>' → logprob: -3.001060724258423
    4. '(' → logprob: -3.376060724258423
    5. 'H' → logprob: -3.501060724258423
    6. 'l' → logprob: -4.501060485839844
    7. '(l' → logprob: -4.501060485839844
    8. 'la' → logprob: -5.751060485839844
    9. ' la' → logprob: -5.876060485839844
    10. ' H' → logprob: -5.876060485839844

Token 100: ' point' (ID: 2438)
  Prédit: ' coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.4133884608745575
    2. 'coin' → logprob: -1.1633884906768799
    3. ' point' → logprob: -4.413388252258301
    4. 'point' → logprob: -4.413388252258301
    5. ' même' → logprob: -7.163388252258301
    6. 'angle' → logprob: -8.4133882522583
    7. 'c' → logprob: -8.9133882522583
    8. 'corner' → logprob: -9.0383882522583
    9. 's' → logprob: -9.1633882522583
    10. '#' → logprob: -9.2883882522583

Token 101: ' divis' (ID: 37826)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0013647079467773
    2. ' ' → logprob: -1.3763647079467773
    3. '.' → logprob: -1.8763647079467773
    4. ',' → logprob: -2.7513647079467773
    5. 'def' → logprob: -2.8763647079467773
    6. ':' → logprob: -3.3763647079467773
    7. '_' → logprob: -4.251364707946777
    8. ')' → logprob: -4.251364707946777
    9. 'd' → logprob: -4.376364707946777
    10. '=' → logprob: -5.251364707946777

Token 102: 'ant' (ID: 493)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04858850687742233
    2. 'd' → logprob: -4.423588275909424
    3. 'ant' → logprob: -4.423588275909424
    4. 'ng' → logprob: -5.173588275909424
    5. 'ser' → logprob: -5.798588275909424
    6. '#' → logprob: -6.298588275909424
    7. 'zant' → logprob: -6.298588275909424
    8. 'nt' → logprob: -6.673588275909424
    9. 'de' → logprob: -6.673588275909424
    10. 'se' → logprob: -6.673588275909424

Token 103: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.1005817651748657
    2. ' la' → logprob: -1.6005817651748657
    3. '<|end|>' → logprob: -2.100581645965576
    4. 'the' → logprob: -2.600581645965576
    5. ' le' → logprob: -2.600581645965576
    6. ' ' → logprob: -2.725581645965576
    7. ' the' → logprob: -3.725581645965576
    8. ' garden' → logprob: -4.350581645965576
    9. 'la' → logprob: -4.350581645965576
    10. 'l' → logprob: -4.475581645965576

Token 104: ' forme' (ID: 27450)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.575640082359314
    2. 'garden' → logprob: -1.700640082359314
    3. ' jardin' → logprob: -1.825640082359314
    4. ' garden' → logprob: -3.0756402015686035
    5. 'ros' → logprob: -4.0756402015686035
    6. 'rose' → logprob: -4.9506402015686035
    7. '```' → logprob: -5.4506402015686035
    8. '#' → logprob: -5.8256402015686035
    9. 'gr' → logprob: -6.5131402015686035
    10. ' rose' → logprob: -6.5756402015686035

Token 105: ' en' (ID: 469)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6178157329559326
    2. '.' → logprob: -1.8678157329559326
    3. ',' → logprob: -2.1178157329559326
    4. '#' → logprob: -2.4928157329559326
    5. '_' → logprob: -3.6178157329559326
    6. 'def' → logprob: -3.7428157329559326
    7. ':' → logprob: -3.8678157329559326
    8. ')' → logprob: -4.617815971374512
    9. 'import' → logprob: -5.617815971374512
    10. ' #' → logprob: -5.617815971374512

Token 106: ' un' (ID: 537)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.36169248819351196
    2. ' deux' → logprob: -1.3616924285888672
    3. '2' → logprob: -3.236692428588867
    4. 'two' → logprob: -5.861692428588867
    5. '```' → logprob: -6.236692428588867
    6. 'exact' → logprob: -6.986692428588867
    7. ' ' → logprob: -7.361692428588867
    8. ' two' → logprob: -7.486692428588867
    9. ' exactement' → logprob: -8.861692428588867
    10. ' au' → logprob: -8.861692428588867

Token 107: ' maximum' (ID: 10562)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.15416112542152405
    2. 'angle' → logprob: -2.904161214828491
    3. '```' → logprob: -4.279160976409912
    4. 'de' → logprob: -5.029160976409912
    5. ' morceau' → logprob: -5.154160976409912
    6. 'unique' → logprob: -5.279160976409912
    7. ' seul' → logprob: -5.404160976409912
    8. ' ' → logprob: -5.529160976409912
    9. 's' → logprob: -5.529160976409912
    10. ' sens' → logprob: -5.654160976409912

Token 108: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3485078811645508
    2. ' ' → logprob: -1.5985078811645508
    3. ' _' → logprob: -3.348507881164551
    4. ')' → logprob: -3.723507881164551
    5. '<|end|>' → logprob: -5.098507881164551
    6. ' =' → logprob: -5.473507881164551
    7. ' \' → logprob: -5.473507881164551
    8. '=' → logprob: -5.598507881164551
    9. 's' → logprob: -5.848507881164551
    10. '#' → logprob: -5.848507881164551

Token 109: ' parties' (ID: 13531)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7935092449188232
    2. 'ros' → logprob: -1.5435092449188232
    3. '2' → logprob: -2.0435092449188232
    4. ' deux' → logprob: -2.5435092449188232
    5. 'part' → logprob: -2.9185092449188232
    6. ' parts' → logprob: -3.5435092449188232
    7. 'parts' → logprob: -3.9185092449188232
    8. ' roses' → logprob: -5.043509483337402
    9. '```' → logprob: -5.543509483337402
    10. ' ' → logprob: -5.543509483337402

Token 110: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1259622722864151
    2. ' ' → logprob: -3.000962257385254
    3. 'import' → logprob: -3.750962257385254
    4. '
' → logprob: -4.125962257385254
    5. 'def' → logprob: -4.375962257385254
    6. ')' → logprob: -4.875962257385254
    7. ',' → logprob: -6.750962257385254
    8. '#
' → logprob: -6.750962257385254
    9. '.' → logprob: -6.875962257385254
    10. 'from' → logprob: -7.000962257385254

Token 111: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.45252421498298645
    2. 'd' → logprob: -1.827524185180664
    3. 'dx' → logprob: -2.577524185180664
    4. 'def' → logprob: -3.702524185180664
    5. 'import' → logprob: -3.827524185180664
    6. '.' → logprob: -4.077524185180664
    7. 'dire' → logprob: -4.077524185180664
    8. 's' → logprob: -4.577524185180664
    9. 'from' → logprob: -5.077524185180664
    10. '
' → logprob: -5.452524185180664

Token 112: ' Une' (ID: 19758)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13678430020809174
    2. ')' → logprob: -3.011784315109253
    3. 'def' → logprob: -3.261784315109253
    4. '.' → logprob: -3.761784315109253
    5. 'import' → logprob: -5.136784076690674
    6. 'from' → logprob: -6.136784076690674
    7. '=' → logprob: -6.386784076690674
    8. ',' → logprob: -6.511784076690674
    9. ']' → logprob: -7.261784076690674
    10. '```' → logprob: -7.386784076690674

Token 113: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.4529930651187897
    2. ' droite' → logprob: -2.077993154525757
    3. 'ligne' → logprob: -3.327993154525757
    4. ' dro' → logprob: -3.327993154525757
    5. ' ligne' → logprob: -3.577993154525757
    6. '#' → logprob: -3.702993154525757
    7. 'import' → logprob: -3.702993154525757
    8. 'def' → logprob: -3.952993154525757
    9. 'part' → logprob: -4.952992916107178
    10. 's' → logprob: -5.452992916107178

Token 114: ' div' (ID: 4223)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.0028061794582754374
    2. 'isant' → logprob: -6.502806186676025
    3. 'ide' → logprob: -7.252806186676025
    4. 'e' → logprob: -9.002805709838867
    5. '#' → logprob: -9.377805709838867
    6. '```' → logprob: -9.502805709838867
    7. 'i' → logprob: -9.877805709838867
    8. 'id' → logprob: -9.877805709838867
    9. 'iser' → logprob: -10.127805709838867
    10. 'is' → logprob: -11.002805709838867

Token 116: ' une' (ID: 2463)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6015958189964294
    2. 'le' → logprob: -1.3515958786010742
    3. ' la' → logprob: -2.476595878601074
    4. '<|end|>' → logprob: -3.226595878601074
    5. 'the' → logprob: -4.101595878601074
    6. 'l' → logprob: -4.226595878601074
    7. 'en' → logprob: -4.351595878601074
    8. ' ' → logprob: -5.726595878601074
    9. 'une' → logprob: -5.851595878601074
    10. ' le' → logprob: -6.226595878601074

Token 117: ' ent' (ID: 1121)
  Prédit: 'forme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forme' → logprob: -1.0294781923294067
    2. ' forme' → logprob: -1.4044781923294067
    3. 'rose' → logprob: -2.279478073120117
    4. 'ent' → logprob: -2.654478073120117
    5. 'form' → logprob: -2.779478073120117
    6. 'shape' → logprob: -4.154478073120117
    7. 'figure' → logprob: -4.466978073120117
    8. ' rose' → logprob: -4.779478073120117
    9. 'ensemble' → logprob: -4.841978073120117
    10. 'ros' → logprob: -4.841978073120117

Token 118: 'ité' (ID: 3761)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8191558718681335
    2. 'ité' → logprob: -1.1941559314727783
    3. 'e' → logprob: -1.8191559314727783
    4. '#' → logprob: -3.4441559314727783
    5. 'ity' → logprob: -3.5691559314727783
    6. 'é' → logprob: -4.944155693054199
    7. 'r' → logprob: -5.694155693054199
    8. '...' → logprob: -6.069155693054199
    9. 're' → logprob: -6.319155693054199
    10. '```' → logprob: -6.319155693054199

Token 119: ' en' (ID: 469)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3232353925704956
    2. '#' → logprob: -1.5732353925704956
    3. 'def' → logprob: -1.6982353925704956
    4. '.' → logprob: -2.198235511779785
    5. ')' → logprob: -2.698235511779785
    6. ':' → logprob: -2.948235511779785
    7. '_' → logprob: -3.198235511779785
    8. ' ' → logprob: -3.948235511779785
    9. '<|end|>' → logprob: -4.073235511779785
    10. '=' → logprob: -4.448235511779785

Token 120: ' autant' (ID: 46683)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.521929919719696
    2. '2' → logprob: -1.2719299793243408
    3. ' deux' → logprob: -2.896929979324341
    4. ' au' → logprob: -3.896929979324341
    5. 'au' → logprob: -4.021929740905762
    6. 'plus' → logprob: -5.521929740905762
    7. 'two' → logprob: -5.646929740905762
    8. ' ' → logprob: -5.771929740905762
    9. 'exact' → logprob: -5.771929740905762
    10. '```' → logprob: -5.771929740905762

Token 121: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.09133552014827728
    2. ' de' → logprob: -2.5913355350494385
    3. '<|end|>' → logprob: -5.466335296630859
    4. '#' → logprob: -5.841335296630859
    5. 'd' → logprob: -6.341335296630859
    6. '_de' → logprob: -6.841335296630859
    7. 'parts' → logprob: -7.466335296630859
    8. '<|end|>' → logprob: -7.966335296630859
    9. '_parts' → logprob: -8.09133529663086
    10. 'part' → logprob: -8.84133529663086

Token 122: ' parties' (ID: 13531)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.10078776627779007
    2. 'parts' → logprob: -2.850787878036499
    3. 'com' → logprob: -4.35078763961792
    4. ' morceaux' → logprob: -5.10078763961792
    5. ' parts' → logprob: -5.47578763961792
    6. 'pieces' → logprob: -5.97578763961792
    7. 'components' → logprob: -5.97578763961792
    8. 'm' → logprob: -6.47578763961792
    9. '```' → logprob: -6.60078763961792
    10. 'segments' → logprob: -7.10078763961792

Token 123: ' que' (ID: 661)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.608190655708313
    2. '#' → logprob: -1.108190655708313
    3. '.' → logprob: -3.4831905364990234
    4. '_' → logprob: -3.4831905364990234
    5. 'def' → logprob: -3.8581905364990234
    6. ',' → logprob: -4.108190536499023
    7. ' 
' → logprob: -4.858190536499023
    8. ':' → logprob: -5.608190536499023
    9. '
' → logprob: -5.733190536499023
    10. '=' → logprob: -6.233190536499023

Token 124: ':
' (ID: 734)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.0588786602020264
    2. 'possible' → logprob: -1.1838786602020264
    3. '<|end|>' → logprob: -2.0588786602020264
    4. 'the' → logprob: -2.6838786602020264
    5. 'la' → logprob: -3.1838786602020264
    6. 'les' → logprob: -3.6838786602020264
    7. ' possible' → logprob: -3.8088786602020264
    8. 'l' → logprob: -4.4338788986206055
    9. 'there' → logprob: -4.8088788986206055
    10. 'son' → logprob: -5.0588788986206055

Token 125: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44421228766441345
    2. '1' → logprob: -1.3192123174667358
    3. '<|end|>' → logprob: -3.0692121982574463
    4. ''' → logprob: -3.6942121982574463
    5. ')' → logprob: -5.319212436676025
    6. '2' → logprob: -6.444212436676025
    7. ' ' → logprob: -6.694212436676025
    8. ' \' → logprob: -6.819212436676025
    9. ' a' → logprob: -6.944212436676025
    10. '"' → logprob: -6.944212436676025

Token 126: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.81673663854599
    2. ' ' → logprob: -1.4417366981506348
    3. ''' → logprob: -2.9417366981506348
    4. '```' → logprob: -3.0667366981506348
    5. '"' → logprob: -3.1917366981506348
    6. '#' → logprob: -3.1917366981506348
    7. '<|end|>' → logprob: -3.6917366981506348
    8. '2' → logprob: -4.316736698150635
    9. ' the' → logprob: -4.816736698150635
    10. ')' → logprob: -4.941736698150635

Token 127: 'nombre' (ID: 28576)
  Prédit: 'nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.67286217212677
    2. '#' → logprob: -2.1728620529174805
    3. '1' → logprob: -2.4228620529174805
    4. 'le' → logprob: -2.7978620529174805
    5. ' nombre' → logprob: -2.9228620529174805
    6. '2' → logprob: -3.1728620529174805
    7. 'ros' → logprob: -3.6728620529174805
    8. ' nombres' → logprob: -3.7978620529174805
    9. 'len' → logprob: -3.7978620529174805
    10. ' le' → logprob: -4.4228620529174805

Token 128: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6041804552078247
    2. '_de' → logprob: -1.8541804552078247
    3. 'de' → logprob: -2.104180335998535
    4. ')' → logprob: -3.604180335998535
    5. '_' → logprob: -3.979180335998535
    6. ' d' → logprob: -3.979180335998535
    7. '#' → logprob: -4.229180335998535
    8. ' of' → logprob: -4.354180335998535
    9. ' des' → logprob: -4.604180335998535
    10. 'of' → logprob: -4.729180335998535

Token 129: ' blocs' (ID: 182599)
  Prédit: 'ros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ros' → logprob: -1.439018964767456
    2. 'segments' → logprob: -1.939018964767456
    3. 'tr' → logprob: -2.064018964767456
    4. 'inter' → logprob: -2.189018964767456
    5. 'points' → logprob: -2.189018964767456
    6. ' intersections' → logprob: -2.939018964767456
    7. ')' → logprob: -3.439018964767456
    8. 'com' → logprob: -3.564018964767456
    9. 'vo' → logprob: -3.939018964767456
    10. ' segments' → logprob: -4.189019203186035

Token 130: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.0554685592651367
    2. ' de' → logprob: -2.0554685592651367
    3. ' -' → logprob: -2.3054685592651367
    4. '_de' → logprob: -2.5554685592651367
    5. 'de' → logprob: -2.5554685592651367
    6. '_connect' → logprob: -2.8054685592651367
    7. ' adjacent' → logprob: -2.9304685592651367
    8. '_adj' → logprob: -2.9304685592651367
    9. ' voisins' → logprob: -3.1804685592651367
    10. 'adj' → logprob: -3.6804685592651367

Token 131: ' rose' (ID: 23103)
  Prédit: 'ros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ros' → logprob: -0.448901891708374
    2. '#' → logprob: -2.198901891708374
    3. ''#' → logprob: -2.948901891708374
    4. ' roses' → logprob: -3.073901891708374
    5. 'rose' → logprob: -3.073901891708374
    6. ' '#'' → logprob: -3.823901891708374
    7. 'la' → logprob: -4.573902130126953
    8. '```' → logprob: -4.698902130126953
    9. 'j' → logprob: -5.323902130126953
    10. ' la' → logprob: -5.573902130126953

Token 132: ' travers' (ID: 26957)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36465856432914734
    2. ',' → logprob: -2.3646585941314697
    3. ' '#'' → logprob: -2.3646585941314697
    4. 's' → logprob: -4.114658355712891
    5. ''#' → logprob: -4.114658355712891
    6. ' )' → logprob: -4.614658355712891
    7. ''' → logprob: -4.989658355712891
    8. ' voisins' → logprob: -4.989658355712891
    9. 'adj' → logprob: -5.114658355712891
    10. 'sur' → logprob: -5.364658355712891

Token 133: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.09934929013252258
    2. 's' → logprob: -2.9743492603302
    3. 'es' → logprob: -4.224349498748779
    4. 'ant' → logprob: -4.349349498748779
    5. 'é' → logprob: -4.849349498748779
    6. '#' → logprob: -5.099349498748779
    7. 'ées' → logprob: -6.974349498748779
    8. 'e' → logprob: -8.349349021911621
    9. ')' → logprob: -8.349349021911621
    10. 'ants' → logprob: -8.724349021911621

Token 134: ' par' (ID: 686)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10891900211572647
    2. '+' → logprob: -2.9839189052581787
    3. ' )' → logprob: -4.483919143676758
    4. '-' → logprob: -4.608919143676758
    5. ' +' → logprob: -4.608919143676758
    6. '#' → logprob: -4.858919143676758
    7. ',' → logprob: -4.983919143676758
    8. ' -' → logprob: -5.858919143676758
    9. ')+' → logprob: -6.733919143676758
    10. ' #' → logprob: -7.483919143676758

Token 135: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.09110014885663986
    2. 'la' → logprob: -2.5911002159118652
    3. ' cette' → logprob: -5.341100215911865
    4. ')' → logprob: -5.716100215911865
    5. 'the' → logprob: -7.091100215911865
    6. 'l' → logprob: -7.216100215911865
    7. ' ' → logprob: -7.466100215911865
    8. 'a' → logprob: -8.341099739074707
    9. ' l' → logprob: -8.341099739074707
    10. ' ' → logprob: -8.591099739074707

Token 136: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.07160216569900513
    2. ' droite' → logprob: -2.9466021060943604
    3. 'ligne' → logprob: -5.1966023445129395
    4. 'd' → logprob: -5.5716023445129395
    5. ' dro' → logprob: -5.5716023445129395
    6. ' ligne' → logprob: -6.4466023445129395
    7. 'ray' → logprob: -8.321601867675781
    8. 'line' → logprob: -8.446601867675781
    9. ')' → logprob: -8.446601867675781
    10. '```' → logprob: -8.571601867675781

Token 137: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062266577035188675
    2. '#' → logprob: -3.6872665882110596
    3. '+' → logprob: -3.6872665882110596
    4. ')+' → logprob: -5.8122663497924805
    5. ' )' → logprob: -6.0622663497924805
    6. ' +' → logprob: -6.3122663497924805
    7. '-' → logprob: -6.6872663497924805
    8. ')#' → logprob: -8.18726634979248
    9. '*' → logprob: -8.43726634979248
    10. ' #' → logprob: -8.81226634979248

Token 138: ' +' (ID: 659)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9888930320739746
    2. '=' → logprob: -1.2388930320739746
    3. '#' → logprob: -1.8638930320739746
    4. ' ' → logprob: -2.8638930320739746
    5. ':' → logprob: -3.7388930320739746
    6. ')' → logprob: -3.7388930320739746
    7. ',' → logprob: -3.9888930320739746
    8. '[' → logprob: -3.9888930320739746
    9. '.' → logprob: -4.363893032073975
    10. '_' → logprob: -4.738893032073975

Token 139: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20145846903324127
    2. ' ' → logprob: -1.70145845413208
    3. '```' → logprob: -10.826458930969238
    4. '2' → logprob: -11.451458930969238
    5. ' ' → logprob: -12.451458930969238
    6. ' (' → logprob: -12.576458930969238
    7. '(' → logprob: -12.701458930969238
    8. '0' → logprob: -13.326458930969238
    9. '<|end|>' → logprob: -14.576458930969238
    10. '-' → logprob: -14.576458930969238

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008887073956429958
    2. ' ' → logprob: -4.75888729095459
    3. '(' → logprob: -8.75888729095459
    4. '2' → logprob: -9.88388729095459
    5. '-' → logprob: -10.63388729095459
    6. ' (' → logprob: -11.38388729095459
    7. '0' → logprob: -11.50888729095459
    8. ' ' → logprob: -12.50888729095459
    9. ' -' → logprob: -12.57138729095459
    10. '```' → logprob: -12.57138729095459

Token 141: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4313538074493408
    2. ':' → logprob: -1.6813538074493408
    3. ' ' → logprob: -1.6813538074493408
    4. 'def' → logprob: -1.6813538074493408
    5. 'import' → logprob: -2.556353807449341
    6. ')' → logprob: -3.681353807449341
    7. 'for' → logprob: -4.056353569030762
    8. '(' → logprob: -4.306353569030762
    9. '.' → logprob: -4.431353569030762
    10. ',' → logprob: -4.431353569030762

Token 142: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8815796375274658
    2. 'd' → logprob: -1.2565796375274658
    3. ' ' → logprob: -1.3815796375274658
    4. 'def' → logprob: -4.506579399108887
    5. '_' → logprob: -5.006579399108887
    6. ' 
' → logprob: -5.381579399108887
    7. 'x' → logprob: -5.756579399108887
    8. '.' → logprob: -5.881579399108887
    9. ',' → logprob: -5.881579399108887
    10. '(' → logprob: -6.006579399108887

Token 143: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.32325875759124756
    2. 'def' → logprob: -2.073258876800537
    3. ' ' → logprob: -2.573258876800537
    4. 'import' → logprob: -3.573258876800537
    5. ' #' → logprob: -3.573258876800537
    6. 'from' → logprob: -5.073258876800537
    7. ')' → logprob: -5.948258876800537
    8. '(' → logprob: -6.323258876800537
    9. 'd' → logprob: -6.948258876800537
    10. ' def' → logprob: -7.073258876800537

Token 144: ' recherche' (ID: 24975)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9656931161880493
    2. 'import' → logprob: -1.4656931161880493
    3. '#' → logprob: -1.8406931161880493
    4. ' =' → logprob: -2.8406929969787598
    5. ''' → logprob: -2.9656929969787598
    6. 'from' → logprob: -3.3406929969787598
    7. '=' → logprob: -4.34069299697876
    8. 'for' → logprob: -4.84069299697876
    9. 'n' → logprob: -4.96569299697876
    10. 'r' → logprob: -5.34069299697876

Token 145: ' donc' (ID: 14206)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3891115188598633
    2. '#' → logprob: -1.6391115188598633
    3. 'le' → logprob: -2.3891115188598633
    4. ' la' → logprob: -2.3891115188598633
    5. 'def' → logprob: -2.8891115188598633
    6. ',' → logprob: -3.0141115188598633
    7. ' ' → logprob: -3.5141115188598633
    8. '_' → logprob: -3.6391115188598633
    9. 'une' → logprob: -3.6391115188598633
    10. 'l' → logprob: -3.8891115188598633

Token 146: ' une' (ID: 2463)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.033450722694397
    2. 'une' → logprob: -1.283450722694397
    3. 'la' → logprob: -1.408450722694397
    4. 'les' → logprob: -2.7834506034851074
    5. '#' → logprob: -4.158450603485107
    6. ' la' → logprob: -4.283450603485107
    7. 'l' → logprob: -4.783450603485107
    8. ' une' → logprob: -5.033450603485107
    9. 'un' → logprob: -5.158450603485107
    10. 'max' → logprob: -5.533450603485107

Token 147: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.1548359990119934
    2. ' droite' → logprob: -2.5298359394073486
    3. 'ligne' → logprob: -3.4048359394073486
    4. 'direction' → logprob: -5.029836177825928
    5. '#' → logprob: -5.779836177825928
    6. 'fonction' → logprob: -5.779836177825928
    7. '```' → logprob: -6.154836177825928
    8. 'line' → logprob: -6.279836177825928
    9. ' dro' → logprob: -6.404836177825928
    10. 'max' → logprob: -7.029836177825928

Token 148: ' passant' (ID: 82438)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5049207806587219
    2. 'from' → logprob: -2.004920721054077
    3. 'import' → logprob: -2.504920721054077
    4. '=' → logprob: -3.629920721054077
    5. ',' → logprob: -3.629920721054077
    6. 'def' → logprob: -3.879920721054077
    7. '.' → logprob: -4.004920959472656
    8. '(' → logprob: -4.379920959472656
    9. ' that' → logprob: -4.504920959472656
    10. ' ' → logprob: -4.504920959472656

Token 149: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.029334424063563347
    2. ' par' → logprob: -3.904334306716919
    3. '<|end|>' → logprob: -5.154334545135498
    4. 'through' → logprob: -6.779334545135498
    5. ' through' → logprob: -7.404334545135498
    6. '#' → logprob: -7.654334545135498
    7. 'au' → logprob: -8.40433406829834
    8. 'part' → logprob: -9.27933406829834
    9. ')' → logprob: -9.77933406829834
    10. 'import' → logprob: -10.27933406829834

Token 150: ' (' (ID: 350)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.006164124235510826
    2. ' (' → logprob: -5.506164073944092
    3. 'H' → logprob: -6.506164073944092
    4. 'le' → logprob: -7.881164073944092
    5. ' H' → logprob: -9.75616455078125
    6. ' le' → logprob: -10.00616455078125
    7. 'the' → logprob: -10.63116455078125
    8. 'l' → logprob: -10.88116455078125
    9. 'la' → logprob: -11.38116455078125
    10. ' la' → logprob: -11.38116455078125

Token 151: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.011442120186984539
    2. ' H' → logprob: -4.636442184448242
    3. '(H' → logprob: -6.511442184448242
    4. ' (' → logprob: -8.636442184448242
    5. ')' → logprob: -12.511442184448242
    6. ',H' → logprob: -12.511442184448242
    7. ' ' → logprob: -12.761442184448242
    8. '(' → logprob: -12.886442184448242
    9. ',' → logprob: -13.386442184448242
    10. '	H' → logprob: -13.636442184448242

Token 152: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.5954712075181305e-05
    2. ' -' → logprob: -10.250036239624023
    3. '1' → logprob: -15.125036239624023
    4. ')' → logprob: -15.375036239624023
    5. ',' → logprob: -17.250036239624023
    6. ')-' → logprob: -17.375036239624023
    7. '-
' → logprob: -17.375036239624023
    8. ' ' → logprob: -18.000036239624023
    9. '−' → logprob: -18.500036239624023
    10. '```' → logprob: -19.875036239624023

Token 153: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.750008583068848
    3. '-' → logprob: -14.125008583068848
    4. '<|end|>' → logprob: -15.500008583068848
    5. '
' → logprob: -16.875009536743164
    6. '```' → logprob: -17.000009536743164
    7. ')' → logprob: -17.625009536743164
    8. '<|end|>' → logprob: -17.750009536743164
    9. '１' → logprob: -18.625009536743164
    10. '   ' → logprob: -19.437509536743164

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017803447553887963
    2. ' ,' → logprob: -9.125178337097168
    3. '0' → logprob: -9.875178337097168
    4. ')' → logprob: -11.625178337097168
    5. ',
' → logprob: -12.125178337097168
    6. ' ' → logprob: -14.125178337097168
    7. '```' → logprob: -14.750178337097168
    8. '<|end|>' → logprob: -14.875178337097168
    9. '‌,' → logprob: -15.750178337097168
    10. '),' → logprob: -15.750178337097168

Token 155: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012356207298580557
    2. ' ' → logprob: -9.000123977661133
    3. '<|end|>' → logprob: -16.500123977661133
    4. ',' → logprob: -17.000123977661133
    5. '
' → logprob: -17.750123977661133
    6. ')' → logprob: -17.750123977661133
    7. '```' → logprob: -17.750123977661133
    8. '۰' → logprob: -18.125123977661133
    9. '`' → logprob: -18.250123977661133
    10. '  ' → logprob: -19.375123977661133

Token 156: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. ')' → logprob: -16.750051498413086
    4. '```' → logprob: -17.250051498413086
    5. ',' → logprob: -17.500051498413086
    6. '`' → logprob: -18.000051498413086
    7. '
' → logprob: -18.125051498413086
    8. '   ' → logprob: -18.250051498413086
    9. '۰' → logprob: -18.562551498413086
    10. '<|end|>' → logprob: -18.562551498413086

Token 157: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004691610229201615
    2. ',' → logprob: -8.250469207763672
    3. '),' → logprob: -8.625469207763672
    4. ' )' → logprob: -11.000469207763672
    5. ')
' → logprob: -12.250469207763672
    6. ').' → logprob: -13.250469207763672
    7. ')

' → logprob: -14.125469207763672
    8. ')#' → logprob: -14.125469207763672
    9. ')`' → logprob: -14.250469207763672
    10. '.' → logprob: -14.500469207763672

Token 158: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0018681287765503
    2. 'import' → logprob: -1.3768681287765503
    3. 'for' → logprob: -2.37686824798584
    4. ' ' → logprob: -2.37686824798584
    5. '<|end|>' → logprob: -3.12686824798584
    6. 'def' → logprob: -3.62686824798584
    7. 'd' → logprob: -3.87686824798584
    8. 'dire' → logprob: -4.00186824798584
    9. 'x' → logprob: -4.25186824798584
    10. ',' → logprob: -4.50186824798584

Token 159: ' Chaque' (ID: 94758)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4165268838405609
    2. 'dire' → logprob: -2.0415267944335938
    3. 'for' → logprob: -2.5415267944335938
    4. 'dx' → logprob: -3.2915267944335938
    5. 'import' → logprob: -3.5415267944335938
    6. 'd' → logprob: -3.7915267944335938
    7. '.' → logprob: -4.916526794433594
    8. 'def' → logprob: -5.166526794433594
    9. 'direction' → logprob: -5.166526794433594
    10. 'from' → logprob: -5.541526794433594

Token 160: ' droite' (ID: 61428)
  Prédit: ' angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' angle' → logprob: -1.5581129789352417
    2. '(' → logprob: -1.6831129789352417
    3. 'angle' → logprob: -1.8081129789352417
    4. ' (' → logprob: -2.3081130981445312
    5. ' direction' → logprob: -3.1831130981445312
    6. 'd' → logprob: -3.4331130981445312
    7. 'direction' → logprob: -3.4331130981445312
    8. '_' → logprob: -3.8081130981445312
    9. ' d' → logprob: -3.8081130981445312
    10. '#' → logprob: -4.058113098144531

Token 161: ' peut' (ID: 9216)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -1.1197293996810913
    2. 'être' → logprob: -1.2447293996810913
    3. ' be' → logprob: -1.2447293996810913
    4. ' etre' → logprob: -3.994729518890381
    5. 's' → logprob: -4.119729518890381
    6. ' se' → logprob: -4.369729518890381
    7. '#' → logprob: -4.744729518890381
    8. ' s' → logprob: -4.869729518890381
    9. ' pass' → logprob: -5.619729518890381
    10. 'be' → logprob: -5.744729518890381

Token 163: ' ident' (ID: 3951)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.9432469606399536
    2. 'param' → logprob: -1.0682469606399536
    3. 'repr' → logprob: -2.818246841430664
    4. ' défin' → logprob: -3.193246841430664
    5. 're' → logprob: -3.193246841430664
    6. 'd' → logprob: -3.568246841430664
    7. 'rep' → logprob: -3.568246841430664
    8. 'ident' → logprob: -4.443246841430664
    9. ' représent' → logprob: -4.568246841430664
    10. 'represent' → logprob: -4.693246841430664

Token 164: 'ifiée' (ID: 88506)
  Prédit: 'ifiée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifiée' → logprob: -0.45208197832107544
    2. 'ifi' → logprob: -1.5770819187164307
    3. 'if' → logprob: -2.8270819187164307
    4. 'fi' → logprob: -3.2020819187164307
    5. 'ifie' → logprob: -4.07708215713501
    6. 'ique' → logprob: -4.32708215713501
    7. 'i' → logprob: -4.70208215713501
    8. 'ifié' → logprob: -4.70208215713501
    9. 'ified' → logprob: -5.95208215713501
    10. '#' → logprob: -6.95208215713501

Token 165: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.045587338507175446
    2. 'par' → logprob: -3.5455873012542725
    3. ' by' → logprob: -4.420587539672852
    4. 'by' → logprob: -6.545587539672852
    5. ' ' → logprob: -7.045587539672852
    6. ')' → logprob: -7.795587539672852
    7. ',' → logprob: -8.295587539672852
    8. '<|end|>' → logprob: -9.045587539672852
    9. ' =' → logprob: -9.545587539672852
    10. '=' → logprob: -9.920587539672852

Token 166: ' son' (ID: 2391)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6314271688461304
    2. 'un' → logprob: -1.6314271688461304
    3. ' une' → logprob: -2.63142728805542
    4. ' son' → logprob: -3.25642728805542
    5. 'une' → logprob: -3.38142728805542
    6. ' sa' → logprob: -3.63142728805542
    7. 'a' → logprob: -3.75642728805542
    8. ' a' → logprob: -4.50642728805542
    9. ' (' → logprob: -4.50642728805542
    10. ' its' → logprob: -4.75642728805542

Token 167: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.4230262041091919
    2. 'vect' → logprob: -1.673026204109192
    3. 'p' → logprob: -2.9230260848999023
    4. 's' → logprob: -3.2980260848999023
    5. 't' → logprob: -3.6730260848999023
    6. 'direction' → logprob: -4.298026084899902
    7. 'dx' → logprob: -5.423026084899902
    8. 'vector' → logprob: -5.423026084899902
    9. 'pend' → logprob: -5.798026084899902
    10. ' vect' → logprob: -6.173026084899902

Token 168: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.33199575543403625
    2. '.' → logprob: -2.581995725631714
    3. '#' → logprob: -2.831995725631714
    4. 'from' → logprob: -2.956995725631714
    5. ':' → logprob: -3.456995725631714
    6. 'angles' → logprob: -3.706995725631714
    7. ',' → logprob: -4.456995964050293
    8. ')' → logprob: -4.956995964050293
    9. '(' → logprob: -5.831995964050293
    10. 'angle' → logprob: -6.081995964050293

Token 169: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6532807350158691
    2. ':' → logprob: -1.9032807350158691
    3. 'from' → logprob: -2.028280735015869
    4. '#' → logprob: -3.028280735015869
    5. '.' → logprob: -3.153280735015869
    6. 'def' → logprob: -3.903280735015869
    7. ')' → logprob: -4.278280735015869
    8. ',' → logprob: -4.278280735015869
    9. '```' → logprob: -4.528280735015869
    10. ':
' → logprob: -4.653280735015869

Token 170: ' On' (ID: 2160)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7622572183609009
    2. '#' → logprob: -1.7622572183609009
    3. 'import' → logprob: -1.8872572183609009
    4. 'for' → logprob: -2.8872570991516113
    5. 'angles' → logprob: -3.5122570991516113
    6. 'angle' → logprob: -3.6372570991516113
    7. 'from' → logprob: -3.8872570991516113
    8. 'theta' → logprob: -4.387257099151611
    9. ':
' → logprob: -4.637257099151611
    10. ')' → logprob: -4.637257099151611

Token 171: ' peut' (ID: 9216)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7704997062683105
    2. '_' → logprob: -1.1454997062683105
    3. ' =' → logprob: -2.5204997062683105
    4. 'import' → logprob: -3.8954997062683105
    5. '=' → logprob: -4.1454997062683105
    6. ' _' → logprob: -4.5204997062683105
    7. ',' → logprob: -4.5204997062683105
    8. ' #' → logprob: -4.5204997062683105
    9. 'n' → logprob: -4.6454997062683105
    10. ' continue' → logprob: -4.6454997062683105

Token 172: ' calcul' (ID: 7559)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.37229713797569275
    2. ' import' → logprob: -1.8722971677780151
    3. 'from' → logprob: -2.2472970485687256
    4. ' from' → logprob: -3.8722970485687256
    5. ' for' → logprob: -4.372297286987305
    6. 'for' → logprob: -4.872297286987305
    7. ' continue' → logprob: -5.872297286987305
    8. '```' → logprob: -6.872297286987305
    9. 'def' → logprob: -7.497297286987305
    10. 'continue' → logprob: -7.622297286987305

Token 173: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.010824259370565414
    2. 'ate' → logprob: -4.760824203491211
    3. 'e' → logprob: -6.260824203491211
    4. '#' → logprob: -8.510824203491211
    5. 'r' → logprob: -11.135824203491211
    6. '```' → logprob: -11.135824203491211
    7. 'é' → logprob: -11.260824203491211
    8. 'ateur' → logprob: -11.385824203491211
    9. '_' → logprob: -12.260824203491211
    10. 'uler' → logprob: -12.260824203491211

Token 174: ' pour' (ID: 1930)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9958969354629517
    2. ' the' → logprob: -2.120896816253662
    3. 'the' → logprob: -2.120896816253662
    4. 'dx' → logprob: -2.370896816253662
    5. ' dx' → logprob: -2.995896816253662
    6. ' la' → logprob: -2.995896816253662
    7. ' les' → logprob: -3.495896816253662
    8. 'le' → logprob: -3.620896816253662
    9. ' l' → logprob: -3.745896816253662
    10. 'l' → logprob: -3.745896816253662

Token 175: ' chaque' (ID: 21194)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.10710793733596802
    2. 'l' → logprob: -3.1071078777313232
    3. 'theta' → logprob: -3.6071078777313232
    4. 'i' → logprob: -4.232108116149902
    5. 'each' → logprob: -5.482108116149902
    6. 'a' → logprob: -5.857108116149902
    7. ' chaque' → logprob: -6.357108116149902
    8. 'alpha' → logprob: -6.982108116149902
    9. 'ang' → logprob: -7.357108116149902
    10. '```' → logprob: -7.482108116149902

Token 176: ' bloc' (ID: 51218)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.049813468009233475
    2. 'rose' → logprob: -4.674813270568848
    3. 'theta' → logprob: -4.674813270568848
    4. 'point' → logprob: -5.174813270568848
    5. ' angle' → logprob: -5.299813270568848
    6. 'i' → logprob: -5.299813270568848
    7. 'y' → logprob: -5.799813270568848
    8. 'ligne' → logprob: -6.549813270568848
    9. 'a' → logprob: -6.799813270568848
    10. 'x' → logprob: -7.299813270568848

Token 177: ' rose' (ID: 23103)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6903623938560486
    2. ' '#'' → logprob: -1.1903624534606934
    3. ' #' → logprob: -3.3153624534606934
    4. '#' → logprob: -3.5653624534606934
    5. ' rose' → logprob: -3.9403624534606934
    6. 'de' → logprob: -4.190362453460693
    7. ' (' → logprob: -4.190362453460693
    8. ',' → logprob: -4.440362453460693
    9. 'rose' → logprob: -4.565362453460693
    10. '.' → logprob: -5.315362453460693

Token 178: ' ses' (ID: 6707)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16122986376285553
    2. ')' → logprob: -3.6612298488616943
    3. '.' → logprob: -3.6612298488616943
    4. '#' → logprob: -3.7862298488616943
    5. ' ' → logprob: -4.036230087280273
    6. ' ,' → logprob: -4.536230087280273
    7. ':' → logprob: -4.786230087280273
    8. ' the' → logprob: -5.036230087280273
    9. ' (' → logprob: -5.411230087280273
    10. 'the' → logprob: -5.536230087280273

Token 179: ' coordonnées' (ID: 181895)
  Prédit: ' coordonnées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coordonnées' → logprob: -0.04199393093585968
    2. 'coord' → logprob: -4.291994094848633
    3. 'vect' → logprob: -5.041994094848633
    4. 'x' → logprob: -5.666994094848633
    5. 'angles' → logprob: -5.791994094848633
    6. 'dx' → logprob: -5.791994094848633
    7. 'y' → logprob: -6.041994094848633
    8. 'coords' → logprob: -6.291994094848633
    9. ' vect' → logprob: -6.541994094848633
    10. 'angle' → logprob: -6.666994094848633

Token 180: ' par' (ID: 686)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1984684467315674
    2. 'x' → logprob: -2.3234684467315674
    3. 'import' → logprob: -2.5734684467315674
    4. 's' → logprob: -2.8234684467315674
    5. ')' → logprob: -2.9484684467315674
    6. '#' → logprob: -2.9484684467315674
    7. '(x' → logprob: -2.9484684467315674
    8. '(H' → logprob: -2.9484684467315674
    9. '.' → logprob: -3.0734684467315674
    10. ':' → logprob: -3.1984684467315674

Token 181: ' rapport' (ID: 20847)
  Prédit: 'rapport'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rapport' → logprob: -0.37473931908607483
    2. ' rapport' → logprob: -1.3747392892837524
    3. 'H' → logprob: -4.624739170074463
    4. 'import' → logprob: -5.124739170074463
    5. 'leur' → logprob: -5.374739170074463
    6. 'r' → logprob: -5.624739170074463
    7. 'x' → logprob: -5.624739170074463
    8. 'leurs' → logprob: -5.874739170074463
    9. 'dx' → logprob: -6.249739170074463
    10. '-' → logprob: -6.499739170074463

Token 182: ' au' (ID: 2791)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.8124979138374329
    2. ' au' → logprob: -1.062497854232788
    3. ' à' → logprob: -1.937497854232788
    4. 'à' → logprob: -2.812497854232788
    5. '(H' → logprob: -5.687498092651367
    6. 'to' → logprob: -7.437498092651367
    7. ''à' → logprob: -7.937498092651367
    8. 'H' → logprob: -7.937498092651367
    9. 'aux' → logprob: -8.062498092651367
    10. ''au' → logprob: -8.187498092651367

Token 183: ' point' (ID: 2438)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.10000789910554886
    2. 'H' → logprob: -2.600008010864258
    3. ' (' → logprob: -4.350008010864258
    4. 'point' → logprob: -5.975008010864258
    5. ' H' → logprob: -5.975008010864258
    6. ' point' → logprob: -6.850008010864258
    7. 'x' → logprob: -7.350008010864258
    8. '0' → logprob: -7.725008010864258
    9. 'start' → logprob: -9.850008010864258
    10. '`' → logprob: -9.850008010864258

Token 184: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.150626301765442
    2. ',' → logprob: -1.150626301765442
    3. ' (' → logprob: -1.775626301765442
    4. ')' → logprob: -2.2756261825561523
    5. '(H' → logprob: -3.4006261825561523
    6. '.' → logprob: -3.6506261825561523
    7. '(
' → logprob: -4.900626182556152
    8. ':' → logprob: -5.025626182556152
    9. '#' → logprob: -5.525626182556152
    10. ' ' → logprob: -5.775626182556152

Token 185: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.030228842049837112
    2. '(H' → logprob: -3.780228853225708
    3. ' H' → logprob: -5.155228614807129
    4. ' (' → logprob: -6.905228614807129
    5. '(' → logprob: -9.405228614807129
    6. ')' → logprob: -11.030228614807129
    7. '	H' → logprob: -11.342728614807129
    8. ',H' → logprob: -11.467728614807129
    9. '-H' → logprob: -11.592728614807129
    10. '0' → logprob: -11.905228614807129

Token 186: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00017982252757064998
    2. ' -' → logprob: -8.6251802444458
    3. ')' → logprob: -15.7501802444458
    4. '<|end|>' → logprob: -16.000179290771484
    5. '−' → logprob: -16.750179290771484
    6. ',' → logprob: -17.125179290771484
    7. '1' → logprob: -17.375179290771484
    8. '<|end|>' → logprob: -17.875179290771484
    9. '-
' → logprob: -18.250179290771484
    10. ')-' → logprob: -18.625179290771484

Token 187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6405310816480778e-05
    2. '-' → logprob: -11.750016212463379
    3. ' ' → logprob: -11.875016212463379
    4. ',' → logprob: -14.250016212463379
    5. '<|end|>' → logprob: -14.625016212463379
    6. '```' → logprob: -15.875016212463379
    7. '
' → logprob: -16.500017166137695
    8. ')' → logprob: -16.687517166137695
    9. ' -' → logprob: -17.437517166137695
    10. '<|end|>' → logprob: -17.500017166137695

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004137496289331466
    2. ' ,' → logprob: -8.12541389465332
    3. '0' → logprob: -9.37541389465332
    4. ')' → logprob: -11.37541389465332
    5. ',
' → logprob: -12.00041389465332
    6. '-' → logprob: -12.00041389465332
    7. '<|end|>' → logprob: -13.37541389465332
    8. ' -' → logprob: -13.50041389465332
    9. ',-' → logprob: -13.75041389465332
    10. '‌,' → logprob: -14.12541389465332

Token 189: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029753033071756363
    2. ' ' → logprob: -3.5297529697418213
    3. ',' → logprob: -13.904752731323242
    4. '<|end|>' → logprob: -14.029752731323242
    5. ' ' → logprob: -15.154752731323242
    6. ')' → logprob: -15.904752731323242
    7. '```' → logprob: -15.904752731323242
    8. '   ' → logprob: -16.279752731323242
    9. '  ' → logprob: -16.842252731323242
    10. '`' → logprob: -17.092252731323242

Token 190: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006805036100558937
    2. ')
' → logprob: -8.250680923461914
    3. ' )' → logprob: -8.875680923461914
    4. ',' → logprob: -8.875680923461914
    5. '):' → logprob: -9.750680923461914
    6. '),' → logprob: -10.750680923461914
    7. '#' → logprob: -11.125680923461914
    8. '.' → logprob: -11.250680923461914
    9. ').' → logprob: -12.250680923461914
    10. ':' → logprob: -12.750680923461914

Token 191: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2107657790184021
    2. 'for' → logprob: -2.835765838623047
    3. 'import' → logprob: -3.835765838623047
    4. 'x' → logprob: -3.960765838623047
    5. ')' → logprob: -4.085765838623047
    6. ',' → logprob: -4.335765838623047
    7. '
' → logprob: -4.585765838623047
    8. '.' → logprob: -4.960765838623047
    9. 'from' → logprob: -4.960765838623047
    10. ':' → logprob: -5.085765838623047

Token 192: ' Chaque' (ID: 94758)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6081470847129822
    2. 'import' → logprob: -2.108147144317627
    3. 'from' → logprob: -2.108147144317627
    4. 'rose' → logprob: -2.858147144317627
    5. 'dx' → logprob: -2.983147144317627
    6. 'def' → logprob: -3.108147144317627
    7. 'x' → logprob: -4.733147144317627
    8. 'dire' → logprob: -4.858147144317627
    9. '.' → logprob: -5.233147144317627
    10. ',' → logprob: -5.233147144317627

Token 193: ' droite' (ID: 61428)
  Prédit: 'rose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rose' → logprob: -0.5355832576751709
    2. ' rose' → logprob: -1.535583257675171
    3. ' bloc' → logprob: -2.910583257675171
    4. 'block' → logprob: -3.410583257675171
    5. '#' → logprob: -3.535583257675171
    6. 'bloc' → logprob: -3.535583257675171
    7. ' block' → logprob: -4.28558349609375
    8. 'angle' → logprob: -4.78558349609375
    9. ' angle' → logprob: -5.41058349609375
    10. 'ros' → logprob: -5.41058349609375

Token 194: ' passant' (ID: 82438)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8964226245880127
    2. '<|end|>' → logprob: -1.6464226245880127
    3. '#' → logprob: -2.2714226245880127
    4. ',' → logprob: -2.3964226245880127
    5. ')' → logprob: -2.7714226245880127
    6. '<|end|>' → logprob: -3.5214226245880127
    7. '.' → logprob: -3.7714226245880127
    8. 'def' → logprob: -4.146422386169434
    9. 's' → logprob: -4.646422386169434
    10. ' ,' → logprob: -4.771422386169434

Token 195: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.16140688955783844
    2. ' par' → logprob: -1.9114068746566772
    3. '#' → logprob: -7.536406993865967
    4. '<|end|>' → logprob: -7.786406993865967
    5. '(par' → logprob: -9.911406517028809
    6. ' ' → logprob: -10.286406517028809
    7. '_par' → logprob: -10.536406517028809
    8. ' through' → logprob: -11.036406517028809
    9. 'pour' → logprob: -11.161406517028809
    10. 'au' → logprob: -11.161406517028809

Token 196: ' ce' (ID: 2357)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.004488392733037472
    2. ' (' → logprob: -5.504488468170166
    3. 'H' → logprob: -9.504487991333008
    4. 'l' → logprob: -9.629487991333008
    5. '#' → logprob: -10.254487991333008
    6. 'a' → logprob: -10.254487991333008
    7. 'import' → logprob: -10.629487991333008
    8. 'r' → logprob: -10.879487991333008
    9. 'point' → logprob: -11.004487991333008
    10. 'le' → logprob: -11.004487991333008

Token 197: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.11444668471813202
    2. ' point' → logprob: -2.2394466400146484
    3. 'bloc' → logprob: -6.739446640014648
    4. 'points' → logprob: -8.864446640014648
    5. ' bloc' → logprob: -9.364446640014648
    6. 'block' → logprob: -10.239446640014648
    7. 'pt' → logprob: -10.614446640014648
    8. 'm' → logprob: -10.614446640014648
    9. 'pivot' → logprob: -10.864446640014648
    10. '_point' → logprob: -11.239446640014648

Token 198: ' est' (ID: 893)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6522877812385559
    2. '#' → logprob: -1.7772877216339111
    3. ':' → logprob: -2.777287721633911
    4. ')' → logprob: -3.027287721633911
    5. ' can' → logprob: -3.027287721633911
    6. '.' → logprob: -3.277287721633911
    7. 'import' → logprob: -3.527287721633911
    8. 's' → logprob: -4.15228796005249
    9. ' ' → logprob: -4.77728796005249
    10. 'def' → logprob: -5.27728796005249

Token 199: ' ident' (ID: 3951)
  Prédit: 'ident'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ident' → logprob: -1.3387298583984375
    2. 'dé' → logprob: -1.3387298583984375
    3. 'car' → logprob: -2.0887298583984375
    4. ' défin' → logprob: -2.2137298583984375
    5. ' caractér' → logprob: -2.8387298583984375
    6. 'uni' → logprob: -3.0887298583984375
    7. 'determ' → logprob: -3.0887298583984375
    8. 'def' → logprob: -4.0887298583984375
    9. 'un' → logprob: -4.3387298583984375
    10. 'd' → logprob: -4.5887298583984375

Token 200: 'ique' (ID: 2222)
  Prédit: 'ifiée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ifiée' → logprob: -0.3560764789581299
    2. 'ifi' → logprob: -1.7310764789581299
    3. 'ifié' → logprob: -2.98107647895813
    4. 'if' → logprob: -3.35607647895813
    5. 'fi' → logprob: -4.481076240539551
    6. 'i' → logprob: -5.231076240539551
    7. 'ifie' → logprob: -5.356076240539551
    8. 'ifiable' → logprob: -5.731076240539551
    9. 'ified' → logprob: -5.856076240539551
    10. '#' → logprob: -6.106076240539551

Token 201: ' dans' (ID: 2671)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.6338223218917847
    2. 'import' → logprob: -1.6338223218917847
    3. ',' → logprob: -1.7588223218917847
    4. ')' → logprob: -2.008822441101074
    5. 's' → logprob: -2.508822441101074
    6. '.' → logprob: -3.133822441101074
    7. 'def' → logprob: -3.258822441101074
    8. 'from' → logprob: -3.383822441101074
    9. ',
' → logprob: -4.008822441101074
    10. ':' → logprob: -4.008822441101074

Token 202: ' sa' (ID: 880)
  Prédit: 'son'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'son' → logprob: -0.8552323579788208
    2. 'l' → logprob: -1.9802323579788208
    3. 'la' → logprob: -2.1052322387695312
    4. 'une' → logprob: -2.4802322387695312
    5. 'sa' → logprob: -2.6052322387695312
    6. 'le' → logprob: -2.6052322387695312
    7. 'ses' → logprob: -3.4802322387695312
    8. 'les' → logprob: -3.9802322387695312
    9. 't' → logprob: -4.605232238769531
    10. 'sens' → logprob: -5.355232238769531

Token 203: ' pente' (ID: 165627)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.5473858118057251
    2. 'p' → logprob: -1.422385811805725
    3. ' pente' → logprob: -2.5473856925964355
    4. 'pend' → logprob: -3.0473856925964355
    5. 't' → logprob: -3.5473856925964355
    6. 's' → logprob: -4.9223856925964355
    7. 'sens' → logprob: -5.6723856925964355
    8. 'angle' → logprob: -6.6723856925964355
    9. ' direction' → logprob: -6.6723856925964355
    10. 'fraction' → logprob: -6.6723856925964355

Token 204: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.041765809059143
    2. ':' → logprob: -1.416765809059143
    3. ',' → logprob: -2.1667656898498535
    4. 'import' → logprob: -2.2917656898498535
    5. '#' → logprob: -2.9167656898498535
    6. '\' → logprob: -4.0417656898498535
    7. ' ' → logprob: -4.1667656898498535
    8. 'from' → logprob: -4.2917656898498535
    9. ')' → logprob: -4.4167656898498535
    10. 'def' → logprob: -4.5417656898498535

Token 205: ' (' (ID: 350)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.9679960012435913
    2. ' y' → logprob: -2.342996120452881
    3. 'None' → logprob: -2.342996120452881
    4. ' (' → logprob: -2.467996120452881
    5. ' None' → logprob: -2.717996120452881
    6. 'dy' → logprob: -2.967996120452881
    7. '"' → logprob: -2.967996120452881
    8. ' dy' → logprob: -3.217996120452881
    9. 'angle' → logprob: -3.592996120452881
    10. 'x' → logprob: -3.592996120452881

Token 206: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.24807588756084442
    2. 'y' → logprob: -1.6230758428573608
    3. ' dy' → logprob: -4.62307596206665
    4. ' y' → logprob: -5.12307596206665
    5. 'delta' → logprob: -5.62307596206665
    6. 'dx' → logprob: -7.12307596206665
    7. '(y' → logprob: -7.24807596206665
    8. ' delta' → logprob: -8.748075485229492
    9. '-d' → logprob: -8.998075485229492
    10. '-y' → logprob: -9.248075485229492

Token 207: '/d' (ID: 6662)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4491054117679596
    2. ')/(' → logprob: -1.6991053819656372
    3. ')' → logprob: -2.1991055011749268
    4. '/d' → logprob: -3.1991055011749268
    5. ' /' → logprob: -4.199105262756348
    6. '/' → logprob: -5.574105262756348
    7. ' ,' → logprob: -5.949105262756348
    8. ')/' → logprob: -6.449105262756348
    9. ' *' → logprob: -7.574105262756348
    10. 'x' → logprob: -7.699105262756348

Token 208: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.91732100979425e-05
    2. ' x' → logprob: -11.125039100646973
    3. 'dx' → logprob: -11.750039100646973
    4. ')x' → logprob: -12.125039100646973
    5. 'y' → logprob: -12.625039100646973
    6. ')' → logprob: -12.625039100646973
    7. '```' → logprob: -13.375039100646973
    8. '
' → logprob: -15.250039100646973
    9. '_x' → logprob: -15.625039100646973
    10. ' ' → logprob: -15.687539100646973

Token 209: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024763107649050653
    2. ')
' → logprob: -9.750247955322266
    3. '**' → logprob: -10.125247955322266
    4. ')**' → logprob: -10.375247955322266
    5. '}' → logprob: -10.750247955322266
    6. '#' → logprob: -10.875247955322266
    7. ' )' → logprob: -10.875247955322266
    8. '*' → logprob: -11.125247955322266
    9. '})' → logprob: -11.875247955322266
    10. '')' → logprob: -12.375247955322266

Token 210: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9809774160385132
    2. 'dx' → logprob: -1.1059774160385132
    3. '#' → logprob: -1.9809774160385132
    4. 'import' → logprob: -2.3559775352478027
    5. 'dy' → logprob: -4.355977535247803
    6. 'def' → logprob: -4.355977535247803
    7. 'dp' → logprob: -4.855977535247803
    8. 's' → logprob: -4.980977535247803
    9. 'd' → logprob: -5.480977535247803
    10. 'rose' → logprob: -6.230977535247803

Token 211: ' Pour' (ID: 13931)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6915771961212158
    2. '#' → logprob: -1.5665771961212158
    3. 'dx' → logprob: -1.6915771961212158
    4. 'import' → logprob: -2.691577196121216
    5. 'dy' → logprob: -4.316576957702637
    6. 'dire' → logprob: -4.816576957702637
    7. 'rose' → logprob: -5.316576957702637
    8. 'def' → logprob: -5.816576957702637
    9. 'points' → logprob: -6.441576957702637
    10. 'dp' → logprob: -6.441576957702637

Token 212: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -1.1326733827590942
    2. 'dy' → logprob: -1.6326733827590942
    3. 'dx' → logprob: -1.7576733827590942
    4. ' dx' → logprob: -2.1326732635498047
    5. ' dy' → logprob: -2.7576732635498047
    6. 'x' → logprob: -3.7576732635498047
    7. 'ch' → logprob: -4.132673263549805
    8. 'each' → logprob: -4.257673263549805
    9. 'calcul' → logprob: -4.257673263549805
    10. ' continuer' → logprob: -4.507673263549805

Token 213: ' bloc' (ID: 51218)
  Prédit: 'rose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rose' → logprob: -0.29681652784347534
    2. 'bloc' → logprob: -2.67181658744812
    3. ' rose' → logprob: -2.92181658744812
    4. 'ros' → logprob: -3.79681658744812
    5. 'block' → logprob: -3.92181658744812
    6. '#' → logprob: -4.046816349029541
    7. ' '#'' → logprob: -4.546816349029541
    8. ' bloc' → logprob: -4.546816349029541
    9. '```' → logprob: -4.671816349029541
    10. 'cell' → logprob: -4.921816349029541

Token 214: ',' (ID: 11)
  Prédit: 'rose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rose' → logprob: -0.7381552457809448
    2. '_' → logprob: -1.3631552457809448
    3. ' rose' → logprob: -2.6131553649902344
    4. ',' → logprob: -2.7381553649902344
    5. ' in' → logprob: -3.4881553649902344
    6. 'in' → logprob: -3.7381553649902344
    7. '#' → logprob: -4.113155364990234
    8. 'garden' → logprob: -4.738155364990234
    9. ':' → logprob: -4.863155364990234
    10. 'ros' → logprob: -5.238155364990234

Token 215: ' on' (ID: 402)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.7932102680206299
    2. ' y' → logprob: -1.2932102680206299
    3. 'x' → logprob: -1.5432102680206299
    4. ' x' → logprob: -3.04321026802063
    5. ' dy' → logprob: -5.668210029602051
    6. ' if' → logprob: -6.043210029602051
    7. 'dy' → logprob: -6.168210029602051
    8. 'dx' → logprob: -6.793210029602051
    9. ' dx' → logprob: -7.043210029602051
    10. ' i' → logprob: -7.543210029602051

Token 216: ' calc' (ID: 25691)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -1.0970935821533203
    2. 'import' → logprob: -1.2220935821533203
    3. 'continue' → logprob: -2.0970935821533203
    4. 'calcul' → logprob: -3.3470935821533203
    5. ' continue' → logprob: -3.9720935821533203
    6. 'compute' → logprob: -4.09709358215332
    7. '#' → logprob: -4.22209358215332
    8. 'from' → logprob: -4.34709358215332
    9. ' want' → logprob: -4.34709358215332
    10. 'cal' → logprob: -4.47209358215332

Token 217: 'ule' (ID: 1601)
  Prédit: 'ulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulate' → logprob: -0.2778071165084839
    2. 'ule' → logprob: -1.7778071165084839
    3. 'ul' → logprob: -2.9028072357177734
    4. 'culate' → logprob: -5.152807235717773
    5. 'uler' → logprob: -5.152807235717773
    6. 'cule' → logprob: -5.652807235717773
    7. 'u' → logprob: -6.777807235717773
    8. 'cul' → logprob: -8.027807235717773
    9. 'ulé' → logprob: -8.027807235717773
    10. '```' → logprob: -8.402807235717773

Token 218: ' la' (ID: 557)
  Prédit: ' dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.4400763511657715
    2. 'dy' → logprob: -1.3150763511657715
    3. 'y' → logprob: -3.4400763511657715
    4. 'dx' → logprob: -3.8150763511657715
    5. ' dx' → logprob: -3.8150763511657715
    6. ' y' → logprob: -4.5650763511657715
    7. 'x' → logprob: -7.5650763511657715
    8. ' x' → logprob: -9.31507682800293
    9. '(dx' → logprob: -9.56507682800293
    10. 'd' → logprob: -10.06507682800293

Token 219: ' direction' (ID: 9262)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.13034822046756744
    2. 'y' → logprob: -2.8803482055664062
    3. 'dx' → logprob: -3.0053482055664062
    4. ' dy' → logprob: -5.005348205566406
    5. 'from' → logprob: -5.130348205566406
    6. 'x' → logprob: -6.255348205566406
    7. 'import' → logprob: -7.380348205566406
    8. ' y' → logprob: -8.130348205566406
    9. ' from' → logprob: -8.755348205566406
    10. 'd' → logprob: -9.005348205566406

Token 220: ' depuis' (ID: 16277)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19744719564914703
    2. '=' → logprob: -2.5724472999572754
    3. 's' → logprob: -2.9474472999572754
    4. '_dx' → logprob: -4.322447299957275
    5. 'dx' → logprob: -4.447447299957275
    6. 'x' → logprob: -5.697447299957275
    7. '_x' → logprob: -5.947447299957275
    8. 'from' → logprob: -6.197447299957275
    9. '_vectors' → logprob: -6.197447299957275
    10. 'y' → logprob: -6.197447299957275

Token 221: ' (' (ID: 350)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.05796625465154648
    2. ' (' → logprob: -3.0579662322998047
    3. 'H' → logprob: -4.807966232299805
    4. ' H' → logprob: -7.057966232299805
    5. '(' → logprob: -9.807966232299805
    6. ' ' → logprob: -10.182966232299805
    7. ' la' → logprob: -10.182966232299805
    8. 'l' → logprob: -10.682966232299805
    9. '((' → logprob: -10.932966232299805
    10. 'r' → logprob: -11.182966232299805

Token 222: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.035752952098846436
    2. '(H' → logprob: -3.410753011703491
    3. ' H' → logprob: -6.285752773284912
    4. ' (' → logprob: -8.41075325012207
    5. '(' → logprob: -12.66075325012207
    6. ')' → logprob: -12.84825325012207
    7. ',H' → logprob: -13.03575325012207
    8. '	H' → logprob: -13.16075325012207
    9. ' ' → logprob: -13.28575325012207
    10. '   ' → logprob: -13.78575325012207

Token 223: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.080963092041202e-06
    2. ' -' → logprob: -12.250004768371582
    3. '1' → logprob: -16.0000057220459
    4. ',' → logprob: -17.0000057220459
    5. '-
' → logprob: -17.3750057220459
    6. '
' → logprob: -17.7500057220459
    7. '```' → logprob: -17.7500057220459
    8. '−' → logprob: -17.8750057220459
    9. ' ' → logprob: -18.6250057220459
    10. '_' → logprob: -18.8125057220459

Token 224: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.841743303695694e-05
    2. '-' → logprob: -9.37509822845459
    3. ' ' → logprob: -11.50009822845459
    4. '
' → logprob: -13.87509822845459
    5. ',' → logprob: -14.12509822845459
    6. '```' → logprob: -14.37509822845459
    7. ')' → logprob: -15.43759822845459
    8. ' -' → logprob: -15.50009822845459
    9. '   ' → logprob: -16.000099182128906
    10. '<|end|>' → logprob: -16.937599182128906

Token 225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039766079862602055
    2. ' ,' → logprob: -7.875397682189941
    3. '0' → logprob: -12.000397682189941
    4. '   ' → logprob: -12.250397682189941
    5. ',
' → logprob: -13.125397682189941
    6. '‌,' → logprob: -13.875397682189941
    7. ' ' → logprob: -14.250397682189941
    8. ')' → logprob: -14.250397682189941
    9. '	' → logprob: -14.625397682189941
    10. '```' → logprob: -14.875397682189941

Token 226: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003181159496307373
    2. ' ' → logprob: -5.753180980682373
    3. ',' → logprob: -13.378181457519531
    4. ')' → logprob: -14.878181457519531
    5. 'x' → logprob: -15.003181457519531
    6. '  ' → logprob: -15.128181457519531
    7. '   ' → logprob: -15.253181457519531
    8. '```' → logprob: -15.253181457519531
    9. '
' → logprob: -15.878181457519531
    10. '    ' → logprob: -16.00318145751953

Token 227: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0528230182826519
    2. ')
' → logprob: -3.802823066711426
    3. ',' → logprob: -3.927823066711426
    4. ' )' → logprob: -5.802823066711426
    5. '):' → logprob: -6.427823066711426
    6. '),' → logprob: -7.177823066711426
    7. ' =' → logprob: -7.427823066711426
    8. '#' → logprob: -7.802823066711426
    9. '(H' → logprob: -7.802823066711426
    10. ':' → logprob: -8.052823066711426

Token 228: ' vers' (ID: 3640)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.9575584530830383
    2. ':' → logprob: -1.8325583934783936
    3. 'for' → logprob: -2.0825583934783936
    4. 'dx' → logprob: -2.4575583934783936
    5. '(H' → logprob: -2.8325583934783936
    6. ':
' → logprob: -3.2075583934783936
    7. 'y' → logprob: -3.3325583934783936
    8. '#' → logprob: -4.082558631896973
    9. 'from' → logprob: -4.332558631896973
    10. '.' → logprob: -4.832558631896973

Token 229: ' ce' (ID: 2357)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7955984473228455
    2. '(H' → logprob: -1.0455985069274902
    3. '(x' → logprob: -3.1705985069274902
    4. 'le' → logprob: -3.2955985069274902
    5. 'la' → logprob: -3.5455985069274902
    6. '(i' → logprob: -3.9205985069274902
    7. '(block' → logprob: -4.42059850692749
    8. '(' → logprob: -4.54559850692749
    9. 'block' → logprob: -4.79559850692749
    10. '(y' → logprob: -5.54559850692749

Token 230: ' bloc' (ID: 51218)
  Prédit: 'bloc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bloc' → logprob: -0.23638230562210083
    2. ' bloc' → logprob: -1.861382246017456
    3. 'block' → logprob: -3.236382246017456
    4. 'blo' → logprob: -5.361382484436035
    5. ' block' → logprob: -5.361382484436035
    6. '#' → logprob: -6.236382484436035
    7. 'rose' → logprob: -6.486382484436035
    8. '_bloc' → logprob: -6.736382484436035
    9. 'ros' → logprob: -8.236382484436035
    10. ' jardin' → logprob: -8.361382484436035

Token 231: ' (' (ID: 350)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.18795403838157654
    2. 'from' → logprob: -2.5629539489746094
    3. 'dx' → logprob: -4.187953948974609
    4. 's' → logprob: -4.187953948974609
    5. 'rose' → logprob: -4.562953948974609
    6. 'direction' → logprob: -4.562953948974609
    7. 'blocks' → logprob: -5.312953948974609
    8. 'dy' → logprob: -5.562953948974609
    9. '#' → logprob: -5.562953948974609
    10. 'for' → logprob: -6.187953948974609

Token 232: 'central' (ID: 79937)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12957245111465454
    2. 'dx' → logprob: -3.0045723915100098
    3. 'dy' → logprob: -3.6295723915100098
    4. '):' → logprob: -4.75457239151001
    5. ')
' → logprob: -5.25457239151001
    6. '(dx' → logprob: -5.37957239151001
    7. '),' → logprob: -5.50457239151001
    8. 'y' → logprob: -5.50457239151001
    9. ',' → logprob: -5.75457239151001
    10. ' dx' → logprob: -5.87957239151001

Token 233: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46531668305397034
    2. ',' → logprob: -2.4653167724609375
    3. '_' → logprob: -2.9653167724609375
    4. '_dx' → logprob: -3.4653167724609375
    5. 'dx' → logprob: -3.4653167724609375
    6. '#' → logprob: -3.8403167724609375
    7. 'x' → logprob: -4.4653167724609375
    8. '_point' → logprob: -4.5903167724609375
    9. '_x' → logprob: -4.7153167724609375
    10. '+' → logprob: -4.7153167724609375

Token 234: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.3591268062591553
    2. 'for' → logprob: -1.7341268062591553
    3. 'dx' → logprob: -1.7341268062591553
    4. 'dy' → logprob: -2.4841268062591553
    5. ':' → logprob: -2.7341268062591553
    6. ':
' → logprob: -3.3591268062591553
    7. '#' → logprob: -3.3591268062591553
    8. ',' → logprob: -3.8591268062591553
    9. 's' → logprob: -4.109127044677734
    10. 'direction' → logprob: -4.234127044677734

Token 235: ' Puis' (ID: 87717)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.1457822322845459
    2. 'from' → logprob: -2.395782232284546
    3. 'for' → logprob: -4.645782470703125
    4. 'rose' → logprob: -4.770782470703125
    5. 'direction' → logprob: -4.895782470703125
    6. '#' → logprob: -5.895782470703125
    7. 'dx' → logprob: -6.145782470703125
    8. 'visited' → logprob: -6.270782470703125
    9. 'dirs' → logprob: -6.645782470703125
    10. 'blocks' → logprob: -7.020782470703125

Token 236: ' on' (ID: 402)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.18241234123706818
    2. 'from' → logprob: -2.4324123859405518
    3. '#' → logprob: -3.0574123859405518
    4. 'for' → logprob: -4.432412147521973
    5. 'count' → logprob: -5.057412147521973
    6. 'direction' → logprob: -5.682412147521973
    7. 'import' → logprob: -6.057412147521973
    8. 'on' → logprob: -6.557412147521973
    9. 'counts' → logprob: -6.557412147521973
    10. 'continue' → logprob: -7.432412147521973

Token 237: ' compte' (ID: 19657)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5356858968734741
    2. 'normalize' → logprob: -1.6606858968734741
    3. 'count' → logprob: -2.1606860160827637
    4. 'continue' → logprob: -2.7856860160827637
    5. '#' → logprob: -4.660686016082764
    6. 'import' → logprob: -4.785686016082764
    7. 'store' → logprob: -5.035686016082764
    8. 'increment' → logprob: -5.410686016082764
    9. 'group' → logprob: -6.035686016082764
    10. 'g' → logprob: -6.160686016082764

Token 238: ' combien' (ID: 106648)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8501651287078857
    2. 'dire' → logprob: -0.8501651287078857
    3. 'for' → logprob: -2.8501651287078857
    4. '#' → logprob: -3.3501651287078857
    5. ' directions' → logprob: -3.7251651287078857
    6. 's' → logprob: -5.100165367126465
    7. '=' → logprob: -5.475165367126465
    8. 'import' → logprob: -5.850165367126465
    9. 'the' → logprob: -6.100165367126465
    10. 'direction' → logprob: -6.350165367126465

Token 239: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3454583883285522
    2. '_direction' → logprob: -1.8454583883285522
    3. ')' → logprob: -1.9704583883285522
    4. '#' → logprob: -2.470458507537842
    5. 'for' → logprob: -3.095458507537842
    6. ' de' → logprob: -3.220458507537842
    7. 'from' → logprob: -3.470458507537842
    8. '=' → logprob: -3.470458507537842
    9. 'de' → logprob: -3.470458507537842
    10. 'dire' → logprob: -4.095458507537842

Token 240: ' blocs' (ID: 182599)
  Prédit: 'ros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ros' → logprob: -1.5827815532684326
    2. 'blocks' → logprob: -1.7077815532684326
    3. ' blocs' → logprob: -1.7077815532684326
    4. ' roses' → logprob: -2.2077815532684326
    5. ' directions' → logprob: -2.2077815532684326
    6. 'dire' → logprob: -2.3327815532684326
    7. ' blocks' → logprob: -3.2077815532684326
    8. 'blo' → logprob: -4.582781791687012
    9. 'rose' → logprob: -4.582781791687012
    10. ' rose' → logprob: -5.082781791687012

Token 241: ' ont' (ID: 4930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.723990559577942
    2. 'ont' → logprob: -1.848990559577942
    3. 'import' → logprob: -1.973990559577942
    4. 'sur' → logprob: -2.3489904403686523
    5. ' in' → logprob: -3.0989904403686523
    6. 'in' → logprob: -3.0989904403686523
    7. 's' → logprob: -3.3489904403686523
    8. 'from' → logprob: -3.3489904403686523
    9. 'dans' → logprob: -3.4739904403686523
    10. ',' → logprob: -3.7239904403686523

Token 242: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.8012728095054626
    2. 'le' → logprob: -0.9262728095054626
    3. 'the' → logprob: -2.6762728691101074
    4. 'exact' → logprob: -3.6762728691101074
    5. ' la' → logprob: -4.051272869110107
    6. ' exactement' → logprob: -4.051272869110107
    7. 'une' → logprob: -4.676272869110107
    8. 'un' → logprob: -5.676272869110107
    9. ' le' → logprob: -5.801272869110107
    10. 'same' → logprob: -6.676272869110107

Token 243: ' même' (ID: 9679)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5786939859390259
    2. ' même' → logprob: -0.8286939859390259
    3. 'same' → logprob: -7.078693866729736
    4. 'even' → logprob: -7.328693866729736
    5. '```' → logprob: -7.453693866729736
    6. 'direction' → logprob: -8.453694343566895
    7. ' even' → logprob: -9.203694343566895
    8. 'mem' → logprob: -9.453694343566895
    9. ' m' → logprob: -9.703694343566895
    10. 'mé' → logprob: -9.828694343566895

Token 244: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.153266042470932
    2. ' direction' → logprob: -2.028265953063965
    3. 'p' → logprob: -5.903265953063965
    4. 's' → logprob: -6.028265953063965
    5. ' pente' → logprob: -6.528265953063965
    6. 'dire' → logprob: -6.653265953063965
    7. '_direction' → logprob: -6.653265953063965
    8. 't' → logprob: -8.528265953063965
    9. 'pend' → logprob: -8.653265953063965
    10. 'dir' → logprob: -8.778265953063965

Token 245: ' (' (ID: 350)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6909218430519104
    2. 'dire' → logprob: -0.9409218430519104
    3. 'direction' → logprob: -2.6909217834472656
    4. 'import' → logprob: -4.940921783447266
    5. '
' → logprob: -5.190921783447266
    6. 's' → logprob: -5.565921783447266
    7. 'result' → logprob: -5.690921783447266
    8. ' directions' → logprob: -5.940921783447266
    9. 'd' → logprob: -6.190921783447266
    10. 'ans' → logprob: -6.315921783447266

Token 246: 'm' (ID: 76)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037921268958598375
    2. ' )' → logprob: -6.1287922859191895
    3. '#' → logprob: -7.2537922859191895
    4. ')
' → logprob: -8.253791809082031
    5. ').' → logprob: -8.753791809082031
    6. 'direction' → logprob: -9.003791809082031
    7. 'dire' → logprob: -9.878791809082031
    8. ',' → logprob: -9.878791809082031
    9. ' direction' → logprob: -10.253791809082031
    10. ' ' → logprob: -10.253791809082031

Token 247: 'ême' (ID: 7961)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.4202609062194824
    2. '#' → logprob: -2.1702609062194824
    3. ')' → logprob: -2.5452609062194824
    4. 'a' → logprob: -3.7952609062194824
    5. 'in' → logprob: -3.9202609062194824
    6. '=' → logprob: -4.045260906219482
    7. 'ath' → logprob: -4.045260906219482
    8. 'ethod' → logprob: -4.170260906219482
    9. 'ost' → logprob: -4.795260906219482
    10. 'issing' → logprob: -5.170260906219482

Token 248: ' angle' (ID: 16538)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dy' → logprob: -1.338867425918579
    2. ' dy' → logprob: -1.338867425918579
    3. 'dx' → logprob: -2.213867425918579
    4. 'direction' → logprob: -2.338867425918579
    5. ')' → logprob: -2.838867425918579
    6. ' direction' → logprob: -2.963867425918579
    7. 's' → logprob: -2.963867425918579
    8. 'import' → logprob: -4.0888671875
    9. ' dx' → logprob: -4.0888671875
    10. 'angle' → logprob: -4.4638671875

Token 249: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022159723564982414
    2. ')
' → logprob: -4.147159576416016
    3. 'from' → logprob: -6.147159576416016
    4. '#' → logprob: -6.772159576416016
    5. 's' → logprob: -7.397159576416016
    6. ' )' → logprob: -7.897159576416016
    7. ').' → logprob: -7.897159576416016
    8. ',' → logprob: -8.147159576416016
    9. '.)' → logprob: -8.647159576416016
    10. 'dire' → logprob: -8.897159576416016

Token 250: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.22733454406261444
    2. 'dire' → logprob: -1.8523344993591309
    3. 'direction' → logprob: -3.852334499359131
    4. 's' → logprob: -4.852334499359131
    5. '
' → logprob: -5.477334499359131
    6. ' from' → logprob: -6.477334499359131
    7. ':
' → logprob: -6.477334499359131
    8. 'import' → logprob: -6.602334499359131
    9. ' directions' → logprob: -6.977334499359131
    10. '```' → logprob: -7.227334499359131

Token 251: ' Le' (ID: 2018)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.24439312517642975
    2. 'from' → logprob: -1.8693931102752686
    3. 'direction' → logprob: -3.2443931102752686
    4. 'counts' → logprob: -5.244393348693848
    5. 'count' → logprob: -5.619393348693848
    6. 'dir' → logprob: -5.869393348693848
    7. 'import' → logprob: -6.119393348693848
    8. 'dirs' → logprob: -6.244393348693848
    9. '#' → logprob: -6.869393348693848
    10. 'rose' → logprob: -6.994393348693848

Token 252: ' maximum' (ID: 10562)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5383147597312927
    2. 'dire' → logprob: -1.4133148193359375
    3. 'max' → logprob: -2.4133148193359375
    4. '#' → logprob: -3.1633148193359375
    5. 'direction' → logprob: -4.2883148193359375
    6. 'result' → logprob: -5.1633148193359375
    7. 'import' → logprob: -5.1633148193359375
    8. 'ans' → logprob: -5.4133148193359375
    9. 'answer' → logprob: -6.2883148193359375
    10. 'res' → logprob: -6.4133148193359375

Token 253: ' de' (ID: 334)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7909629940986633
    2. 'dire' → logprob: -1.2909629344940186
    3. '
' → logprob: -2.4159629344940186
    4. 's' → logprob: -3.0409629344940186
    5. 'direction' → logprob: -3.0409629344940186
    6. ' directions' → logprob: -4.415963172912598
    7. 'import' → logprob: -4.915963172912598
    8. ' =' → logprob: -5.290963172912598
    9. '_direction' → logprob: -5.290963172912598
    10. 'max' → logprob: -5.415963172912598

Token 254: ' blocs' (ID: 182599)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.2072162628173828
    2. ' blocs' → logprob: -1.5822162628173828
    3. 'blocks' → logprob: -2.082216262817383
    4. ' count' → logprob: -2.582216262817383
    5. 'dire' → logprob: -2.707216262817383
    6. ' ces' → logprob: -2.832216262817383
    7. ' blocks' → logprob: -3.332216262817383
    8. ' directions' → logprob: -3.832216262817383
    9. 'ces' → logprob: -3.957216262817383
    10. ' counts' → logprob: -4.207216262817383

Token 255: ' align' (ID: 9538)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0526741743087769
    2. '=' → logprob: -1.1776741743087769
    3. '_direction' → logprob: -2.4276742935180664
    4. 's' → logprob: -2.5526742935180664
    5. '_' → logprob: -3.0526742935180664
    6. 'sur' → logprob: -3.9276742935180664
    7. '_count' → logprob: -4.302674293518066
    8. '_d' → logprob: -4.677674293518066
    9. 'dire' → logprob: -4.677674293518066
    10. '_sur' → logprob: -4.802674293518066

Token 256: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.8899564146995544
    2. 'e' → logprob: -1.1399564743041992
    3. 'é' → logprob: -1.3899564743041992
    4. 'ent' → logprob: -4.014956474304199
    5. 'es' → logprob: -6.764956474304199
    6. 'ée' → logprob: -8.2649564743042
    7. 'ant' → logprob: -8.2649564743042
    8. 'è' → logprob: -9.1399564743042
    9. '#' → logprob: -9.6399564743042
    10. 'ées' → logprob: -9.6399564743042

Token 257: ' donne' (ID: 30004)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8487263917922974
    2. '=' → logprob: -0.9737263917922974
    3. '=
' → logprob: -2.848726272583008
    4. 's' → logprob: -3.723726272583008
    5. 'dire' → logprob: -3.848726272583008
    6. 'direction' → logprob: -3.973726272583008
    7. 'ans' → logprob: -4.098726272583008
    8. ' =
' → logprob: -4.223726272583008
    9. 'max' → logprob: -4.848726272583008
    10. 'dx' → logprob: -5.223726272583008

Token 258: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.5887458324432373
    2. ' la' → logprob: -1.3387458324432373
    3. 'le' → logprob: -1.8387458324432373
    4. 'max' → logprob: -4.838746070861816
    5. 'la' → logprob: -5.588746070861816
    6. 'len' → logprob: -5.963746070861816
    7. ' len' → logprob: -6.088746070861816
    8. ' ' → logprob: -6.213746070861816
    9. ' max' → logprob: -6.338746070861816
    10. '+' → logprob: -6.463746070861816

Token 259: ' nombre' (ID: 9733)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -0.8482357263565063
    2. ' nombre' → logprob: -1.3482357263565063
    3. 'nombre' → logprob: -1.9732357263565063
    4. ' maximum' → logprob: -2.348235607147217
    5. 'max' → logprob: -2.598235607147217
    6. ' max' → logprob: -6.473235607147217
    7. 'score' → logprob: -7.598235607147217
    8. ' résultat' → logprob: -7.973235607147217
    9. '+' → logprob: -8.348236083984375
    10. 'result' → logprob: -9.223236083984375

Token 260: ' de' (ID: 334)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.5429080724716187
    2. ' =' → logprob: -2.042908191680908
    3. 'max' → logprob: -2.417908191680908
    4. 'from' → logprob: -3.542908191680908
    5. '_direction' → logprob: -3.667908191680908
    6. '=' → logprob: -3.917908191680908
    7. 's' → logprob: -4.167908191680908
    8. 'direction' → logprob: -4.167908191680908
    9. ' directions' → logprob: -4.167908191680908
    10. 'of' → logprob: -4.792908191680908

Token 261: ' blocs' (ID: 182599)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.888590931892395
    2. ' parts' → logprob: -1.013590931892395
    3. 'part' → logprob: -2.2635908126831055
    4. ' parties' → logprob: -2.5135908126831055
    5. ' morceaux' → logprob: -4.5135908126831055
    6. ' blocs' → logprob: -4.6385908126831055
    7. 'segments' → logprob: -6.0135908126831055
    8. ' segments' → logprob: -6.3885908126831055
    9. 'ros' → logprob: -6.3885908126831055
    10. 'pieces' → logprob: -6.5135908126831055

Token 262: ' travers' (ID: 26957)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.8217875361442566
    2. 'direction' → logprob: -1.6967875957489014
    3. 's' → logprob: -2.3217875957489014
    4. 'from' → logprob: -2.4467875957489014
    5. '_direction' → logprob: -3.1967875957489014
    6. 'import' → logprob: -3.6967875957489014
    7. '#' → logprob: -3.9467875957489014
    8. ' directions' → logprob: -4.321787357330322
    9. '
' → logprob: -4.571787357330322
    10. 'count' → logprob: -4.821787357330322

Token 263: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.005913865752518177
    2. '#' → logprob: -5.755913734436035
    3. 's' → logprob: -6.755913734436035
    4. 'es' → logprob: -7.630913734436035
    5. 'ées' → logprob: -8.505913734436035
    6. 'rés' → logprob: -8.630913734436035
    7. 'é' → logprob: -8.755913734436035
    8. '```' → logprob: -8.880913734436035
    9. 'ès' → logprob: -10.130913734436035
    10. 'érés' → logprob: -10.255913734436035

Token 264: ' par' (ID: 686)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.5791430473327637
    2. 'from' → logprob: -0.9541430473327637
    3. 'direction' → logprob: -3.3291430473327637
    4. 'count' → logprob: -6.204143047332764
    5. 'counts' → logprob: -6.204143047332764
    6. 'dirs' → logprob: -6.329143047332764
    7. 'rose' → logprob: -6.454143047332764
    8. 'dir' → logprob: -6.579143047332764
    9. ' from' → logprob: -6.829143047332764
    10. ' directions' → logprob: -7.079143047332764

Token 265: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.3298761248588562
    2. ' la' → logprob: -1.329876184463501
    3. 'une' → logprob: -4.579875946044922
    4. ' une' → logprob: -5.704875946044922
    5. ' cette' → logprob: -6.954875946044922
    6. 'l' → logprob: -7.204875946044922
    7. '#' → logprob: -7.704875946044922
    8. 'le' → logprob: -8.829875946044922
    9. 'c' → logprob: -9.454875946044922
    10. ''une' → logprob: -9.579875946044922

Token 266: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.6576665639877319
    2. ' droite' → logprob: -1.032666563987732
    3. 'b' → logprob: -2.4076666831970215
    4. 'ligne' → logprob: -4.2826666831970215
    5. ' ligne' → logprob: -5.0326666831970215
    6. ' balle' → logprob: -6.1576666831970215
    7. '#' → logprob: -6.1576666831970215
    8. 'd' → logprob: -6.5326666831970215
    9. 'f' → logprob: -6.7826666831970215
    10. 'direction' → logprob: -6.9076666831970215

Token 267: '
' (ID: 198)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.398074209690094
    2. 'from' → logprob: -2.148074150085449
    3. 'direction' → logprob: -2.273074150085449
    4. 'max' → logprob: -3.898074150085449
    5. 'counts' → logprob: -4.148074150085449
    6. '
' → logprob: -4.273074150085449
    7. 'count' → logprob: -4.398074150085449
    8. 'dp' → logprob: -4.773074150085449
    9. 'import' → logprob: -5.273074150085449
    10. '#' → logprob: -5.273074150085449

Token 268: '#' (ID: 2)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.3703858256340027
    2. 'direction' → logprob: -2.3703858852386475
    3. 'from' → logprob: -2.6203858852386475
    4. 'count' → logprob: -3.2453858852386475
    5. 'counts' → logprob: -3.6203858852386475
    6. 'max' → logprob: -3.9953858852386475
    7. 'rose' → logprob: -4.495385646820068
    8. 'cnt' → logprob: -4.995385646820068
    9. 'dp' → logprob: -4.995385646820068
    10. 'dir' → logprob: -5.245385646820068

Token 269: ' Le' (ID: 2018)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.3086690306663513
    2. 'from' → logprob: -2.433669090270996
    3. 'direction' → logprob: -2.683669090270996
    4. 'max' → logprob: -3.308669090270996
    5. 'count' → logprob: -4.183669090270996
    6. 'counts' → logprob: -4.308669090270996
    7. '
' → logprob: -5.058669090270996
    8. 'dirs' → logprob: -5.183669090270996
    9. '#' → logprob: -5.558669090270996
    10. 'dir' → logprob: -5.558669090270996

Token 270: ' nombre' (ID: 9733)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2973572313785553
    2. 'dire' → logprob: -2.5473573207855225
    3. 'result' → logprob: -2.9223573207855225
    4. ' max' → logprob: -3.1723573207855225
    5. 'answer' → logprob: -4.047357082366943
    6. 'res' → logprob: -4.297357082366943
    7. '#' → logprob: -4.297357082366943
    8. 'direction' → logprob: -5.422357082366943
    9. 'maximum' → logprob: -5.547357082366943
    10. 'import' → logprob: -5.672357082366943

Token 271: ' de' (ID: 334)
  Prédit: '_parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parts' → logprob: -0.18002356588840485
    2. '_de' → logprob: -2.055023670196533
    3. '_part' → logprob: -3.555023670196533
    4. '_div' → logprob: -6.180023670196533
    5. 'de' → logprob: -6.555023670196533
    6. 'parts' → logprob: -6.805023670196533
    7. '_max' → logprob: -6.930023670196533
    8. ' de' → logprob: -7.305023670196533
    9. 'part' → logprob: -7.430023670196533
    10. '_bloc' → logprob: -8.055023193359375

Token 272: ' morceaux' (ID: 133321)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.18737973272800446
    2. 'parts' → logprob: -1.9373797178268433
    3. ' parts' → logprob: -3.812379837036133
    4. ' parties' → logprob: -5.437379837036133
    5. ' part' → logprob: -8.687379837036133
    6. ' partis' → logprob: -10.062379837036133
    7. 'pieces' → logprob: -10.562379837036133
    8. ' partitions' → logprob: -10.812379837036133
    9. ' morceaux' → logprob: -11.687379837036133
    10. 'cases' → logprob: -11.812379837036133

Token 273: ' sera' (ID: 15511)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3368590176105499
    2. '=' → logprob: -1.9618589878082275
    3. ':' → logprob: -3.4618589878082275
    4. '#' → logprob: -3.8368589878082275
    5. ' =
' → logprob: -3.8368589878082275
    6. 'max' → logprob: -4.211859226226807
    7. '=
' → logprob: -4.711859226226807
    8. 'import' → logprob: -4.836859226226807
    9. '.' → logprob: -4.836859226226807
    10. '
' → logprob: -4.836859226226807

Token 274: ' donc' (ID: 14206)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3734716773033142
    2. ' max' → logprob: -1.873471736907959
    3. '(max' → logprob: -2.123471736907959
    4. ' (' → logprob: -3.623471736907959
    5. ' maximum' → logprob: -5.873471736907959
    6. 'maximum' → logprob: -5.998471736907959
    7. 'blocks' → logprob: -6.748471736907959
    8. 'count' → logprob: -7.373471736907959
    9. '(' → logprob: -7.498471736907959
    10. ' blocks' → logprob: -7.623471736907959

Token 275: ' ce' (ID: 2357)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6558530330657959
    2. ' max' → logprob: -1.155853033065796
    3. 'count' → logprob: -3.405853033065796
    4. ' count' → logprob: -4.030853271484375
    5. ' (' → logprob: -4.155853271484375
    6. '(max' → logprob: -4.155853271484375
    7. ' blocs' → logprob: -4.155853271484375
    8. 'blocks' → logprob: -4.405853271484375
    9. ' blocks' → logprob: -4.655853271484375
    10. ' directions' → logprob: -4.905853271484375

Token 276: ' nombre' (ID: 9733)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1139715388417244
    2. 'maximum' → logprob: -2.613971471786499
    3. '_max' → logprob: -4.363971710205078
    4. ' maximum' → logprob: -4.863971710205078
    5. ' max' → logprob: -6.238971710205078
    6. 'count' → logprob: -6.363971710205078
    7. '+' → logprob: -6.613971710205078
    8. '#' → logprob: -6.988971710205078
    9. '```' → logprob: -7.113971710205078
    10. 'cnt' → logprob: -7.113971710205078

Token 277: ' +' (ID: 659)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9408597946166992
    2. 'import' → logprob: -1.4408597946166992
    3. 'max' → logprob: -2.940859794616699
    4. ' =' → logprob: -2.940859794616699
    5. '```' → logprob: -3.315859794616699
    6. '#' → logprob: -3.440859794616699
    7. ',' → logprob: -3.815859794616699
    8. 'def' → logprob: -4.065859794616699
    9. 'from' → logprob: -4.190859794616699
    10. 'dx' → logprob: -4.190859794616699

Token 278: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002166491176467389
    2. ' ' → logprob: -8.500216484069824
    3. '```' → logprob: -11.250216484069824
    4. '   ' → logprob: -16.75021743774414
    5. '`' → logprob: -18.62521743774414
    6. 'import' → logprob: -19.62521743774414
    7. '``' → logprob: -19.62521743774414
    8. '
' → logprob: -19.62521743774414
    9. ' one' → logprob: -19.87521743774414
    10. '１' → logprob: -19.87521743774414

Token 279: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '```' → logprob: -16.750003814697266
    4. '   ' → logprob: -18.125003814697266
    5. '１' → logprob: -20.750003814697266
    6. '2' → logprob: -21.375003814697266
    7. '`' → logprob: -21.875003814697266
    8. '
' → logprob: -22.125003814697266
    9. '۱' → logprob: -22.875003814697266
    10. 'import' → logprob: -23.000003814697266

Token 280: '

' (ID: 279)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.22857387363910675
    2. 'from' → logprob: -2.228573799133301
    3. 'direction' → logprob: -2.728573799133301
    4. 'dir' → logprob: -5.228573799133301
    5. 'dirs' → logprob: -5.228573799133301
    6. 'max' → logprob: -5.353573799133301
    7. '
' → logprob: -6.103573799133301
    8. 'rose' → logprob: -6.228573799133301
    9. ' directions' → logprob: -6.228573799133301
    10. 's' → logprob: -6.478573799133301

Token 281: 'from' (ID: 2845)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.22424253821372986
    2. 'dire' → logprob: -1.8492425680160522
    3. 'direction' → logprob: -3.5992424488067627
    4. 'from' → logprob: -5.849242687225342
    5. 'dx' → logprob: -6.349242687225342
    6. '#' → logprob: -6.724242687225342
    7. 'dirs' → logprob: -6.724242687225342
    8. 'dir' → logprob: -6.724242687225342
    9. 'dp' → logprob: -6.849242687225342
    10. 'rose' → logprob: -7.099242687225342

Token 282: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.13305622339248657
    2. 'collections' → logprob: -2.133056163787842
    3. 'fra' → logprob: -5.133056163787842
    4. ' math' → logprob: -8.633056640625
    5. ' fractions' → logprob: -10.633056640625
    6. ' collections' → logprob: -12.008056640625
    7. ' ' → logprob: -13.758056640625
    8. 'mat' → logprob: -14.508056640625
    9. 'cmath' → logprob: -15.008056640625
    10. '   ' → logprob: -15.633056640625

Token 283: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1438940316438675
    2. ' import' → logprob: -2.0188939571380615
    3. '	import' → logprob: -7.393894195556641
    4. 'from' → logprob: -8.26889419555664
    5. '<|end|>' → logprob: -8.26889419555664
    6. '```' → logprob: -10.76889419555664
    7. ' ' → logprob: -11.01889419555664
    8. ' from' → logprob: -11.51889419555664
    9. '_import' → logprob: -11.64389419555664
    10. '.import' → logprob: -12.51889419555664

Token 284: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.002772547537460923
    2. ' gcd' → logprob: -6.002772331237793
    3. 'atan' → logprob: -8.127772331237793
    4. '.g' → logprob: -14.252772331237793
    5. 'fra' → logprob: -14.377772331237793
    6. 'sqrt' → logprob: -16.00277328491211
    7. '```' → logprob: -16.50277328491211
    8. 'ceil' → logprob: -17.12777328491211
    9. '	g' → logprob: -17.12777328491211
    10. 'import' → logprob: -17.87777328491211

Token 285: '

' (ID: 279)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.2518150210380554
    2. 'direction' → logprob: -2.2518150806427
    3. 'counts' → logprob: -3.6268150806427
    4. 'count' → logprob: -4.001814842224121
    5. 'def' → logprob: -4.376814842224121
    6. 'max' → logprob: -4.626814842224121
    7. 'rose' → logprob: -4.626814842224121
    8. 'dir' → logprob: -4.751814842224121
    9. 'dirs' → logprob: -5.251814842224121
    10. '
' → logprob: -5.376814842224121

Token 286: 'start' (ID: 5236)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.4186914563179016
    2. 'max' → logprob: -1.5436913967132568
    3. 'direction' → logprob: -2.918691396713257
    4. 'dirs' → logprob: -3.293691396713257
    5. 'def' → logprob: -4.668691635131836
    6. 'dir' → logprob: -4.793691635131836
    7. 'rose' → logprob: -5.293691635131836
    8. 'points' → logprob: -5.793691635131836
    9. 'dp' → logprob: -6.043691635131836
    10. 'ans' → logprob: -6.543691635131836

Token 287: '_y' (ID: 9410)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25490623712539673
    2. '_x' → logprob: -1.754906177520752
    3. '_y' → logprob: -4.129906177520752
    4. '=' → logprob: -4.129906177520752
    5. ' =' → logprob: -4.879906177520752
    6. '_point' → logprob: -5.629906177520752
    7. '_dx' → logprob: -6.129906177520752
    8. 'X' → logprob: -6.629906177520752
    9. 'x' → logprob: -6.879906177520752
    10. '_dir' → logprob: -7.004906177520752

Token 288: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5388126969337463
    2. ' =' → logprob: -0.9138126969337463
    3. ',' → logprob: -4.163812637329102
    4. ' ,' → logprob: -11.038812637329102
    5. ' ' → logprob: -15.038812637329102
    6. ',y' → logprob: -15.038812637329102
    7. '=end' → logprob: -15.163812637329102
    8. '=start' → logprob: -15.288812637329102
    9. ' =
' → logprob: -15.413812637329102
    10. ',start' → logprob: -15.663812637329102

Token 289: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00014585316239390522
    2. ' start' → logprob: -8.87514591217041
    3. 'H' → logprob: -12.12514591217041
    4. 'end' → logprob: -16.250144958496094
    5. '=start' → logprob: -16.250144958496094
    6. '0' → logprob: -16.500144958496094
    7. '	start' → logprob: -17.000144958496094
    8. '_start' → logprob: -17.250144958496094
    9. '
' → logprob: -17.375144958496094
    10. '(start' → logprob: -17.625144958496094

Token 290: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.8665197491645813
    2. '_' → logprob: -0.9915197491645813
    3. '=' → logprob: -1.6165196895599365
    4. ' =' → logprob: -5.491519927978516
    5. '_y' → logprob: -5.491519927978516
    6. '_=' → logprob: -6.866519927978516
    7. 'x' → logprob: -7.366519927978516
    8. ',' → logprob: -11.616519927978516
    9. '=_' → logprob: -11.991519927978516
    10. ')' → logprob: -12.241519927978516

Token 291: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519298195838928
    2. ' =' → logprob: -1.501929759979248
    3. '＝' → logprob: -15.501930236816406
    4. ' =
' → logprob: -15.876930236816406
    5. '=

' → logprob: -16.376930236816406
    6. '=
' → logprob: -16.501930236816406
    7. ',' → logprob: -16.501930236816406
    8. '=}' → logprob: -16.876930236816406
    9. ' =
' → logprob: -17.751930236816406
    10. ' ' → logprob: -18.001930236816406

Token 292: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -2.1054253011243418e-05
    2. ' H' → logprob: -10.875020980834961
    3. '(H' → logprob: -13.125020980834961
    4. '	H' → logprob: -17.87502098083496
    5. '_H' → logprob: -20.12502098083496
    6. ',H' → logprob: -20.25002098083496
    7. '   ' → logprob: -20.25002098083496
    8. ' (' → logprob: -20.37502098083496
    9. 'Hx' → logprob: -20.50002098083496
    10. 'HBox' → logprob: -21.12502098083496

Token 293: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0013263145228847861
    2. ' -' → logprob: -6.626326084136963
    3. '1' → logprob: -15.251326560974121
    4. '<|end|>' → logprob: -16.626325607299805
    5. '−' → logprob: -16.876325607299805
    6. ')' → logprob: -17.251325607299805
    7. ' ' → logprob: -17.376325607299805
    8. '```' → logprob: -18.126325607299805
    9. '<|end|>' → logprob: -18.501325607299805
    10. '–' → logprob: -19.001325607299805

Token 294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '<|end|>' → logprob: -18.5
    4. '```' → logprob: -19.5
    5. 'import' → logprob: -20.75
    6. 'start' → logprob: -21.0
    7. ',' → logprob: -21.375
    8. '
' → logprob: -21.625
    9. '<|end|>' → logprob: -22.0
    10. '0' → logprob: -22.125

Token 295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000541592831723392
    2. ' ,' → logprob: -7.750541687011719
    3. '<|end|>' → logprob: -10.125541687011719
    4. ',start' → logprob: -10.500541687011719
    5. ',
' → logprob: -10.625541687011719
    6. '0' → logprob: -12.125541687011719
    7. 'start' → logprob: -12.250541687011719
    8. '<|end|>' → logprob: -13.625541687011719
    9. '
' → logprob: -14.000541687011719
    10. 'import' → logprob: -14.000541687011719

Token 296: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '<|end|>' → logprob: -19.625017166137695
    4. '۰' → logprob: -20.000017166137695
    5. '   ' → logprob: -20.750017166137695
    6. '  ' → logprob: -20.875017166137695
    7. '`' → logprob: -21.625017166137695
    8. '```' → logprob: -21.875017166137695
    9. '０' → logprob: -22.500017166137695
    10. ' ' → logprob: -22.625017166137695

Token 297: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '<|end|>' → logprob: -20.0
    4. '۰' → logprob: -20.75
    5. '０' → logprob: -23.0
    6. '`' → logprob: -23.0
    7. '```' → logprob: -23.0
    8. '   ' → logprob: -23.25
    9. '=' → logprob: -23.375
    10. '
' → logprob: -23.625

Token 298: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08149745315313339
    2. 'dire' → logprob: -3.2064974308013916
    3. 'direction' → logprob: -3.9564974308013916
    4. 'counts' → logprob: -4.956497669219971
    5. 'count' → logprob: -5.331497669219971
    6. 'max' → logprob: -5.956497669219971
    7. 'rose' → logprob: -6.581497669219971
    8. '#' → logprob: -7.956497669219971
    9. 'blocks' → logprob: -8.081497192382812
    10. 'points' → logprob: -8.331497192382812

Token 299: 'dire' (ID: 57765)
  Prédit: 'dire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.3723871409893036
    2. 'direction' → logprob: -1.622387170791626
    3. 'dir' → logprob: -2.872387170791626
    4. 'count' → logprob: -3.872387170791626
    5. 'rose' → logprob: -4.122386932373047
    6. 'dirs' → logprob: -4.622386932373047
    7. 'counts' → logprob: -5.622386932373047
    8. 'block' → logprob: -6.122386932373047
    9. 'from' → logprob: -6.247386932373047
    10. 'ros' → logprob: -7.372386932373047

Token 300: 'ctions' (ID: 2620)
  Prédit: 'ctions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ctions' → logprob: -0.001007919549010694
    2. 'ction' → logprob: -7.001008033752441
    3. 'cts' → logprob: -10.501008033752441
    4. 'c' → logprob: -10.751008033752441
    5. 'ct' → logprob: -11.126008033752441
    6. 'CTIONS' → logprob: -11.501008033752441
    7. 'ns' → logprob: -12.126008033752441
    8. 'ections' → logprob: -12.376008033752441
    9. '_' → logprob: -12.876008033752441
    10. 'x' → logprob: -13.501008033752441

Token 301: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975199744105339
    2. ' =' → logprob: -3.529752016067505
    3. '={}' → logprob: -13.404751777648926
    4. '＝' → logprob: -17.154752731323242
    5. '={' → logprob: -17.779752731323242
    6. ' ' → logprob: -18.154752731323242
    7. '=[]' → logprob: -18.529752731323242
    8. '={}
' → logprob: -18.529752731323242
    9. '=set' → logprob: -19.279752731323242
    10. '=

' → logprob: -19.279752731323242

Token 302: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -7.684157026233152e-05
    2. 'dict' → logprob: -9.500077247619629
    3. 'default' → logprob: -13.375077247619629
    4. '{}
' → logprob: -15.250077247619629
    5. '{}

' → logprob: -16.625076293945312
    6. ' {}' → logprob: -17.250076293945312
    7. '[]' → logprob: -17.500076293945312
    8. '{})' → logprob: -17.625076293945312
    9. 'set' → logprob: -18.250076293945312
    10. '{},' → logprob: -18.875076293945312

Token 303: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1756367712223437e-05
    2. '
' → logprob: -12.000011444091797
    3. ' for' → logprob: -12.125011444091797
    4. '	for' → logprob: -19.375011444091797
    5. '

' → logprob: -19.625011444091797
    6. '    
' → logprob: -19.750011444091797
    7. ' 
' → logprob: -19.875011444091797
    8. '   ' → logprob: -20.125011444091797
    9. '  
' → logprob: -20.250011444091797
    10. '```' → logprob: -21.250011444091797

Token 304: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6363987922668457
    2. ' y' → logprob: -0.7613987922668457
    3. 'i' → logprob: -6.386398792266846
    4. ' i' → logprob: -6.761398792266846
    5. 'r' → logprob: -7.636398792266846
    6. 'h' → logprob: -8.886398315429688
    7. ' r' → logprob: -9.011398315429688
    8. ' ' → logprob: -10.386398315429688
    9. '_y' → logprob: -10.511398315429688
    10. 'row' → logprob: -10.636398315429688

Token 305: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04862938076257706
    2. 'in' → logprob: -3.0486292839050293
    3. ',' → logprob: -10.423629760742188
    4. '	in' → logprob: -12.298629760742188
    5. ' ' → logprob: -12.798629760742188
    6. ' ,' → logprob: -13.298629760742188
    7. 'y' → logprob: -14.673629760742188
    8. ',y' → logprob: -15.048629760742188
    9. ')' → logprob: -15.173629760742188
    10. 'range' → logprob: -15.548629760742188

Token 306: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0699467658996582
    2. ' range' → logprob: -2.694946765899658
    3. '0' → logprob: -12.5699462890625
    4. 'start' → logprob: -12.6949462890625
    5. ' ' → logprob: -13.3199462890625
    6. '   ' → logprob: -14.5699462890625
    7. '(range' → logprob: -14.6949462890625
    8. 'H' → logprob: -15.1949462890625
    9. '  ' → logprob: -15.3199462890625
    10. '	range' → logprob: -15.3199462890625

Token 307: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.31336113810539246
    2. 'H' → logprob: -1.3133611679077148
    3. '(start' → logprob: -9.938361167907715
    4. 'start' → logprob: -9.938361167907715
    5. '(' → logprob: -13.063361167907715
    6. ' H' → logprob: -14.938361167907715
    7. '	H' → logprob: -16.3133602142334
    8. ' start' → logprob: -16.4383602142334
    9. '   ' → logprob: -16.6883602142334
    10. ')' → logprob: -17.3133602142334

Token 308: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1281077116727829
    2. '):' → logprob: -2.128107786178589
    3. ',' → logprob: -7.25310754776001
    4. '-' → logprob: -8.253108024597168
    5. '   ' → logprob: -9.378108024597168
    6. '):

' → logprob: -10.253108024597168
    7. ')' → logprob: -10.628108024597168
    8. '):
' → logprob: -11.378108024597168
    9. '+' → logprob: -11.503108024597168
    10. '
' → logprob: -12.128108024597168

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03150065243244171
    2. ' for' → logprob: -3.5315005779266357
    3. 'for' → logprob: -6.406500816345215
    4. '	for' → logprob: -9.531500816345215
    5. '   ' → logprob: -10.781500816345215
    6. ' ' → logprob: -12.906500816345215
    7. '```' → logprob: -14.531500816345215
    8. '    
' → logprob: -14.781500816345215
    9. '   ' → logprob: -15.281500816345215
    10. '       ' → logprob: -15.531500816345215

Token 310: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4769795536994934
    2. 'for' (adapté à ' for') → logprob: -0.9769795536994934
    3. '   ' → logprob: -5.851979732513428
    4. ' range' → logprob: -11.35197925567627
    5. ' ' → logprob: -11.97697925567627
    6. 'range' → logprob: -12.72697925567627
    7. ' x' → logprob: -13.47697925567627
    8. '	for' → logprob: -14.10197925567627
    9. 'x' → logprob: -14.35197925567627
    10. '
' → logprob: -15.97697925567627

Token 311: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0380416102707386
    2. ' x' → logprob: -3.288041591644287
    3. ' ' → logprob: -16.288042068481445
    4. '   ' → logprob: -17.163042068481445
    5. '	x' → logprob: -18.788042068481445
    6. '0' → logprob: -19.663042068481445
    7. '_x' → logprob: -20.538042068481445
    8. '  ' → logprob: -20.663042068481445
    9. '```' → logprob: -20.663042068481445
    10. 'range' → logprob: -21.288042068481445

Token 312: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012550858780741692
    2. 'in' → logprob: -4.3875508308410645
    3. '   ' → logprob: -10.512551307678223
    4. ' ' → logprob: -12.262551307678223
    5. '	in' → logprob: -12.387551307678223
    6. '    ' → logprob: -13.387551307678223
    7. '=' → logprob: -14.512551307678223
    8. ',' → logprob: -14.512551307678223
    9. '  ' → logprob: -14.762551307678223
    10. ' =' → logprob: -14.887551307678223

Token 313: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1602465659379959
    2. ' range' → logprob: -1.9102466106414795
    3. 'W' → logprob: -10.910246849060059
    4. ' W' → logprob: -12.785246849060059
    5. '(range' → logprob: -14.035246849060059
    6. ' ' → logprob: -15.660246849060059
    7. '0' → logprob: -16.160245895385742
    8. '   ' → logprob: -16.285245895385742
    9. 'H' → logprob: -16.410245895385742
    10. '1' → logprob: -18.160245895385742

Token 314: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.0006259413785301149
    2. '(H' → logprob: -7.500626087188721
    3. '(' → logprob: -9.750625610351562
    4. 'range' → logprob: -11.750625610351562
    5. '(range' → logprob: -12.500625610351562
    6. ' range' → logprob: -13.000625610351562
    7. 'W' → logprob: -14.500625610351562
    8. ' (' → logprob: -15.750625610351562
    9. '((' → logprob: -17.000625610351562
    10. '(
' → logprob: -17.500625610351562

Token 315: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.008928547613322735
    2. '):' → logprob: -4.7589287757873535
    3. '   ' → logprob: -8.508928298950195
    4. ':' → logprob: -9.883928298950195
    5. '       ' → logprob: -11.133928298950195
    6. ' ):
' → logprob: -11.133928298950195
    7. ':
' → logprob: -11.258928298950195
    8. '):
' → logprob: -11.758928298950195
    9. '):

' → logprob: -12.258928298950195
    10. '():
' → logprob: -13.508928298950195

Token 316: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.590104698669165e-05
    2. ' if' → logprob: -9.750085830688477
    3. '   ' → logprob: -10.875085830688477
    4. '        
' → logprob: -13.000085830688477
    5. ',' → logprob: -13.250085830688477
    6. 'if' → logprob: -14.000085830688477
    7. '
' → logprob: -14.000085830688477
    8. '    
' → logprob: -14.250085830688477
    9. '     ' → logprob: -14.875085830688477
    10. '	   ' → logprob: -15.125085830688477

Token 317: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5822007060050964
    2. ' if' → logprob: -0.8322007060050964
    3. '           ' → logprob: -5.207200527191162
    4. '   ' → logprob: -7.582200527191162
    5. '       ' → logprob: -8.70720100402832
    6. ' ' → logprob: -9.70720100402832
    7. '	if' → logprob: -10.95720100402832
    8. '```' → logprob: -12.83220100402832
    9. ' ' → logprob: -13.20720100402832
    10. '  ' → logprob: -13.45720100402832

Token 318: ' garden' (ID: 13727)
  Prédit: ' garden'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' garden' → logprob: -0.043013233691453934
    2. 'garden' → logprob: -3.168013334274292
    3. ' ' → logprob: -12.168013572692871
    4. '   ' → logprob: -12.918013572692871
    5. ' jardin' → logprob: -13.793013572692871
    6. ' y' → logprob: -13.918013572692871
    7. 'g' → logprob: -14.543013572692871
    8. 'Garden' → logprob: -14.543013572692871
    9. ' gardener' → logprob: -14.668013572692871
    10. 'gard' → logprob: -14.793013572692871

Token 319: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -4.320199877838604e-07
    2. '[x' → logprob: -15.75
    3. '[' → logprob: -16.75
    4. 'y' → logprob: -17.125
    5. ' [' → logprob: -17.25
    6. '[
' → logprob: -17.5
    7. '[Y' → logprob: -17.625
    8. '[start' → logprob: -18.625
    9. '```' → logprob: -18.875
    10. '   ' → logprob: -19.0

Token 320: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1499090939760208
    2. '[y' → logprob: -2.274909019470215
    3. '[x' → logprob: -3.524909019470215
    4. ']' → logprob: -5.399909019470215
    5. '==' → logprob: -7.274909019470215
    6. ']==' → logprob: -7.399909019470215
    7. '[' → logprob: -8.024909019470215
    8. ''][' → logprob: -8.649909019470215
    9. '"][' → logprob: -8.899909019470215
    10. '[row' → logprob: -9.399909019470215

Token 321: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.9153885558771435e-06
    2. ' x' → logprob: -12.125005722045898
    3. ']' → logprob: -14.875005722045898
    4. ''x' → logprob: -18.6250057220459
    5. '0' → logprob: -19.1250057220459
    6. '	x' → logprob: -19.5000057220459
    7. ')x' → logprob: -19.6250057220459
    8. ' ' → logprob: -19.6250057220459
    9. '```' → logprob: -19.7500057220459
    10. '"x' → logprob: -19.8750057220459

Token 322: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19811800122261047
    2. '==' → logprob: -1.948117971420288
    3. ']==' → logprob: -3.448117971420288
    4. ' ==' → logprob: -5.323118209838867
    5. ']=='' → logprob: -7.948118209838867
    6. '=='' → logprob: -9.823118209838867
    7. '#' → logprob: -10.198118209838867
    8. '==
' → logprob: -10.323118209838867
    9. ')' → logprob: -11.823118209838867
    10. ' ]' → logprob: -12.323118209838867

Token 323: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0893804132938385
    2. ' ==' → logprob: -2.4643805027008057
    3. '==
' → logprob: -8.589380264282227
    4. '=' → logprob: -8.964380264282227
    5. '=='' → logprob: -9.464380264282227
    6. '#' → logprob: -10.339380264282227
    7. ']==' → logprob: -11.339380264282227
    8. ']' → logprob: -13.964380264282227
    9. ')==' → logprob: -13.964380264282227
    10. '=="' → logprob: -14.464380264282227

Token 324: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.0004982246900908649
    2. ' '#'' → logprob: -8.500497817993164
    3. ' '#' → logprob: -8.625497817993164
    4. '"#' → logprob: -9.625497817993164
    5. ''' → logprob: -10.000497817993164
    6. ''*' → logprob: -13.750497817993164
    7. '#' → logprob: -14.125497817993164
    8. '('#' → logprob: -14.875497817993164
    9. '	' → logprob: -15.125497817993164
    10. ''>' → logprob: -15.375497817993164

Token 325: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5103768706321716
    2. ':' → logprob: -1.1353769302368164
    3. '':
' → logprob: -3.2603769302368164
    4. '':' → logprob: -4.135376930236816
    5. '):
' → logprob: -4.260376930236816
    6. ' and' → logprob: -5.885376930236816
    7. '       ' → logprob: -6.010376930236816
    8. '):' → logprob: -6.385376930236816
    9. ')' → logprob: -7.135376930236816
    10. '           ' → logprob: -7.760376930236816

Token 326: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6958954334259033
    2. ' dy' → logprob: -0.6958954334259033
    3. 'dy' → logprob: -5.945895195007324
    4. '            
' → logprob: -10.070895195007324
    5. ' ' → logprob: -10.570895195007324
    6. '          ' → logprob: -11.320895195007324
    7. '   ' → logprob: -11.945895195007324
    8. ' ' → logprob: -12.445895195007324
    9. ' y' → logprob: -12.570895195007324
    10. '```' → logprob: -12.570895195007324

Token 327: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' (adapté à ' dy') → logprob: -0.0014557128306478262
    2. ' dy' → logprob: -6.626455783843994
    3. '           ' → logprob: -9.001455307006836
    4. '   ' → logprob: -12.626455307006836
    5. '```' → logprob: -13.251455307006836
    6. 'dx' → logprob: -14.876455307006836
    7. '               ' → logprob: -15.251455307006836
    8. ' ' → logprob: -15.501455307006836
    9. '            
' → logprob: -15.876455307006836
    10. '
' → logprob: -16.001455307006836

Token 328: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47413280606269836
    2. '=' → logprob: -0.974132776260376
    3. ',' → logprob: -10.599132537841797
    4. '=y' → logprob: -10.599132537841797
    5. ' ' → logprob: -13.724132537841797
    6. '```' → logprob: -14.599132537841797
    7. 'y' → logprob: -14.724132537841797
    8. '   ' → logprob: -14.849132537841797
    9. ')' → logprob: -14.849132537841797
    10. '    ' → logprob: -15.224132537841797

Token 329: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.026196138933300972
    2. 'start' → logprob: -3.776196241378784
    3. ' y' → logprob: -5.901196002960205
    4. '   ' → logprob: -9.151196479797363
    5. ' start' → logprob: -9.901196479797363
    6. '(y' → logprob: -10.401196479797363
    7. '-(' → logprob: -12.026196479797363
    8. '(start' → logprob: -12.526196479797363
    9. 'H' → logprob: -12.776196479797363
    10. '-y' → logprob: -13.401196479797363

Token 330: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08915397524833679
    2. '-' → logprob: -2.464154005050659
    3. '-start' → logprob: -8.464154243469238
    4. '
' → logprob: -14.464154243469238
    5. '   ' → logprob: -14.714154243469238
    6. ' ' → logprob: -14.839154243469238
    7. '-
' → logprob: -15.214154243469238
    8. 'start' → logprob: -15.464154243469238
    9. '-end' → logprob: -15.464154243469238
    10. ' start' → logprob: -15.714154243469238

Token 331: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00021474185632541776
    2. ' start' → logprob: -8.625214576721191
    3. '(H' → logprob: -10.875214576721191
    4. '(start' → logprob: -11.125214576721191
    5. ' (' → logprob: -13.875214576721191
    6. '(' → logprob: -15.375214576721191
    7. '   ' → logprob: -16.000215530395508
    8. '```' → logprob: -16.625215530395508
    9. 'star' → logprob: -17.250215530395508
    10. 'H' → logprob: -17.250215530395508

Token 332: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -3.2617008400848135e-05
    2. 'y' → logprob: -10.375032424926758
    3. '_x' → logprob: -13.750032424926758
    4. '_' → logprob: -15.625032424926758
    5. 'Y' → logprob: -16.875032424926758
    6. '\' → logprob: -19.000032424926758
    7. '```' → logprob: -20.625032424926758
    8. '_j' → logprob: -21.000032424926758
    9. '	y' → logprob: -21.000032424926758
    10. 'start' → logprob: -21.375032424926758

Token 333: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14914800226688385
    2. '
' → logprob: -2.5241479873657227
    3. '            
' → logprob: -2.8991479873657227
    4. '<|end|>' → logprob: -7.274147987365723
    5. ',' → logprob: -7.399147987365723
    6. '           
' → logprob: -7.649147987365723
    7. '  
' → logprob: -8.024147987365723
    8. ' 
' → logprob: -8.399147987365723
    9. '<|end|>' → logprob: -8.899147987365723
    10. '
' → logprob: -9.274147987365723

Token 334: '           ' (ID: 352)
  Prédit: ' dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.16030393540859222
    2. 'dx' → logprob: -1.9103039503097534
    3. '           ' → logprob: -9.535304069519043
    4. '_dx' → logprob: -12.410304069519043
    5. ',' → logprob: -13.660304069519043
    6. '.dx' → logprob: -14.285304069519043
    7. '(dx' → logprob: -14.910304069519043
    8. '            
' → logprob: -14.910304069519043
    9. '   ' → logprob: -15.410304069519043
    10. '               ' → logprob: -16.035303115844727

Token 335: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' (adapté à ' dx') → logprob: -0.011049231514334679
    2. ' dx' → logprob: -4.511049270629883
    3. '_dx' → logprob: -14.261049270629883
    4. '           ' → logprob: -14.886049270629883
    5. '(dx' → logprob: -15.886049270629883
    6. '.dx' → logprob: -15.886049270629883
    7. '   ' → logprob: -18.011049270629883
    8. 'Dx' → logprob: -18.136049270629883
    9. '               ' → logprob: -18.261049270629883
    10. 'd' → logprob: -18.386049270629883

Token 336: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759432911872864
    2. ' =' → logprob: -0.8259432911872864
    3. ' ' → logprob: -12.700942993164062
    4. '<|end|>' → logprob: -15.325942993164062
    5. '=x' → logprob: -15.825942993164062
    6. ' =
' → logprob: -16.200942993164062
    7. '=
' → logprob: -16.450942993164062
    8. '＝' → logprob: -17.200942993164062
    9. ' =)' → logprob: -17.200942993164062
    10. '=int' → logprob: -17.200942993164062

Token 337: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.048587825149297714
    2. ' x' → logprob: -3.0485877990722656
    3. '(x' → logprob: -14.798587799072266
    4. '   ' → logprob: -16.798587799072266
    5. '	x' → logprob: -17.048587799072266
    6. ' ' → logprob: -17.548587799072266
    7. '    ' → logprob: -19.298587799072266
    8. '  ' → logprob: -19.298587799072266
    9. '[x' → logprob: -19.423587799072266
    10. ' (' → logprob: -19.673587799072266

Token 338: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07478678226470947
    2. '-' → logprob: -2.94978666305542
    3. '=' → logprob: -4.07478666305542
    4. ' =' → logprob: -6.32478666305542
    5. '<|end|>' → logprob: -7.82478666305542
    6. ' -=' → logprob: -8.574787139892578
    7. 'dx' → logprob: -9.199787139892578
    8. '-=' → logprob: -9.449787139892578
    9. ' ' → logprob: -9.949787139892578
    10. ' dx' → logprob: -10.324787139892578

Token 339: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.03812388703227043
    2. ' start' → logprob: -3.288123846054077
    3. '0' → logprob: -9.413124084472656
    4. ' ' → logprob: -14.288124084472656
    5. '(start' → logprob: -17.288124084472656
    6. '	start' → logprob: -17.413124084472656
    7. '=start' → logprob: -17.663124084472656
    8. '[start' → logprob: -18.288124084472656
    9. '  ' → logprob: -18.413124084472656
    10. '   ' → logprob: -18.788124084472656

Token 340: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00014001218369230628
    2. 'x' → logprob: -8.875140190124512
    3. '```' → logprob: -17.125139236450195
    4. '_' → logprob: -17.250139236450195
    5. '_y' → logprob: -18.250139236450195
    6. 'dx' → logprob: -18.500139236450195
    7. '_dx' → logprob: -19.000139236450195
    8. ' ' → logprob: -19.625139236450195
    9. '0' → logprob: -20.000139236450195
    10. '[' → logprob: -20.625139236450195

Token 341: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4842904210090637
    2. '
' → logprob: -0.9842904210090637
    3. '            
' → logprob: -4.859290599822998
    4. ' if' → logprob: -7.234290599822998
    5. 'if' → logprob: -7.859290599822998
    6. '
' → logprob: -7.859290599822998
    7. '  
' → logprob: -7.859290599822998
    8. 'g' → logprob: -9.10929012298584
    9. ' 
' → logprob: -9.48429012298584
    10. ',' → logprob: -9.85929012298584

Token 342: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0040987045504152775
    2. ' if' → logprob: -6.254098892211914
    3. '            
' → logprob: -6.879098892211914
    4. 'if' → logprob: -7.504098892211914
    5. 'g' → logprob: -7.629098892211914
    6. ' g' → logprob: -10.129098892211914
    7. '
' → logprob: -10.504098892211914
    8. '```' → logprob: -12.004098892211914
    9. '          ' → logprob: -12.379098892211914
    10. ' gcd' → logprob: -12.504098892211914

Token 343: ' #' (ID: 1069)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.5265870094299316
    2. ' if' → logprob: -1.7765870094299316
    3. 'if' → logprob: -1.9015870094299316
    4. ' g' → logprob: -2.4015870094299316
    5. '           ' → logprob: -8.401586532592773
    6. '            
' → logprob: -11.401586532592773
    7. ' gcd' → logprob: -11.901586532592773
    8. 'd' → logprob: -12.026586532592773
    9. 'def' → logprob: -12.901586532592773
    10. 'div' → logprob: -12.901586532592773

Token 344: ' On' (ID: 2160)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6349355578422546
    2. 'if' → logprob: -1.2599356174468994
    3. ' if' → logprob: -1.8849356174468994
    4. ' g' → logprob: -3.3849356174468994
    5. 'd' → logprob: -8.00993537902832
    6. '           ' → logprob: -8.88493537902832
    7. 'div' → logprob: -10.00993537902832
    8. ' d' → logprob: -10.63493537902832
    9. '            
' → logprob: -10.75993537902832
    10. 'If' → logprob: -11.00993537902832

Token 345: ' veut' (ID: 41653)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5816489458084106
    2. ' if' → logprob: -0.9566489458084106
    3. 'continue' → logprob: -3.831648826599121
    4. ' continue' → logprob: -3.956648826599121
    5. '           ' → logprob: -4.706648826599121
    6. 'g' → logprob: -5.206648826599121
    7. 'n' → logprob: -7.456648826599121
    8. '#' → logprob: -8.206648826599121
    9. '            
' → logprob: -9.081648826599121
    10. ' continues' → logprob: -9.331648826599121

Token 346: ' normal' (ID: 6078)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1121896505355835
    2. ' continuer' → logprob: -1.2371896505355835
    3. 'if' → logprob: -2.487189769744873
    4. ' normal' → logprob: -2.737189769744873
    5. ' continue' → logprob: -3.237189769744873
    6. 'contin' → logprob: -3.362189769744873
    7. '           ' → logprob: -3.862189769744873
    8. 'continue' → logprob: -3.987189769744873
    9. ' éviter' → logprob: -4.237189769744873
    10. 'simpl' → logprob: -4.362189769744873

Token 347: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.0716572031378746
    2. 'izer' → logprob: -3.196657180786133
    3. 'ize' → logprob: -3.821657180786133
    4. 'ized' → logprob: -5.321657180786133
    5. 'isé' → logprob: -6.696657180786133
    6. 'er' → logprob: -9.821657180786133
    7. 'y' → logprob: -10.571657180786133
    8. 'iz' → logprob: -10.821657180786133
    9. 'isez' → logprob: -10.821657180786133
    10. 'is' → logprob: -10.946657180786133

Token 348: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.726652979850769
    2. ' if' → logprob: -1.226652979850769
    3. ' dy' → logprob: -2.7266530990600586
    4. ' le' → logprob: -3.2266530990600586
    5. ' la' → logprob: -3.3516530990600586
    6. 'if' → logprob: -3.7266530990600586
    7. ' dx' → logprob: -4.226653099060059
    8. '            
' → logprob: -4.726653099060059
    9. 'dy' → logprob: -5.101653099060059
    10. 'dx' → logprob: -5.101653099060059

Token 349: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.03874346241354942
    2. ' dy' → logprob: -3.413743495941162
    3. ')' → logprob: -5.413743495941162
    4. 'dx' → logprob: -7.663743495941162
    5. ' )' → logprob: -10.038743019104004
    6. 'd' → logprob: -10.538743019104004
    7. ',' → logprob: -11.163743019104004
    8. '           ' → logprob: -11.163743019104004
    9. ')
' → logprob: -11.413743019104004
    10. '),' → logprob: -11.663743019104004

Token 350: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003314129135105759
    2. ' ,' → logprob: -8.12533187866211
    3. ',d' → logprob: -11.12533187866211
    4. ',
' → logprob: -11.50033187866211
    5. 'dx' → logprob: -12.75033187866211
    6. '           ' → logprob: -13.62533187866211
    7. '
' → logprob: -13.75033187866211
    8. '

' → logprob: -14.37533187866211
    9. '   ' → logprob: -14.75033187866211
    10. ',x' → logprob: -14.75033187866211

Token 351: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.20142221450805664
    2. ' dx' → logprob: -1.7014222145080566
    3. ' ' → logprob: -12.826421737670898
    4. '_dx' → logprob: -12.951421737670898
    5. '(dx' → logprob: -13.826421737670898
    6. '   ' → logprob: -13.826421737670898
    7. ')' → logprob: -14.076421737670898
    8. '.dx' → logprob: -15.201421737670898
    9. ',' → logprob: -15.451421737670898
    10. '
' → logprob: -15.576421737670898

Token 352: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007894305512309074
    2. ' )' → logprob: -5.507894515991211
    3. ')
' → logprob: -5.632894515991211
    4. ',' → logprob: -9.507894515991211
    5. ' )
' → logprob: -9.507894515991211
    6. '),' → logprob: -10.882894515991211
    7. '):
' → logprob: -11.257894515991211
    8. '):' → logprob: -11.257894515991211
    9. '           ' → logprob: -11.257894515991211
    10. ')

' → logprob: -12.132894515991211

Token 353: ' pour' (ID: 1930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.042794544249773026
    2. '            
' → logprob: -3.4177944660186768
    3. ',' → logprob: -5.292794704437256
    4. '=' → logprob: -7.417794704437256
    5. '
' → logprob: -7.542794704437256
    6. 'if' → logprob: -7.667794704437256
    7. ' if' → logprob: -7.667794704437256
    8. 'token' → logprob: -7.667794704437256
    9. ':' → logprob: -8.542794227600098
    10. '            ' → logprob: -8.667794227600098

Token 354: ' représ' (ID: 31534)
  Prédit: ' éviter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' éviter' → logprob: -0.23172663152217865
    2. 'év' → logprob: -2.10672664642334
    3. 'ne' → logprob: -4.10672664642334
    4. 'avoir' → logprob: -4.10672664642334
    5. ' avoir' → logprob: -4.48172664642334
    6. 'ev' → logprob: -5.23172664642334
    7. ' ne' → logprob: -5.48172664642334
    8. 'dx' → logprob: -5.48172664642334
    9. 'avoid' → logprob: -5.98172664642334
    10. ' obtenir' → logprob: -6.10672664642334

Token 355: 'enter' (ID: 3547)
  Prédit: 'enter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -0.002260759938508272
    2. 'ent' → logprob: -6.377260684967041
    3. 'entation' → logprob: -7.752260684967041
    4. 'er' → logprob: -9.3772611618042
    5. 'anter' → logprob: -10.8772611618042
    6. 'ENTER' → logprob: -11.6272611618042
    7. 'entan' → logprob: -12.6272611618042
    8. 'sent' → logprob: -13.1272611618042
    9. 'enta' → logprob: -13.2522611618042
    10. '           ' → logprob: -13.3772611618042

Token 356: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5540248155593872
    2. ' une' → logprob: -0.9290248155593872
    3. 'une' → logprob: -4.804024696350098
    4. 'la' → logprob: -4.929024696350098
    5. ' ' → logprob: -5.429024696350098
    6. 'direction' → logprob: -5.679024696350098
    7. 'dire' → logprob: -6.679024696350098
    8. ' direction' → logprob: -6.804024696350098
    9. ' un' → logprob: -7.054024696350098
    10. 'a' → logprob: -7.304024696350098

Token 357: ' même' (ID: 9679)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.32362839579582214
    2. ' direction' → logprob: -1.3236284255981445
    3. 'dire' → logprob: -6.3236284255981445
    4. ' plus' → logprob: -6.3236284255981445
    5. ' sens' → logprob: -6.4486284255981445
    6. 'plus' → logprob: -6.8236284255981445
    7. ' même' → logprob: -6.9486284255981445
    8. 'vect' → logprob: -7.6986284255981445
    9. ' pente' → logprob: -7.8236284255981445
    10. ' droite' → logprob: -8.073628425598145

Token 358: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.4298122823238373
    2. ' direction' → logprob: -1.0548123121261597
    3. 'dire' → logprob: -7.304812431335449
    4. ' ' → logprob: -8.42981243133545
    5. '_direction' → logprob: -10.17981243133545
    6. '   ' → logprob: -10.17981243133545
    7. '    
' → logprob: -11.05481243133545
    8. '            
' → logprob: -11.55481243133545
    9. '  
' → logprob: -11.55481243133545
    10. 'd' → logprob: -11.80481243133545

Token 359: ' pour' (ID: 1930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009441670961678028
    2. '            
' → logprob: -5.38444185256958
    3. ',' → logprob: -5.88444185256958
    4. ' if' → logprob: -6.88444185256958
    5. 'if' → logprob: -7.75944185256958
    6. ':' → logprob: -9.134441375732422
    7. '.' → logprob: -9.634441375732422
    8. '
' → logprob: -9.759441375732422
    9. '```' → logprob: -10.384441375732422
    10. '            ' → logprob: -10.634441375732422

Token 360: ' tous' (ID: 10688)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -1.2512805461883545
    2. '(d' → logprob: -1.5012805461883545
    3. ' (' → logprob: -2.0012805461883545
    4. ' dy' → logprob: -2.1262805461883545
    5. ' tous' → logprob: -2.8762805461883545
    6. 'dy' → logprob: -3.3762805461883545
    7. ' les' → logprob: -3.3762805461883545
    8. ' toutes' → logprob: -3.5012805461883545
    9. '(dx' → logprob: -3.5012805461883545
    10. ' ' → logprob: -5.001280784606934

Token 361: ' les' (ID: 1341)
  Prédit: ' dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.1371266096830368
    2. ' if' → logprob: -3.8871266841888428
    3. ' gcd' → logprob: -4.012126445770264
    4. '           ' → logprob: -4.137126445770264
    5. 'dy' → logprob: -4.137126445770264
    6. ' dx' → logprob: -4.387126445770264
    7. '(dx' → logprob: -4.637126445770264
    8. 'g' → logprob: -4.762126445770264
    9. ' (' → logprob: -4.887126445770264
    10. ' ' → logprob: -5.262126445770264

Token 362: ' points' (ID: 5571)
  Prédit: 'vect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vect' → logprob: -0.8895491361618042
    2. ' vect' → logprob: -1.6395491361618042
    3. 'points' → logprob: -2.0145492553710938
    4. ' points' → logprob: -2.8895492553710938
    5. 'vectors' → logprob: -3.0145492553710938
    6. 'dy' → logprob: -3.3895492553710938
    7. 'pas' → logprob: -4.014549255371094
    8. ' dy' → logprob: -4.014549255371094
    9. 'vec' → logprob: -4.389549255371094
    10. ' vectors' → logprob: -4.514549255371094

Token 363: ' align' (ID: 9538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006008548196405172
    2. ' if' → logprob: -5.631008625030518
    3. '            
' → logprob: -7.006008625030518
    4. 'if' → logprob: -7.256008625030518
    5. 'g' → logprob: -7.631008625030518
    6. ',' → logprob: -8.50600814819336
    7. '
' → logprob: -11.13100814819336
    8. ' g' → logprob: -11.63100814819336
    9. '            ' → logprob: -11.63100814819336
    10. '          ' → logprob: -11.75600814819336

Token 364: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.02125694788992405
    2. 'é' → logprob: -4.521256923675537
    3. '(' → logprob: -5.021256923675537
    4. '(dx' → logprob: -6.771256923675537
    5. '           ' → logprob: -6.896256923675537
    6. 'er' → logprob: -8.396257400512695
    7. 'es' → logprob: -9.021257400512695
    8. '   ' → logprob: -9.271257400512695
    9. '```' → logprob: -9.271257400512695
    10. 'nés' → logprob: -9.396257400512695

Token 365: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009378137066960335
    2. '            
' → logprob: -5.634377956390381
    3. ' if' → logprob: -6.009377956390381
    4. ',' → logprob: -6.509377956390381
    5. 'if' → logprob: -7.259377956390381
    6. '
' → logprob: -7.884377956390381
    7. 'token' → logprob: -8.509378433227539
    8. '            ' → logprob: -9.759378433227539
    9. '```' → logprob: -10.009378433227539
    10. 'g' → logprob: -10.134378433227539

Token 366: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00279834121465683
    2. '            
' → logprob: -6.252798557281494
    3. ' if' → logprob: -7.502798557281494
    4. 'if' → logprob: -9.502798080444336
    5. 'token' → logprob: -10.127798080444336
    6. '```' → logprob: -10.127798080444336
    7. 'g' → logprob: -10.627798080444336
    8. ',' → logprob: -10.627798080444336
    9. ' gcd' → logprob: -10.877798080444336
    10. ' token' → logprob: -10.877798080444336

Token 367: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.28306838870048523
    2. 'g' → logprob: -2.0330684185028076
    3. '           ' → logprob: -3.0330684185028076
    4. 'if' (adapté à ' if') → logprob: -3.0330684185028076
    5. ' g' → logprob: -4.0330681800842285
    6. 'd' → logprob: -7.7830681800842285
    7. '            
' → logprob: -8.283068656921387
    8. ' gcd' → logprob: -8.283068656921387
    9. 'token' → logprob: -9.033068656921387
    10. ' d' → logprob: -9.158068656921387

Token 368: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.5987860560417175
    2. ' dx' → logprob: -0.9737860560417175
    3. ' dy' → logprob: -3.0987861156463623
    4. 'dy' → logprob: -3.5987861156463623
    5. '(dx' → logprob: -7.848785877227783
    6. '_dx' → logprob: -11.848786354064941
    7. ' ' → logprob: -12.598786354064941
    8. ' (' → logprob: -12.973786354064941
    9. 'd' → logprob: -13.723786354064941
    10. '	d' → logprob: -13.723786354064941

Token 369: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31225234270095825
    2. '!=' → logprob: -1.9372522830963135
    3. ' ==' → logprob: -2.3122522830963135
    4. ' !=' → logprob: -3.6872522830963135
    5. '=' → logprob: -11.437252044677734
    6. ':' → logprob: -11.687252044677734
    7. '==
' → logprob: -13.937252044677734
    8. '>' → logprob: -13.937252044677734
    9. '!' → logprob: -14.812252044677734
    10. '==-' → logprob: -15.062252044677734

Token 370: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -18.750030517578125
    4. '۰' → logprob: -18.875030517578125
    5. '```' → logprob: -19.000030517578125
    6. '
' → logprob: -20.250030517578125
    7. '00' → logprob: -20.250030517578125
    8. '  ' → logprob: -20.562530517578125
    9. '=' → logprob: -20.812530517578125
    10. ' ' → logprob: -21.187530517578125

Token 371: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '۰' → logprob: -21.00000762939453
    4. '   ' → logprob: -21.75000762939453
    5. '1' → logprob: -22.37500762939453
    6. '```' → logprob: -22.37500762939453
    7. '00' → logprob: -23.06250762939453
    8. '  ' → logprob: -23.12500762939453
    9. '０' → logprob: -23.18750762939453
    10. ' ' → logprob: -23.43750762939453

Token 372: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043025340884923935
    2. ':
' → logprob: -3.168025255203247
    3. ':
' → logprob: -11.293025016784668
    4. ',' → logprob: -12.543025016784668
    5. '           ' → logprob: -12.918025016784668
    6. '               ' → logprob: -13.293025016784668
    7. ' and' → logprob: -13.543025016784668
    8. ':

' → logprob: -13.543025016784668
    9. '):
' → logprob: -13.668025016784668
    10. '):' → logprob: -14.168025016784668

Token 373: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007720202207565308
    2. '           ' → logprob: -5.882719993591309
    3. '                
' → logprob: -6.132719993591309
    4. '              ' → logprob: -8.007719993591309
    5. 'dy' → logprob: -8.132719993591309
    6. '             ' → logprob: -8.132719993591309
    7. '1' → logprob: -8.132719993591309
    8. 'direction' → logprob: -8.632719993591309
    9. '            ' → logprob: -8.757719993591309
    10. ' dy' → logprob: -8.757719993591309

Token 374: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' (adapté à ' dir') → logprob: -0.41429176926612854
    2. 'direction' → logprob: -1.4142917394638062
    3. '               ' → logprob: -3.1642918586730957
    4. 'dy' → logprob: -3.4142918586730957
    5. ' direction' → logprob: -5.039291858673096
    6. ' dir' → logprob: -5.789291858673096
    7. 'd' → logprob: -5.914291858673096
    8. '           ' → logprob: -6.039291858673096
    9. 'sign' → logprob: -6.789291858673096
    10. 'key' → logprob: -6.789291858673096

Token 375: '_key' (ID: 6724)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23592625558376312
    2. 'ection' → logprob: -1.6109262704849243
    3. 'irection' → logprob: -6.610926151275635
    4. '_key' → logprob: -6.610926151275635
    5. 'ector' → logprob: -6.610926151275635
    6. '=' → logprob: -6.735926151275635
    7. 'ect' → logprob: -6.860926151275635
    8. 'rection' → logprob: -7.110926151275635
    9. 'x' → logprob: -7.235926151275635
    10. 'ction' → logprob: -7.360926151275635

Token 376: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858850687742233
    2. ' =' → logprob: -3.048588514328003
    3. '=(' → logprob: -14.173588752746582
    4. '=('' → logprob: -15.423588752746582
    5. ' =(' → logprob: -16.423587799072266
    6. ' ' → logprob: -17.423587799072266
    7. '=(-' → logprob: -17.548587799072266
    8. '=}' → logprob: -17.673587799072266
    9. '=("' → logprob: -17.923587799072266
    10. ',' → logprob: -18.173587799072266

Token 377: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25342583656311035
    2. '('' → logprob: -1.5034258365631104
    3. '("' → logprob: -6.753425598144531
    4. ' (' → logprob: -8.628425598144531
    5. '(None' → logprob: -9.378425598144531
    6. '(d' → logprob: -10.503425598144531
    7. ' ('' → logprob: -10.878425598144531
    8. ''' → logprob: -12.253425598144531
    9. '(y' → logprob: -12.753425598144531
    10. '   ' → logprob: -13.003425598144531

Token 378: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023095108568668365
    2. '-' → logprob: -4.27309513092041
    3. '(' → logprob: -4.77309513092041
    4. 'dy' → logprob: -8.14809513092041
    5. '(-' → logprob: -9.02309513092041
    6. 'sign' → logprob: -11.27309513092041
    7. 'float' → logprob: -12.14809513092041
    8. ' ' → logprob: -13.02309513092041
    9. ' (' → logprob: -13.39809513092041
    10. ' -' → logprob: -13.52309513092041

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022188521921634674
    2. ' if' → logprob: -4.272188663482666
    3. '0' → logprob: -5.147188663482666
    4. 'if' → logprob: -6.147188663482666
    5. ' ,' → logprob: -10.397188186645508
    6. '00' → logprob: -13.022188186645508
    7. '000' → logprob: -13.772188186645508
    8. '*' → logprob: -14.272188186645508
    9. 'e' → logprob: -14.272188186645508
    10. ' ' → logprob: -14.522188186645508

Token 380: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016468366084154695
    2. ' ' → logprob: -8.750164985656738
    3. 'dy' → logprob: -12.750164985656738
    4. '1' → logprob: -13.250164985656738
    5. '(' → logprob: -14.875164985656738
    6. '   ' → logprob: -15.125164985656738
    7. ' dy' → logprob: -15.125164985656738
    8. 'float' → logprob: -15.375164985656738
    9. 'sign' → logprob: -15.875164985656738
    10. ')' → logprob: -15.875164985656738

Token 381: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.75001049041748
    3. '1' → logprob: -13.25001049041748
    4. 'dy' → logprob: -14.37501049041748
    5. 'sign' → logprob: -16.000009536743164
    6. '-' → logprob: -16.625009536743164
    7. ' dy' → logprob: -17.625009536743164
    8. '(' → logprob: -17.625009536743164
    9. '   ' → logprob: -18.000009536743164
    10. 'abs' → logprob: -18.375009536743164

Token 382: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02998373471200466
    2. ')
' → logprob: -3.5299837589263916
    3. '           ' → logprob: -8.404983520507812
    4. '               ' → logprob: -12.154983520507812
    5. ')
' → logprob: -12.654983520507812
    6. ')

' → logprob: -14.654983520507812
    7. '       ' → logprob: -16.279983520507812
    8. ')#' → logprob: -16.404983520507812
    9. '),' → logprob: -16.654983520507812
    10. '                   ' → logprob: -16.779983520507812

Token 383: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19213472306728363
    2. 'else' → logprob: -1.8171347379684448
    3. ' else' → logprob: -4.817134857177734
    4. 'elif' → logprob: -5.817134857177734
    5. '
' → logprob: -7.317134857177734
    6. '<|end|>' → logprob: -8.567134857177734
    7. ')' → logprob: -9.442134857177734
    8. '            
' → logprob: -9.692134857177734
    9. '               ' → logprob: -9.817134857177734
    10. ' elif' → logprob: -10.317134857177734

Token 384: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5965156555175781
    2. '           ' → logprob: -0.8465156555175781
    3. 'elif' → logprob: -4.221515655517578
    4. ' else' → logprob: -5.221515655517578
    5. '#else' → logprob: -9.346515655517578
    6. ')' → logprob: -9.721515655517578
    7. ' elif' → logprob: -9.846515655517578
    8. '
' → logprob: -10.346515655517578
    9. '#' → logprob: -11.221515655517578
    10. '<|end|>' → logprob: -11.596515655517578

Token 385: ' verticale' (ID: 199428)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2459154576063156
    2. '(' → logprob: -1.870915412902832
    3. 'dy' → logprob: -3.120915412902832
    4. ')' → logprob: -4.370915412902832
    5. '(-' → logprob: -6.495915412902832
    6. '0' → logprob: -6.620915412902832
    7. ' dy' → logprob: -6.745915412902832
    8. ' (' → logprob: -6.995915412902832
    9. ' ' → logprob: -7.245915412902832
    10. '-' → logprob: -7.495915412902832

Token 386: ' montant' (ID: 72364)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3163270652294159
    2. 'else' → logprob: -1.5663270950317383
    3. ')' → logprob: -3.5663270950317383
    4. 'elif' → logprob: -3.9413270950317383
    5. ' else' → logprob: -4.441327095031738
    6. ')
' → logprob: -6.691327095031738
    7. '
' → logprob: -7.566327095031738
    8. ',' → logprob: -8.191327095031738
    9. '<|end|>' → logprob: -8.566327095031738
    10. '            
' → logprob: -8.691327095031738

Token 387: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.045561157166957855
    2. 'else' → logprob: -3.7955610752105713
    3. 'elif' → logprob: -3.9205610752105713
    4. '
' → logprob: -6.54556131362915
    5. ' else' → logprob: -7.79556131362915
    6. ')' → logprob: -9.045560836791992
    7. ',' → logprob: -9.545560836791992
    8. ' elif' → logprob: -9.670560836791992
    9. '            
' → logprob: -10.795560836791992
    10. ')
' → logprob: -10.920560836791992

Token 388: 'par' (ID: 796)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02633490227162838
    2. '1' → logprob: -4.026334762573242
    3. '-' → logprob: -5.526334762573242
    4. 'dy' → logprob: -5.651334762573242
    5. ')
' → logprob: -8.651334762573242
    6. ' )' → logprob: -8.901334762573242
    7. '0' → logprob: -9.651334762573242
    8. ' -' → logprob: -10.026334762573242
    9. ' dy' → logprob: -10.151334762573242
    10. '),' → logprob: -10.276334762573242

Token 389: ' convention' (ID: 39395)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5855245590209961
    2. 'ex' → logprob: -1.085524559020996
    3. 'op' → logprob: -3.710524559020996
    4. 'haut' → logprob: -4.335524559020996
    5. 'dé' → logprob: -4.335524559020996
    6. 'dess' → logprob: -4.835524559020996
    7. '#' → logprob: -4.960524559020996
    8. 'rapport' → logprob: -4.960524559020996
    9. 'above' → logprob: -5.460524559020996
    10. 'example' → logprob: -5.710524559020996

Token 390: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01417996734380722
    2. ')
' → logprob: -4.2641801834106445
    3. '           ' → logprob: -11.514180183410645
    4. '               ' → logprob: -13.389180183410645
    5. ')

' → logprob: -13.389180183410645
    6. ' )' → logprob: -13.514180183410645
    7. ')
' → logprob: -13.639180183410645
    8. 'else' → logprob: -15.889180183410645
    9. ')#' → logprob: -16.139179229736328
    10. ' )
' → logprob: -16.389179229736328

Token 391: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07750679552555084
    2. 'else' → logprob: -2.8275067806243896
    3. 'elif' → logprob: -4.327507019042969
    4. ' else' → logprob: -6.202507019042969
    5. ' elif' → logprob: -9.327507019042969
    6. ')' → logprob: -10.577507019042969
    7. '<|end|>' → logprob: -10.827507019042969
    8. ',' → logprob: -11.452507019042969
    9. '            
' → logprob: -11.702507019042969
    10. '
' → logprob: -12.327507019042969

Token 392: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1005687341094017
    2. ' else' → logprob: -2.4755687713623047
    3. 'elif' (adapté à ' elif') → logprob: -4.600568771362305
    4. '           ' → logprob: -6.850568771362305
    5. ' elif' → logprob: -7.725568771362305
    6. '	else' → logprob: -12.475568771362305
    7. '       ' → logprob: -12.600568771362305
    8. '	elif' → logprob: -13.100568771362305
    9. '<|end|>' → logprob: -13.600568771362305
    10. ',' → logprob: -14.225568771362305

Token 393: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.18196943402290344
    2. 'dy' → logprob: -1.931969404220581
    3. ' dx' → logprob: -4.18196964263916
    4. 'dx' → logprob: -5.18196964263916
    5. ' ' → logprob: -8.30696964263916
    6. '0' → logprob: -9.05696964263916
    7. '   ' → logprob: -9.55696964263916
    8. '(dx' → logprob: -9.80696964263916
    9. ' abs' → logprob: -10.93196964263916
    10. '.dy' → logprob: -11.18196964263916

Token 394: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.35411807894706726
    2. '==' → logprob: -1.2291181087493896
    3. ',' → logprob: -6.1041178703308105
    4. ' <' → logprob: -7.2291178703308105
    5. ' ' → logprob: -7.8541178703308105
    6. '=' → logprob: -7.9791178703308105
    7. '<' → logprob: -7.9791178703308105
    8. ' /' → logprob: -7.9791178703308105
    9. ' >' → logprob: -8.229118347167969
    10. '>' → logprob: -8.604118347167969

Token 395: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005252372473478317
    2. ' ' → logprob: -5.255252361297607
    3. '-' → logprob: -12.005252838134766
    4. '1' → logprob: -12.505252838134766
    5. '(' → logprob: -13.130252838134766
    6. '   ' → logprob: -13.505252838134766
    7. 'dx' → logprob: -13.630252838134766
    8. ' -' → logprob: -14.130252838134766
    9. '  ' → logprob: -14.630252838134766
    10. '
' → logprob: -14.755252838134766

Token 396: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007112398743629456
    2. ' ' → logprob: -7.250711441040039
    3. '   ' → logprob: -14.250711441040039
    4. '  ' → logprob: -16.06321144104004
    5. '       ' → logprob: -17.00071144104004
    6. '           ' → logprob: -17.00071144104004
    7. '    ' → logprob: -17.00071144104004
    8. 'dx' → logprob: -17.00071144104004
    9. '=' → logprob: -17.18821144104004
    10. '```' → logprob: -17.31321144104004

Token 397: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012295600958168507
    2. '               ' → logprob: -5.637295722961426
    3. ',' → logprob: -5.762295722961426
    4. '<|end|>' → logprob: -6.637295722961426
    5. '           ' → logprob: -7.012295722961426
    6. ' =' → logprob: -7.012295722961426
    7. ':
' → logprob: -7.137295722961426
    8. '=' → logprob: -7.387295722961426
    9. '{' → logprob: -8.387295722961426
    10. ')' → logprob: -8.637295722961426

Token 398: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03921491280198097
    2. '               ' → logprob: -3.414214849472046
    3. '           ' → logprob: -6.039215087890625
    4. ':
' → logprob: -6.539215087890625
    5. ' :' → logprob: -7.164215087890625
    6. '       ' → logprob: -8.539215087890625
    7. ',' → logprob: -8.789215087890625
    8. ' =' → logprob: -9.039215087890625
    9. '   ' → logprob: -9.289215087890625
    10. ' ' → logprob: -9.414215087890625

Token 399: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' (adapté à ' dir') → logprob: -0.10165111720561981
    2. ' dir' → logprob: -2.351651191711426
    3. '(' → logprob: -6.601651191711426
    4. ' (' → logprob: -9.476651191711426
    5. '(dir' → logprob: -12.351651191711426
    6. ' ' → logprob: -13.726651191711426
    7. '           ' → logprob: -13.851651191711426
    8. '   ' → logprob: -14.226651191711426
    9. '	dir' → logprob: -14.726651191711426
    10. '       ' → logprob: -15.851651191711426

Token 400: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -4.320199877838604e-07
    2. ')_' → logprob: -16.25
    3. 'key' → logprob: -16.875
    4. 'Key' → logprob: -17.0
    5. '_KEY' → logprob: -17.125
    6. '_' → logprob: -17.625
    7. ' _' → logprob: -17.875
    8. 'a' → logprob: -18.5
    9. '_keys' → logprob: -18.875
    10. '_Key' → logprob: -19.0

Token 401: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575943112373352
    2. '=' → logprob: -0.825943112373352
    3. '=(' → logprob: -12.950942993164062
    4. ' =(' → logprob: -13.825942993164062
    5. ' ' → logprob: -16.075942993164062
    6. ',' → logprob: -16.950942993164062
    7. '=
' → logprob: -17.200942993164062
    8. ')' → logprob: -17.450942993164062
    9. '＝' → logprob: -17.575942993164062
    10. '=(-' → logprob: -17.825942993164062

Token 402: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011047814972698689
    2. ' (' → logprob: -4.511047840118408
    3. ' ' → logprob: -17.88604736328125
    4. '   ' → logprob: -19.01104736328125
    5. '0' → logprob: -19.26104736328125
    6. '  ' → logprob: -20.51104736328125
    7. ')' → logprob: -20.76104736328125
    8. '(
' → logprob: -21.13604736328125
    9. '（' → logprob: -21.26104736328125
    10. ' ' → logprob: -21.63604736328125

Token 403: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007634543348103762
    2. '(' → logprob: -4.88263463973999
    3. ' ' → logprob: -10.632634162902832
    4. ' (' → logprob: -12.382634162902832
    5. '   ' → logprob: -16.38263511657715
    6. ')' → logprob: -17.25763511657715
    7. ',' → logprob: -17.63263511657715
    8. '۰' → logprob: -18.25763511657715
    9. '  ' → logprob: -19.38263511657715
    10. '1' → logprob: -19.44513511657715

Token 404: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010211274639004841
    2. ' ,' → logprob: -9.625102043151855
    3. '1' → logprob: -10.250102043151855
    4. ' ' → logprob: -15.250102043151855
    5. ',
' → logprob: -15.375102043151855
    6. ')' → logprob: -17.000102996826172
    7. '   ' → logprob: -17.250102996826172
    8. '```' → logprob: -18.500102996826172
    9. ',x' → logprob: -18.750102996826172
    10. ',

' → logprob: -18.750102996826172

Token 405: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.7994282795116305e-05
    2. ' ' → logprob: -10.00004768371582
    3. '-' → logprob: -12.87504768371582
    4. ' -' → logprob: -17.50004768371582
    5. ')' → logprob: -18.62504768371582
    6. '   ' → logprob: -18.87504768371582
    7. 'dy' → logprob: -19.37504768371582
    8. 'dx' → logprob: -19.37504768371582
    9. '  ' → logprob: -20.00004768371582
    10. '+' → logprob: -20.37504768371582

Token 406: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.750003814697266
    3. '-' → logprob: -14.000003814697266
    4. ' -' → logprob: -19.125003814697266
    5. '   ' → logprob: -21.000003814697266
    6. '+' → logprob: -21.500003814697266
    7. ')' → logprob: -21.750003814697266
    8. '  ' → logprob: -21.875003814697266
    9. ',' → logprob: -22.625003814697266
    10. '0' → logprob: -23.000003814697266

Token 407: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011152983643114567
    2. ')
' → logprob: -9.12511157989502
    3. ' )' → logprob: -13.25011157989502
    4. ')
' → logprob: -14.87511157989502
    5. ')

' → logprob: -15.87511157989502
    6. ')#' → logprob: -16.500110626220703
    7. ',)' → logprob: -17.000110626220703
    8. '),' → logprob: -17.125110626220703
    9. '           ' → logprob: -17.250110626220703
    10. ')}' → logprob: -17.375110626220703

Token 408: ' ' (ID: 220)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.8288898468017578
    2. ' else' → logprob: -1.2038898468017578
    3. '           ' → logprob: -2.078889846801758
    4. '<|end|>' → logprob: -2.078889846801758
    5. '<|end|>' → logprob: -5.703889846801758
    6. ')' → logprob: -5.703889846801758
    7. ':' → logprob: -6.203889846801758
    8. ',' → logprob: -6.703889846801758
    9. '	else' → logprob: -7.328889846801758
    10. '               ' → logprob: -8.078889846801758

Token 409: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1918773502111435
    2. '<|end|>' → logprob: -2.4418773651123047
    3. ' else' → logprob: -2.9418773651123047
    4. ')' → logprob: -4.691877365112305
    5. '           ' → logprob: -4.816877365112305
    6. '
' → logprob: -4.816877365112305
    7. ',' → logprob: -5.816877365112305
    8. '#' → logprob: -6.691877365112305
    9. '<|end|>' → logprob: -7.316877365112305
    10. ')
' → logprob: -7.316877365112305

Token 410: ' horizont' (ID: 69308)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004469047300517559
    2. ' (' → logprob: -6.00446891784668
    3. '0' → logprob: -6.87946891784668
    4. '1' → logprob: -7.00446891784668
    5. ' ' → logprob: -9.87946891784668
    6. 'dy' → logprob: -13.62946891784668
    7. '(-' → logprob: -14.25446891784668
    8. ' dy' → logprob: -15.25446891784668
    9. '(dx' → logprob: -15.25446891784668
    10. ',' → logprob: -15.69196891784668

Token 411: 'ale' (ID: 1167)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.17465898394584656
    2. 'ale' → logprob: -1.924659013748169
    3. ',' → logprob: -4.29965877532959
    4. '   ' → logprob: -8.54965877532959
    5. '1' → logprob: -8.79965877532959
    6. '(' → logprob: -9.54965877532959
    7. ' (' → logprob: -9.79965877532959
    8. '0' → logprob: -10.29965877532959
    9. ' ' → logprob: -10.29965877532959
    10. 'e' → logprob: -10.54965877532959

Token 412: ' droite' (ID: 61428)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 413: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5822609066963196
    2. '           ' → logprob: -1.4572608470916748
    3. ' else' → logprob: -1.7072608470916748
    4. '<|end|>' → logprob: -4.332261085510254
    5. ',' → logprob: -4.957261085510254
    6. ':' → logprob: -6.082261085510254
    7. ')' → logprob: -6.457261085510254
    8. '<|end|>' → logprob: -6.832261085510254
    9. '
' → logprob: -8.082261085510254
    10. 'elif' → logprob: -8.457261085510254

Token 414: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3801424503326416
    2. ' else' → logprob: -1.5051424503326416
    3. '           ' → logprob: -2.3801424503326416
    4. ',' → logprob: -7.5051422119140625
    5. '<|end|>' → logprob: -7.6301422119140625
    6. '               ' → logprob: -8.880142211914062
    7. ':' → logprob: -9.005142211914062
    8. ':
' → logprob: -9.505142211914062
    9. '       ' → logprob: -9.630142211914062
    10. '	else' → logprob: -9.755142211914062

Token 415: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.08968983590602875
    2. ' else' → logprob: -2.4646897315979004
    3. '           ' → logprob: -7.2146897315979
    4. '	else' → logprob: -12.464690208435059
    5. '       ' → logprob: -12.714690208435059
    6. ':
' → logprob: -12.964690208435059
    7. ':' → logprob: -13.339690208435059
    8. ',' → logprob: -14.214690208435059
    9. '               ' → logprob: -14.464690208435059
    10. 'elif' → logprob: -14.839690208435059

Token 416: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07981718331575394
    2. ':
' → logprob: -2.579817295074463
    3. '               ' → logprob: -7.704817295074463
    4. ',' → logprob: -8.829816818237305
    5. '           ' → logprob: -8.954816818237305
    6. ' :' → logprob: -9.204816818237305
    7. '       ' → logprob: -10.704816818237305
    8. ' :
' → logprob: -10.829816818237305
    9. ':

' → logprob: -11.454816818237305
    10. '):
' → logprob: -11.454816818237305

Token 417: '               ' (ID: 506)
  Prédit: ' g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.7442551255226135
    2. '           ' → logprob: -0.7442551255226135
    3. 'g' → logprob: -3.8692550659179688
    4. '               ' → logprob: -4.369255065917969
    5. ' gcd' → logprob: -4.369255065917969
    6. ' d' → logprob: -7.494255065917969
    7. '            ' → logprob: -7.619255065917969
    8. ' k' → logprob: -8.244255065917969
    9. 'n' → logprob: -8.244255065917969
    10. ' n' → logprob: -8.369255065917969

Token 418: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.31517958641052246
    2. ' g' → logprob: -1.3151795864105225
    3. 'sign' → logprob: -7.190179824829102
    4. 'd' → logprob: -7.690179824829102
    5. ' sign' → logprob: -8.315179824829102
    6. ' d' → logprob: -8.315179824829102
    7. 'sg' → logprob: -9.690179824829102
    8. ' gcd' → logprob: -10.065179824829102
    9. '               ' → logprob: -10.315179824829102
    10. 'ng' → logprob: -10.815179824829102

Token 419: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5766885280609131
    2. ' =' → logprob: -0.8266885280609131
    3. '=g' → logprob: -7.201688766479492
    4. '=int' → logprob: -13.076688766479492
    5. '	' → logprob: -15.076688766479492
    6. '=re' → logprob: -16.201688766479492
    7. '=find' → logprob: -16.701688766479492
    8. 'cd' → logprob: -16.826688766479492
    9. '=a' → logprob: -16.826688766479492
    10. '＝' → logprob: -16.951688766479492

Token 420: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.018345894291996956
    2. ' gcd' → logprob: -4.018345832824707
    3. 'abs' → logprob: -8.768345832824707
    4. ' abs' → logprob: -10.143345832824707
    5. '	g' → logprob: -14.643345832824707
    6. ' ' → logprob: -14.768345832824707
    7. '   ' → logprob: -15.893345832824707
    8. '/g' → logprob: -17.143346786499023
    9. '-g' → logprob: -17.268346786499023
    10. '(g' → logprob: -17.518346786499023

Token 421: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.048673778772354126
    2. '(abs' → logprob: -3.0486738681793213
    3. 'abs' → logprob: -9.548673629760742
    4. '(dx' → logprob: -11.923673629760742
    5. '(' → logprob: -12.423673629760742
    6. 'dy' → logprob: -12.923673629760742
    7. ' (' → logprob: -13.923673629760742
    8. ' abs' → logprob: -14.423673629760742
    9. 'd' → logprob: -15.298673629760742
    10. '(
' → logprob: -15.423673629760742

Token 422: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01887395977973938
    2. '(abs' → logprob: -4.518874168395996
    3. 'x' → logprob: -5.143874168395996
    4. '(d' → logprob: -6.643874168395996
    5. '(dx' → logprob: -7.893874168395996
    6. 'd' → logprob: -9.268874168395996
    7. 'abs' → logprob: -9.518874168395996
    8. '(' → logprob: -10.643874168395996
    9. ' abs' → logprob: -10.768874168395996
    10. '(y' → logprob: -10.893874168395996

Token 423: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04279911145567894
    2. 'abs' → logprob: -3.9177989959716797
    3. '(dx' → logprob: -4.16779899597168
    4. '(abs' → logprob: -5.79279899597168
    5. ' ,' → logprob: -6.41779899597168
    6. '(d' → logprob: -6.91779899597168
    7. ',d' → logprob: -8.04279899597168
    8. 'dy' → logprob: -8.41779899597168
    9. 'dx' → logprob: -9.29279899597168
    10. '(' → logprob: -9.66779899597168

Token 424: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.005937209352850914
    2. ' dx' → logprob: -5.130937099456787
    3. 'abs' → logprob: -11.880937576293945
    4. '(dx' → logprob: -14.005937576293945
    5. '_dx' → logprob: -15.130937576293945
    6. 'dy' → logprob: -15.755937576293945
    7. ' abs' → logprob: -15.880937576293945
    8. '   ' → logprob: -16.005937576293945
    9. 'd' → logprob: -16.630937576293945
    10. 'Dx' → logprob: -17.130937576293945

Token 425: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31349802017211914
    2. ')' → logprob: -1.3134980201721191
    3. ')
' → logprob: -8.813497543334961
    4. ' )
' → logprob: -9.563497543334961
    5. ' )' → logprob: -11.563497543334961
    6. ',' → logprob: -12.813497543334961
    7. ')

' → logprob: -13.188497543334961
    8. '),' → logprob: -14.313497543334961
    9. ');' → logprob: -14.688497543334961
    10. 'abs' → logprob: -15.063497543334961

Token 426: '               ' (ID: 506)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.4722959101200104
    2. ' (' → logprob: -1.097295880317688
    3. ' dy' → logprob: -3.3472959995269775
    4. '(' → logprob: -5.472295761108398
    5. 'dy' → logprob: -7.222295761108398
    6. '/d' → logprob: -7.347295761108398
    7. '               ' → logprob: -7.347295761108398
    8. ',' → logprob: -7.472295761108398
    9. ',d' → logprob: -8.597295761108398
    10. '           ' → logprob: -8.972295761108398

Token 427: ' ny' (ID: 4423)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.07172145694494247
    2. ' dy' → logprob: -2.6967215538024902
    3. 'dir' → logprob: -6.44672155380249
    4. '               ' → logprob: -9.571721076965332
    5. '(d' → logprob: -9.821721076965332
    6. ' dir' → logprob: -10.321721076965332
    7. ' (' → logprob: -11.571721076965332
    8. '(dir' → logprob: -12.071721076965332
    9. 'nd' → logprob: -12.321721076965332
    10. '(' → logprob: -12.446721076965332

Token 428: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5182183980941772
    2. '=' → logprob: -1.0182183980941772
    3. ',' → logprob: -3.143218517303467
    4. ' ,' → logprob: -10.393218040466309
    5. ' ' → logprob: -13.518218040466309
    6. ',d' → logprob: -13.518218040466309
    7. ' =
' → logprob: -14.268218040466309
    8. ',y' → logprob: -14.518218040466309
    9. ' dy' → logprob: -14.643218040466309
    10. 's' → logprob: -14.768218040466309

Token 429: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.03804149478673935
    2. ' dy' → logprob: -3.288041591644287
    3. ' ' → logprob: -17.038042068481445
    4. '   ' → logprob: -17.288042068481445
    5. '.dy' → logprob: -18.288042068481445
    6. '/d' → logprob: -18.413042068481445
    7. '  ' → logprob: -18.663042068481445
    8. 'd' → logprob: -18.788042068481445
    9. '	d' → logprob: -19.288042068481445
    10. 'Dy' → logprob: -20.413042068481445

Token 430: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.026379026472568512
    2. ' //' → logprob: -3.651379108428955
    3. '//=' → logprob: -9.901378631591797
    4. '#' → logprob: -10.776378631591797
    5. '
' → logprob: -12.401378631591797
    6. 'g' → logprob: -13.401378631591797
    7. '=' → logprob: -14.151378631591797
    8. ' ' → logprob: -15.026378631591797
    9. '  
' → logprob: -15.526378631591797
    10. ' ' → logprob: -15.526378631591797

Token 431: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.676292231422849e-05
    2. 'dx' → logprob: -11.250017166137695
    3. ' g' → logprob: -12.625017166137695
    4. 'abs' → logprob: -15.250017166137695
    5. 'gx' → logprob: -16.500017166137695
    6. '```' → logprob: -17.625017166137695
    7. '   ' → logprob: -17.875017166137695
    8. ' ' → logprob: -17.875017166137695
    9. 'x' → logprob: -17.875017166137695
    10. ' dx' → logprob: -18.125017166137695

Token 432: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12537984549999237
    2. '               ' → logprob: -3.125379800796509
    3. ',
' → logprob: -3.625379800796509
    4. '
' → logprob: -4.000380039215088
    5. '<|end|>' → logprob: -4.375380039215088
    6. '                
' → logprob: -5.000380039215088
    7. ',n' → logprob: -5.500380039215088
    8. 'n' → logprob: -6.000380039215088
    9. '<|end|>' → logprob: -7.000380039215088
    10. '            
' → logprob: -8.12537956237793

Token 433: '               ' (ID: 506)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.06250680238008499
    2. ' nx' → logprob: -2.812506914138794
    3. '               ' → logprob: -7.812506675720215
    4. ',' → logprob: -9.687506675720215
    5. 'n' → logprob: -10.562506675720215
    6. '(nx' → logprob: -10.687506675720215
    7. '                   ' → logprob: -10.937506675720215
    8. ',n' → logprob: -13.687506675720215
    9. 'dx' → logprob: -13.687506675720215
    10. 'ny' → logprob: -14.562506675720215

Token 434: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' (adapté à ' nx') → logprob: -0.00018816311785485595
    2. ' nx' → logprob: -8.625187873840332
    3. 'dx' → logprob: -12.500187873840332
    4. '(nx' → logprob: -12.500187873840332
    5. 'n' → logprob: -13.875187873840332
    6. 'Nx' → logprob: -16.25018882751465
    7. 'nd' → logprob: -17.75018882751465
    8. 'x' → logprob: -18.25018882751465
    9. 'ngx' → logprob: -18.75018882751465
    10. 'ny' → logprob: -19.12518882751465

Token 435: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868720829486847
    2. ' =' → logprob: -1.1368720531463623
    3. ',' → logprob: -15.136872291564941
    4. ' ' → logprob: -15.761872291564941
    5. '//=' → logprob: -16.136871337890625
    6. 'dx' → logprob: -16.386871337890625
    7. '<|end|>' → logprob: -16.386871337890625
    8. '=
' → logprob: -16.511871337890625
    9. ' dx' → logprob: -16.761871337890625
    10. 'x' → logprob: -17.136871337890625

Token 436: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.47407835721969604
    2. ' dx' → logprob: -0.974078357219696
    3. 'x' → logprob: -13.599078178405762
    4. '(dx' → logprob: -17.724079132080078
    5. '_dx' → logprob: -17.974079132080078
    6. ' ' → logprob: -18.099079132080078
    7. ' x' → logprob: -18.224079132080078
    8. 'Dx' → logprob: -18.974079132080078
    9. '.dx' → logprob: -18.974079132080078
    10. '   ' → logprob: -19.099079132080078

Token 437: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.03805112838745117
    2. ' //' → logprob: -3.288051128387451
    3. '#' → logprob: -11.66305160522461
    4. '//=' → logprob: -14.03805160522461
    5. '```' → logprob: -15.66305160522461
    6. ' #' → logprob: -16.53805160522461
    7. ' ' → logprob: -16.78805160522461
    8. '/' → logprob: -16.91305160522461
    9. ' ' → logprob: -17.53805160522461
    10. '   ' → logprob: -18.91305160522461

Token 438: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -2.696889623621246e-06
    2. ' g' → logprob: -12.87500286102295
    3. '	g' → logprob: -19.250001907348633
    4. 'abs' → logprob: -19.500001907348633
    5. '#g' → logprob: -20.000001907348633
    6. '```' → logprob: -21.000001907348633
    7. '*g' → logprob: -21.375001907348633
    8. ''g' → logprob: -21.375001907348633
    9. 'г' → logprob: -21.875001907348633
    10. ' ' → logprob: -22.125001907348633

Token 439: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05096330866217613
    2. '               ' → logprob: -4.175963401794434
    3. '
' → logprob: -4.425963401794434
    4. 'dir' → logprob: -5.175963401794434
    5. ' if' → logprob: -5.300963401794434
    6. ' dir' → logprob: -5.675963401794434
    7. ',' → logprob: -5.800963401794434
    8. '            
' → logprob: -5.925963401794434
    9. 'if' → logprob: -6.925963401794434
    10. ',
' → logprob: -8.050963401794434

Token 440: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23648987710475922
    2. ' dir' → logprob: -2.111489772796631
    3. 'dir' → logprob: -2.611489772796631
    4. ' if' → logprob: -4.736489772796631
    5. '               ' → logprob: -5.611489772796631
    6. 'if' → logprob: -6.111489772796631
    7. '	dir' → logprob: -7.861489772796631
    8. '            
' → logprob: -8.111490249633789
    9. '(dir' → logprob: -8.486490249633789
    10. '```' → logprob: -9.111490249633789

Token 441: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.26204487681388855
    2. 'dir' → logprob: -1.512044906616211
    3. ' if' → logprob: -5.512044906616211
    4. '#' (adapté à ' #') → logprob: -5.762044906616211
    5. '               ' → logprob: -6.387044906616211
    6. '           ' → logprob: -7.387044906616211
    7. '(dir' → logprob: -8.262044906616211
    8. ' dir' → logprob: -8.887044906616211
    9. '                
' → logprob: -10.137044906616211
    10. 'direction' → logprob: -10.387044906616211

Token 442: ' Pour' (ID: 13931)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07769355922937393
    2. '#' → logprob: -3.202693462371826
    3. 'dir' → logprob: -3.452693462371826
    4. ' if' → logprob: -6.327693462371826
    5. '               ' → logprob: -7.702693462371826
    6. 'direction' → logprob: -9.452693939208984
    7. ' #' → logprob: -10.327693939208984
    8. 'sign' → logprob: -10.827693939208984
    9. 'dire' → logprob: -11.202693939208984
    10. '           ' → logprob: -11.452693939208984

Token 443: ' avoir' (ID: 16595)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.1653054654598236
    2. ' nx' → logprob: -2.4153053760528564
    3. '(nx' → logprob: -3.0403053760528564
    4. ' garantir' → logprob: -5.1653056144714355
    5. ' assurer' → logprob: -5.6653056144714355
    6. ' s' → logprob: -6.0403056144714355
    7. 's' → logprob: -6.4153056144714355
    8. ' garder' → logprob: -8.040305137634277
    9. 'maint' → logprob: -8.665305137634277
    10. ' (' → logprob: -8.790305137634277

Token 444: ' un' (ID: 537)
  Prédit: '(nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.8452358245849609
    2. ' nx' → logprob: -1.220235824584961
    3. 'nx' → logprob: -1.595235824584961
    4. ' ny' → logprob: -2.720235824584961
    5. 'ny' → logprob: -5.345235824584961
    6. ' (' → logprob: -6.970235824584961
    7. '(n' → logprob: -7.970235824584961
    8. ' dx' → logprob: -8.720235824584961
    9. 'dx' → logprob: -9.220235824584961
    10. '(' → logprob: -9.345235824584961

Token 445: ' unique' (ID: 5746)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.38192346692085266
    2. 'unique' → logprob: -1.3819234371185303
    3. ' unique' → logprob: -4.006923675537109
    4. ' nx' → logprob: -4.631923675537109
    5. 'dx' → logprob: -5.006923675537109
    6. 'ny' → logprob: -5.381923675537109
    7. 'standard' → logprob: -5.506923675537109
    8. '(nx' → logprob: -5.756923675537109
    9. ' consistent' → logprob: -5.881923675537109
    10. 'code' → logprob: -5.881923675537109

Token 446: ' représentant' (ID: 136122)
  Prédit: 'sens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sens' → logprob: -0.45273706316947937
    2. 're' → logprob: -1.8277370929718018
    3. 'repr' → logprob: -2.3277370929718018
    4. 'rep' → logprob: -2.8277370929718018
    5. 's' → logprob: -4.452736854553223
    6. ' sens' → logprob: -4.452736854553223
    7. 'represent' → logprob: -4.702736854553223
    8. 'direction' → logprob: -5.452736854553223
    9. 'representation' → logprob: -6.077736854553223
    10. 'sign' → logprob: -6.827736854553223

Token 447: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5857581496238708
    2. ',' → logprob: -1.0857582092285156
    3. 'if' → logprob: -2.8357582092285156
    4. ' (' → logprob: -4.210758209228516
    5. '               ' → logprob: -4.835758209228516
    6. ' ,' → logprob: -4.960758209228516
    7. ' of' → logprob: -5.210758209228516
    8. ':' → logprob: -5.835758209228516
    9. ' for' → logprob: -6.085758209228516
    10. '(s' → logprob: -6.835758209228516

Token 448: ' on' (ID: 402)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1025877445936203
    2. 'if' → logprob: -2.4775876998901367
    3. '               ' → logprob: -4.477587699890137
    4. '                ' → logprob: -6.227587699890137
    5. '<|end|>' → logprob: -8.977587699890137
    6. '                
' → logprob: -10.102587699890137
    7. ' ' → logprob: -11.477587699890137
    8. '<|end|>' → logprob: -11.977587699890137
    9. ' 
' → logprob: -12.477587699890137
    10. '            ' → logprob: -12.602587699890137

Token 449: ' fait' (ID: 7473)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05911673605442047
    2. ' if' → logprob: -3.059116840362549
    3. 'continue' → logprob: -4.809116840362549
    4. ' continue' → logprob: -7.434116840362549
    5. 'normalize' → logprob: -7.934116840362549
    6. 'ensure' → logprob: -8.18411636352539
    7. 's' → logprob: -8.55911636352539
    8. 'contin' → logprob: -8.68411636352539
    9. 'keep' → logprob: -8.93411636352539
    10. 'adjust' → logprob: -9.05911636352539

Token 450: ' en' (ID: 469)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05737818777561188
    2. ' if' → logprob: -3.0573782920837402
    3. '               ' → logprob: -5.80737829208374
    4. '```' → logprob: -6.93237829208374
    5. 'sure' → logprob: -7.18237829208374
    6. ' sure' → logprob: -7.30737829208374
    7. ' ' → logprob: -7.68237829208374
    8. '  
' → logprob: -8.182377815246582
    9. '   ' → logprob: -8.182377815246582
    10. '                
' → logprob: -8.307377815246582

Token 451: ' sorte' (ID: 37800)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.7686116099357605
    2. 's' → logprob: -1.2686116695404053
    3. ' sorte' → logprob: -1.3936116695404053
    4. '```' → logprob: -6.143611431121826
    5. 'sign' → logprob: -7.643611431121826
    6. 'g' → logprob: -7.643611431121826
    7. 'way' → logprob: -8.143611907958984
    8. 'charge' → logprob: -8.268611907958984
    9. 'sens' → logprob: -8.393611907958984
    10. 'code' → logprob: -8.518611907958984

Token 452: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.017532125115394592
    2. '(nx' → logprob: -5.6425323486328125
    3. ' nx' → logprob: -5.6425323486328125
    4. 'd' → logprob: -5.7675323486328125
    5. '               ' → logprob: -6.3925323486328125
    6. ' d' → logprob: -6.3925323486328125
    7. 'nx' → logprob: -6.6425323486328125
    8. ' that' → logprob: -7.1425323486328125
    9. 'que' → logprob: -7.3925323486328125
    10. ' ny' → logprob: -7.7675323486328125

Token 453: ' nx' (ID: 50118)
  Prédit: '(nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.3227091431617737
    2. 'nx' → logprob: -1.572709083557129
    3. ' nx' → logprob: -2.697709083557129
    4. '(n' → logprob: -7.197709083557129
    5. ' (' → logprob: -8.822709083557129
    6. ' ny' → logprob: -10.197709083557129
    7. 'ny' → logprob: -10.447709083557129
    8. '(' → logprob: -11.947709083557129
    9. 'n' → logprob: -12.947709083557129
    10. '(x' → logprob: -14.822709083557129

Token 454: ' soit' (ID: 17293)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.16970697045326233
    2. ' >' → logprob: -2.4197070598602295
    3. '>=' → logprob: -3.0447070598602295
    4. ' >=' → logprob: -4.54470682144165
    5. ' soit' → logprob: -4.91970682144165
    6. '<|end|>' → logprob: -7.41970682144165
    7. ',' → logprob: -7.79470682144165
    8. 's' → logprob: -8.669707298278809
    9. '```' → logprob: -9.669707298278809
    10. 'so' → logprob: -9.794707298278809

Token 455: ' toujours' (ID: 16867)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0185716412961483
    2. 'positive' → logprob: -4.393571853637695
    3. 'posit' → logprob: -6.268571853637695
    4. ' >' → logprob: -6.393571853637695
    5. ' positif' → logprob: -6.518571853637695
    6. '>=' → logprob: -7.393571853637695
    7. 'always' → logprob: -8.893571853637695
    8. ' positive' → logprob: -9.018571853637695
    9. 'positivo' → logprob: -9.643571853637695
    10. '+' → logprob: -11.268571853637695

Token 456: ' positif' (ID: 89008)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0555255189538002
    2. 'positive' → logprob: -3.430525541305542
    3. 'posit' → logprob: -4.680525302886963
    4. ' positif' → logprob: -5.055525302886963
    5. ' >' → logprob: -5.430525302886963
    6. '>=' → logprob: -7.180525302886963
    7. ' positive' → logprob: -7.555525302886963
    8. 'positivo' → logprob: -8.805525779724121
    9. '+' → logprob: -9.430525779724121
    10. 'pos' → logprob: -10.555525779724121

Token 457: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6477625370025635
    2. '<|end|>' → logprob: -1.0227625370025635
    3. ' if' → logprob: -2.6477625370025635
    4. ',' → logprob: -4.772762298583984
    5. ' or' → logprob: -4.772762298583984
    6. 'if' → logprob: -5.022762298583984
    7. '<|end|>' → logprob: -5.522762298583984
    8. ':' → logprob: -5.647762298583984
    9. '                
' → logprob: -6.147762298583984
    10. '                ' → logprob: -6.397762298583984

Token 458: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 459: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.42897099256515503
    2. 'if' → logprob: -1.0539710521697998
    3. '(n' → logprob: -9.678971290588379
    4. ' (' → logprob: -10.053971290588379
    5. ' ' → logprob: -10.303971290588379
    6. '<|end|>' → logprob: -10.553971290588379
    7. '(if' → logprob: -11.053971290588379
    8. '               ' → logprob: -11.303971290588379
    9. '                ' → logprob: -11.553971290588379
    10. '[' → logprob: -11.553971290588379

Token 460: ' ou' (ID: 2031)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21477796137332916
    2. 'if' → logprob: -1.714777946472168
    3. '               ' → logprob: -4.339777946472168
    4. '                ' → logprob: -8.714777946472168
    5. '                
' → logprob: -10.714777946472168
    6. '[' → logprob: -11.839777946472168
    7. ' ' → logprob: -12.214777946472168
    8. '```' → logprob: -12.464777946472168
    9. ' 
' → logprob: -12.589777946472168
    10. ' ' → logprob: -12.714777946472168

Token 461: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1716279238462448
    2. ' if' → logprob: -2.421627998352051
    3. ' ny' → logprob: -3.546627998352051
    4. 'ny' → logprob: -3.921627998352051
    5. 'dy' → logprob: -4.421627998352051
    6. ' si' → logprob: -5.546627998352051
    7. 'si' → logprob: -7.046627998352051
    8. ',' → logprob: -7.296627998352051
    9. 'nx' → logprob: -7.296627998352051
    10. '(nx' → logprob: -7.671627998352051

Token 462: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.12411057204008102
    2. ' nx' → logprob: -2.249110460281372
    3. '(nx' → logprob: -4.499110698699951
    4. 'ny' → logprob: -9.499110221862793
    5. ' ny' → logprob: -10.999110221862793
    6. 'n' → logprob: -12.249110221862793
    7. '(n' → logprob: -13.124110221862793
    8. '(' → logprob: -13.249110221862793
    9. ' ' → logprob: -13.874110221862793
    10. ' (' → logprob: -13.999110221862793

Token 463: '==' (ID: 560)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.29513266682624817
    2. '==' → logprob: -1.9201326370239258
    3. ' <' → logprob: -2.795132637023926
    4. ' ==' → logprob: -3.045132637023926
    5. '=' → logprob: -8.670132637023926
    6. ' ' → logprob: -10.670132637023926
    7. ' is' → logprob: -10.795132637023926
    8. '<|end|>' → logprob: -10.920132637023926
    9. '==-' → logprob: -11.420132637023926
    10. '0' → logprob: -11.545132637023926

Token 464: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. 'zero' → logprob: -18.8750057220459
    4. '<|end|>' → logprob: -19.6250057220459
    5. '```' → logprob: -19.7500057220459
    6. '=' → logprob: -20.2500057220459
    7. '<' → logprob: -20.2500057220459
    8. 'x' → logprob: -20.3750057220459
    9. '-' → logprob: -20.3750057220459
    10. '1' → logprob: -20.5000057220459

Token 465: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7896431684494019
    2. ':' → logprob: -0.7896431684494019
    3. 'and' → logprob: -3.1646432876586914
    4. ':
' → logprob: -3.4146432876586914
    5. ' and' → logprob: -4.289643287658691
    6. 'if' → logprob: -7.789643287658691
    7. ' (' → logprob: -7.914643287658691
    8. '(nx' → logprob: -8.039643287658691
    9. ',n' → logprob: -8.039643287658691
    10. 'else' → logprob: -8.164643287658691

Token 466: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.31391188502311707
    2. ' ny' → logprob: -1.3139119148254395
    3. 'nx' → logprob: -9.438911437988281
    4. '```' → logprob: -9.563911437988281
    5. 'dy' → logprob: -9.688911437988281
    6. ' ' → logprob: -9.813911437988281
    7. ' dy' → logprob: -9.813911437988281
    8. ' (' → logprob: -9.938911437988281
    9. '(nx' → logprob: -10.063911437988281
    10. '(' → logprob: -10.313911437988281

Token 467: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.16619640588760376
    2. '<' → logprob: -2.041196346282959
    3. '<|end|>' → logprob: -4.541196346282959
    4. ' >' → logprob: -5.041196346282959
    5. '=' → logprob: -5.541196346282959
    6. ' <' → logprob: -7.166196346282959
    7. '>=' → logprob: -8.166196823120117
    8. ' is' → logprob: -8.416196823120117
    9. 'positive' → logprob: -8.791196823120117
    10. ' =' → logprob: -9.291196823120117

Token 468: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003408263437449932
    2. ' ' → logprob: -8.000340461730957
    3. '>' → logprob: -13.250340461730957
    4. '=' → logprob: -13.375340461730957
    5. 'n' → logprob: -14.750340461730957
    6. '1' → logprob: -14.750340461730957
    7. '```' → logprob: -15.437840461730957
    8. 'g' → logprob: -15.562840461730957
    9. ' ' → logprob: -16.500341415405273
    10. '۰' → logprob: -16.562841415405273

Token 469: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.051589485257864
    2. ' if' → logprob: -3.6765894889831543
    3. ':' → logprob: -4.426589488983154
    4. 'if' → logprob: -5.176589488983154
    5. ',' → logprob: -5.801589488983154
    6. ':
' → logprob: -6.551589488983154
    7. '                
' → logprob: -6.676589488983154
    8. '           ' → logprob: -7.176589488983154
    9. '                ' → logprob: -9.426589012145996
    10. '                   ' → logprob: -9.426589012145996

Token 470: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.037216249853372574
    2. '           ' → logprob: -4.0372161865234375
    3. ' if' → logprob: -4.6622161865234375
    4. '<|end|>' → logprob: -5.5372161865234375
    5. 'if' → logprob: -6.4122161865234375
    6. ':' → logprob: -7.1622161865234375
    7. '```' → logprob: -7.1622161865234375
    8. ',' → logprob: -7.5372161865234375
    9. '                
' → logprob: -8.537216186523438
    10. ' and' → logprob: -8.662216186523438

Token 471: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2522657513618469
    2. ' if' → logprob: -1.5022656917572021
    3. '               ' → logprob: -8.002265930175781
    4. '                
' → logprob: -14.127265930175781
    5. '           ' → logprob: -14.252265930175781
    6. '                ' → logprob: -15.502265930175781
    7. 'while' → logprob: -15.752265930175781
    8. '```' → logprob: -16.75226593017578
    9. ' ' → logprob: -17.25226593017578
    10. ' 
' → logprob: -17.25226593017578

Token 472: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.5921695828437805
    2. ' nx' → logprob: -1.0921695232391357
    3. '(nx' → logprob: -2.2171695232391357
    4. ' (' → logprob: -6.217169761657715
    5. '(' → logprob: -8.467169761657715
    6. '(n' → logprob: -8.842169761657715
    7. '   ' → logprob: -10.342169761657715
    8. 'n' → logprob: -10.342169761657715
    9. ' ' → logprob: -10.342169761657715
    10. ' n' → logprob: -12.467169761657715

Token 473: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.11285329610109329
    2. ' <' → logprob: -2.2378532886505127
    3. '<=' → logprob: -11.362853050231934
    4. '<|end|>' → logprob: -11.487853050231934
    5. ' <=' → logprob: -12.362853050231934
    6. '[' → logprob: -13.862853050231934
    7. ' ' → logprob: -14.112853050231934
    8. '0' → logprob: -14.362853050231934
    9. ')<' → logprob: -15.237853050231934
    10. '()<' → logprob: -15.487853050231934

Token 474: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014025058771949261
    2. ' ' → logprob: -8.875140190124512
    3. '<|end|>' → logprob: -15.500140190124512
    4. '1' → logprob: -16.375141143798828
    5. '=' → logprob: -18.000141143798828
    6. '۰' → logprob: -18.500141143798828
    7. '   ' → logprob: -18.750141143798828
    8. '```' → logprob: -19.000141143798828
    9. '  ' → logprob: -19.250141143798828
    10. '<|end|>' → logprob: -19.250141143798828

Token 475: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '=' → logprob: -18.125
    4. '<|end|>' → logprob: -18.25
    5. '```' → logprob: -18.25
    6. '۰' → logprob: -18.875
    7. '1' → logprob: -19.625
    8. '０' → logprob: -21.375
    9. 'zero' → logprob: -21.625
    10. '
' → logprob: -21.625

Token 476: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09139014035463333
    2. '           ' → logprob: -3.7163901329040527
    3. ':' → logprob: -3.8413901329040527
    4. ':
' → logprob: -4.466390132904053
    5. '<|end|>' → logprob: -4.841390132904053
    6. ',n' → logprob: -5.466390132904053
    7. ' ,' → logprob: -5.716390132904053
    8. ' and' → logprob: -5.966390132904053
    9. '                   ' → logprob: -6.091390132904053
    10. '(nx' → logprob: -6.216390132904053

Token 477: '                   ' (ID: 699)
  Prédit: ' nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.7364300489425659
    2. ' ny' → logprob: -1.736430048942566
    3. 'nx' → logprob: -2.1114301681518555
    4. '               ' → logprob: -2.4864301681518555
    5. '                   ' → logprob: -2.4864301681518555
    6. 'ny' → logprob: -2.9864301681518555
    7. '(nx' → logprob: -5.1114301681518555
    8. '           ' → logprob: -8.486430168151855
    9. '                       ' → logprob: -8.486430168151855
    10. '   ' → logprob: -8.611430168151855

Token 478: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' (adapté à ' ny') → logprob: -0.03953787684440613
    2. 'nx' → logprob: -3.4145379066467285
    3. ' ny' → logprob: -5.2895379066467285
    4. '   ' → logprob: -7.9145379066467285
    5. ' nx' → logprob: -8.53953742980957
    6. '(nx' → logprob: -8.53953742980957
    7. 'nyi' → logprob: -10.41453742980957
    8. 'n' → logprob: -11.28953742980957
    9. 'ni' → logprob: -12.28953742980957
    10. '-' → logprob: -12.78953742980957

Token 479: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07816683501005173
    2. ',' → logprob: -2.8281667232513428
    3. ' =' → logprob: -4.203166961669922
    4. '*=' → logprob: -7.578166961669922
    5. '=-' → logprob: -7.578166961669922
    6. ' ,' → logprob: -9.953166961669922
    7. ' *=' → logprob: -10.078166961669922
    8. '*' → logprob: -13.203166961669922
    9. ',-' → logprob: -13.703166961669922
    10. '   ' → logprob: -13.703166961669922

Token 480: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13256438076496124
    2. ' -' → logprob: -2.1325643062591553
    3. '-n' → logprob: -5.382564544677734
    4. '-user' → logprob: -8.507564544677734
    5. '-ni' → logprob: -9.257564544677734
    6. '-ng' → logprob: -9.382564544677734
    7. '-num' → logprob: -9.507564544677734
    8. '-ai' → logprob: -9.757564544677734
    9. '-token' → logprob: -9.882564544677734
    10. '-ui' → logprob: -10.007564544677734

Token 481: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -8.061054359131958e-06
    2. ' ny' → logprob: -11.750007629394531
    3. 'nyi' → logprob: -17.12500762939453
    4. 'nx' → logprob: -17.75000762939453
    5. 'ni' → logprob: -18.00000762939453
    6. 'nym' → logprob: -18.37500762939453
    7. 'nyt' → logprob: -18.50000762939453
    8. 'n' → logprob: -18.87500762939453
    9. 'nye' → logprob: -18.87500762939453
    10. 'ney' → logprob: -19.00000762939453

Token 482: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004136103205382824
    2. '<|end|>' → logprob: -6.254136085510254
    3. ',' → logprob: -6.504136085510254
    4. '               ' → logprob: -8.254136085510254
    5. '<|end|>' → logprob: -9.379136085510254
    6. '           ' → logprob: -9.379136085510254
    7. '                    ' → logprob: -10.004136085510254
    8. 'n' → logprob: -10.379136085510254
    9. '                           ' → logprob: -10.504136085510254
    10. '		           ' → logprob: -10.754136085510254

Token 483: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.16549189388751984
    2. 'nx' → logprob: -2.290491819381714
    3. ' nx' → logprob: -3.040491819381714
    4. 'n' → logprob: -6.665492057800293
    5. '(nx' → logprob: -6.665492057800293
    6. ',' → logprob: -7.790492057800293
    7. '               ' → logprob: -9.165492057800293
    8. '                    ' → logprob: -9.415492057800293
    9. '           ' → logprob: -9.540492057800293
    10. '<|end|>' → logprob: -10.165492057800293

Token 484: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' (adapté à ' nx') → logprob: -0.0004007600946351886
    2. ' nx' → logprob: -8.25040054321289
    3. '-' → logprob: -9.50040054321289
    4. '-n' → logprob: -9.75040054321289
    5. '(nx' → logprob: -12.12540054321289
    6. ' -' → logprob: -14.37540054321289
    7. '   ' → logprob: -15.75040054321289
    8. '                   ' → logprob: -16.00040054321289
    9. 'n' → logprob: -17.25040054321289
    10. '       ' → logprob: -17.50040054321289

Token 485: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00018077615823131055
    2. ' =' → logprob: -8.625181198120117
    3. '=-' → logprob: -13.625181198120117
    4. '<|end|>' → logprob: -18.125181198120117
    5. '=
' → logprob: -19.500181198120117
    6. '＝' → logprob: -19.750181198120117
    7. '=}' → logprob: -19.875181198120117
    8. '*=' → logprob: -20.125181198120117
    9. ',' → logprob: -20.250181198120117
    10. '-=' → logprob: -20.375181198120117

Token 486: ' -' (ID: 533)
  Prédit: '-n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-n' → logprob: -0.5035476684570312
    2. '-' → logprob: -1.5035476684570312
    3. ' -' → logprob: -1.7535476684570312
    4. '-N' → logprob: -10.003547668457031
    5. '-ng' → logprob: -11.128547668457031
    6. '-neg' → logprob: -11.128547668457031
    7. '-negative' → logprob: -11.878547668457031
    8. '-ni' → logprob: -12.378547668457031
    9. '-н' → logprob: -12.378547668457031
    10. '-num' → logprob: -12.503547668457031

Token 487: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.00018983196059707552
    2. '(nx' → logprob: -8.625189781188965
    3. ' nx' → logprob: -11.750189781188965
    4. '<|end|>' → logprob: -13.875189781188965
    5. '<|end|>' → logprob: -14.250189781188965
    6. 'n' → logprob: -14.875189781188965
    7. 'xn' → logprob: -15.750189781188965
    8. 'x' → logprob: -16.37519073486328
    9. 'Nx' → logprob: -16.50019073486328
    10. '1' → logprob: -16.62519073486328

Token 488: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07137098908424377
    2. ')' → logprob: -3.446371078491211
    3. 'dir' → logprob: -4.446371078491211
    4. '           ' → logprob: -4.571371078491211
    5. '<|end|>' → logprob: -4.571371078491211
    6. ',' → logprob: -6.946371078491211
    7. '<|end|>' → logprob: -7.696371078491211
    8. '	           ' → logprob: -7.696371078491211
    9. '                
' → logprob: -7.946371078491211
    10. '              ' → logprob: -8.071371078491211

Token 489: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8439112305641174
    2. 'dir' → logprob: -1.2189111709594727
    3. '           ' → logprob: -2.4689111709594727
    4. 'dire' → logprob: -2.4689111709594727
    5. '               ' → logprob: -2.7189111709594727
    6. '   ' → logprob: -3.8439111709594727
    7. '(dir' → logprob: -5.843911170959473
    8. '	dir' → logprob: -5.968911170959473
    9. ' dir' → logprob: -6.093911170959473
    10. '       ' → logprob: -6.343911170959473

Token 490: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' (adapté à ' dir') → logprob: -0.715023934841156
    2. 'dire' → logprob: -0.965023934841156
    3. '           ' → logprob: -2.090023994445801
    4. 'direction' → logprob: -6.090023994445801
    5. '               ' → logprob: -6.215023994445801
    6. ' directions' → logprob: -7.340023994445801
    7. 'else' → logprob: -7.465023994445801
    8. ' dir' → logprob: -8.7150239944458
    9. 'dirs' → logprob: -9.0900239944458
    10. '            
' → logprob: -9.0900239944458

Token 491: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -5.466968650580384e-05
    2. 'ctions' → logprob: -10.625054359436035
    3. 'ections' → logprob: -11.000054359436035
    4. 'ictions' → logprob: -12.625054359436035
    5. 's' → logprob: -12.625054359436035
    6. '_keys' → logprob: -13.375054359436035
    7. 'Key' → logprob: -13.875054359436035
    8. 'ection' → logprob: -14.125054359436035
    9. 'ction' → logprob: -14.125054359436035
    10. 'irections' → logprob: -14.375054359436035

Token 492: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038728099316358566
    2. ' =' → logprob: -3.2887279987335205
    3. '=(' → logprob: -7.9137282371521
    4. ',' → logprob: -9.288727760314941
    5. ')' → logprob: -9.413727760314941
    6. '(' → logprob: -9.663727760314941
    7. '+=' → logprob: -10.913727760314941
    8. ' =(' → logprob: -11.288727760314941
    9. '[' → logprob: -11.538727760314941
    10. ' +=' → logprob: -11.663727760314941

Token 493: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004045156296342611
    2. ' (' → logprob: -5.629045009613037
    3. '(' → logprob: -7.754045009613037
    4. '(nx' → logprob: -11.129045486450195
    5. '(nd' → logprob: -14.504045486450195
    6. '   ' → logprob: -15.629045486450195
    7. '(nb' → logprob: -15.629045486450195
    8. ' ny' → logprob: -15.754045486450195
    9. '(nt' → logprob: -16.129045486450195
    10. '(N' → logprob: -16.254045486450195

Token 494: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -1.747814349073451e-05
    2. ' ny' → logprob: -11.000017166137695
    3. 'nyi' → logprob: -15.125017166137695
    4. 'ni' → logprob: -16.250017166137695
    5. '
' → logprob: -16.500017166137695
    6. '   ' → logprob: -16.750017166137695
    7. 'nyt' → logprob: -17.125017166137695
    8. 'nye' → logprob: -17.375017166137695
    9. ''ny' → logprob: -17.500017166137695
    10. 'nym' → logprob: -17.500017166137695

Token 495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017970333283301443
    2. ',n' → logprob: -8.750179290771484
    3. ' ,' → logprob: -11.500179290771484
    4. ',
' → logprob: -11.500179290771484
    5. ',x' → logprob: -14.750179290771484
    6. '),' → logprob: -15.125179290771484
    7. ')' → logprob: -16.375179290771484
    8. ',

' → logprob: -16.875179290771484
    9. '(nx' → logprob: -17.125179290771484
    10. '‌,' → logprob: -17.250179290771484

Token 496: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0005544631858356297
    2. ' nx' → logprob: -7.50055456161499
    3. '(nx' → logprob: -13.625554084777832
    4. 'n' → logprob: -16.37555503845215
    5. 'Nx' → logprob: -16.75055503845215
    6. '
' → logprob: -17.62555503845215
    7. ' ' → logprob: -18.25055503845215
    8. 'NX' → logprob: -18.75055503845215
    9. 'xn' → logprob: -19.12555503845215
    10. 'x' → logprob: -19.12555503845215

Token 497: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.840432565193623e-05
    2. ')
' → logprob: -9.375088691711426
    3. ' )' → logprob: -13.375088691711426
    4. ')

' → logprob: -14.375088691711426
    5. ')#' → logprob: -14.750088691711426
    6. '<|end|>' → logprob: -15.000088691711426
    7. ')}' → logprob: -15.375088691711426
    8. '),' → logprob: -16.12508773803711
    9. '}' → logprob: -16.75008773803711
    10. ')
' → logprob: -16.87508773803711

Token 498: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14369024336338043
    2. 'dire' → logprob: -2.018690347671509
    3. ' directions' → logprob: -7.51869010925293
    4. '            
' → logprob: -8.76869010925293
    5. '       ' → logprob: -9.51869010925293
    6. '               ' → logprob: -9.51869010925293
    7. '```' → logprob: -9.76869010925293
    8. 'd' → logprob: -10.01869010925293
    9. 'if' → logprob: -11.01869010925293
    10. '   ' → logprob: -11.51869010925293

Token 499: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.00980378221720457
    2. '           ' → logprob: -4.634803771972656
    3. 'if' → logprob: -10.259803771972656
    4. ' directions' → logprob: -12.759803771972656
    5. 'd' → logprob: -13.259803771972656
    6. '               ' → logprob: -13.384803771972656
    7. 'direction' → logprob: -13.634803771972656
    8. '       ' → logprob: -13.759803771972656
    9. '            
' → logprob: -13.884803771972656
    10. 'dir' → logprob: -14.134803771972656

Token 500: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003876550472341478
    2. '.setdefault' → logprob: -7.875387668609619
    3. '[(' → logprob: -12.375387191772461
    4. '.' → logprob: -13.750387191772461
    5. ' [' → logprob: -13.875387191772461
    6. 'dir' → logprob: -14.625387191772461
    7. '[
' → logprob: -15.625387191772461
    8. '.dir' → logprob: -15.750387191772461
    9. '[d' → logprob: -16.50038719177246
    10. '][' → logprob: -16.50038719177246

Token 501: 'dir' (ID: 6457)
  Prédit: 'dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -4.572941179503687e-05
    2. ' dir' → logprob: -10.125045776367188
    3. '(dir' → logprob: -12.750045776367188
    4. 'dire' → logprob: -13.625045776367188
    5. ']' → logprob: -14.250045776367188
    6. 'dict' → logprob: -16.125045776367188
    7. ')' → logprob: -16.375045776367188
    8. '}' → logprob: -16.625045776367188
    9. 'direction' → logprob: -16.750045776367188
    10. '   ' → logprob: -17.000045776367188

Token 502: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -6.825890159234405e-05
    2. 'ey' → logprob: -9.875068664550781
    3. 'key' → logprob: -11.250068664550781
    4. 'e' → logprob: -14.250068664550781
    5. 'y' → logprob: -14.500068664550781
    6. '
' → logprob: -15.375068664550781
    7. ']' → logprob: -15.375068664550781
    8. 'Key' → logprob: -15.500068664550781
    9. 'ect' → logprob: -15.500068664550781
    10. '_KEY' → logprob: -15.625068664550781

Token 503: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009201682172715664
    2. ']=' → logprob: -5.134201526641846
    3. '=' → logprob: -5.759201526641846
    4. ' ]' → logprob: -9.384202003479004
    5. ' =' → logprob: -10.634202003479004
    6. ']+=' → logprob: -12.134202003479004
    7. 'd' → logprob: -15.259202003479004
    8. ')' → logprob: -15.634202003479004
    9. '=d' → logprob: -16.134201049804688
    10. ' ' → logprob: -18.009201049804688

Token 504: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0790521651506424
    2. ' =' → logprob: -2.579052209854126
    3. '=d' → logprob: -9.079051971435547
    4. 'dire' → logprob: -9.954051971435547
    5. 'd' → logprob: -14.829051971435547
    6. '+=' → logprob: -15.204051971435547
    7. ' ' → logprob: -16.704051971435547
    8. ' directions' → logprob: -16.704051971435547
    9. ' +=' → logprob: -17.329051971435547
    10. '＝' → logprob: -17.454051971435547

Token 505: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.005240156780928373
    2. ' directions' → logprob: -5.255239963531494
    3. 'direction' → logprob: -12.380240440368652
    4. '   ' → logprob: -14.505240440368652
    5. 'direct' → logprob: -14.755240440368652
    6. 'directories' → logprob: -15.380240440368652
    7. '-dire' → logprob: -15.505240440368652
    8. '	d' → logprob: -15.505240440368652
    9. ' ' → logprob: -16.005239486694336
    10. 'd' → logprob: -16.005239486694336

Token 506: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0005293221911415458
    2. '[' → logprob: -8.250529289245605
    3. 'get' → logprob: -8.250529289245605
    4. '.setdefault' → logprob: -12.625529289245605
    5. 'dir' → logprob: -13.250529289245605
    6. '.' → logprob: -14.375529289245605
    7. 'dire' → logprob: -14.375529289245605
    8. 'd' → logprob: -15.125529289245605
    9. ' .' → logprob: -15.750529289245605
    10. 'dict' → logprob: -16.500530242919922

Token 507: '(dir' (ID: 32000)
  Prédit: '(dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dir' → logprob: -1.9361264946837764e-07
    2. 'dir' → logprob: -16.25
    3. '(direction' → logprob: -20.5
    4. '(' → logprob: -21.375
    5. '	dir' → logprob: -21.625
    6. '(dialog' → logprob: -21.75
    7. '(
' → logprob: -21.875
    8. ' dir' → logprob: -21.875
    9. '(dirname' → logprob: -22.0
    10. ' (' → logprob: -22.25

Token 508: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -1.4617256056226324e-05
    2. 'key' → logprob: -11.250014305114746
    3. 'Key' → logprob: -14.250014305114746
    4. '(dir' → logprob: -15.000014305114746
    5. 'ey' → logprob: -15.500014305114746
    6. 'dir' → logprob: -16.500015258789062
    7. '(key' → logprob: -16.500015258789062
    8. '_KEY' → logprob: -16.500015258789062
    9. '[' → logprob: -16.750015258789062
    10. '_dir' → logprob: -16.875015258789062

Token 509: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7944936156272888
    2. 'dir' → logprob: -1.2944936752319336
    3. '(dir' → logprob: -1.2944936752319336
    4. ' dir' → logprob: -9.419493675231934
    5. '_dir' → logprob: -11.544493675231934
    6. 'Dir' → logprob: -12.044493675231934
    7. '	dir' → logprob: -12.669493675231934
    8. '           ' → logprob: -13.169493675231934
    9. '```' → logprob: -13.419493675231934
    10. 'def' → logprob: -13.544493675231934

Token 510: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '1' → logprob: -19.000009536743164
    4. '   ' → logprob: -19.375009536743164
    5. '۰' → logprob: -19.375009536743164
    6. ')' → logprob: -20.125009536743164
    7. '```' → logprob: -20.437509536743164
    8. ' ' → logprob: -21.375009536743164
    9. '  ' → logprob: -21.562509536743164
    10. '	' → logprob: -22.187509536743164

Token 511: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '1' → logprob: -18.3750057220459
    4. '   ' → logprob: -19.0000057220459
    5. '۰' → logprob: -19.2500057220459
    6. '  ' → logprob: -20.5625057220459
    7. '```' → logprob: -20.7500057220459
    8. ')' → logprob: -21.0625057220459
    9. '00' → logprob: -21.4375057220459
    10. '000' → logprob: -21.5625057220459

Token 512: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012094692647224292
    2. ')+' → logprob: -9.375121116638184
    3. '+' → logprob: -10.250121116638184
    4. ']' → logprob: -15.750121116638184
    5. '0' → logprob: -15.875121116638184
    6. '```' → logprob: -16.000120162963867
    7. ' )' → logprob: -16.625120162963867
    8. ',' → logprob: -16.625120162963867
    9. '1' → logprob: -17.250120162963867
    10. '}' → logprob: -17.500120162963867

Token 513: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012538732029497623
    2. ' +' → logprob: -4.387538909912109
    3. '+d' → logprob: -10.51253890991211
    4. '+=' → logprob: -14.38753890991211
    5. ' plus' → logprob: -15.01253890991211
    6. '1' → logprob: -15.38753890991211
    7. '()+' → logprob: -15.51253890991211
    8. ')+' → logprob: -16.13753890991211
    9. '+
' → logprob: -16.38753890991211
    10. 'dire' → logprob: -16.63753890991211

Token 514: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -18.625019073486328
    4. '```' → logprob: -20.875019073486328
    5. '  ' → logprob: -21.875019073486328
    6. ' ' → logprob: -22.625019073486328
    7. '+' → logprob: -23.500019073486328
    8. '１' → logprob: -23.750019073486328
    9. '0' → logprob: -23.875019073486328
    10. '۱' → logprob: -24.187519073486328

Token 515: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -20.375
    4. '```' → logprob: -21.375
    5. '１' → logprob: -23.25
    6. '  ' → logprob: -23.25
    7. '0' → logprob: -23.8125
    8. '۱' → logprob: -24.0
    9. 'a' → logprob: -24.0625
    10. '+' → logprob: -24.3125

Token 516: '

' (ID: 279)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.21159173548221588
    2. 'print' → logprob: -1.9615917205810547
    3. 'result' → logprob: -3.2115917205810547
    4. 'answer' → logprob: -5.086591720581055
    5. 'if' → logprob: -5.836591720581055
    6. 'ans' → logprob: -7.961591720581055
    7. 'res' → logprob: -8.336591720581055
    8. 'maximum' → logprob: -9.961591720581055
    9. '#' → logprob: -11.211591720581055
    10. ' max' → logprob: -11.586591720581055

Token 517: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.05854610726237297
    2. 'print' → logprob: -3.0585460662841797
    3. 'result' → logprob: -5.05854606628418
    4. 'answer' → logprob: -6.55854606628418
    5. 'ans' → logprob: -6.80854606628418
    6. 'if' → logprob: -7.18354606628418
    7. 'res' → logprob: -8.30854606628418
    8. 'm' → logprob: -11.93354606628418
    9. 'maximum' → logprob: -11.93354606628418
    10. 'mx' → logprob: -12.43354606628418

Token 518: '_parts' (ID: 81867)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.5978929400444031
    2. '_blocks' → logprob: -1.2228929996490479
    3. '_parts' → logprob: -2.347892999649048
    4. '_dir' → logprob: -3.222892999649048
    5. '_direction' → logprob: -4.472892761230469
    6. '_block' → logprob: -6.222892761230469
    7. '_dirs' → logprob: -6.472892761230469
    8. '_d' → logprob: -6.722892761230469
    9. '_value' → logprob: -6.847892761230469
    10. '_val' → logprob: -6.972892761230469

Token 519: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519368827342987
    2. ' =' → logprob: -1.501936912536621
    3. '=max' → logprob: -11.876936912536621
    4. ')' → logprob: -15.626936912536621
    5. 'max' → logprob: -15.751936912536621
    6. '＝' → logprob: -16.001935958862305
    7. 's' → logprob: -16.126935958862305
    8. ' ' → logprob: -17.001935958862305
    9. '=int' → logprob: -17.126935958862305
    10. ' ' → logprob: -17.501935958862305

Token 520: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.029462905600667
    2. '(max' → logprob: -3.7794628143310547
    3. '0' → logprob: -5.404462814331055
    4. ' max' → logprob: -6.404462814331055
    5. '1' → logprob: -10.154462814331055
    6. '(' → logprob: -12.654462814331055
    7. ' ' → logprob: -12.779462814331055
    8. ' (' → logprob: -13.904462814331055
    9. '=max' → logprob: -14.154462814331055
    10. '[max' → logprob: -14.654462814331055

Token 521: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.4855663721391466e-05
    2. '(' → logprob: -11.625015258789062
    3. '([' → logprob: -12.875015258789062
    4. 'dire' → logprob: -13.125015258789062
    5. '(list' → logprob: -13.625015258789062
    6. '((' → logprob: -16.750015258789062
    7. 'd' → logprob: -16.750015258789062
    8. ' (' → logprob: -17.125015258789062
    9. '(
' → logprob: -17.500015258789062
    10. '(direction' → logprob: -18.625015258789062

Token 522: 'irections' (ID: 119283)
  Prédit: 'irections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irections' → logprob: -2.2200749754119897e-06
    2. 'ire' → logprob: -14.375001907348633
    3. 'dire' → logprob: -14.625001907348633
    4. 'irect' → logprob: -14.625001907348633
    5. 'ictions' → logprob: -16.000001907348633
    6. '[' → logprob: -16.250001907348633
    7. '`' → logprob: -16.375001907348633
    8. '#' → logprob: -16.375001907348633
    9. '``' → logprob: -17.000001907348633
    10. '(' → logprob: -17.000001907348633

Token 523: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -4.60414821645827e-06
    2. '.' → logprob: -12.750004768371582
    3. 'values' → logprob: -13.500004768371582
    4. '.value' → logprob: -16.500003814697266
    5. '.Values' → logprob: -17.125003814697266
    6. '.get' → logprob: -17.625003814697266
    7. ' values' → logprob: -18.000003814697266
    8. ' .' → logprob: -19.125003814697266
    9. ').' → logprob: -19.750003814697266
    10. ')' → logprob: -20.250003814697266

Token 524: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.015367227606475353
    2. '(),' → logprob: -4.390367031097412
    3. ')' → logprob: -6.390367031097412
    4. '()' → logprob: -6.765367031097412
    5. '()+' → logprob: -11.26536750793457
    6. ')+' → logprob: -12.14036750793457
    7. ',' → logprob: -13.01536750793457
    8. '()]' → logprob: -14.01536750793457
    9. ' ())' → logprob: -14.14036750793457
    10. '(' → logprob: -15.26536750793457

Token 525: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004078997299075127
    2. ' +' → logprob: -5.5040788650512695
    3. '+
' → logprob: -15.25407886505127
    4. 'max' → logprob: -16.254079818725586
    5. 'if' → logprob: -16.754079818725586
    6. '1' → logprob: -17.754079818725586
    7. 'print' → logprob: -18.129079818725586
    8. '
' → logprob: -18.379079818725586
    9. 'plus' → logprob: -18.504079818725586
    10. '0' → logprob: -18.629079818725586

Token 526: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005233882926404476
    2. ' ' → logprob: -5.2552337646484375
    3. '```' → logprob: -16.630233764648438
    4. '0' → logprob: -18.255233764648438
    5. '   ' → logprob: -19.630233764648438
    6. '<|end|>' → logprob: -20.005233764648438
    7. '  ' → logprob: -21.255233764648438
    8. '[' → logprob: -21.505233764648438
    9. '`' → logprob: -21.505233764648438
    10. ' ' → logprob: -21.755233764648438

Token 527: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '```' → logprob: -17.625001907348633
    4. '   ' → logprob: -20.250001907348633
    5. '
' → logprob: -20.625001907348633
    6. '۱' → logprob: -22.375001907348633
    7. '0' → logprob: -22.625001907348633
    8. '[' → logprob: -22.750001907348633
    9. '  ' → logprob: -22.875001907348633
    10. '`' → logprob: -23.125001907348633

Token 528: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.6286106983898208e-05
    2. '
' → logprob: -11.375016212463379
    3. ' print' → logprob: -12.625016212463379
    4. '<|end|>' → logprob: -13.625016212463379
    5. '```' → logprob: -15.625016212463379
    6. '#print' → logprob: -17.500017166137695
    7. '#' → logprob: -18.375017166137695
    8. '``' → logprob: -19.125017166137695
    9. '  
' → logprob: -19.500017166137695
    10. '(print' → logprob: -19.625017166137695

Token 529: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.292907877039397e-06
    2. '```' → logprob: -13.12500286102295
    3. ' print' → logprob: -13.87500286102295
    4. '<|end|>' → logprob: -15.75000286102295
    5. '
' → logprob: -16.625003814697266
    6. '#print' → logprob: -16.875003814697266
    7. '#' → logprob: -17.500003814697266
    8. '``' → logprob: -19.000003814697266
    9. '(print' → logprob: -21.000003814697266
    10. 'Print' → logprob: -21.250003814697266

Token 530: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -4.961759259458631e-06
    2. '(' → logprob: -12.500004768371582
    3. 'max' → logprob: -13.750004768371582
    4. ' (' → logprob: -16.6250057220459
    5. ' max' → logprob: -18.2500057220459
    6. '(
' → logprob: -18.8750057220459
    7. '=max' → logprob: -20.3750057220459
    8. '(m' → logprob: -21.0000057220459
    9. ',max' → logprob: -21.1250057220459
    10. '(min' → logprob: -21.2500057220459

Token 531: '_parts' (ID: 81867)
  Prédit: '_parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parts' → logprob: 0.0
    2. 'parts' → logprob: -17.875
    3. '_part' → logprob: -18.625
    4. ' parts' → logprob: -20.625
    5. '(parts' → logprob: -20.75
    6. 'Parts' → logprob: -21.75
    7. '_' → logprob: -21.875
    8. '_points' → logprob: -23.875
    9. '_particles' → logprob: -25.0
    10. '_chars' → logprob: -25.375

Token 532: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ' )' → logprob: -12.87500286102295
    3. ')
' → logprob: -18.375001907348633
    4. ')`' → logprob: -19.375001907348633
    5. '))' → logprob: -19.500001907348633
    6. ')}' → logprob: -19.625001907348633
    7. '),' → logprob: -19.750001907348633
    8. '```' → logprob: -20.250001907348633
    9. ')#' → logprob: -20.375001907348633
    10. '）' → logprob: -20.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 530
Tokens correctement prédits (1ère position, stricte): 165
Tokens correctement prédits (1ère position, avec adaptation): 177
Tokens correctement prédits (top 10): 355
Précision stricte (1ère position): 31.13%
Précision adaptée (1ère position): 33.40%
Précision (top 10): 66.98%
================================================================================
