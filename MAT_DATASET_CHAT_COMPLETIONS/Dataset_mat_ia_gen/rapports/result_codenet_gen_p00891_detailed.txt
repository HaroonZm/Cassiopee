================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Solution complète pour le problème "Where's Wally" en Python avec commentaires détaillés

import sys
import math

# Table de correspondance BASE64 spéciale fournie
base64_table = {}
# 'A'-'Z' 0-25
for i, c in enumerate("ABCDEFGHIJKLMNOPQRSTUVWXYZ"):
    base64_table[c] = i
# 'a'-'z' 26-51
for i, c in enumerate("abcdefghijklmnopqrstuvwxyz", start=26):
    base64_table[c] = i
# '0'-'9' 52-61
for i, c in enumerate("0123456789", start=52):
    base64_table[c] = i
# + 62
base64_table['+'] = 62
# / 63
base64_table['/'] = 63


def decode_line(encoded_line, width):
    """
    Décode une ligne encodée en base64 selon le format donné vers
    une liste de bits (0/1) de longueur width.
    Chaque caractère encode 6 bits, les plus significatifs à gauche.
    
    :param encoded_line: chaîne encodée
    :param width: largeur effective (nombre de bits)
    :return: liste de bits (int 0 ou 1) de longueur width
    """
    bits = []
    for c in encoded_line:
        val = base64_table[c]
        # Extraire bits de poids fort à faible dans le caractère
        for b in reversed(range(6)):  # 5 à 0
            bits.append((val >> b) & 1)
            if len(bits) == width:
                break
        if len(bits) == width:
            break
    # Il se peut que plus de bits soient décodés, on truncate
    return bits[:width]


def rotate_90(mat):
    """
    Rotation 90 degrés dans le sens horaire d'une matrice carrée p x p
    """
    p = len(mat)
    rotated = [[0]*p for _ in range(p)]
    for i in range(p):
        for j in range(p):
            rotated[j][p-1-i] = mat[i][j]
    return rotated


def mirror(mat):
    """
    Retourne une matrice par miroir horizontal
    """
    return [list(reversed(row)) for row in mat]


def generate_transformations(pattern):
    """
    Génère toutes les transformations du pattern : rotations (0°,90°,180°,270°)
    et miroir de chacune, au total 8 variantes.
    Retourne une liste de matrices distinctes.
    """
    variants = []
    current = pattern
    for _ in range(4):
        variants.append(current)
        current = rotate_90(current)
    mirrored = mirror(pattern)
    current = mirrored
    for _ in range(4):
        variants.append(current)
        current = rotate_90(current)
    # On élimine les doublons qui peuvent apparaître (ex: pattern symétrique)
    unique_variants = []
    seen = set()
    for var in variants:
        # convertir la matrice en tuple de tuples pour pouvoir hash
        tup = tuple(tuple(row) for row in var)
        if tup not in seen:
            seen.add(tup)
            unique_variants.append(var)
    return unique_variants


def match_at(image, pattern, start_i, start_j):
    """
    Vérifie si le pattern est exactement égal à la portion de image
    commençant à (start_i, start_j).
    
    :param image: liste de listes d'entiers 0/1
    :param pattern: matrice p x p de 0/1
    :param start_i: ligne de départ dans l'image
    :param start_j: colonne de départ dans l'image
    :return: True si correspondance parfaite, False sinon
    """
    p = len(pattern)
    for i in range(p):
        for j in range(p):
            if image[start_i + i][start_j + j] != pattern[i][j]:
                return False
    return True


def main():
    input_lines = sys.stdin.read().splitlines()
    
    idx = 0
    while True:
        if idx >= len(input_lines):
            break
        line = input_lines[idx].strip()
        idx += 1
        if line == '':
            continue
        w, h, p = map(int, line.split())
        if w == 0 and h == 0 and p == 0:
            break
        
        # Lire image
        image = []
        nchars_image_line = (w + 5) // 6  # nombre de caractères par ligne image
        for _ in range(h):
            encoded_line = input_lines[idx].rstrip()
            idx += 1
            bits_line = decode_line(encoded_line, w)
            image.append(bits_line)
        
        # Lire pattern
        pattern = []
        nchars_pattern_line = (p + 5) // 6
        for _ in range(p):
            encoded_line = input_lines[idx].rstrip()
            idx += 1
            bits_line = decode_line(encoded_line, p)
            pattern.append(bits_line)

        # Générer toutes les transformations distinctes du pattern
        pattern_variants = generate_transformations(pattern)

        # On va scanner l'image sur toutes les positions où un carré p x p est possible
        count = 0
        # Pour accélérer la recherche, on peut utiliser un set pour mémoriser les positions
        # déjà comptées (en théorie un carré ne devrait pas être compté deux fois)
        # mais le problème indique qu'on ne doit pas compter deux fois une même position,
        # même si elle correspond à plusieurs variantes. Donc on ne peut compter qu'une fois par position.
        matched_positions = set()
        
        for i in range(h - p + 1):
            for j in range(w - p + 1):
                # Pour la position (i,j), verifier si elle correspond à un des patterns
                if (i,j) in matched_positions:
                    continue
                matched = False
                for var in pattern_variants:
                    if match_at(image, var, i, j):
                        matched = True
                        break
                if matched:
                    count += 1
                    matched_positions.add((i,j))
        print(count)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Solution' (ID: 20858)
  → Token d'amorce (pas de prédiction)

Token 2: ' complète' (ID: 75660)
  → Token d'amorce (pas de prédiction)

Token 3: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19659672677516937
    2. '```' → logprob: -2.321596622467041
    3. ' :' → logprob: -2.821596622467041
    4. '\n' → logprob: -4.696596622467041
    5. '#' → logprob: -5.196596622467041
    6. ' ```' → logprob: -6.821596622467041
    7. '\' → logprob: -7.071596622467041
    8. 'def' → logprob: -7.071596622467041
    9. '``' → logprob: -7.446596622467041
    10. '
' → logprob: -8.0715970993042

Token 4: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.5980039834976196
    2. ' la' → logprob: -1.8480039834976196
    3. ' résoudre' → logprob: -2.47300386428833
    4. ' Python' → logprob: -3.22300386428833
    5. '#' → logprob: -3.47300386428833
    6. '```' → logprob: -3.59800386428833
    7. 'le' → logprob: -3.97300386428833
    8. ' l' → logprob: -4.22300386428833
    9. 'python' → logprob: -4.34800386428833
    10. 'l' → logprob: -4.47300386428833

Token 5: ' problème' (ID: 35630)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.2368801385164261
    2. ' problème' → logprob: -2.23688006401062
    3. 'proble' → logprob: -3.98688006401062
    4. '#' → logprob: -4.111880302429199
    5. ' probl' → logprob: -4.111880302429199
    6. ' code' → logprob: -4.861880302429199
    7. ' #' → logprob: -5.236880302429199
    8. 'code' → logprob: -5.361880302429199
    9. 'problem' → logprob: -5.736880302429199
    10. ' projet' → logprob: -5.736880302429199

Token 6: ' "' (ID: 392)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.7085992693901062
    2. '```' → logprob: -1.833599328994751
    3. ' ' → logprob: -2.208599328994751
    4. ':' → logprob: -2.458599328994751
    5. 's' → logprob: -3.208599328994751
    6. '#' → logprob: -3.833599328994751
    7. ' ```' → logprob: -4.083599090576172
    8. 'def' → logprob: -4.833599090576172
    9. ' #' → logprob: -4.958599090576172
    10. '

' → logprob: -4.958599090576172

Token 7: 'Where' (ID: 11977)
  Prédit: 'Two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Two' → logprob: -1.5310956239700317
    2. 'def' → logprob: -1.9060956239700317
    3. ' Two' → logprob: -2.156095504760742
    4. 'N' → logprob: -3.031095504760742
    5. 'Palindrome' → logprob: -3.406095504760742
    6. 'max' → logprob: -3.531095504760742
    7. ' N' → logprob: -3.531095504760742
    8. '2' → logprob: -3.781095504760742
    9. '"' → logprob: -3.781095504760742
    10. 'two' → logprob: -3.906095504760742

Token 8: ''s' (ID: 885)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.08836270123720169
    2. ' is' → logprob: -3.338362693786621
    3. '_is' → logprob: -3.338362693786621
    4. 'Is' → logprob: -5.338362693786621
    5. ''is' → logprob: -5.713362693786621
    6. ''' → logprob: -6.588362693786621
    7. 'ami' → logprob: -6.963362693786621
    8. '"' → logprob: -7.588362693786621
    9. '_' → logprob: -7.713362693786621
    10. '"is' → logprob: -7.963362693786621

Token 9: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.22013336420059204
    2. 'W' → logprob: -2.0951333045959473
    3. ' my' → logprob: -3.3451333045959473
    4. ' Wal' → logprob: -4.220133304595947
    5. ' is' → logprob: -4.845133304595947
    6. ' wal' → logprob: -4.845133304595947
    7. ' w' → logprob: -5.595133304595947
    8. 'my' → logprob: -6.970133304595947
    9. '_W' → logprob: -7.095133304595947
    10. ' the' → logprob: -7.220133304595947

Token 10: 'ally' (ID: 2146)
  Prédit: 'ally'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ally' → logprob: -0.33288902044296265
    2. 'a' → logprob: -1.7078890800476074
    3. 'aldo' → logprob: -2.4578890800476074
    4. 'W' → logprob: -5.207889080047607
    5. 'o' → logprob: -5.457889080047607
    6. 'i' → logprob: -5.832889080047607
    7. '```' → logprob: -7.082889080047607
    8. 'I' → logprob: -7.207889080047607
    9. 'A' → logprob: -8.33288860321045
    10. 'h' → logprob: -8.58288860321045

Token 11: '"' (ID: 1)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '?' → logprob: -0.5343809127807617
    2. '?"' → logprob: -1.1593809127807617
    3. '"' → logprob: -2.4093809127807617
    4. '#' → logprob: -5.659380912780762
    5. '```' → logprob: -5.784380912780762
    6. '"""' → logprob: -6.659380912780762
    7. ' ?"' → logprob: -7.534380912780762
    8. ''"' → logprob: -8.159380912780762
    9. ''''' → logprob: -8.534380912780762
    10. ''' → logprob: -8.659380912780762

Token 12: ' en' (ID: 469)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42763206362724304
    2. ' :' → logprob: -1.8026320934295654
    3. 'def' → logprob: -2.8026320934295654
    4. '#' → logprob: -2.9276320934295654
    5. '```' → logprob: -3.4276320934295654
    6. '.' → logprob: -4.427631855010986
    7. 's' → logprob: -5.302631855010986
    8. '_' → logprob: -5.677631855010986
    9. ''''' → logprob: -5.927631855010986
    10. ' ' → logprob: -6.177631855010986

Token 13: ' Python' (ID: 26534)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.11840429902076721
    2. 'Python' → logprob: -2.4934043884277344
    3. ' Python' → logprob: -3.7434043884277344
    4. ' python' → logprob: -5.743404388427734
    5. 'py' → logprob: -6.993404388427734
    6. '_python' → logprob: -7.868404388427734
    7. '#' → logprob: -7.993404388427734
    8. '```' → logprob: -8.493404388427734
    9. '.py' → logprob: -9.118404388427734
    10. 'ython' → logprob: -9.618404388427734

Token 14: ' avec' (ID: 3937)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.22246354818344116
    2. ':' → logprob: -2.472463607788086
    3. '#' → logprob: -2.597463607788086
    4. 'def' → logprob: -3.722463607788086
    5. ' :' → logprob: -5.097463607788086
    6. '``' → logprob: -5.472463607788086
    7. 'd' → logprob: -6.597463607788086
    8. '`' → logprob: -7.097463607788086
    9. 'import' → logprob: -7.347463607788086
    10. '\' → logprob: -7.347463607788086

Token 15: ' commentaires' (ID: 67971)
  Prédit: ' pygame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pygame' → logprob: -2.0070927143096924
    2. ' un' → logprob: -2.3820927143096924
    3. 'out' → logprob: -2.5070927143096924
    4. 't' → logprob: -2.5070927143096924
    5. 'import' → logprob: -2.6320927143096924
    6. '#' → logprob: -3.0070927143096924
    7. '```' → logprob: -3.0070927143096924
    8. 'pygame' → logprob: -3.2570927143096924
    9. ' la' → logprob: -3.2570927143096924
    10. ' une' → logprob: -3.3820927143096924

Token 16: ' déta' (ID: 99673)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.07464751601219177
    2. ':' → logprob: -3.1996474266052246
    3. '#' → logprob: -3.5746474266052246
    4. 'def' → logprob: -6.699647426605225
    5. '``' → logprob: -7.199647426605225
    6. ' :' → logprob: -7.949647426605225
    7. 'import' → logprob: -8.449647903442383
    8. '\' → logprob: -8.949647903442383
    9. ' ```' → logprob: -9.199647903442383
    10. ''''' → logprob: -9.449647903442383

Token 17: 'illés' (ID: 160970)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5621345043182373
    2. '#' → logprob: -1.3121345043182373
    3. ':' → logprob: -1.9371345043182373
    4. '``' → logprob: -5.687134742736816
    5. '\' → logprob: -5.937134742736816
    6. ':
' → logprob: -6.187134742736816
    7. '#
' → logprob: -6.937134742736816
    8. ''''
' → logprob: -7.062134742736816
    9. ' :' → logprob: -7.187134742736816
    10. '.' → logprob: -7.312134742736816

Token 18: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.42708227038383484
    2. '#' → logprob: -1.4270823001861572
    3. ':' → logprob: -2.3020823001861572
    4. ' :' → logprob: -6.552082061767578
    5. '``' → logprob: -6.552082061767578
    6. 'def' → logprob: -6.677082061767578
    7. 'import' → logprob: -6.802082061767578
    8. '\' → logprob: -7.302082061767578
    9. 'd' → logprob: -8.427082061767578
    10. ''''' → logprob: -8.552082061767578

Token 19: 'import' (ID: 561)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.006050262600183487
    2. '#' → logprob: -5.506050109863281
    3. 'import' → logprob: -6.756050109863281
    4. '``' → logprob: -7.881050109863281
    5. 'def' → logprob: -8.506050109863281
    6. '\' → logprob: -9.756050109863281
    7. '
' → logprob: -10.131050109863281
    8. ' ```' → logprob: -10.506050109863281
    9. ':' → logprob: -10.631050109863281
    10. '\n' → logprob: -11.006050109863281

Token 20: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.032470703125
    2. ' numpy' → logprob: -4.282470703125
    3. ' random' → logprob: -4.782470703125
    4. ' re' → logprob: -5.782470703125
    5. ' itertools' → logprob: -6.032470703125
    6. ' math' → logprob: -6.532470703125
    7. ' os' → logprob: -6.907470703125
    8. ' pandas' → logprob: -7.157470703125
    9. ' collections' → logprob: -7.407470703125
    10. ' ' → logprob: -8.907470703125

Token 21: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10357699543237686
    2. '

' → logprob: -2.853576898574829
    3. '```' → logprob: -4.228577136993408
    4. '<|end|>' → logprob: -4.228577136993408
    5. 'import' → logprob: -4.728577136993408
    6. '\n' → logprob: -7.103577136993408
    7. '<|end|>' → logprob: -7.478577136993408
    8. '\' → logprob: -8.10357666015625
    9. '#' → logprob: -8.47857666015625
    10. '
' → logprob: -8.72857666015625

Token 22: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6876789331436157
    2. '

' → logprob: -1.0626789331436157
    3. '<|end|>' → logprob: -2.937678813934326
    4. 'import' → logprob: -3.187678813934326
    5. '```' → logprob: -3.187678813934326
    6. '\n' → logprob: -5.062678813934326
    7. '<|end|>' → logprob: -5.687678813934326
    8. ' 

' → logprob: -6.187678813934326
    9. '#' → logprob: -6.562678813934326
    10. '  

' → logprob: -7.312678813934326

Token 23: ' math' (ID: 13324)
  Prédit: ' re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' re' → logprob: -0.21175043284893036
    2. ' collections' → logprob: -2.5867505073547363
    3. ' math' → logprob: -2.8367505073547363
    4. ' os' → logprob: -3.4617505073547363
    5. ' itertools' → logprob: -3.8367505073547363
    6. ' string' → logprob: -6.086750507354736
    7. 're' → logprob: -7.336750507354736
    8. 'collections' → logprob: -8.336750030517578
    9. ' numpy' → logprob: -8.711750030517578
    10. ' threading' → logprob: -8.711750030517578

Token 24: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3305656313896179
    2. '

' → logprob: -1.9555656909942627
    3. '<|end|>' → logprob: -2.7055656909942627
    4. '#' → logprob: -3.7055656909942627
    5. 'import' → logprob: -3.8305656909942627
    6. '\n' → logprob: -4.830565452575684
    7. '<|end|>' → logprob: -5.330565452575684
    8. '\' → logprob: -5.455565452575684
    9. '```' → logprob: -5.580565452575684
    10. '' → logprob: -6.455565452575684

Token 25: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.49152904748916626
    2. 'def' → logprob: -1.3665289878845215
    3. 'import' → logprob: -2.4915289878845215
    4. '
' → logprob: -4.2415289878845215
    5. '

' → logprob: -4.6165289878845215
    6. '```' → logprob: -4.6165289878845215
    7. 'class' → logprob: -5.3665289878845215
    8. '\' → logprob: -5.4915289878845215
    9. 'from' → logprob: -6.2415289878845215
    10. 'd' → logprob: -6.2415289878845215

Token 26: ' Table' (ID: 10211)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.04521451145410538
    2. 'def' → logprob: -4.045214653015137
    3. ' class' → logprob: -4.795214653015137
    4. ' from' → logprob: -5.420214653015137
    5. ' import' → logprob: -5.670214653015137
    6. '#' → logprob: -5.920214653015137
    7. ' de' → logprob: -5.920214653015137
    8. ' Solution' → logprob: -7.045214653015137
    9. ' Define' → logprob: -7.670214653015137
    10. 'from' → logprob: -7.670214653015137

Token 27: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06150685250759125
    2. '=' → logprob: -3.936506748199463
    3. 'au' → logprob: -3.936506748199463
    4. '[' → logprob: -4.561506748199463
    5. 's' → logprob: -5.561506748199463
    6. '[]' → logprob: -5.811506748199463
    7. '_' → logprob: -7.436506748199463
    8. '=[]' → logprob: -7.811506748199463
    9. ' de' → logprob: -7.936506748199463
    10. '#' → logprob: -8.061507225036621

Token 28: ' correspond' (ID: 11095)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.27398398518562317
    2. ' hash' → logprob: -1.7739839553833008
    3. 'h' → logprob: -4.148983955383301
    4. ' h' → logprob: -4.648983955383301
    5. 'multip' → logprob: -4.648983955383301
    6. 'conversion' → logprob: -5.148983955383301
    7. 'hach' → logprob: -5.273983955383301
    8. 'trans' → logprob: -5.398983955383301
    9. 'translation' → logprob: -5.523983955383301
    10. 'symbol' → logprob: -5.898983955383301

Token 29: 'ance' (ID: 766)
  Prédit: 'ance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -3.130576806142926e-05
    2. 'a' → logprob: -10.625031471252441
    3. 'an' → logprob: -12.750031471252441
    4. '#' → logprob: -13.875031471252441
    5. 'ances' → logprob: -14.000031471252441
    6. 'nance' → logprob: -14.500031471252441
    7. 'ANCE' → logprob: -14.625031471252441
    8. 'anc' → logprob: -15.375031471252441
    9. 'ancer' → logprob: -15.500031471252441
    10. 'ancement' → logprob: -15.625031471252441

Token 30: ' BASE' (ID: 42998)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.4663870334625244
    2. '_' → logprob: -1.7163870334625244
    3. 'char' → logprob: -2.2163870334625244
    4. 's' → logprob: -2.9663870334625244
    5. 'des' → logprob: -2.9663870334625244
    6. '#' → logprob: -3.3413870334625244
    7. ' de' → logprob: -3.4663870334625244
    8. ' ' → logprob: -3.8413870334625244
    9. ' =' → logprob: -3.8413870334625244
    10. ' between' → logprob: -3.8413870334625244

Token 31: '64' (ID: 2220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25635194778442383
    2. ' =' → logprob: -1.8813519477844238
    3. 'S' → logprob: -3.256351947784424
    4. '64' → logprob: -4.131351947784424
    5. '_CHAR' → logprob: -5.131351947784424
    6. '_MAP' → logprob: -6.256351947784424
    7. '_BASE' → logprob: -6.506351947784424
    8. '_MAPPING' → logprob: -6.506351947784424
    9. '=' → logprob: -6.756351947784424
    10. '_CH' → logprob: -6.756351947784424

Token 32: ' spéciale' (ID: 142408)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8735053539276123
    2. ' =' → logprob: -1.1235053539276123
    3. '_BASE' → logprob: -2.2485053539276123
    4. ' _' → logprob: -3.3735053539276123
    5. '_base' → logprob: -3.7485053539276123
    6. '_mapping' → logprob: -4.373505592346191
    7. '_b' → logprob: -4.373505592346191
    8. '=' → logprob: -4.623505592346191
    9. '_encoding' → logprob: -4.998505592346191
    10. '_B' → logprob: -5.123505592346191

Token 33: ' four' (ID: 4242)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7349699139595032
    2. ' =' → logprob: -2.1099698543548584
    3. '_BASE' → logprob: -2.2349698543548584
    4. ' _' → logprob: -2.3599698543548584
    5. '_base' → logprob: -2.9849698543548584
    6. 'BASE' → logprob: -3.4849698543548584
    7. 'B' → logprob: -4.1099700927734375
    8. '=' → logprob: -4.1099700927734375
    9. '_mapping' → logprob: -4.2349700927734375
    10. ' BASE' → logprob: -4.3599700927734375

Token 34: 'nie' (ID: 7640)
  Prédit: 'nie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nie' → logprob: -0.14904408156871796
    2. 'née' → logprob: -2.7740440368652344
    3. 'rée' → logprob: -3.6490440368652344
    4. 'ni' → logprob: -4.649044036865234
    5. 'n' → logprob: -5.024044036865234
    6. 'nier' → logprob: -5.149044036865234
    7. 'r' → logprob: -5.274044036865234
    8. 'ée' → logprob: -5.524044036865234
    9. 'g' → logprob: -6.024044036865234
    10. '_bytes' → logprob: -6.274044036865234

Token 35: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6398484706878662
    2. ' :' → logprob: -1.2648484706878662
    3. ':' → logprob: -2.514848470687866
    4. '_base' → logprob: -3.139848470687866
    5. '_' → logprob: -4.264848709106445
    6. 'base' → logprob: -5.139848709106445
    7. '=' → logprob: -5.139848709106445
    8. '_special' → logprob: -5.139848709106445
    9. '_mapping' → logprob: -5.139848709106445
    10. 's' → logprob: -5.264848709106445

Token 36: 'base' (ID: 5423)
  Prédit: 'BASE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BASE' → logprob: -0.227715402841568
    2. '_BASE' → logprob: -2.602715492248535
    3. ' BASE' → logprob: -3.227715492248535
    4. 'base' → logprob: -3.477715492248535
    5. ' =' → logprob: -4.352715492248535
    6. 'SPECIAL' → logprob: -4.852715492248535
    7. '_base' → logprob: -5.602715492248535
    8. 'B' → logprob: -5.602715492248535
    9. '=' → logprob: -5.727715492248535
    10. ' base' → logprob: -5.852715492248535

Token 37: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -7.107425062713446e-06
    2. '6' → logprob: -13.000006675720215
    3. '_' → logprob: -13.000006675720215
    4. ' =' → logprob: -15.000006675720215
    5. 'string' → logprob: -15.000006675720215
    6. '65' → logprob: -15.125006675720215
    7. '_string' → logprob: -15.750006675720215
    8. '642' → logprob: -16.00000762939453
    9. '645' → logprob: -16.00000762939453
    10. '641' → logprob: -16.00000762939453

Token 38: '_table' (ID: 11721)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.5654098391532898
    2. '_table' → logprob: -1.0654098987579346
    3. '_map' → logprob: -3.4404098987579346
    4. '_' → logprob: -4.1904096603393555
    5. '_charset' → logprob: -4.6904096603393555
    6. '_mapping' → logprob: -4.6904096603393555
    7. '_al' → logprob: -4.8154096603393555
    8. '_string' → logprob: -5.8154096603393555
    9. '_str' → logprob: -6.0654096603393555
    10. '_char' → logprob: -6.8154096603393555

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.000253591249929741
    2. '=' → logprob: -8.375253677368164
    3. ' ' → logprob: -11.000253677368164
    4. 's' → logprob: -13.500253677368164
    5. ' ='' → logprob: -14.125253677368164
    6. '  ' → logprob: -14.750253677368164
    7. '_' → logprob: -14.750253677368164
    8. ' :' → logprob: -14.875253677368164
    9. ' =[' → logprob: -14.875253677368164
    10. ' ="' → logprob: -15.000253677368164

Token 40: ' {}
' (ID: 11421)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.4113800525665283
    2. '"' → logprob: -1.1613800525665283
    3. ''' → logprob: -4.411379814147949
    4. ' '' → logprob: -4.661379814147949
    5. ' b' → logprob: -6.536379814147949
    6. 'b' → logprob: -7.286379814147949
    7. ''b' → logprob: -8.03637981414795
    8. ' ' → logprob: -9.66137981414795
    9. '[' → logprob: -11.41137981414795
    10. '"B' → logprob: -11.66137981414795

Token 41: '#' (ID: 2)
  Prédit: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -1.0535496473312378
    2. ' =' → logprob: -1.4285496473312378
    3. '=' → logprob: -2.5535497665405273
    4. 'base' → logprob: -2.6785497665405273
    5. ''' → logprob: -2.8035497665405273
    6. ' ' → logprob: -2.9285497665405273
    7. '[' → logprob: -3.4285497665405273
    8. 'A' → logprob: -3.8035497665405273
    9. '{' → logprob: -4.178549766540527
    10. '"' → logprob: -4.303549766540527

Token 42: ' '' (ID: 461)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -1.227036952972412
    2. 'chars' → logprob: -1.477036952972412
    3. '#' → logprob: -1.602036952972412
    4. 'char' → logprob: -3.102036952972412
    5. 'encoded' → logprob: -3.102036952972412
    6. 'for' → logprob: -3.727036952972412
    7. 'characters' → logprob: -3.727036952972412
    8. 'alphabet' → logprob: -3.977036952972412
    9. 'def' → logprob: -4.727036952972412
    10. 'index' → logprob: -4.977036952972412

Token 43: 'A' (ID: 32)
  Prédit: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -0.4356704652309418
    2. 'A' → logprob: -1.1856704950332642
    3. ''' → logprob: -3.9356703758239746
    4. '='' → logprob: -5.060670375823975
    5. '=' → logprob: -5.435670375823975
    6. ''A' → logprob: -5.935670375823975
    7. ' '' → logprob: -6.060670375823975
    8. ' A' → logprob: -6.560670375823975
    9. 'ABC' → logprob: -6.935670375823975
    10. '"' → logprob: -6.935670375823975

Token 44: ''-' (ID: 44302)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -1.3293712139129639
    2. ''' → logprob: -1.5793712139129639
    3. 'B' → logprob: -1.5793712139129639
    4. '-Z' → logprob: -1.9543712139129639
    5. ''-' → logprob: -2.579371213912964
    6. 'BC' → logprob: -3.079371213912964
    7. '-' → logprob: -4.704371452331543
    8. '-Za' → logprob: -5.204371452331543
    9. 'b' → logprob: -5.579371452331543
    10. 'bc' → logprob: -5.704371452331543

Token 45: ''' (ID: 6)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.01171950250864029
    2. ''' → logprob: -4.511719703674316
    3. ''z' → logprob: -8.761719703674316
    4. ' Z' → logprob: -9.386719703674316
    5. '-Z' → logprob: -10.011719703674316
    6. '['' → logprob: -10.011719703674316
    7. ' ' → logprob: -10.011719703674316
    8. 'z' → logprob: -10.136719703674316
    9. ' '' → logprob: -10.136719703674316
    10. ''s' → logprob: -10.136719703674316

Token 46: 'Z' (ID: 57)
  Prédit: 'Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.00011439072113716975
    2. ''' → logprob: -9.125114440917969
    3. ''z' → logprob: -12.500114440917969
    4. 'z' → logprob: -14.125114440917969
    5. ' Z' → logprob: -15.000114440917969
    6. '`' → logprob: -16.00011444091797
    7. '>Z' → logprob: -16.00011444091797
    8. '	Z' → logprob: -16.37511444091797
    9. ''s' → logprob: -16.87511444091797
    10. '9' → logprob: -16.87511444091797

Token 47: ''' (ID: 6)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6682730913162231
    2. 'for' → logprob: -1.2932730913162231
    3. ' for' → logprob: -2.5432729721069336
    4. ',' → logprob: -2.5432729721069336
    5. 'abcdefghijklmnopqrstuvwxyz' → logprob: -4.293272972106934
    6. ' :' → logprob: -4.293272972106934
    7. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -4.293272972106934
    8. 'A' → logprob: -6.168272972106934
    9. '<|end|>' → logprob: -6.293272972106934
    10. 'range' → logprob: -6.543272972106934

Token 48: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43536576628685
    2. ' for' → logprob: -1.1853657960891724
    3. ',' → logprob: -4.560365676879883
    4. '<|end|>' → logprob: -4.560365676879883
    5. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -4.935365676879883
    6. 'A' → logprob: -5.310365676879883
    7. ':' → logprob: -5.810365676879883
    8. ' A' → logprob: -6.060365676879883
    9. ' ' → logprob: -6.060365676879883
    10. 'abcdefghijklmnopqrstuvwxyz' → logprob: -6.435365676879883

Token 49: '0' (ID: 15)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3709452748298645
    2. ' for' → logprob: -1.8709452152252197
    3. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -2.9959452152252197
    4. 'A' → logprob: -3.3709452152252197
    5. ':' → logprob: -3.6209452152252197
    6. '<|end|>' → logprob: -4.370945453643799
    7. ',' → logprob: -4.495945453643799
    8. ' ' → logprob: -5.370945453643799
    9. '[' → logprob: -6.120945453643799
    10. 'abcdefghijklmnopqrstuvwxyz' → logprob: -6.120945453643799

Token 50: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5756144523620605
    2. '<|end|>' → logprob: -1.2006144523620605
    3. '```' → logprob: -3.7006144523620605
    4. ' ' → logprob: -3.8256144523620605
    5. ',' → logprob: -4.2006144523620605
    6. '=' → logprob: -4.7006144523620605
    7. '...' → logprob: -4.7006144523620605
    8. '9' → logprob: -4.9506144523620605
    9. 'to' → logprob: -5.4506144523620605
    10. '49' → logprob: -6.0756144523620605

Token 51: '25' (ID: 1161)
  Prédit: '25'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '25' → logprob: -0.0029167381580919027
    2. '9' → logprob: -7.1279168128967285
    3. '59' → logprob: -7.2529168128967285
    4. 'Z' → logprob: -7.6279168128967285
    5. ' ' → logprob: -7.7529168128967285
    6. 'z' → logprob: -8.62791633605957
    7. '26' → logprob: -9.75291633605957
    8. '```' → logprob: -10.00291633605957
    9. '51' → logprob: -10.12791633605957
    10. '5' → logprob: -10.87791633605957

Token 52: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05244933441281319
    2. ' for' → logprob: -3.0524492263793945
    3. 'A' → logprob: -6.1774492263793945
    4. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -7.3024492263793945
    5. '```' → logprob: -8.677449226379395
    6. 'a' → logprob: -8.802449226379395
    7. '#' → logprob: -8.927449226379395
    8. '
' → logprob: -9.177449226379395
    9. '<|end|>' → logprob: -9.177449226379395
    10. 'abcdefghijklmnopqrstuvwxyz' → logprob: -9.552449226379395

Token 53: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04864584282040596
    2. ' for' → logprob: -3.0486457347869873
    3. 'A' → logprob: -10.423645973205566
    4. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -11.423645973205566
    5. ' A' → logprob: -12.423645973205566
    6. 'base' → logprob: -12.798645973205566
    7. ' ' → logprob: -13.048645973205566
    8. '```' → logprob: -13.673645973205566
    9. 'abcdefghijklmnopqrstuvwxyz' → logprob: -13.798645973205566
    10. '
' → logprob: -13.923645973205566

Token 54: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0009550517424941063
    2. 'i' → logprob: -7.375955104827881
    3. ' c' → logprob: -8.125954627990723
    4. ' ' → logprob: -10.875954627990723
    5. ' ch' → logprob: -12.250954627990723
    6. ' code' → logprob: -13.000954627990723
    7. 'c' → logprob: -13.250954627990723
    8. '	i' → logprob: -13.375954627990723
    9. ' char' → logprob: -13.625954627990723
    10. '```' → logprob: -14.250954627990723

Token 55: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.017263730987906456
    2. 'in' → logprob: -4.142263889312744
    3. ' ' → logprob: -6.767263889312744
    4. '  ' → logprob: -10.392263412475586
    5. ',' → logprob: -10.767263412475586
    6. ' i' → logprob: -11.267263412475586
    7. ' ,' → logprob: -12.392263412475586
    8. 'range' → logprob: -13.642263412475586
    9. '	in' → logprob: -14.017263412475586
    10. '```' → logprob: -14.017263412475586

Token 56: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2647693455219269
    2. ' c' → logprob: -1.5147693157196045
    3. 'ch' → logprob: -5.139769554138184
    4. 'char' → logprob: -5.514769554138184
    5. ' ch' → logprob: -6.514769554138184
    6. ' char' → logprob: -7.139769554138184
    7. ' letter' → logprob: -8.264769554138184
    8. 'letter' → logprob: -9.014769554138184
    9. ' lettre' → logprob: -9.139769554138184
    10. 'chr' → logprob: -9.389769554138184

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029205448925495148
    2. 'n' → logprob: -4.029205322265625
    3. 'in' → logprob: -4.529205322265625
    4. 's' → logprob: -9.029205322265625
    5. ' ' → logprob: -10.404205322265625
    6. 'nt' → logprob: -11.779205322265625
    7. ' n' → logprob: -12.279205322265625
    8. 'd' → logprob: -12.529205322265625
    9. 'In' → logprob: -12.654205322265625
    10. 'nd' → logprob: -12.654205322265625

Token 58: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.5759721994400024
    2. ' enumerate' → logprob: -0.8259721994400024
    3. ' zip' → logprob: -10.950972557067871
    4. 'zip' → logprob: -11.700972557067871
    5. '(en' → logprob: -12.700972557067871
    6. 'en' → logprob: -13.200972557067871
    7. 'range' → logprob: -14.200972557067871
    8. 'enum' → logprob: -14.575972557067871
    9. ' enumer' → logprob: -15.325972557067871
    10. 'Enumer' → logprob: -15.825972557067871

Token 59: '("' (ID: 568)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12194998562335968
    2. ' range' → logprob: -2.3719499111175537
    3. '(range' → logprob: -4.496950149536133
    4. '"' → logprob: -5.496950149536133
    5. ' "' → logprob: -6.121950149536133
    6. '('' → logprob: -6.371950149536133
    7. '("' → logprob: -7.371950149536133
    8. '(chr' → logprob: -7.871950149536133
    9. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -8.246950149536133
    10. 'chr' → logprob: -8.246950149536133

Token 60: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' (ID: 184150)
  Prédit: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -2.3319124011322856e-05
    2. 'ABCDEFGHIJKLMNOP' → logprob: -11.125022888183594
    3. 'A' → logprob: -12.500022888183594
    4. 'ABCDEFGHI' → logprob: -12.750022888183594
    5. 'ABC' → logprob: -13.875022888183594
    6. ' ABC' → logprob: -14.750022888183594
    7. 'abcdefghijklmnopqrstuvwxyz' → logprob: -15.500022888183594
    8. 'ABCDEFG' → logprob: -15.500022888183594
    9. 'QRSTUVWXYZ' → logprob: -16.375022888183594
    10. 'ABCDE' → logprob: -16.625022888183594

Token 61: '"):
' (ID: 33645)
  Prédit: '"):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"):' → logprob: -0.008355825208127499
    2. '"):
' → logprob: -5.258355617523193
    3. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -6.258355617523193
    4. 'abcdefghijklmnopqrstuvwxyz' → logprob: -7.008355617523193
    5. ''):' → logprob: -8.883356094360352
    6. '"):
' → logprob: -9.883356094360352
    7. '")' → logprob: -10.508356094360352
    8. '":' → logprob: -10.633356094360352
    9. '"' → logprob: -11.383356094360352
    10. 'QRSTUVWXYZ' → logprob: -11.758356094360352

Token 62: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5417982935905457
    2. '   ' → logprob: -1.1667983531951904
    3. ' :' → logprob: -2.4167983531951904
    4. ' base' → logprob: -4.416798114776611
    5. 'base' → logprob: -6.416798114776611
    6. '	base' → logprob: -6.541798114776611
    7. ':
' → logprob: -7.291798114776611
    8. ' :
' → logprob: -7.541798114776611
    9. '):' → logprob: -7.916798114776611
    10. ' ' → logprob: -8.04179859161377

Token 63: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.1443532109260559
    2. '   ' → logprob: -2.144353151321411
    3. 'base' (adapté à ' base') → logprob: -4.14435338973999
    4. '	base' → logprob: -6.76935338973999
    5. ' bases' → logprob: -10.269352912902832
    6. ' ' → logprob: -10.269352912902832
    7. '    ' → logprob: -10.644352912902832
    8. '_base' → logprob: -10.644352912902832
    9. ' 
' → logprob: -10.769352912902832
    10. '    
' → logprob: -10.769352912902832

Token 64: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -8.77627644513268e-06
    2. ' ' → logprob: -12.750008583068848
    3. '54' → logprob: -13.375008583068848
    4. '6' → logprob: -13.625008583068848
    5. '4' → logprob: -14.375008583068848
    6. '_' → logprob: -14.375008583068848
    7. ')' → logprob: -15.437508583068848
    8. '65' → logprob: -15.625008583068848
    9. '```' → logprob: -15.750008583068848
    10. 'base' → logprob: -16.750009536743164

Token 65: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -1.981667537620524e-06
    2. '_' → logprob: -14.250001907348633
    3. '_t' → logprob: -14.625001907348633
    4. '_tab' → logprob: -14.875001907348633
    5. ' _' → logprob: -15.375001907348633
    6. '_base' → logprob: -16.125001907348633
    7. '_TABLE' → logprob: -17.000001907348633
    8. '_tables' → logprob: -17.625001907348633
    9. '_Table' → logprob: -17.875001907348633
    10. '_tbl' → logprob: -18.000001907348633

Token 66: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.004089678172022104
    2. '[' → logprob: -5.504089832305908
    3. '[i' → logprob: -11.62908935546875
    4. ' [' → logprob: -14.00408935546875
    5. '[C' → logprob: -14.62908935546875
    6. '['' → logprob: -15.25408935546875
    7. 'c' → logprob: -15.37908935546875
    8. '[...]' → logprob: -15.50408935546875
    9. '[(' → logprob: -16.37908935546875
    10. '[ch' → logprob: -17.37908935546875

Token 67: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01343573722988367
    2. ' ]' → logprob: -4.8884358406066895
    3. ']=' → logprob: -5.2634358406066895
    4. ' =' → logprob: -7.6384358406066895
    5. '=' → logprob: -9.888435363769531
    6. '']' → logprob: -10.138435363769531
    7. ')' → logprob: -11.263435363769531
    8. '"]' → logprob: -11.513435363769531
    9. ']='' → logprob: -11.763435363769531
    10. ' ' → logprob: -12.013435363769531

Token 68: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931707262992859
    2. ' =' → logprob: -0.6931707262992859
    3. ']' → logprob: -11.443170547485352
    4. ' ' → logprob: -12.568170547485352
    5. ']=' → logprob: -12.693170547485352
    6. ')' → logprob: -12.818170547485352
    7. '=}' → logprob: -13.943170547485352
    8. ' =)' → logprob: -14.318170547485352
    9. ')=' → logprob: -14.693170547485352
    10. '='' → logprob: -14.693170547485352

Token 69: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6931617259979248
    2. ' i' → logprob: -0.6931617259979248
    3. '	i' → logprob: -11.693161964416504
    4. ' ' → logprob: -12.943161964416504
    5. 'str' → logprob: -13.193161964416504
    6. ' str' → logprob: -13.943161964416504
    7. '   ' → logprob: -15.068161964416504
    8. ' ' → logprob: -15.693161964416504
    9. '=i' → logprob: -16.318161010742188
    10. ''i' → logprob: -16.443161010742188

Token 70: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5214673280715942
    2. '#' → logprob: -1.2714673280715942
    3. ' ' → logprob: -3.1464672088623047
    4. '<|end|>' → logprob: -3.5214672088623047
    5. ' 
' → logprob: -4.521467208862305
    6. ',' → logprob: -4.646467208862305
    7. '  
' → logprob: -4.771467208862305
    8. '    
' → logprob: -5.021467208862305
    9. '+' → logprob: -5.521467208862305
    10. 'for' → logprob: -5.646467208862305

Token 71: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0008897830848582089
    2. '
' → logprob: -7.875889778137207
    3. ' ' → logprob: -9.000889778137207
    4. '<|end|>' → logprob: -9.125889778137207
    5. ' #' → logprob: -9.250889778137207
    6. 'for' → logprob: -9.625889778137207
    7. '   ' → logprob: -10.625889778137207
    8. '  
' → logprob: -10.875889778137207
    9. ',' → logprob: -11.250889778137207
    10. '    
' → logprob: -11.375889778137207

Token 72: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6761019825935364
    2. ''a' → logprob: -1.3011019229888916
    3. 'a' → logprob: -2.4261019229888916
    4. ' '' → logprob: -3.1761019229888916
    5. '#' → logprob: -3.8011019229888916
    6. ' ' → logprob: -3.9261019229888916
    7. ''A' → logprob: -4.426102161407471
    8. ' a' → logprob: -4.551102161407471
    9. ' #' → logprob: -4.676102161407471
    10. 'abcdefghijklmnopqrstuvwxyz' → logprob: -5.301102161407471

Token 73: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.040570132434368134
    2. 'abcdefghijklmnopqrstuvwxyz' → logprob: -3.290570020675659
    3. ''a' → logprob: -7.165570259094238
    4. 'Z' → logprob: -7.290570259094238
    5. ''' → logprob: -7.540570259094238
    6. '0' → logprob: -8.415570259094238
    7. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -9.915570259094238
    8. '"' → logprob: -10.290570259094238
    9. ''s' → logprob: -10.415570259094238
    10. '[' → logprob: -10.540570259094238

Token 74: ''-' (ID: 44302)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1053076833486557
    2. '-z' → logprob: -2.3553075790405273
    3. '-Z' → logprob: -6.480307579040527
    4. ' -' → logprob: -6.980307579040527
    5. ''-' → logprob: -7.105307579040527
    6. 'abcdefghijklmnopqrstuvwxyz' → logprob: -7.105307579040527
    7. 'mnopqrstuvwxyz' → logprob: -7.855307579040527
    8. '-'' → logprob: -9.230307579040527
    9. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -9.480307579040527
    10. 'b' → logprob: -9.605307579040527

Token 75: ''' (ID: 6)
  Prédit: ''z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''z' → logprob: -0.2999403476715088
    2. ''' → logprob: -1.9249403476715088
    3. 'z' → logprob: -2.299940347671509
    4. ' z' → logprob: -5.17494010925293
    5. '"' → logprob: -6.04994010925293
    6. 'abcdefghijklmnopqrstuvwxyz' → logprob: -6.17494010925293
    7. 'mnopqrstuvwxyz' → logprob: -6.42494010925293
    8. '-z' → logprob: -7.17494010925293
    9. '	z' → logprob: -8.92494010925293
    10. '   ' → logprob: -10.29994010925293

Token 76: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -9.662937372922897e-05
    2. ''z' → logprob: -9.250096321105957
    3. ' z' → logprob: -15.375096321105957
    4. '	z' → logprob: -15.875096321105957
    5. ''' → logprob: -16.625097274780273
    6. '_z' → logprob: -18.125097274780273
    7. '-z' → logprob: -18.750097274780273
    8. 'abcdefghijklmnopqrstuvwxyz' → logprob: -20.125097274780273
    9. '‘z' → logprob: -20.250097274780273
    10. 'Z' → logprob: -20.250097274780273

Token 77: ''' (ID: 6)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4858935475349426
    2. ' ' → logprob: -1.7358934879302979
    3. 'for' → logprob: -2.360893487930298
    4. ' for' → logprob: -2.360893487930298
    5. '  ' → logprob: -5.485893726348877
    6. ':' → logprob: -5.610893726348877
    7. '<|end|>' → logprob: -5.610893726348877
    8. ')' → logprob: -6.485893726348877
    9. '    ' → logprob: -6.735893726348877
    10. ',' → logprob: -6.735893726348877

Token 78: ' ' (ID: 220)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.74372398853302
    2. 'for' → logprob: -0.99372398853302
    3. ' ' → logprob: -2.2437238693237305
    4. '   ' → logprob: -3.3687238693237305
    5. '<|end|>' → logprob: -5.6187238693237305
    6. ',' → logprob: -6.1187238693237305
    7. ':' → logprob: -6.2437238693237305
    8. '  ' → logprob: -7.1187238693237305
    9. '26' → logprob: -7.3687238693237305
    10. '16' → logprob: -7.3687238693237305

Token 79: '26' (ID: 2109)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2466554194688797
    2. '   ' → logprob: -1.9966554641723633
    3. ' for' → logprob: -2.8716554641723633
    4. '26' → logprob: -4.746655464172363
    5. ' ' → logprob: -4.871655464172363
    6. '0' → logprob: -6.371655464172363
    7. ':' → logprob: -6.496655464172363
    8. ',' → logprob: -6.746655464172363
    9. 'abcdefghijklmnopqrstuvwxyz' → logprob: -7.621655464172363
    10. '  ' → logprob: -7.871655464172363

Token 80: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10752972960472107
    2. '+' → logprob: -3.107529640197754
    3. ' ' → logprob: -3.982529640197754
    4. ' -' → logprob: -4.357529640197754
    5. '   ' → logprob: -4.482529640197754
    6. '<|end|>' → logprob: -5.732529640197754
    7. 'for' → logprob: -5.857529640197754
    8. '...' → logprob: -6.482529640197754
    9. '  ' → logprob: -7.357529640197754
    10. ',' → logprob: -7.357529640197754

Token 81: '51' (ID: 6231)
  Prédit: '51'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '51' → logprob: -0.0012042811140418053
    2. '25' → logprob: -6.751204490661621
    3. '49' → logprob: -10.751204490661621
    4. '50' → logprob: -12.376204490661621
    5. '45' → logprob: -12.626204490661621
    6. ' ' → logprob: -13.001204490661621
    7. '5' → logprob: -13.501204490661621
    8. 'z' → logprob: -14.626204490661621
    9. '52' → logprob: -15.126204490661621
    10. '```' → logprob: -15.376204490661621

Token 82: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12790800631046295
    2. ' for' → logprob: -2.1279079914093018
    3. '   ' → logprob: -7.252908229827881
    4. '<|end|>' → logprob: -8.502907752990723
    5. ' ' → logprob: -10.377907752990723
    6. ',' → logprob: -11.752907752990723
    7. '```' → logprob: -11.877907752990723
    8. ':' → logprob: -12.127907752990723
    9. ')' → logprob: -12.502907752990723
    10. '	for' → logprob: -12.877907752990723

Token 83: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04871317744255066
    2. ' for' → logprob: -3.048713207244873
    3. '   ' → logprob: -9.048712730407715
    4. '
' → logprob: -13.173712730407715
    5. ' ' → logprob: -13.173712730407715
    6. '<|end|>' → logprob: -13.173712730407715
    7. '	for' → logprob: -14.048712730407715
    8. '```' → logprob: -14.173712730407715
    9. ',' → logprob: -15.548712730407715
    10. '  ' → logprob: -16.17371368408203

Token 84: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.054924376308918
    2. 'i' → logprob: -2.929924488067627
    3. ',' → logprob: -11.054924011230469
    4. ' ' → logprob: -11.179924011230469
    5. ' j' → logprob: -12.929924011230469
    6. '  ' → logprob: -12.929924011230469
    7. ' ,' → logprob: -13.304924011230469
    8. ',i' → logprob: -13.304924011230469
    9. ' c' → logprob: -13.679924011230469
    10. '```' → logprob: -13.929924011230469

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004183986166026443
    2. ' ,' → logprob: -7.875418186187744
    3. ' in' → logprob: -10.500418663024902
    4. 'in' → logprob: -11.750418663024902
    5. ',i' → logprob: -13.500418663024902
    6. ' ' → logprob: -15.250418663024902
    7. 'i' → logprob: -15.500418663024902
    8. '‌,' → logprob: -15.750418663024902
    9. ',in' → logprob: -15.875418663024902
    10. ' i' → logprob: -15.875418663024902

Token 86: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.03369007632136345
    2. 'c' → logprob: -3.4086899757385254
    3. ' ' → logprob: -11.033690452575684
    4. '<|end|>' → logprob: -11.158690452575684
    5. '(c' → logprob: -12.533690452575684
    6. '  ' → logprob: -13.721190452575684
    7. ')c' → logprob: -13.783690452575684
    8. ' (' → logprob: -13.846190452575684
    9. '```' → logprob: -13.908690452575684
    10. '_c' → logprob: -14.221190452575684

Token 87: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03149903565645218
    2. 'in' → logprob: -4.031498908996582
    3. ',' → logprob: -4.406498908996582
    4. ' ,' → logprob: -7.156498908996582
    5. ' ' → logprob: -9.281498908996582
    6. 'n' → logprob: -10.281498908996582
    7. 'enumer' → logprob: -10.406498908996582
    8. 'import' → logprob: -10.906498908996582
    9. '  ' → logprob: -11.031498908996582
    10. 's' → logprob: -11.156498908996582

Token 88: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.08896378427743912
    2. ' enumerate' → logprob: -2.463963747024536
    3. '"' → logprob: -10.838963508605957
    4. '(en' → logprob: -13.713963508605957
    5. '.enumer' → logprob: -14.088963508605957
    6. '```' → logprob: -14.338963508605957
    7. ' enumer' → logprob: -14.588963508605957
    8. 'en' → logprob: -14.963963508605957
    9. ' ' → logprob: -14.963963508605957
    10. ' "' → logprob: -15.588963508605957

Token 89: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -2.0339031834737398e-05
    2. ' ("' → logprob: -11.375020027160645
    3. '(' → logprob: -11.750020027160645
    4. '"' → logprob: -14.375020027160645
    5. '('' → logprob: -15.500020027160645
    6. ' "' → logprob: -17.25002098083496
    7. ' ' → logprob: -18.62502098083496
    8. '(
' → logprob: -18.75002098083496
    9. ')("' → logprob: -19.12502098083496
    10. ' (' → logprob: -19.25002098083496

Token 90: 'abcdefghijklmnopqrstuvwxyz' (ID: 161518)
  Prédit: 'abcdefghijklmnopqrstuvwxyz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abcdefghijklmnopqrstuvwxyz' → logprob: -0.0008142740116454661
    2. '"' → logprob: -7.125814437866211
    3. ''' → logprob: -12.625814437866211
    4. 'mnopqrstuvwxyz' → logprob: -13.000814437866211
    5. 'abcdefghijkl' → logprob: -13.625814437866211
    6. 'bc' → logprob: -13.750814437866211
    7. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -14.000814437866211
    8. ' abc' → logprob: -15.250814437866211
    9. 'zy' → logprob: -15.500814437866211
    10. 'abcdef' → logprob: -15.625814437866211

Token 91: '",' (ID: 672)
  Prédit: '"):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"):' → logprob: -0.5677209496498108
    2. '",' → logprob: -1.692720890045166
    3. ':' → logprob: -2.192720890045166
    4. '):' → logprob: -3.192720890045166
    5. ',' → logprob: -3.942720890045166
    6. '":' → logprob: -4.067720890045166
    7. '"):
' → logprob: -4.067720890045166
    8. ' :' → logprob: -4.692720890045166
    9. ' "' → logprob: -4.692720890045166
    10. ' ,' → logprob: -4.817720890045166

Token 92: ' start' (ID: 1604)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.033663567155599594
    2. ' ' → logprob: -3.408663511276245
    3. '   ' → logprob: -11.783663749694824
    4. ' start' → logprob: -12.283663749694824
    5. '  ' → logprob: -13.158663749694824
    6. '    ' → logprob: -13.783663749694824
    7. 'start' → logprob: -13.783663749694824
    8. ')' → logprob: -15.096163749694824
    9. 'index' → logprob: -16.033662796020508
    10. 'a' → logprob: -16.033662796020508

Token 93: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.816093228830141e-06
    2. '=
' → logprob: -13.62500286102295
    3. '26' → logprob: -13.87500286102295
    4. '=}' → logprob: -15.75000286102295
    5. '<|end|>' → logprob: -16.000001907348633
    6. '=int' → logprob: -16.125001907348633
    7. '=len' → logprob: -16.375001907348633
    8. ' =' → logprob: -17.000001907348633
    9. '=

' → logprob: -17.250001907348633
    10. '=lambda' → logprob: -17.750001907348633

Token 94: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -3.583550642360933e-05
    2. ' ' → logprob: -10.250036239624023
    3. '2' → logprob: -14.875036239624023
    4. '1' → logprob: -17.937536239624023
    5. '=' → logprob: -18.125036239624023
    6. '0' → logprob: -18.312536239624023
    7. ')' → logprob: -18.562536239624023
    8. '6' → logprob: -18.812536239624023
    9. '   ' → logprob: -18.812536239624023
    10. '  ' → logprob: -19.375036239624023

Token 95: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006452414090745151
    2. '):
' → logprob: -7.500645160675049
    3. ')' → logprob: -10.250645637512207
    4. ' ):' → logprob: -10.250645637512207
    5. ':' → logprob: -10.875645637512207
    6. '   ' → logprob: -13.375645637512207
    7. '):
' → logprob: -15.375645637512207
    8. '}:' → logprob: -15.500645637512207
    9. ' ' → logprob: -15.625645637512207
    10. ' ):
' → logprob: -16.62564468383789

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015194186009466648
    2. ' base' → logprob: -4.265194416046143
    3. 'base' → logprob: -7.140194416046143
    4. '	base' → logprob: -8.515193939208984
    5. ':' → logprob: -11.265193939208984
    6. '_base' → logprob: -12.515193939208984
    7. ' ' → logprob: -12.515193939208984
    8. '   ' → logprob: -12.765193939208984
    9. '(base' → logprob: -13.015193939208984
    10. '       ' → logprob: -13.140193939208984

Token 97: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.02342156507074833
    2. 'base' (adapté à ' base') → logprob: -3.8984215259552
    3. '   ' → logprob: -5.898421764373779
    4. '	base' → logprob: -9.023421287536621
    5. ' ' → logprob: -12.023421287536621
    6. '_base' → logprob: -13.398421287536621
    7. 'Base' → logprob: -14.023421287536621
    8. '(base' → logprob: -14.398421287536621
    9. '    ' → logprob: -14.523421287536621
    10. '       ' → logprob: -14.523421287536621

Token 98: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -6.704273118884885e-07
    2. '54' → logprob: -15.250000953674316
    3. '6' → logprob: -16.125
    4. ' ' → logprob: -16.625
    5. '```' → logprob: -17.0
    6. '4' → logprob: -18.125
    7. '=' → logprob: -18.375
    8. '65' → logprob: -18.625
    9. '_' → logprob: -18.875
    10. '
' → logprob: -18.875

Token 99: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -9.088346359931165e-07
    2. 'table' → logprob: -14.875000953674316
    3. '_TABLE' → logprob: -15.625000953674316
    4. '_' → logprob: -16.125
    5. '_tab' → logprob: -16.375
    6. '_tables' → logprob: -16.5
    7. '_Table' → logprob: -18.125
    8. '@Table' → logprob: -18.375
    9. '_base' → logprob: -18.75
    10. 'Table' → logprob: -18.875

Token 100: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -7.107425062713446e-06
    2. '[' → logprob: -11.875006675720215
    3. ' [' → logprob: -16.00000762939453
    4. '[C' → logprob: -18.37500762939453
    5. '[
' → logprob: -19.50000762939453
    6. '[...]' → logprob: -19.75000762939453
    7. 'c' → logprob: -20.00000762939453
    8. '

' → logprob: -20.50000762939453
    9. '```' → logprob: -21.12500762939453
    10. '[b' → logprob: -21.37500762939453

Token 101: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4617704749107361
    2. ' =' → logprob: -1.4617705345153809
    3. '=' → logprob: -2.086770534515381
    4. ' ]' → logprob: -4.836770534515381
    5. ']=' → logprob: -5.461770534515381
    6. ')' → logprob: -6.461770534515381
    7. ' )' → logprob: -9.961770057678223
    8. ' ' → logprob: -10.461770057678223
    9. ' =)' → logprob: -10.711770057678223
    10. ')=' → logprob: -10.836770057678223

Token 102: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142073929309845
    2. ' =' → logprob: -1.701420783996582
    3. ')' → logprob: -12.201420783996582
    4. '[' → logprob: -14.701420783996582
    5. ' =)' → logprob: -14.701420783996582
    6. ']' → logprob: -15.076420783996582
    7. ')=' → logprob: -15.326420783996582
    8. ' =
' → logprob: -15.576420783996582
    9. '=

' → logprob: -15.701420783996582
    10. ' ' → logprob: -15.826420783996582

Token 103: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3868713080883026
    2. ' i' → logprob: -1.136871337890625
    3. ' ' → logprob: -15.511871337890625
    4. '	i' → logprob: -16.636871337890625
    5. '<|end|>' → logprob: -17.761871337890625
    6. ' ' → logprob: -18.761871337890625
    7. '   ' → logprob: -19.511871337890625
    8. '```' → logprob: -19.761871337890625
    9. '<|end|>' → logprob: -20.011871337890625
    10. ')i' → logprob: -20.136871337890625

Token 104: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0008197537390515208
    2. 'for' → logprob: -7.500819683074951
    3. '
' → logprob: -8.25082015991211
    4. '#
' → logprob: -13.25082015991211
    5. '```' → logprob: -14.00082015991211
    6. '<|end|>' → logprob: -14.00082015991211
    7. ')' → logprob: -14.25082015991211
    8. ' for' → logprob: -14.50082015991211
    9. ' #' → logprob: -15.25082015991211
    10. ')
' → logprob: -15.50082015991211

Token 105: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -7.827200897736475e-05
    2. 'for' → logprob: -9.500078201293945
    3. '
' → logprob: -13.000078201293945
    4. '```' → logprob: -14.625078201293945
    5. ' for' → logprob: -15.625078201293945
    6. '#
' → logprob: -15.625078201293945
    7. '<|end|>' → logprob: -15.750078201293945
    8. ' #' → logprob: -16.250078201293945
    9. ''''
' → logprob: -18.000078201293945
    10. '\' → logprob: -18.375078201293945

Token 106: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10029282420873642
    2. '0' → logprob: -2.600292921066284
    3. ' '' → logprob: -4.975292682647705
    4. '#' → logprob: -5.350292682647705
    5. '012' → logprob: -5.600292682647705
    6. 'for' → logprob: -5.725292682647705
    7. ' ' → logprob: -7.100292682647705
    8. '"' → logprob: -7.600292682647705
    9. '_' → logprob: -7.975292682647705
    10. ''A' → logprob: -8.850293159484863

Token 107: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023286080977413803
    2. '012' → logprob: -9.000232696533203
    3. ''' → logprob: -9.125232696533203
    4. ' ' → logprob: -16.250232696533203
    5. '"' → logprob: -16.375232696533203
    6. 'digits' → logprob: -16.375232696533203
    7. '０' → logprob: -16.875232696533203
    8. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -17.500232696533203
    9. '01' → logprob: -17.625232696533203
    10. ''-' → logprob: -17.875232696533203

Token 108: ''-' (ID: 44302)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0006415460375137627
    2. ''-' → logprob: -7.750641345977783
    3. ' -' → logprob: -9.500641822814941
    4. '123' → logprob: -10.000641822814941
    5. '012' → logprob: -10.375641822814941
    6. ' ' → logprob: -10.875641822814941
    7. '"-' → logprob: -11.000641822814941
    8. '9' → logprob: -11.500641822814941
    9. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -13.125641822814941
    10. '0' → logprob: -13.125641822814941

Token 109: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.28810733556747437
    2. ' ' → logprob: -1.7881073951721191
    3. '48' → logprob: -3.288107395172119
    4. ' '' → logprob: -3.788107395172119
    5. '0' → logprob: -4.538107395172119
    6. '49' → logprob: -5.788107395172119
    7. '9' → logprob: -5.913107395172119
    8. '-' → logprob: -6.288107395172119
    9. '"' → logprob: -6.663107395172119
    10. '47' → logprob: -7.288107395172119

Token 110: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -15.000000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '59' → logprob: -18.25
    5. '   ' → logprob: -18.375
    6. '۹' → logprob: -18.5
    7. '９' → logprob: -18.5
    8. ''' → logprob: -18.75
    9. '`' → logprob: -19.0
    10. '९' → logprob: -19.0625

Token 111: ''' (ID: 6)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.53000408411026
    2. ' for' → logprob: -0.90500408411026
    3. '<|end|>' → logprob: -6.030004024505615
    4. ',' → logprob: -6.530004024505615
    5. ' ' → logprob: -6.655004024505615
    6. ')' → logprob: -7.780004024505615
    7. ' =' → logprob: -8.280004501342773
    8. ''' → logprob: -8.655004501342773
    9. '#' → logprob: -8.780004501342773
    10. '0' → logprob: -8.905004501342773

Token 112: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16023336350917816
    2. ' for' → logprob: -1.9102333784103394
    3. '
' → logprob: -12.285233497619629
    4. ',' → logprob: -13.035233497619629
    5. ' ' → logprob: -13.785233497619629
    6. '=' → logprob: -14.785233497619629
    7. '.for' → logprob: -15.410233497619629
    8. ',
' → logprob: -15.535233497619629
    9. '	for' → logprob: -15.785233497619629
    10. ' =' → logprob: -16.160232543945312

Token 113: '52' (ID: 6283)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00714772567152977
    2. ' for' → logprob: -5.007147789001465
    3. ' ' → logprob: -9.257147789001465
    4. '46' → logprob: -9.507147789001465
    5. 'range' → logprob: -9.882147789001465
    6. '<|end|>' → logprob: -9.882147789001465
    7. ',' → logprob: -10.382147789001465
    8. '0' → logprob: -10.507147789001465
    9. 'enumer' → logprob: -11.382147789001465
    10. '47' → logprob: -11.507147789001465

Token 114: '-' (ID: 12)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2725209891796112
    2. '-' → logprob: -1.6475210189819336
    3. ' for' → logprob: -3.5225210189819336
    4. ',' → logprob: -4.147521018981934
    5. '-,' → logprob: -8.647521018981934
    6. '+' → logprob: -8.772521018981934
    7. ' -' → logprob: -9.397521018981934
    8. ' ' → logprob: -9.772521018981934
    9. ' ,' → logprob: -10.022521018981934
    10. '...' → logprob: -10.272521018981934

Token 115: '61' (ID: 8954)
  Prédit: '57'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '57' → logprob: -0.7122882604598999
    2. '9' → logprob: -0.9622882604598999
    3. '61' → logprob: -2.0872883796691895
    4. ' ' → logprob: -5.8372883796691895
    5. '59' → logprob: -7.5872883796691895
    6. '```' → logprob: -12.337287902832031
    7. '63' → logprob: -12.712287902832031
    8. '58' → logprob: -13.212287902832031
    9. '   ' → logprob: -14.087287902832031
    10. '`' → logprob: -14.212287902832031

Token 116: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004078639671206474
    2. ' for' → logprob: -5.5040788650512695
    3. '	for' → logprob: -16.254077911376953
    4. ' ' → logprob: -16.379077911376953
    5. '
' → logprob: -16.754077911376953
    6. ',' → logprob: -18.004077911376953
    7. '<|end|>' → logprob: -18.754077911376953
    8. '.for' → logprob: -19.004077911376953
    9. ')' → logprob: -19.254077911376953
    10. '_for' → logprob: -19.379077911376953

Token 117: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.2729995988775045e-06
    2. ' for' → logprob: -12.000006675720215
    3. '
' → logprob: -20.2500057220459
    4. '0' → logprob: -20.5000057220459
    5. '012' → logprob: -21.0000057220459
    6. '	for' → logprob: -22.8750057220459
    7. 'f' → logprob: -23.3750057220459
    8. '```' → logprob: -23.7500057220459
    9. '_for' → logprob: -24.1250057220459
    10. '.for' → logprob: -24.5000057220459

Token 118: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004621661268174648
    2. 'i' → logprob: -5.379621505737305
    3. ' ' → logprob: -13.879621505737305
    4. '	i' → logprob: -14.879621505737305
    5. '  ' → logprob: -16.129621505737305
    6. 'I' → logprob: -17.129621505737305
    7. '_i' → logprob: -17.504621505737305
    8. '   ' → logprob: -17.629621505737305
    9. ' ' → logprob: -17.879621505737305
    10. ',i' → logprob: -17.879621505737305

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003391574718989432
    2. ' ,' → logprob: -8.00033950805664
    3. ',i' → logprob: -13.75033950805664
    4. ' in' → logprob: -14.12533950805664
    5. 'in' → logprob: -14.50033950805664
    6. '_,' → logprob: -15.50033950805664
    7. ',char' → logprob: -15.62533950805664
    8. ',c' → logprob: -15.87533950805664
    9. 'import' → logprob: -15.87533950805664
    10. ' ' → logprob: -16.12533950805664

Token 120: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.071022629737854
    2. 'c' → logprob: -2.6960225105285645
    3. ' i' → logprob: -7.5710225105285645
    4. 'i' → logprob: -8.571022987365723
    5. 'range' → logprob: -9.446022987365723
    6. ' ' → logprob: -9.696022987365723
    7. '"' → logprob: -9.821022987365723
    8. ',' → logprob: -10.071022987365723
    9. ',c' → logprob: -10.196022987365723
    10. ' range' → logprob: -10.946022987365723

Token 121: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.535887598991394
    2. ' in' → logprob: -0.910887598991394
    3. 'in' → logprob: -4.660887718200684
    4. ' ,' → logprob: -5.785887718200684
    5. ' ' → logprob: -9.785887718200684
    6. ',in' → logprob: -10.910887718200684
    7. '=' → logprob: -11.035887718200684
    8. 'enumer' → logprob: -11.285887718200684
    9. 'import' → logprob: -11.410887718200684
    10. '  ' → logprob: -12.785887718200684

Token 122: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.010927905328571796
    2. '"' → logprob: -4.885927677154541
    3. ' enumerate' → logprob: -5.760927677154541
    4. ' "' → logprob: -8.7609281539917
    5. '("' → logprob: -12.1359281539917
    6. 'range' → logprob: -13.2609281539917
    7. ' ' → logprob: -14.1359281539917
    8. 'enum' → logprob: -14.3859281539917
    9. 'import' → logprob: -14.8859281539917
    10. '.enumer' → logprob: -15.0109281539917

Token 123: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0002695608709473163
    2. ' ("' → logprob: -8.250269889831543
    3. '(' → logprob: -12.500269889831543
    4. '"' → logprob: -12.750269889831543
    5. '('' → logprob: -13.750269889831543
    6. ' ' → logprob: -14.625269889831543
    7. ' "' → logprob: -16.125268936157227
    8. ')("' → logprob: -17.000268936157227
    9. '(
' → logprob: -17.125268936157227
    10. ' (' → logprob: -17.625268936157227

Token 124: '012' (ID: 19267)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0052564069628715515
    2. '012' → logprob: -5.255256175994873
    3. ''' → logprob: -10.755256652832031
    4. ' "' → logprob: -14.130256652832031
    5. '123' → logprob: -15.380256652832031
    6. '

' → logprob: -16.75525665283203
    7. '")' → logprob: -16.88025665283203
    8. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -17.13025665283203
    9. '">' → logprob: -17.63025665283203
    10. ' ' → logprob: -17.63025665283203

Token 125: '345' (ID: 22901)
  Prédit: '345'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '345' → logprob: -0.0002205828350270167
    2. '-' → logprob: -8.50022029876709
    3. '"' → logprob: -12.00022029876709
    4. '3' → logprob: -12.75022029876709
    5. '123' → logprob: -13.50022029876709
    6. '34' → logprob: -13.75022029876709
    7. '789' → logprob: -14.00022029876709
    8. '012' → logprob: -14.37522029876709
    9. '234' → logprob: -14.37522029876709
    10. '456' → logprob: -14.37522029876709

Token 126: '678' (ID: 30833)
  Prédit: '345'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '345' → logprob: -6.034592388459714e-06
    2. '789' → logprob: -12.500005722045898
    3. '456' → logprob: -14.250005722045898
    4. '346' → logprob: -14.375005722045898
    5. '678' → logprob: -14.375005722045898
    6. '012' → logprob: -16.2500057220459
    7. '987' → logprob: -16.3750057220459
    8. '"' → logprob: -16.6250057220459
    9. '9' → logprob: -16.7500057220459
    10. '
' → logprob: -16.7500057220459

Token 127: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -9.758300438988954e-05
    2. '678' → logprob: -9.500097274780273
    3. '789' → logprob: -10.875097274780273
    4. '"' → logprob: -12.875097274780273
    5. '987' → logprob: -15.000097274780273
    6. '
' → logprob: -15.750097274780273
    7. '901' → logprob: -16.375097274780273
    8. '"""' → logprob: -16.375097274780273
    9. '９' → logprob: -16.500097274780273
    10. '``' → logprob: -16.625097274780273

Token 128: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.03191294148564339
    2. ',' → logprob: -3.5319130420684814
    3. ' ",' → logprob: -7.031912803649902
    4. ' ,' → logprob: -7.656912803649902
    5. '"' → logprob: -8.031912803649902
    6. '"):
' → logprob: -8.406912803649902
    7. '',' → logprob: -9.406912803649902
    8. '"):' → logprob: -9.406912803649902
    9. ',",' → logprob: -10.531912803649902
    10. '",-' → logprob: -11.281912803649902

Token 129: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.1002139002084732
    2. ' start' → logprob: -2.3502140045166016
    3. ' ' → logprob: -12.225214004516602
    4. '52' → logprob: -13.975214004516602
    5. ')' → logprob: -14.850214004516602
    6. '  ' → logprob: -15.600214004516602
    7. '   ' → logprob: -15.725214004516602
    8. '53' → logprob: -15.850214004516602
    9. ',start' → logprob: -16.1002140045166
    10. 'range' → logprob: -16.3502140045166

Token 130: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: 0.0
    2. '=
' → logprob: -17.0
    3. '=

' → logprob: -17.75
    4. '=}' → logprob: -19.5
    5. '52' → logprob: -19.75
    6. '=len' → logprob: -20.625
    7. '53' → logprob: -21.125
    8. '=int' → logprob: -21.125
    9. '==' → logprob: -21.625
    10. ' =' → logprob: -21.75

Token 131: '52' (ID: 6283)
  Prédit: '52'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '52' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -18.500003814697266
    4. '052' → logprob: -18.812503814697266
    5. '  ' → logprob: -18.875003814697266
    6. '53' → logprob: -19.625003814697266
    7. '
' → logprob: -19.687503814697266
    8. '5' → logprob: -19.875003814697266
    9. '54' → logprob: -20.125003814697266
    10. '42' → logprob: -20.437503814697266

Token 132: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06500768661499023
    2. '):' → logprob: -2.8150076866149902
    3. '   ' → logprob: -5.94000768661499
    4. ':' → logprob: -8.940008163452148
    5. '):
' → logprob: -8.940008163452148
    6. ' ):
' → logprob: -9.815008163452148
    7. ')' → logprob: -9.940008163452148
    8. ':
' → logprob: -10.940008163452148
    9. ' ' → logprob: -12.065008163452148
    10. ' ):' → logprob: -12.565008163452148

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03657066449522972
    2. ' base' → logprob: -3.4115705490112305
    3. 'base' → logprob: -5.9115705490112305
    4. '	base' → logprob: -9.16157054901123
    5. ' ' → logprob: -9.91157054901123
    6. '       ' → logprob: -11.16157054901123
    7. '_base' → logprob: -11.66157054901123
    8. '(base' → logprob: -11.78657054901123
    9. '  ' → logprob: -11.91157054901123
    10. '{
' → logprob: -12.03657054901123

Token 134: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.5802684426307678
    2. 'base' (adapté à ' base') → logprob: -0.8302684426307678
    3. '   ' → logprob: -5.455268383026123
    4. '	base' → logprob: -10.330268859863281
    5. ' ' → logprob: -12.330268859863281
    6. '(base' → logprob: -12.955268859863281
    7. '_base' → logprob: -12.955268859863281
    8. '  ' → logprob: -13.705268859863281
    9. 'Base' → logprob: -13.705268859863281
    10. '    ' → logprob: -14.205268859863281

Token 135: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: 0.0
    2. 'base' → logprob: -16.875
    3. '54' → logprob: -17.375
    4. ' ' → logprob: -19.5
    5. '6' → logprob: -19.875
    6. '65' → logprob: -20.125
    7. 'code' → logprob: -20.75
    8. '=' → logprob: -20.75
    9. '```' → logprob: -20.75
    10. '63' → logprob: -21.375

Token 136: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -6.704273118884885e-07
    2. 'table' → logprob: -15.000000953674316
    3. '_' → logprob: -15.500000953674316
    4. '_tables' → logprob: -16.875
    5. '_TABLE' → logprob: -17.0
    6. '_tab' → logprob: -17.125
    7. 'Table' → logprob: -18.625
    8. '_base' → logprob: -18.75
    9. '_tbl' → logprob: -19.375
    10. '_Table' → logprob: -19.5

Token 137: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -3.6312321753939614e-05
    2. '[' → logprob: -10.250036239624023
    3. '[C' → logprob: -15.375036239624023
    4. '[...]' → logprob: -15.625036239624023
    5. ' [' → logprob: -15.750036239624023
    6. '_table' → logprob: -15.875036239624023
    7. '_base' → logprob: -16.250036239624023
    8. '_c' → logprob: -17.125036239624023
    9. '[]' → logprob: -17.250036239624023
    10. '[i' → logprob: -17.625036239624023

Token 138: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5165505409240723
    2. ']' → logprob: -1.1415505409240723
    3. ' =' → logprob: -2.5165505409240723
    4. ']=' → logprob: -6.141550540924072
    5. ')' → logprob: -7.516550540924072
    6. ' ]' → logprob: -7.766550540924072
    7. '[' → logprob: -8.891550064086914
    8. '   ' → logprob: -10.016550064086914
    9. ' ' → logprob: -10.141550064086914
    10. ')=' → logprob: -11.516550064086914

Token 139: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407984733581543
    2. ' =' → logprob: -0.9740798473358154
    3. '[' → logprob: -14.224080085754395
    4. ')' → logprob: -14.474080085754395
    5. ' ' → logprob: -14.474080085754395
    6. ']' → logprob: -14.724080085754395
    7. ']=' → logprob: -15.224080085754395
    8. '   ' → logprob: -15.599080085754395
    9. ')=' → logprob: -16.349079132080078
    10. ' =)' → logprob: -16.349079132080078

Token 140: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25239312648773193
    2. 'i' → logprob: -1.502393126487732
    3. '61' → logprob: -7.7523932456970215
    4. ' ' → logprob: -10.502392768859863
    5. '62' → logprob: -12.377392768859863
    6. '	i' → logprob: -13.627392768859863
    7. '   ' → logprob: -14.377392768859863
    8. '63' → logprob: -15.627392768859863
    9. '  ' → logprob: -16.00239372253418
    10. '64' → logprob: -16.00239372253418

Token 141: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0001137947037932463
    2. '#
' → logprob: -9.625113487243652
    3. 'base' → logprob: -11.000113487243652
    4. 'for' → logprob: -11.250113487243652
    5. '
' → logprob: -12.250113487243652
    6. ''#' → logprob: -13.250113487243652
    7. '```' → logprob: -13.375113487243652
    8. ' #' → logprob: -13.500113487243652
    9. '   ' → logprob: -14.125113487243652
    10. ')' → logprob: -14.125113487243652

Token 142: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -6.134509021649137e-05
    2. '#
' → logprob: -10.25006103515625
    3. ''#' → logprob: -11.12506103515625
    4. ''' → logprob: -13.50006103515625
    5. ' #' → logprob: -13.75006103515625
    6. '
' → logprob: -14.12506103515625
    7. '```' → logprob: -14.12506103515625
    8. '\' → logprob: -14.25006103515625
    9. '`' → logprob: -14.25006103515625
    10. ')' → logprob: -14.62506103515625

Token 143: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7615103721618652
    2. ''' → logprob: -1.7615103721618652
    3. '_' → logprob: -2.1365103721618652
    4. ''+' → logprob: -2.1365103721618652
    5. 'for' → logprob: -3.0115103721618652
    6. '"+"' → logprob: -3.8865103721618652
    7. ''_' → logprob: -4.386510372161865
    8. '#' → logprob: -5.136510372161865
    9. '"+' → logprob: -5.261510372161865
    10. ' '+'' → logprob: -5.261510372161865

Token 144: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0625182390213013
    2. ''+' → logprob: -1.1875182390213013
    3. '=' → logprob: -2.1875181198120117
    4. ' =' → logprob: -2.8125181198120117
    5. 'base' → logprob: -3.3125181198120117
    6. '['' → logprob: -3.3125181198120117
    7. '[' → logprob: -3.9375181198120117
    8. ''=' → logprob: -4.437518119812012
    9. '"+"' → logprob: -4.687518119812012
    10. '='+' → logprob: -4.812518119812012

Token 145: '62' (ID: 8947)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.21505913138389587
    2. 'base' → logprob: -2.3400590419769287
    3. '[' → logprob: -2.5900590419769287
    4. ''' → logprob: -4.715059280395508
    5. '["+' → logprob: -5.090059280395508
    6. ''+' → logprob: -5.465059280395508
    7. '"+"' → logprob: -6.715059280395508
    8. '["' → logprob: -7.965059280395508
    9. '+' → logprob: -8.465059280395508
    10. '=' → logprob: -9.215059280395508

Token 146: '
' (ID: 198)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -6.885492621222511e-05
    2. ' base' → logprob: -10.625068664550781
    3. '[' → logprob: -10.875068664550781
    4. ';base' → logprob: -11.625068664550781
    5. '+' → logprob: -12.500068664550781
    6. '<|end|>' → logprob: -12.625068664550781
    7. '_base' → logprob: -13.500068664550781
    8. '['' → logprob: -13.625068664550781
    9. '
' → logprob: -14.000068664550781
    10. ']' → logprob: -14.125068664550781

Token 147: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0003119863977190107
    2. '['' → logprob: -8.250311851501465
    3. ' base' → logprob: -10.125311851501465
    4. '[' → logprob: -12.625311851501465
    5. '["+' → logprob: -12.875311851501465
    6. '"+"' → logprob: -13.500311851501465
    7. ''+' → logprob: -13.875311851501465
    8. ''' → logprob: -14.250311851501465
    9. '["' → logprob: -15.000311851501465
    10. '	base' → logprob: -15.500311851501465

Token 148: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -5.512236498361744e-07
    2. '6' → logprob: -14.750000953674316
    3. ' ' → logprob: -17.0
    4. '54' → logprob: -19.125
    5. '65' → logprob: -19.25
    6. '_' → logprob: -20.0
    7. '641' → logprob: -20.0
    8. 'base' → logprob: -20.125
    9. 'salt' → logprob: -20.625
    10. '63' → logprob: -20.625

Token 149: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -1.0280383548888494e-06
    2. '_tab' → logprob: -14.875000953674316
    3. '_' → logprob: -15.375000953674316
    4. 'table' → logprob: -15.750000953674316
    5. '_TABLE' → logprob: -16.125001907348633
    6. '_tbl' → logprob: -16.750001907348633
    7. '_tables' → logprob: -17.125001907348633
    8. '_base' → logprob: -17.125001907348633
    9. 'Table' → logprob: -17.250001907348633
    10. '_t' → logprob: -17.625001907348633

Token 150: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0005002511315979064
    2. '[' → logprob: -8.250500679016113
    3. '["+' → logprob: -8.375500679016113
    4. ''' → logprob: -12.500500679016113
    5. ''+' → logprob: -12.875500679016113
    6. '["' → logprob: -13.625500679016113
    7. '[
' → logprob: -14.750500679016113
    8. '"+"' → logprob: -14.875500679016113
    9. ' ['' → logprob: -16.500499725341797
    10. '['_' → logprob: -17.000499725341797

Token 151: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0041371723636984825
    2. ''+' → logprob: -5.62913703918457
    3. ''' → logprob: -7.87913703918457
    4. '+]' → logprob: -8.87913703918457
    5. '']' → logprob: -11.37913703918457
    6. '+
' → logprob: -13.12913703918457
    7. ' +' → logprob: -13.37913703918457
    8. '+'' → logprob: -13.62913703918457
    9. '+"]' → logprob: -13.87913703918457
    10. '"+"' → logprob: -15.12913703918457

Token 152: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.00011903966515092179
    2. ']' → logprob: -10.00011920928955
    3. '']=' → logprob: -10.00011920928955
    4. ' ']' → logprob: -10.87511920928955
    5. ''' → logprob: -12.12511920928955
    6. '"]' → logprob: -12.62511920928955
    7. '']='' → logprob: -14.62511920928955
    8. ' ]' → logprob: -16.625118255615234
    9. ']=' → logprob: -17.875118255615234
    10. '']="' → logprob: -18.625118255615234

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740792512893677
    2. '=' → logprob: -0.9740792512893677
    3. ']' → logprob: -13.724079132080078
    4. ' ' → logprob: -14.474079132080078
    5. ')' → logprob: -14.849079132080078
    6. ']=' → logprob: -16.224079132080078
    7. ' =
' → logprob: -16.724079132080078
    8. ' =)' → logprob: -16.849079132080078
    9. ' ='' → logprob: -17.224079132080078
    10. '='' → logprob: -17.224079132080078

Token 154: ' ' (ID: 220)
  Prédit: '62'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '62' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. '63' → logprob: -15.625065803527832
    4. '61' → logprob: -17.50006675720215
    5. '52' → logprob: -19.12506675720215
    6. '622' → logprob: -19.25006675720215
    7. '64' → logprob: -19.50006675720215
    8. '60' → logprob: -19.62506675720215
    9. '6' → logprob: -19.87506675720215
    10. '   ' → logprob: -20.25006675720215

Token 155: '62' (ID: 8947)
  Prédit: '62'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '62' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '6' → logprob: -17.875001907348633
    4. '63' → logprob: -18.000001907348633
    5. '622' → logprob: -18.250001907348633
    6. '61' → logprob: -18.375001907348633
    7. '52' → logprob: -19.000001907348633
    8. '60' → logprob: -19.875001907348633
    9. '062' → logprob: -19.875001907348633
    10. ''' → logprob: -20.125001907348633

Token 156: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.009827514179050922
    2. 'base' → logprob: -4.634827613830566
    3. ' base' → logprob: -10.884827613830566
    4. ' #' → logprob: -11.259827613830566
    5. '_' → logprob: -12.009827613830566
    6. ')' → logprob: -12.384827613830566
    7. ''' → logprob: -12.759827613830566
    8. '<|end|>' → logprob: -12.759827613830566
    9. '_base' → logprob: -13.009827613830566
    10. ']' → logprob: -13.134827613830566

Token 157: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0634239912033081
    2. 'base' → logprob: -2.8134241104125977
    3. '_' → logprob: -7.188424110412598
    4. '/' → logprob: -8.438424110412598
    5. '-' → logprob: -9.063424110412598
    6. ' base' → logprob: -9.188424110412598
    7. ''#' → logprob: -9.688424110412598
    8. '/base' → logprob: -9.813424110412598
    9. '_base' → logprob: -10.188424110412598
    10. ' #' → logprob: -10.688424110412598

Token 158: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0025587803684175014
    2. ''' → logprob: -6.002558708190918
    3. ''/' → logprob: -10.002558708190918
    4. '_' → logprob: -11.627558708190918
    5. '/=' → logprob: -12.377558708190918
    6. '/'' → logprob: -12.502558708190918
    7. 'slash' → logprob: -12.752558708190918
    8. ' '/'' → logprob: -13.127558708190918
    9. '('/')' → logprob: -13.252558708190918
    10. ''''' → logprob: -13.377558708190918

Token 159: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6151899099349976
    2. '/' → logprob: -1.7401899099349976
    3. '['' → logprob: -1.9901899099349976
    4. '']' → logprob: -2.615190029144287
    5. '63' → logprob: -4.115190029144287
    6. ''/' → logprob: -4.115190029144287
    7. '=' → logprob: -4.615190029144287
    8. ' =' → logprob: -4.740190029144287
    9. '<|end|>' → logprob: -5.115190029144287
    10. '[' → logprob: -5.240190029144287

Token 160: '63' (ID: 8876)
  Prédit: '63'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '63' → logprob: -0.8990315198898315
    2. '=' → logprob: -1.0240315198898315
    3. ''' → logprob: -2.024031639099121
    4. '']' → logprob: -3.024031639099121
    5. ' =' → logprob: -4.024031639099121
    6. ''=' → logprob: -4.149031639099121
    7. ''/' → logprob: -4.524031639099121
    8. ' ' → logprob: -5.774031639099121
    9. ']' → logprob: -6.024031639099121
    10. '']=' → logprob: -7.274031639099121

Token 161: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47851988673210144
    2. 'base' → logprob: -1.9785199165344238
    3. '['' → logprob: -1.9785199165344238
    4. '/' → logprob: -2.978519916534424
    5. ' =' → logprob: -2.978519916534424
    6. '/base' → logprob: -7.353519916534424
    7. '[' → logprob: -7.728519916534424
    8. ']' → logprob: -7.853519916534424
    9. ' base' → logprob: -8.478519439697266
    10. ''' → logprob: -9.353519439697266

Token 162: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.02333061210811138
    2. ''' → logprob: -4.0233306884765625
    3. '['' → logprob: -5.6483306884765625
    4. '/' → logprob: -6.7733306884765625
    5. '('/')' → logprob: -8.773330688476562
    6. ''/' → logprob: -8.898330688476562
    7. '{'' → logprob: -9.273330688476562
    8. ' base' → logprob: -10.398330688476562
    9. 'slash' → logprob: -10.523330688476562
    10. '/base' → logprob: -10.523330688476562

Token 163: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -6.704273118884885e-07
    2. '54' → logprob: -14.875000953674316
    3. '6' → logprob: -15.500000953674316
    4. '65' → logprob: -18.75
    5. '63' → logprob: -19.0
    6. 'base' → logprob: -20.125
    7. 'salt' → logprob: -20.5
    8. ' ' → logprob: -20.875
    9. '4' → logprob: -20.875
    10. 'code' → logprob: -21.125

Token 164: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -4.320199877838604e-07
    2. '_tables' → logprob: -15.875
    3. 'table' → logprob: -16.125
    4. '_TABLE' → logprob: -16.625
    5. 'Table' → logprob: -16.75
    6. '['_' → logprob: -17.0
    7. '['' → logprob: -17.5
    8. '_' → logprob: -18.375
    9. '[_' → logprob: -19.875
    10. '@Table' → logprob: -20.0

Token 165: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -1.9385402993066236e-05
    2. '[' → logprob: -11.250019073486328
    3. ' ['/' → logprob: -12.750019073486328
    4. '.setdefault' → logprob: -13.750019073486328
    5. '["' → logprob: -14.375019073486328
    6. '[
' → logprob: -15.125019073486328
    7. '[['' → logprob: -15.125019073486328
    8. '['_' → logprob: -15.250019073486328
    9. '('/')' → logprob: -15.375019073486328
    10. '[...]' → logprob: -15.500019073486328

Token 166: '/' (ID: 14)
  Prédit: ''/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''/' → logprob: -0.0550631619989872
    2. '/' → logprob: -3.055063247680664
    3. ''' → logprob: -5.055063247680664
    4. '/]' → logprob: -10.180063247680664
    5. ' '/' → logprob: -10.680063247680664
    6. '']' → logprob: -12.180063247680664
    7. '"/' → logprob: -12.180063247680664
    8. '/'' → logprob: -12.430063247680664
    9. '('/')' → logprob: -14.680063247680664
    10. '='/' → logprob: -14.805063247680664

Token 167: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.0010572222527116537
    2. ']' → logprob: -7.376057147979736
    3. '']=' → logprob: -8.001057624816895
    4. ''' → logprob: -9.626057624816895
    5. '=' → logprob: -10.876057624816895
    6. ''=' → logprob: -12.376057624816895
    7. '"]' → logprob: -12.751057624816895
    8. ']=' → logprob: -13.501057624816895
    9. ' ']' → logprob: -14.001057624816895
    10. '']='' → logprob: -14.126057624816895

Token 168: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018150178715586662
    2. ' =' → logprob: -4.018150329589844
    3. ')' → logprob: -15.143150329589844
    4. ']' → logprob: -16.768150329589844
    5. ' ' → logprob: -17.393150329589844
    6. '<|end|>' → logprob: -17.643150329589844
    7. '=}' → logprob: -17.893150329589844
    8. '='' → logprob: -18.143150329589844
    9. '=
' → logprob: -18.393150329589844
    10. ')=' → logprob: -18.393150329589844

Token 169: ' ' (ID: 220)
  Prédit: '63'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '63' → logprob: -0.004078758880496025
    2. ' ' → logprob: -5.5040788650512695
    3. '62' → logprob: -15.12907886505127
    4. '64' → logprob: -17.629077911376953
    5. '61' → logprob: -18.129077911376953
    6. '063' → logprob: -18.254077911376953
    7. ''' → logprob: -18.629077911376953
    8. '633' → logprob: -19.066577911376953
    9. '3' → logprob: -19.254077911376953
    10. '`' → logprob: -19.504077911376953

Token 170: '63' (ID: 8876)
  Prédit: '63'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '63' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '62' → logprob: -19.000001907348633
    4. ''' → logprob: -21.000001907348633
    5. '063' → logprob: -21.875001907348633
    6. '633' → logprob: -22.250001907348633
    7. '   ' → logprob: -22.500001907348633
    8. '61' → logprob: -22.625001907348633
    9. '`' → logprob: -22.750001907348633
    10. '3' → logprob: -23.000001907348633

Token 171: '


' (ID: 2499)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7156281471252441
    2. 'def' → logprob: -0.7156281471252441
    3. '<|end|>' → logprob: -4.340628147125244
    4. '
' → logprob: -5.715628147125244
    5. ' ' → logprob: -6.465628147125244
    6. ')' → logprob: -7.090628147125244
    7. '

' → logprob: -7.340628147125244
    8. '<|end|>' → logprob: -7.840628147125244
    9. ']' → logprob: -8.090627670288086
    10. '  
' → logprob: -8.090627670288086

Token 172: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002189045073464513
    2. '#' → logprob: -6.8771891593933105
    3. '
' → logprob: -7.6271891593933105
    4. '

' → logprob: -7.7521891593933105
    5. 'd' → logprob: -9.377188682556152
    6. '\' → logprob: -9.752188682556152
    7. '' → logprob: -10.627188682556152
    8. '\n' → logprob: -11.252188682556152
    9. ' 
' → logprob: -11.502188682556152
    10. '  
' → logprob: -11.627188682556152

Token 173: ' decode' (ID: 32043)
  Prédit: ' decode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' decode' → logprob: -0.005647066980600357
    2. ' base' → logprob: -5.5056471824646
    3. ' encode' → logprob: -6.7556471824646
    4. 'decode' → logprob: -8.505646705627441
    5. '_decode' → logprob: -9.505646705627441
    6. ' find' → logprob: -11.005646705627441
    7. ' dec' → logprob: -11.130646705627441
    8. ' where' → logprob: -11.505646705627441
    9. ' extract' → logprob: -11.630646705627441
    10. ' w' → logprob: -11.630646705627441

Token 174: '_line' (ID: 14418)
  Prédit: '_base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_base' → logprob: -0.03664616867899895
    2. '_' → logprob: -4.036646366119385
    3. '64' → logprob: -5.661646366119385
    4. '_string' → logprob: -5.786646366119385
    5. '_token' → logprob: -5.911646366119385
    6. '(encoded' → logprob: -6.536646366119385
    7. '_encoded' → logprob: -6.786646366119385
    8. '_char' → logprob: -6.911646366119385
    9. '_b' → logprob: -7.286646366119385
    10. '_data' → logprob: -7.536646366119385

Token 175: '(encoded' (ID: 157395)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.09692643582820892
    2. '(' → logprob: -2.59692645072937
    3. '(encoded' → logprob: -4.846926212310791
    4. '(s' → logprob: -4.971926212310791
    5. ' (' → logprob: -6.596926212310791
    6. '(code' → logprob: -7.471926212310791
    7. '(input' → logprob: -7.846926212310791
    8. '(token' → logprob: -8.34692668914795
    9. '(data' → logprob: -8.84692668914795
    10. '(string' → logprob: -8.97192668914795

Token 176: '_line' (ID: 14418)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.30886396765708923
    2. '_line' → logprob: -1.9338639974594116
    3. '_string' → logprob: -2.433863878250122
    4. '_' → logprob: -3.808863878250122
    5. '_str' → logprob: -5.558864116668701
    6. '_text' → logprob: -5.808864116668701
    7. ')' → logprob: -6.558864116668701
    8. ' ):' → logprob: -6.933864116668701
    9. '_data' → logprob: -7.433864116668701
    10. 's' → logprob: -8.308863639831543

Token 177: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00030316898482851684
    2. ':' → logprob: -8.250303268432617
    3. ')' → logprob: -10.625303268432617
    4. ' ):' → logprob: -11.625303268432617
    5. '):
' → logprob: -12.000303268432617
    6. ',' → logprob: -13.625303268432617
    7. ':str' → logprob: -14.500303268432617
    8. ' :' → logprob: -15.125303268432617
    9. '_line' → logprob: -16.625303268432617
    10. '):
' → logprob: -16.750303268432617

Token 178: ' width' (ID: 4345)
  Prédit: ' width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' width' → logprob: -1.2537897825241089
    2. ' length' → logprob: -1.5037897825241089
    3. ' base' → logprob: -2.2537899017333984
    4. 'width' → logprob: -2.5037899017333984
    5. ' n' → logprob: -2.8787899017333984
    6. ' line' → logprob: -3.1287899017333984
    7. 'length' → logprob: -3.3787899017333984
    8. ' max' → logprob: -3.5037899017333984
    9. ' size' → logprob: -4.503789901733398
    10. ' bit' → logprob: -4.628789901733398

Token 179: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006518071983009577
    2. ',' → logprob: -5.1315178871154785
    3. '):
' → logprob: -8.381518363952637
    4. ')' → logprob: -8.506518363952637
    5. ' ):' → logprob: -8.881518363952637
    6. ':' → logprob: -12.256518363952637
    7. '=' → logprob: -12.756518363952637
    8. '):
' → logprob: -12.756518363952637
    9. ' ,' → logprob: -13.381518363952637
    10. ' ' → logprob: -13.881518363952637

Token 180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01044116634875536
    2. ' decoded' → logprob: -5.135441303253174
    3. ':' → logprob: -5.635441303253174
    4. 'decoded' → logprob: -7.635441303253174
    5. ' :' → logprob: -9.010440826416016
    6. '    
' → logprob: -9.635440826416016
    7. '    ' → logprob: -10.010440826416016
    8. ' bit' → logprob: -10.010440826416016
    9. '   ' → logprob: -10.260440826416016
    10. ' binary' → logprob: -11.010440826416016

Token 181: ' """
' (ID: 7037)
  Prédit: 'decoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'decoded' → logprob: -0.2714479863643646
    2. '   ' → logprob: -2.7714478969573975
    3. ' decoded' → logprob: -2.7714478969573975
    4. 'bits' → logprob: -3.2714478969573975
    5. 'bit' → logprob: -3.5214478969573975
    6. ' bit' → logprob: -3.8964478969573975
    7. ' bits' → logprob: -4.021448135375977
    8. 'binary' → logprob: -5.646448135375977
    9. ' binary' → logprob: -6.396448135375977
    10. 'result' → logprob: -7.146448135375977

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005305977538228035
    2. '#' → logprob: -6.380305767059326
    3. ' """' → logprob: -7.005305767059326
    4. ' """
' → logprob: -7.130305767059326
    5. '"""' → logprob: -7.505305767059326
    6. ' #' → logprob: -7.630305767059326
    7. '"""
' → logprob: -8.130306243896484
    8. '    ' → logprob: -8.130306243896484
    9. ' decoded' → logprob: -9.505306243896484
    10. 'decoded' → logprob: -9.755306243896484

Token 183: ' Dé' (ID: 27247)
  Prédit: ' decoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' decoded' → logprob: -1.207235336303711
    2. '   ' → logprob: -1.457235336303711
    3. 'decoded' → logprob: -1.707235336303711
    4. ' bits' → logprob: -2.332235336303711
    5. ' bit' → logprob: -2.957235336303711
    6. ' """' → logprob: -3.082235336303711
    7. ' #' → logprob: -3.707235336303711
    8. ' """
' → logprob: -4.207235336303711
    9. ' result' → logprob: -4.457235336303711
    10. '#' → logprob: -4.582235336303711

Token 184: 'code' (ID: 3056)
  Prédit: 'code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.0010342379100620747
    2. 'c' → logprob: -8.376033782958984
    3. '   ' → logprob: -8.376033782958984
    4. 'cod' → logprob: -8.376033782958984
    5. 'codec' → logprob: -9.251033782958984
    6. 'coder' → logprob: -9.251033782958984
    7. '	code' → logprob: -10.126033782958984
    8. '#' → logprob: -10.751033782958984
    9. 'kode' → logprob: -11.251033782958984
    10. ' code' → logprob: -11.501033782958984

Token 185: ' une' (ID: 2463)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6236705780029297
    2. '(encoded' → logprob: -1.4986705780029297
    3. '(decoded' → logprob: -3.1236705780029297
    4. 'decoded' → logprob: -3.1236705780029297
    5. 'the' → logprob: -3.8736705780029297
    6. 'encoded' → logprob: -3.9986705780029297
    7. 's' → logprob: -4.12367057800293
    8. ' the' → logprob: -4.24867057800293
    9. 'token' → logprob: -4.49867057800293
    10. ' decoded' → logprob: -4.99867057800293

Token 186: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.41331911087036133
    2. ' chaîne' → logprob: -1.2883191108703613
    3. ' chaine' → logprob: -3.2883191108703613
    4. 'ligne' → logprob: -4.663319110870361
    5. 'chaine' → logprob: -5.163319110870361
    6. ' valeur' → logprob: -6.538319110870361
    7. '   ' → logprob: -6.538319110870361
    8. ' partie' → logprob: -6.538319110870361
    9. ' portion' → logprob: -6.913319110870361
    10. ' ' → logprob: -7.038319110870361

Token 187: ' enc' (ID: 3219)
  Prédit: '(encoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(encoded' → logprob: -0.9166192412376404
    2. '   ' → logprob: -1.5416193008422852
    3. '_encoded' → logprob: -1.9166193008422852
    4. ' de' → logprob: -2.416619300842285
    5. ' encoded' → logprob: -3.166619300842285
    6. '_' → logprob: -3.666619300842285
    7. '(decoded' → logprob: -3.916619300842285
    8. 'encoded' → logprob: -4.541619300842285
    9. ':' → logprob: -5.166619300842285
    10. ' of' → logprob: -5.291619300842285

Token 188: 'od' (ID: 368)
  Prédit: 'od'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.06215836852788925
    2. 'oded' → logprob: -2.8121583461761475
    3. 'ode' → logprob: -8.937158584594727
    4. 'odable' → logprob: -10.937158584594727
    5. '   ' → logprob: -11.812158584594727
    6. 'oden' → logprob: -12.312158584594727
    7. '#' → logprob: -12.437158584594727
    8. 'oder' → logprob: -12.437158584594727
    9. 'odend' → logprob: -12.687158584594727
    10. '"""
' → logprob: -13.312158584594727

Token 189: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.04766795411705971
    2. 'ed' → logprob: -3.297667980194092
    3. 'd' → logprob: -5.547667980194092
    4. 'od' → logprob: -5.672667980194092
    5. 'é' → logprob: -6.672667980194092
    6. 'e' → logprob: -8.547667503356934
    7. 'urée' → logprob: -9.172667503356934
    8. 'ee' → logprob: -9.297667503356934
    9. 'ue' → logprob: -9.297667503356934
    10. 'éd' → logprob: -9.422667503356934

Token 190: ' en' (ID: 469)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1628614664077759
    2. '(encoded' → logprob: -1.2878614664077759
    3. '   ' → logprob: -1.7878614664077759
    4. '):' → logprob: -2.2878613471984863
    5. ' :' → logprob: -3.5378613471984863
    6. '):
' → logprob: -3.6628613471984863
    7. ',' → logprob: -3.7878613471984863
    8. ' en' → logprob: -4.162861347198486
    9. '(decoded' → logprob: -4.412861347198486
    10. '_encoded' → logprob: -4.662861347198486

Token 191: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.020578090101480484
    2. 'base' → logprob: -4.395577907562256
    3. ' Base' → logprob: -5.395577907562256
    4. 'Base' → logprob: -6.520577907562256
    5. ' BASE' → logprob: -6.520577907562256
    6. 'BASE' → logprob: -8.020578384399414
    7. '_base' → logprob: -9.145578384399414
    8. ' une' → logprob: -10.145578384399414
    9. ' chaîne' → logprob: -11.145578384399414
    10. 'chaine' → logprob: -11.270578384399414

Token 192: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. 'def' → logprob: -18.875
    4. '65' → logprob: -19.875
    5. 'base' → logprob: -20.5
    6. '```' → logprob: -20.75
    7. '_' → logprob: -20.875
    8. '   ' → logprob: -21.0
    9. '-' → logprob: -21.0
    10. '6' → logprob: -21.125

Token 193: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7545788884162903
    2. ':' → logprob: -2.0045788288116455
    3. ' :' → logprob: -2.0045788288116455
    4. ',' → logprob: -2.3795788288116455
    5. '(encoded' → logprob: -2.7545788288116455
    6. 'encoded' → logprob: -3.3795788288116455
    7. '):' → logprob: -4.129579067230225
    8. '_encoded' → logprob: -4.254579067230225
    9. ' ' → logprob: -4.754579067230225
    10. ')' → logprob: -4.879579067230225

Token 194: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2219306230545044
    2. ' le' → logprob: -2.096930503845215
    3. 'le' → logprob: -3.721930503845215
    4. 'la' → logprob: -3.971930503845215
    5. ' l' → logprob: -4.346930503845215
    6. ' les' → logprob: -5.346930503845215
    7. 'l' → logprob: -5.346930503845215
    8. ' base' → logprob: -5.471930503845215
    9. ' une' → logprob: -6.221930503845215
    10. 'les' → logprob: -7.346930503845215

Token 195: ' format' (ID: 6011)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.843863308429718
    2. ' base' → logprob: -1.0938632488250732
    3. 'sp' → logprob: -2.9688632488250732
    4. ' sch' → logprob: -3.2188632488250732
    5. 'pro' → logprob: -3.4688632488250732
    6. '#' → logprob: -3.8438632488250732
    7. ' format' → logprob: -3.9688632488250732
    8. 'format' → logprob: -4.218863487243652
    9. ' spéc' → logprob: -4.343863487243652
    10. ' sp' → logprob: -4.593863487243652

Token 196: ' donné' (ID: 52079)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.4199305772781372
    2. '   ' → logprob: -1.6699305772781372
    3. ' du' → logprob: -2.5449304580688477
    4. ' complet' → logprob: -3.6699304580688477
    5. ' de' → logprob: -4.169930458068848
    6. 'b' → logprob: -5.669930458068848
    7. ',' → logprob: -5.919930458068848
    8. 'des' → logprob: -6.044930458068848
    9. '_b' → logprob: -6.044930458068848
    10. ' bit' → logprob: -6.169930458068848

Token 197: ' vers' (ID: 3640)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10723977535963058
    2. ':' → logprob: -3.2322397232055664
    3. '):' → logprob: -3.7322397232055664
    4. ' :' → logprob: -3.8572397232055664
    5. ',' → logprob: -4.357239723205566
    6. '):
' → logprob: -6.357239723205566
    7. ')' → logprob: -6.607239723205566
    8. ':
' → logprob: -8.357239723205566
    9. ' ):' → logprob: -8.607239723205566
    10. ' :
' → logprob: -8.732239723205566

Token 198: '
' (ID: 198)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.0449896901845932
    2. '   ' → logprob: -4.294989585876465
    3. 'une' → logprob: -4.419989585876465
    4. ' un' → logprob: -5.044989585876465
    5. ' la' → logprob: -5.419989585876465
    6. '[]' → logprob: -6.044989585876465
    7. 'a' → logprob: -7.044989585876465
    8. 'un' → logprob: -7.044989585876465
    9. 'la' → logprob: -7.419989585876465
    10. ' ' → logprob: -7.794989585876465

Token 199: '   ' (ID: 271)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.12950637936592102
    2. ' la' → logprob: -2.6295063495635986
    3. ' un' → logprob: -3.2545063495635986
    4. '   ' → logprob: -5.379506587982178
    5. ' le' → logprob: -6.629506587982178
    6. ' l' → logprob: -7.004506587982178
    7. 'une' → logprob: -7.004506587982178
    8. ' les' → logprob: -7.129506587982178
    9. ' des' → logprob: -7.254506587982178
    10. '    ' → logprob: -7.879506587982178

Token 200: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.1500205099582672
    2. 'une' (adapté à ' une') → logprob: -2.7750205993652344
    3. ' un' → logprob: -3.7750205993652344
    4. ' la' → logprob: -4.150020599365234
    5. 'a' → logprob: -4.275020599365234
    6. 'un' → logprob: -4.900020599365234
    7. 'la' → logprob: -5.275020599365234
    8. '   ' → logprob: -6.150020599365234
    9. 'les' → logprob: -6.650020599365234
    10. ''une' → logprob: -6.775020599365234

Token 201: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.06578519195318222
    2. ' list' → logprob: -3.8157851696014404
    3. ' string' → logprob: -4.3157854080200195
    4. ' chaîne' → logprob: -4.4407854080200195
    5. ' chaine' → logprob: -5.6907854080200195
    6. '   ' → logprob: -5.8157854080200195
    7. ' tableau' → logprob: -6.0657854080200195
    8. 'liste' → logprob: -6.0657854080200195
    9. ' bytes' → logprob: -6.5657854080200195
    10. 'chaine' → logprob: -6.8157854080200195

Token 202: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5170135498046875
    2. ' de' → logprob: -2.1420135498046875
    3. '[int' → logprob: -2.2670135498046875
    4. ' of' → logprob: -2.5170135498046875
    5. ' d' → logprob: -2.8920135498046875
    6. ' des' → logprob: -3.3920135498046875
    7. ' [' → logprob: -4.8920135498046875
    8. '<int' → logprob: -7.0170135498046875
    9. '<bool' → logprob: -7.0170135498046875
    10. 'd' → logprob: -7.2670135498046875

Token 203: ' bits' (ID: 18189)
  Prédit: ' bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -1.4553046226501465
    2. 'bool' → logprob: -1.4553046226501465
    3. '0' → logprob: -1.5803046226501465
    4. ' int' → logprob: -1.9553046226501465
    5. 'int' → logprob: -2.0803046226501465
    6. 'ent' → logprob: -4.2053046226501465
    7. ' ' → logprob: -4.5803046226501465
    8. 'ints' → logprob: -4.9553046226501465
    9. ' bits' → logprob: -5.0803046226501465
    10. '1' → logprob: -5.4553046226501465

Token 204: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5939726233482361
    2. ':' → logprob: -1.2189726829528809
    3. '(encoded' → logprob: -2.343972682952881
    4. '(' → logprob: -3.468972682952881
    5. ',' → logprob: -5.468972682952881
    6. '):' → logprob: -5.843972682952881
    7. '(decoded' → logprob: -5.843972682952881
    8. ' :' → logprob: -5.968972682952881
    9. ' (' → logprob: -5.968972682952881
    10. 'encoded' → logprob: -6.468972682952881

Token 205: '0' (ID: 15)
  Prédit: ' bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -1.3333547115325928
    2. ' int' → logprob: -1.4583547115325928
    3. '[int' → logprob: -1.9583547115325928
    4. ')' → logprob: -2.2083547115325928
    5. 'int' → logprob: -2.3333547115325928
    6. 'bool' → logprob: -2.9583547115325928
    7. ' )' → logprob: -3.7083547115325928
    8. ' [' → logprob: -3.9583547115325928
    9. '0' → logprob: -4.083354949951172
    10. ' integers' → logprob: -4.458354949951172

Token 206: '/' (ID: 14)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006729576736688614
    2. ')' → logprob: -6.006729602813721
    3. ' ,' → logprob: -6.256729602813721
    4. ']' → logprob: -6.631729602813721
    5. '])' → logprob: -7.631729602813721
    6. '   ' → logprob: -9.506729125976562
    7. ' or' → logprob: -9.506729125976562
    8. ' ou' → logprob: -9.881729125976562
    9. ' )' → logprob: -10.006729125976562
    10. 'or' → logprob: -10.381729125976562

Token 207: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015068859793245792
    2. ' ' → logprob: -6.501506805419922
    3. '   ' → logprob: -12.501506805419922
    4. ' ' → logprob: -15.001506805419922
    5. ')' → logprob: -16.126506805419922
    6. ' )' → logprob: -16.251506805419922
    7. ',' → logprob: -16.251506805419922
    8. 's' → logprob: -16.876506805419922
    9. '  ' → logprob: -16.876506805419922
    10. '```' → logprob: -16.876506805419922

Token 208: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025018174201250076
    2. ' )' → logprob: -6.502501964569092
    3. ').' → logprob: -7.377501964569092
    4. '):' → logprob: -8.127501487731934
    5. ']' → logprob: -10.502501487731934
    6. ',' → logprob: -11.252501487731934
    7. '),' → logprob: -11.877501487731934
    8. 's' → logprob: -11.877501487731934
    9. '[' → logprob: -12.502501487731934
    10. ')
' → logprob: -12.752501487731934

Token 209: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4881824254989624
    2. '   ' → logprob: -1.1131824254989624
    3. '):' → logprob: -2.988182544708252
    4. ' :' → logprob: -5.238182544708252
    5. ',' → logprob: -7.113182544708252
    6. ')' → logprob: -8.488182067871094
    7. '():' → logprob: -8.488182067871094
    8. 'def' → logprob: -8.488182067871094
    9. ':
' → logprob: -8.613182067871094
    10. ']:' → logprob: -8.988182067871094

Token 210: ' longueur' (ID: 104613)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.5228899717330933
    2. ' longueur' → logprob: -1.3978899717330933
    3. 'length' → logprob: -3.022890090942383
    4. ' taille' → logprob: -3.022890090942383
    5. ' largeur' → logprob: -3.772890090942383
    6. ' la' → logprob: -3.897890090942383
    7. ' width' → logprob: -4.647890090942383
    8. ' ' → logprob: -5.272890090942383
    9. ' size' → logprob: -6.772890090942383
    10. 'width' → logprob: -7.147890090942383

Token 211: ' width' (ID: 4345)
  Prédit: ' width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' width' → logprob: -0.6471076607704163
    2. '(width' → logprob: -1.6471076011657715
    3. 'width' → logprob: -1.6471076011657715
    4. '=' → logprob: -3.0221076011657715
    5. ' =' → logprob: -3.3971076011657715
    6. '_' → logprob: -5.8971076011657715
    7. '_width' → logprob: -6.1471076011657715
    8. ' ' → logprob: -6.5221076011657715
    9. ' equal' → logprob: -7.7721076011657715
    10. ' ' → logprob: -7.8971076011657715

Token 212: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22155798971652985
    2. '):' → logprob: -2.221558094024658
    3. '   ' → logprob: -2.471558094024658
    4. ' :' → logprob: -5.721558094024658
    5. ')' → logprob: -7.096558094024658
    6. ':
' → logprob: -7.346558094024658
    7. '):
' → logprob: -7.721558094024658
    8. ']:' → logprob: -8.4715576171875
    9. ',' → logprob: -8.7215576171875
    10. '():' → logprob: -9.0965576171875

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007462753914296627
    2. ')' → logprob: -5.257462978363037
    3. '"""' → logprob: -7.757462978363037
    4. ' )' → logprob: -7.882462978363037
    5. '    
' → logprob: -8.007462501525879
    6. ' """' → logprob: -8.507462501525879
    7. '  
' → logprob: -8.757462501525879
    8. '):' → logprob: -8.882462501525879
    9. ' 
' → logprob: -9.257462501525879
    10. '\n' → logprob: -9.257462501525879

Token 214: ' Chaque' (ID: 94758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006813169457018375
    2. ')' → logprob: -6.131813049316406
    3. '
' → logprob: -6.756813049316406
    4. '    
' → logprob: -6.881813049316406
    5. '):
' → logprob: -6.881813049316406
    6. '):' → logprob: -7.381813049316406
    7. ':' → logprob: -8.506813049316406
    8. '    ' → logprob: -9.506813049316406
    9. '\n' → logprob: -9.506813049316406
    10. ' 
' → logprob: -9.756813049316406

Token 215: ' caractère' (ID: 80509)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7444097399711609
    2. ' caractère' → logprob: -2.3694097995758057
    3. ' caract' → logprob: -2.3694097995758057
    4. ' char' → logprob: -2.7444097995758057
    5. ' byte' → logprob: -3.1194097995758057
    6. ' character' → logprob: -3.2444097995758057
    7. ' car' → logprob: -3.7444097995758057
    8. ' =' → logprob: -3.8694097995758057
    9. '=' → logprob: -4.119409561157227
    10. ' group' → logprob: -4.244409561157227

Token 216: ' encode' (ID: 31288)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.8473463654518127
    2. ' représente' → logprob: -1.847346305847168
    3. ' encode' → logprob: -2.222346305847168
    4. ' =' → logprob: -2.347346305847168
    5. ' enc' → logprob: -2.847346305847168
    6. '   ' → logprob: -3.972346305847168
    7. ' correspond' → logprob: -4.222346305847168
    8. ' déc' → logprob: -4.347346305847168
    9. '_' → logprob: -4.347346305847168
    10. ' de' → logprob: -4.972346305847168

Token 217: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05544950067996979
    2. '6' → logprob: -3.0554494857788086
    3. ' six' → logprob: -5.805449485778809
    4. ' une' → logprob: -6.930449485778809
    5. 's' → logprob: -7.055449485778809
    6. 'r' → logprob: -7.555449485778809
    7. ' un' → logprob: -8.055449485778809
    8. 'd' → logprob: -8.930449485778809
    9. '64' → logprob: -9.055449485778809
    10. '2' → logprob: -9.180449485778809

Token 218: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.012515772134065628
    2. ' ' → logprob: -4.387515544891357
    3. ' six' → logprob: -13.137516021728516
    4. '   ' → logprob: -14.012516021728516
    5. 'six' → logprob: -14.637516021728516
    6. '2' → logprob: -14.762516021728516
    7. '  ' → logprob: -15.137516021728516
    8. '64' → logprob: -15.387516021728516
    9. '_' → logprob: -15.512516021728516
    10. 'a' → logprob: -15.512516021728516

Token 219: ' bits' (ID: 18189)
  Prédit: ' bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.07078997790813446
    2. 'bits' → logprob: -2.6957900524139404
    3. 'b' → logprob: -8.32079029083252
    4. '_bits' → logprob: -8.32079029083252
    5. ' bit' → logprob: -8.44579029083252
    6. 'bit' → logprob: -9.57079029083252
    7. '<|end|>' → logprob: -10.57079029083252
    8. ' ' → logprob: -10.82079029083252
    9. '-bit' → logprob: -11.69579029083252
    10. '(bits' → logprob: -12.19579029083252

Token 220: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2668350338935852
    2. '.' → logprob: -1.6418349742889404
    3. ',' → logprob: -3.3918349742889404
    4. ')' → logprob: -6.0168352127075195
    5. ').' → logprob: -7.3918352127075195
    6. ':' → logprob: -7.6418352127075195
    7. 'def' → logprob: -7.7668352127075195
    8. '    
' → logprob: -8.01683521270752
    9. ' .' → logprob: -8.01683521270752
    10. '<|end|>' → logprob: -8.14183521270752

Token 221: ' les' (ID: 1341)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 222: ' plus' (ID: 2932)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.18503816425800323
    2. ' bits' → logprob: -1.8100382089614868
    3. 'val' → logprob: -6.310038089752197
    4. 'bit' → logprob: -6.560038089752197
    5. ' val' → logprob: -6.935038089752197
    6. 'b' → logprob: -8.435038566589355
    7. ' bit' → logprob: -8.685038566589355
    8. '6' → logprob: -9.310038566589355
    9. 'remaining' → logprob: -9.435038566589355
    10. ' ' → logprob: -9.810038566589355

Token 223: ' signific' (ID: 5404)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.027732839807868004
    2. ' signific' → logprob: -4.027732849121094
    3. ' significant' → logprob: -4.902732849121094
    4. 'sig' → logprob: -7.527732849121094
    5. 's' → logprob: -7.777732849121094
    6. '_sign' → logprob: -8.152732849121094
    7. 'import' → logprob: -8.527732849121094
    8. '```' → logprob: -8.527732849121094
    9. ' à' → logprob: -8.652732849121094
    10. 'à' → logprob: -10.027732849121094

Token 224: 'atifs' (ID: 66205)
  Prédit: 'ants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.20014435052871704
    2. 'ats' → logprob: -1.9501442909240723
    3. 'f' → logprob: -4.575144290924072
    4. 't' → logprob: -4.700144290924072
    5. 'ant' → logprob: -4.825144290924072
    6. 'nts' → logprob: -5.450144290924072
    7. 'atifs' → logprob: -6.200144290924072
    8. 'ts' → logprob: -6.450144290924072
    9. 'ents' → logprob: -7.325144290924072
    10. 'at' → logprob: -7.325144290924072

Token 225: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 226: ' gauche' (ID: 58367)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.4625081717967987
    2. ' gauche' → logprob: -1.087508201599121
    3. 'dro' → logprob: -3.587508201599121
    4. 'l' → logprob: -5.587508201599121
    5. ' droite' → logprob: -6.837508201599121
    6. 'la' → logprob: -8.212508201599121
    7. 'index' → logprob: -8.962508201599121
    8. ' l' → logprob: -9.712508201599121
    9. 'gau' → logprob: -9.962508201599121
    10. '0' → logprob: -10.462508201599121

Token 227: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5942961573600769
    2. '.' → logprob: -1.3442962169647217
    3. ')' → logprob: -2.5942962169647217
    4. ',' → logprob: -2.7192962169647217
    5. 'def' → logprob: -3.8442962169647217
    6. '):' → logprob: -4.219295978546143
    7. '):
' → logprob: -6.344295978546143
    8. ').' → logprob: -6.469295978546143
    9. ':' → logprob: -6.719295978546143
    10. ' ' → logprob: -7.094295978546143

Token 228: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013768990756943822
    2. ')' → logprob: -7.626377105712891
    3. '):
' → logprob: -8.37637710571289
    4. '    
' → logprob: -8.50137710571289
    5. 'def' → logprob: -9.37637710571289
    6. '):' → logprob: -9.50137710571289
    7. '
' → logprob: -9.87637710571289
    8. 'decoded' → logprob: -10.00137710571289
    9. ' decoded' → logprob: -10.00137710571289
    10. '"' → logprob: -11.25137710571289

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003595376620069146
    2. ')' → logprob: -9.125359535217285
    3. ' """' → logprob: -9.500359535217285
    4. '"""' → logprob: -10.250359535217285
    5. ' """
' → logprob: -10.375359535217285
    6. ' decoded' → logprob: -10.375359535217285
    7. '    ' → logprob: -10.875359535217285
    8. '    
' → logprob: -11.000359535217285
    9. '
' → logprob: -11.375359535217285
    10. ' encoded' → logprob: -11.750359535217285

Token 230: ' :' (ID: 712)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.2724785804748535
    2. 'decoded' → logprob: -2.3974785804748535
    3. 'bit' → logprob: -2.8974785804748535
    4. '   ' → logprob: -3.2724785804748535
    5. 'result' → logprob: -3.3974785804748535
    6. ' bits' → logprob: -4.2724785804748535
    7. ' bit' → logprob: -5.5224785804748535
    8. ' decoded' → logprob: -6.6474785804748535
    9. ' result' → logprob: -7.3974785804748535
    10. 'b' → logprob: -8.397478103637695

Token 231: 'param' (ID: 1355)
  Prédit: 'param'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'param' → logprob: -4.842555426876061e-06
    2. ' param' → logprob: -12.375004768371582
    3. ':param' → logprob: -15.500004768371582
    4. '   ' → logprob: -16.3750057220459
    5. 'params' → logprob: -16.5000057220459
    6. 'return' → logprob: -17.0000057220459
    7. 'type' → logprob: -17.3750057220459
    8. '	param' → logprob: -18.2500057220459
    9. 'par' → logprob: -18.5000057220459
    10. 'arg' → logprob: -18.5000057220459

Token 232: ' encoded' (ID: 41096)
  Prédit: ' encoded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' encoded' → logprob: -0.4741360545158386
    2. 'encoded' → logprob: -0.9741360545158386
    3. 'self' → logprob: -10.724136352539062
    4. '(encoded' → logprob: -10.849136352539062
    5. ' self' → logprob: -11.474136352539062
    6. '   ' → logprob: -13.474136352539062
    7. '_encoded' → logprob: -13.599136352539062
    8. 'str' → logprob: -13.849136352539062
    9. ' str' → logprob: -14.349136352539062
    10. ' ' → logprob: -14.349136352539062

Token 233: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0013944036327302456
    2. '_l' → logprob: -6.751394271850586
    3. '_' → logprob: -8.501394271850586
    4. '_string' → logprob: -11.126394271850586
    5. '_str' → logprob: -13.251394271850586
    6. '_li' → logprob: -13.626394271850586
    7. '_lines' → logprob: -14.001394271850586
    8. '_char' → logprob: -14.501394271850586
    9. '_lin' → logprob: -14.876394271850586
    10. '_code' → logprob: -15.001394271850586

Token 234: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.429035484790802
    2. '):' → logprob: -1.1790354251861572
    3. ':str' → logprob: -3.6790354251861572
    4. ',' → logprob: -4.179035663604736
    5. '):
' → logprob: -7.929035663604736
    6. ' :' → logprob: -8.304035186767578
    7. ' ):' → logprob: -10.304035186767578
    8. ')' → logprob: -10.304035186767578
    9. '}:' → logprob: -11.054035186767578
    10. ':string' → logprob: -11.929035186767578

Token 235: ' chaîne' (ID: 89288)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.029944168403744698
    2. 'str' → logprob: -3.5299441814422607
    3. ' encoded' → logprob: -8.77994441986084
    4. 'encoded' → logprob: -10.27994441986084
    5. ' decoded' → logprob: -13.77994441986084
    6. ' ' → logprob: -13.90494441986084
    7. ' s' → logprob: -14.02994441986084
    8. 's' → logprob: -14.52994441986084
    9. 'string' → logprob: -14.65494441986084
    10. ':str' → logprob: -14.65494441986084

Token 236: ' enc' (ID: 3219)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 237: 'od' (ID: 368)
  Prédit: 'od'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.00020020268857479095
    2. 'oded' → logprob: -8.625200271606445
    3. 'odable' → logprob: -12.000200271606445
    4. '
' → logprob: -12.625200271606445
    5. '   ' → logprob: -13.125200271606445
    6. '_' → logprob: -13.375200271606445
    7. ' =' → logprob: -13.875200271606445
    8. '"""
' → logprob: -14.125200271606445
    9. '>' → logprob: -14.375200271606445
    10. '```' → logprob: -14.375200271606445

Token 238: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0021091015078127384
    2. 'od' → logprob: -7.127109050750732
    3. 'rée' → logprob: -7.127109050750732
    4. 'é' → logprob: -8.50210952758789
    5. 'lée' → logprob: -8.62710952758789
    6. 'urée' → logprob: -10.25210952758789
    7. '   ' → logprob: -10.50210952758789
    8. 'ed' → logprob: -10.87710952758789
    9. 'd' → logprob: -11.37710952758789
    10. 'e' → logprob: -12.12710952758789

Token 239: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7326262593269348
    2. ',' → logprob: -1.85762619972229
    3. ':' → logprob: -1.85762619972229
    4. ')' → logprob: -2.10762619972229
    5. '):' → logprob: -3.48262619972229
    6. ' :' → logprob: -3.98262619972229
    7. '):
' → logprob: -4.732626438140869
    8. '<|end|>' → logprob: -5.107626438140869
    9. ' =' → logprob: -5.482626438140869
    10. '  ' → logprob: -6.107626438140869

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05499466508626938
    2. ')' → logprob: -3.304994583129883
    3. '):' → logprob: -4.304994583129883
    4. ' )' → logprob: -7.429994583129883
    5. ' ):' → logprob: -7.429994583129883
    6. ',' → logprob: -7.804994583129883
    7. '):
' → logprob: -7.804994583129883
    8. ' :' → logprob: -8.179994583129883
    9. '    ' → logprob: -8.304994583129883
    10. 'def' → logprob: -8.804994583129883

Token 241: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08096593618392944
    2. ')' → logprob: -3.205965995788574
    3. ' :' → logprob: -3.455965995788574
    4. ':' (adapté à ' :') → logprob: -5.830965995788574
    5. ':param' → logprob: -6.955965995788574
    6. 'def' → logprob: -7.955965995788574
    7. ' )' → logprob: -8.080965995788574
    8. '    ' → logprob: -8.455965995788574
    9. '):' → logprob: -8.455965995788574
    10. '    
' → logprob: -8.705965995788574

Token 242: 'param' (ID: 1355)
  Prédit: 'param'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.008785098791122437
    2. 'int' → logprob: -4.758785247802734
    3. 'width' → logprob: -8.883785247802734
    4. 'type' → logprob: -11.008785247802734
    5. ' param' → logprob: -12.133785247802734
    6. '   ' → logprob: -12.508785247802734
    7. ':param' → logprob: -12.758785247802734
    8. 'return' → logprob: -13.883785247802734
    9. 'length' → logprob: -14.258785247802734
    10. ' int' → logprob: -14.258785247802734

Token 243: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.7685535550117493
    2. ' width' → logprob: -1.6435534954071045
    3. 'decoded' → logprob: -2.3935534954071045
    4. 'output' → logprob: -2.8935534954071045
    5. ' output' → logprob: -3.0185534954071045
    6. ' decoded' → logprob: -3.7685534954071045
    7. 'bit' → logprob: -3.8935534954071045
    8. 'length' → logprob: -4.393553733825684
    9. 'bits' → logprob: -4.518553733825684
    10. ' length' → logprob: -4.518553733825684

Token 244: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08923836052417755
    2. ':' → logprob: -2.464238405227661
    3. ' ):' → logprob: -9.339238166809082
    4. ')' → logprob: -9.339238166809082
    5. ' :' → logprob: -9.964238166809082
    6. '):
' → logprob: -10.214238166809082
    7. ',' → logprob: -10.964238166809082
    8. ':int' → logprob: -11.339238166809082
    9. ' ' → logprob: -13.089238166809082
    10. '>:' → logprob: -13.339238166809082

Token 245: ' largeur' (ID: 180807)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.026377402245998383
    2. 'int' → logprob: -3.6513774394989014
    3. ':int' → logprob: -10.65137767791748
    4. '[int' → logprob: -11.02637767791748
    5. '=int' → logprob: -11.15137767791748
    6. '(int' → logprob: -12.15137767791748
    7. '<int' → logprob: -12.52637767791748
    8. ' la' → logprob: -12.65137767791748
    9. ')' → logprob: -12.77637767791748
    10. ' le' → logprob: -13.27637767791748

Token 246: ' effective' (ID: 8488)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19647175073623657
    2. '   ' → logprob: -2.321471691131592
    3. ':' → logprob: -2.821471691131592
    4. '):
' → logprob: -4.696471691131592
    5. '=' → logprob: -5.821471691131592
    6. ')' → logprob: -5.821471691131592
    7. ' :' → logprob: -6.446471691131592
    8. ' de' → logprob: -6.571471691131592
    9. ',' → logprob: -7.071471691131592
    10. ' ):' → logprob: -7.196471691131592

Token 247: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.490787535905838
    2. '   ' → logprob: -1.2407875061035156
    3. ' de' → logprob: -2.9907875061035156
    4. ')' → logprob: -3.4907875061035156
    5. ' ):' → logprob: -5.115787506103516
    6. '):
' → logprob: -5.240787506103516
    7. 'de' → logprob: -5.990787506103516
    8. ':' → logprob: -6.865787506103516
    9. ',' → logprob: -7.615787506103516
    10. ' )' → logprob: -7.615787506103516

Token 248: 'nombre' (ID: 28576)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2571268379688263
    2. ' int' → logprob: -2.382126808166504
    3. ' )' → logprob: -2.507126808166504
    4. 'int' → logprob: -3.007126808166504
    5. ' nombre' → logprob: -7.632126808166504
    6. '):' → logprob: -8.007126808166504
    7. ' la' → logprob: -8.007126808166504
    8. ':int' → logprob: -8.132126808166504
    9. '):
' → logprob: -8.382126808166504
    10. '   ' → logprob: -8.507126808166504

Token 249: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7021633982658386
    2. ')' → logprob: -1.7021634578704834
    3. '_' → logprob: -1.9521634578704834
    4. ' de' → logprob: -2.2021634578704834
    5. '_de' → logprob: -3.5771634578704834
    6. '_des' → logprob: -4.202163219451904
    7. ' =' → logprob: -5.202163219451904
    8. '_bits' → logprob: -5.327163219451904
    9. ' )' → logprob: -5.577163219451904
    10. ' des' → logprob: -6.327163219451904

Token 250: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.532914400100708
    2. ' bits' → logprob: -1.657914400100708
    3. 'pixels' → logprob: -1.657914400100708
    4. ' pixels' → logprob: -3.532914400100708
    5. ')' → logprob: -6.782914161682129
    6. 'b' → logprob: -7.657914161682129
    7. 'points' → logprob: -7.782914161682129
    8. 'cases' → logprob: -8.532914161682129
    9. 'bit' → logprob: -9.657914161682129
    10. ' ' → logprob: -9.657914161682129

Token 251: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003715880447998643
    2. '   ' → logprob: -6.878715991973877
    3. ' )' → logprob: -6.878715991973877
    4. '):' → logprob: -7.503715991973877
    5. ' à' → logprob: -7.628715991973877
    6. '):
' → logprob: -7.878715991973877
    7. ')
' → logprob: -9.003715515136719
    8. 'à' → logprob: -10.378715515136719
    9. ' dans' → logprob: -11.378715515136719
    10. ' ' → logprob: -11.753715515136719

Token 252: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41708213090896606
    2. '   ' → logprob: -1.4170820713043213
    3. '):' → logprob: -2.7920820713043213
    4. '):
' → logprob: -3.2920820713043213
    5. '):
' → logprob: -10.417081832885742
    6. ' )' → logprob: -10.667081832885742
    7. '"""' → logprob: -11.292081832885742
    8. 'def' → logprob: -11.417081832885742
    9. '    
' → logprob: -11.417081832885742
    10. '
' → logprob: -11.542081832885742

Token 253: ' :' (ID: 712)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35446545481681824
    2. '   ' → logprob: -1.2294654846191406
    3. '):
' → logprob: -5.604465484619141
    4. ')
' → logprob: -7.479465484619141
    5. '"""' → logprob: -7.479465484619141
    6. ' )' → logprob: -7.979465484619141
    7. '"""
' → logprob: -7.979465484619141
    8. '):' → logprob: -8.10446548461914
    9. ' """
' → logprob: -9.85446548461914
    10. '    ' → logprob: -10.60446548461914

Token 254: 'return' (ID: 1034)
  Prédit: 'return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07232044637203217
    2. '"""' → logprob: -3.1973204612731934
    3. ')' → logprob: -4.572320461273193
    4. '"""
' → logprob: -4.947320461273193
    5. ':return' → logprob: -5.447320461273193
    6. 'returns' → logprob: -5.822320461273193
    7. '")' → logprob: -6.447320461273193
    8. '   ' → logprob: -7.072320461273193
    9. '"' → logprob: -7.572320461273193
    10. '""' → logprob: -7.947320461273193

Token 255: ':' (ID: 25)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.30518269538879395
    2. ' []' → logprob: -1.680182695388794
    3. ':' → logprob: -3.680182695388794
    4. ' ' → logprob: -3.805182695388794
    5. ' decoded' → logprob: -4.180182456970215
    6. '[' → logprob: -5.430182456970215
    7. ' :' → logprob: -5.930182456970215
    8. '[]' → logprob: -6.180182456970215
    9. 'decoded' → logprob: -7.055182456970215
    10. '   ' → logprob: -7.430182456970215

Token 256: ' liste' (ID: 31719)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.2390889674425125
    2. ' list' → logprob: -2.364089012145996
    3. 'List' → logprob: -2.989089012145996
    4. ' [' → logprob: -3.114089012145996
    5. '[List' → logprob: -4.239089012145996
    6. '[' → logprob: -5.489089012145996
    7. 'list' → logprob: -5.614089012145996
    8. ' bit' → logprob: -6.739089012145996
    9. ' bits' → logprob: -8.989089012145996
    10. '   ' → logprob: -9.364089012145996

Token 257: ' de' (ID: 334)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.6790554523468018
    2. '[' → logprob: -1.8040554523468018
    3. ' des' → logprob: -1.9290554523468018
    4. ' de' → logprob: -2.0540554523468018
    5. ' of' → logprob: -3.3040554523468018
    6. ' [' → logprob: -4.304055213928223
    7. '[
' → logprob: -6.929055213928223
    8. ' =' → logprob: -7.054055213928223
    9. ' [
' → logprob: -7.679055213928223
    10. ' d' → logprob: -7.804055213928223

Token 258: ' bits' (ID: 18189)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0031199604272842407
    2. 'ints' → logprob: -6.253119945526123
    3. ' int' → logprob: -6.753119945526123
    4. '[int' → logprob: -11.753120422363281
    5. 'bool' → logprob: -11.878120422363281
    6. '0' → logprob: -12.128120422363281
    7. 'inte' → logprob: -13.878120422363281
    8. 'ent' → logprob: -14.003120422363281
    9. 'bits' → logprob: -14.128120422363281
    10. ' ints' → logprob: -15.003120422363281

Token 259: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1461830586194992
    2. ' =' → logprob: -2.3961830139160156
    3. '=' → logprob: -4.146183013916016
    4. '[' → logprob: -4.521183013916016
    5. ')' → logprob: -5.896183013916016
    6. 'def' → logprob: -6.146183013916016
    7. '[]' → logprob: -6.271183013916016
    8. ':' → logprob: -6.521183013916016
    9. ' decoded' → logprob: -6.771183013916016
    10. 'decoded' → logprob: -6.771183013916016

Token 260: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07055050134658813
    2. '[int' → logprob: -2.8205504417419434
    3. ' int' → logprob: -4.820550441741943
    4. ')' → logprob: -7.695550441741943
    5. 'ints' → logprob: -11.445550918579102
    6. 'bool' → logprob: -11.695550918579102
    7. '0' → logprob: -12.945550918579102
    8. '(int' → logprob: -13.695550918579102
    9. '<int' → logprob: -14.195550918579102
    10. '[' → logprob: -14.195550918579102

Token 261: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010012234561145306
    2. '])' → logprob: -4.885012149810791
    3. ' )' → logprob: -6.760012149810791
    4. '[int' → logprob: -7.010012149810791
    5. ']' → logprob: -8.51001262664795
    6. ')]' → logprob: -9.76001262664795
    7. ')
' → logprob: -11.13501262664795
    8. ')])' → logprob: -11.26001262664795
    9. '[' → logprob: -11.63501262664795
    10. ' ])' → logprob: -11.88501262664795

Token 262: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03991629555821419
    2. '])' → logprob: -3.7899162769317627
    3. ')
' → logprob: -4.164916515350342
    4. ']' → logprob: -8.289916038513184
    5. ')]' → logprob: -8.539916038513184
    6. '[int' → logprob: -8.664916038513184
    7. ')])' → logprob: -8.664916038513184
    8. ' )' → logprob: -9.414916038513184
    9. '])
' → logprob: -9.914916038513184
    10. '   ' → logprob: -11.164916038513184

Token 263: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.5135814547538757
    2. ',' → logprob: -1.1385815143585205
    3. 'ou' → logprob: -3.0135815143585205
    4. ' or' → logprob: -4.388581275939941
    5. ')' → logprob: -4.888581275939941
    6. '|' → logprob: -5.388581275939941
    7. 'or' → logprob: -5.763581275939941
    8. '/' → logprob: -6.138581275939941
    9. ' ,' → logprob: -7.388581275939941
    10. ']' → logprob: -7.638581275939941

Token 264: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12693262100219727
    2. ' ' → logprob: -2.1269326210021973
    3. '   ' → logprob: -12.751932144165039
    4. ' ' → logprob: -14.001932144165039
    5. ')' → logprob: -14.876932144165039
    6. '  ' → logprob: -15.751932144165039
    7. ' )' → logprob: -15.876932144165039
    8. ',' → logprob: -16.37693214416504
    9. '```' → logprob: -17.00193214416504
    10. ' ,' → logprob: -18.87693214416504

Token 265: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.375036239624023
    4. ')' → logprob: -18.125036239624023
    5. '0' → logprob: -19.875036239624023
    6. '```' → logprob: -20.000036239624023
    7. ',' → logprob: -20.250036239624023
    8. '  ' → logprob: -20.375036239624023
    9. ' ' → logprob: -20.375036239624023
    10. '=' → logprob: -21.000036239624023

Token 266: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006540931295603514
    2. '])' → logprob: -5.631540775299072
    3. ']' → logprob: -6.381540775299072
    4. ')
' → logprob: -6.881540775299072
    5. ')]' → logprob: -9.25654125213623
    6. ' )' → logprob: -9.88154125213623
    7. '   ' → logprob: -10.88154125213623
    8. '])
' → logprob: -11.00654125213623
    9. ')])' → logprob: -11.75654125213623
    10. '）' → logprob: -12.13154125213623

Token 267: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3432689309120178
    2. ':' → logprob: -1.343268871307373
    3. ':
' → logprob: -4.843268871307373
    4. '):
' → logprob: -5.593268871307373
    5. ']' → logprob: -5.718268871307373
    6. '):' → logprob: -5.718268871307373
    7. ')' → logprob: -6.218268871307373
    8. '=' → logprob: -6.468268871307373
    9. '[]' → logprob: -6.468268871307373
    10. ',' → logprob: -6.968268871307373

Token 268: ' longueur' (ID: 104613)
  Prédit: ' width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' width' → logprob: -1.2107516527175903
    2. ' length' → logprob: -1.4607516527175903
    3. 'length' → logprob: -1.7107516527175903
    4. 'width' → logprob: -1.8357516527175903
    5. '[' → logprob: -2.460751533508301
    6. '[length' → logprob: -3.460751533508301
    7. ' [' → logprob: -4.460751533508301
    8. ' longueur' → logprob: -7.960751533508301
    9. ' size' → logprob: -8.0857515335083
    10. ' largeur' → logprob: -8.3357515335083

Token 269: ' width' (ID: 4345)
  Prédit: ' width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' width' → logprob: -0.31724482774734497
    2. 'width' → logprob: -1.3172447681427002
    3. '(width' → logprob: -5.567245006561279
    4. ',width' → logprob: -9.067244529724121
    5. ',' → logprob: -11.567244529724121
    6. ' =' → logprob: -11.817244529724121
    7. '	width' → logprob: -12.442244529724121
    8. '=' → logprob: -12.567244529724121
    9. ' ' → logprob: -12.567244529724121
    10. '_width' → logprob: -12.817244529724121

Token 270: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5614327192306519
    2. '   ' → logprob: -1.4364327192306519
    3. ':
' → logprob: -1.8114327192306519
    4. '):
' → logprob: -4.061432838439941
    5. '):' → logprob: -4.936432838439941
    6. ')' → logprob: -7.311432838439941
    7. '
' → logprob: -7.561432838439941
    8. ' :' → logprob: -7.561432838439941
    9. ' :
' → logprob: -8.061432838439941
    10. '{' → logprob: -8.186432838439941

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.79788738489151
    2. '):' → logprob: -1.2978873252868652
    3. ')' → logprob: -1.9228873252868652
    4. '):
' → logprob: -2.0478873252868652
    5. 'def' → logprob: -7.297887325286865
    6. ':' → logprob: -7.547887325286865
    7. '"""' → logprob: -10.172887802124023
    8. '
' → logprob: -10.547887802124023
    9. '    
' → logprob: -10.672887802124023
    10. '```' → logprob: -10.922887802124023

Token 272: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10307734459638596
    2. '):
' → logprob: -2.8530774116516113
    3. ')' → logprob: -3.4780774116516113
    4. '):' → logprob: -5.603077411651611
    5. 'def' → logprob: -6.603077411651611
    6. ':
' → logprob: -6.603077411651611
    7. ':' → logprob: -7.103077411651611
    8. '"' → logprob: -7.228077411651611
    9. '"""
' (adapté à ' """
') → logprob: -8.228076934814453
    10. '```' → logprob: -8.228076934814453

Token 273: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006722823018208146
    2. 'bits' → logprob: -8.375672340393066
    3. ' bits' → logprob: -8.375672340393066
    4. 'decoded' → logprob: -8.875672340393066
    5. ' decoded' → logprob: -9.875672340393066
    6. ' bit' → logprob: -11.750672340393066
    7. 'result' → logprob: -12.125672340393066
    8. 'bit' → logprob: -12.625672340393066
    9. ' result' → logprob: -13.750672340393066
    10. '    
' → logprob: -14.125672340393066

Token 274: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' (adapté à ' bits') → logprob: -0.01073309313505888
    2. 'bit' → logprob: -4.760733127593994
    3. 'result' → logprob: -6.760733127593994
    4. 'decoded' → logprob: -7.510733127593994
    5. ' bits' → logprob: -7.885733127593994
    6. 'res' → logprob: -10.635732650756836
    7. ' bit' → logprob: -12.260732650756836
    8. '   ' → logprob: -12.510732650756836
    9. ' result' → logprob: -15.010732650756836
    10. ' decoded' → logprob: -15.135732650756836

Token 275: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01824464648962021
    2. ' =' → logprob: -4.018244743347168
    3. '=[]' → logprob: -9.268244743347168
    4. '=[]
' → logprob: -16.01824378967285
    5. '   ' → logprob: -16.51824378967285
    6. '=[]
' → logprob: -16.76824378967285
    7. ' ' → logprob: -17.14324378967285
    8. '＝' → logprob: -17.14324378967285
    9. '[]' → logprob: -17.39324378967285
    10. '=[' → logprob: -17.89324378967285

Token 276: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03804493322968483
    2. ' []' → logprob: -3.2880449295043945
    3. '[]
' → logprob: -12.788044929504395
    4. '[' → logprob: -14.538044929504395
    5. ' []
' → logprob: -16.03804588317871
    6. '[]"' → logprob: -16.78804588317871
    7. '[]

' → logprob: -16.91304588317871
    8. ' [' → logprob: -17.91304588317871
    9. ' ' → logprob: -18.16304588317871
    10. '[]}' → logprob: -18.66304588317871

Token 277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03505244106054306
    2. ' for' → logprob: -3.535052537918091
    3. 'for' → logprob: -5.285052299499512
    4. '    
' → logprob: -9.160052299499512
    5. ' ' → logprob: -10.160052299499512
    6. '    ' → logprob: -10.285052299499512
    7. '  ' → logprob: -11.035052299499512
    8. ' =' → logprob: -11.660052299499512
    9. ' bit' → logprob: -12.160052299499512
    10. '=' → logprob: -12.410052299499512

Token 278: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00011009939044015482
    2. ' for' → logprob: -9.500109672546387
    3. '   ' → logprob: -10.625109672546387
    4. 'bit' → logprob: -11.500109672546387
    5. 'bits' → logprob: -14.375109672546387
    6. 'total' → logprob: -16.250110626220703
    7. 'current' → logprob: -16.875110626220703
    8. '	for' → logprob: -18.250110626220703
    9. '    
' → logprob: -18.875110626220703
    10. ' ' → logprob: -19.125110626220703

Token 279: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3904886841773987
    2. 'char' → logprob: -1.140488624572754
    3. 'ch' → logprob: -5.640488624572754
    4. ' c' → logprob: -10.390488624572754
    5. ' char' → logprob: -11.140488624572754
    6. 'car' → logprob: -11.140488624572754
    7. ' ch' → logprob: -15.515488624572754
    8. 'character' → logprob: -17.39048957824707
    9. '_char' → logprob: -17.51548957824707
    10. 'byte' → logprob: -18.26548957824707

Token 280: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01822228543460369
    2. 'in' → logprob: -4.018222332000732
    3. ' ' → logprob: -9.768221855163574
    4. '   ' → logprob: -12.143221855163574
    5. 'n' → logprob: -13.268221855163574
    6. '    ' → logprob: -13.518221855163574
    7. '  ' → logprob: -13.518221855163574
    8. '_in' → logprob: -13.518221855163574
    9. 'import' → logprob: -14.518221855163574
    10. '	in' → logprob: -14.643221855163574

Token 281: ' encoded' (ID: 41096)
  Prédit: 'encoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'encoded' → logprob: -0.0011732018319889903
    2. ' encoded' → logprob: -6.75117301940918
    3. '(encoded' → logprob: -12.75117301940918
    4. 'decoded' → logprob: -17.50117301940918
    5. 'encode' → logprob: -17.75117301940918
    6. 'coded' → logprob: -18.50117301940918
    7. '_encoded' → logprob: -18.50117301940918
    8. 'encrypted' → logprob: -20.37617301940918
    9. '   ' → logprob: -20.62617301940918
    10. ' ' → logprob: -21.00117301940918

Token 282: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -3.607391408877447e-05
    2. 'line' → logprob: -10.250036239624023
    3. '_l' → logprob: -15.125036239624023
    4. 'Line' → logprob: -16.375036239624023
    5. 'ligne' → logprob: -16.625036239624023
    6. '_' → logprob: -16.750036239624023
    7. '_LINE' → logprob: -17.625036239624023
    8. ' line' → logprob: -18.125036239624023
    9. '_table' → logprob: -19.000036239624023
    10. ')' → logprob: -19.000036239624023

Token 283: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0038449708372354507
    2. ' in' → logprob: -6.378844738006592
    3. '):' → logprob: -6.628844738006592
    4. ' :' → logprob: -7.628844738006592
    5. ':
' → logprob: -8.25384521484375
    6. ')' → logprob: -10.12884521484375
    7. 'in' → logprob: -11.25384521484375
    8. '):
' → logprob: -12.00384521484375
    9. '   ' → logprob: -12.37884521484375
    10. ',' → logprob: -13.37884521484375

Token 284: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033992234617471695
    2. ' val' → logprob: -4.533992290496826
    3. '   ' → logprob: -4.658992290496826
    4. 'val' → logprob: -5.283992290496826
    5. 'value' → logprob: -5.658992290496826
    6. ' value' → logprob: -6.408992290496826
    7. '6' → logprob: -7.033992290496826
    8. 'v' → logprob: -7.033992290496826
    9. 'n' → logprob: -7.783992290496826
    10. '_val' → logprob: -8.033991813659668

Token 285: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.049715474247932434
    2. 'value' → logprob: -3.049715518951416
    3. 'v' → logprob: -6.799715518951416
    4. ' val' → logprob: -11.799715042114258
    5. 'code' → logprob: -13.299715042114258
    6. 'bits' → logprob: -13.549715042114258
    7. 'b' → logprob: -13.924715042114258
    8. 'num' → logprob: -14.549715042114258
    9. '_val' → logprob: -14.549715042114258
    10. 'six' → logprob: -14.674715042114258

Token 286: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196768581867218
    2. '=' → logprob: -2.811967611312866
    3. '=int' → logprob: -16.686967849731445
    4. ' ' → logprob: -17.561967849731445
    5. '   ' → logprob: -17.686967849731445
    6. ')' → logprob: -19.186967849731445
    7. '＝' → logprob: -19.311967849731445
    8. ' ' → logprob: -20.061967849731445
    9. 'ue' → logprob: -20.561967849731445
    10. '	' → logprob: -20.686967849731445

Token 287: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0031777136027812958
    2. ' base' → logprob: -5.753177642822266
    3. '	base' → logprob: -18.753177642822266
    4. '(base' → logprob: -19.128177642822266
    5. '   ' → logprob: -19.128177642822266
    6. 'Base' → logprob: -20.378177642822266
    7. ' ' → logprob: -21.378177642822266
    8. 'bases' → logprob: -21.503177642822266
    9. '_base' → logprob: -22.253177642822266
    10. 'baseline' → logprob: -22.628177642822266

Token 288: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -7.896309739408025e-07
    2. '54' → logprob: -14.250000953674316
    3. ' ' → logprob: -16.625
    4. '6' → logprob: -18.375
    5. 'base' → logprob: -18.5
    6. '4' → logprob: -20.625
    7. '65' → logprob: -22.625
    8. '56' → logprob: -23.0
    9. '```' → logprob: -23.0
    10. '_' → logprob: -23.125

Token 289: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -1.9361264946837764e-07
    2. '_TABLE' → logprob: -17.0
    3. '_' → logprob: -17.375
    4. 'table' → logprob: -17.625
    5. 'Table' → logprob: -18.375
    6. '_tables' → logprob: -19.75
    7. '_Table' → logprob: -20.125
    8. '[' → logprob: -20.25
    9. '_tab' → logprob: -20.5
    10. '[_' → logprob: -21.125

Token 290: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.9361264946837764e-07
    2. '.get' → logprob: -16.25
    3. '[' → logprob: -17.625
    4. 'c' → logprob: -18.25
    5. '[C' → logprob: -19.375
    6. '[get' → logprob: -20.125
    7. ' [' → logprob: -20.625
    8. '[
' → logprob: -21.875
    9. 'get' → logprob: -22.125
    10. ' c' → logprob: -23.125

Token 291: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6932438611984253
    2. ']
' → logprob: -0.6932438611984253
    3. ']
' → logprob: -9.443243980407715
    4. ' ]
' → logprob: -11.943243980407715
    5. ']

' → logprob: -12.068243980407715
    6. ' ]' → logprob: -12.943243980407715
    7. '   ' → logprob: -13.443243980407715
    8. ']<<' → logprob: -14.443243980407715
    9. '       ' → logprob: -15.193243980407715
    10. '>>' → logprob: -16.1932430267334

Token 292: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01691732555627823
    2. ' for' → logprob: -4.5169172286987305
    3. '   ' → logprob: -5.7669172286987305
    4. 'for' → logprob: -6.1419172286987305
    5. '
' → logprob: -7.7669172286987305
    6. '        
' → logprob: -9.64191722869873
    7. '      ' → logprob: -11.14191722869873
    8. '>>' → logprob: -11.51691722869873
    9. '    
' → logprob: -11.89191722869873
    10. ' <<=' → logprob: -12.01691722869873

Token 293: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12713830173015594
    2. ' for' → logprob: -2.127138376235962
    3. 'bits' → logprob: -8.502138137817383
    4. ' bits' → logprob: -12.127138137817383
    5. '   ' → logprob: -13.752138137817383
    6. 'bin' → logprob: -14.752138137817383
    7. 'b' → logprob: -16.252138137817383
    8. '	for' → logprob: -16.627138137817383
    9. 'bit' → logprob: -16.877138137817383
    10. ' bin' → logprob: -18.127138137817383

Token 294: ' Extra' (ID: 31621)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008740320801734924
    2. ' for' → logprob: -4.758740425109863
    3. 'bits' → logprob: -9.008740425109863
    4. '   ' → logprob: -13.008740425109863
    5. 'bin' → logprob: -14.008740425109863
    6. 'b' → logprob: -15.758740425109863
    7. ' bits' → logprob: -15.883740425109863
    8. 'bit' → logprob: -15.883740425109863
    9. '	for' → logprob: -17.508739471435547
    10. ' ' → logprob: -18.133739471435547

Token 295: 'ire' (ID: 594)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.606461226940155
    2. 'ire' → logprob: -0.981461226940155
    3. 'cts' → logprob: -3.9814612865448
    4. '_bits' → logprob: -4.356461048126221
    5. 'it' → logprob: -4.481461048126221
    6. 'bits' → logprob: -5.106461048126221
    7. ' for' → logprob: -5.356461048126221
    8. 'ctions' → logprob: -5.481461048126221
    9. 'its' → logprob: -5.606461048126221
    10. ' bits' → logprob: -6.106461048126221

Token 296: ' bits' (ID: 18189)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05529870092868805
    2. 'for' → logprob: -2.9302988052368164
    3. '       ' → logprob: -8.430298805236816
    4. 'bits' → logprob: -9.680298805236816
    5. '[' → logprob: -9.805298805236816
    6. ' bits' → logprob: -10.555298805236816
    7. '   ' → logprob: -10.930298805236816
    8. ' [' → logprob: -11.180298805236816
    9. ' (' → logprob: -11.930298805236816
    10. ' ' → logprob: -12.180298805236816

Token 297: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10473016649484634
    2. 'for' → logprob: -2.3547301292419434
    3. '   ' → logprob: -6.104730129241943
    4. '       ' → logprob: -6.229730129241943
    5. ' =' → logprob: -8.979730606079102
    6. ' <<=' → logprob: -9.604730606079102
    7. '[' → logprob: -10.229730606079102
    8. '=' → logprob: -10.979730606079102
    9. '	for' → logprob: -11.354730606079102
    10. ',' → logprob: -12.604730606079102

Token 298: ' poids' (ID: 56058)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00938733946532011
    2. '[' → logprob: -5.009387493133545
    3. 'val' → logprob: -6.884387493133545
    4. ' ' → logprob: -7.134387493133545
    5. '(' → logprob: -7.259387493133545
    6. ' (' → logprob: -9.759387016296387
    7. '[val' → logprob: -10.759387016296387
    8. ' [' → logprob: -10.884387016296387
    9. '[(' → logprob: -11.634387016296387
    10. '6' → logprob: -11.759387016296387

Token 299: ' fort' (ID: 8024)
  Prédit: 'fort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fort' → logprob: -0.12201961874961853
    2. ' fort' → logprob: -2.4970195293426514
    3. '   ' → logprob: -4.2470197677612305
    4. ' forts' → logprob: -5.1220197677612305
    5. '6' → logprob: -5.4970197677612305
    6. '    ' → logprob: -6.1220197677612305
    7. 'é' → logprob: -6.2470197677612305
    8. ' ' → logprob: -6.3720197677612305
    9. '  ' → logprob: -7.2470197677612305
    10. '       ' → logprob: -7.9970197677612305

Token 300: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0092124938964844
    2. ' for' → logprob: -1.6342124938964844
    3. 'for' → logprob: -1.7592124938964844
    4. '   ' → logprob: -2.6342124938964844
    5. '>>' → logprob: -3.3842124938964844
    6. ' >>' → logprob: -3.5092124938964844
    7. '6' → logprob: -3.6342124938964844
    8. ' (' → logprob: -3.8842124938964844
    9. ' ' → logprob: -4.009212493896484
    10. '    ' → logprob: -4.134212493896484

Token 301: ' faible' (ID: 75786)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.018824011087417603
    2. 'l' → logprob: -5.018824100494385
    3. 'la' → logprob: -5.268824100494385
    4. ' ' → logprob: -6.018824100494385
    5. 'c' → logprob: -6.643824100494385
    6. ' cinq' → logprob: -6.768824100494385
    7. ' la' → logprob: -7.393824100494385
    8. ' gauche' → logprob: -7.893824100494385
    9. ' droite' → logprob: -8.393823623657227
    10. '1' → logprob: -8.893823623657227

Token 302: ' dans' (ID: 2671)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6967610120773315
    2. 'for' → logprob: -0.6967610120773315
    3. '       ' → logprob: -6.321761131286621
    4. ' pour' → logprob: -6.821761131286621
    5. '   ' → logprob: -8.071761131286621
    6. 'pour' → logprob: -8.946761131286621
    7. 'shift' → logprob: -9.571761131286621
    8. ',' → logprob: -10.071761131286621
    9. ' ' → logprob: -10.196761131286621
    10. ' shift' → logprob: -10.696761131286621

Token 303: ' le' (ID: 505)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.21717403829097748
    2. 'range' → logprob: -1.9671740531921387
    3. ' reversed' → logprob: -3.4671740531921387
    4. '[' → logprob: -3.9671740531921387
    5. '   ' → logprob: -5.842174053192139
    6. 're' → logprob: -6.717174053192139
    7. ' [' → logprob: -7.967174053192139
    8. ' la' → logprob: -8.46717357635498
    9. '6' → logprob: -8.84217357635498
    10. ' reverse' → logprob: -9.34217357635498

Token 304: ' caractère' (ID: 80509)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8085806369781494
    2. 'for' → logprob: -0.9335806369781494
    3. ' range' → logprob: -2.9335806369781494
    4. ' for' → logprob: -3.0585806369781494
    5. '[' → logprob: -3.5585806369781494
    6. '   ' → logprob: -4.18358039855957
    7. 'val' → logprob: -5.30858039855957
    8. '6' → logprob: -5.43358039855957
    9. '       ' → logprob: -6.18358039855957
    10. ' [' → logprob: -7.05858039855957

Token 305: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28855469822883606
    2. '   ' → logprob: -1.7885546684265137
    3. 'for' → logprob: -2.5385546684265137
    4. '       ' → logprob: -5.413554668426514
    5. ',' → logprob: -12.038555145263672
    6. '	for' → logprob: -12.288555145263672
    7. '
' → logprob: -13.663555145263672
    8. '    ' → logprob: -13.788555145263672
    9. ' (' → logprob: -14.788555145263672
    10. '  ' → logprob: -14.788555145263672

Token 306: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03253694623708725
    2. 'for' → logprob: -3.9075369834899902
    3. '   ' → logprob: -4.65753698348999
    4. '       ' → logprob: -6.03253698348999
    5. '	for' → logprob: -11.782536506652832
    6. ',' → logprob: -12.157536506652832
    7. ' ' → logprob: -12.282536506652832
    8. '    ' → logprob: -12.407536506652832
    9. ' ' → logprob: -12.532536506652832
    10. ' pour' → logprob: -13.032536506652832

Token 307: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3868802487850189
    2. ' for' → logprob: -1.1368802785873413
    3. '   ' → logprob: -12.261879920959473
    4. 'bits' → logprob: -12.761879920959473
    5. '       ' → logprob: -13.636879920959473
    6. ' bits' → logprob: -14.886879920959473
    7. '	for' → logprob: -16.01188087463379
    8. ' ' → logprob: -17.76188087463379
    9. '    ' → logprob: -18.01188087463379
    10. '  ' → logprob: -19.76188087463379

Token 308: ' b' (ID: 287)
  Prédit: ' shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' shift' → logprob: -0.8098683953285217
    2. 'shift' → logprob: -1.059868335723877
    3. ' bit' → logprob: -2.559868335723877
    4. ' i' → logprob: -2.684868335723877
    5. 'i' → logprob: -3.059868335723877
    6. 'bit' → logprob: -4.434868335723877
    7. ' j' → logprob: -6.184868335723877
    8. 'j' → logprob: -6.684868335723877
    9. ' ' → logprob: -7.934868335723877
    10. '5' → logprob: -8.684868812561035

Token 309: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004677422810345888
    2. 'in' → logprob: -5.3796772956848145
    3. ' i' → logprob: -10.004677772521973
    4. 'i' → logprob: -11.879677772521973
    5. ' ' → logprob: -13.129677772521973
    6. 'n' → logprob: -13.504677772521973
    7. 's' → logprob: -15.004677772521973
    8. '6' → logprob: -15.379677772521973
    9. 'shift' → logprob: -15.629677772521973
    10. '_in' → logprob: -16.004676818847656

Token 310: ' reversed' (ID: 57184)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7984022498130798
    2. 'range' → logprob: -1.4234023094177246
    3. ' range' → logprob: -1.4234023094177246
    4. ' [' → logprob: -2.9234023094177246
    5. ' reversed' → logprob: -4.298402309417725
    6. 're' → logprob: -7.173402309417725
    7. ' ' → logprob: -10.673401832580566
    8. 'reverse' → logprob: -10.673401832580566
    9. '[::-' → logprob: -12.423401832580566
    10. '   ' → logprob: -12.798401832580566

Token 311: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.014167862012982368
    2. 'range' → logprob: -4.264167785644531
    3. ' range' → logprob: -12.764167785644531
    4. '(' → logprob: -13.639167785644531
    5. '	range' → logprob: -15.014167785644531
    6. '   ' → logprob: -18.63916778564453
    7. 'x' → logprob: -18.63916778564453
    8. '(x' → logprob: -19.88916778564453
    9. '_range' → logprob: -20.13916778564453
    10. 'rang' → logprob: -20.38916778564453

Token 312: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003357006062287837
    2. '6' → logprob: -8.000335693359375
    3. ' (' → logprob: -15.500335693359375
    4. '(
' → logprob: -18.500335693359375
    5. ' ' → logprob: -18.875335693359375
    6. '   ' → logprob: -20.250335693359375
    7. ')' → logprob: -20.625335693359375
    8. '（' → logprob: -21.500335693359375
    9. 'six' → logprob: -21.500335693359375
    10. 's' → logprob: -21.750335693359375

Token 313: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '0' → logprob: -18.375
    4. '   ' → logprob: -19.375
    5. ')' → logprob: -19.625
    6. '٦' → logprob: -20.375
    7. '۶' → logprob: -20.5
    8. '' → logprob: -21.0
    9. '६' → logprob: -21.5
    10. '６' → logprob: -21.75

Token 314: ')):' (ID: 92037)
  Prédit: ')):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.1823674589395523
    2. ')):
' → logprob: -1.8073674440383911
    3. '))' → logprob: -6.307367324829102
    4. ' ))' → logprob: -8.182367324829102
    5. '       ' → logprob: -8.682367324829102
    6. ')):
' → logprob: -8.682367324829102
    7. '   ' → logprob: -9.307367324829102
    8. ' ' → logprob: -9.682367324829102
    9. '):' → logprob: -11.432367324829102
    10. '):
' → logprob: -13.432367324829102

Token 315: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018176980316638947
    2. '       ' → logprob: -4.518177032470703
    3. '        ' → logprob: -5.393177032470703
    4. '            ' → logprob: -7.018177032470703
    5. '               ' → logprob: -7.018177032470703
    6. ' if' → logprob: -8.268177032470703
    7. ' bits' → logprob: -9.393177032470703
    8. '(bits' → logprob: -9.643177032470703
    9. '         ' → logprob: -9.768177032470703
    10. '0' → logprob: -9.893177032470703

Token 316: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5890606045722961
    2. '       ' → logprob: -0.8390606045722961
    3. ' if' → logprob: -5.9640607833862305
    4. 'if' → logprob: -6.2140607833862305
    5. '               ' → logprob: -6.3390607833862305
    6. '(bits' → logprob: -6.5890607833862305
    7. ' bits' → logprob: -6.7140607833862305
    8. '        ' → logprob: -6.7140607833862305
    9. 'bits' → logprob: -6.7140607833862305
    10. '   ' → logprob: -7.8390607833862305

Token 317: ' ' (ID: 220)
  Prédit: '        '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        ' → logprob: -1.2460485696792603
    2. '       ' → logprob: -1.3710485696792603
    3. '           ' → logprob: -2.2460484504699707
    4. '1' → logprob: -2.4960484504699707
    5. '    ' → logprob: -2.4960484504699707
    6. ' ' → logprob: -3.1210484504699707
    7. '(bits' → logprob: -3.1210484504699707
    8. 'bits' → logprob: -3.9960484504699707
    9. ')' → logprob: -4.121048450469971
    10. ' bits' → logprob: -4.121048450469971

Token 318: '5' (ID: 20)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8924580812454224
    2. 'bits' → logprob: -0.8924580812454224
    3. ' bits' → logprob: -2.142457962036133
    4. '(bits' → logprob: -3.517457962036133
    5. ')' → logprob: -4.642457962036133
    6. '       ' → logprob: -4.892457962036133
    7. '   ' → logprob: -5.142457962036133
    8. ' ' → logprob: -5.392457962036133
    9. ' (' → logprob: -6.642457962036133
    10. '_bits' → logprob: -6.892457962036133

Token 319: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3744758367538452
    2. '):' → logprob: -2.1244759559631348
    3. ' ,' → logprob: -2.2494759559631348
    4. '   ' → logprob: -3.9994759559631348
    5. ' :' → logprob: -4.499475955963135
    6. ' +' → logprob: -4.874475955963135
    7. ' ):' → logprob: -4.874475955963135
    8. ' -' → logprob: -4.999475955963135
    9. ':' → logprob: -5.124475955963135
    10. ' ' → logprob: -5.124475955963135

Token 320: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005541055579669774
    2. ' ' → logprob: -7.500554084777832
    3. '   ' → logprob: -14.000554084777832
    4. '=' → logprob: -16.37555503845215
    5. '1' → logprob: -17.00055503845215
    6. '    ' → logprob: -17.00055503845215
    7. '  ' → logprob: -17.12555503845215
    8. ')' → logprob: -17.75055503845215
    9. '4' → logprob: -17.75055503845215
    10. '۰' → logprob: -18.12555503845215

Token 321: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '=' → logprob: -16.000024795532227
    4. '   ' → logprob: -17.125024795532227
    5. '1' → logprob: -18.125024795532227
    6. '>' → logprob: -18.750024795532227
    7. '  ' → logprob: -18.750024795532227
    8. '۰' → logprob: -18.750024795532227
    9. '-' → logprob: -19.125024795532227
    10. ')' → logprob: -19.187524795532227

Token 322: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19497530162334442
    2. ':' → logprob: -2.0699753761291504
    3. '           ' → logprob: -3.6949753761291504
    4. '):' → logprob: -4.31997537612915
    5. ' :' → logprob: -5.44497537612915
    6. '   ' → logprob: -6.06997537612915
    7. '):
' → logprob: -6.19497537612915
    8. ':
' → logprob: -6.31997537612915
    9. ')' → logprob: -7.19497537612915
    10. ',' → logprob: -7.31997537612915

Token 323: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08007349073886871
    2. '           ' → logprob: -2.580073595046997
    3. ' if' → logprob: -8.205073356628418
    4. '   ' → logprob: -8.705073356628418
    5. '               ' → logprob: -8.705073356628418
    6. ',' → logprob: -9.455073356628418
    7. '1' → logprob: -9.955073356628418
    8. '0' → logprob: -10.205073356628418
    9. '        ' → logprob: -10.205073356628418
    10. '<|end|>' → logprob: -10.205073356628418

Token 324: ' bits' (ID: 18189)
  Prédit: ' bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.35664716362953186
    2. 'bits' (adapté à ' bits') → logprob: -1.2316471338272095
    3. ' bit' → logprob: -5.60664701461792
    4. '           ' → logprob: -6.10664701461792
    5. 'bit' → logprob: -6.23164701461792
    6. '       ' → logprob: -8.606647491455078
    7. '               ' → logprob: -9.731647491455078
    8. '(bits' → logprob: -10.481647491455078
    9. ' if' → logprob: -11.731647491455078
    10. 'if' → logprob: -11.856647491455078

Token 325: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007148159202188253
    2. '.' → logprob: -7.2507147789001465
    3. 'append' → logprob: -12.875715255737305
    4. '.app' → logprob: -13.875715255737305
    5. ' .' → logprob: -14.625715255737305
    6. ' append' → logprob: -15.375715255737305
    7. '_append' → logprob: -15.500715255737305
    8. '.extend' → logprob: -15.875715255737305
    9. '.Append' → logprob: -16.500715255737305
    10. '.ap' → logprob: -16.625715255737305

Token 326: '((' (ID: 2054)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1386449933052063
    2. '(val' → logprob: -2.6386449337005615
    3. '((' → logprob: -2.8886449337005615
    4. '(' → logprob: -6.388645172119141
    5. ' ((' → logprob: -7.388645172119141
    6. ' ' → logprob: -10.63864517211914
    7. '   ' → logprob: -10.76364517211914
    8. '(value' → logprob: -12.76364517211914
    9. '  ' → logprob: -13.38864517211914
    10. '(v' → logprob: -13.63864517211914

Token 327: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -5.796184723294573e-06
    2. ' val' → logprob: -12.125005722045898
    3. '(val' → logprob: -15.125005722045898
    4. '	val' → logprob: -18.5000057220459
    5. '_val' → logprob: -20.0000057220459
    6. '[val' → logprob: -20.0000057220459
    7. 'v' → logprob: -20.6250057220459
    8. '   ' → logprob: -21.0000057220459
    9. '.val' → logprob: -21.0000057220459
    10. ',val' → logprob: -22.2500057220459

Token 328: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.03370022401213646
    2. ' >>' → logprob: -3.4087002277374268
    3. '>' → logprob: -10.408699989318848
    4. ')' → logprob: -11.783699989318848
    5. '»' → logprob: -12.283699989318848
    6. ' ' → logprob: -13.033699989318848
    7. ')>>' → logprob: -13.533699989318848
    8. ' ' → logprob: -13.658699989318848
    9. '≫' → logprob: -13.658699989318848
    10. '>>(' → logprob: -13.783699989318848

Token 329: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00033546582562848926
    2. ' b' → logprob: -8.000335693359375
    3. ')b' → logprob: -20.750335693359375
    4. '	b' → logprob: -21.500335693359375
    5. '   ' → logprob: -21.750335693359375
    6. ' ' → logprob: -23.125335693359375
    7. ')' → logprob: -23.250335693359375
    8. '>b' → logprob: -23.625335693359375
    9. '\b' → logprob: -24.500335693359375
    10. '    ' → logprob: -25.000335693359375

Token 330: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006771695916540921
    2. ')&' → logprob: -7.500677108764648
    3. ' )' → logprob: -9.000677108764648
    4. '&' → logprob: -14.750677108764648
    5. '1' → logprob: -16.00067710876465
    6. '')' → logprob: -16.75067710876465
    7. '   ' → logprob: -16.75067710876465
    8. ' &' → logprob: -17.00067710876465
    9. '))' → logprob: -17.00067710876465
    10. '")' → logprob: -17.25067710876465

Token 331: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03664858639240265
    2. ')&' → logprob: -3.5366485118865967
    3. '&' → logprob: -5.286648750305176
    4. ' &' → logprob: -6.786648750305176
    5. ' )' → logprob: -7.286648750305176
    6. '1' → logprob: -14.536648750305176
    7. '&)' → logprob: -14.786648750305176
    8. '&amp' → logprob: -14.911648750305176
    9. ' ' → logprob: -15.161648750305176
    10. ' &)' → logprob: -15.411648750305176

Token 332: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -19.375017166137695
    4. '0' → logprob: -20.250017166137695
    5. '01' → logprob: -21.750017166137695
    6. ' ' → logprob: -21.875017166137695
    7. '(' → logprob: -21.875017166137695
    8. '１' → logprob: -22.000017166137695
    9. '  ' → logprob: -22.625017166137695
    10. '```' → logprob: -23.000017166137695

Token 333: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -20.0
    4. '0' → logprob: -21.0
    5. '01' → logprob: -21.75
    6. '{' → logprob: -22.0
    7. '' → logprob: -22.25
    8. '１' → logprob: -22.25
    9. '  ' → logprob: -22.375
    10. '(' → logprob: -22.375

Token 334: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.897412822581828e-05
    2. ' )' → logprob: -10.000068664550781
    3. ')
' → logprob: -10.875068664550781
    4. '))' → logprob: -12.375068664550781
    5. '   ' → logprob: -15.750068664550781
    6. ')}' → logprob: -17.12506866455078
    7. ')return' → logprob: -17.87506866455078
    8. ')`' → logprob: -18.00006866455078
    9. ' )
' → logprob: -18.12506866455078
    10. '       ' → logprob: -18.12506866455078

Token 335: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004597337916493416
    2. '    
' → logprob: -6.504597187042236
    3. '
' → logprob: -7.129597187042236
    4. ' return' → logprob: -7.254597187042236
    5. ' 
' → logprob: -7.379597187042236
    6. '  
' → logprob: -7.754597187042236
    7. ' ' → logprob: -8.754597663879395
    8. '   
' → logprob: -9.379597663879395
    9. '  ' → logprob: -9.629597663879395
    10. ' if' → logprob: -9.879597663879395

Token 336: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35176023840904236
    2. '   ' → logprob: -2.726760149002075
    3. ' return' → logprob: -2.851760149002075
    4. ' 
' → logprob: -2.851760149002075
    5. 'return' → logprob: -3.226760149002075
    6. ' if' → logprob: -3.601760149002075
    7. ' ' → logprob: -4.226760387420654
    8. '    
' → logprob: -4.601760387420654
    9. ')' → logprob: -4.726760387420654
    10. '  
' → logprob: -5.601760387420654

Token 337: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3869044780731201
    2. ' len' → logprob: -1.1369044780731201
    3. '(len' → logprob: -11.0119047164917
    4. '	len' → logprob: -11.0119047164917
    5. '   ' → logprob: -16.011903762817383
    6. '=len' → logprob: -16.261903762817383
    7. ' ' → logprob: -16.386903762817383
    8. '[len' → logprob: -17.261903762817383
    9. '  ' → logprob: -17.386903762817383
    10. 'l' → logprob: -17.386903762817383

Token 338: '(bits' (ID: 170698)
  Prédit: '(bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bits' → logprob: -9.65101717156358e-05
    2. 'bits' → logprob: -9.250096321105957
    3. ' bits' → logprob: -15.125096321105957
    4. '(' → logprob: -16.875097274780273
    5. '_bits' → logprob: -18.750097274780273
    6. '(parts' → logprob: -19.000097274780273
    7. '<bits' → logprob: -19.000097274780273
    8. ' (' → logprob: -19.250097274780273
    9. '(bit' → logprob: -19.375097274780273
    10. '(points' → logprob: -20.125097274780273

Token 339: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5902897715568542
    2. '==' → logprob: -1.465289831161499
    3. '>=' → logprob: -2.215289831161499
    4. ' ==' → logprob: -2.715289831161499
    5. ' >=' → logprob: -3.715289831161499
    6. ')>=' → logprob: -4.84028959274292
    7. ')==' → logprob: -4.96528959274292
    8. ']>=' → logprob: -9.215290069580078
    9. ' )' → logprob: -9.965290069580078
    10. '<|end|>' → logprob: -10.590290069580078

Token 340: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2200615406036377
    2. '>=' → logprob: -1.8450615406036377
    3. ' ==' → logprob: -3.3450615406036377
    4. ' >=' → logprob: -5.470061302185059
    5. '>' → logprob: -11.220061302185059
    6. '=' → logprob: -11.720061302185059
    7. ')>=' → logprob: -12.095061302185059
    8. '<|end|>' → logprob: -12.345061302185059
    9. ')' → logprob: -12.595061302185059
    10. ')==' → logprob: -12.595061302185059

Token 341: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -7.493430894101039e-05
    2. ' width' → logprob: -9.500075340270996
    3. '   ' → logprob: -19.62507438659668
    4. '	width' → logprob: -19.62507438659668
    5. ' ' → logprob: -19.75007438659668
    6. '(width' → logprob: -20.00007438659668
    7. 'wide' → logprob: -20.50007438659668
    8. 'weight' → logprob: -21.50007438659668
    9. 'length' → logprob: -22.12507438659668
    10. '  ' → logprob: -22.37507438659668

Token 342: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008042368106544018
    2. ':
' → logprob: -5.133042335510254
    3. ':return' → logprob: -6.508042335510254
    4. '               ' → logprob: -7.758042335510254
    5. '           ' → logprob: -8.758042335510254
    6. '):' → logprob: -11.133042335510254
    7. ' :' → logprob: -11.883042335510254
    8. '<|end|>' → logprob: -12.383042335510254
    9. '       ' → logprob: -12.508042335510254
    10. ':
' → logprob: -14.133042335510254

Token 343: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00212194980122149
    2. 'break' → logprob: -6.377121925354004
    3. 'return' → logprob: -8.377121925354004
    4. ' break' → logprob: -8.752121925354004
    5. ' return' → logprob: -10.627121925354004
    6. '           ' → logprob: -12.377121925354004
    7. '              ' → logprob: -14.127121925354004
    8. '	           ' → logprob: -14.502121925354004
    9. '	break' → logprob: -14.877121925354004
    10. '                   ' → logprob: -14.877121925354004

Token 344: ' break' (ID: 2338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03170185908675194
    2. 'break' (adapté à ' break') → logprob: -3.7817018032073975
    3. ' return' → logprob: -5.281702041625977
    4. '               ' → logprob: -5.781702041625977
    5. ' break' → logprob: -8.656702041625977
    6. '   ' → logprob: -10.281702041625977
    7. '           ' → logprob: -10.531702041625977
    8. '                   ' → logprob: -11.156702041625977
    9. '       ' → logprob: -12.781702041625977
    10. '	return' → logprob: -14.031702041625977

Token 345: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08094988018274307
    2. '       ' → logprob: -3.3309497833251953
    3. '    
' → logprob: -3.8309497833251953
    4. '
' → logprob: -4.080949783325195
    5. '                
' → logprob: -7.080949783325195
    6. ' 
' → logprob: -7.205949783325195
    7. '    ' → logprob: -7.955949783325195
    8. '        
' → logprob: -7.955949783325195
    9. 'return' → logprob: -8.330949783325195
    10. '  
' → logprob: -8.330949783325195

Token 346: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011842267587780952
    2. '       ' → logprob: -4.886842250823975
    3. '    
' → logprob: -6.136842250823975
    4. ' return' → logprob: -7.261842250823975
    5. '    ' → logprob: -8.011842727661133
    6. ' 
' → logprob: -8.011842727661133
    7. 'return' → logprob: -8.136842727661133
    8. ' ' → logprob: -9.511842727661133
    9. '
' → logprob: -9.761842727661133
    10. '        
' → logprob: -9.761842727661133

Token 347: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007619399111717939
    2. ' return' → logprob: -5.132619380950928
    3. 'return' → logprob: -7.257619380950928
    4. '       ' → logprob: -7.632619380950928
    5. ' ' → logprob: -8.507619857788086
    6. '    ' → logprob: -8.757619857788086
    7. ' if' → logprob: -10.257619857788086
    8. '
' → logprob: -10.382619857788086
    9. '    
' → logprob: -10.632619857788086
    10. '  ' → logprob: -11.382619857788086

Token 348: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.07889056205749512
    2. 'len' → logprob: -2.578890562057495
    3. '(len' → logprob: -14.703890800476074
    4. '	len' → logprob: -15.078890800476074
    5. ' ' → logprob: -17.453889846801758
    6. '   ' → logprob: -18.453889846801758
    7. '  ' → logprob: -18.453889846801758
    8. '[len' → logprob: -18.828889846801758
    9. '=len' → logprob: -18.828889846801758
    10. ' ' → logprob: -18.953889846801758

Token 349: '(bits' (ID: 170698)
  Prédit: '(bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bits' → logprob: -3.392824874026701e-05
    2. '(' → logprob: -10.37503433227539
    3. 'bits' → logprob: -13.12503433227539
    4. '(bit' → logprob: -15.62503433227539
    5. ' bits' → logprob: -15.75003433227539
    6. '(parts' → logprob: -16.25003433227539
    7. '(tokens' → logprob: -16.37503433227539
    8. ' (' → logprob: -17.12503433227539
    9. '(points' → logprob: -18.12503433227539
    10. '_bits' → logprob: -18.37503433227539

Token 350: ')' (ID: 8)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10325054824352264
    2. '==' → logprob: -2.353250503540039
    3. ')' → logprob: -5.853250503540039
    4. ')==' → logprob: -8.853250503540039
    5. ' )' → logprob: -11.603250503540039
    6. ' >=' → logprob: -11.978250503540039
    7. '=' → logprob: -12.228250503540039
    8. '>=' → logprob: -13.228250503540039
    9. ' ==
' → logprob: -13.853250503540039
    10. '()==' → logprob: -14.603250503540039

Token 351: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4744647145271301
    2. ' ==' → logprob: -0.9744647145271301
    3. '>=' → logprob: -8.224464416503906
    4. ' >=' → logprob: -9.224464416503906
    5. '=' → logprob: -11.724464416503906
    6. ')==' → logprob: -11.849464416503906
    7. '()==' → logprob: -13.099464416503906
    8. '===' → logprob: -13.724464416503906
    9. ')' → logprob: -13.974464416503906
    10. ']==' → logprob: -14.474464416503906

Token 352: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.00033546582562848926
    2. ' width' → logprob: -8.000335693359375
    3. ' ' → logprob: -19.250335693359375
    4. '   ' → logprob: -20.125335693359375
    5. '	width' → logprob: -20.500335693359375
    6. '(width' → logprob: -21.375335693359375
    7. 'weight' → logprob: -21.500335693359375
    8. 'wide' → logprob: -21.750335693359375
    9. 'length' → logprob: -21.750335693359375
    10. '=' → logprob: -22.000335693359375

Token 353: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2795964181423187
    2. '           ' → logprob: -1.5295964479446411
    3. ':
' → logprob: -3.6545963287353516
    4. '       ' → logprob: -6.904596328735352
    5. '               ' → logprob: -8.279596328735352
    6. ':return' → logprob: -9.029596328735352
    7. '          ' → logprob: -11.529596328735352
    8. ':
' → logprob: -12.529596328735352
    9. 'break' → logprob: -12.529596328735352
    10. '   ' → logprob: -12.654596328735352

Token 354: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005078765680082142
    2. 'break' → logprob: -8.250508308410645
    3. '               ' → logprob: -8.375508308410645
    4. ' break' → logprob: -11.750508308410645
    5. '       ' → logprob: -12.750508308410645
    6. 'return' → logprob: -12.875508308410645
    7. '		' → logprob: -13.625508308410645
    8. '          ' → logprob: -14.625508308410645
    9. '	       ' → logprob: -14.875508308410645
    10. '
' → logprob: -15.125508308410645

Token 355: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.1276877075433731
    2. ' break' → logprob: -2.377687692642212
    3. '           ' → logprob: -3.627687692642212
    4. '       ' → logprob: -8.127687454223633
    5. 'return' → logprob: -9.502687454223633
    6. '               ' → logprob: -9.752687454223633
    7. '	break' → logprob: -9.877687454223633
    8. '   ' → logprob: -10.002687454223633
    9. ' return' → logprob: -12.877687454223633
    10. ' ' → logprob: -14.627687454223633

Token 356: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00040362097206525505
    2. 'return' → logprob: -8.25040340423584
    3. ' return' → logprob: -9.25040340423584
    4. '
' → logprob: -10.75040340423584
    5. '    
' → logprob: -11.25040340423584
    6. '	return' → logprob: -12.50040340423584
    7. ':return' → logprob: -13.12540340423584
    8. '       ' → logprob: -13.37540340423584
    9. ' ' → logprob: -13.87540340423584
    10. '  ' → logprob: -14.50040340423584

Token 357: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022314980160444975
    2. 'return' → logprob: -6.252231597900391
    3. ' return' → logprob: -8.12723159790039
    4. '	return' → logprob: -12.62723159790039
    5. '       ' → logprob: -13.75223159790039
    6. '    
' → logprob: -14.00223159790039
    7. ' ' → logprob: -14.12723159790039
    8. ':return' → logprob: -15.00223159790039
    9. '
' → logprob: -15.12723159790039
    10. '  ' → logprob: -15.37723159790039

Token 358: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04754212498664856
    2. 'return' → logprob: -3.422542095184326
    3. '
' → logprob: -4.547542095184326
    4. ' return' → logprob: -5.797542095184326
    5. '    
' → logprob: -8.797542572021484
    6. ' ' → logprob: -12.297542572021484
    7. ' 
' → logprob: -12.547542572021484
    8. '  
' → logprob: -12.797542572021484
    9. '	return' → logprob: -13.172542572021484
    10. '       ' → logprob: -13.297542572021484

Token 359: ' Il' (ID: 5329)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.023573877289891243
    2. ' return' → logprob: -3.773573875427246
    3. '   ' → logprob: -8.023573875427246
    4. ' ' → logprob: -14.523573875427246
    5. '	return' → logprob: -16.773574829101562
    6. '  ' → logprob: -17.273574829101562
    7. '#' → logprob: -17.523574829101562
    8. ':return' → logprob: -17.523574829101562
    9. '
' → logprob: -18.523574829101562
    10. 'while' → logprob: -19.148574829101562

Token 360: ' se' (ID: 458)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.28606116771698
    2. '   ' → logprob: -1.41106116771698
    3. ' manque' → logprob: -1.91106116771698
    4. ' return' → logprob: -2.4110612869262695
    5. ' faut' → logprob: -2.9110612869262695
    6. ' reste' → logprob: -3.1610612869262695
    7. 'return' → logprob: -3.1610612869262695
    8. 'n' → logprob: -3.9110612869262695
    9. ' faudrait' → logprob: -4.1610612869262695
    10. ' y' → logprob: -4.4110612869262695

Token 361: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.49912747740745544
    2. 't' → logprob: -2.2491273880004883
    3. 'mble' → logprob: -2.4991273880004883
    4. ' peut' → logprob: -2.6241273880004883
    5. 'r' → logprob: -2.9991273880004883
    6. 'rait' → logprob: -4.124127388000488
    7. 'pour' → logprob: -4.124127388000488
    8. 'm' → logprob: -4.874127388000488
    9. ' pourrait' → logprob: -5.499127388000488
    10. 're' → logprob: -5.499127388000488

Token 362: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.00047475993051193655
    2. 'que' → logprob: -8.25047492980957
    3. ' qu' → logprob: -8.62547492980957
    4. ' ' → logprob: -11.12547492980957
    5. '   ' → logprob: -11.25047492980957
    6. ' that' → logprob: -13.00047492980957
    7. 'qu' → logprob: -13.50047492980957
    8. '    ' → logprob: -14.12547492980957
    9. '  ' → logprob: -14.25047492980957
    10. '#' → logprob: -14.75047492980957

Token 363: ' plus' (ID: 2932)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6998273730278015
    2. ' len' → logprob: -0.6998273730278015
    3. 'bits' → logprob: -5.074827194213867
    4. ' bits' → logprob: -7.824827194213867
    5. '#' → logprob: -12.824827194213867
    6. '	len' → logprob: -14.074827194213867
    7. '(len' → logprob: -14.574827194213867
    8. 'length' → logprob: -15.199827194213867
    9. ' la' → logprob: -15.574827194213867
    10. ' #' → logprob: -15.699827194213867

Token 364: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.21888315677642822
    2. 'de' → logprob: -2.2188830375671387
    3. 'bits' → logprob: -3.5938830375671387
    4. ' bits' → logprob: -4.218883037567139
    5. ' longtemps' → logprob: -5.093883037567139
    6. 'bas' → logprob: -5.468883037567139
    7. 'ieurs' → logprob: -5.593883037567139
    8. 'long' → logprob: -5.593883037567139
    9. '    ' → logprob: -6.093883037567139
    10. 'len' → logprob: -6.093883037567139

Token 365: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.11303482949733734
    2. ' bits' → logprob: -2.988034725189209
    3. 'width' → logprob: -3.363034725189209
    4. 'len' → logprob: -4.113034725189209
    5. ' width' → logprob: -5.988034725189209
    6. '0' → logprob: -6.988034725189209
    7. '[' → logprob: -8.488035202026367
    8. 'b' → logprob: -8.488035202026367
    9. 'length' → logprob: -8.738035202026367
    10. 'la' → logprob: -8.738035202026367

Token 366: ' soient' (ID: 59497)
  Prédit: ' soient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soient' → logprob: -0.12003059685230255
    2. ' aient' → logprob: -2.370030641555786
    3. 'so' → logprob: -3.995030641555786
    4. 'aient' → logprob: -8.370030403137207
    5. 'ont' → logprob: -8.620030403137207
    6. 'sur' → logprob: -8.870030403137207
    7. ' soit' → logprob: -9.120030403137207
    8. ' restent' → logprob: -9.245030403137207
    9. 'a' → logprob: -10.120030403137207
    10. 's' → logprob: -10.120030403137207

Token 367: ' déc' (ID: 8498)
  Prédit: 'enc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enc' → logprob: -1.4415127038955688
    2. 'prés' → logprob: -1.5665127038955688
    3. ' présents' → logprob: -1.5665127038955688
    4. 'aj' → logprob: -3.1915125846862793
    5. 'dans' → logprob: -3.1915125846862793
    6. ' génér' → logprob: -3.4415125846862793
    7. ' ajout' → logprob: -3.5665125846862793
    8. ' présentes' → logprob: -3.6915125846862793
    9. 'g' → logprob: -3.8165125846862793
    10. 'decoded' → logprob: -3.9415125846862793

Token 368: 'od' (ID: 368)
  Prédit: 'od'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.3276894986629486
    2. 'on' → logprob: -2.5776894092559814
    3. 'ont' → logprob: -3.0776894092559814
    4. 'om' → logprob: -3.8276894092559814
    5. 'oded' → logprob: -3.8276894092559814
    6. 'onn' → logprob: -4.4526896476745605
    7. 'oup' → logprob: -4.4526896476745605
    8. 'd' → logprob: -4.5776896476745605
    9. 'uts' → logprob: -4.9526896476745605
    10. 'onts' → logprob: -5.0776896476745605

Token 369: 'és' (ID: 1756)
  Prédit: 'od'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.4199092388153076
    2. 'és' → logprob: -1.6699092388153076
    3. 'oded' → logprob: -2.4199092388153076
    4. 'rés' → logprob: -4.044909477233887
    5. 'lés' → logprob: -4.419909477233887
    6. 'al' → logprob: -5.294909477233887
    7. 'odes' → logprob: -5.419909477233887
    8. 'nés' → logprob: -5.544909477233887
    9. 'dés' → logprob: -5.794909477233887
    10. '#' → logprob: -6.419909477233887

Token 370: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02797815203666687
    2. ' ,' → logprob: -4.40297794342041
    3. '   ' → logprob: -4.65297794342041
    4. '.' → logprob: -5.65297794342041
    5. ' ' → logprob: -7.15297794342041
    6. ' avant' → logprob: -7.90297794342041
    7. ' but' → logprob: -8.15297794342041
    8. ' (' → logprob: -8.27797794342041
    9. ';' → logprob: -8.52797794342041
    10. ' mais' → logprob: -8.77797794342041

Token 371: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38482865691185
    2. ' mais' → logprob: -1.8848286867141724
    3. ' return' → logprob: -2.009828567504883
    4. ' but' → logprob: -3.509828567504883
    5. 'return' → logprob: -5.884828567504883
    6. ' retourner' → logprob: -8.509828567504883
    7. 'but' → logprob: -8.759828567504883
    8. ' donc' → logprob: -8.759828567504883
    9. ' ' → logprob: -9.884828567504883
    10. ' so' → logprob: -10.009828567504883

Token 372: ' truncate' (ID: 126309)
  Prédit: 'truncate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'truncate' → logprob: -0.248613178730011
    2. 'bits' → logprob: -2.248613119125366
    3. ' truncate' → logprob: -2.498613119125366
    4. 'slice' → logprob: -4.373613357543945
    5. 'tr' → logprob: -5.998613357543945
    6. 'return' → logprob: -5.998613357543945
    7. 'trim' → logprob: -6.123613357543945
    8. 'cuts' → logprob: -6.373613357543945
    9. ' return' → logprob: -6.373613357543945
    10. ' bits' → logprob: -6.373613357543945

Token 373: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40637633204460144
    2. ' bits' → logprob: -1.5313763618469238
    3. 'bits' → logprob: -2.531376361846924
    4. '(bits' → logprob: -3.406376361846924
    5. ' la' → logprob: -7.156376361846924
    6. '  ' → logprob: -7.156376361846924
    7. 'd' → logprob: -7.281376361846924
    8. ' ' → logprob: -7.531376361846924
    9. 'return' → logprob: -7.906376361846924
    10. ' à' → logprob: -8.031375885009766

Token 374: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0041968789882957935
    2. 'return' → logprob: -6.379196643829346
    3. ' return' → logprob: -6.379196643829346
    4. ' bits' → logprob: -7.629196643829346
    5. 'bits' → logprob: -8.129197120666504
    6. '(bits' → logprob: -12.004197120666504
    7. ',' → logprob: -13.004197120666504
    8. ' if' → logprob: -13.504197120666504
    9. '  ' → logprob: -14.129197120666504
    10. '
' → logprob: -14.254197120666504

Token 375: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5029555559158325
    2. ' return' → logprob: -1.0029555559158325
    3. '   ' → logprob: -3.627955436706543
    4. 'bits' → logprob: -6.627955436706543
    5. ' bits' → logprob: -7.502955436706543
    6. '	return' → logprob: -12.127955436706543
    7. ' if' → logprob: -12.252955436706543
    8. ' ' → logprob: -12.877955436706543
    9. 'if' → logprob: -12.877955436706543
    10. '  ' → logprob: -13.502955436706543

Token 376: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.026303434744477272
    2. ' bits' → logprob: -3.65130352973938
    3. '(bits' → logprob: -13.5263032913208
    4. 'bit' → logprob: -13.6513032913208
    5. 'b' → logprob: -15.5263032913208
    6. '.bits' → logprob: -15.6513032913208
    7. '_bits' → logprob: -16.276304244995117
    8. 'Bits' → logprob: -16.901304244995117
    9. 'bytes' → logprob: -17.026304244995117
    10. '```' → logprob: -17.776304244995117

Token 377: '[:' (ID: 7808)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 378: 'width' (ID: 6015)
  Prédit: 'width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -7.896309739408025e-07
    2. ' width' → logprob: -14.125000953674316
    3. '   ' → logprob: -19.125
    4. 'wide' → logprob: -19.75
    5. 'length' → logprob: -20.25
    6. '(width' → logprob: -20.625
    7. '	width' → logprob: -20.75
    8. ']' → logprob: -21.125
    9. 'weight' → logprob: -21.375
    10. ')' → logprob: -21.5

Token 379: ']


' (ID: 52447)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')
' → logprob: -14.250000953674316
    3. '）' → logprob: -15.375000953674316
    4. ']' → logprob: -16.000001907348633
    5. ' )' → logprob: -16.250001907348633
    6. '}' → logprob: -17.000001907348633
    7. '<|end|>' → logprob: -17.875001907348633
    8. '   ' → logprob: -18.375001907348633
    9. ')return' → logprob: -18.500001907348633
    10. '])' → logprob: -19.500001907348633

Token 380: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008048403076827526
    2. '#' → logprob: -5.5080485343933105
    3. '
' → logprob: -6.2580485343933105
    4. '<|end|>' → logprob: -7.1330485343933105
    5. 'class' → logprob: -7.7580485343933105
    6. '

' → logprob: -7.7580485343933105
    7. '```' → logprob: -9.883048057556152
    8. '\n' → logprob: -10.133048057556152
    9. '  
' → logprob: -10.258048057556152
    10. ' 
' → logprob: -10.258048057556152

Token 381: ' rotate' (ID: 31987)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.4175390601158142
    2. 'find' → logprob: -1.792539119720459
    3. ' main' → logprob: -2.917539119720459
    4. 'solve' → logprob: -3.542539119720459
    5. ' decode' → logprob: -3.917539119720459
    6. ' solve' → logprob: -4.167539119720459
    7. 'main' → logprob: -4.417539119720459
    8. 'decode' → logprob: -4.417539119720459
    9. 'search' → logprob: -4.792539119720459
    10. 'parse' → logprob: -5.292539119720459

Token 382: '_' (ID: 62)
  Prédit: '_matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -0.7414767146110535
    2. '_grid' → logprob: -1.3664767742156982
    3. '_' → logprob: -2.3664767742156982
    4. '(matrix' → logprob: -2.8664767742156982
    5. '(grid' → logprob: -3.2414767742156982
    6. '_image' → logprob: -3.2414767742156982
    7. '_line' → logprob: -4.491476535797119
    8. '_bitmap' → logprob: -4.991476535797119
    9. '(image' → logprob: -5.116476535797119
    10. '90' → logprob: -5.366476535797119

Token 383: '90' (ID: 2744)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.6802448034286499
    2. 'matrix' → logprob: -0.8052448034286499
    3. '90' → logprob: -4.3052449226379395
    4. 'image' → logprob: -4.4302449226379395
    5. 'pattern' → logprob: -4.8052449226379395
    6. 'board' → logprob: -5.8052449226379395
    7. 'bits' → logprob: -5.9302449226379395
    8. 'bitmap' → logprob: -6.1802449226379395
    9. 'lines' → logprob: -6.9302449226379395
    10. 'list' → logprob: -7.3052449226379395

Token 384: '(mat' (ID: 83002)
  Prédit: '_clock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_clock' → logprob: -0.47902539372444153
    2. '(matrix' → logprob: -1.6040253639221191
    3. '(' → logprob: -2.229025363922119
    4. '_counter' → logprob: -4.479025363922119
    5. '(image' → logprob: -4.479025363922119
    6. '(grid' → logprob: -4.604025363922119
    7. '_matrix' → logprob: -4.604025363922119
    8. '_right' → logprob: -5.104025363922119
    9. '_' → logprob: -5.354025363922119
    10. '_left' → logprob: -5.479025363922119

Token 385: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09105454385280609
    2. '):
' → logprob: -2.5910544395446777
    3. ')' → logprob: -4.841054439544678
    4. ',' → logprob: -5.591054439544678
    5. '(mat' → logprob: -8.466054916381836
    6. '(matrix' → logprob: -9.716054916381836
    7. ' ):' → logprob: -10.091054916381836
    8. '):
' → logprob: -10.341054916381836
    9. '):

' → logprob: -11.091054916381836
    10. '   ' → logprob: -11.341054916381836

Token 386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003355109365656972
    2. ':' → logprob: -6.628355026245117
    3. ':
' → logprob: -6.753355026245117
    4. '[' → logprob: -9.128355026245117
    5. '(m' → logprob: -9.128355026245117
    6. 'n' → logprob: -9.378355026245117
    7. '(lines' → logprob: -9.753355026245117
    8. '(n' → logprob: -10.128355026245117
    9. 'def' → logprob: -10.253355026245117
    10. '[m' → logprob: -10.378355026245117

Token 387: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31441837549209595
    2. 'return' → logprob: -1.5644183158874512
    3. ' return' → logprob: -2.939418315887451
    4. '[
' → logprob: -5.564418315887451
    5. '[' → logprob: -5.689418315887451
    6. ' [' → logprob: -8.31441879272461
    7. 'n' → logprob: -9.68941879272461
    8. ' ' → logprob: -10.31441879272461
    9. '[[' → logprob: -10.93941879272461
    10. '[n' → logprob: -10.93941879272461

Token 388: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13799472153186798
    2. '"""
' → logprob: -2.1379947662353516
    3. '"""' → logprob: -4.762994766235352
    4. '#' → logprob: -6.637994766235352
    5. ' """
' → logprob: -7.387994766235352
    6. '"' → logprob: -7.887994766235352
    7. ' """' → logprob: -10.137994766235352
    8. '
' → logprob: -10.262994766235352
    9. ' #' → logprob: -10.762994766235352
    10. '"
' → logprob: -11.012994766235352

Token 389: ' Rotation' (ID: 98033)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11547593772411346
    2. 'return' → logprob: -2.99047589302063
    3. ' return' → logprob: -3.11547589302063
    4. '#' → logprob: -5.365476131439209
    5. 'def' → logprob: -5.615476131439209
    6. '
' → logprob: -6.615476131439209
    7. '"""' → logprob: -6.615476131439209
    8. ' #' → logprob: -6.740476131439209
    9. ' """' → logprob: -6.990476131439209
    10. '"""
' → logprob: -7.740476131439209

Token 390: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24092015624046326
    2. '90' → logprob: -1.6159201860427856
    3. '(mat' → logprob: -4.615920066833496
    4. ' de' → logprob: -6.365920066833496
    5. ' ' → logprob: -7.240920066833496
    6. ' =' → logprob: -7.240920066833496
    7. '(matrix' → logprob: -7.615920066833496
    8. '_clock' → logprob: -7.740920066833496
    9. '_mat' → logprob: -8.490920066833496
    10. ' des' → logprob: -8.615920066833496

Token 391: '90' (ID: 2744)
  Prédit: '90'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.5324460864067078
    2. '_' → logprob: -1.5324461460113525
    3. '(mat' → logprob: -1.9074461460113525
    4. '(matrix' → logprob: -4.657445907592773
    5. 'def' → logprob: -4.907445907592773
    6. '_clock' → logprob: -5.032445907592773
    7. '[' → logprob: -5.282445907592773
    8. '=' → logprob: -5.282445907592773
    9. ' =' → logprob: -5.282445907592773
    10. 'de' → logprob: -6.032445907592773

Token 392: ' degrés' (ID: 195297)
  Prédit: '(mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mat' → logprob: -0.46945056319236755
    2. '_de' → logprob: -1.71945059299469
    3. '_clock' → logprob: -2.8444504737854004
    4. '_' → logprob: -3.2194504737854004
    5. ' (' → logprob: -3.7194504737854004
    6. 'de' → logprob: -4.0944504737854
    7. '90' → logprob: -4.2194504737854
    8. '(matrix' → logprob: -4.8444504737854
    9. '(' → logprob: -4.9694504737854
    10. '_degree' → logprob: -5.3444504737854

Token 393: ' dans' (ID: 2671)
  Prédit: '(mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mat' → logprob: -0.321643590927124
    2. '_clock' → logprob: -2.071643590927124
    3. '90' → logprob: -2.196643590927124
    4. ' (' → logprob: -4.196643829345703
    5. '(matrix' → logprob: -4.571643829345703
    6. '(' → logprob: -5.821643829345703
    7. '_c' → logprob: -6.321643829345703
    8. '_' → logprob: -6.946643829345703
    9. 'clock' → logprob: -6.946643829345703
    10. ' ' → logprob: -7.196643829345703

Token 394: ' le' (ID: 505)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1933489888906479
    2. 'le' → logprob: -2.8183488845825195
    3. 'clock' → logprob: -3.1933488845825195
    4. 'la' → logprob: -4.0683488845825195
    5. '[' → logprob: -4.1933488845825195
    6. ' la' → logprob: -5.1933488845825195
    7. ' le' → logprob: -5.1933488845825195
    8. ' clockwise' → logprob: -5.4433488845825195
    9. ')' → logprob: -5.5683488845825195
    10. 'counter' → logprob: -5.9433488845825195

Token 395: ' sens' (ID: 5050)
  Prédit: 'sens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sens' → logprob: -0.036080144345760345
    2. 'def' → logprob: -4.286080360412598
    3. ' sens' → logprob: -4.536080360412598
    4. 'clock' → logprob: -4.911080360412598
    5. 'sense' → logprob: -6.286080360412598
    6. 'sent' → logprob: -7.661080360412598
    7. '[' → logprob: -8.161080360412598
    8. 'trans' → logprob: -8.536080360412598
    9. 'b' → logprob: -9.411080360412598
    10. ')' → logprob: -9.411080360412598

Token 396: ' hora' (ID: 19003)
  Prédit: 'hora'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hora' → logprob: -0.01764761470258236
    2. 'sens' → logprob: -4.517647743225098
    3. 'hor' → logprob: -5.267647743225098
    4. ' hora' → logprob: -6.892647743225098
    5. 'des' → logprob: -9.142647743225098
    6. 'ant' → logprob: -9.642647743225098
    7. '   ' → logprob: -10.017647743225098
    8. 'tr' → logprob: -10.392647743225098
    9. 'Hora' → logprob: -10.642647743225098
    10. 'anti' → logprob: -11.017647743225098

Token 397: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.0005803157109767199
    2. 'ir' → logprob: -7.500580310821533
    3. 'ira' → logprob: -11.500580787658691
    4. 'l' → logprob: -12.375580787658691
    5. 'ires' → logprob: -12.875580787658691
    6. 'r' → logprob: -13.500580787658691
    7. 'yre' → logprob: -14.125580787658691
    8. '
' → logprob: -14.250580787658691
    9. 'irea' → logprob: -14.375580787658691
    10. '_' → logprob: -14.625580787658691

Token 398: ' d' (ID: 272)
  Prédit: '(mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mat' → logprob: -0.0031459855381399393
    2. '(matrix' → logprob: -6.753146171569824
    3. '(m' → logprob: -7.253146171569824
    4. '   ' → logprob: -7.628146171569824
    5. '(' → logprob: -8.003146171569824
    6. 'def' → logprob: -8.378146171569824
    7. '(
' → logprob: -9.378146171569824
    8. ' (' → logprob: -10.003146171569824
    9. '(def' → logprob: -10.878146171569824
    10. ',' → logprob: -11.878146171569824

Token 399: ''une' (ID: 13337)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7548907399177551
    2. 'e' → logprob: -1.1298906803131104
    3. ''une' → logprob: -3.2548906803131104
    4. ' une' → logprob: -3.5048906803131104
    5. 'la' → logprob: -3.6298906803131104
    6. 'u' → logprob: -3.8798906803131104
    7. 'def' → logprob: -4.0048909187316895
    8. 'une' → logprob: -4.2548909187316895
    9. ' un' → logprob: -4.6298909187316895
    10. ' le' → logprob: -4.6298909187316895

Token 400: ' matr' (ID: 25095)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -1.166975498199463
    2. ' matr' → logprob: -1.541975498199463
    3. 'mat' → logprob: -1.666975498199463
    4. 'list' → logprob: -2.791975498199463
    5. ' matrix' → logprob: -2.916975498199463
    6. ' list' → logprob: -3.166975498199463
    7. '[
' → logprob: -3.541975498199463
    8. 'def' → logprob: -3.916975498199463
    9. '[' → logprob: -4.041975498199463
    10. '[[' → logprob: -4.291975498199463

Token 401: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.10116426646709442
    2. 'rice' → logprob: -2.3511643409729004
    3. 'ix' → logprob: -7.1011643409729
    4. '
' → logprob: -10.226163864135742
    5. 'r' → logprob: -10.601163864135742
    6. 'rix' → logprob: -11.351163864135742
    7. '   ' → logprob: -11.726163864135742
    8. '#' → logprob: -12.101163864135742
    9. '```' → logprob: -12.101163864135742
    10. '"' → logprob: -12.476163864135742

Token 402: ' carr' (ID: 18321)
  Prédit: '(mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mat' → logprob: -0.0932864099740982
    2. '(matrix' → logprob: -2.7182865142822266
    3. ' (' → logprob: -4.093286514282227
    4. '(m' → logprob: -5.718286514282227
    5. '   ' → logprob: -6.218286514282227
    6. 'def' → logprob: -8.093286514282227
    7. '[m' → logprob: -8.468286514282227
    8. '(' → logprob: -9.468286514282227
    9. '[' → logprob: -9.718286514282227
    10. '```' → logprob: -9.718286514282227

Token 403: 'ée' (ID: 2894)
  Prédit: 'ice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.40957212448120117
    2. 'ix' → logprob: -1.1595721244812012
    3. 'ée' → logprob: -5.409572124481201
    4. '[' → logprob: -6.034572124481201
    5. 'x' → logprob: -6.284572124481201
    6. 'ic' → logprob: -6.409572124481201
    7. 'ixe' → logprob: -6.534572124481201
    8. 'ique' → logprob: -6.784572124481201
    9. '```' → logprob: -6.909572124481201
    10. '   ' → logprob: -7.034572124481201

Token 404: ' p' (ID: 275)
  Prédit: '(mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mat' → logprob: -0.014688261784613132
    2. '(matrix' → logprob: -4.264688491821289
    3. '   ' → logprob: -8.889688491821289
    4. '(m' → logprob: -9.014688491821289
    5. 'def' → logprob: -9.389688491821289
    6. '(' → logprob: -9.639688491821289
    7. '(
' → logprob: -10.014688491821289
    8. ' (' → logprob: -10.389688491821289
    9. '
' → logprob: -11.639688491821289
    10. '[' → logprob: -12.139688491821289

Token 405: ' x' (ID: 1215)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'our' → logprob: -1.0118473768234253
    2. 'r' → logprob: -1.2618473768234253
    3. 'lus' → logprob: -2.511847496032715
    4. 'ar' → logprob: -3.261847496032715
    5. 'lace' → logprob: -3.636847496032715
    6. 'ro' → logprob: -3.636847496032715
    7. 'ython' → logprob: -4.136847496032715
    8. '[' → logprob: -4.136847496032715
    9. 'lay' → logprob: -4.261847496032715
    10. '
' → logprob: -4.261847496032715

Token 406: ' p' (ID: 275)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1748107373714447
    2. 'p' → logprob: -2.4248106479644775
    3. ' p' → logprob: -3.5498106479644775
    4. '=' → logprob: -3.7998106479644775
    5. '1' → logprob: -5.174810886383057
    6. 'mat' → logprob: -5.299810886383057
    7. ' x' → logprob: -5.799810886383057
    8. '
' → logprob: -6.174810886383057
    9. ' =' → logprob: -6.674810886383057
    10. 'y' → logprob: -6.799810886383057

Token 407: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.092907428741455
    2. '(mat' → logprob: -1.717907428741455
    3. ':
' → logprob: -1.967907428741455
    4. '   ' → logprob: -2.092907428741455
    5. '):' → logprob: -2.217907428741455
    6. '(m' → logprob: -3.217907428741455
    7. '):
' → logprob: -4.342907428741455
    8. '(p' → logprob: -4.467907428741455
    9. ')' → logprob: -4.592907428741455
    10. 'def' → logprob: -4.842907428741455

Token 408: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9349905848503113
    2. '):
' → logprob: -0.9349905848503113
    3. 'def' → logprob: -2.309990644454956
    4. ':
' → logprob: -2.934990644454956
    5. '):' → logprob: -3.434990644454956
    6. ')' → logprob: -4.184990406036377
    7. ':' → logprob: -5.059990406036377
    8. '
' → logprob: -5.309990406036377
    9. '"""
' → logprob: -7.184990406036377
    10. ']' → logprob: -8.059990882873535

Token 409: ' """
' (ID: 7037)
  Prédit: '(mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mat' → logprob: -0.016015244647860527
    2. '(m' → logprob: -4.26601505279541
    3. 'def' → logprob: -7.39101505279541
    4. '(matrix' → logprob: -7.76601505279541
    5. '):' → logprob: -8.14101505279541
    6. ')' → logprob: -8.89101505279541
    7. '):
' → logprob: -8.89101505279541
    8. '   ' → logprob: -9.01601505279541
    9. ':
' → logprob: -10.14101505279541
    10. ':' → logprob: -10.64101505279541

Token 410: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018060268834233284
    2. 'n' → logprob: -4.268060207366943
    3. ' n' → logprob: -5.768060207366943
    4. ' return' → logprob: -7.643060207366943
    5. 'return' → logprob: -8.893060684204102
    6. 'def' → logprob: -9.518060684204102
    7. ' p' → logprob: -10.393060684204102
    8. '
' → logprob: -11.143060684204102
    9. 'p' → logprob: -11.768060684204102
    10. ' size' → logprob: -11.893060684204102

Token 411: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.23860399425029755
    2. 'n' → logprob: -1.613603949546814
    3. 'return' → logprob: -5.3636040687561035
    4. '   ' → logprob: -5.8636040687561035
    5. 'size' → logprob: -5.8636040687561035
    6. ' p' → logprob: -6.6136040687561035
    7. ' n' → logprob: -6.7386040687561035
    8. ' return' → logprob: -9.113603591918945
    9. ' size' → logprob: -9.613603591918945
    10. 'def' → logprob: -11.113603591918945

Token 412: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25248414278030396
    2. '=' → logprob: -1.5024840831756592
    3. '=len' → logprob: -7.627484321594238
    4. '   ' → logprob: -10.252484321594238
    5. '=p' → logprob: -10.877484321594238
    6. ')' → logprob: -12.627484321594238
    7. ' ' → logprob: -12.752484321594238
    8. 'p' → logprob: -12.752484321594238
    9. ',' → logprob: -13.877484321594238
    10. '=size' → logprob: -14.127484321594238

Token 413: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.01814994215965271
    2. ' len' → logprob: -4.0181498527526855
    3. '(len' → logprob: -18.018150329589844
    4. '[len' → logprob: -21.268150329589844
    5. '	len' → logprob: -22.518150329589844
    6. '=len' → logprob: -22.518150329589844
    7. ',len' → logprob: -25.393150329589844
    8. '   ' → logprob: -25.768150329589844
    9. ' ' → logprob: -26.268150329589844
    10. 'Len' → logprob: -26.518150329589844

Token 414: '(mat' (ID: 83002)
  Prédit: '(mat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mat' → logprob: 0.0
    2. 'mat' → logprob: -17.0
    3. '(' → logprob: -18.0
    4. '	mat' → logprob: -19.375
    5. '(Mat' → logprob: -20.875
    6. '(ma' → logprob: -21.875
    7. '_mat' → logprob: -21.875
    8. '(matrix' → logprob: -22.125
    9. '(m' → logprob: -22.5
    10. 'Mat' → logprob: -22.75

Token 415: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07895104587078094
    2. ')' → logprob: -2.578951120376587
    3. '   ' → logprob: -10.328950881958008
    4. ')
' → logprob: -10.578950881958008
    5. ' )
' → logprob: -13.703950881958008
    6. '[' → logprob: -13.703950881958008
    7. ')

' → logprob: -15.078950881958008
    8. ')`
' → logprob: -15.328950881958008
    9. ')p' → logprob: -15.578950881958008
    10. ' )' → logprob: -16.328950881958008

Token 416: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004559711553156376
    2. 'return' → logprob: -5.754559516906738
    3. '
' → logprob: -7.379559516906738
    4. 'result' → logprob: -7.629559516906738
    5. 'mat' → logprob: -8.879559516906738
    6. '    
' → logprob: -10.129559516906738
    7. 'new' → logprob: -10.504559516906738
    8. ' return' → logprob: -11.004559516906738
    9. 'res' → logprob: -11.254559516906738
    10. '```' → logprob: -11.504559516906738

Token 417: ' rotated' (ID: 93819)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05391078442335129
    2. 'rot' → logprob: -3.053910732269287
    3. 'result' → logprob: -5.553910732269287
    4. 'new' → logprob: -7.428910732269287
    5. ' return' → logprob: -7.678910732269287
    6. 'res' → logprob: -8.303911209106445
    7. ' rotated' → logprob: -9.428911209106445
    8. 'n' → logprob: -10.678911209106445
    9. 'ret' → logprob: -10.803911209106445
    10. '   ' → logprob: -12.178911209106445

Token 418: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10101665556430817
    2. ' =' → logprob: -2.3510167598724365
    3. '(mat' → logprob: -7.226016521453857
    4. '(' → logprob: -10.226016998291016
    5. 'mat' → logprob: -11.226016998291016
    6. '_mat' → logprob: -11.726016998291016
    7. '=[[' → logprob: -11.851016998291016
    8. '(p' → logprob: -12.226016998291016
    9. '=
' → logprob: -12.976016998291016
    10. ' mat' → logprob: -13.226016998291016

Token 419: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.00038145645521581173
    2. ' [[' → logprob: -8.000381469726562
    3. '[' → logprob: -10.000381469726562
    4. ' [' → logprob: -14.250381469726562
    5. '[]
' → logprob: -17.375381469726562
    6. '[]' → logprob: -17.750381469726562
    7. '[
' → logprob: -18.250381469726562
    8. '[['' → logprob: -18.375381469726562
    9. '[p' → logprob: -20.000381469726562
    10. '[\' → logprob: -21.000381469726562

Token 420: '0' (ID: 15)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.6334558129310608
    2. '0' → logprob: -0.7584558129310608
    3. ' mat' → logprob: -7.508455753326416
    4. 'False' → logprob: -8.133456230163574
    5. ' ' → logprob: -12.508456230163574
    6. 'row' → logprob: -13.258456230163574
    7. ' False' → logprob: -13.508456230163574
    8. '(mat' → logprob: -13.508456230163574
    9. 'None' → logprob: -13.633456230163574
    10. '   ' → logprob: -13.633456230163574

Token 421: ']*' (ID: 18579)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20809274911880493
    2. ' for' → logprob: -1.7080926895141602
    3. ']' → logprob: -5.70809268951416
    4. ']*' → logprob: -5.95809268951416
    5. '   ' → logprob: -7.33309268951416
    6. '	for' → logprob: -10.58309268951416
    7. ')' → logprob: -11.08309268951416
    8. '
' → logprob: -11.08309268951416
    9. 'p' → logprob: -11.45809268951416
    10. ' ' → logprob: -12.20809268951416

Token 422: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.9361264946837764e-07
    2. ' p' → logprob: -16.0
    3. '<p' → logprob: -20.25
    4. '   ' → logprob: -22.5
    5. '	p' → logprob: -22.5
    6. '(p' → logprob: -22.625
    7. '_p' → logprob: -23.125
    8. '
' → logprob: -23.25
    9. '```' → logprob: -23.25
    10. 'py' → logprob: -23.875

Token 423: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31330081820487976
    2. ' for' → logprob: -1.3133008480072021
    3. 'p' → logprob: -10.563301086425781
    4. '   ' → logprob: -12.563301086425781
    5. ']' → logprob: -12.813301086425781
    6. ' p' → logprob: -12.938301086425781
    7. '	for' → logprob: -13.063301086425781
    8. ')' → logprob: -13.938301086425781
    9. '    ' → logprob: -14.313301086425781
    10. '
' → logprob: -15.063301086425781

Token 424: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.038654811680316925
    2. '_range' → logprob: -3.2886548042297363
    3. '_p' → logprob: -7.663654804229736
    4. '_i' → logprob: -9.788655281066895
    5. ' _' → logprob: -10.038655281066895
    6. ' range' → logprob: -11.288655281066895
    7. 'range' → logprob: -11.413655281066895
    8. '_j' → logprob: -11.913655281066895
    9. '_in' → logprob: -12.163655281066895
    10. '_=' → logprob: -12.913655281066895

Token 425: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.901345038088039e-05
    2. ' range' → logprob: -9.250099182128906
    3. 'in' → logprob: -13.000099182128906
    4. 'p' → logprob: -15.000099182128906
    5. '_' → logprob: -15.625099182128906
    6. '_range' → logprob: -16.500099182128906
    7. ' in' → logprob: -17.875099182128906
    8. '(range' → logprob: -18.375099182128906
    9. '	range' → logprob: -18.875099182128906
    10. ' ' → logprob: -19.000099182128906

Token 426: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.5491004129871726e-05
    2. ' range' → logprob: -10.000045776367188
    3. '(range' → logprob: -18.000045776367188
    4. 'mat' → logprob: -18.125045776367188
    5. 'rang' → logprob: -20.625045776367188
    6. '
' → logprob: -20.750045776367188
    7. 'p' → logprob: -20.875045776367188
    8. '[' → logprob: -20.875045776367188
    9. ' ' → logprob: -21.375045776367188
    10. '   ' → logprob: -21.500045776367188

Token 427: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00014048899174667895
    2. 'p' → logprob: -8.875140190124512
    3. '(' → logprob: -15.375140190124512
    4. ' (' → logprob: -15.500140190124512
    5. '(len' → logprob: -17.375141143798828
    6. '(
' → logprob: -17.625141143798828
    7. '   ' → logprob: -18.250141143798828
    8. '<p' → logprob: -18.375141143798828
    9. '	p' → logprob: -18.625141143798828
    10. '
' → logprob: -18.750141143798828

Token 428: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.3596853831550106e-05
    2. ')]
' → logprob: -10.125053405761719
    3. ']' → logprob: -11.875053405761719
    4. ')' → logprob: -12.250053405761719
    5. '   ' → logprob: -14.500053405761719
    6. ']]' → logprob: -15.125053405761719
    7. ' )' → logprob: -15.125053405761719
    8. '))' → logprob: -15.625053405761719
    9. ')]
' → logprob: -16.00005340576172
    10. '])' → logprob: -16.62505340576172

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005268189124763012
    2. 'for' → logprob: -7.7505269050598145
    3. ' for' → logprob: -9.250526428222656
    4. '	for' → logprob: -16.500526428222656
    5. '       ' → logprob: -17.250526428222656
    6. '
' → logprob: -17.875526428222656
    7. ' ' → logprob: -20.500526428222656
    8. '  ' → logprob: -21.375526428222656
    9. '    
' → logprob: -21.875526428222656
    10. '```' → logprob: -22.125526428222656

Token 430: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00043686782009899616
    2. ' for' → logprob: -7.750436782836914
    3. '   ' → logprob: -12.000436782836914
    4. '	for' → logprob: -18.125436782836914
    5. 'i' → logprob: -20.375436782836914
    6. '```' → logprob: -23.375436782836914
    7. 'y' → logprob: -24.000436782836914
    8. ' ' → logprob: -24.000436782836914
    9. 'j' → logprob: -24.125436782836914
    10. 'For' → logprob: -24.250436782836914

Token 431: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019066202221438289
    2. ' i' → logprob: -6.376906394958496
    3. 'j' → logprob: -9.251906394958496
    4. 'y' → logprob: -9.751906394958496
    5. 'x' → logprob: -10.501906394958496
    6. 'r' → logprob: -10.751906394958496
    7. ' y' → logprob: -14.501906394958496
    8. ' j' → logprob: -14.876906394958496
    9. 'row' → logprob: -15.626906394958496
    10. '	i' → logprob: -15.876906394958496

Token 432: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012517892755568027
    2. 'in' → logprob: -4.387517929077148
    3. ' ' → logprob: -13.012517929077148
    4. '   ' → logprob: -13.387517929077148
    5. 'p' → logprob: -13.637517929077148
    6. '	in' → logprob: -14.137517929077148
    7. '[' → logprob: -14.762517929077148
    8. ',' → logprob: -14.887517929077148
    9. ' p' → logprob: -15.012517929077148
    10. '<|end|>' → logprob: -15.137517929077148

Token 433: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005530327325686812
    2. ' range' → logprob: -7.500553131103516
    3. ' ' → logprob: -17.125553131103516
    4. '   ' → logprob: -20.750553131103516
    5. '  ' → logprob: -20.875553131103516
    6. '	range' → logprob: -20.875553131103516
    7. '(range' → logprob: -21.000553131103516
    8. 'p' → logprob: -21.625553131103516
    9. 'rang' → logprob: -21.750553131103516
    10. '    ' → logprob: -21.750553131103516

Token 434: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.572941179503687e-05
    2. ' p' → logprob: -10.125045776367188
    3. '(p' → logprob: -12.125045776367188
    4. '   ' → logprob: -16.000045776367188
    5. '	p' → logprob: -17.250045776367188
    6. '<p' → logprob: -18.750045776367188
    7. ')p' → logprob: -19.375045776367188
    8. '(' → logprob: -19.625045776367188
    9. '[p' → logprob: -20.125045776367188
    10. ' ' → logprob: -20.125045776367188

Token 435: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1431509107351303
    2. '):' → logprob: -2.018150806427002
    3. '   ' → logprob: -8.51815128326416
    4. '):
' → logprob: -8.76815128326416
    5. ')' → logprob: -9.76815128326416
    6. '<|end|>' → logprob: -10.89315128326416
    7. '):

' → logprob: -11.14315128326416
    8. ':' → logprob: -12.39315128326416
    9. '       ' → logprob: -12.51815128326416
    10. ' ):
' → logprob: -12.64315128326416

Token 436: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7486193180084229
    2. ' for' → logprob: -0.9986193180084229
    3. 'for' → logprob: -2.123619318008423
    4. '   ' → logprob: -3.248619318008423
    5. '	for' → logprob: -8.748619079589844
    6. '	   ' → logprob: -12.873619079589844
    7. '<|end|>' → logprob: -13.373619079589844
    8. '    ' → logprob: -13.373619079589844
    9. '     ' → logprob: -14.123619079589844
    10. ' ' → logprob: -14.248619079589844

Token 437: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011058438569307327
    2. ' for' → logprob: -4.511058330535889
    3. '   ' → logprob: -11.511058807373047
    4. 'j' → logprob: -14.886058807373047
    5. '	for' → logprob: -16.261058807373047
    6. 'range' → logprob: -16.386058807373047
    7. ' j' → logprob: -18.886058807373047
    8. '```' → logprob: -19.136058807373047
    9. ' ' → logprob: -19.511058807373047
    10. '       ' → logprob: -20.386058807373047

Token 438: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0018399908440187573
    2. ' j' → logprob: -6.876840114593506
    3. 'p' → logprob: -7.126840114593506
    4. '   ' → logprob: -13.126839637756348
    5. ' p' → logprob: -14.001839637756348
    6. 'range' → logprob: -14.626839637756348
    7. ' range' → logprob: -15.876839637756348
    8. '	j' → logprob: -16.501840591430664
    9. '    ' → logprob: -18.626840591430664
    10. ' ' → logprob: -19.126840591430664

Token 439: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0699981302022934
    2. 'in' → logprob: -2.694998025894165
    3. 'range' → logprob: -11.069997787475586
    4. 'p' → logprob: -11.319997787475586
    5. ')' → logprob: -11.819997787475586
    6. '(p' → logprob: -12.069997787475586
    7. '<|end|>' → logprob: -12.194997787475586
    8. '   ' → logprob: -12.694997787475586
    9. '(' → logprob: -12.694997787475586
    10. ' ' → logprob: -13.069997787475586

Token 440: ' range' (ID: 3352)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.003586295060813427
    2. 'range' → logprob: -5.878586292266846
    3. ' p' → logprob: -7.503586292266846
    4. ' range' → logprob: -8.378586769104004
    5. '[p' → logprob: -15.878586769104004
    6. '<p' → logprob: -16.378585815429688
    7. ' ' → logprob: -17.753585815429688
    8. '	p' → logprob: -18.003585815429688
    9. '(p' → logprob: -18.378585815429688
    10. '   ' → logprob: -18.503585815429688

Token 441: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0002694416616577655
    2. '(p' → logprob: -8.250269889831543
    3. ' p' → logprob: -11.750269889831543
    4. '<p' → logprob: -16.375268936157227
    5. '[p' → logprob: -16.625268936157227
    6. '(' → logprob: -17.250268936157227
    7. '	p' → logprob: -17.625268936157227
    8. ' (' → logprob: -18.125268936157227
    9. '   ' → logprob: -18.375268936157227
    10. ')p' → logprob: -18.875268936157227

Token 442: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3907095491886139
    2. '):
' → logprob: -1.1407095193862915
    3. ']:' → logprob: -6.515709400177002
    4. ']):' → logprob: -6.515709400177002
    5. 'p' → logprob: -7.765709400177002
    6. ']):
' → logprob: -9.26570987701416
    7. ']:
' → logprob: -9.64070987701416
    8. ')' → logprob: -10.14070987701416
    9. ' ):' → logprob: -10.39070987701416
    10. '   ' → logprob: -10.51570987701416

Token 443: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014256240800023079
    2. 'rot' → logprob: -4.514256477355957
    3. ' rotated' → logprob: -5.764256477355957
    4. '	       ' → logprob: -10.639256477355957
    5. '		' → logprob: -11.389256477355957
    6. '               ' → logprob: -11.389256477355957
    7. '(rot' → logprob: -12.014256477355957
    8. ' rot' → logprob: -12.514256477355957
    9. '_rot' → logprob: -13.389256477355957
    10. '.rot' → logprob: -13.764256477355957

Token 444: ' rotated' (ID: 93819)
  Prédit: 'rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.00013238313840702176
    2. ' rotated' → logprob: -9.00013256072998
    3. '           ' → logprob: -11.75013256072998
    4. '   ' → logprob: -13.87513256072998
    5. '       ' → logprob: -16.750131607055664
    6. '               ' → logprob: -17.250131607055664
    7. 'rott' → logprob: -17.375131607055664
    8. '(rot' → logprob: -18.375131607055664
    9. '_rot' → logprob: -18.875131607055664
    10. ' rot' → logprob: -19.000131607055664

Token 445: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0018292918102815747
    2. '[p' → logprob: -6.376829147338867
    3. '][' → logprob: -9.751829147338867
    4. '[' → logprob: -10.126829147338867
    5. '[i' → logprob: -10.626829147338867
    6. '[n' → logprob: -14.001829147338867
    7. ' [' → logprob: -14.501829147338867
    8. '[
' → logprob: -14.751829147338867
    9. '
' → logprob: -15.001829147338867
    10. '=' → logprob: -15.001829147338867

Token 446: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -6.229872087715194e-05
    2. '[p' → logprob: -9.875061988830566
    3. 'p' → logprob: -12.000061988830566
    4. '[' → logprob: -13.000061988830566
    5. ']' → logprob: -14.125061988830566
    6. '[i' → logprob: -14.125061988830566
    7. ' ][' → logprob: -14.250061988830566
    8. ']][' → logprob: -16.625062942504883
    9. ')[' → logprob: -16.875062942504883
    10. '][-' → logprob: -17.500062942504883

Token 447: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.512236498361744e-07
    2. ' p' → logprob: -14.625000953674316
    3. 'i' → logprob: -17.0
    4. '(p' → logprob: -19.25
    5. '<p' → logprob: -19.5
    6. '	p' → logprob: -19.875
    7. '
' → logprob: -20.125
    8. ']' → logprob: -20.625
    9. '{' → logprob: -20.75
    10. ' ' → logprob: -21.125

Token 448: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.016112959012389183
    2. ' -' → logprob: -4.141112804412842
    3. '1' → logprob: -9.51611328125
    4. '-i' → logprob: -12.26611328125
    5. '-I' → logprob: -16.26611328125
    6. ' ' → logprob: -16.39111328125
    7. '−' → logprob: -16.51611328125
    8. '   ' → logprob: -17.14111328125
    9. '()-' → logprob: -18.64111328125
    10. '–' → logprob: -19.01611328125

Token 449: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003178306156769395
    2. 'i' → logprob: -5.753178119659424
    3. ' ' → logprob: -15.378178596496582
    4. ' i' → logprob: -15.378178596496582
    5. '   ' → logprob: -16.753177642822266
    6. '`' → logprob: -17.753177642822266
    7. '-' → logprob: -18.628177642822266
    8. '```' → logprob: -18.753177642822266
    9. '[i' → logprob: -19.503177642822266
    10. '_i' → logprob: -19.753177642822266

Token 450: '-i' (ID: 18499)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.39923444390296936
    2. ' -' → logprob: -1.149234414100647
    3. '-i' → logprob: -4.399234294891357
    4. '-I' → logprob: -15.524234771728516
    5. '-
' → logprob: -15.899234771728516
    6. ' ' → logprob: -16.649234771728516
    7. '-j' → logprob: -17.524234771728516
    8. 'i' → logprob: -17.649234771728516
    9. '-il' → logprob: -17.649234771728516
    10. '−' → logprob: -18.149234771728516

Token 451: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014073748607188463
    2. ']=' → logprob: -7.001407146453857
    3. ' ]' → logprob: -7.626407146453857
    4. '=' → logprob: -11.876407623291016
    5. ')' → logprob: -15.001407623291016
    6. ']
' → logprob: -15.001407623291016
    7. '<|end|>' → logprob: -15.501407623291016
    8. ' =' → logprob: -16.126407623291016
    9. ')]' → logprob: -16.251407623291016
    10. ']+=' → logprob: -16.501407623291016

Token 452: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038047801703214645
    2. ' =' → logprob: -3.2880477905273438
    3. ']' → logprob: -12.413047790527344
    4. ']=' → logprob: -13.038047790527344
    5. '=
' → logprob: -16.288047790527344
    6. ')' → logprob: -16.913047790527344
    7. ')=' → logprob: -17.288047790527344
    8. '<|end|>' → logprob: -18.788047790527344
    9. '.=' → logprob: -19.038047790527344
    10. '=

' → logprob: -19.038047790527344

Token 453: ' mat' (ID: 2450)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -1.0325924449716695e-05
    2. ' mat' → logprob: -11.50001049041748
    3. '	mat' → logprob: -16.500009536743164
    4. '   ' → logprob: -17.375009536743164
    5. '(mat' → logprob: -18.500009536743164
    6. 'matrix' → logprob: -21.125009536743164
    7. 'mati' → logprob: -22.000009536743164
    8. 'ma' → logprob: -22.000009536743164
    9. ' ' → logprob: -22.125009536743164
    10. 'mata' → logprob: -22.375009536743164

Token 454: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -13.37500286102295
    3. '[I' → logprob: -14.00000286102295
    4. 'i' → logprob: -14.75000286102295
    5. '][' → logprob: -16.375003814697266
    6. '[j' → logprob: -16.500003814697266
    7. '<|end|>' → logprob: -17.250003814697266
    8. ' [' → logprob: -17.375003814697266
    9. '```' → logprob: -18.250003814697266
    10. '[
' → logprob: -18.250003814697266

Token 455: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007718668202869594
    2. '[j' → logprob: -7.250771999359131
    3. ']' → logprob: -9.750771522521973
    4. ' ][' → logprob: -13.250771522521973
    5. '[' → logprob: -13.625771522521973
    6. 'j' → logprob: -15.750771522521973
    7. '"][' → logprob: -16.62577247619629
    8. ')[' → logprob: -16.75077247619629
    9. '])' → logprob: -16.87577247619629
    10. ']][' → logprob: -17.00077247619629

Token 456: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.1008713702030946e-06
    2. ' j' → logprob: -13.125001907348633
    3. '[j' → logprob: -16.875001907348633
    4. ']' → logprob: -17.750001907348633
    5. '	j' → logprob: -18.250001907348633
    6. '   ' → logprob: -18.375001907348633
    7. '```' → logprob: -19.125001907348633
    8. '<|end|>' → logprob: -19.125001907348633
    9. ')' → logprob: -19.250001907348633
    10. ' ' → logprob: -19.750001907348633

Token 457: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 458: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17280292510986328
    2. '<|end|>' → logprob: -2.0478029251098633
    3. ' return' → logprob: -4.047802925109863
    4. '
' → logprob: -5.422802925109863
    5. '	return' → logprob: -5.922802925109863
    6. 'return' → logprob: -7.047802925109863
    7. '    
' → logprob: -7.047802925109863
    8. '  
' → logprob: -7.297802925109863
    9. '\n' → logprob: -7.422802925109863
    10. '       ' → logprob: -7.422802925109863

Token 459: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3696555495262146
    2. ' return' → logprob: -1.8696556091308594
    3. 'return' (adapté à ' return') → logprob: -1.8696556091308594
    4. '	return' → logprob: -7.744655609130859
    5. '
' → logprob: -9.36965560913086
    6. ' ' → logprob: -9.86965560913086
    7. '       ' → logprob: -10.24465560913086
    8. ':return' → logprob: -10.86965560913086
    9. '    
' → logprob: -10.99465560913086
    10. '```' → logprob: -11.86965560913086

Token 460: ' rotated' (ID: 93819)
  Prédit: 'rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.00015872348740231246
    2. ' rotated' → logprob: -8.750158309936523
    3. '(rot' → logprob: -16.625158309936523
    4. ' rot' → logprob: -17.375158309936523
    5. 'rotate' → logprob: -20.250158309936523
    6. '_rot' → logprob: -20.375158309936523
    7. 'rott' → logprob: -20.750158309936523
    8. '[' → logprob: -21.375158309936523
    9. '   ' → logprob: -21.375158309936523
    10. '.rot' → logprob: -21.750158309936523

Token 461: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 462: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.698698704596609e-05
    2. '
' → logprob: -9.375097274780273
    3. '

' → logprob: -11.875097274780273
    4. '<|end|>' → logprob: -13.000097274780273
    5. '  
' → logprob: -14.125097274780273
    6. '```' → logprob: -14.250097274780273
    7. '    
' → logprob: -14.375097274780273
    8. ' def' → logprob: -15.875097274780273
    9. '#' → logprob: -16.125097274780273
    10. ' 
' → logprob: -16.375097274780273

Token 463: ' mirror' (ID: 28026)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -1.2119039297103882
    2. 'extract' → logprob: -1.7119039297103882
    3. 'find' → logprob: -1.9619039297103882
    4. ' extract' → logprob: -2.3369040489196777
    5. 'search' → logprob: -2.4619040489196777
    6. ' main' → logprob: -2.7119040489196777
    7. 'main' → logprob: -3.2119040489196777
    8. ' search' → logprob: -4.211904048919678
    9. 'solve' → logprob: -4.711904048919678
    10. 'rotate' → logprob: -4.961904048919678

Token 464: '(mat' (ID: 83002)
  Prédit: '_horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_horizontal' → logprob: -0.8740400075912476
    2. '_' → logprob: -1.1240400075912476
    3. '_h' → logprob: -1.3740400075912476
    4. '_x' → logprob: -6.249040126800537
    5. '_vert' → logprob: -6.499040126800537
    6. '_vertical' → logprob: -7.249040126800537
    7. '_H' → logprob: -8.999039649963379
    8. '_y' → logprob: -9.249039649963379
    9. '_(' → logprob: -9.249039649963379
    10. '(mat' → logprob: -10.749039649963379

Token 465: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10397981107234955
    2. '):
' → logprob: -2.3539798259735107
    3. ')' → logprob: -5.603979587554932
    4. '(mat' → logprob: -9.97898006439209
    5. '):
' → logprob: -10.60398006439209
    6. ' ):' → logprob: -12.35398006439209
    7. '):

' → logprob: -12.35398006439209
    8. ')
' → logprob: -14.35398006439209
    9. ')：' → logprob: -14.72898006439209
    10. ',' → logprob: -14.85398006439209

Token 466: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11556855589151382
    2. '(mat' → logprob: -2.2405686378479004
    3. ' mat' → logprob: -6.9905686378479
    4. 'mat' → logprob: -6.9905686378479
    5. '[
' → logprob: -8.365568161010742
    6. '(m' → logprob: -8.615568161010742
    7. '(' → logprob: -8.865568161010742
    8. 'def' → logprob: -8.990568161010742
    9. '[' → logprob: -9.490568161010742
    10. '
' → logprob: -10.240568161010742

Token 467: ' """
' (ID: 7037)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.17462465167045593
    2. '   ' → logprob: -1.9246246814727783
    3. ' p' → logprob: -4.299624443054199
    4. 'return' → logprob: -8.2996244430542
    5. '"""
' (adapté à ' """
') → logprob: -8.6746244430542
    6. '[
' → logprob: -8.7996244430542
    7. ' return' → logprob: -9.7996244430542
    8. '
' → logprob: -10.2996244430542
    9. '[p' → logprob: -10.5496244430542
    10. '(p' → logprob: -11.2996244430542

Token 468: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02971751242876053
    2. '"""
' → logprob: -3.904717445373535
    3. 'def' → logprob: -4.779717445373535
    4. '"""' → logprob: -8.154717445373535
    5. '
' → logprob: -8.654717445373535
    6. '"' → logprob: -8.904717445373535
    7. '"
' → logprob: -10.279717445373535
    8. '```' → logprob: -10.779717445373535
    9. '    ' → logprob: -11.154717445373535
    10. '  ' → logprob: -11.529717445373535

Token 469: ' Retour' (ID: 146830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8529488444328308
    2. 'def' → logprob: -0.9779488444328308
    3. 'return' → logprob: -1.7279489040374756
    4. '
' → logprob: -4.7279486656188965
    5. '"""
' → logprob: -4.7279486656188965
    6. ' return' → logprob: -6.7279486656188965
    7. '"""' → logprob: -7.3529486656188965
    8. '#' → logprob: -8.477949142456055
    9. '[::-' → logprob: -9.227949142456055
    10. '    
' → logprob: -9.352949142456055

Token 470: 'ne' (ID: 611)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1885787397623062
    2. 'ner' → logprob: -2.4385788440704346
    3. 'ne' → logprob: -2.5635788440704346
    4. '   ' → logprob: -5.1885786056518555
    5. '[n' → logprob: -7.6885786056518555
    6. 'neur' → logprob: -7.8135786056518555
    7. 'nne' → logprob: -7.9385786056518555
    8. ' mat' → logprob: -8.813578605651855
    9. ' def' → logprob: -8.938578605651855
    10. ' n' → logprob: -9.063578605651855

Token 471: ' une' (ID: 2463)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.08398600667715073
    2. '[' → logprob: -2.5839860439300537
    3. '[m' → logprob: -5.458985805511475
    4. '[list' → logprob: -9.083986282348633
    5. '[i' → logprob: -9.333986282348633
    6. '[l' → logprob: -9.583986282348633
    7. '[row' → logprob: -10.083986282348633
    8. '[[' → logprob: -10.083986282348633
    9. '[p' → logprob: -10.083986282348633
    10. ' mat' → logprob: -10.208986282348633

Token 472: ' matr' (ID: 25095)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6632024049758911
    2. '[' → logprob: -1.1632024049758911
    3. '[m' → logprob: -2.4132022857666016
    4. 'mat' → logprob: -3.6632022857666016
    5. '[new' → logprob: -4.413202285766602
    6. ' mat' → logprob: -4.538202285766602
    7. '[i' → logprob: -4.538202285766602
    8. '[n' → logprob: -4.913202285766602
    9. '[col' → logprob: -6.163202285766602
    10. '[
' → logprob: -6.163202285766602

Token 473: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.30090346932411194
    2. 'atrice' → logprob: -1.4259034395217896
    3. 'rice' → logprob: -4.4259033203125
    4. 'ce' → logprob: -6.1759033203125
    5. 'at' → logprob: -6.5509033203125
    6. 'ée' → logprob: -7.1759033203125
    7. '[' → logprob: -7.4259033203125
    8. 'tr' → logprob: -7.5509033203125
    9. 'ix' → logprob: -7.9259033203125
    10. 'e' → logprob: -8.0509033203125

Token 474: ' par' (ID: 686)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.5546515583992004
    2. '(mat' → logprob: -1.8046514987945557
    3. ' mat' → logprob: -2.4296514987945557
    4. ' horizont' → logprob: -2.8046514987945557
    5. ' horizontal' → logprob: -3.3046514987945557
    6. '[' → logprob: -3.5546514987945557
    7. ' sym' → logprob: -4.554651737213135
    8. 'horizontal' → logprob: -5.054651737213135
    9. '   ' → logprob: -5.304651737213135
    10. '[m' → logprob: -5.804651737213135

Token 475: ' miroir' (ID: 187121)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.234981507062912
    2. ' ligne' → logprob: -2.6099815368652344
    3. ' réflexion' → logprob: -3.4849815368652344
    4. '[' → logprob: -3.9849815368652344
    5. 'ren' → logprob: -4.609981536865234
    6. 'l' → logprob: -4.609981536865234
    7. 'sym' → logprob: -4.859981536865234
    8. 'une' → logprob: -4.984981536865234
    9. 'mat' → logprob: -5.484981536865234
    10. 'mi' → logprob: -5.734981536865234

Token 476: ' horizontal' (ID: 25511)
  Prédit: '(mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mat' → logprob: -0.16230930387973785
    2. ' horizontal' → logprob: -2.412309408187866
    3. 'horizontal' → logprob: -3.662309408187866
    4. '   ' → logprob: -4.412309169769287
    5. ' horizont' → logprob: -4.412309169769287
    6. ' mat' → logprob: -5.787309169769287
    7. ' vertical' → logprob: -6.412309169769287
    8. 'vertical' → logprob: -6.662309169769287
    9. 'mat' → logprob: -6.787309169769287
    10. '_horizontal' → logprob: -7.162309169769287

Token 477: '
' (ID: 198)
  Prédit: '(mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mat' → logprob: -0.0029377636965364218
    2. '   ' → logprob: -6.1279377937316895
    3. ' (' → logprob: -7.8779377937316895
    4. 'def' → logprob: -8.502937316894531
    5. 'mat' → logprob: -9.377937316894531
    6. '(m' → logprob: -10.252937316894531
    7. ' mat' → logprob: -11.252937316894531
    8. '
' → logprob: -11.627937316894531
    9. '(matrix' → logprob: -12.127937316894531
    10. ',' → logprob: -12.127937316894531

Token 478: '   ' (ID: 271)
  Prédit: '(mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mat' → logprob: -0.0016172155737876892
    2. '   ' → logprob: -6.751617431640625
    3. 'def' → logprob: -7.876617431640625
    4. '(m' → logprob: -11.001617431640625
    5. ' (' → logprob: -11.251617431640625
    6. ':
' → logprob: -11.626617431640625
    7. '
' → logprob: -11.751617431640625
    8. ',' → logprob: -12.251617431640625
    9. '(matrix' → logprob: -12.751617431640625
    10. '```' → logprob: -13.001617431640625

Token 479: ' """
' (ID: 7037)
  Prédit: '(mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mat' → logprob: -0.014233439229428768
    2. '   ' → logprob: -4.389233589172363
    3. '):
' → logprob: -7.139233589172363
    4. '"""
' (adapté à ' """
') → logprob: -8.139233589172363
    5. ')
' → logprob: -8.764233589172363
    6. 'mat' → logprob: -8.889233589172363
    7. '
' → logprob: -9.389233589172363
    8. '(m' → logprob: -9.889233589172363
    9. 'def' → logprob: -10.014233589172363
    10. ')' → logprob: -10.139233589172363

Token 480: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3550602197647095
    2. 'return' → logprob: -1.6050602197647095
    3. 'p' → logprob: -2.85506010055542
    4. ' return' → logprob: -3.60506010055542
    5. 'def' → logprob: -4.85506010055542
    6. ' p' → logprob: -5.23006010055542
    7. '
' → logprob: -9.730060577392578
    8. '```' → logprob: -11.355060577392578
    9. 'n' → logprob: -11.730060577392578
    10. ' ' → logprob: -12.230060577392578

Token 481: ' return' (ID: 622)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5330080986022949
    2. 'return' (adapté à ' return') → logprob: -1.033008098602295
    3. ' return' → logprob: -3.158008098602295
    4. ' p' → logprob: -4.533008098602295
    5. '   ' → logprob: -5.533008098602295
    6. ' ' → logprob: -12.533008575439453
    7. 'def' → logprob: -12.783008575439453
    8. '[p' → logprob: -12.908008575439453
    9. '  ' → logprob: -13.533008575439453
    10. 'n' → logprob: -13.533008575439453

Token 482: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004170764237642288
    2. ' [' → logprob: -5.504170894622803
    3. '[list' → logprob: -10.254170417785645
    4. '[mid' → logprob: -11.004170417785645
    5. '[m' → logprob: -11.254170417785645
    6. '[row' → logprob: -11.379170417785645
    7. '[i' → logprob: -12.129170417785645
    8. '[mem' → logprob: -13.004170417785645
    9. ' mat' → logprob: -13.379170417785645
    10. '[msg' → logprob: -13.504170417785645

Token 483: 'list' (ID: 2641)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.0013066678075119853
    2. 'list' → logprob: -6.751306533813477
    3. ' row' → logprob: -9.001306533813477
    4. 'line' → logprob: -11.251306533813477
    5. 'ligne' → logprob: -16.126306533813477
    6. 'r' → logprob: -17.751306533813477
    7. 'liste' → logprob: -19.126306533813477
    8. ' list' → logprob: -19.376306533813477
    9. 'lst' → logprob: -19.751306533813477
    10. '	row' → logprob: -19.876306533813477

Token 484: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.12692978978157043
    2. 're' → logprob: -2.126929759979248
    3. 'row' → logprob: -13.751930236816406
    4. '(row' → logprob: -14.751930236816406
    5. '[::-' → logprob: -16.001930236816406
    6. 'rev' → logprob: -16.126930236816406
    7. '(' → logprob: -16.501930236816406
    8. ' reversed' → logprob: -17.126930236816406
    9. '(range' → logprob: -19.001930236816406
    10. '_re' → logprob: -19.751930236816406

Token 485: 'versed' (ID: 76479)
  Prédit: 'versed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versed' → logprob: -0.008633834309875965
    2. 're' → logprob: -4.758633613586426
    3. 'row' → logprob: -11.383633613586426
    4. '(re' → logprob: -12.133633613586426
    5. 'vers' → logprob: -13.508633613586426
    6. 'verse' → logprob: -14.258633613586426
    7. 'r' → logprob: -15.883633613586426
    8. 'v' → logprob: -16.383634567260742
    9. 'versal' → logprob: -16.633634567260742
    10. 'ver' → logprob: -17.383634567260742

Token 486: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.0012418980477377772
    2. 'row' → logprob: -7.001241683959961
    3. '(l' → logprob: -8.501241683959961
    4. 'ligne' → logprob: -9.376241683959961
    5. '(r' → logprob: -10.251241683959961
    6. '(range' → logprob: -12.501241683959961
    7. '(line' → logprob: -13.751241683959961
    8. '(' → logprob: -14.126241683959961
    9. ' row' → logprob: -14.251241683959961
    10. '=row' → logprob: -15.376241683959961

Token 487: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.029840506613254547
    2. '(mat' → logprob: -3.5298404693603516
    3. '(m' → logprob: -10.029840469360352
    4. '(row' → logprob: -10.904840469360352
    5. '()))' → logprob: -11.154840469360352
    6. '(' → logprob: -12.654840469360352
    7. ' ))' → logprob: -12.904840469360352
    8. '))
' → logprob: -13.029840469360352
    9. ')' → logprob: -13.529840469360352
    10. '(r' → logprob: -13.654840469360352

Token 488: ' for' (ID: 395)
  Prédit: '(mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mat' → logprob: -0.0035080108791589737
    2. ')' → logprob: -6.6285080909729
    3. 'for' → logprob: -6.7535080909729
    4. ' for' → logprob: -7.7535080909729
    5. ']' → logprob: -8.253507614135742
    6. '   ' → logprob: -8.378507614135742
    7. '(m' → logprob: -10.253507614135742
    8. '(row' → logprob: -11.128507614135742
    9. '(' → logprob: -11.628507614135742
    10. '(matrix' → logprob: -12.253507614135742

Token 489: ' row' (ID: 5225)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.00033558503491804004
    2. ' mat' → logprob: -8.000335693359375
    3. '	mat' → logprob: -16.750335693359375
    4. '(mat' → logprob: -18.500335693359375
    5. '_mat' → logprob: -19.625335693359375
    6. 'm' → logprob: -20.375335693359375
    7. 'Mat' → logprob: -20.500335693359375
    8. ' ' → logprob: -21.125335693359375
    9. '.mat' → logprob: -21.375335693359375
    10. ' мат' → logprob: -21.500335693359375

Token 490: ' in' (ID: 306)
  Prédit: ' mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mat' → logprob: -0.22503890097141266
    2. 'mat' → logprob: -1.7250388860702515
    3. ' in' → logprob: -3.850039005279541
    4. '(mat' → logprob: -6.475039005279541
    5. 'in' → logprob: -7.725039005279541
    6. '	mat' → logprob: -9.475038528442383
    7. '_mat' → logprob: -12.475038528442383
    8. ' мат' → logprob: -13.100038528442383
    9. '<|end|>' → logprob: -13.600038528442383
    10. ')' → logprob: -14.475038528442383

Token 491: ' mat' (ID: 2450)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.0011703446507453918
    2. ' mat' → logprob: -6.7511701583862305
    3. '(mat' → logprob: -15.87617015838623
    4. '	mat' → logprob: -17.001171112060547
    5. '_mat' → logprob: -19.126171112060547
    6. 'Mat' → logprob: -20.126171112060547
    7. ' мат' → logprob: -21.501171112060547
    8. '.mat' → logprob: -21.876171112060547
    9. 'mati' → logprob: -22.001171112060547
    10. '
' → logprob: -23.126171112060547

Token 492: ']


' (ID: 52447)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00020985817536711693
    2. ')]' → logprob: -8.50020980834961
    3. ' ]' → logprob: -12.87520980834961
    4. '()]' → logprob: -13.00020980834961
    5. ']
' → logprob: -13.62520980834961
    6. '`]' → logprob: -16.00020980834961
    7. '])' → logprob: -17.00020980834961
    8. ']

' → logprob: -17.12520980834961
    9. ']}' → logprob: -17.37520980834961
    10. ']]' → logprob: -17.87520980834961

Token 493: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.051066520740278e-05
    2. '
' → logprob: -10.000060081481934
    3. '

' → logprob: -11.625060081481934
    4. '<|end|>' → logprob: -12.875060081481934
    5. '  
' → logprob: -13.625060081481934
    6. '#' → logprob: -14.125060081481934
    7. '    
' → logprob: -14.875060081481934
    8. '```' → logprob: -15.125060081481934
    9. ' def' → logprob: -15.375060081481934
    10. '


' → logprob: -15.750060081481934

Token 494: ' generate' (ID: 10419)
  Prédit: ' extract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' extract' → logprob: -0.26389598846435547
    2. 'extract' → logprob: -1.6388959884643555
    3. ' find' → logprob: -4.2638959884643555
    4. ' main' → logprob: -5.1388959884643555
    5. ' parse' → logprob: -5.6388959884643555
    6. ' get' → logprob: -6.6388959884643555
    7. 'all' → logprob: -6.7638959884643555
    8. ' all' → logprob: -7.0138959884643555
    9. 'transform' → logprob: -7.0138959884643555
    10. 'parse' → logprob: -7.1388959884643555

Token 495: '_transform' (ID: 46795)
  Prédit: '_all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_all' → logprob: -1.1053162813186646
    2. '_pattern' → logprob: -1.1053162813186646
    3. '_patterns' → logprob: -1.9803162813186646
    4. '_w' → logprob: -3.355316162109375
    5. '_vari' → logprob: -3.980316162109375
    6. '_positions' → logprob: -4.105316162109375
    7. '_possible' → logprob: -4.105316162109375
    8. '_p' → logprob: -4.230316162109375
    9. '_candidates' → logprob: -4.355316162109375
    10. '_square' → logprob: -4.980316162109375

Token 496: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.026806551963090897
    2. 'ation' → logprob: -4.276806354522705
    3. 's' → logprob: -4.526806354522705
    4. '_' → logprob: -6.776806354522705
    5. 'ed' → logprob: -7.526806354522705
    6. '_s' → logprob: -10.901806831359863
    7. 'es' → logprob: -11.151806831359863
    8. '_at' → logprob: -11.401806831359863
    9. '_matrix' → logprob: -12.026806831359863
    10. 'ers' → logprob: -12.776806831359863

Token 497: '(pattern' (ID: 62660)
  Prédit: '(mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mat' → logprob: -0.015978652983903885
    2. '(' → logprob: -4.265978813171387
    3. '(matrix' → logprob: -7.015978813171387
    4. '(p' → logprob: -7.140978813171387
    5. '(m' → logprob: -9.765978813171387
    6. ' (' → logprob: -10.640978813171387
    7. '(Mat' → logprob: -11.765978813171387
    8. '(s' → logprob: -12.140978813171387
    9. '(base' → logprob: -12.640978813171387
    10. '(original' → logprob: -13.140978813171387

Token 498: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01117749884724617
    2. '):
' → logprob: -4.6361775398254395
    3. '(p' → logprob: -6.7611775398254395
    4. ',' → logprob: -8.761177062988281
    5. '(mat' → logprob: -10.386177062988281
    6. ')' → logprob: -11.011177062988281
    7. ' ):' → logprob: -11.386177062988281
    8. '(pattern' → logprob: -11.636177062988281
    9. '):
' → logprob: -11.886177062988281
    10. '(' → logprob: -12.011177062988281

Token 499: '   ' (ID: 271)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.42407843470573425
    2. '   ' → logprob: -1.2990784645080566
    3. '(pattern' → logprob: -2.7990784645080566
    4. '(s' → logprob: -5.549078464508057
    5. '(mat' → logprob: -6.049078464508057
    6. 's' → logprob: -6.549078464508057
    7. ':
' → logprob: -6.799078464508057
    8. ':' → logprob: -7.049078464508057
    9. '(' → logprob: -7.549078464508057
    10. '():
' → logprob: -8.299077987670898

Token 500: ' """
' (ID: 7037)
  Prédit: ' transformations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' transformations' → logprob: -0.08756456524133682
    2. '   ' → logprob: -3.087564468383789
    3. ' transforms' → logprob: -3.837564468383789
    4. 'transform' → logprob: -4.212564468383789
    5. ' transform' → logprob: -7.462564468383789
    6. 'trans' → logprob: -7.462564468383789
    7. '"""
' (adapté à ' """
') → logprob: -8.337564468383789
    8. ' """
' → logprob: -9.462564468383789
    9. '[
' → logprob: -9.462564468383789
    10. '
' → logprob: -9.587564468383789

Token 501: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2434287816286087
    2. '"""
' → logprob: -1.6184288263320923
    3. ' """
' → logprob: -4.743428707122803
    4. '"""' → logprob: -5.243428707122803
    5. '"' → logprob: -6.118428707122803
    6. '    ' → logprob: -7.368428707122803
    7. '"
' → logprob: -7.618428707122803
    8. '
' → logprob: -8.868429183959961
    9. '[
' → logprob: -9.618429183959961
    10. '#' → logprob: -9.743429183959961

Token 502: ' Gén' (ID: 71828)
  Prédit: ' transformations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' transformations' → logprob: -0.16449090838432312
    2. ' transforms' → logprob: -2.4144909381866455
    3. 'trans' → logprob: -4.039490699768066
    4. 'transform' → logprob: -4.164490699768066
    5. ' """
' → logprob: -4.414490699768066
    6. '"""
' → logprob: -4.664490699768066
    7. '   ' → logprob: -5.289490699768066
    8. '#' → logprob: -7.164490699768066
    9. ' transform' → logprob: -8.039490699768066
    10. 'Transforms' → logprob: -8.414490699768066

Token 503: 'ère' (ID: 4346)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.25477510690689087
    2. 'ère' → logprob: -1.504775047302246
    3. 'ere' → logprob: -6.879775047302246
    4. 'érer' → logprob: -7.004775047302246
    5. 'èr' → logprob: -7.879775047302246
    6. '"""
' → logprob: -8.629775047302246
    7. 'reate' → logprob: -9.754775047302246
    8. '
' → logprob: -9.879775047302246
    9. 'rate' → logprob: -10.254775047302246
    10. 'enerate' → logprob: -10.629775047302246

Token 504: ' toutes' (ID: 17502)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.7335565090179443
    2. ' [
' → logprob: -1.7335565090179443
    3. '[' → logprob: -2.2335565090179443
    4. '[]' → logprob: -2.8585565090179443
    5. ' les' → logprob: -2.8585565090179443
    6. ' toutes' → logprob: -3.6085565090179443
    7. ' all' → logprob: -3.9835565090179443
    8. ' une' → logprob: -4.108556747436523
    9. 'all' → logprob: -4.358556747436523
    10. '   ' → logprob: -4.483556747436523

Token 505: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.03312838077545166
    2. 'les' → logprob: -3.533128261566162
    3. '[' → logprob: -7.408128261566162
    4. ' transformations' → logprob: -7.783128261566162
    5. ' ' → logprob: -7.908128261566162
    6. '_' → logprob: -8.03312873840332
    7. 's' → logprob: -8.28312873840332
    8. 'Les' → logprob: -8.53312873840332
    9. ' huit' → logprob: -8.78312873840332
    10. '   ' → logprob: -9.03312873840332

Token 506: ' transformations' (ID: 94732)
  Prédit: 'transform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'transform' → logprob: -0.19076839089393616
    2. ' transformations' → logprob: -1.8157683610916138
    3. '[' → logprob: -5.440768241882324
    4. 'trans' → logprob: -5.940768241882324
    5. '[
' → logprob: -6.440768241882324
    6. 'poss' → logprob: -7.440768241882324
    7. ' transform' → logprob: -7.940768241882324
    8. ' transforms' → logprob: -8.065768241882324
    9. 'possible' → logprob: -8.065768241882324
    10. 'vari' → logprob: -9.065768241882324

Token 507: ' du' (ID: 1462)
  Prédit: ' possibles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possibles' → logprob: -0.09580433368682861
    2. 'du' → logprob: -3.845804214477539
    3. '[' → logprob: -3.970804214477539
    4. 'possible' → logprob: -4.220804214477539
    5. '[
' → logprob: -4.970804214477539
    6. ' possible' → logprob: -4.970804214477539
    7. ' du' → logprob: -5.220804214477539
    8. 'poss' → logprob: -5.595804214477539
    9. '(' → logprob: -6.345804214477539
    10. '(pattern' → logprob: -6.470804214477539

Token 508: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.018529511988162994
    2. ' pattern' → logprob: -4.018529415130615
    3. '[
' → logprob: -8.143529891967773
    4. '[' → logprob: -10.018529891967773
    5. 'pat' → logprob: -10.643529891967773
    6. '[p' → logprob: -11.643529891967773
    7. 'p' → logprob: -12.393529891967773
    8. '(pattern' → logprob: -12.893529891967773
    9. 'patterns' → logprob: -13.393529891967773
    10. ' [
' → logprob: -13.768529891967773

Token 509: ' :' (ID: 712)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.41753435134887695
    2. ':' → logprob: -1.292534351348877
    3. ' :' → logprob: -3.542534351348877
    4. '(' → logprob: -5.167534351348877
    5. 's' → logprob: -5.417534351348877
    6. ' possibles' → logprob: -5.667534351348877
    7. '[' → logprob: -5.792534351348877
    8. ' =' → logprob: -5.917534351348877
    9. ',' → logprob: -5.917534351348877
    10. '(pattern' → logprob: -6.042534351348877

Token 510: ' rotations' (ID: 141136)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.3969719409942627
    2. ' transformations' → logprob: -1.8969719409942627
    3. ' [
' → logprob: -2.0219719409942627
    4. 'transform' → logprob: -4.021971702575684
    5. ' transforms' → logprob: -4.646971702575684
    6. ' [' → logprob: -5.146971702575684
    7. '[' → logprob: -5.396971702575684
    8. '
' → logprob: -5.521971702575684
    9. '   ' → logprob: -7.521971702575684
    10. 'trans' → logprob: -7.771971702575684

Token 511: ' (' (ID: 350)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.1798529624938965
    2. '(' → logprob: -1.5548529624938965
    3. '90' → logprob: -1.5548529624938965
    4. ' (' → logprob: -2.6798529624938965
    5. ',' → logprob: -2.8048529624938965
    6. ' [' → logprob: -2.9298529624938965
    7. '[' → logprob: -3.1798529624938965
    8. ' et' → logprob: -4.4298529624938965
    9. ' =' → logprob: -5.0548529624938965
    10. ' ' → logprob: -5.5548529624938965

Token 512: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2699655294418335
    2. '90' → logprob: -1.5199655294418335
    3. '[' → logprob: -4.644965648651123
    4. ' ' → logprob: -5.894965648651123
    5. ' [' → logprob: -6.019965648651123
    6. ')' → logprob: -6.519965648651123
    7. ' à' → logprob: -7.519965648651123
    8. 'def' → logprob: -8.144965171813965
    9. ',' → logprob: -9.144965171813965
    10. '[
' → logprob: -9.144965171813965

Token 513: '°,' (ID: 148177)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07240372151136398
    2. '°,' → logprob: -2.6974036693573
    3. '°' → logprob: -6.572403907775879
    4. '90' → logprob: -7.197403907775879
    5. ' ,' → logprob: -8.572403907775879
    6. 'º' → logprob: -9.697403907775879
    7. '360' → logprob: -11.197403907775879
    8. '180' → logprob: -11.697403907775879
    9. ',
' → logprob: -11.697403907775879
    10. '0' → logprob: -12.322403907775879

Token 514: '90' (ID: 2744)
  Prédit: '90'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.07894299924373627
    2. ' ' → logprob: -2.5789430141448975
    3. '9' → logprob: -10.203943252563477
    4. ',' → logprob: -11.828943252563477
    5. ' ' → logprob: -13.078943252563477
    6. 'def' → logprob: -13.203943252563477
    7. '   ' → logprob: -13.328943252563477
    8. '
' → logprob: -14.078943252563477
    9. '45' → logprob: -14.203943252563477
    10. '  ' → logprob: -14.953943252563477

Token 515: '°,' (ID: 148177)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038980069803074
    2. '°,' → logprob: -8.00039005279541
    3. '°' → logprob: -10.12539005279541
    4. ' ,' → logprob: -11.87539005279541
    5. '90' → logprob: -12.50039005279541
    6. ',
' → logprob: -13.87539005279541
    7. '180' → logprob: -14.37539005279541
    8. '),' → logprob: -14.37539005279541
    9. ',,' → logprob: -15.37539005279541
    10. '‌,' → logprob: -15.75039005279541

Token 516: '180' (ID: 7521)
  Prédit: '180'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '1' → logprob: -17.625
    4. '```' → logprob: -18.625
    5. ',' → logprob: -18.875
    6. '   ' → logprob: -19.0
    7. ')' → logprob: -19.125
    8. 'def' → logprob: -19.25
    9. '18' → logprob: -19.5
    10. '
' → logprob: -19.75

Token 517: '°,' (ID: 148177)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.160296231508255
    2. '°,' → logprob: -1.9102962017059326
    3. '°' → logprob: -9.660296440124512
    4. ' ,' → logprob: -12.535296440124512
    5. '‌,' → logprob: -12.910296440124512
    6. '®,' → logprob: -14.160296440124512
    7. '),' → logprob: -15.410296440124512
    8. ',
' → logprob: -15.535296440124512
    9. '‍,' → logprob: -15.535296440124512
    10. 'º' → logprob: -15.660296440124512

Token 518: '270' (ID: 17820)
  Prédit: '270'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '270' → logprob: -0.0010336418636143208
    2. ' ' → logprob: -6.876033782958984
    3. ')' → logprob: -15.001033782958984
    4. '```' → logprob: -15.751033782958984
    5. '360' → logprob: -15.876033782958984
    6. ',' → logprob: -17.001033782958984
    7. ' ' → logprob: -17.126033782958984
    8. '   ' → logprob: -17.376033782958984
    9. '275' → logprob: -17.626033782958984
    10. '180' → logprob: -17.876033782958984

Token 519: '°' (ID: 6793)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27467596530914307
    2. '°' → logprob: -1.774675965309143
    3. ')' → logprob: -3.5246758460998535
    4. '),' → logprob: -3.7746758460998535
    5. '°,' → logprob: -4.0246758460998535
    6. ',)' → logprob: -8.524676322937012
    7. ',),' → logprob: -9.649676322937012
    8. ' ' → logprob: -9.899676322937012
    9. '​' → logprob: -11.899676322937012
    10. ' ,' → logprob: -12.399676322937012

Token 520: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016690857708454132
    2. '),' → logprob: -4.141690731048584
    3. ',' → logprob: -7.391690731048584
    4. ',)' → logprob: -10.766691207885742
    5. ' )' → logprob: -11.516691207885742
    6. ')
' → logprob: -12.516691207885742
    7. '),
' → logprob: -13.516691207885742
    8. ' ),' → logprob: -13.891691207885742
    9. ')`' → logprob: -15.016691207885742
    10. ',),' → logprob: -15.016691207885742

Token 521: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7625716328620911
    2. ',' → logprob: -0.8875716328620911
    3. '   ' → logprob: -2.2625715732574463
    4. '),' → logprob: -4.512571811676025
    5. ' et' → logprob: -5.762571811676025
    6. ' ,' → logprob: -6.637571811676025
    7. 'et' → logprob: -8.012571334838867
    8. ' +' → logprob: -8.387571334838867
    9. '):' → logprob: -8.512571334838867
    10. ' )' → logprob: -8.637571334838867

Token 522: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5032882690429688
    2. ')' → logprob: -1.7532882690429688
    3. ' et' → logprob: -2.1282882690429688
    4. '   ' → logprob: -2.8782882690429688
    5. 'et' (adapté à ' et') → logprob: -3.7532882690429688
    6. '),' → logprob: -5.003288269042969
    7. ' and' → logprob: -5.253288269042969
    8. ' ,' → logprob: -6.003288269042969
    9. 'and' → logprob: -6.253288269042969
    10. ',
' → logprob: -6.628288269042969

Token 523: ' miroir' (ID: 187121)
  Prédit: 'mi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mi' → logprob: -1.5840545892715454
    2. 'mir' → logprob: -1.8340545892715454
    3. ' les' → logprob: -2.209054470062256
    4. 'les' → logprob: -2.334054470062256
    5. ' reflections' → logprob: -2.459054470062256
    6. ' miro' → logprob: -2.709054470062256
    7. ' mir' → logprob: -2.834054470062256
    8. ' miroir' → logprob: -2.834054470062256
    9. 'mirror' → logprob: -3.084054470062256
    10. 'm' → logprob: -3.709054470062256

Token 524: ' de' (ID: 334)
  Prédit: ' horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' horizontal' → logprob: -0.2777595520019531
    2. 'horizontal' → logprob: -1.9027595520019531
    3. '(horizontal' → logprob: -3.402759552001953
    4. ' horizont' → logprob: -3.527759552001953
    5. '.' → logprob: -4.652759552001953
    6. ',' → logprob: -4.777759552001953
    7. ' (' → logprob: -5.152759552001953
    8. '(' → logprob: -6.652759552001953
    9. ' horiz' → logprob: -6.777759552001953
    10. 's' → logprob: -6.902759552001953

Token 525: ' chacune' (ID: 127465)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.8246052265167236
    2. 'pattern' → logprob: -1.3246052265167236
    3. ' chacune' → logprob: -1.6996052265167236
    4. 'cha' → logprob: -3.1996052265167236
    5. ' pattern' → logprob: -3.4496052265167236
    6. ' chaque' → logprob: -3.9496052265167236
    7. 'l' → logprob: -4.8246049880981445
    8. ' chac' → logprob: -5.8246049880981445
    9. 'base' → logprob: -6.3246049880981445
    10. ' ch' → logprob: -6.8246049880981445

Token 526: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3340729773044586
    2. ',' → logprob: -2.959073066711426
    3. '.
' → logprob: -3.209073066711426
    4. '.' → logprob: -3.334073066711426
    5. ' (' → logprob: -3.334073066711426
    6. '(' → logprob: -3.709073066711426
    7. '(p' → logprob: -3.709073066711426
    8. '[
' → logprob: -4.209073066711426
    9. '[' → logprob: -4.709073066711426
    10. '(
' → logprob: -4.959073066711426

Token 527: ' au' (ID: 2791)
  Prédit: ' soit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.8235412836074829
    2. '   ' → logprob: -1.323541283607483
    3. ' return' → logprob: -2.8235411643981934
    4. ' so' → logprob: -3.0735411643981934
    5. ' resulting' → logprob: -3.3235411643981934
    6. 'so' → logprob: -3.9485411643981934
    7. ' donc' → logprob: -4.073541164398193
    8. 'return' → logprob: -4.198541164398193
    9. ' yielding' → logprob: -4.323541164398193
    10. ' ce' → logprob: -4.448541164398193

Token 528: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.3218950629234314
    2. ' total' → logprob: -1.3218951225280762
    3. 'final' → logprob: -5.071895122528076
    4. ' totale' → logprob: -6.696895122528076
    5. ' final' → logprob: -7.571895122528076
    6. 'tour' → logprob: -9.446894645690918
    7. '_total' → logprob: -9.821894645690918
    8. '-total' → logprob: -9.821894645690918
    9. '   ' → logprob: -10.071894645690918
    10. 'complete' → logprob: -10.321894645690918

Token 529: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.006567348726093769
    2. ' ' → logprob: -6.131567478179932
    3. ' huit' → logprob: -6.381567478179932
    4. '=' → logprob: -6.506567478179932
    5. ' =' → logprob: -7.506567478179932
    6. ' eight' → logprob: -8.006567001342773
    7. 'eight' → logprob: -9.131567001342773
    8. '   ' → logprob: -9.506567001342773
    9. ' acht' → logprob: -9.631567001342773
    10. ' ocho' → logprob: -10.756567001342773

Token 530: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -9.93710636976175e-05
    2. ' ' → logprob: -9.250099182128906
    3. '   ' → logprob: -13.250099182128906
    4. 'eight' → logprob: -14.375099182128906
    5. '=' → logprob: -15.500099182128906
    6. ' eight' → logprob: -16.125099182128906
    7. '８' → logprob: -16.125099182128906
    8. '
' → logprob: -16.250099182128906
    9. '```' → logprob: -16.250099182128906
    10. ' huit' → logprob: -17.125099182128906

Token 531: ' variantes' (ID: 169119)
  Prédit: ' transformations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' transformations' → logprob: -0.6595990657806396
    2. '.' → logprob: -0.9095990657806396
    3. 'transform' → logprob: -3.4095990657806396
    4. ')' → logprob: -4.534599304199219
    5. '```' → logprob: -4.784599304199219
    6. ']' → logprob: -5.034599304199219
    7. ' ' → logprob: -5.409599304199219
    8. ':' → logprob: -5.784599304199219
    9. ' transform' → logprob: -6.034599304199219
    10. ').' → logprob: -6.659599304199219

Token 532: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022052325308322906
    2. ':' → logprob: -4.64705228805542
    3. '.' → logprob: -5.14705228805542
    4. ':
' → logprob: -5.39705228805542
    5. '
' → logprob: -7.27205228805542
    6. 'def' → logprob: -8.022052764892578
    7. '.
' → logprob: -8.397052764892578
    8. '):
' → logprob: -8.647052764892578
    9. '(' → logprob: -9.397052764892578
    10. ',' → logprob: -9.897052764892578

Token 533: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004269812779966742
    2. '"""
' → logprob: -8.50042724609375
    3. '```' → logprob: -8.75042724609375
    4. ')' → logprob: -10.75042724609375
    5. '"""' → logprob: -11.12542724609375
    6. 'def' → logprob: -11.75042724609375
    7. '    
' → logprob: -12.37542724609375
    8. '``' → logprob: -13.25042724609375
    9. '
' → logprob: -13.37542724609375
    10. '<|end|>' → logprob: -13.37542724609375

Token 534: ' Retour' (ID: 146830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005475530633702874
    2. '```' → logprob: -8.625547409057617
    3. '"""
' → logprob: -8.750547409057617
    4. '
' → logprob: -9.250547409057617
    5. '    
' → logprob: -10.000547409057617
    6. 'def' → logprob: -10.375547409057617
    7. '"""' → logprob: -11.875547409057617
    8. ')' → logprob: -12.375547409057617
    9. '``' → logprob: -12.375547409057617
    10. '#' → logprob: -12.750547409057617

Token 535: 'ne' (ID: 611)
  Prédit: ' pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.7916018962860107
    2. ' [' → logprob: -1.4166018962860107
    3. '[' → logprob: -1.6666018962860107
    4. '[:]' → logprob: -3.2916018962860107
    5. 'pattern' → logprob: -3.9166018962860107
    6. ' patterns' → logprob: -4.91660213470459
    7. '   ' → logprob: -5.04160213470459
    8. ' ' → logprob: -5.04160213470459
    9. ' []' → logprob: -5.29160213470459
    10. ' list' → logprob: -5.91660213470459

Token 536: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7799392938613892
    2. ' [' → logprob: -0.7799392938613892
    3. '[p' → logprob: -2.6549391746520996
    4. '[
' → logprob: -5.6549391746521
    5. 'patterns' → logprob: -5.9049391746521
    6. 'pattern' → logprob: -7.0299391746521
    7. ' patterns' → logprob: -7.2799391746521
    8. ' [
' → logprob: -7.4049391746521
    9. '[len' → logprob: -7.5299391746521
    10. '[a' → logprob: -7.6549391746521

Token 537: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0016435228753834963
    2. ' list' → logprob: -6.626643657684326
    3. 'generator' → logprob: -8.876643180847168
    4. '[
' → logprob: -9.501643180847168
    5. '[list' → logprob: -10.501643180847168
    6. 'List' → logprob: -10.751643180847168
    7. 'def' → logprob: -10.751643180847168
    8. '[List' → logprob: -11.626643180847168
    9. 'liste' → logprob: -11.876643180847168
    10. '[' → logprob: -12.251643180847168

Token 538: ' de' (ID: 334)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.5540518760681152
    2. ' des' → logprob: -1.8040518760681152
    3. '([
' → logprob: -2.3040518760681152
    4. '[' → logprob: -2.3040518760681152
    5. ' de' → logprob: -3.8040518760681152
    6. ' =' → logprob: -4.679051876068115
    7. 'des' → logprob: -5.429051876068115
    8. ' [
' → logprob: -5.554051876068115
    9. 'de' → logprob: -5.679051876068115
    10. '([' → logprob: -5.804051876068115

Token 539: ' matrices' (ID: 75935)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00037836082628928125
    2. 'pattern' → logprob: -8.375378608703613
    3. 'patterns' → logprob: -9.250378608703613
    4. ' list' → logprob: -10.625378608703613
    5. 'mat' → logprob: -11.125378608703613
    6. '[list' → logprob: -12.000378608703613
    7. 'lists' → logprob: -13.000378608703613
    8. 'liste' → logprob: -13.750378608703613
    9. '[
' → logprob: -14.250378608703613
    10. ':list' → logprob: -14.500378608703613

Token 540: ' distinct' (ID: 16913)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1341864913702011
    2. '   ' → logprob: -2.8841865062713623
    3. '[
' → logprob: -3.5091865062713623
    4. 'def' → logprob: -4.259186267852783
    5. ' =' → logprob: -5.134186267852783
    6. '[p' → logprob: -5.884186267852783
    7. '
' → logprob: -6.259186267852783
    8. ' [' → logprob: -6.384186267852783
    9. ',' → logprob: -6.884186267852783
    10. '[List' → logprob: -6.884186267852783

Token 541: 'es' (ID: 268)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0130560398101807
    2. 'e' → logprob: -1.1380560398101807
    3. '[e' → logprob: -1.7630560398101807
    4. '[
' → logprob: -2.6380560398101807
    5. 'es' → logprob: -2.7630560398101807
    6. '[]' → logprob: -5.513055801391602
    7. ']' → logprob: -7.388055801391602
    8. '[u' → logprob: -8.013055801391602
    9. '[]
' → logprob: -8.013055801391602
    10. ' [
' → logprob: -8.013055801391602

Token 542: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2369808852672577
    2. 'def' → logprob: -2.11198091506958
    3. '
' → logprob: -3.73698091506958
    4. '.' → logprob: -4.11198091506958
    5. '[' → logprob: -4.11198091506958
    6. '.
' → logprob: -5.11198091506958
    7. ' (' → logprob: -5.48698091506958
    8. '(' → logprob: -5.73698091506958
    9. ',' → logprob: -5.73698091506958
    10. '[
' → logprob: -6.23698091506958

Token 543: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041928429156541824
    2. '
' → logprob: -4.166928291320801
    3. '```' → logprob: -4.541928291320801
    4. '):
' → logprob: -5.541928291320801
    5. '"""
' → logprob: -5.541928291320801
    6. ':' → logprob: -6.791928291320801
    7. 'def' → logprob: -6.791928291320801
    8. '[
' → logprob: -7.166928291320801
    9. '    
' → logprob: -7.291928291320801
    10. ':
' → logprob: -7.416928291320801

Token 544: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006751431501470506
    2. '"""
' (adapté à ' """
') → logprob: -8.250675201416016
    3. '```' → logprob: -8.750675201416016
    4. ' transformations' → logprob: -9.500675201416016
    5. 'def' → logprob: -10.125675201416016
    6. '"""' → logprob: -10.500675201416016
    7. ')' → logprob: -11.000675201416016
    8. ':' → logprob: -11.250675201416016
    9. ':
' → logprob: -11.375675201416016
    10. '):
' → logprob: -11.500675201416016

Token 545: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004359029233455658
    2. ' transformations' → logprob: -5.504359245300293
    3. ' transforms' → logprob: -8.629359245300293
    4. 'trans' → logprob: -10.004359245300293
    5. ' transformed' → logprob: -11.004359245300293
    6. 'transform' → logprob: -11.129359245300293
    7. ' result' → logprob: -11.504359245300293
    8. ' transform' → logprob: -12.004359245300293
    9. '	trans' → logprob: -12.629359245300293
    10. ' res' → logprob: -13.129359245300293

Token 546: ' variants' (ID: 46908)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.046523209661245346
    2. 'transform' → logprob: -3.296523094177246
    3. '   ' → logprob: -5.546523094177246
    4. 'res' → logprob: -6.296523094177246
    5. 'result' → logprob: -6.921523094177246
    6. 'variants' (adapté à ' variants') → logprob: -6.921523094177246
    7. 'vari' → logprob: -8.171523094177246
    8. 'results' → logprob: -8.546523094177246
    9. ' transformations' → logprob: -9.046523094177246
    10. ' transforms' → logprob: -9.546523094177246

Token 547: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022910177707672
    2. ' =' → logprob: -1.9102290868759155
    3. '=[]' → logprob: -12.285228729248047
    4. '=[]
' → logprob: -15.660228729248047
    5. '=[' → logprob: -15.910228729248047
    6. ' =[' → logprob: -16.910228729248047
    7. ' ' → logprob: -17.410228729248047
    8. '＝' → logprob: -18.910228729248047
    9. '   ' → logprob: -18.910228729248047
    10. '[' → logprob: -19.285228729248047

Token 548: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22503508627414703
    2. '[p' → logprob: -1.7250350713729858
    3. '[]' → logprob: -4.225035190582275
    4. ' [' → logprob: -5.475035190582275
    5. '[]
' → logprob: -5.725035190582275
    6. '[array' → logprob: -8.600034713745117
    7. '[result' → logprob: -8.725034713745117
    8. '[param' → logprob: -9.350034713745117
    9. '[player' → logprob: -9.350034713745117
    10. '[pos' → logprob: -9.850034713745117

Token 549: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010253680869936943
    2. 'current' → logprob: -5.76025390625
    3. ' current' → logprob: -5.88525390625
    4. 'variants' → logprob: -6.13525390625
    5. ' variants' → logprob: -6.76025390625
    6. '
' → logprob: -7.13525390625
    7. '    
' → logprob: -9.13525390625
    8. 'pattern' → logprob: -11.38525390625
    9. 'curr' → logprob: -12.51025390625
    10. '```' → logprob: -12.51025390625

Token 550: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.500453770160675
    2. 'variants' → logprob: -1.0004537105560303
    3. 'def' → logprob: -4.625453948974609
    4. 'curr' → logprob: -4.750453948974609
    5. 'to' → logprob: -5.375453948974609
    6. 'cur' → logprob: -6.625453948974609
    7. 'p' → logprob: -7.875453948974609
    8. 'queue' → logprob: -8.00045394897461
    9. 'variant' → logprob: -8.37545394897461
    10. 'seen' → logprob: -8.50045394897461

Token 551: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889353483915329
    2. '=' → logprob: -2.5788934230804443
    3. '_pattern' → logprob: -12.953893661499023
    4. '_version' → logprob: -15.328893661499023
    5. '=p' → logprob: -15.703893661499023
    6. '_variant' → logprob: -15.703893661499023
    7. '=[' → logprob: -15.953893661499023
    8. ' ' → logprob: -16.078893661499023
    9. 'pattern' → logprob: -16.203893661499023
    10. '   ' → logprob: -16.328893661499023

Token 552: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -9.968312951968983e-06
    2. '[' → logprob: -11.750009536743164
    3. ' pattern' → logprob: -13.125009536743164
    4. '[p' → logprob: -18.000009536743164
    5. ' [' → logprob: -18.250009536743164
    6. '(pattern' → logprob: -18.375009536743164
    7. 'pat' → logprob: -19.000009536743164
    8. '   ' → logprob: -20.375009536743164
    9. 'patterns' → logprob: -20.500009536743164
    10. '[[' → logprob: -22.250009536743164

Token 553: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4934379756450653
    2. '.copy' → logprob: -1.2434380054473877
    3. '[:]' → logprob: -2.4934380054473877
    4. '.append' → logprob: -4.618437767028809
    5. '   ' → logprob: -5.743437767028809
    6. ' =' → logprob: -6.118437767028809
    7. '[:' → logprob: -7.493437767028809
    8. 'def' → logprob: -7.493437767028809
    9. 'copy' → logprob: -7.743437767028809
    10. '=' → logprob: -7.868437767028809

Token 554: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03136526420712471
    2. '
' → logprob: -4.156365394592285
    3. 'variants' → logprob: -4.531365394592285
    4. '<|end|>' → logprob: -6.781365394592285
    5. '```' → logprob: -7.031365394592285
    6. ' variants' → logprob: -7.531365394592285
    7. '[' → logprob: -7.656365394592285
    8. '    
' → logprob: -7.781365394592285
    9. '<|end|>' → logprob: -8.156365394592285
    10. 'for' → logprob: -8.656365394592285

Token 555: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.600714161526412e-05
    2. '   ' → logprob: -10.375076293945312
    3. 'variants' → logprob: -10.500076293945312
    4. ' for' → logprob: -11.125076293945312
    5. '
' → logprob: -13.000076293945312
    6. '```' → logprob: -15.625076293945312
    7. 'from' → logprob: -17.375076293945312
    8. 'while' → logprob: -18.125076293945312
    9. 'import' → logprob: -18.375076293945312
    10. '	for' → logprob: -18.500076293945312

Token 556: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0025506927631795406
    2. ' _' → logprob: -6.7525506019592285
    3. '_i' → logprob: -7.5025506019592285
    4. 'i' → logprob: -7.6275506019592285
    5. '_angle' → logprob: -8.752551078796387
    6. 'angle' → logprob: -9.127551078796387
    7. '_rotation' → logprob: -10.127551078796387
    8. '_k' → logprob: -11.127551078796387
    9. '_r' → logprob: -12.627551078796387
    10. '_rot' → logprob: -12.752551078796387

Token 557: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5880824327468872
    2. 'in' → logprob: -0.8380824327468872
    3. ' in' → logprob: -4.713082313537598
    4. ' range' → logprob: -5.838082313537598
    5. '(' → logprob: -9.588082313537598
    6. '(range' → logprob: -10.338082313537598
    7. '   ' → logprob: -10.963082313537598
    8. '_' → logprob: -10.963082313537598
    9. 'ange' → logprob: -11.213082313537598
    10. '_range' → logprob: -12.088082313537598

Token 558: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.253090865968261e-06
    2. ' range' → logprob: -12.250009536743164
    3. '[' → logprob: -12.375009536743164
    4. '(range' → logprob: -15.750009536743164
    5. '(' → logprob: -16.875009536743164
    6. '	range' → logprob: -19.250009536743164
    7. '0' → logprob: -19.750009536743164
    8. '   ' → logprob: -19.875009536743164
    9. 'rang' → logprob: -20.375009536743164
    10. '{' → logprob: -20.375009536743164

Token 559: '(' (ID: 7)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.704065213445574e-05
    2. '(' → logprob: -10.000046730041504
    3. '3' → logprob: -14.125046730041504
    4. ' ' → logprob: -14.250046730041504
    5. '   ' → logprob: -16.62504768371582
    6. '=' → logprob: -18.37504768371582
    7. '1' → logprob: -20.00004768371582
    8. '４' → logprob: -20.00004768371582
    9. '2' → logprob: -20.25004768371582
    10. '۴' → logprob: -20.37504768371582

Token 560: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -18.125
    4. '４' → logprob: -18.25
    5. '۴' → logprob: -18.75
    6. ')' → logprob: -18.875
    7. '2' → logprob: -18.875
    8. '٤' → logprob: -18.875
    9. '3' → logprob: -19.75
    10. '' → logprob: -19.8125

Token 561: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0356043316423893
    2. '):' → logprob: -3.410604238510132
    3. ':' → logprob: -7.160604476928711
    4. '   ' → logprob: -7.535604476928711
    5. ':
' → logprob: -7.535604476928711
    6. '):
' → logprob: -9.285604476928711
    7. ')' → logprob: -11.285604476928711
    8. ' ):
' → logprob: -12.535604476928711
    9. '():
' → logprob: -13.785604476928711
    10. ' :' → logprob: -14.410604476928711

Token 562: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.0219828002154827e-05
    2. ',' → logprob: -12.125020027160645
    3. '<|end|>' → logprob: -12.500020027160645
    4. '   ' → logprob: -13.125020027160645
    5. '<|end|>' → logprob: -13.500020027160645
    6. '#' → logprob: -13.500020027160645
    7. '```' → logprob: -13.625020027160645
    8. '):
' → logprob: -14.125020027160645
    9. '        
' → logprob: -14.250020027160645
    10. ':' → logprob: -14.375020027160645

Token 563: ' variants' (ID: 46908)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03417382016777992
    2. 'variants' (adapté à ' variants') → logprob: -3.5341737270355225
    3. '   ' → logprob: -5.909173965454102
    4. ' variants' → logprob: -6.409173965454102
    5. 'current' → logprob: -10.909173965454102
    6. '```' → logprob: -11.409173965454102
    7. 'var' → logprob: -12.409173965454102
    8. ' current' → logprob: -12.659173965454102
    9. 'vari' → logprob: -12.909173965454102
    10. '	   ' → logprob: -13.284173965454102

Token 564: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00020389800192788243
    2. '.' → logprob: -8.500204086303711
    3. 'append' → logprob: -15.500204086303711
    4. '.extend' → logprob: -15.750204086303711
    5. '.app' → logprob: -17.50020408630371
    6. '_append' → logprob: -18.12520408630371
    7. ' .' → logprob: -18.25020408630371
    8. '=' → logprob: -18.50020408630371
    9. ').' → logprob: -18.62520408630371
    10. '.Append' → logprob: -19.00020408630371

Token 565: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -2.3199920178740285e-05
    2. '([' → logprob: -11.125022888183594
    3. 'current' → logprob: -11.875022888183594
    4. '[current' → logprob: -14.125022888183594
    5. '(' → logprob: -14.625022888183594
    6. ' current' → logprob: -16.375022888183594
    7. '(copy' → logprob: -16.750022888183594
    8. '(curr' → logprob: -16.750022888183594
    9. '(cur' → logprob: -16.750022888183594
    10. '(c' → logprob: -17.500022888183594

Token 566: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3871009647846222
    2. ')' → logprob: -1.1371009349822998
    3. '.copy' → logprob: -9.012101173400879
    4. ')
' → logprob: -9.387101173400879
    5. '   ' → logprob: -11.512101173400879
    6. ' )
' → logprob: -11.762101173400879
    7. '[:' → logprob: -13.262101173400879
    8. ' )' → logprob: -13.637101173400879
    9. ' ' → logprob: -14.262101173400879
    10. ')

' → logprob: -14.387101173400879

Token 567: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005518406978808343
    2. '   ' → logprob: -7.625551700592041
    3. 'current' → logprob: -11.0005521774292
    4. '
' → logprob: -11.3755521774292
    5. '<|end|>' → logprob: -11.6255521774292
    6. ',' → logprob: -11.8755521774292
    7. ' current' → logprob: -12.0005521774292
    8. '        
' → logprob: -12.3755521774292
    9. '           ' → logprob: -13.0005521774292
    10. '```' → logprob: -13.8755521774292

Token 568: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.09097215533256531
    2. 'variants' → logprob: -2.4659721851348877
    3. '   ' → logprob: -6.465971946716309
    4. ' current' → logprob: -8.090971946716309
    5. '       ' → logprob: -9.840971946716309
    6. ' variants' → logprob: -10.090971946716309
    7. 'variant' → logprob: -11.090971946716309
    8. 'vari' → logprob: -11.215971946716309
    9. 'rot' → logprob: -11.465971946716309
    10. 'var' → logprob: -11.840971946716309

Token 569: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.313262403011322
    2. ' =' → logprob: -1.3132624626159668
    3. '=current' → logprob: -15.313261985778809
    4. '=create' → logprob: -15.313261985778809
    5. 'rotate' → logprob: -16.938262939453125
    6. '＝' → logprob: -17.188262939453125
    7. '=re' → logprob: -17.563262939453125
    8. '=get' → logprob: -17.688262939453125
    9. '[' → logprob: -17.688262939453125
    10. ')' → logprob: -18.313262939453125

Token 570: ' rotate' (ID: 31987)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.0001584850688232109
    2. ' rotate' → logprob: -8.750158309936523
    3. 'rot' → logprob: -19.250158309936523
    4. '.rotate' → logprob: -21.375158309936523
    5. '   ' → logprob: -22.250158309936523
    6. 'generate' → logprob: -22.875158309936523
    7. 'rotation' → logprob: -23.000158309936523
    8. 'reverse' → logprob: -23.250158309936523
    9. ' ' → logprob: -23.375158309936523
    10. ' ' → logprob: -23.875158309936523

Token 571: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9361264946837764e-07
    2. '90' → logprob: -16.125
    3. '```' → logprob: -19.125
    4. '`' → logprob: -20.375
    5. '\' → logprob: -20.5
    6. '_current' → logprob: -20.625
    7. 'current' → logprob: -20.625
    8. '(current' → logprob: -21.375
    9. ' _' → logprob: -22.0
    10. '‌' → logprob: -22.125

Token 572: '90' (ID: 2744)
  Prédit: '90'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -1.688212614681106e-05
    2. '_' → logprob: -11.000017166137695
    3. 'current' → logprob: -16.625017166137695
    4. ' ' → logprob: -17.250017166137695
    5. '(current' → logprob: -17.750017166137695
    6. '_current' → logprob: -18.750017166137695
    7. '[current' → logprob: -20.750017166137695
    8. '45' → logprob: -20.875017166137695
    9. ')' → logprob: -21.125017166137695
    10. ' current' → logprob: -21.250017166137695

Token 573: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -1.5048530030981055e-06
    2. 'current' → logprob: -13.625001907348633
    3. '(' → logprob: -15.375001907348633
    4. ' (' → logprob: -18.250001907348633
    5. '[current' → logprob: -18.375001907348633
    6. '(curr' → logprob: -18.750001907348633
    7. ',current' → logprob: -19.000001907348633
    8. '(cur' → logprob: -19.250001907348633
    9. '(
' → logprob: -19.375001907348633
    10. '=current' → logprob: -19.625001907348633

Token 574: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006332091288641095
    2. ')
' → logprob: -7.375633239746094
    3. '   ' → logprob: -12.000633239746094
    4. ' )' → logprob: -15.375633239746094
    5. ')

' → logprob: -16.250633239746094
    6. '))' → logprob: -16.625633239746094
    7. ')
' → logprob: -17.375633239746094
    8. '       ' → logprob: -17.750633239746094
    9. ')}' → logprob: -18.375633239746094
    10. ' ' → logprob: -18.375633239746094

Token 575: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030201373156160116
    2. ')' → logprob: -7.253020286560059
    3. '
' → logprob: -7.253020286560059
    4. '```' → logprob: -7.378020286560059
    5. 'variants' → logprob: -7.503020286560059
    6. '    
' → logprob: -9.253020286560059
    7. ' variants' → logprob: -9.753020286560059
    8. 'for' → logprob: -10.503020286560059
    9. '#' → logprob: -10.503020286560059
    10. '<|end|>' → logprob: -10.628020286560059

Token 576: ' mirrored' (ID: 136208)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06404084712266922
    2. 'variants' → logprob: -2.9390408992767334
    3. ' variants' → logprob: -4.814040660858154
    4. ' for' → logprob: -7.939040660858154
    5. 'for' → logprob: -8.189041137695312
    6. '
' → logprob: -8.564041137695312
    7. '```' → logprob: -9.064041137695312
    8. ' ' → logprob: -10.564041137695312
    9. '    
' → logprob: -10.939041137695312
    10. '``' → logprob: -12.314041137695312

Token 577: ' =' (ID: 314)
  Prédit: '_vari'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vari' → logprob: -0.5273517370223999
    2. ' =' → logprob: -1.0273517370224
    3. '=' → logprob: -3.4023518562316895
    4. 's' → logprob: -4.1523518562316895
    5. '_versions' → logprob: -6.1523518562316895
    6. '_' → logprob: -8.402351379394531
    7. 'variants' → logprob: -8.777351379394531
    8. '_list' → logprob: -9.777351379394531
    9. '_variant' → logprob: -9.902351379394531
    10. 'Variants' → logprob: -10.027351379394531

Token 578: ' mirror' (ID: 28026)
  Prédit: 'mirror'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mirror' → logprob: -0.10034911334514618
    2. ' mirror' → logprob: -2.350349187850952
    3. '[m' → logprob: -9.475349426269531
    4. '[' → logprob: -9.725349426269531
    5. ' [' → logprob: -12.475349426269531
    6. 'mir' → logprob: -13.725349426269531
    7. 'm' → logprob: -14.600349426269531
    8. ' ' → logprob: -16.22534942626953
    9. '(m' → logprob: -16.35034942626953
    10. ' mir' → logprob: -16.35034942626953

Token 579: '(pattern' (ID: 62660)
  Prédit: '(pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -0.3793790936470032
    2. '(current' → logprob: -1.2543790340423584
    3. '(' → logprob: -3.5043790340423584
    4. 'pattern' → logprob: -9.129379272460938
    5. '(m' → logprob: -9.254379272460938
    6. 'current' → logprob: -9.504379272460938
    7. 'variants' → logprob: -9.754379272460938
    8. '((' → logprob: -11.629379272460938
    9. '(vars' → logprob: -12.004379272460938
    10. '(p' → logprob: -12.004379272460938

Token 580: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.038049984723329544
    2. ')' → logprob: -3.2880499362945557
    3. ')
' → logprob: -12.163049697875977
    4. ' )
' → logprob: -13.288049697875977
    5. '   ' → logprob: -13.538049697875977
    6. ')

' → logprob: -15.913049697875977
    7. ' )' → logprob: -16.663049697875977
    8. ')`
' → logprob: -17.038049697875977
    9. 'def' → logprob: -17.913049697875977
    10. ')#' → logprob: -18.538049697875977

Token 581: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16286210715770721
    2. 'for' → logprob: -1.9128620624542236
    3. ' for' → logprob: -6.662862300872803
    4. 'variants' → logprob: -6.662862300872803
    5. 'current' → logprob: -10.162861824035645
    6. '
' → logprob: -11.037861824035645
    7. '```' → logprob: -11.537861824035645
    8. ' variants' → logprob: -12.037861824035645
    9. '    
' → logprob: -12.912861824035645
    10. '[' → logprob: -13.787861824035645

Token 582: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.07040173560380936
    2. 'for' → logprob: -2.695401668548584
    3. 'variants' → logprob: -8.195402145385742
    4. '   ' → logprob: -8.820402145385742
    5. 'cur' → logprob: -10.945402145385742
    6. 'curr' → logprob: -11.570402145385742
    7. ' current' → logprob: -12.070402145385742
    8. ' for' → logprob: -12.945402145385742
    9. 'm' → logprob: -13.195402145385742
    10. 'temp' → logprob: -13.820402145385742

Token 583: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931771039962769
    2. ' =' → logprob: -0.6931771039962769
    3. ' mirrored' → logprob: -10.943177223205566
    4. '=m' → logprob: -12.193177223205566
    5. 'variants' → logprob: -12.318177223205566
    6. ' variants' → logprob: -14.568177223205566
    7. 'mirror' → logprob: -14.818177223205566
    8. 's' → logprob: -14.943177223205566
    9. 'for' → logprob: -15.443177223205566
    10. 'mir' → logprob: -15.568177223205566

Token 584: ' mirrored' (ID: 136208)
  Prédit: 'mir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mir' → logprob: -0.009107419289648533
    2. ' mirrored' → logprob: -5.13410758972168
    3. 'mirror' → logprob: -5.75910758972168
    4. ' mir' → logprob: -11.50910758972168
    5. 'pattern' → logprob: -12.38410758972168
    6. 'rot' → logprob: -13.00910758972168
    7. ' mirror' → logprob: -13.13410758972168
    8. 'm' → logprob: -14.50910758972168
    9. '   ' → logprob: -15.38410758972168
    10. 'Mir' → logprob: -15.63410758972168

Token 585: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018769143149256706
    2. ' for' → logprob: -4.018769264221191
    3. '   ' → logprob: -7.518769264221191
    4. '
' → logprob: -9.768769264221191
    5. '<|end|>' → logprob: -11.768769264221191
    6. ',' → logprob: -12.518769264221191
    7. ')' → logprob: -13.143769264221191
    8. ':' → logprob: -13.893769264221191
    9. ' ' → logprob: -14.143769264221191
    10. ' =' → logprob: -14.268769264221191

Token 586: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14747829735279083
    2. ' for' → logprob: -2.3974783420562744
    3. '   ' → logprob: -3.1474783420562744
    4. '<|end|>' → logprob: -6.272478103637695
    5. '
' → logprob: -6.897478103637695
    6. ':' → logprob: -9.897478103637695
    7. ')' → logprob: -10.022478103637695
    8. ' =' → logprob: -10.272478103637695
    9. '<|end|>' → logprob: -10.272478103637695
    10. ',' → logprob: -10.647478103637695

Token 587: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.619311974034645e-05
    2. ' for' → logprob: -10.250036239624023
    3. '   ' → logprob: -14.750036239624023
    4. '
' → logprob: -15.125036239624023
    5. '	for' → logprob: -15.625036239624023
    6. '<|end|>' → logprob: -17.625036239624023
    7. '```' → logprob: -18.500036239624023
    8. '<|end|>' → logprob: -20.875036239624023
    9. 'from' → logprob: -21.125036239624023
    10. '_for' → logprob: -21.375036239624023

Token 588: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0325924449716695e-05
    2. ' _' → logprob: -11.50001049041748
    3. '_i' → logprob: -16.250009536743164
    4. '_=' → logprob: -18.125009536743164
    5. 'i' → logprob: -18.500009536743164
    6. '_

' → logprob: -19.250009536743164
    7. '_
' → logprob: -19.375009536743164
    8. '_
' → logprob: -19.500009536743164
    9. '_]' → logprob: -19.500009536743164
    10. '_j' → logprob: -19.875009536743164

Token 589: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009167305193841457
    2. 'range' → logprob: -4.759167194366455
    3. ' range' → logprob: -8.009167671203613
    4. ' in' → logprob: -8.509167671203613
    5. ' _' → logprob: -11.384167671203613
    6. 'in' → logprob: -12.384167671203613
    7. '_range' → logprob: -12.759167671203613
    8. '(range' → logprob: -15.759167671203613
    9. '[' → logprob: -17.634166717529297
    10. ' ' → logprob: -17.884166717529297

Token 590: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001293331733904779
    2. '_' → logprob: -7.001293182373047
    3. ' range' → logprob: -7.876293182373047
    4. '[' → logprob: -13.626293182373047
    5. '_range' → logprob: -14.376293182373047
    6. '(range' → logprob: -15.126293182373047
    7. ' _' → logprob: -17.376293182373047
    8. '	range' → logprob: -17.501293182373047
    9. '(' → logprob: -17.876293182373047
    10. ' ' → logprob: -18.251293182373047

Token 591: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16051200032234192
    2. '4' → logprob: -2.0355119705200195
    3. '3' → logprob: -4.0355119705200195
    4. ' (' → logprob: -14.28551197052002
    5. ' ' → logprob: -14.28551197052002
    6. '```' → logprob: -15.41051197052002
    7. '   ' → logprob: -15.78551197052002
    8. '1' → logprob: -16.035512924194336
    9. '{' → logprob: -16.285512924194336
    10. 'def' → logprob: -16.785512924194336

Token 592: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.500000953674316
    3. '3' → logprob: -16.625
    4. '４' → logprob: -16.875
    5. '۴' → logprob: -17.0
    6. '৪' → logprob: -18.375
    7. '٤' → logprob: -18.5
    8. '४' → logprob: -18.875
    9. '```' → logprob: -19.6875
    10. '' → logprob: -19.75

Token 593: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.94815993309021
    2. ':' → logprob: -1.19815993309021
    3. '):
' → logprob: -1.19815993309021
    4. '):' → logprob: -5.198160171508789
    5. '   ' → logprob: -5.698160171508789
    6. '():
' → logprob: -9.073160171508789
    7. '       ' → logprob: -11.198160171508789
    8. ')' → logprob: -12.073160171508789
    9. ' :
' → logprob: -12.198160171508789
    10. ':

' → logprob: -12.448160171508789

Token 594: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002651503309607506
    2. '   ' → logprob: -8.500265121459961
    3. '{
' → logprob: -10.750265121459961
    4. ':
' → logprob: -11.125265121459961
    5. 'variants' → logprob: -11.875265121459961
    6. '):
' → logprob: -12.375265121459961
    7. ' variants' → logprob: -13.000265121459961
    8. '```' → logprob: -13.000265121459961
    9. '<|end|>' → logprob: -13.500265121459961
    10. ':' → logprob: -13.500265121459961

Token 595: ' variants' (ID: 46908)
  Prédit: 'variants'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variants' (adapté à ' variants') → logprob: -0.08247896283864975
    2. '       ' → logprob: -2.7074790000915527
    3. '   ' → logprob: -4.457479000091553
    4. ' variants' → logprob: -7.082479000091553
    5. '           ' → logprob: -11.207478523254395
    6. ' ' → logprob: -12.582478523254395
    7. '     ' → logprob: -12.957478523254395
    8. 'vari' → logprob: -13.082478523254395
    9. '{
' → logprob: -13.082478523254395
    10. '```' → logprob: -13.582478523254395

Token 596: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.975612187583465e-05
    2. '.' → logprob: -10.500029563903809
    3. 'append' → logprob: -13.375029563903809
    4. '=' → logprob: -14.625029563903809
    5. ' .' → logprob: -16.625030517578125
    6. '.app' → logprob: -17.125030517578125
    7. '.Append' → logprob: -17.750030517578125
    8. ':' → logprob: -17.750030517578125
    9. '_append' → logprob: -18.000030517578125
    10. '   ' → logprob: -18.500030517578125

Token 597: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -2.696889623621246e-06
    2. 'current' → logprob: -12.87500286102295
    3. '(' → logprob: -16.000001907348633
    4. '(cur' → logprob: -17.000001907348633
    5. '(curr' → logprob: -18.250001907348633
    6. ' (' → logprob: -18.500001907348633
    7. ' current' → logprob: -19.625001907348633
    8. '=current' → logprob: -20.000001907348633
    9. '[current' → logprob: -20.125001907348633
    10. '(
' → logprob: -20.625001907348633

Token 598: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01946091465651989
    2. ')
' → logprob: -4.769460678100586
    3. '       ' → logprob: -5.144460678100586
    4. '<|end|>' → logprob: -5.394460678100586
    5. '<|end|>' → logprob: -9.144460678100586
    6. '
' → logprob: -9.144460678100586
    7. '   ' → logprob: -9.894460678100586
    8. '[' → logprob: -10.269460678100586
    9. ')return' → logprob: -10.269460678100586
    10. '[current' → logprob: -11.269460678100586

Token 599: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000563638168387115
    2. '<|end|>' → logprob: -8.125563621520996
    3. 'current' → logprob: -9.125563621520996
    4. '   ' → logprob: -9.250563621520996
    5. '[current' → logprob: -11.000563621520996
    6. '<|end|>' → logprob: -11.500563621520996
    7. '
' → logprob: -12.125563621520996
    8. ',' → logprob: -12.125563621520996
    9. ')' → logprob: -12.250563621520996
    10. '[' → logprob: -12.375563621520996

Token 600: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.00020377879263833165
    2. ' current' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.625204086303711
    4. '       ' → logprob: -17.25020408630371
    5. '	current' → logprob: -17.37520408630371
    6. '
' → logprob: -17.87520408630371
    7. '(current' → logprob: -18.75020408630371
    8. '.current' → logprob: -18.87520408630371
    9. '[current' → logprob: -18.87520408630371
    10. '=current' → logprob: -18.87520408630371

Token 601: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00861456897109747
    2. ' =' → logprob: -4.758614540100098
    3. '=
' → logprob: -18.633615493774414
    4. '＝' → logprob: -18.883615493774414
    5. '=

' → logprob: -19.383615493774414
    6. '   ' → logprob: -20.258615493774414
    7. ')' → logprob: -20.758615493774414
    8. '=create' → logprob: -21.133615493774414
    9. ')=' → logprob: -21.508615493774414
    10. '=_' → logprob: -21.633615493774414

Token 602: ' rotate' (ID: 31987)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.0019291093340143561
    2. ' rotate' → logprob: -6.25192928314209
    3. '   ' → logprob: -15.37692928314209
    4. '.rotate' → logprob: -15.62692928314209
    5. 'rot' → logprob: -16.751928329467773
    6. ' ' → logprob: -17.251928329467773
    7. '  ' → logprob: -17.751928329467773
    8. ' ' → logprob: -17.751928329467773
    9. '_rotate' → logprob: -17.751928329467773
    10. '```' → logprob: -18.501928329467773

Token 603: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.896309739408025e-07
    2. '90' → logprob: -14.375000953674316
    3. '```' → logprob: -16.375
    4. '\' → logprob: -17.125
    5. '-' → logprob: -18.375
    6. '(' → logprob: -19.125
    7. '_rot' → logprob: -19.25
    8. '_rotation' → logprob: -19.25
    9. ' _' → logprob: -19.5625
    10. '[' → logprob: -19.5625

Token 604: '90' (ID: 2744)
  Prédit: '90'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: 0.0
    2. '_' → logprob: -19.25
    3. '9' → logprob: -19.625
    4. '```' → logprob: -20.25
    5. '45' → logprob: -21.875
    6. '[' → logprob: -21.875
    7. '090' → logprob: -22.125
    8. ' ' → logprob: -22.125
    9. 'mat' → logprob: -22.25
    10. '900' → logprob: -22.5

Token 605: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -5.800739018013701e-05
    2. '90' → logprob: -10.5000581741333
    3. 'current' → logprob: -11.2500581741333
    4. '[current' → logprob: -11.6250581741333
    5. '(' → logprob: -11.8750581741333
    6. '=current' → logprob: -15.5000581741333
    7. '```' → logprob: -15.6250581741333
    8. ')' → logprob: -15.7500581741333
    9. '_' → logprob: -16.000057220458984
    10. '_current' → logprob: -16.125057220458984

Token 606: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01119824405759573
    2. '(current' → logprob: -4.511198043823242
    3. '[current' → logprob: -9.511198043823242
    4. ')
' → logprob: -9.761198043823242
    5. 'current' → logprob: -11.261198043823242
    6. '   ' → logprob: -13.511198043823242
    7. ')`' → logprob: -13.511198043823242
    8. '))' → logprob: -13.886198043823242
    9. ')
' → logprob: -15.011198043823242
    10. '=current' → logprob: -15.136198043823242

Token 607: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05341716855764389
    2. 'return' → logprob: -3.178417205810547
    3. '
' → logprob: -4.803417205810547
    4. ' return' → logprob: -6.428417205810547
    5. '    
' → logprob: -8.053417205810547
    6. '       ' → logprob: -10.178417205810547
    7. ')' → logprob: -10.428417205810547
    8. '  
' → logprob: -10.428417205810547
    9. '[' → logprob: -10.553417205810547
    10. '        
' → logprob: -10.803417205810547

Token 608: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.022726228460669518
    2. ' return' → logprob: -4.272726058959961
    3. '   ' → logprob: -4.772726058959961
    4. '
' → logprob: -10.022726058959961
    5. '	return' → logprob: -11.522726058959961
    6. '    
' → logprob: -12.272726058959961
    7. '```' → logprob: -12.522726058959961
    8. '#' (adapté à ' #') → logprob: -12.772726058959961
    9. 'variants' → logprob: -13.772726058959961
    10. ' ' → logprob: -14.022726058959961

Token 609: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13530944287776947
    2. 'return' → logprob: -2.1353094577789307
    3. 'seen' → logprob: -5.885309219360352
    4. 'unique' → logprob: -6.010309219360352
    5. 'variants' → logprob: -6.010309219360352
    6. 'result' → logprob: -8.135309219360352
    7. ' return' → logprob: -9.135309219360352
    8. 'distinct' → logprob: -9.260309219360352
    9. ' #' → logprob: -9.635309219360352
    10. '   ' → logprob: -11.260309219360352

Token 610: ' élim' (ID: 108134)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20908670127391815
    2. '#' → logprob: -1.9590866565704346
    3. ' return' → logprob: -3.2090866565704346
    4. 'variants' → logprob: -5.584086894989014
    5. ' #' → logprob: -6.834086894989014
    6. 'unique' → logprob: -7.334086894989014
    7. 's' → logprob: -7.709086894989014
    8. 'eturn' → logprob: -8.084086418151855
    9. ' variants' → logprob: -8.084086418151855
    10. ' =' → logprob: -9.709086418151855

Token 611: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -8.125210297293961e-05
    2. '   ' → logprob: -11.000081062316895
    3. '[' → logprob: -11.500081062316895
    4. 'inue' → logprob: -11.750081062316895
    5. 'iner' → logprob: -12.000081062316895
    6. '
' → logprob: -12.375081062316895
    7. 'iné' → logprob: -12.500081062316895
    8. '#' → logprob: -12.750081062316895
    9. 'inate' → logprob: -12.750081062316895
    10. 'îne' → logprob: -12.875081062316895

Token 612: ' les' (ID: 1341)
  Prédit: 'duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duplicates' → logprob: -0.9527811408042908
    2. ' les' → logprob: -1.2027812004089355
    3. 'les' → logprob: -1.7027812004089355
    4. ' duplicates' → logprob: -2.3277812004089355
    5. '_duplicates' → logprob: -4.5777812004089355
    6. 'list' → logprob: -4.5777812004089355
    7. 'd' → logprob: -6.2027812004089355
    8. '[]' → logprob: -6.3277812004089355
    9. '[]
' → logprob: -6.3277812004089355
    10. 'du' → logprob: -6.5777812004089355

Token 613: ' doubl' (ID: 127992)
  Prédit: 'duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duplicates' → logprob: -0.1829441338777542
    2. ' duplicates' → logprob: -2.0579440593719482
    3. 'dou' → logprob: -3.5579440593719482
    4. ' doubl' → logprob: -4.932944297790527
    5. 'distinct' → logprob: -6.807944297790527
    6. 'duplic' → logprob: -7.057944297790527
    7. '_duplicates' → logprob: -7.057944297790527
    8. 'd' → logprob: -8.307944297790527
    9. 'dup' → logprob: -8.307944297790527
    10. 'duplicate' → logprob: -9.057944297790527

Token 614: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.003673352301120758
    2. 'és' → logprob: -5.628673553466797
    3. 'ic' → logprob: -10.628673553466797
    4. 'es' → logprob: -10.753673553466797
    5. 'ions' → logprob: -12.628673553466797
    6. 'ées' → logprob: -12.753673553466797
    7. 'i' → logprob: -12.753673553466797
    8. 'icates' → logprob: -12.753673553466797
    9. 'ats' → logprob: -13.003673553466797
    10. 'on' → logprob: -13.003673553466797

Token 615: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00037263904232531786
    2. '
' → logprob: -8.500372886657715
    3. ',' → logprob: -10.125372886657715
    4. 'return' → logprob: -10.125372886657715
    5. ' =' → logprob: -10.375372886657715
    6. '    
' → logprob: -10.625372886657715
    7. ' return' → logprob: -11.125372886657715
    8. ' (' → logprob: -12.125372886657715
    9. '(' → logprob: -12.750372886657715
    10. 'variants' → logprob: -12.875372886657715

Token 616: ' peuvent' (ID: 21321)
  Prédit: ' pourraient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pourraient' → logprob: -0.7360126972198486
    2. ' =' → logprob: -1.4860126972198486
    3. ' peuvent' → logprob: -2.6110126972198486
    4. '=' → logprob: -2.7360126972198486
    5. 's' → logprob: -2.9860126972198486
    6. 'ont' → logprob: -3.1110126972198486
    7. 'pe' → logprob: -3.9860126972198486
    8. 'could' → logprob: -4.9860124588012695
    9. 'possible' → logprob: -5.4860124588012695
    10. ' pourrait' → logprob: -5.8610124588012695

Token 617: ' appara' (ID: 52982)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -1.1368564367294312
    2. 'arr' → logprob: -1.2618564367294312
    3. 'venir' → logprob: -1.3868564367294312
    4. 'sur' → logprob: -2.3868565559387207
    5. 'appar' → logprob: -3.5118565559387207
    6. ' appara' → logprob: -5.011856555938721
    7. 'appear' → logprob: -5.511856555938721
    8. 'se' → logprob: -6.136856555938721
    9. 'occur' → logprob: -6.136856555938721
    10. 'ap' → logprob: -6.261856555938721

Token 618: 'ître' (ID: 29135)
  Prédit: 'ître'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ître' → logprob: -0.13987016677856445
    2. 'itre' → logprob: -2.1398701667785645
    3. 'î' → logprob: -5.1398701667785645
    4. 'ire' → logprob: -6.0148701667785645
    5. 'ir' → logprob: -6.3898701667785645
    6. 'îtr' → logprob: -7.2648701667785645
    7. 'it' → logprob: -7.5148701667785645
    8. 'ît' → logprob: -7.5148701667785645
    9. 'Î' → logprob: -8.889869689941406
    10. 'i' → logprob: -9.014869689941406

Token 619: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001039479160681367
    2. ',' → logprob: -7.501039505004883
    3. '
' → logprob: -9.251039505004883
    4. '    
' → logprob: -9.251039505004883
    5. ' by' → logprob: -9.501039505004883
    6. ' (' → logprob: -9.876039505004883
    7. ' =' → logprob: -10.251039505004883
    8. 'return' → logprob: -10.876039505004883
    9. '(' → logprob: -11.001039505004883
    10. 'variants' → logprob: -11.126039505004883

Token 620: 'ex' (ID: 490)
  Prédit: 'variants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'variants' → logprob: -0.620663583278656
    2. 'seen' → logprob: -1.8706636428833008
    3. ' variants' → logprob: -1.9956636428833008
    4. ')' → logprob: -2.995663642883301
    5. 'return' → logprob: -3.245663642883301
    6. 'unique' → logprob: -3.995663642883301
    7. ' seen' → logprob: -4.370663642883301
    8. 'list' → logprob: -4.745663642883301
    9. 'distinct' → logprob: -5.245663642883301
    10. ')
' → logprob: -5.245663642883301

Token 621: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1372036337852478
    2. 'emple' → logprob: -2.6372036933898926
    3. 'cept' → logprob: -3.8872036933898926
    4. 't' → logprob: -5.137203693389893
    5. 'p' → logprob: -5.637203693389893
    6. 'cess' → logprob: -5.762203693389893
    7. 'ceptions' → logprob: -5.762203693389893
    8. 'em' → logprob: -5.762203693389893
    9. 'c' → logprob: -6.012203693389893
    10. ':[' → logprob: -6.637203693389893

Token 622: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.7332205176353455
    2. 'if' → logprob: -2.2332205772399902
    3. ' carré' → logprob: -2.2332205772399902
    4. 'p' → logprob: -2.7332205772399902
    5. 'len' → logprob: -3.2332205772399902
    6. 'for' → logprob: -3.7332205772399902
    7. 'patterns' → logprob: -3.8582205772399902
    8. ' pattern' → logprob: -3.9832205772399902
    9. ' if' → logprob: -4.10822057723999
    10. 'square' → logprob: -4.23322057723999

Token 623: ' sym' (ID: 5357)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2688567638397217
    2. 's' → logprob: -1.6438567638397217
    3. '[' → logprob: -2.1438567638397217
    4. ' =' → logprob: -2.2688567638397217
    5. '==' → logprob: -2.3938567638397217
    6. ')' → logprob: -2.7688567638397217
    7. ' ==' → logprob: -3.0188567638397217
    8. '=' → logprob: -4.143857002258301
    9. ' in' → logprob: -4.643857002258301
    10. ')
' → logprob: -4.643857002258301

Token 624: 'étr' (ID: 35025)
  Prédit: 'étr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'étr' → logprob: -0.001419399632140994
    2. 'et' → logprob: -6.876419544219971
    3. 'tr' → logprob: -9.501419067382812
    4. 'm' → logprob: -9.501419067382812
    5. 'é' → logprob: -9.501419067382812
    6. '#' → logprob: -10.376419067382812
    7. '[' → logprob: -10.626419067382812
    8. 'étrica' → logprob: -10.751419067382812
    9. '   ' → logprob: -11.251419067382812
    10. 'metry' → logprob: -11.751419067382812

Token 625: 'ique' (ID: 2222)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.5935942530632019
    2. 'rique' → logprob: -0.8435942530632019
    3. 'riques' → logprob: -4.593594074249268
    4. 'étr' → logprob: -5.093594074249268
    5. '#' → logprob: -7.593594074249268
    6. 'ique' → logprob: -8.218594551086426
    7. '[' → logprob: -9.218594551086426
    8. 'try' → logprob: -9.218594551086426
    9. '```' → logprob: -9.718594551086426
    10. '``' → logprob: -10.343594551086426

Token 626: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2307284027338028
    2. ')' → logprob: -1.6057283878326416
    3. '):
' → logprob: -6.105728626251221
    4. ' )
' → logprob: -7.230728626251221
    5. ',' → logprob: -7.355728626251221
    6. '   ' → logprob: -8.105728149414062
    7. 'e' → logprob: -8.105728149414062
    8. '):' → logprob: -8.230728149414062
    9. '
' → logprob: -8.855728149414062
    10. '),' → logprob: -9.355728149414062

Token 627: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004892880679108202
    2. 'return' → logprob: -7.750489234924316
    3. ' return' → logprob: -9.875489234924316
    4. '
' → logprob: -12.125489234924316
    5. 'variants' → logprob: -13.500489234924316
    6. '```' → logprob: -15.625489234924316
    7. '    
' → logprob: -16.250490188598633
    8. ' variants' → logprob: -16.375490188598633
    9. ',' → logprob: -16.625490188598633
    10. ')' → logprob: -17.500490188598633

Token 628: ' unique' (ID: 5746)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3157615065574646
    2. '   ' → logprob: -1.5657615661621094
    3. 'return' → logprob: -2.9407615661621094
    4. ' variants' → logprob: -4.940761566162109
    5. 'variants' → logprob: -6.315761566162109
    6. '```' → logprob: -10.81576156616211
    7. '
' → logprob: -10.81576156616211
    8. ' unique' → logprob: -12.56576156616211
    9. '    
' → logprob: -13.56576156616211
    10. '	return' → logprob: -13.69076156616211

Token 629: '_vari' (ID: 94080)
  Prédit: '_vari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vari' → logprob: -0.16085633635520935
    2. 's' → logprob: -2.285856246948242
    3. '_patterns' → logprob: -3.285856246948242
    4. ' =' → logprob: -4.785856246948242
    5. '_set' → logprob: -7.285856246948242
    6. 'variants' → logprob: -8.535856246948242
    7. '=' → logprob: -9.535856246948242
    8. '_vars' → logprob: -10.035856246948242
    9. '_sets' → logprob: -10.035856246948242
    10. '_versions' → logprob: -10.160856246948242

Token 630: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -1.5690089639974758e-05
    2. 'ents' → logprob: -11.625015258789062
    3. 'antes' → logprob: -12.125015258789062
    4. 'ANTS' → logprob: -14.500015258789062
    5. 'ats' → logprob: -15.375015258789062
    6. ' ants' → logprob: -15.625015258789062
    7. 'ans' → logprob: -16.625015258789062
    8. 's' → logprob: -16.750015258789062
    9. 'nts' → logprob: -17.125015258789062
    10. 'es' → logprob: -17.375015258789062

Token 631: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023271916434168816
    2. ' =' → logprob: -3.7732717990875244
    3. '=set' → logprob: -11.023271560668945
    4. '=[]' → logprob: -11.648271560668945
    5. '=[]
' → logprob: -13.898271560668945
    6. '=list' → logprob: -15.648271560668945
    7. '＝' → logprob: -16.398271560668945
    8. '   ' → logprob: -16.648271560668945
    9. '=[' → logprob: -17.523271560668945
    10. '=
' → logprob: -17.523271560668945

Token 632: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.00017421995289623737
    2. '[]' → logprob: -8.750174522399902
    3. '[]

' → logprob: -11.750174522399902
    4. 'list' → logprob: -12.000174522399902
    5. ' []
' → logprob: -13.750174522399902
    6. '{}
' → logprob: -15.250174522399902
    7. '{' → logprob: -15.625174522399902
    8. '[list' → logprob: -16.375173568725586
    9. '[' → logprob: -16.625173568725586
    10. '[])
' → logprob: -17.750173568725586

Token 633: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5888471603393555
    2. 'seen' → logprob: -1.2138471603393555
    3. 'for' → logprob: -1.9638471603393555
    4. ' seen' → logprob: -5.7138471603393555
    5. ' for' → logprob: -5.9638471603393555
    6. '_seen' → logprob: -6.4638471603393555
    7. 'tokens' → logprob: -9.338847160339355
    8. '```' → logprob: -10.088847160339355
    9. '_set' → logprob: -10.713847160339355
    10. 'set' → logprob: -10.838847160339355

Token 634: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' (adapté à ' seen') → logprob: -0.07977524399757385
    2. 'for' → logprob: -2.579775333404541
    3. ' seen' → logprob: -7.204775333404541
    4. '   ' → logprob: -9.454774856567383
    5. ' for' → logprob: -9.829774856567383
    6. '_seen' → logprob: -12.079774856567383
    7. 'existing' → logprob: -13.954774856567383
    8. 'added' → logprob: -13.954774856567383
    9. 'def' → logprob: -14.204774856567383
    10. 'visited' → logprob: -14.329774856567383

Token 635: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003522033104673028
    2. ' =' → logprob: -6.003521919250488
    3. '=set' → logprob: -6.878521919250488
    4. 'set' → logprob: -11.253521919250488
    5. '_set' → logprob: -13.128521919250488
    6. '_sets' → logprob: -14.878521919250488
    7. 's' → logprob: -15.253521919250488
    8. '=
' → logprob: -15.503521919250488
    9. '_tokens' → logprob: -16.003522872924805
    10. '=[]
' → logprob: -16.128522872924805

Token 636: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0017544300062581897
    2. '[]' → logprob: -7.251754283905029
    3. '{' → logprob: -7.501754283905029
    4. '[]
' → logprob: -7.751754283905029
    5. ' set' → logprob: -9.751754760742188
    6. '{}' → logprob: -12.626754760742188
    7. '{}
' → logprob: -16.376754760742188
    8. '	set' → logprob: -16.626754760742188
    9. '=set' → logprob: -16.626754760742188
    10. '{"' → logprob: -16.876754760742188

Token 637: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.4742824137210846
    2. '()' → logprob: -0.9742823839187622
    3. '   ' → logprob: -9.349282264709473
    4. '()

' → logprob: -9.849282264709473
    5. '()
' → logprob: -11.099282264709473
    6. '(' → logprob: -11.849282264709473
    7. '()\' → logprob: -11.849282264709473
    8. 'def' → logprob: -12.349282264709473
    9. '():
' → logprob: -12.474282264709473
    10. '()]' → logprob: -12.724282264709473

Token 638: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015751613304018974
    2. ' for' → logprob: -4.640751838684082
    3. 'for' → logprob: -5.140751838684082
    4. '	for' → logprob: -10.140751838684082
    5. '```' → logprob: -10.140751838684082
    6. '<|end|>' → logprob: -11.140751838684082
    7. '    
' → logprob: -11.765751838684082
    8. '[' → logprob: -12.140751838684082
    9. '
' → logprob: -12.390751838684082
    10. ')' → logprob: -13.515751838684082

Token 639: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.48024556040763855
    2. '   ' → logprob: -0.9802455902099609
    3. ' for' → logprob: -5.105245590209961
    4. '```' → logprob: -9.980245590209961
    5. 'def' → logprob: -10.730245590209961
    6. 'import' → logprob: -11.230245590209961
    7. '	for' → logprob: -13.480245590209961
    8. '
' → logprob: -14.480245590209961
    9. '    
' → logprob: -14.605245590209961
    10. '  ' → logprob: -15.480245590209961

Token 640: ' var' (ID: 972)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.10179789364337921
    2. 'var' → logprob: -2.6017978191375732
    3. 'mat' → logprob: -4.101798057556152
    4. 'variant' → logprob: -5.101798057556152
    5. 'pat' → logprob: -11.726798057556152
    6. 'm' → logprob: -12.351798057556152
    7. 'vt' → logprob: -13.726798057556152
    8. 'matrix' → logprob: -13.726798057556152
    9. ' mat' → logprob: -13.851798057556152
    10. ' v' → logprob: -13.851798057556152

Token 641: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005515960976481438
    2. '_tuple' → logprob: -6.005516052246094
    3. ' =' → logprob: -7.130516052246094
    4. 'iant' → logprob: -8.005516052246094
    5. '   ' → logprob: -8.130516052246094
    6. 'e' → logprob: -8.505516052246094
    7. 'iable' → logprob: -8.755516052246094
    8. 'iance' → logprob: -8.880516052246094
    9. '_bytes' → logprob: -9.380516052246094
    10. 'i' → logprob: -9.380516052246094

Token 642: ' variants' (ID: 46908)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.3822689950466156
    2. '[' → logprob: -2.0072689056396484
    3. 'unique' → logprob: -2.6322689056396484
    4. '(unique' → logprob: -3.7572689056396484
    5. 'tuple' → logprob: -3.8822689056396484
    6. '(' → logprob: -3.8822689056396484
    7. 'variants' → logprob: -4.132268905639648
    8. '(map' → logprob: -5.132268905639648
    9. 'var' → logprob: -5.257268905639648
    10. ' map' → logprob: -5.382268905639648

Token 643: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3284478783607483
    2. ':' → logprob: -1.4534478187561035
    3. '       ' → logprob: -3.4534478187561035
    4. '   ' → logprob: -4.4534478187561035
    5. '):
' → logprob: -6.3284478187561035
    6. '():
' → logprob: -7.9534478187561035
    7. '[' → logprob: -8.828448295593262
    8. ',' → logprob: -8.828448295593262
    9. '[:' → logprob: -9.703448295593262
    10. ' :
' → logprob: -10.078448295593262

Token 644: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014849884435534477
    2. '   ' → logprob: -4.264849662780762
    3. '        
' → logprob: -8.514849662780762
    4. '```' → logprob: -9.139849662780762
    5. '    
' → logprob: -9.389849662780762
    6. ':' → logprob: -9.639849662780762
    7. '
' → logprob: -9.764849662780762
    8. '<|end|>' → logprob: -10.014849662780762
    9. ':
' → logprob: -10.389849662780762
    10. '{' → logprob: -11.264849662780762

Token 645: ' #' (ID: 1069)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.2602611482143402
    2. 't' → logprob: -2.010261058807373
    3. 'hash' → logprob: -3.385261058807373
    4. '   ' → logprob: -3.760261058807373
    5. 'h' → logprob: -3.885261058807373
    6. '       ' → logprob: -5.510261058807373
    7. 'serialized' → logprob: -5.510261058807373
    8. ' key' → logprob: -6.010261058807373
    9. 'hs' → logprob: -6.760261058807373
    10. 's' → logprob: -7.010261058807373

Token 646: ' convertir' (ID: 79223)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.479966402053833
    2. 'key' → logprob: -1.104966402053833
    3. 'hash' → logprob: -4.104966163635254
    4. 'h' → logprob: -4.229966163635254
    5. 'serialized' → logprob: -5.229966163635254
    6. ' key' → logprob: -6.104966163635254
    7. 'repr' → logprob: -6.104966163635254
    8. 'tpl' → logprob: -6.854966163635254
    9. '   ' → logprob: -6.854966163635254
    10. '#' → logprob: -6.854966163635254

Token 647: ' la' (ID: 557)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.043384622782468796
    2. ' tuple' → logprob: -3.543384552001953
    3. 'to' → logprob: -5.293384552001953
    4. '(tuple' → logprob: -5.543384552001953
    5. 'tu' → logprob: -5.918384552001953
    6. 'var' → logprob: -7.793384552001953
    7. '   ' → logprob: -7.918384552001953
    8. 't' → logprob: -7.918384552001953
    9. '       ' → logprob: -8.293384552001953
    10. ' to' → logprob: -9.043384552001953

Token 648: ' matr' (ID: 25095)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.00024727347772568464
    2. ' tuple' → logprob: -8.37524700164795
    3. '(tuple' → logprob: -11.62524700164795
    4. 'str' → logprob: -11.87524700164795
    5. 'repr' → logprob: -14.75024700164795
    6. 'tu' → logprob: -15.37524700164795
    7. 'bytes' → logprob: -16.750247955322266
    8. '[' → logprob: -17.375247955322266
    9. 'token' → logprob: -17.625247955322266
    10. '
' → logprob: -17.875247955322266

Token 649: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.0025168005377054214
    2. 'ix' → logprob: -6.002516746520996
    3. '[' → logprob: -11.377516746520996
    4. 'ce' → logprob: -12.252516746520996
    5. 'ixe' → logprob: -12.252516746520996
    6. 'rice' → logprob: -12.627516746520996
    7. 'x' → logprob: -12.627516746520996
    8. 'ic' → logprob: -12.752516746520996
    9. 'ize' → logprob: -13.502516746520996
    10. '   ' → logprob: -13.627516746520996

Token 650: ' en' (ID: 469)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.3433334529399872
    2. 'to' → logprob: -1.3433334827423096
    3. ' tuple' → logprob: -4.7183332443237305
    4. 'into' → logprob: -5.3433332443237305
    5. ' to' → logprob: -5.3433332443237305
    6. '(tuple' → logprob: -5.3433332443237305
    7. ' into' → logprob: -5.5933332443237305
    8. '   ' → logprob: -7.7183332443237305
    9. ' =' → logprob: -7.8433332443237305
    10. '=' → logprob: -7.8433332443237305

Token 651: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -8.745069499127567e-05
    2. ' tuple' → logprob: -9.37508773803711
    3. '(tuple' → logprob: -13.00008773803711
    4. 'tu' → logprob: -15.75008773803711
    5. 'str' → logprob: -15.87508773803711
    6. 'bytes' → logprob: -17.37508773803711
    7. '_tuple' → logprob: -19.25008773803711
    8. 'string' → logprob: -19.25008773803711
    9. '   ' → logprob: -19.62508773803711
    10. 'repr' → logprob: -20.12508773803711

Token 652: ' de' (ID: 334)
  Prédit: '(tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(tuple' → logprob: -0.010646652430295944
    2. '([' → logprob: -4.885646820068359
    3. '(map' → logprob: -6.010646820068359
    4. ' of' → logprob: -8.76064682006836
    5. '(' → logprob: -8.88564682006836
    6. '       ' → logprob: -9.38564682006836
    7. '([(' → logprob: -10.01064682006836
    8. 'tuple' → logprob: -10.13564682006836
    9. 'of' → logprob: -10.63564682006836
    10. '(row' → logprob: -11.13564682006836

Token 653: ' tuples' (ID: 112464)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.011493386700749397
    2. 'tu' → logprob: -4.51149320602417
    3. ' tuple' → logprob: -8.386493682861328
    4. '(tuple' → logprob: -8.636493682861328
    5. ' tuples' → logprob: -10.136493682861328
    6. 'rows' → logprob: -15.636493682861328
    7. 'map' → logprob: -15.886493682861328
    8. '[' → logprob: -16.511493682861328
    9. '   ' → logprob: -17.261493682861328
    10. '(' → logprob: -18.136493682861328

Token 654: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7711960077285767
    2. '       ' → logprob: -1.1461960077285767
    3. '(tuple' → logprob: -1.7711960077285767
    4. 'tuple' → logprob: -3.771195888519287
    5. '=' → logprob: -4.646195888519287
    6. '(row' → logprob: -5.646195888519287
    7. ' tuple' → logprob: -5.896195888519287
    8. 'var' → logprob: -6.021195888519287
    9. '(var' → logprob: -6.521195888519287
    10. ':' → logprob: -6.646195888519287

Token 655: ' pouvoir' (ID: 27197)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.24122846126556396
    2. 'tuple' → logprob: -1.616228461265564
    3. ' tuple' → logprob: -4.8662285804748535
    4. ' hash' → logprob: -6.2412285804748535
    5. '(tuple' → logprob: -6.3662285804748535
    6. '[' → logprob: -6.6162285804748535
    7. 'tu' → logprob: -7.4912285804748535
    8. 'key' → logprob: -7.4912285804748535
    9. 'var' → logprob: -7.7412285804748535
    10. 'immutable' → logprob: -7.8662285804748535

Token 656: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.0072592198848724365
    2. 'tuple' → logprob: -5.382259368896484
    3. '(hash' → logprob: -6.507259368896484
    4. ' hash' → logprob: -7.257259368896484
    5. '(tuple' → logprob: -9.007259368896484
    6. 'key' → logprob: -9.132259368896484
    7. ' tuple' → logprob: -9.882259368896484
    8. '   ' → logprob: -10.132259368896484
    9. '_hash' → logprob: -10.257259368896484
    10. '[' → logprob: -10.757259368896484

Token 657: '
' (ID: 198)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.09533150494098663
    2. 'able' → logprob: -3.5953314304351807
    3. '(var' → logprob: -4.22033166885376
    4. '(' → logprob: -4.34533166885376
    5. '       ' → logprob: -4.84533166885376
    6. 'é' → logprob: -5.47033166885376
    7. '   ' → logprob: -5.47033166885376
    8. 'ing' → logprob: -5.59533166885376
    9. 'ifier' → logprob: -5.72033166885376
    10. 'ée' → logprob: -6.09533166885376

Token 658: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005522954277694225
    2. ' =' → logprob: -5.505522727966309
    3. ':' → logprob: -7.505522727966309
    4. '=' → logprob: -8.130522727966309
    5. '):
' → logprob: -9.130522727966309
    6. ')' → logprob: -9.255522727966309
    7. ':
' → logprob: -9.630522727966309
    8. '):' → logprob: -10.130522727966309
    9. ',' → logprob: -10.255522727966309
    10. '
' → logprob: -10.755522727966309

Token 659: ' tup' (ID: 84170)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.21376267075538635
    2. 't' → logprob: -2.3387627601623535
    3. 'tpl' → logprob: -3.4637627601623535
    4. ' tup' → logprob: -4.2137627601623535
    5. 'key' → logprob: -4.3387627601623535
    6. ' tuple' → logprob: -4.4637627601623535
    7. 'row' → logprob: -4.7137627601623535
    8. 'matrix' → logprob: -4.9637627601623535
    9. '   ' → logprob: -5.8387627601623535
    10. ' t' → logprob: -6.5887627601623535

Token 660: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3120470345020294
    2. 'ed' → logprob: -2.437047004699707
    3. '=' → logprob: -2.562047004699707
    4. '_var' → logprob: -2.562047004699707
    5. 'var' → logprob: -4.812047004699707
    6. 'e' → logprob: -5.187047004699707
    7. 'o' → logprob: -5.312047004699707
    8. 'd' → logprob: -5.937047004699707
    9. '   ' → logprob: -7.437047004699707
    10. '_mat' → logprob: -7.812047004699707

Token 661: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0005984273157082498
    2. ' tuple' → logprob: -7.500598430633545
    3. '(tuple' → logprob: -10.000597953796387
    4. '   ' → logprob: -18.000598907470703
    5. 'tu' → logprob: -20.750598907470703
    6. '  ' → logprob: -21.250598907470703
    7. '       ' → logprob: -21.500598907470703
    8. '(' → logprob: -21.750598907470703
    9. ' ' → logprob: -21.750598907470703
    10. '    ' → logprob: -22.000598907470703

Token 662: '(tuple' (ID: 133029)
  Prédit: '(tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tuple' → logprob: -0.030085299164056778
    2. 'tuple' → logprob: -3.530085325241089
    3. '(map' → logprob: -8.280085563659668
    4. 'map' → logprob: -10.155085563659668
    5. '(' → logprob: -10.530085563659668
    6. ' tuple' → logprob: -11.280085563659668
    7. '([' → logprob: -13.155085563659668
    8. '[' → logprob: -13.780085563659668
    9. ' (' → logprob: -18.28008460998535
    10. 'row' → logprob: -19.40508460998535

Token 663: '(row' (ID: 15945)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.008627106435596943
    2. '(row' → logprob: -4.758626937866211
    3. 'line' → logprob: -11.383626937866211
    4. 'ligne' → logprob: -14.758626937866211
    5. 'r' → logprob: -15.008626937866211
    6. ' row' → logprob: -15.258626937866211
    7. '(r' → logprob: -16.38362693786621
    8. '	row' → logprob: -17.13362693786621
    9. '=row' → logprob: -17.50862693786621
    10. '(line' → logprob: -17.88362693786621

Token 664: ')' (ID: 8)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.28514519333839417
    2. ')' → logprob: -1.7851451635360718
    3. 'row' → logprob: -2.6601452827453613
    4. 'for' → logprob: -4.660145282745361
    5. ' for' → logprob: -7.535145282745361
    6. '   ' → logprob: -9.160144805908203
    7. '       ' → logprob: -9.785144805908203
    8. '=row' → logprob: -10.160144805908203
    9. ' row' → logprob: -10.410144805908203
    10. 'var' → logprob: -10.535144805908203

Token 665: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5958226919174194
    2. ' for' → logprob: -0.8458226919174194
    3. ')' → logprob: -3.970822811126709
    4. '       ' → logprob: -8.22082233428955
    5. '   ' → logprob: -8.34582233428955
    6. '(row' → logprob: -9.22082233428955
    7. '        ' → logprob: -9.34582233428955
    8. 'row' → logprob: -10.09582233428955
    9. '           ' → logprob: -10.22082233428955
    10. '    ' → logprob: -11.09582233428955

Token 666: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.0011706985533237457
    2. ' row' → logprob: -6.751170635223389
    3. 'var' → logprob: -15.376171112060547
    4. '	row' → logprob: -16.126171112060547
    5. '(row' → logprob: -16.501171112060547
    6. '=row' → logprob: -18.876171112060547
    7. ' ' → logprob: -19.126171112060547
    8. '[row' → logprob: -19.251171112060547
    9. '$row' → logprob: -19.751171112060547
    10. '   ' → logprob: -20.376171112060547

Token 667: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.094086192548275
    2. 'in' → logprob: -2.469086170196533
    3. 'var' → logprob: -5.344086170196533
    4. 'row' → logprob: -8.094086647033691
    5. ' var' → logprob: -9.969086647033691
    6. ' row' → logprob: -13.719086647033691
    7. ')' → logprob: -13.844086647033691
    8. ' ' → logprob: -14.344086647033691
    9. ',row' → logprob: -14.844086647033691
    10. ')var' → logprob: -14.844086647033691

Token 668: ' var' (ID: 972)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.00015860427811276168
    2. ' var' → logprob: -8.750158309936523
    3. '[var' → logprob: -17.125158309936523
    4. '   ' → logprob: -17.500158309936523
    5. ')var' → logprob: -18.375158309936523
    6. '(var' → logprob: -18.500158309936523
    7. '
' → logprob: -19.500158309936523
    8. '_var' → logprob: -20.125158309936523
    9. ' ' → logprob: -20.625158309936523
    10. 'variant' → logprob: -20.750158309936523

Token 669: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0026071679312735796
    2. ')' → logprob: -6.002607345581055
    3. '       ' → logprob: -9.252607345581055
    4. ')
' → logprob: -10.252607345581055
    5. ' )
' → logprob: -16.127607345581055
    6. '   ' → logprob: -16.377607345581055
    7. ')`
' → logprob: -16.877607345581055
    8. '))
' → logprob: -17.127607345581055
    9. '())
' → logprob: -17.502607345581055
    10. ')

' → logprob: -17.502607345581055

Token 670: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00033534664544276893
    2. '<|end|>' → logprob: -8.875335693359375
    3. ':' → logprob: -9.500335693359375
    4. ')' → logprob: -10.000335693359375
    5. '   ' → logprob: -10.375335693359375
    6. ' if' → logprob: -11.375335693359375
    7. ',' → logprob: -11.750335693359375
    8. '):
' → logprob: -11.875335693359375
    9. '<|end|>' → logprob: -12.125335693359375
    10. '           ' → logprob: -12.625335693359375

Token 671: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7344146370887756
    2. 'if' (adapté à ' if') → logprob: -1.2344145774841309
    3. '       ' → logprob: -1.4844145774841309
    4. '   ' → logprob: -5.984414577484131
    5. '           ' → logprob: -10.484415054321289
    6. '	if' → logprob: -10.984415054321289
    7. ' ' → logprob: -12.859415054321289
    8. '    ' → logprob: -13.484415054321289
    9. '```' → logprob: -13.734415054321289
    10. '  ' → logprob: -13.984415054321289

Token 672: ' tup' (ID: 84170)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.02326434850692749
    2. ' tup' → logprob: -3.7732644081115723
    3. ' t' → logprob: -11.773263931274414
    4. '	t' → logprob: -12.023263931274414
    5. '   ' → logprob: -13.148263931274414
    6. '`t' → logprob: -13.648263931274414
    7. '       ' → logprob: -14.773263931274414
    8. ' ' → logprob: -15.648263931274414
    9. '_t' → logprob: -15.898263931274414
    10. ' not' → logprob: -16.023263931274414

Token 673: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03804286941885948
    2. 'not' → logprob: -3.2880427837371826
    3. '	not' → logprob: -13.913043022155762
    4. ')' → logprob: -14.788043022155762
    5. ' in' → logprob: -16.538042068481445
    6. ':not' → logprob: -17.163042068481445
    7. '   ' → logprob: -17.288042068481445
    8. '_not' → logprob: -17.663042068481445
    9. '
' → logprob: -18.788042068481445
    10. 'in' → logprob: -18.913042068481445

Token 674: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5764696002006531
    2. 'in' → logprob: -0.8264696002006531
    3. 'seen' → logprob: -7.701469421386719
    4. '   ' → logprob: -10.076469421386719
    5. ' seen' → logprob: -10.576469421386719
    6. '       ' → logprob: -11.951469421386719
    7. 'se' → logprob: -13.701469421386719
    8. '           ' → logprob: -14.201469421386719
    9. '_seen' → logprob: -14.326469421386719
    10. '	in' → logprob: -14.576469421386719

Token 675: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' → logprob: -1.0280383548888494e-06
    2. ' seen' → logprob: -13.875000953674316
    3. '   ' → logprob: -18.875001907348633
    4. '
' → logprob: -21.125001907348633
    5. 'see' → logprob: -21.375001907348633
    6. 'shown' → logprob: -21.375001907348633
    7. ' ' → logprob: -22.625001907348633
    8. 'visited' → logprob: -22.875001907348633
    9. 's' → logprob: -23.125001907348633
    10. 'se' → logprob: -23.500001907348633

Token 676: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07535994797945023
    2. ':' → logprob: -2.700360059738159
    3. '           ' → logprob: -5.32535982131958
    4. '):
' → logprob: -7.82535982131958
    5. '       ' → logprob: -9.200360298156738
    6. '   ' → logprob: -11.950360298156738
    7. ' :
' → logprob: -11.950360298156738
    8. ':
' → logprob: -12.075360298156738
    9. '):' → logprob: -12.200360298156738
    10. ' and' → logprob: -12.325360298156738

Token 677: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001716827624477446
    2. '       ' → logprob: -6.376716613769531
    3. '               ' → logprob: -12.251716613769531
    4. '```' → logprob: -12.626716613769531
    5. '   ' → logprob: -13.001716613769531
    6. 'continue' → logprob: -13.501716613769531
    7. '	       ' → logprob: -14.001716613769531
    8. 'seen' → logprob: -14.126716613769531
    9. '          ' → logprob: -14.751716613769531
    10. '
' → logprob: -15.876716613769531

Token 678: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' (adapté à ' seen') → logprob: -0.04423554986715317
    2. '           ' → logprob: -3.4192354679107666
    3. '       ' → logprob: -4.919235706329346
    4. ' seen' → logprob: -5.919235706329346
    5. '               ' → logprob: -8.169235229492188
    6. '   ' → logprob: -8.544235229492188
    7. '
' → logprob: -10.419235229492188
    8. '_seen' → logprob: -10.919235229492188
    9. 'se' → logprob: -11.419235229492188
    10. 'visited' → logprob: -13.044235229492188

Token 679: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.005306808277964592
    2. '.' → logprob: -5.255306720733643
    3. 'add' → logprob: -9.6303071975708
    4. ' .' → logprob: -12.3803071975708
    5. '=' → logprob: -13.3803071975708
    6. ' add' → logprob: -14.8803071975708
    7. '.=' → logprob: -15.0053071975708
    8. '   ' → logprob: -15.3803071975708
    9. '	add' → logprob: -15.7553071975708
    10. '_add' → logprob: -16.130306243896484

Token 680: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.0
    3. 't' → logprob: -17.125
    4. ' (' → logprob: -19.125
    5. '	t' → logprob: -19.25
    6. '(
' → logprob: -19.875
    7. '   ' → logprob: -21.625
    8. '((' → logprob: -22.125
    9. '(T' → logprob: -22.875
    10. ',t' → logprob: -23.25

Token 681: 'up' (ID: 817)
  Prédit: 'up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -4.8590300139039755e-05
    2. 't' → logprob: -10.875048637390137
    3. ' tup' → logprob: -10.875048637390137
    4. 'uple' → logprob: -12.125048637390137
    5. 'u' → logprob: -12.750048637390137
    6. '(up' → logprob: -14.500048637390137
    7. 'upl' → logprob: -15.125048637390137
    8. 'upp' → logprob: -15.375048637390137
    9. 'p' → logprob: -15.750048637390137
    10. 'ut' → logprob: -15.875048637390137

Token 682: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017215918749570847
    2. ')' → logprob: -4.392215728759766
    3. ')
' → logprob: -5.517215728759766
    4. '       ' → logprob: -7.517215728759766
    5. ',' → logprob: -10.017215728759766
    6. '<|end|>' → logprob: -10.767215728759766
    7. '               ' → logprob: -11.142215728759766
    8. '   ' → logprob: -11.142215728759766
    9. '```' → logprob: -11.517215728759766
    10. '
' → logprob: -11.892215728759766

Token 683: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001636024098843336
    2. '       ' → logprob: -6.501636028289795
    3. '   ' → logprob: -9.001635551452637
    4. '```' → logprob: -12.376635551452637
    5. '<|end|>' → logprob: -12.876635551452637
    6. '	       ' → logprob: -14.376635551452637
    7. ' unique' → logprob: -14.626635551452637
    8. '          ' → logprob: -14.626635551452637
    9. '               ' → logprob: -15.001635551452637
    10. '<|end|>' → logprob: -15.001635551452637

Token 684: ' unique' (ID: 5746)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' (adapté à ' unique') → logprob: -0.07333081215620041
    2. ' unique' → logprob: -2.823330879211426
    3. '           ' → logprob: -4.573330879211426
    4. '   ' → logprob: -7.573330879211426
    5. '       ' → logprob: -7.698330879211426
    6. '               ' → logprob: -12.698330879211426
    7. '.unique' → logprob: -13.448330879211426
    8. '(unique' → logprob: -13.698330879211426
    9. ' ' → logprob: -14.573330879211426
    10. '_unique' → logprob: -14.823330879211426

Token 685: '_vari' (ID: 94080)
  Prédit: '_vari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vari' → logprob: -1.1472419600977446e-06
    2. 'variants' → logprob: -14.500000953674316
    3. '_transform' → logprob: -16.250001907348633
    4. '_versions' → logprob: -16.375001907348633
    5. '_variant' → logprob: -16.625001907348633
    6. '_var' → logprob: -16.625001907348633
    7. '```' → logprob: -16.750001907348633
    8. 'Variants' → logprob: -16.750001907348633
    9. '_patterns' → logprob: -16.750001907348633
    10. '
' → logprob: -17.875001907348633

Token 686: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -7.100059156073257e-05
    2. 'ents' → logprob: -9.750070571899414
    3. 'variants' → logprob: -12.250070571899414
    4. 'ats' → logprob: -12.875070571899414
    5. 'ers' → logprob: -14.125070571899414
    6. 'antes' → logprob: -14.250070571899414
    7. 'nts' → logprob: -14.375070571899414
    8. 'nants' → logprob: -14.875070571899414
    9. 's' → logprob: -15.000070571899414
    10. '_' → logprob: -15.000070571899414

Token 687: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.3425219549390022e-05
    2. '.' → logprob: -11.25001335144043
    3. '.app' → logprob: -15.62501335144043
    4. 'append' → logprob: -16.12501335144043
    5. '.Append' → logprob: -17.62501335144043
    6. '.add' → logprob: -18.00001335144043
    7. ' .' → logprob: -18.12501335144043
    8. '.extend' → logprob: -18.25001335144043
    9. ').' → logprob: -18.50001335144043
    10. '.ap' → logprob: -19.00001335144043

Token 688: '(var' (ID: 15816)
  Prédit: '(var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(var' → logprob: -0.0019289902411401272
    2. 'var' → logprob: -6.251928806304932
    3. ' var' → logprob: -14.75192928314209
    4. '(' → logprob: -17.126928329467773
    5. ')var' → logprob: -17.126928329467773
    6. '[var' → logprob: -17.876928329467773
    7. ',var' → logprob: -19.626928329467773
    8. 'Var' → logprob: -20.876928329467773
    9. '_var' → logprob: -21.001928329467773
    10. '(val' → logprob: -21.501928329467773

Token 689: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009784539230167866
    2. ')
' → logprob: -4.634784698486328
    3. '       ' → logprob: -11.384784698486328
    4. '   ' → logprob: -11.384784698486328
    5. ')return' → logprob: -12.259784698486328
    6. ')

' → logprob: -15.009784698486328
    7. ')
' → logprob: -15.009784698486328
    8. ' )' → logprob: -15.759784698486328
    9. ')`
' → logprob: -16.509784698486328
    10. '),' → logprob: -16.884784698486328

Token 690: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004117223434150219
    2. 'return' → logprob: -5.504117012023926
    3. ' return' → logprob: -10.504117012023926
    4. '
' → logprob: -11.504117012023926
    5. '    
' → logprob: -14.754117012023926
    6. '```' → logprob: -15.504117012023926
    7. '	return' → logprob: -15.504117012023926
    8. '       ' → logprob: -16.004117965698242
    9. ':return' → logprob: -16.004117965698242
    10. '<|end|>' → logprob: -16.504117965698242

Token 691: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6946031451225281
    2. 'return' (adapté à ' return') → logprob: -0.6946031451225281
    3. ' return' → logprob: -6.694602966308594
    4. '
' → logprob: -8.694602966308594
    5. '    
' → logprob: -11.069602966308594
    6. '```' → logprob: -11.194602966308594
    7. '	return' → logprob: -11.694602966308594
    8. ':return' → logprob: -12.569602966308594
    9. ' ' → logprob: -13.444602966308594
    10. '_return' → logprob: -13.569602966308594

Token 692: ' unique' (ID: 5746)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -7.493430894101039e-05
    2. ' unique' → logprob: -9.500075340270996
    3. '(unique' → logprob: -18.87507438659668
    4. 'uni' → logprob: -20.75007438659668
    5. 'uniq' → logprob: -20.75007438659668
    6. '   ' → logprob: -21.75007438659668
    7. '.unique' → logprob: -21.87507438659668
    8. '_unique' → logprob: -22.37507438659668
    9. '  ' → logprob: -23.62507438659668
    10. ' уник' → logprob: -23.62507438659668

Token 693: '_vari' (ID: 94080)
  Prédit: '_vari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vari' → logprob: -5.319370302458992e-06
    2. '_var' → logprob: -12.625005722045898
    3. 'variants' → logprob: -13.250005722045898
    4. '_versions' → logprob: -17.2500057220459
    5. '_variant' → logprob: -17.5000057220459
    6. 'Variants' → logprob: -17.6250057220459
    7. 'var' → logprob: -17.7500057220459
    8. 'vari' → logprob: -18.0000057220459
    9. 't' → logprob: -18.1250057220459
    10. 's' → logprob: -18.3750057220459

Token 694: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.00023357603640761226
    2. 's' → logprob: -9.25023365020752
    3. 'nts' → logprob: -9.87523365020752
    4. 'ations' → logprob: -10.25023365020752
    5. 'ers' → logprob: -10.87523365020752
    6. 'rs' → logprob: -11.12523365020752
    7. 'nants' → logprob: -12.12523365020752
    8. 'r' → logprob: -12.75023365020752
    9. 'ANTS' → logprob: -13.50023365020752
    10. 'ents' → logprob: -13.87523365020752

Token 695: '


' (ID: 2499)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01538506057113409
    2. '

' → logprob: -4.765385150909424
    3. '<|end|>' → logprob: -5.140385150909424
    4. '
' → logprob: -7.640385150909424
    5. '


' → logprob: -8.515384674072266
    6. '<|end|>' → logprob: -9.140384674072266
    7. '#' → logprob: -10.140384674072266
    8. '```' → logprob: -11.140384674072266
    9. '  
' → logprob: -11.515384674072266
    10. '    
' → logprob: -12.140384674072266

Token 696: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.088346359931165e-07
    2. '#' → logprob: -14.500000953674316
    3. '
' → logprob: -16.75
    4. '```' → logprob: -17.0
    5. '    
' → logprob: -17.25
    6. '  
' → logprob: -17.25
    7. '

' → logprob: -17.25
    8. ' def' → logprob: -17.625
    9. 'import' → logprob: -18.25
    10. ' 
' → logprob: -18.75

Token 697: ' match' (ID: 3981)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.23261068761348724
    2. ' find' → logprob: -1.9826107025146484
    3. 'search' → logprob: -3.1076107025146484
    4. 'match' → logprob: -4.857610702514648
    5. 'pattern' → logprob: -5.232610702514648
    6. 'count' → logprob: -5.857610702514648
    7. 'extract' → logprob: -6.232610702514648
    8. 'main' → logprob: -6.232610702514648
    9. 'read' → logprob: -6.607610702514648
    10. ' search' → logprob: -7.107610702514648

Token 698: '_at' (ID: 8254)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08877062052488327
    2. '_pattern' → logprob: -3.088770627975464
    3. '(' → logprob: -3.838770627975464
    4. '_(' → logprob: -4.338770389556885
    5. '(pattern' → logprob: -6.338770389556885
    6. '_matrix' → logprob: -7.463770389556885
    7. '_token' → logprob: -7.713770389556885
    8. '_at' → logprob: -8.088770866394043
    9. '(p' → logprob: -8.213770866394043
    10. '_p' → logprob: -8.213770866394043

Token 699: '(image' (ID: 19974)
  Prédit: '(mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mat' → logprob: -0.13215544819831848
    2. '(matrix' → logprob: -2.132155418395996
    3. 'position' → logprob: -6.382155418395996
    4. '(grid' → logprob: -6.507155418395996
    5. '_position' → logprob: -7.382155418395996
    6. '(pos' → logprob: -7.632155418395996
    7. 'pos' → logprob: -8.132155418395996
    8. '(position' → logprob: -8.632155418395996
    9. '(pattern' → logprob: -8.757155418395996
    10. ' (' → logprob: -9.507155418395996

Token 700: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002444125711917877
    2. ' ,' → logprob: -9.375244140625
    3. ',image' → logprob: -10.000244140625
    4. ',row' → logprob: -10.125244140625
    5. ',m' → logprob: -11.000244140625
    6. ',p' → logprob: -11.250244140625
    7. ',line' → logprob: -11.375244140625
    8. ',pos' → logprob: -12.000244140625
    9. ',
' → logprob: -12.000244140625
    10. '(mat' → logprob: -12.500244140625

Token 701: ' pattern' (ID: 8302)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5258010625839233
    2. 'pattern' → logprob: -1.0258010625839233
    3. 'i' → logprob: -3.650801181793213
    4. 'top' → logprob: -4.650801181793213
    5. 'row' → logprob: -5.400801181793213
    6. ' x' → logprob: -5.650801181793213
    7. 'start' → logprob: -6.400801181793213
    8. ' pattern' → logprob: -6.400801181793213
    9. 'pat' → logprob: -6.775801181793213
    10. 'r' → logprob: -7.025801181793213

Token 702: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001600347168277949
    2. ',row' → logprob: -9.750160217285156
    3. ' ,' → logprob: -10.250160217285156
    4. ',p' → logprob: -10.625160217285156
    5. ',x' → logprob: -10.625160217285156
    6. ',i' → logprob: -11.500160217285156
    7. '   ' → logprob: -13.250160217285156
    8. ',pos' → logprob: -13.500160217285156
    9. ',start' → logprob: -14.125160217285156
    10. ',y' → logprob: -14.125160217285156

Token 703: ' start' (ID: 1604)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09316164255142212
    2. 'top' → logprob: -2.9681615829467773
    3. 'start' → logprob: -3.8431615829467773
    4. 'i' → logprob: -4.593161582946777
    5. 'row' → logprob: -5.343161582946777
    6. 'r' → logprob: -7.093161582946777
    7. 'pos' → logprob: -8.843161582946777
    8. ' x' → logprob: -9.218161582946777
    9. ' top' → logprob: -10.093161582946777
    10. 'si' → logprob: -10.343161582946777

Token 704: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.5351955890655518
    2. '_x' → logprob: -0.9101955890655518
    3. 'x' → logprob: -5.660195350646973
    4. '_y' → logprob: -5.660195350646973
    5. '_row' → logprob: -5.785195350646973
    6. ',' → logprob: -6.910195350646973
    7. '):' → logprob: -7.535195350646973
    8. 'i' → logprob: -8.910195350646973
    9. ',i' → logprob: -9.285195350646973
    10. '):
' → logprob: -9.785195350646973

Token 705: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.600714161526412e-05
    2. ' ,' → logprob: -10.000076293945312
    3. ',start' → logprob: -11.000076293945312
    4. ',j' → logprob: -12.375076293945312
    5. ',s' → logprob: -13.000076293945312
    6. ',i' → logprob: -13.375076293945312
    7. ',
' → logprob: -13.500076293945312
    8. ',n' → logprob: -13.875076293945312
    9. ',p' → logprob: -14.750076293945312
    10. '   ' → logprob: -14.750076293945312

Token 706: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.002476135268807411
    2. ' start' → logprob: -6.002476215362549
    3. '   ' → logprob: -15.12747573852539
    4. '
' → logprob: -17.00247573852539
    5. '	start' → logprob: -17.37747573852539
    6. '    ' → logprob: -17.75247573852539
    7. ' ' → logprob: -17.87747573852539
    8. '  ' → logprob: -18.62747573852539
    9. '_start' → logprob: -18.62747573852539
    10. '```' → logprob: -18.62747573852539

Token 707: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.004894769750535488
    2. '_i' → logprob: -5.504894733428955
    3. '_x' → logprob: -8.379895210266113
    4. ',' → logprob: -8.754895210266113
    5. ')' → logprob: -9.254895210266113
    6. '_n' → logprob: -9.879895210266113
    7. '```' → logprob: -9.879895210266113
    8. '_,' → logprob: -10.254895210266113
    9. '_' → logprob: -10.379895210266113
    10. ',j' → logprob: -10.629895210266113

Token 708: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015545014757663012
    2. '):
' → logprob: -6.501554489135742
    3. '   ' → logprob: -10.251554489135742
    4. ')' → logprob: -11.376554489135742
    5. ',' → logprob: -12.626554489135742
    6. '):
' → logprob: -13.626554489135742
    7. ' ):' → logprob: -14.501554489135742
    8. ':' → logprob: -15.751554489135742
    9. '):

' → logprob: -16.626554489135742
    10. '  ' → logprob: -16.876554489135742

Token 709: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010841365437954664
    2. 'p' → logprob: -7.001084327697754
    3. 'n' → logprob: -9.376084327697754
    4. '```' → logprob: -10.376084327697754
    5. '(p' → logprob: -10.501084327697754
    6. ' p' → logprob: -11.376084327697754
    7. '       ' → logprob: -12.251084327697754
    8. 'size' → logprob: -12.501084327697754
    9. '	p' → logprob: -13.001084327697754
    10. ',p' → logprob: -14.126084327697754

Token 710: ' """
' (ID: 7037)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.699248194694519
    2. '   ' → logprob: -0.699248194694519
    3. 'n' → logprob: -5.574248313903809
    4. 'for' → logprob: -6.824248313903809
    5. '"""
' (adapté à ' """
') → logprob: -7.574248313903809
    6. ' p' → logprob: -8.074248313903809
    7. ' for' → logprob: -8.574248313903809
    8. 'size' → logprob: -9.824248313903809
    9. '```' → logprob: -10.699248313903809
    10. '"""' → logprob: -10.699248313903809

Token 711: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018881839932873845
    2. '"' → logprob: -6.376888275146484
    3. '"""' → logprob: -9.251888275146484
    4. '"""
' → logprob: -9.626888275146484
    5. '       ' → logprob: -11.126888275146484
    6. 'for' → logprob: -13.251888275146484
    7. ' ' → logprob: -13.751888275146484
    8. '"
' → logprob: -14.126888275146484
    9. '    ' → logprob: -14.126888275146484
    10. ''' → logprob: -14.126888275146484

Token 712: ' Vér' (ID: 159169)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033295683097094297
    2. 'for' → logprob: -6.753329753875732
    3. ' for' → logprob: -6.753329753875732
    4. '"""
' → logprob: -7.753329753875732
    5. '"""' → logprob: -7.753329753875732
    6. ' """
' → logprob: -10.253329277038574
    7. '
' → logprob: -10.253329277038574
    8. 'def' → logprob: -10.753329277038574
    9. ' """' → logprob: -11.503329277038574
    10. '       ' → logprob: -11.878329277038574

Token 713: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.01618463359773159
    2. 'f' → logprob: -4.5161848068237305
    3. 'rif' → logprob: -5.6411848068237305
    4. 'if' → logprob: -6.8911848068237305
    5. 'ifies' → logprob: -8.51618480682373
    6. 'fine' → logprob: -9.64118480682373
    7. 'fi' → logprob: -10.14118480682373
    8. 't' → logprob: -10.64118480682373
    9. 'fic' → logprob: -10.76618480682373
    10. 'face' → logprob: -10.76618480682373

Token 714: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8431826829910278
    2. ' si' → logprob: -0.8431826829910278
    3. ' if' → logprob: -2.3431825637817383
    4. ' (' → logprob: -4.468182563781738
    5. '(
' → logprob: -4.718182563781738
    6. 'if' → logprob: -5.218182563781738
    7. 'si' → logprob: -5.718182563781738
    8. ' que' → logprob: -6.093182563781738
    9. ' ' → logprob: -6.093182563781738
    10. '  ' → logprob: -6.343182563781738

Token 715: ' le' (ID: 505)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6288325786590576
    2. 'pattern' → logprob: -1.6288325786590576
    3. ' pattern' → logprob: -2.8788325786590576
    4. ' image' → logprob: -2.8788325786590576
    5. ' len' → logprob: -3.0038325786590576
    6. 'image' → logprob: -3.3788325786590576
    7. 'l' → logprob: -4.128832817077637
    8. '   ' → logprob: -4.628832817077637
    9. 'match' → logprob: -4.628832817077637
    10. ' match' → logprob: -4.878832817077637

Token 716: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.03807729855179787
    2. ' pattern' → logprob: -3.2880773544311523
    3. 'pat' → logprob: -10.413077354431152
    4. '   ' → logprob: -13.163077354431152
    5. 'p' → logprob: -13.288077354431152
    6. '```' → logprob: -14.538077354431152
    7. '    ' → logprob: -15.163077354431152
    8. 'n' → logprob: -15.288077354431152
    9. '(pattern' → logprob: -15.538077354431152
    10. 'def' → logprob: -16.288076400756836

Token 717: ' est' (ID: 893)
  Prédit: ' matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matches' → logprob: -0.3405304253101349
    2. '   ' → logprob: -2.2155303955078125
    3. 'matches' → logprob: -3.4655303955078125
    4. '[start' → logprob: -3.4655303955078125
    5. ' is' → logprob: -3.8405303955078125
    6. ' est' → logprob: -3.9655303955078125
    7. '[' → logprob: -4.2155303955078125
    8. ' se' → logprob: -4.8405303955078125
    9. ' match' → logprob: -4.9655303955078125
    10. ' at' → logprob: -4.9655303955078125

Token 718: ' exactement' (ID: 108701)
  Prédit: 'prés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prés' → logprob: -1.5413165092468262
    2. 'exact' → logprob: -1.7913165092468262
    3. 'compatible' → logprob: -2.041316509246826
    4. ' présent' → logprob: -2.166316509246826
    5. ' parfaitement' → logprob: -2.416316509246826
    6. 'ent' → logprob: -2.666316509246826
    7. 'present' → logprob: -3.291316509246826
    8. ' entièrement' → logprob: -3.416316509246826
    9. 'int' → logprob: -3.916316509246826
    10. '   ' → logprob: -4.416316509246826

Token 719: ' égal' (ID: 15059)
  Prédit: 'present'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'present' → logprob: -0.4686893820762634
    2. 'match' → logprob: -1.7186894416809082
    3. 'prés' → logprob: -2.093689441680908
    4. ' présent' → logprob: -3.718689441680908
    5. 'conten' → logprob: -4.218689441680908
    6. 'matches' → logprob: -4.843689441680908
    7. 'matched' → logprob: -5.093689441680908
    8. 'ident' → logprob: -5.343689441680908
    9. 'compatible' → logprob: -5.843689441680908
    10. 'found' → logprob: -6.093689441680908

Token 720: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7462248206138611
    2. '   ' → logprob: -1.1212248802185059
    3. 'à' → logprob: -2.246224880218506
    4. '(' → logprob: -3.246224880218506
    5. ' ' → logprob: -4.496224880218506
    6. ' (' → logprob: -4.496224880218506
    7. ')' → logprob: -4.621224880218506
    8. '(image' → logprob: -4.996224880218506
    9. '(
' → logprob: -5.871224880218506
    10. '       ' → logprob: -6.246224880218506

Token 721: ' la' (ID: 557)
  Prédit: ' image'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' image' → logprob: -0.2015460729598999
    2. 'image' → logprob: -1.7015460729599
    3. '   ' → logprob: -9.451545715332031
    4. 'pattern' → logprob: -11.076545715332031
    5. ''image' → logprob: -11.826545715332031
    6. '(image' → logprob: -12.076545715332031
    7. ' pattern' → logprob: -12.201545715332031
    8. '=image' → logprob: -12.201545715332031
    9. ' l' → logprob: -12.576545715332031
    10. 'l' → logprob: -12.701545715332031

Token 722: ' portion' (ID: 19137)
  Prédit: 'image'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'image' → logprob: -0.27322548627853394
    2. ' image' → logprob: -2.2732255458831787
    3. 'pattern' → logprob: -2.2732255458831787
    4. 'mat' → logprob: -3.8982255458831787
    5. ' pattern' → logprob: -5.3982253074646
    6. 'sub' → logprob: -5.6482253074646
    7. 'pat' → logprob: -7.1482253074646
    8. 'matrix' → logprob: -7.2732253074646
    9. '[' → logprob: -7.3982253074646
    10. ''image' → logprob: -8.148225784301758

Token 723: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6842229962348938
    2. ' de' → logprob: -1.684222936630249
    3. '[' → logprob: -1.809222936630249
    4. '_' → logprob: -3.309222936630249
    5. 'de' → logprob: -3.559222936630249
    6. '_de' → logprob: -4.059223175048828
    7. '[start' → logprob: -4.184223175048828
    8. '    ' → logprob: -4.809223175048828
    9. ' suivante' → logprob: -5.184223175048828
    10. '[position' → logprob: -5.309223175048828

Token 724: ' image' (ID: 3621)
  Prédit: ' image'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' image' → logprob: -0.1002415120601654
    2. 'image' → logprob: -2.3502414226531982
    3. ' l' → logprob: -10.850241661071777
    4. ''image' → logprob: -12.100241661071777
    5. 'l' → logprob: -12.600241661071777
    6. '=image' → logprob: -13.225241661071777
    7. '(image' → logprob: -13.475241661071777
    8. '   ' → logprob: -14.475241661071777
    9. ' ' → logprob: -14.725241661071777
    10. 'mat' → logprob: -14.850241661071777

Token 725: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.42260077595710754
    2. '[start' → logprob: -1.1726007461547852
    3. '   ' → logprob: -4.297600746154785
    4. '[position' → logprob: -5.297600746154785
    5. '[source' → logprob: -5.297600746154785
    6. ',' → logprob: -6.547600746154785
    7. ' at' → logprob: -6.672600746154785
    8. ' à' → logprob: -6.922600746154785
    9. 'image' → logprob: -7.172600746154785
    10. '(image' → logprob: -7.422600746154785

Token 726: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6002313494682312
    2. '   ' → logprob: -0.9752313494682312
    3. '       ' → logprob: -3.975231409072876
    4. ' at' → logprob: -4.225231170654297
    5. ' à' → logprob: -4.725231170654297
    6. '```' → logprob: -5.725231170654297
    7. '[position' → logprob: -5.850231170654297
    8. '[start' → logprob: -5.975231170654297
    9. ' située' → logprob: -6.100231170654297
    10. '[source' → logprob: -6.350231170654297

Token 727: ' comm' (ID: 1394)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6373828649520874
    2. ',' → logprob: -1.2623828649520874
    3. '   ' → logprob: -2.262382984161377
    4. 'à' → logprob: -3.262382984161377
    5. ' à' → logprob: -4.137382984161377
    6. '[position' → logprob: -5.637382984161377
    7. ' située' → logprob: -5.762382984161377
    8. 'at' → logprob: -5.887382984161377
    9. ',image' → logprob: -6.137382984161377
    10. 'dans' → logprob: -6.262382984161377

Token 728: 'en' (ID: 262)
  Prédit: 'encé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'encé' → logprob: -0.1349819302558899
    2. 'enc' → logprob: -2.384981870651245
    3. 'ence' → logprob: -4.009982109069824
    4. 'enç' → logprob: -4.759982109069824
    5. 'ent' → logprob: -5.509982109069824
    6. 'en' → logprob: -6.134982109069824
    7. 'encent' → logprob: -7.259982109069824
    8. 'ancée' → logprob: -8.259982109069824
    9. 'enced' → logprob: -9.509982109069824
    10. 'encement' → logprob: -10.134982109069824

Token 729: 'çant' (ID: 78714)
  Prédit: 'çant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'çant' → logprob: -0.2989656627178192
    2. 'encé' → logprob: -2.6739656925201416
    3. 'cée' → logprob: -2.7989656925201416
    4. 'ancée' → logprob: -3.1739656925201416
    5. 'enc' → logprob: -3.6739656925201416
    6. 'anç' → logprob: -4.4239654541015625
    7. 'ç' → logprob: -4.9239654541015625
    8. 'enç' → logprob: -5.1739654541015625
    9. 'ancé' → logprob: -5.4239654541015625
    10. 'ant' → logprob: -5.7989654541015625

Token 730: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.40930551290512085
    2. ' à' → logprob: -1.5343055725097656
    3. '[start' → logprob: -2.4093055725097656
    4. '   ' → logprob: -4.534305572509766
    5. 'at' → logprob: -4.909305572509766
    6. '[' → logprob: -5.534305572509766
    7. ' at' → logprob: -6.034305572509766
    8. '[i' → logprob: -6.534305572509766
    9. ' ' → logprob: -6.784305572509766
    10. ')' → logprob: -7.659305572509766

Token 731: ' (' (ID: 350)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.6931567788124084
    2. 'start' → logprob: -0.6931567788124084
    3. '(start' → logprob: -12.068157196044922
    4. '[start' → logprob: -13.693157196044922
    5. ' ' → logprob: -13.818157196044922
    6. ' (' → logprob: -14.693157196044922
    7. '_start' → logprob: -14.943157196044922
    8. '=start' → logprob: -15.443157196044922
    9. 'position' → logprob: -15.818157196044922
    10. ',start' → logprob: -16.068157196044922

Token 732: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.014166207052767277
    2. ' start' → logprob: -4.264166355133057
    3. '_start' → logprob: -14.264165878295898
    4. ',start' → logprob: -14.264165878295898
    5. '   ' → logprob: -14.389165878295898
    6. ',' → logprob: -15.264165878295898
    7. ' ' → logprob: -15.514165878295898
    8. ')' → logprob: -16.0141658782959
    9. '=start' → logprob: -16.2641658782959
    10. '	start' → logprob: -17.1391658782959

Token 733: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -8.2994620242971e-06
    2. '_j' → logprob: -11.875008583068848
    3. '   ' → logprob: -14.500008583068848
    4. '_' → logprob: -15.625008583068848
    5. 'i' → logprob: -15.750008583068848
    6. ')' → logprob: -16.00000762939453
    7. ')_' → logprob: -16.00000762939453
    8. ' _' → logprob: -16.25000762939453
    9. '```' → logprob: -16.50000762939453
    10. ',' → logprob: -17.00000762939453

Token 734: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004484119825065136
    2. ' ,' → logprob: -6.004484176635742
    3. ')' → logprob: -7.129484176635742
    4. ',start' → logprob: -7.879484176635742
    5. '   ' → logprob: -8.379484176635742
    6. '+' → logprob: -8.379484176635742
    7. ',j' → logprob: -8.879484176635742
    8. ',
' → logprob: -9.879484176635742
    9. ' ' → logprob: -10.379484176635742
    10. ',)' → logprob: -11.004484176635742

Token 735: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3868834376335144
    2. ' start' → logprob: -1.1368834972381592
    3. '   ' → logprob: -13.011883735656738
    4. ',' → logprob: -13.136883735656738
    5. '    ' → logprob: -13.261883735656738
    6. ',start' → logprob: -13.261883735656738
    7. ' ' → logprob: -13.511883735656738
    8. '	start' → logprob: -13.886883735656738
    9. '       ' → logprob: -14.386883735656738
    10. '     ' → logprob: -15.136883735656738

Token 736: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.7865356206893921
    2. ',' → logprob: -0.9115356206893921
    3. ',start' → logprob: -2.4115357398986816
    4. ')' → logprob: -3.5365357398986816
    5. '_,' → logprob: -5.036535739898682
    6. '_start' → logprob: -5.411535739898682
    7. '_' → logprob: -5.911535739898682
    8. '[start' → logprob: -6.536535739898682
    9. ',j' → logprob: -6.661535739898682
    10. '   ' → logprob: -6.661535739898682

Token 737: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006599556189030409
    2. '):
' → logprob: -5.381599426269531
    3. '):' → logprob: -7.506599426269531
    4. '),' → logprob: -7.756599426269531
    5. ')
' → logprob: -8.131599426269531
    6. '   ' → logprob: -8.256599426269531
    7. ' )' → logprob: -8.881599426269531
    8. ').' → logprob: -9.006599426269531
    9. ',' → logprob: -9.256599426269531
    10. '):

' → logprob: -9.631599426269531

Token 738: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001898171496577561
    2. ')' → logprob: -6.501898288726807
    3. '       ' → logprob: -9.001897811889648
    4. ')
' → logprob: -9.751897811889648
    5. '"""
' → logprob: -10.251897811889648
    6. '"""' → logprob: -10.251897811889648
    7. '    
' → logprob: -10.501897811889648
    8. '```' → logprob: -10.626897811889648
    9. ':' → logprob: -10.876897811889648
    10. '
' → logprob: -11.376897811889648

Token 739: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.383526149671525e-05
    2. ')' → logprob: -10.625053405761719
    3. '       ' → logprob: -10.875053405761719
    4. '
' → logprob: -12.875053405761719
    5. '```' → logprob: -13.125053405761719
    6. 'for' → logprob: -13.500053405761719
    7. ')
' → logprob: -13.750053405761719
    8. ' for' → logprob: -13.875053405761719
    9. '):
' → logprob: -14.375053405761719
    10. '    
' → logprob: -14.500053405761719

Token 740: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007962852250784636
    2. '       ' → logprob: -8.5007963180542
    3. '```' → logprob: -8.8757963180542
    4. ')' → logprob: -9.0007963180542
    5. '
' → logprob: -9.1257963180542
    6. '    
' → logprob: -9.6257963180542
    7. '    ' → logprob: -10.7507963180542
    8. ' 
' → logprob: -10.7507963180542
    9. '"""' → logprob: -11.3757963180542
    10. ' ' → logprob: -11.3757963180542

Token 741: 'param' (ID: 1355)
  Prédit: 'param'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.005256526172161102
    2. 'return' → logprob: -5.505256652832031
    3. '   ' → logprob: -7.630256652832031
    4. ':param' → logprob: -8.255256652832031
    5. 'code' → logprob: -9.380256652832031
    6. 'def' → logprob: -9.505256652832031
    7. 'returns' → logprob: -9.630256652832031
    8. 'params' → logprob: -9.755256652832031
    9. '```' → logprob: -9.880256652832031
    10. ' param' → logprob: -10.255256652832031

Token 742: ' image' (ID: 3621)
  Prédit: 'image'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'image' → logprob: -0.4753241539001465
    2. ' image' → logprob: -0.9753241539001465
    3. 'pattern' → logprob: -6.8503241539001465
    4. ' pattern' → logprob: -8.975324630737305
    5. '   ' → logprob: -10.350324630737305
    6. ' ' → logprob: -11.850324630737305
    7. 'start' → logprob: -12.100324630737305
    8. '	image' → logprob: -12.600324630737305
    9. ' start' → logprob: -12.975324630737305
    10. ''image' → logprob: -12.975324630737305

Token 743: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3544423381972592e-05
    2. ' ,' → logprob: -12.00001335144043
    3. '   ' → logprob: -12.62501335144043
    4. ',
' → logprob: -13.87501335144043
    5. ':' → logprob: -14.50001335144043
    6. ',start' → logprob: -14.50001335144043
    7. ',n' → logprob: -15.00001335144043
    8. '[start' → logprob: -15.62501335144043
    9. ',#' → logprob: -15.87501335144043
    10. '[' → logprob: -15.87501335144043

Token 744: ' liste' (ID: 31719)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.6220486164093018
    2. 'list' → logprob: -1.1220486164093018
    3. ' list' → logprob: -2.3720486164093018
    4. ' List' → logprob: -3.1220486164093018
    5. '   ' → logprob: -8.872048377990723
    6. '_list' → logprob: -10.997048377990723
    7. '[List' → logprob: -11.372048377990723
    8. ':list' → logprob: -11.997048377990723
    9. 'def' → logprob: -12.122048377990723
    10. ' ' → logprob: -13.372048377990723

Token 745: ' de' (ID: 334)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.21648244559764862
    2. 'de' → logprob: -2.966482400894165
    3. ' de' → logprob: -3.216482400894165
    4. ' of' → logprob: -3.341482400894165
    5. '   ' → logprob: -3.466482400894165
    6. '[List' → logprob: -4.341482639312744
    7. '[' → logprob: -4.466482639312744
    8. 'of' → logprob: -5.091482639312744
    9. ')' → logprob: -6.466482639312744
    10. '[int' → logprob: -6.591482639312744

Token 746: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00032867121626622975
    2. 'lists' → logprob: -8.25032901763916
    3. 'List' → logprob: -10.12532901763916
    4. ' list' → logprob: -11.12532901763916
    5. 'liste' → logprob: -11.87532901763916
    6. '[list' → logprob: -12.37532901763916
    7. '[List' → logprob: -13.75032901763916
    8. '   ' → logprob: -15.75032901763916
    9. ' lists' → logprob: -16.750328063964844
    10. '[' → logprob: -17.625328063964844

Token 747: ' d' (ID: 272)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0036162277683615685
    2. '   ' → logprob: -5.8786163330078125
    3. ' of' → logprob: -7.5036163330078125
    4. '<int' → logprob: -9.878616333007812
    5. '[list' → logprob: -10.003616333007812
    6. '[' → logprob: -10.003616333007812
    7. 'of' → logprob: -10.378616333007812
    8. '[[' → logprob: -10.878616333007812
    9. 'int' → logprob: -10.878616333007812
    10. '[List' → logprob: -10.878616333007812

Token 748: ''ent' (ID: 53422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1080239862203598
    2. 'ints' → logprob: -2.8580238819122314
    3. '[int' → logprob: -3.1080238819122314
    4. '[' → logprob: -9.608023643493652
    5. '<int' → logprob: -9.608023643493652
    6. ''int' → logprob: -9.858023643493652
    7. ' int' → logprob: -9.858023643493652
    8. '(int' → logprob: -10.608023643493652
    9. '[]' → logprob: -11.358023643493652
    10. 'inte' → logprob: -11.483023643493652

Token 749: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -2.5776860184123507e-06
    2. 'ier' → logprob: -13.00000286102295
    3. 'ières' → logprob: -15.25000286102295
    4. 'i' → logprob: -19.250001907348633
    5. 'ints' → logprob: -19.875001907348633
    6. '   ' → logprob: -20.125001907348633
    7. '```' → logprob: -21.625001907348633
    8. ' ints' → logprob: -21.875001907348633
    9. '[' → logprob: -22.000001907348633
    10. '#' → logprob: -22.500001907348633

Token 750: ' ' (ID: 220)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.4411385953426361
    2. '   ' → logprob: -1.0661386251449585
    3. ' (' → logprob: -5.441138744354248
    4. '[' → logprob: -5.691138744354248
    5. '(int' → logprob: -6.191138744354248
    6. ',' → logprob: -7.316138744354248
    7. '       ' → logprob: -7.691138744354248
    8. '
' → logprob: -7.941138744354248
    9. '[Int' → logprob: -8.44113826751709
    10. '<int' → logprob: -8.69113826751709

Token 751: '0' (ID: 15)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.005583656020462513
    2. '   ' → logprob: -5.755583763122559
    3. ',' → logprob: -6.880583763122559
    4. '[' → logprob: -7.255583763122559
    5. 'int' → logprob: -9.005583763122559
    6. ')' → logprob: -9.380583763122559
    7. '[Int' → logprob: -9.380583763122559
    8. '<int' → logprob: -9.505583763122559
    9. '
' → logprob: -9.755583763122559
    10. '(int' → logprob: -9.755583763122559

Token 752: '/' (ID: 14)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.3584446609020233
    2. ' ou' → logprob: -1.4834446907043457
    3. ',' → logprob: -2.7334446907043457
    4. '   ' → logprob: -4.858444690704346
    5. 'or' → logprob: -7.733444690704346
    6. ')' → logprob: -8.608444213867188
    7. ' or' → logprob: -8.733444213867188
    8. '[' → logprob: -8.858444213867188
    9. '[]' → logprob: -9.233444213867188
    10. ' ' → logprob: -9.608444213867188

Token 753: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.625001907348633
    3. '0' → logprob: -15.250001907348633
    4. ',' → logprob: -15.375001907348633
    5. 'et' → logprob: -16.750001907348633
    6. '/' → logprob: -17.750001907348633
    7. 'ou' → logprob: -18.125001907348633
    8. '```' → logprob: -18.125001907348633
    9. '   ' → logprob: -18.375001907348633
    10. 'or' → logprob: -19.000001907348633

Token 754: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0075920759700238705
    2. ',' → logprob: -5.88259220123291
    3. ')' → logprob: -6.00759220123291
    4. '
' → logprob: -6.38259220123291
    5. ')
' → logprob: -8.25759220123291
    6. ',
' → logprob: -8.75759220123291
    7. 'def' → logprob: -10.38259220123291
    8. '):
' → logprob: -10.63259220123291
    9. '    
' → logprob: -10.75759220123291
    10. ' (' → logprob: -10.88259220123291

Token 755: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23059210181236267
    2. ':param' → logprob: -1.855592131614685
    3. ':' → logprob: -3.6055920124053955
    4. ' :' → logprob: -4.105592250823975
    5. ':start' → logprob: -5.730592250823975
    6. ':type' → logprob: -6.980592250823975
    7. ':def' → logprob: -7.355592250823975
    8. 'def' → logprob: -7.855592250823975
    9. '
' → logprob: -8.605591773986816
    10. ',' → logprob: -8.980591773986816

Token 756: ' :' (ID: 712)
  Prédit: ':param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':param' → logprob: -0.3438664972782135
    2. '   ' → logprob: -1.5938664674758911
    3. ':start' → logprob: -2.9688665866851807
    4. ' :' → logprob: -3.7188665866851807
    5. ':' (adapté à ' :') → logprob: -4.968866348266602
    6. ':type' → logprob: -5.968866348266602
    7. ':def' → logprob: -6.468866348266602
    8. 'def' → logprob: -8.218866348266602
    9. ':return' → logprob: -8.718866348266602
    10. '
' → logprob: -8.968866348266602

Token 757: 'param' (ID: 1355)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.3185676038265228
    2. 'int' → logprob: -1.6935676336288452
    3. 'start' → logprob: -2.6935675144195557
    4. ' pattern' → logprob: -5.068567752838135
    5. 'def' → logprob: -5.568567752838135
    6. ' start' → logprob: -6.068567752838135
    7. 'param' → logprob: -6.443567752838135
    8. '   ' → logprob: -6.693567752838135
    9. ' int' → logprob: -6.818567752838135
    10. 'pat' → logprob: -7.193567752838135

Token 758: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.12693671882152557
    2. ' pattern' → logprob: -2.126936674118042
    3. 'pat' → logprob: -12.001936912536621
    4. 'start' → logprob: -14.126936912536621
    5. '   ' → logprob: -14.251936912536621
    6. ' ' → logprob: -14.876936912536621
    7. ' start' → logprob: -15.751936912536621
    8. '(pattern' → logprob: -16.001935958862305
    9. 'image' → logprob: -16.501935958862305
    10. 'def' → logprob: -16.751935958862305

Token 759: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003359508700668812
    2. ':' → logprob: -6.253359317779541
    3. '):' → logprob: -7.003359317779541
    4. '   ' → logprob: -7.878359317779541
    5. ' ,' → logprob: -9.5033597946167
    6. ')' → logprob: -10.6283597946167
    7. ',
' → logprob: -11.7533597946167
    8. '):
' → logprob: -11.8783597946167
    9. '),' → logprob: -12.6283597946167
    10. ':,' → logprob: -12.6283597946167

Token 760: ' matr' (ID: 25095)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2256445735692978
    2. ' list' → logprob: -1.600644588470459
    3. ' liste' → logprob: -9.2256441116333
    4. 'liste' → logprob: -9.8506441116333
    5. 'List' → logprob: -10.1006441116333
    6. '[list' → logprob: -10.9756441116333
    7. '   ' → logprob: -12.4756441116333
    8. ' lista' → logprob: -13.1006441116333
    9. ':list' → logprob: -13.2256441116333
    10. 'int' → logprob: -13.2256441116333

Token 761: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.0011487908195704222
    2. 'ix' → logprob: -6.876148700714111
    3. '   ' → logprob: -9.75114917755127
    4. 'ixe' → logprob: -10.62614917755127
    5. 'ices' → logprob: -11.25114917755127
    6. '[]' → logprob: -11.87614917755127
    7. '[' → logprob: -13.00114917755127
    8. '       ' → logprob: -13.75114917755127
    9. 'ique' → logprob: -14.00114917755127
    10. 'ic' → logprob: -14.00114917755127

Token 762: ' p' (ID: 275)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.3028451204299927
    2. '   ' → logprob: -1.4278451204299927
    3. ')' → logprob: -1.6778451204299927
    4. ' de' → logprob: -2.052845001220703
    5. '[' → logprob: -3.052845001220703
    6. ' ' → logprob: -3.302845001220703
    7. ' of' → logprob: -4.177845001220703
    8. ',' → logprob: -4.302845001220703
    9. 'de' → logprob: -4.427845001220703
    10. '[start' → logprob: -4.927845001220703

Token 763: ' x' (ID: 1215)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.791744589805603
    2. ' x' → logprob: -1.541744589805603
    3. '[' → logprob: -2.1667447090148926
    4. 'x' → logprob: -2.4167447090148926
    5. ' of' → logprob: -3.2917447090148926
    6. 'de' → logprob: -3.4167447090148926
    7. ')' → logprob: -3.9167447090148926
    8. '   ' → logprob: -4.666744709014893
    9. ' ' → logprob: -5.666744709014893
    10. '[][]' → logprob: -5.666744709014893

Token 764: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.5649528298527e-05
    2. ' p' → logprob: -10.125075340270996
    3. 'int' → logprob: -11.000075340270996
    4. '[' → logprob: -12.500075340270996
    5. '[int' → logprob: -12.500075340270996
    6. '   ' → logprob: -12.625075340270996
    7. '[]' → logprob: -13.125075340270996
    8. '[p' → logprob: -13.500075340270996
    9. '<p' → logprob: -14.250075340270996
    10. '...' → logprob: -14.375075340270996

Token 765: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48210281133651733
    2. '   ' → logprob: -1.607102870941162
    3. '
' → logprob: -2.232102870941162
    4. '):
' → logprob: -3.232102870941162
    5. ')
' → logprob: -4.232102870941162
    6. '):' → logprob: -4.857102870941162
    7. ',' → logprob: -5.982102870941162
    8. ' of' → logprob: -6.482102870941162
    9. '),' → logprob: -6.607102870941162
    10. 'def' → logprob: -6.982102870941162

Token 766: ' ' (ID: 220)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04987528175115585
    2. 'ints' → logprob: -3.174875259399414
    3. 'ent' → logprob: -5.674875259399414
    4. '0' → logprob: -6.299875259399414
    5. ' int' → logprob: -6.674875259399414
    6. 'bool' → logprob: -9.799875259399414
    7. 'list' → logprob: -9.924875259399414
    8. 'bits' → logprob: -9.924875259399414
    9. 'inte' → logprob: -9.924875259399414
    10. 'liste' → logprob: -10.049875259399414

Token 767: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.036138780415058136
    2. 'ints' → logprob: -3.4111387729644775
    3. 'ent' → logprob: -6.661139011383057
    4. '0' → logprob: -7.036139011383057
    5. '[int' → logprob: -8.161138534545898
    6. ' int' → logprob: -11.536138534545898
    7. 'inte' → logprob: -11.911138534545898
    8. 'ents' → logprob: -12.036138534545898
    9. '(int' → logprob: -12.161138534545898
    10. 'list' → logprob: -12.411138534545898

Token 768: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.026654623448848724
    2. 'ou' → logprob: -3.7766547203063965
    3. ' ou' → logprob: -5.9016547203063965
    4. 'et' → logprob: -8.776654243469238
    5. ',' → logprob: -8.776654243469238
    6. 's' → logprob: -9.026654243469238
    7. '   ' → logprob: -9.276654243469238
    8. ' /' → logprob: -10.401654243469238
    9. 'or' → logprob: -10.526654243469238
    10. '```' → logprob: -11.276654243469238

Token 769: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. '
' → logprob: -14.50000286102295
    3. '```' → logprob: -14.62500286102295
    4. 'or' → logprob: -14.75000286102295
    5. '/' → logprob: -14.87500286102295
    6. ' ' → logprob: -15.12500286102295
    7. 'ou' → logprob: -15.37500286102295
    8. 's' → logprob: -15.50000286102295
    9. 'int' → logprob: -15.62500286102295
    10. '0' → logprob: -16.375003814697266

Token 770: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23805750906467438
    2. ')' → logprob: -2.3630576133728027
    3. ')
' → logprob: -2.4880576133728027
    4. '
' → logprob: -3.4880576133728027
    5. '):
' → logprob: -5.863057613372803
    6. ',' → logprob: -8.113057136535645
    7. ']
' → logprob: -8.738057136535645
    8. ']' → logprob: -8.988057136535645
    9. 'def' → logprob: -9.488057136535645
    10. '  ' → logprob: -9.613057136535645

Token 771: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002140982076525688
    2. ')' → logprob: -6.877140998840332
    3. ':' → logprob: -7.627140998840332
    4. '
' → logprob: -8.377140998840332
    5. ' :' → logprob: -9.127140998840332
    6. ':param' → logprob: -9.127140998840332
    7. '):' → logprob: -9.627140998840332
    8. '):
' → logprob: -10.002140998840332
    9. ')
' → logprob: -10.627140998840332
    10. 'def' → logprob: -11.502140998840332

Token 772: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027646677568554878
    2. ':param' → logprob: -3.777646780014038
    3. ':' (adapté à ' :') → logprob: -5.652646541595459
    4. ':return' → logprob: -7.902646541595459
    5. ')' → logprob: -8.777647018432617
    6. '"""
' → logprob: -9.277647018432617
    7. ' :' → logprob: -9.402647018432617
    8. ':type' → logprob: -9.652647018432617
    9. '
' → logprob: -10.527647018432617
    10. '"""' → logprob: -10.527647018432617

Token 773: 'param' (ID: 1355)
  Prédit: 'param'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.04499538615345955
    2. 'return' → logprob: -3.1699953079223633
    3. '   ' → logprob: -7.169995307922363
    4. 'def' → logprob: -7.294995307922363
    5. ':param' → logprob: -8.919995307922363
    6. 'returns' → logprob: -9.419995307922363
    7. '@param' → logprob: -9.794995307922363
    8. '
' → logprob: -9.919995307922363
    9. 'start' → logprob: -10.044995307922363
    10. ' param' → logprob: -10.294995307922363

Token 774: ' start' (ID: 1604)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.518194854259491
    2. 'start' → logprob: -1.2681949138641357
    3. 'pattern' → logprob: -2.1431949138641357
    4. ' start' → logprob: -6.143194675445557
    5. ' p' → logprob: -6.268194675445557
    6. 'pat' → logprob: -7.518194675445557
    7. '   ' → logprob: -7.893194675445557
    8. ' pattern' → logprob: -8.018195152282715
    9. 'size' → logprob: -8.143195152282715
    10. ' ' → logprob: -9.518195152282715

Token 775: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -5.9153885558771435e-06
    2. '_j' → logprob: -12.375005722045898
    3. '```' → logprob: -14.875005722045898
    4. 'i' → logprob: -15.125005722045898
    5. '   ' → logprob: -15.125005722045898
    6. ',i' → logprob: -15.375005722045898
    7. ',' → logprob: -15.625005722045898
    8. ' _' → logprob: -16.7500057220459
    9. 'def' → logprob: -17.6250057220459
    10. '_' → logprob: -17.8750057220459

Token 776: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019606323912739754
    2. ' ,' → logprob: -6.626960754394531
    3. '   ' → logprob: -7.751960754394531
    4. ',int' → logprob: -10.126960754394531
    5. '<|end|>' → logprob: -10.376960754394531
    6. ':' → logprob: -10.626960754394531
    7. ',
' → logprob: -11.001960754394531
    8. '+' → logprob: -11.126960754394531
    9. ')' → logprob: -11.376960754394531
    10. ':int' → logprob: -11.501960754394531

Token 777: ' ligne' (ID: 19583)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.2015632390975952
    2. ' int' → logprob: -1.2015632390975952
    3. ' start' → logprob: -1.2015632390975952
    4. 'start' → logprob: -2.3265633583068848
    5. ' ' → logprob: -8.826562881469727
    6. ' ' → logprob: -10.576562881469727
    7. '_start' → logprob: -12.201562881469727
    8. ':int' → logprob: -12.451562881469727
    9. '0' → logprob: -12.951562881469727
    10. '   ' → logprob: -13.326562881469727

Token 778: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 779: ' départ' (ID: 32693)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3654801547527313
    2. ' start' → logprob: -1.2404801845550537
    3. 'l' → logprob: -4.990479946136475
    4. 'dé' → logprob: -5.240479946136475
    5. ' la' → logprob: -6.740479946136475
    6. ' image' → logprob: -7.240479946136475
    7. 'pattern' → logprob: -7.365479946136475
    8. ' l' → logprob: -7.490479946136475
    9. 'd' → logprob: -8.115480422973633
    10. ' départ' → logprob: -8.240480422973633

Token 780: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08004553616046906
    2. ',' → logprob: -2.580045461654663
    3. ',
' → logprob: -7.705045700073242
    4. ':' → logprob: -8.830045700073242
    5. '+' → logprob: -9.455045700073242
    6. '```' → logprob: -9.580045700073242
    7. ' (' → logprob: -9.830045700073242
    8. '       ' → logprob: -9.830045700073242
    9. ' ,' → logprob: -10.080045700073242
    10. ')' → logprob: -10.580045700073242

Token 781: ' l' (ID: 305)
  Prédit: 'image'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'image' → logprob: -0.6931493282318115
    2. ' image' → logprob: -0.6931493282318115
    3. '   ' → logprob: -13.69314956665039
    4. ''image' → logprob: -14.56814956665039
    5. '(image' → logprob: -15.44314956665039
    6. ')' → logprob: -16.31814956665039
    7. ' ' → logprob: -16.31814956665039
    8. ':image' → logprob: -16.44314956665039
    9. '=image' → logprob: -16.94314956665039
    10. 'l' → logprob: -17.06814956665039

Token 782: ''image' (ID: 94128)
  Prédit: 'image'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'image' → logprob: -0.1615457534790039
    2. ' image' → logprob: -1.911545753479004
    3. ''image' → logprob: -6.661545753479004
    4. '’image' → logprob: -11.161545753479004
    5. '_image' → logprob: -11.661545753479004
    6. '=image' → logprob: -12.286545753479004
    7. '	image' → logprob: -12.536545753479004
    8. '   ' → logprob: -12.661545753479004
    9. ')' → logprob: -13.036545753479004
    10. ':image' → logprob: -13.036545753479004

Token 783: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006370370741933584
    2. ',' → logprob: -5.131370544433594
    3. ')' → logprob: -8.506370544433594
    4. ':' → logprob: -9.381370544433594
    5. ',
' → logprob: -9.756370544433594
    6. '
' → logprob: -10.256370544433594
    7. '```' → logprob: -11.256370544433594
    8. '):
' → logprob: -11.506370544433594
    9. '    
' → logprob: -11.756370544433594
    10. 'def' → logprob: -12.131370544433594

Token 784: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.138441237155348e-05
    2. '       ' → logprob: -10.250091552734375
    3. ',' → logprob: -10.875091552734375
    4. '  ' → logprob: -11.875091552734375
    5. 'def' → logprob: -12.125091552734375
    6. ' ' → logprob: -12.250091552734375
    7. '    ' → logprob: -12.375091552734375
    8. ' :' → logprob: -12.500091552734375
    9. ':' → logprob: -12.875091552734375
    10. '     ' → logprob: -13.125091552734375

Token 785: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005319258663803339
    2. 'start' → logprob: -5.380319118499756
    3. ' ' → logprob: -8.005319595336914
    4. '  ' → logprob: -9.130319595336914
    5. '    ' → logprob: -9.380319595336914
    6. ' start' → logprob: -9.755319595336914
    7. '       ' → logprob: -9.880319595336914
    8. '```' → logprob: -11.130319595336914
    9. ',' → logprob: -11.255319595336914
    10. '     ' → logprob: -11.630319595336914

Token 786: 'param' (ID: 1355)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -9.615255839889869e-05
    2. ' start' → logprob: -9.250096321105957
    3. '	start' → logprob: -20.62509536743164
    4. '```' → logprob: -21.25009536743164
    5. '[start' → logprob: -21.37509536743164
    6. 'len' → logprob: -21.62509536743164
    7. '   ' → logprob: -21.75009536743164
    8. 'int' → logprob: -22.12509536743164
    9. 'end' → logprob: -22.62509536743164
    10. 'return' → logprob: -22.62509536743164

Token 787: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00033546582562848926
    2. ' start' → logprob: -8.000335693359375
    3. '[start' → logprob: -18.500335693359375
    4. ' ' → logprob: -19.375335693359375
    5. '
' → logprob: -19.500335693359375
    6. '	start' → logprob: -19.750335693359375
    7. '   ' → logprob: -19.875335693359375
    8. '```' → logprob: -20.125335693359375
    9. 'def' → logprob: -20.375335693359375
    10. '_start' → logprob: -20.750335693359375

Token 788: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.005235190503299236
    2. '_i' → logprob: -5.255235195159912
    3. '```' → logprob: -14.755234718322754
    4. '   ' → logprob: -15.130234718322754
    5. 'j' → logprob: -15.255234718322754
    6. 'i' → logprob: -16.13023567199707
    7. ')' → logprob: -16.63023567199707
    8. ',' → logprob: -17.13023567199707
    9. ' ' → logprob: -17.25523567199707
    10. '\' → logprob: -17.88023567199707

Token 789: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.031797584146261215
    2. '):' → logprob: -4.281797409057617
    3. ',' → logprob: -4.406797409057617
    4. '   ' → logprob: -5.656797409057617
    5. ' :' → logprob: -7.406797409057617
    6. '=' → logprob: -8.281797409057617
    7. ':start' → logprob: -8.281797409057617
    8. ':int' → logprob: -8.406797409057617
    9. ')' → logprob: -8.781797409057617
    10. '):
' → logprob: -9.406797409057617

Token 790: ' colonne' (ID: 148275)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.10096310824155807
    2. ' start' → logprob: -2.3509631156921387
    3. 'int' → logprob: -7.600963115692139
    4. '0' → logprob: -8.72596263885498
    5. 'col' → logprob: -10.10096263885498
    6. ' int' → logprob: -10.97596263885498
    7. ' ' → logprob: -11.10096263885498
    8. '=start' → logprob: -12.10096263885498
    9. '(start' → logprob: -12.60096263885498
    10. ' col' → logprob: -13.10096263885498

Token 791: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35806140303611755
    2. ' de' → logprob: -1.98306143283844
    3. 'def' → logprob: -2.1080613136291504
    4. 'de' → logprob: -4.10806131362915
    5. ':' → logprob: -5.35806131362915
    6. ' of' → logprob: -5.60806131362915
    7. '=' → logprob: -5.60806131362915
    8. ')' → logprob: -5.98306131362915
    9. '=start' → logprob: -6.60806131362915
    10. '<|end|>' → logprob: -6.85806131362915

Token 792: ' départ' (ID: 32693)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00977651309221983
    2. ' start' → logprob: -4.634776592254639
    3. '_start' → logprob: -11.50977611541748
    4. 'range' → logprob: -12.38477611541748
    5. '[start' → logprob: -12.88477611541748
    6. 'image' → logprob: -13.88477611541748
    7. '=start' → logprob: -14.25977611541748
    8. 'int' → logprob: -14.38477611541748
    9. ' range' → logprob: -14.88477611541748
    10. '(start' → logprob: -15.25977611541748

Token 793: ' dans' (ID: 2671)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04574883356690407
    2. '   ' → logprob: -3.7957489490509033
    3. '):' → logprob: -3.9207489490509033
    4. ')' → logprob: -6.920748710632324
    5. ':' → logprob: -7.670748710632324
    6. ',' → logprob: -7.670748710632324
    7. '):
' → logprob: -8.045748710632324
    8. ':int' → logprob: -10.170748710632324
    9. '):

' → logprob: -10.420748710632324
    10. '```' → logprob: -10.420748710632324

Token 794: ' l' (ID: 305)
  Prédit: 'image'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'image' → logprob: -0.10040216147899628
    2. ' image' → logprob: -2.3504021167755127
    3. 'l' → logprob: -8.725401878356934
    4. ' l' → logprob: -11.225401878356934
    5. '(image' → logprob: -11.975401878356934
    6. '   ' → logprob: -12.600401878356934
    7. 'range' → logprob: -12.850401878356934
    8. 'pattern' → logprob: -13.475401878356934
    9. ' ' → logprob: -13.725401878356934
    10. ''image' → logprob: -13.725401878356934

Token 795: ''image' (ID: 94128)
  Prédit: 'image'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'image' → logprob: -0.0006827684701420367
    2. ''image' → logprob: -7.375682830810547
    3. '_image' → logprob: -10.250682830810547
    4. ' image' → logprob: -11.000682830810547
    5. '’image' → logprob: -13.375682830810547
    6. '   ' → logprob: -14.250682830810547
    7. ',image' → logprob: -14.500682830810547
    8. 'i' → logprob: -14.750682830810547
    9. '=image' → logprob: -15.000682830810547
    10. '	image' → logprob: -15.500682830810547

Token 796: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003795565338805318
    2. '):
' → logprob: -5.628795623779297
    3. '):' → logprob: -9.253795623779297
    4. ')' → logprob: -10.378795623779297
    5. ':
' → logprob: -10.628795623779297
    6. ':' → logprob: -10.753795623779297
    7. ',' → logprob: -11.753795623779297
    8. '
' → logprob: -12.128795623779297
    9. '    
' → logprob: -12.128795623779297
    10. 'def' → logprob: -13.378795623779297

Token 797: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.8921695047756657e-05
    2. ')' → logprob: -11.250028610229492
    3. '):
' → logprob: -11.500028610229492
    4. '    
' → logprob: -13.000028610229492
    5. '
' → logprob: -13.625028610229492
    6. '):' → logprob: -14.000028610229492
    7. ':' → logprob: -14.500028610229492
    8. ')
' → logprob: -15.125028610229492
    9. ',' → logprob: -15.500028610229492
    10. '       ' → logprob: -15.750028610229492

Token 798: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.85235276655294e-05
    2. 'p' → logprob: -9.500088691711426
    3. '
' → logprob: -12.000088691711426
    4. ')' → logprob: -12.375088691711426
    5. 'def' → logprob: -13.625088691711426
    6. ':' (adapté à ' :') → logprob: -14.875088691711426
    7. '```' → logprob: -15.250088691711426
    8. ' p' → logprob: -15.375088691711426
    9. ')
' → logprob: -15.375088691711426
    10. '    
' → logprob: -15.500088691711426

Token 799: 'return' (ID: 1034)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0166620016098022
    2. 'return' → logprob: -1.0166620016098022
    3. 'param' → logprob: -1.5166620016098022
    4. '   ' → logprob: -3.516662120819092
    5. 'returns' → logprob: -4.266662120819092
    6. ')' → logprob: -5.141662120819092
    7. 'def' → logprob: -5.641662120819092
    8. '
' → logprob: -7.516662120819092
    9. 'size' → logprob: -7.516662120819092
    10. '):
' → logprob: -7.516662120819092

Token 800: ':' (ID: 25)
  Prédit: ' bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.6593892574310303
    2. 'bool' → logprob: -1.0343892574310303
    3. '   ' → logprob: -2.2843892574310303
    4. 'True' → logprob: -4.409389495849609
    5. ':' → logprob: -4.659389495849609
    6. ' True' → logprob: -5.659389495849609
    7. 'False' → logprob: -9.40938949584961
    8. '    ' → logprob: -9.53438949584961
    9. '(bool' → logprob: -9.90938949584961
    10. '  ' → logprob: -10.15938949584961

Token 801: ' True' (ID: 6432)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.06841753423213959
    2. 'True' → logprob: -2.818417549133301
    3. ' bool' → logprob: -5.568417549133301
    4. '   ' → logprob: -6.193417549133301
    5. ' True' → logprob: -7.818417549133301
    6. 'False' → logprob: -9.8184175491333
    7. 'pattern' → logprob: -9.8184175491333
    8. 'image' → logprob: -10.6934175491333
    9. 'len' → logprob: -11.4434175491333
    10. 'Bool' → logprob: -11.9434175491333

Token 802: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03224622458219528
    2. 'if' → logprob: -5.032246112823486
    3. '=' → logprob: -5.157246112823486
    4. ' =' → logprob: -5.157246112823486
    5. ',' → logprob: -5.407246112823486
    6. '   ' → logprob: -5.657246112823486
    7. 'True' → logprob: -5.782246112823486
    8. ' True' → logprob: -7.532246112823486
    9. ' and' → logprob: -7.657246112823486
    10. '==' → logprob: -8.032246589660645

Token 803: ' correspond' (ID: 11095)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.7126032114028931
    2. 'tout' → logprob: -1.212603211402893
    3. 'True' → logprob: -1.962603211402893
    4. 'pattern' → logprob: -4.0876030921936035
    5. 'le' → logprob: -4.2126030921936035
    6. 't' → logprob: -4.5876030921936035
    7. ' all' → logprob: -4.8376030921936035
    8. 'match' → logprob: -4.8376030921936035
    9. ' tous' → logprob: -5.7126030921936035
    10. ' toutes' → logprob: -5.7126030921936035

Token 804: 'ance' (ID: 766)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -1.028412103652954
    2. 'True' → logprob: -1.528412103652954
    3. '   ' → logprob: -1.653412103652954
    4. ' True' → logprob: -2.028412103652954
    5. '=True' → logprob: -3.278412103652954
    6. 'ance' → logprob: -3.528412103652954
    7. 'ence' → logprob: -3.903412103652954
    8. 'e' → logprob: -5.278411865234375
    9. 'ante' → logprob: -6.653411865234375
    10. '(True' → logprob: -6.653411865234375

Token 805: ' parfaite' (ID: 101350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3257979452610016
    2. ',' → logprob: -1.9507979154586792
    3. ' True' → logprob: -3.3257980346679688
    4. '=True' → logprob: -3.3257980346679688
    5. 'True' → logprob: -3.8257980346679688
    6. ')' → logprob: -3.9507980346679688
    7. '(True' → logprob: -5.450798034667969
    8. 'False' → logprob: -5.575798034667969
    9. '    ' → logprob: -6.200798034667969
    10. '<|end|>' → logprob: -6.325798034667969

Token 806: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11240402609109879
    2. ',' → logprob: -2.4874041080474854
    3. ' if' → logprob: -4.362403869628906
    4. '
' → logprob: -4.987403869628906
    5. '       ' → logprob: -7.362403869628906
    6. '```' → logprob: -7.612403869628906
    7. ' and' → logprob: -7.737403869628906
    8. ',
' → logprob: -7.862403869628906
    9. 'if' → logprob: -8.112403869628906
    10. 'def' → logprob: -8.112403869628906

Token 807: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.40489816665649414
    2. 'False' → logprob: -1.1548981666564941
    3. '   ' → logprob: -4.029898166656494
    4. ' True' → logprob: -10.279897689819336
    5. '    ' → logprob: -10.279897689819336
    6. 'True' → logprob: -11.529897689819336
    7. '```' → logprob: -12.529897689819336
    8. '       ' → logprob: -13.029897689819336
    9. '    
' → logprob: -14.029897689819336
    10. '  ' → logprob: -14.154897689819336

Token 808: ' sinon' (ID: 52915)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044488366693258286
    2. '<|end|>' → logprob: -3.7944884300231934
    3. ',' → logprob: -4.169488430023193
    4. '```' → logprob: -6.544488430023193
    5. ' if' → logprob: -7.169488430023193
    6. ')' → logprob: -7.544488430023193
    7. '       ' → logprob: -7.919488430023193
    8. 'def' → logprob: -8.044487953186035
    9. '<|end|>' → logprob: -8.169487953186035
    10. '    ' → logprob: -8.294487953186035

Token 809: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015249757561832666
    2. ':' → logprob: -6.751524925231934
    3. ':
' → logprob: -8.626524925231934
    4. '):
' → logprob: -9.126524925231934
    5. '):' → logprob: -10.126524925231934
    6. '```' → logprob: -11.501524925231934
    7. '    
' → logprob: -11.876524925231934
    8. ')' → logprob: -12.876524925231934
    9. 'def' → logprob: -13.626524925231934
    10. '<|end|>' → logprob: -13.751524925231934

Token 810: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033111541997641325
    2. ':' → logprob: -6.2533111572265625
    3. ')' → logprob: -7.7533111572265625
    4. '):' → logprob: -7.8783111572265625
    5. '):
' → logprob: -8.003311157226562
    6. ':
' → logprob: -8.503311157226562
    7. '```' → logprob: -11.003311157226562
    8. '    
' → logprob: -12.253311157226562
    9. '<|end|>' → logprob: -12.628311157226562
    10. ',' → logprob: -12.628311157226562

Token 811: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018177436431869864
    2. ':' → logprob: -7.62681770324707
    3. '):
' → logprob: -7.62681770324707
    4. ':
' → logprob: -7.75181770324707
    5. '```' → logprob: -8.87681770324707
    6. ')' → logprob: -9.00181770324707
    7. '):' → logprob: -9.50181770324707
    8. 'def' → logprob: -9.75181770324707
    9. '    
' → logprob: -12.25181770324707
    10. '
' → logprob: -12.37681770324707

Token 812: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.696889623621246e-06
    2. 'p' → logprob: -13.37500286102295
    3. '```' → logprob: -13.87500286102295
    4. '       ' → logprob: -17.375001907348633
    5. '   ' → logprob: -17.375001907348633
    6. 'n' → logprob: -17.625001907348633
    7. 'for' → logprob: -18.000001907348633
    8. '	p' → logprob: -18.250001907348633
    9. '    
' → logprob: -19.000001907348633
    10. ' p' → logprob: -19.125001907348633

Token 813: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.008619774132966995
    2. '   ' → logprob: -4.758619785308838
    3. ' p' → logprob: -12.75861930847168
    4. 'n' → logprob: -13.88361930847168
    5. 'size' → logprob: -14.00861930847168
    6. 'for' → logprob: -14.75861930847168
    7. '	p' → logprob: -15.88361930847168
    8. '  ' → logprob: -16.88361930847168
    9. '       ' → logprob: -17.75861930847168
    10. 'pattern' → logprob: -17.75861930847168

Token 814: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07902605831623077
    2. ' =' → logprob: -2.579025983810425
    3. '=len' → logprob: -9.204026222229004
    4. '   ' → logprob: -10.579026222229004
    5. '=p' → logprob: -12.204026222229004
    6. '=size' → logprob: -12.704026222229004
    7. 'p' → logprob: -14.204026222229004
    8. '=int' → logprob: -14.829026222229004
    9. 'size' → logprob: -15.329026222229004
    10. '_len' → logprob: -15.829026222229004

Token 815: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -7.941850526549388e-06
    2. ' len' → logprob: -11.750007629394531
    3. '   ' → logprob: -18.37500762939453
    4. '(len' → logprob: -18.37500762939453
    5. '[len' → logprob: -20.50000762939453
    6. '=len' → logprob: -21.12500762939453
    7. '	len' → logprob: -22.25000762939453
    8. ',len' → logprob: -25.00000762939453
    9. '<len' → logprob: -25.37500762939453
    10. 'Len' → logprob: -25.37500762939453

Token 816: '(pattern' (ID: 62660)
  Prédit: '(pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -0.0015023599844425917
    2. 'pattern' → logprob: -6.501502513885498
    3. ' pattern' → logprob: -17.626502990722656
    4. 'Pattern' → logprob: -19.751502990722656
    5. '_pattern' → logprob: -20.751502990722656
    6. 'pat' → logprob: -21.001502990722656
    7. '.pattern' → logprob: -21.751502990722656
    8. 'attern' → logprob: -22.251502990722656
    9. '   ' → logprob: -22.751502990722656
    10. '(p' → logprob: -22.876502990722656

Token 817: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.041516005992889404
    2. ')' → logprob: -3.291516065597534
    3. '   ' → logprob: -5.666515827178955
    4. '):
' → logprob: -12.291516304016113
    5. ')
' → logprob: -12.541516304016113
    6. ')

' → logprob: -15.541516304016113
    7. '):' → logprob: -16.416515350341797
    8. 'for' → logprob: -16.916515350341797
    9. ' )
' → logprob: -17.166515350341797
    10. 'def' → logprob: -17.416515350341797

Token 818: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.319370302458992e-06
    2. 'for' → logprob: -12.250005722045898
    3. ' for' → logprob: -14.875005722045898
    4. '
' → logprob: -15.750005722045898
    5. '	for' → logprob: -17.7500057220459
    6. '       ' → logprob: -18.1250057220459
    7. '    
' → logprob: -19.1250057220459
    8. '```' → logprob: -19.2500057220459
    9. '   ' → logprob: -21.2500057220459
    10. ')' → logprob: -23.0000057220459

Token 819: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.9795445849886164e-05
    2. '   ' → logprob: -9.750060081481934
    3. ' for' → logprob: -13.500060081481934
    4. 'if' → logprob: -18.000059127807617
    5. '	for' → logprob: -20.375059127807617
    6. '
' → logprob: -22.250059127807617
    7. '```' → logprob: -22.250059127807617
    8. '#' → logprob: -22.875059127807617
    9. '  ' → logprob: -23.875059127807617
    10. '       ' → logprob: -24.375059127807617

Token 820: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04764089733362198
    2. 'x' → logprob: -3.547640800476074
    3. 'di' → logprob: -4.047640800476074
    4. 'ii' → logprob: -9.047640800476074
    5. 'dx' → logprob: -9.672640800476074
    6. 'pi' → logprob: -9.922640800476074
    7. 'offset' → logprob: -11.672640800476074
    8. ' i' → logprob: -11.797640800476074
    9. '_i' → logprob: -11.797640800476074
    10. 'delta' → logprob: -12.047640800476074

Token 821: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01108153723180294
    2. 'in' → logprob: -4.511081695556641
    3. '   ' → logprob: -11.01108169555664
    4. '_in' → logprob: -13.01108169555664
    5. 'In' → logprob: -13.13608169555664
    6. '=' → logprob: -13.26108169555664
    7. ',' → logprob: -13.38608169555664
    8. ' ' → logprob: -13.51108169555664
    9. 'import' → logprob: -13.63608169555664
    10. 'd' → logprob: -13.63608169555664

Token 822: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001234428636962548
    2. ' range' → logprob: -9.000123023986816
    3. '	range' → logprob: -19.500123977661133
    4. '(range' → logprob: -20.500123977661133
    5. '   ' → logprob: -20.875123977661133
    6. '
' → logprob: -21.875123977661133
    7. ' ' → logprob: -22.000123977661133
    8. 'p' → logprob: -22.375123977661133
    9. '```' → logprob: -23.500123977661133
    10. '_range' → logprob: -23.500123977661133

Token 823: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.16024118661880493
    2. '(p' → logprob: -1.9102411270141602
    3. ' p' → logprob: -11.53524112701416
    4. '   ' → logprob: -12.28524112701416
    5. '(' → logprob: -13.28524112701416
    6. ')p' → logprob: -14.91024112701416
    7. '<p' → logprob: -15.66024112701416
    8. '	p' → logprob: -15.78524112701416
    9. ')' → logprob: -16.410242080688477
    10. '[p' → logprob: -17.535242080688477

Token 824: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03856178745627403
    2. '):' → logprob: -3.5385618209838867
    3. '   ' → logprob: -4.913561820983887
    4. '       ' → logprob: -6.788561820983887
    5. ':' → logprob: -9.288561820983887
    6. '+' → logprob: -9.663561820983887
    7. ')' → logprob: -9.913561820983887
    8. ':
' → logprob: -10.538561820983887
    9. ',' → logprob: -11.288561820983887
    10. '):
' → logprob: -11.413561820983887

Token 825: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.700132997939363e-05
    2. ' for' → logprob: -11.500017166137695
    3. '<|end|>' → logprob: -12.875017166137695
    4. '   ' → logprob: -13.750017166137695
    5. '           ' → logprob: -14.000017166137695
    6. ',' → logprob: -14.250017166137695
    7. '      ' → logprob: -15.250017166137695
    8. '        
' → logprob: -15.625017166137695
    9. 'for' → logprob: -15.625017166137695
    10. '[' → logprob: -16.000017166137695

Token 826: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1272100955247879
    2. '       ' → logprob: -2.3772101402282715
    3. ' for' → logprob: -3.6272101402282715
    4. 'if' → logprob: -10.627209663391113
    5. '   ' → logprob: -10.627209663391113
    6. '	for' → logprob: -13.252209663391113
    7. '           ' → logprob: -14.252209663391113
    8. ' if' → logprob: -14.752209663391113
    9. 'j' → logprob: -15.752209663391113
    10. ' ' → logprob: -16.25221061706543

Token 827: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0004789320519194007
    2. ' j' → logprob: -7.750478744506836
    3. 'p' → logprob: -10.000478744506836
    4. '   ' → logprob: -13.500478744506836
    5. 'range' → logprob: -13.750478744506836
    6. '       ' → logprob: -16.375478744506836
    7. ' p' → logprob: -16.375478744506836
    8. ' range' → logprob: -16.625478744506836
    9. '_j' → logprob: -16.750478744506836
    10. ' ' → logprob: -17.000478744506836

Token 828: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.32006967067718506
    2. 'in' → logprob: -1.320069670677185
    3. '(p' → logprob: -5.195069789886475
    4. '   ' → logprob: -7.695069789886475
    5. '(' → logprob: -8.320069313049316
    6. ')' → logprob: -8.695069313049316
    7. '       ' → logprob: -8.820069313049316
    8. ',' → logprob: -9.820069313049316
    9. ' (' → logprob: -10.820069313049316
    10. '```' → logprob: -11.195069313049316

Token 829: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.015005728229880333
    2. 'p' → logprob: -4.265005588531494
    3. ' range' → logprob: -7.265005588531494
    4. 'pattern' → logprob: -8.890006065368652
    5. '(p' → logprob: -13.515006065368652
    6. '(range' → logprob: -13.640006065368652
    7. '   ' → logprob: -13.765006065368652
    8. ' p' → logprob: -14.515006065368652
    9. 'pat' → logprob: -15.765006065368652
    10. ' ' → logprob: -16.265005111694336

Token 830: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00020020268857479095
    2. 'p' → logprob: -8.625200271606445
    3. '(pattern' → logprob: -11.500200271606445
    4. '(' → logprob: -12.375200271606445
    5. ')' → logprob: -13.125200271606445
    6. 'range' → logprob: -13.250200271606445
    7. ' (' → logprob: -14.250200271606445
    8. 'in' → logprob: -14.750200271606445
    9. '   ' → logprob: -14.750200271606445
    10. '(range' → logprob: -15.250200271606445

Token 831: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16938358545303345
    2. '):' → logprob: -1.9193835258483887
    3. '           ' → logprob: -5.419383525848389
    4. '       ' → logprob: -5.919383525848389
    5. ':' → logprob: -7.294383525848389
    6. '   ' → logprob: -8.044384002685547
    7. ')' → logprob: -8.419384002685547
    8. '+' → logprob: -9.169384002685547
    9. '():
' → logprob: -9.419384002685547
    10. '=' → logprob: -9.544384002685547

Token 832: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.176947600673884e-05
    2. ' if' → logprob: -10.875021934509277
    3. '       ' → logprob: -14.000021934509277
    4. '               ' → logprob: -14.500021934509277
    5. '          ' → logprob: -14.750021934509277
    6. '<|end|>' → logprob: -15.000021934509277
    7. 'if' → logprob: -15.875021934509277
    8. '<|end|>' → logprob: -16.12502098083496
    9. '	       ' → logprob: -16.50002098083496
    10. '```' → logprob: -16.75002098083496

Token 833: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5512650609016418
    2. 'if' (adapté à ' if') → logprob: -1.051265001296997
    3. ' if' → logprob: -3.176265001296997
    4. '               ' → logprob: -3.426265001296997
    5. '       ' → logprob: -10.926264762878418
    6. '   ' → logprob: -12.176264762878418
    7. '#' → logprob: -12.926264762878418
    8. '
' → logprob: -13.426264762878418
    9. '	       ' → logprob: -13.801264762878418
    10. 'If' → logprob: -14.051264762878418

Token 834: ' image' (ID: 3621)
  Prédit: ' image'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' image' → logprob: -0.1269741952419281
    2. 'image' → logprob: -2.126974105834961
    3. 'pattern' → logprob: -10.626974105834961
    4. ' pattern' → logprob: -10.876974105834961
    5. '(image' → logprob: -13.501974105834961
    6. '	image' → logprob: -14.501974105834961
    7. '   ' → logprob: -15.001974105834961
    8. ''image' → logprob: -15.126974105834961
    9. '           ' → logprob: -15.751974105834961
    10. '    ' → logprob: -16.25197410583496

Token 835: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.375000953674316
    3. '   ' → logprob: -15.375000953674316
    4. 'start' → logprob: -15.500000953674316
    5. '][' → logprob: -16.375001907348633
    6. ' [' → logprob: -16.500001907348633
    7. '```' → logprob: -17.000001907348633
    8. '           ' → logprob: -17.125001907348633
    9. '[end' → logprob: -17.125001907348633
    10. '       ' → logprob: -17.625001907348633

Token 836: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -1.688212614681106e-05
    2. '_j' → logprob: -11.000017166137695
    3. 'i' → logprob: -15.750017166137695
    4. '   ' → logprob: -17.500017166137695
    5. '_' → logprob: -18.625017166137695
    6. '+i' → logprob: -18.875017166137695
    7. '][' → logprob: -19.000017166137695
    8. '_k' → logprob: -19.250017166137695
    9. '```' → logprob: -19.750017166137695
    10. '[' → logprob: -19.750017166137695

Token 837: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.577975869178772
    2. '+i' → logprob: -1.077975869178772
    3. ' +' → logprob: -2.3279757499694824
    4. '][' → logprob: -7.327975749969482
    5. '+j' → logprob: -7.577975749969482
    6. '[i' → logprob: -11.70297622680664
    7. '+k' → logprob: -12.32797622680664
    8. '＋' → logprob: -13.20297622680664
    9. '+t' → logprob: -13.70297622680664
    10. '+p' → logprob: -13.82797622680664

Token 838: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.226628895296017e-06
    2. ' i' → logprob: -11.875007629394531
    3. 'j' → logprob: -15.375007629394531
    4. '   ' → logprob: -17.62500762939453
    5. ' ' → logprob: -18.00000762939453
    6. '_i' → logprob: -18.87500762939453
    7. '	i' → logprob: -19.00000762939453
    8. '[i' → logprob: -19.75000762939453
    9. '```' → logprob: -19.75000762939453
    10. '           ' → logprob: -20.25000762939453

Token 839: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00011725161311915144
    2. '[start' → logprob: -9.250117301940918
    3. ']' → logprob: -11.500117301940918
    4. ' ][' → logprob: -12.250117301940918
    5. '[j' → logprob: -12.500117301940918
    6. ']][' → logprob: -14.500117301940918
    7. '           ' → logprob: -14.500117301940918
    8. ''][' → logprob: -15.000117301940918
    9. '()][' → logprob: -15.250117301940918
    10. '"][' → logprob: -15.375117301940918

Token 840: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -3.8889261304575484e-06
    2. ' start' → logprob: -12.500003814697266
    3. '[start' → logprob: -16.500003814697266
    4. '(start' → logprob: -17.125003814697266
    5. '   ' → logprob: -21.125003814697266
    6. '
' → logprob: -21.250003814697266
    7. ' ' → logprob: -21.500003814697266
    8. ':start' → logprob: -21.625003814697266
    9. '	start' → logprob: -21.750003814697266
    10. '_start' → logprob: -21.750003814697266

Token 841: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: 0.0
    2. 'j' → logprob: -17.375
    3. '+j' → logprob: -18.75
    4. '_' → logprob: -19.25
    5. '```' → logprob: -20.5
    6. '_i' → logprob: -20.625
    7. '_js' → logprob: -20.625
    8. '+' → logprob: -21.25
    9. '[j' → logprob: -21.25
    10. ' _' → logprob: -21.375

Token 842: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.33428362011909485
    2. ' +' → logprob: -1.8342835903167725
    3. '+j' → logprob: -2.0842835903167725
    4. ']' → logprob: -10.959283828735352
    5. '+]' → logprob: -12.959283828735352
    6. '    ' → logprob: -13.834283828735352
    7. '+
' → logprob: -14.334283828735352
    8. '＋' → logprob: -14.584283828735352
    9. '[j' → logprob: -14.709283828735352
    10. 'j' → logprob: -14.834283828735352

Token 843: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.5941604690160602e-05
    2. ' j' → logprob: -10.625025749206543
    3. 'start' → logprob: -14.750025749206543
    4. '   ' → logprob: -14.750025749206543
    5. ' ' → logprob: -15.250025749206543
    6. '_j' → logprob: -15.500025749206543
    7. '```' → logprob: -16.00002670288086
    8. '  ' → logprob: -16.25002670288086
    9. '           ' → logprob: -16.37502670288086
    10. '[j' → logprob: -17.37502670288086

Token 844: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07975377887487411
    2. ']!=' → logprob: -2.579753875732422
    3. '!=' → logprob: -7.704753875732422
    4. ' ]' → logprob: -8.079753875732422
    5. ' !=' → logprob: -9.204753875732422
    6. ')!=' → logprob: -13.454753875732422
    7. ']==' → logprob: -14.954753875732422
    8. '']' → logprob: -15.204753875732422
    9. ']!='' → logprob: -16.079753875732422
    10. '```' → logprob: -16.204753875732422

Token 845: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.033769141882658005
    2. ' !=' → logprob: -3.408769130706787
    3. ']!=' → logprob: -9.158769607543945
    4. ')!=' → logprob: -11.658769607543945
    5. '()!=' → logprob: -12.158769607543945
    6. '!==' → logprob: -13.158769607543945
    7. ']' → logprob: -14.533769607543945
    8. '           ' → logprob: -15.283769607543945
    9. '==' → logprob: -15.283769607543945
    10. '!' → logprob: -15.408769607543945

Token 846: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.0007099286303855479
    2. ' pattern' → logprob: -7.2507100105285645
    3. 'pat' → logprob: -18.500709533691406
    4. '(pattern' → logprob: -20.375709533691406
    5. '   ' → logprob: -20.750709533691406
    6. '           ' → logprob: -21.125709533691406
    7. 'p' → logprob: -23.000709533691406
    8. 'Pattern' → logprob: -23.000709533691406
    9. 'patterns' → logprob: -23.500709533691406
    10. '_pattern' → logprob: -23.875709533691406

Token 847: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[j' → logprob: -13.875000953674316
    3. '[' → logprob: -16.875001907348633
    4. 'i' → logprob: -18.000001907348633
    5. '[p' → logprob: -18.000001907348633
    6. '   ' → logprob: -18.250001907348633
    7. '```' → logprob: -18.875001907348633
    8. ' [' → logprob: -19.375001907348633
    9. '[I' → logprob: -20.875001907348633
    10. '][' → logprob: -21.000001907348633

Token 848: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005940882954746485
    2. '[j' → logprob: -5.130940914154053
    3. ' ][' → logprob: -12.505940437316895
    4. '[' → logprob: -12.880940437316895
    5. ']' → logprob: -13.130940437316895
    6. 'j' → logprob: -13.880940437316895
    7. '           ' → logprob: -14.130940437316895
    8. '       ' → logprob: -14.505940437316895
    9. '   ' → logprob: -15.005940437316895
    10. ',j' → logprob: -15.255940437316895

Token 849: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.842555426876061e-06
    2. ' j' → logprob: -12.250004768371582
    3. '[j' → logprob: -16.8750057220459
    4. '   ' → logprob: -17.5000057220459
    5. '	j' → logprob: -18.0000057220459
    6. '_j' → logprob: -19.5000057220459
    7. '```' → logprob: -19.5000057220459
    8. '
' → logprob: -20.6250057220459
    9. ':j' → logprob: -20.6250057220459
    10. '$j' → logprob: -20.6250057220459

Token 850: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.7217209935188293
    2. ']:' → logprob: -1.2217209339141846
    3. '               ' → logprob: -2.3467209339141846
    4. ':' → logprob: -2.5967209339141846
    5. ':
' → logprob: -3.7217209339141846
    6. ']' → logprob: -4.596721172332764
    7. '):
' → logprob: -5.221721172332764
    8. '           ' → logprob: -5.471721172332764
    9. ':return' → logprob: -6.721721172332764
    10. '<|end|>' → logprob: -6.846721172332764

Token 851: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.570319702499546e-05
    2. '                       ' → logprob: -11.125025749206543
    3. ' return' → logprob: -12.750025749206543
    4. '                   ' → logprob: -12.875025749206543
    5. '              ' → logprob: -13.375025749206543
    6. '                               ' → logprob: -13.625025749206543
    7. 'return' → logprob: -14.125025749206543
    8. '                           ' → logprob: -14.375025749206543
    9. ':return' → logprob: -14.750025749206543
    10. '           ' → logprob: -15.000025749206543

Token 852: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3429098427295685
    2. '               ' → logprob: -1.842909812927246
    3. '                   ' → logprob: -2.342909812927246
    4. ' return' → logprob: -3.342909812927246
    5. '                       ' → logprob: -7.717909812927246
    6. '
' → logprob: -10.342909812927246
    7. '           ' → logprob: -10.592909812927246
    8. '   ' → logprob: -10.592909812927246
    9. ':return' → logprob: -11.592909812927246
    10. '	return' → logprob: -12.092909812927246

Token 853: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -9.615255839889869e-05
    2. ' False' → logprob: -9.250096321105957
    3. '(False' → logprob: -22.87509536743164
    4. 'false' → logprob: -23.75009536743164
    5. '=False' → logprob: -23.75009536743164
    6. '_false' → logprob: -24.00009536743164
    7. 'True' → logprob: -25.37509536743164
    8. 'FALSE' → logprob: -26.00009536743164
    9. '.False' → logprob: -26.12509536743164
    10. '   ' → logprob: -26.25009536743164

Token 854: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05755016207695007
    2. '    
' → logprob: -3.5575501918792725
    3. ' return' → logprob: -4.432549953460693
    4. '
' → logprob: -5.057549953460693
    5. '  
' → logprob: -6.307549953460693
    6. 'return' → logprob: -6.307549953460693
    7. '<|end|>' → logprob: -6.557549953460693
    8. '       ' → logprob: -6.682549953460693
    9. '           ' → logprob: -7.307549953460693
    10. '            
' → logprob: -7.557549953460693

Token 855: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007796602323651314
    2. ' return' → logprob: -5.632796764373779
    3. '       ' → logprob: -6.257796764373779
    4. '    
' → logprob: -6.632796764373779
    5. 'return' → logprob: -8.632796287536621
    6. '	return' → logprob: -8.632796287536621
    7. '```' → logprob: -8.632796287536621
    8. '           ' → logprob: -8.757796287536621
    9. '
' → logprob: -9.007796287536621
    10. '  
' → logprob: -10.132796287536621

Token 856: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6201080083847046
    2. 'return' (adapté à ' return') → logprob: -0.8701080083847046
    3. ' return' → logprob: -3.870108127593994
    4. '           ' → logprob: -4.245108127593994
    5. '
' → logprob: -5.620108127593994
    6. '       ' → logprob: -5.995108127593994
    7. ' ' → logprob: -6.870108127593994
    8. '    
' → logprob: -8.120107650756836
    9. '               ' → logprob: -8.370107650756836
    10. '	return' → logprob: -8.745107650756836

Token 857: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.547789674485102e-05
    2. ' True' → logprob: -10.250035285949707
    3. 'False' → logprob: -20.000036239624023
    4. '(True' → logprob: -21.375036239624023
    5. 'true' → logprob: -21.750036239624023
    6. '=True' → logprob: -22.875036239624023
    7. '   ' → logprob: -24.875036239624023
    8. '_true' → logprob: -26.000036239624023
    9. 'TRUE' → logprob: -26.375036239624023
    10. '.True' → logprob: -26.750036239624023

Token 858: '


' (ID: 2499)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0903518870472908
    2. '

' → logprob: -2.7153518199920654
    3. '<|end|>' → logprob: -4.4653520584106445
    4. '```' → logprob: -5.5903520584106445
    5. '
' → logprob: -5.8403520584106445
    6. '


' → logprob: -6.5903520584106445
    7. '   ' → logprob: -9.215352058410645
    8. '    
' → logprob: -9.590352058410645
    9. '<|end|>' → logprob: -9.590352058410645
    10. '\' → logprob: -9.715352058410645

Token 859: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -14.500000953674316
    3. '#' → logprob: -16.375
    4. '
' → logprob: -17.125
    5. '    
' → logprob: -17.125
    6. '  
' → logprob: -17.375
    7. '

' → logprob: -18.125
    8. '<|end|>' → logprob: -18.5
    9. ' def' → logprob: -18.75
    10. '``' → logprob: -19.0

Token 860: ' main' (ID: 2758)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0490322969853878
    2. 'search' → logprob: -3.674032211303711
    3. ' find' → logprob: -4.424032211303711
    4. 'count' → logprob: -5.424032211303711
    5. 'main' → logprob: -5.549032211303711
    6. 'solve' → logprob: -6.674032211303711
    7. 'where' → logprob: -8.049032211303711
    8. ' main' → logprob: -8.799032211303711
    9. 'read' → logprob: -9.299032211303711
    10. ' search' → logprob: -9.549032211303711

Token 861: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -8.061054359131958e-06
    2. '():
' → logprob: -11.875007629394531
    3. ' ():' → logprob: -13.875007629394531
    4. '_' → logprob: -16.87500762939453
    5. '()' → logprob: -17.00000762939453
    6. '():
' → logprob: -17.37500762939453
    7. '():

' → logprob: -19.75000762939453
    8. '(' → logprob: -20.75000762939453
    9. '().' → logprob: -21.25000762939453
    10. '()>' → logprob: -22.00000762939453

Token 862: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01486232876777649
    2. 'import' → logprob: -4.639862537384033
    3. ' import' → logprob: -5.514862537384033
    4. '```' → logprob: -7.389862537384033
    5. 'n' → logprob: -8.639862060546875
    6. ' line' → logprob: -9.389862060546875
    7. ' input' → logprob: -9.764862060546875
    8. ' n' → logprob: -9.889862060546875
    9. 'input' → logprob: -11.139862060546875
    10. '#' → logprob: -11.389862060546875

Token 863: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13512907922267914
    2. ' n' → logprob: -2.260128974914551
    3. 'n' → logprob: -4.760128974914551
    4. ' input' → logprob: -5.260128974914551
    5. ' #' → logprob: -5.635128974914551
    6. 'import' → logprob: -6.760128974914551
    7. ' line' → logprob: -7.260128974914551
    8. ' import' → logprob: -7.260128974914551
    9. 'input' (adapté à ' input') → logprob: -7.510128974914551
    10. '#' → logprob: -7.635128974914551

Token 864: '_lines' (ID: 42980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.43362247943878174
    2. '_line' → logprob: -1.1836224794387817
    3. '_data' → logprob: -3.933622360229492
    4. ' =' → logprob: -4.683622360229492
    5. '_lines' → logprob: -4.808622360229492
    6. '=' → logprob: -5.183622360229492
    7. '_' → logprob: -6.183622360229492
    8. 'line' → logprob: -8.058622360229492
    9. 'data' → logprob: -8.433622360229492
    10. '=sys' → logprob: -9.308622360229492

Token 865: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1423686444759369
    2. ' =' → logprob: -2.6423685550689697
    3. '()' → logprob: -2.8923685550689697
    4. '=[]' → logprob: -5.642368793487549
    5. '   ' → logprob: -6.267368793487549
    6. '[]' → logprob: -7.642368793487549
    7. '[' → logprob: -10.39236831665039
    8. '(' → logprob: -11.14236831665039
    9. '[:]' → logprob: -11.39236831665039
    10. '  ' → logprob: -11.64236831665039

Token 866: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00039528406341560185
    2. ' sys' → logprob: -8.000394821166992
    3. '[' → logprob: -9.750394821166992
    4. 'list' → logprob: -14.000394821166992
    5. ' [' → logprob: -14.625394821166992
    6. '(sys' → logprob: -16.250394821166992
    7. '	sys' → logprob: -17.000394821166992
    8. '=sys' → logprob: -17.000394821166992
    9. '[]
' → logprob: -17.125394821166992
    10. '[s' → logprob: -17.125394821166992

Token 867: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -8.435139898210764e-05
    2. '.' → logprob: -9.875083923339844
    3. '.argv' → logprob: -11.000083923339844
    4. 'stdin' → logprob: -11.375083923339844
    5. '.stdout' → logprob: -12.875083923339844
    6. '.std' → logprob: -13.875083923339844
    7. '.readline' → logprob: -14.500083923339844
    8. '(stdin' → logprob: -14.875083923339844
    9. ' stdin' → logprob: -15.625083923339844
    10. '._' → logprob: -17.000083923339844

Token 868: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.23663128912448883
    2. '.readlines' → logprob: -1.6116312742233276
    3. 'read' → logprob: -5.236631393432617
    4. '_lines' → logprob: -6.361631393432617
    5. '.read' → logprob: -6.611631393432617
    6. 'lines' → logprob: -6.986631393432617
    7. '.' → logprob: -7.111631393432617
    8. '().' → logprob: -8.111631393432617
    9. '   ' → logprob: -8.236631393432617
    10. '=' → logprob: -9.361631393432617

Token 869: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0024773201439529657
    2. '()' → logprob: -6.002477169036865
    3. '_lines' → logprob: -14.002477645874023
    4. 'lines' → logprob: -14.877477645874023
    5. '(' → logprob: -15.252477645874023
    6. '()
' → logprob: -15.752477645874023
    7. '()

' → logprob: -17.127477645874023
    8. ' ().' → logprob: -17.752477645874023
    9. '.split' → logprob: -18.127477645874023
    10. '()).' → logprob: -18.502477645874023

Token 870: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.20147912204265594
    2. 'split' → logprob: -1.7014790773391724
    3. 'decode' → logprob: -9.951478958129883
    4. 'rstrip' → logprob: -10.951478958129883
    5. 'read' → logprob: -14.451478958129883
    6. 'replace' → logprob: -16.701478958129883
    7. 'lines' → logprob: -17.826478958129883
    8. '(split' → logprob: -18.201478958129883
    9. ' strip' → logprob: -18.326478958129883
    10. ' split' → logprob: -18.451478958129883

Token 871: 'lines' (ID: 10105)
  Prédit: 'lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.0016018638852983713
    2. '('\' → logprob: -6.501601696014404
    3. '()' → logprob: -9.251602172851562
    4. '("\' → logprob: -12.626602172851562
    5. '()\' → logprob: -15.001602172851562
    6. 'line' → logprob: -17.251602172851562
    7. '()[' → logprob: -18.376602172851562
    8. '()
' → logprob: -19.126602172851562
    9. ''\' → logprob: -20.876602172851562
    10. '()]' → logprob: -21.251602172851562

Token 872: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005268189124763012
    2. '    
' → logprob: -7.6255269050598145
    3. '()' → logprob: -10.500526428222656
    4. '
' → logprob: -13.000526428222656
    5. '()
' → logprob: -13.875526428222656
    6. ' =' → logprob: -14.125526428222656
    7. '   
' → logprob: -14.125526428222656
    8. '   ' → logprob: -14.500526428222656
    9. '  
' → logprob: -14.625526428222656
    10. '(n' → logprob: -14.625526428222656

Token 873: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002455557230859995
    2. 'n' → logprob: -6.252455711364746
    3. ' n' → logprob: -8.377455711364746
    4. 'idx' → logprob: -9.252455711364746
    5. ' idx' → logprob: -9.877455711364746
    6. '```' → logprob: -9.877455711364746
    7. '    
' → logprob: -10.502455711364746
    8. 'index' → logprob: -11.377455711364746
    9. 'line' → logprob: -11.627455711364746
    10. '	n' → logprob: -11.627455711364746

Token 874: '   ' (ID: 271)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9124486446380615
    2. 'idx' → logprob: -1.2874486446380615
    3. '   ' → logprob: -2.2874486446380615
    4. 'T' → logprob: -2.2874486446380615
    5. 'n' → logprob: -2.7874486446380615
    6. 'line' → logprob: -3.7874486446380615
    7. 'header' → logprob: -5.037448883056641
    8. 'N' → logprob: -5.287448883056641
    9. 'index' → logprob: -5.412448883056641
    10. 'num' → logprob: -5.537448883056641

Token 875: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.20580601692199707
    2. 't' → logprob: -2.330806016921997
    3. 'index' → logprob: -2.830806016921997
    4. 'line' → logprob: -3.830806016921997
    5. 'T' → logprob: -5.580805778503418
    6. 'pos' → logprob: -6.955805778503418
    7. '#' → logprob: -6.955805778503418
    8. 'num' → logprob: -7.705805778503418
    9. 'ptr' → logprob: -7.830805778503418
    10. 'n' → logprob: -8.080805778503418

Token 876: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804366663098335
    2. '=' → logprob: -3.288043737411499
    3. ' +=' → logprob: -13.913043975830078
    4. '_' → logprob: -14.538043975830078
    5. ' ' → logprob: -15.288043975830078
    6. '   ' → logprob: -15.913043975830078
    7. '  ' → logprob: -16.038043975830078
    8. ')' → logprob: -16.038043975830078
    9. ' ' → logprob: -16.538043975830078
    10. '_=' → logprob: -17.163043975830078

Token 877: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '1' → logprob: -16.62502098083496
    4. '   ' → logprob: -20.25002098083496
    5. '۰' → logprob: -20.87502098083496
    6. '2' → logprob: -21.12502098083496
    7. '  ' → logprob: -22.43752098083496
    8. '```' → logprob: -22.81252098083496
    9. '=' → logprob: -22.93752098083496
    10. '０' → logprob: -23.43752098083496

Token 878: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.9153885558771435e-06
    2. '1' → logprob: -12.375005722045898
    3. ' ' → logprob: -13.375005722045898
    4. '2' → logprob: -16.5000057220459
    5. '   ' → logprob: -19.0625057220459
    6. '=' → logprob: -19.6250057220459
    7. '3' → logprob: -20.5000057220459
    8. '```' → logprob: -20.5625057220459
    9. '۰' → logprob: -20.6250057220459
    10. '[' → logprob: -20.6875057220459

Token 879: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13139989972114563
    2. 'n' → logprob: -2.8813998699188232
    3. 't' → logprob: -4.006400108337402
    4. 'while' → logprob: -4.256400108337402
    5. ' T' → logprob: -4.506400108337402
    6. 'T' → logprob: -4.756400108337402
    7. ' while' → logprob: -4.756400108337402
    8. ' n' → logprob: -5.881400108337402
    9. 'N' → logprob: -6.756400108337402
    10. ' t' → logprob: -7.256400108337402

Token 880: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24648989737033844
    2. 'while' → logprob: -2.246490001678467
    3. ' while' → logprob: -2.746490001678467
    4. 'n' → logprob: -3.871490001678467
    5. 't' → logprob: -4.246490001678467
    6. 'T' → logprob: -4.871490001678467
    7. ' T' → logprob: -5.996490001678467
    8. ' n' → logprob: -6.621490001678467
    9. 'N' → logprob: -6.996490001678467
    10. ' t' → logprob: -7.371490001678467

Token 881: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.29291635751724243
    2. 't' → logprob: -2.0429162979125977
    3. 'T' → logprob: -2.1679162979125977
    4. ' while' → logprob: -5.417916297912598
    5. 'n' → logprob: -6.042916297912598
    6. '   ' → logprob: -6.167916297912598
    7. 'num' → logprob: -8.292916297912598
    8. ' T' → logprob: -8.292916297912598
    9. 'nb' → logprob: -8.417916297912598
    10. ' t' → logprob: -8.917916297912598

Token 882: ' True' (ID: 6432)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.0489976704120636
    2. 'idx' → logprob: -3.048997640609741
    3. 'True' → logprob: -8.04899787902832
    4. ' True' → logprob: -9.54899787902832
    5. '(idx' → logprob: -11.17399787902832
    6. '	idx' → logprob: -12.42399787902832
    7. '_idx' → logprob: -14.67399787902832
    8. '[idx' → logprob: -14.92399787902832
    9. 'Idx' → logprob: -14.92399787902832
    10. '   ' → logprob: -15.54899787902832

Token 883: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009960060007870197
    2. ':
' → logprob: -4.759960174560547
    3. '       ' → logprob: -6.884960174560547
    4. '   ' → logprob: -8.259960174560547
    5. '=' → logprob: -10.884960174560547
    6. '):' → logprob: -11.759960174560547
    7. ' :' → logprob: -12.134960174560547
    8. ' and' → logprob: -12.259960174560547
    9. ',' → logprob: -12.384960174560547
    10. '<|end|>' → logprob: -12.509960174560547

Token 884: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038537707179784775
    2. 'if' → logprob: -3.9135377407073975
    3. ' if' → logprob: -4.288537502288818
    4. '       ' → logprob: -5.538537502288818
    5. 'try' → logprob: -9.413537979125977
    6. '	if' → logprob: -10.288537979125977
    7. ' line' → logprob: -10.788537979125977
    8. 'line' → logprob: -11.038537979125977
    9. '   ' → logprob: -11.913537979125977
    10. 'n' → logprob: -12.663537979125977

Token 885: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.015592250972986221
    2. 'line' → logprob: -4.640592098236084
    3. 'n' → logprob: -5.890592098236084
    4. '   ' → logprob: -6.640592098236084
    5. ' if' → logprob: -7.390592098236084
    6. '       ' → logprob: -7.515592098236084
    7. 'N' → logprob: -7.640592098236084
    8. 'L' → logprob: -10.640592575073242
    9. 'lines' → logprob: -10.765592575073242
    10. 'header' → logprob: -11.640592575073242

Token 886: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.2519476115703583
    2. 'idx' → logprob: -1.5019476413726807
    3. '   ' → logprob: -11.501947402954102
    4. '	idx' → logprob: -12.126947402954102
    5. '(idx' → logprob: -13.251947402954102
    6. '_idx' → logprob: -14.626947402954102
    7. ' ' → logprob: -15.376947402954102
    8. '  ' → logprob: -15.751947402954102
    9. '[idx' → logprob: -15.751947402954102
    10. '    ' → logprob: -16.3769474029541

Token 887: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.47516563534736633
    2. ' >=' → logprob: -0.975165605545044
    3. '==' → logprob: -7.225165843963623
    4. ']>=' → logprob: -8.850165367126465
    5. ' ==' → logprob: -8.975165367126465
    6. ')>=' → logprob: -9.475165367126465
    7. '=' → logprob: -12.850165367126465
    8. '≥' → logprob: -13.100165367126465
    9. '+' → logprob: -13.225165367126465
    10. '   ' → logprob: -13.350165367126465

Token 888: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -6.704273118884885e-07
    2. ' len' → logprob: -14.250000953674316
    3. 'input' → logprob: -21.0
    4. '   ' → logprob: -21.25
    5. '(len' → logprob: -21.375
    6. '=len' → logprob: -22.875
    7. '
' → logprob: -23.5
    8. ' ' → logprob: -23.625
    9. '	len' → logprob: -23.75
    10. '<len' → logprob: -24.125

Token 889: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0003357006062287837
    2. 'input' → logprob: -8.000335693359375
    3. ' input' → logprob: -15.125335693359375
    4. '=input' → logprob: -18.375335693359375
    5. ',input' → logprob: -19.625335693359375
    6. '<input' → logprob: -20.000335693359375
    7. '_input' → logprob: -20.500335693359375
    8. '(' → logprob: -21.125335693359375
    9. '	input' → logprob: -21.375335693359375
    10. '[input' → logprob: -21.375335693359375

Token 890: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: 0.0
    2. 'lines' → logprob: -18.125
    3. '_' → logprob: -18.25
    4. '_LINES' → logprob: -18.875
    5. ')' → logprob: -19.125
    6. '_l' → logprob: -19.125
    7. '_
' → logprob: -19.625
    8. '_line' → logprob: -19.625
    9. '_)' → logprob: -19.75
    10. '(lines' → logprob: -19.875

Token 891: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7938196659088135
    2. ' or' → logprob: -1.0438196659088135
    3. ':' → logprob: -1.6688196659088135
    4. '):
' → logprob: -5.918819427490234
    5. 'or' → logprob: -6.418819427490234
    6. '   ' → logprob: -7.043819427490234
    7. '):' → logprob: -7.168819427490234
    8. ')' → logprob: -7.668819427490234
    9. '       ' → logprob: -7.793819427490234
    10. '           ' → logprob: -8.418819427490234

Token 892: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0038060187362134457
    2. '       ' → logprob: -5.628806114196777
    3. '		' → logprob: -9.628806114196777
    4. '   ' → logprob: -9.878806114196777
    5. ' break' → logprob: -10.378806114196777
    6. 'break' → logprob: -10.378806114196777
    7. '	break' → logprob: -12.378806114196777
    8. '	   ' → logprob: -12.503806114196777
    9. '	' → logprob: -12.628806114196777
    10. '               ' → logprob: -12.628806114196777

Token 893: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.016532108187675476
    2. 'return' → logprob: -4.266531944274902
    3. '           ' → logprob: -6.266531944274902
    4. ' break' → logprob: -7.766531944274902
    5. '       ' → logprob: -10.516531944274902
    6. '	break' → logprob: -11.391531944274902
    7. ' return' → logprob: -12.641531944274902
    8. '               ' → logprob: -14.266531944274902
    9. '   ' → logprob: -15.016531944274902
    10. '```' → logprob: -15.016531944274902

Token 894: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22398816049098969
    2. '        
' → logprob: -2.0989880561828613
    3. '
' → logprob: -2.5989880561828613
    4. '    
' → logprob: -6.723988056182861
    5. '<|end|>' → logprob: -6.723988056182861
    6. '  
' → logprob: -7.473988056182861
    7. '        

' → logprob: -8.47398853302002
    8. '            
' → logprob: -9.22398853302002
    9. '		
' → logprob: -9.47398853302002
    10. '       
' → logprob: -9.84898853302002

Token 895: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017472494393587112
    2. '        
' → logprob: -4.142472267150879
    3. '
' → logprob: -6.767472267150879
    4. '    
' → logprob: -9.642472267150879
    5. '   ' → logprob: -9.892472267150879
    6. '```' → logprob: -10.017472267150879
    7. '  
' → logprob: -10.517472267150879
    8. '           ' → logprob: -11.017472267150879
    9. '		
' → logprob: -11.267472267150879
    10. '       
' → logprob: -11.767472267150879

Token 896: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.25100287795066833
    2. 'dims' → logprob: -2.751002788543701
    3. 'header' → logprob: -3.001002788543701
    4. 'L' → logprob: -3.001002788543701
    5. 'n' → logprob: -4.626002788543701
    6. 'H' → logprob: -4.626002788543701
    7. 'W' → logprob: -4.751002788543701
    8. 'N' → logprob: -5.126002788543701
    9. '   ' → logprob: -5.251002788543701
    10. 'h' → logprob: -5.626002788543701

Token 897: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327077746391296
    2. '=' → logprob: -1.3132708072662354
    3. '=line' → logprob: -11.938270568847656
    4. '   ' → logprob: -13.938270568847656
    5. 's' → logprob: -14.313270568847656
    6. '=input' → logprob: -15.063270568847656
    7. '=
' → logprob: -15.438270568847656
    8. ' ' → logprob: -16.313270568847656
    9. 'tokens' → logprob: -16.813270568847656
    10. 'line' → logprob: -16.938270568847656

Token 898: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.001170225441455841
    2. ' input' → logprob: -6.7511701583862305
    3. ' ' → logprob: -17.376171112060547
    4. '   ' → logprob: -18.626171112060547
    5. '(input' → logprob: -19.376171112060547
    6. '=input' → logprob: -21.001171112060547
    7. '	input' → logprob: -21.126171112060547
    8. 'output' → logprob: -21.376171112060547
    9. 'int' → logprob: -21.626171112060547
    10. '
' → logprob: -21.751171112060547

Token 899: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0010479353368282318
    2. ' =' → logprob: -7.3760480880737305
    3. '_line' → logprob: -8.50104808807373
    4. '=' → logprob: -8.87604808807373
    5. 'lines' → logprob: -10.50104808807373
    6. '=line' → logprob: -11.00104808807373
    7. '_' → logprob: -11.25104808807373
    8. 'line' → logprob: -12.00104808807373
    9. '[line' → logprob: -12.87604808807373
    10. '()' → logprob: -13.12604808807373

Token 900: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.9875325708417222e-05
    2. 'idx' → logprob: -10.750029563903809
    3. 's' → logprob: -13.500029563903809
    4. '   ' → logprob: -13.875029563903809
    5. '(idx' → logprob: -13.875029563903809
    6. '```' → logprob: -13.875029563903809
    7. 'strip' → logprob: -14.125029563903809
    8. '.strip' → logprob: -14.250029563903809
    9. ' idx' → logprob: -14.750029563903809
    10. '[' → logprob: -14.875029563903809

Token 901: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -1.0091336965560913
    2. ').' → logprob: -1.3841336965560913
    3. ')
' → logprob: -2.134133815765381
    4. ')' → logprob: -2.259133815765381
    5. ']' → logprob: -2.259133815765381
    6. ']
' → logprob: -3.009133815765381
    7. '.strip' → logprob: -5.759133815765381
    8. ');' → logprob: -6.384133815765381
    9. '])
' → logprob: -6.634133815765381
    10. '];' → logprob: -7.134133815765381

Token 902: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -5.512236498361744e-07
    2. 'split' → logprob: -15.000000953674316
    3. 'rstrip' → logprob: -15.750000953674316
    4. 'startswith' → logprob: -20.875
    5. ' strip' → logprob: -21.75
    6. '_strip' → logprob: -22.5
    7. '(strip' → logprob: -22.875
    8. '.strip' → logprob: -23.0
    9. 'skip' → logprob: -23.25
    10. 'stripe' → logprob: -24.375

Token 903: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027675554156303406
    2. '<|end|>' → logprob: -4.402675628662109
    3. '<|end|>' → logprob: -5.152675628662109
    4. '()
' → logprob: -6.027675628662109
    5. '()' → logprob: -6.277675628662109
    6. 'if' → logprob: -6.277675628662109
    7. ')' → logprob: -7.152675628662109
    8. '
' → logprob: -7.402675628662109
    9. '        
' → logprob: -8.02767562866211
    10. ' if' → logprob: -8.15267562866211

Token 904: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008462452329695225
    2. 'if' → logprob: -4.883462429046631
    3. ' if' → logprob: -7.133462429046631
    4. '        
' → logprob: -10.383462905883789
    5. '   ' → logprob: -11.758462905883789
    6. '<|end|>' → logprob: -12.133462905883789
    7. '	if' → logprob: -13.008462905883789
    8. 'token' → logprob: -13.133462905883789
    9. '	' → logprob: -13.383462905883789
    10. '<|end|>' → logprob: -13.633462905883789

Token 905: ' idx' (ID: 14016)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003369254292920232
    2. '       ' → logprob: -5.753369331359863
    3. ' if' → logprob: -8.878369331359863
    4. 'idx' (adapté à ' idx') → logprob: -9.878369331359863
    5. '        
' → logprob: -15.378369331359863
    6. '	if' → logprob: -15.378369331359863
    7. 'token' → logprob: -15.628369331359863
    8. '   ' → logprob: -16.128368377685547
    9. '#' → logprob: -16.378368377685547
    10. 'If' → logprob: -16.628368377685547

Token 906: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0004954866599291563
    2. ' +=' → logprob: -7.625495433807373
    3. '==' → logprob: -12.250495910644531
    4. '+' → logprob: -13.625495910644531
    5. ']+=' → logprob: -14.250495910644531
    6. '   ' → logprob: -14.625495910644531
    7. '=' → logprob: -15.750495910644531
    8. '++' → logprob: -16.50049591064453
    9. '```' → logprob: -16.50049591064453
    10. '       ' → logprob: -17.12549591064453

Token 907: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '0' → logprob: -18.875
    4. '```' → logprob: -19.625
    5. '
' → logprob: -21.125
    6. '   ' → logprob: -22.25
    7. '１' → logprob: -22.375
    8. '``' → logprob: -22.625
    9. '`' → logprob: -23.0
    10. '=' → logprob: -23.625

Token 908: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '0' → logprob: -18.0
    4. '```' → logprob: -19.625
    5. '
' → logprob: -20.375
    6. '１' → logprob: -22.0
    7. '   ' → logprob: -22.375
    8. '`' → logprob: -22.625
    9. '``' → logprob: -22.625
    10. 'int' → logprob: -22.8125

Token 909: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018055228516459465
    2. 'if' → logprob: -4.143055438995361
    3. ' if' → logprob: -6.268055438995361
    4. '        
' → logprob: -9.643054962158203
    5. '   ' → logprob: -10.393054962158203
    6. '
' → logprob: -11.268054962158203
    7. 'n' → logprob: -12.143054962158203
    8. '#' → logprob: -13.018054962158203
    9. ' ' → logprob: -13.393054962158203
    10. '	if' → logprob: -13.518054962158203

Token 910: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6975229382514954
    2. 'if' → logprob: -0.6975229382514954
    3. ' if' → logprob: -5.44752311706543
    4. 'n' → logprob: -9.82252311706543
    5. '   ' → logprob: -13.32252311706543
    6. '	if' → logprob: -13.69752311706543
    7. '        
' → logprob: -14.32252311706543
    8. '```' → logprob: -14.57252311706543
    9. '#' → logprob: -15.19752311706543
    10. '
' → logprob: -15.57252311706543

Token 911: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.1398757123970427e-05
    2. '       ' → logprob: -11.750011444091797
    3. 'n' → logprob: -13.250011444091797
    4. ' if' → logprob: -14.125011444091797
    5. '#' → logprob: -14.250011444091797
    6. 'N' → logprob: -15.625011444091797
    7. 'If' → logprob: -17.000011444091797
    8. 's' → logprob: -17.250011444091797
    9. 'R' → logprob: -17.375011444091797
    10. '   ' → logprob: -17.500011444091797

Token 912: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.01662508398294449
    2. 'not' → logprob: -4.266624927520752
    3. ' not' → logprob: -6.641624927520752
    4. ' line' → logprob: -6.766624927520752
    5. 'len' → logprob: -13.51662540435791
    6. '	line' → logprob: -15.39162540435791
    7. '#line' → logprob: -15.89162540435791
    8. '(line' → logprob: -16.016624450683594
    9. ' ' → logprob: -16.391624450683594
    10. '   ' → logprob: -16.516624450683594

Token 913: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25197291374206543
    2. ' ==' → logprob: -1.5019729137420654
    3. '()==' → logprob: -11.126973152160645
    4. '=' → logprob: -11.251973152160645
    5. '===' → logprob: -12.126973152160645
    6. '==
' → logprob: -12.626973152160645
    7. '=='' → logprob: -13.126973152160645
    8. '=="' → logprob: -13.126973152160645
    9. ')==' → logprob: -13.501973152160645
    10. ']==' → logprob: -13.751973152160645

Token 914: ' '':
' (ID: 125614)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.31602025032043457
    2. ''' → logprob: -1.3160202503204346
    3. '''' → logprob: -6.3160200119018555
    4. '""' → logprob: -7.1910200119018555
    5. '"":' → logprob: -9.191020011901855
    6. '0' → logprob: -9.566020011901855
    7. ''end' → logprob: -12.316020011901855
    8. ''#' → logprob: -12.816020011901855
    9. '"#' → logprob: -12.941020011901855
    10. ''E' → logprob: -13.441020011901855

Token 915: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008693021372891963
    2. 'continue' → logprob: -8.000869750976562
    3. '       ' → logprob: -8.125869750976562
    4. '   ' → logprob: -8.750869750976562
    5. ' continue' → logprob: -10.000869750976562
    6. 'break' → logprob: -11.000869750976562
    7. '		' → logprob: -12.750869750976562
    8. '               ' → logprob: -12.875869750976562
    9. ' ' → logprob: -13.125869750976562
    10. '0' → logprob: -13.250869750976562

Token 916: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0665467232465744
    2. 'break' → logprob: -2.816546678543091
    3. '           ' → logprob: -5.56654691696167
    4. '       ' → logprob: -7.56654691696167
    5. ' continue' → logprob: -8.441546440124512
    6. ' break' → logprob: -12.191546440124512
    7. 'return' → logprob: -12.816546440124512
    8. '   ' → logprob: -12.941546440124512
    9. '	continue' → logprob: -14.691546440124512
    10. '               ' → logprob: -15.316546440124512

Token 917: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010261393617838621
    2. '        
' → logprob: -7.501026153564453
    3. 'n' → logprob: -7.876026153564453
    4. '
' → logprob: -9.376026153564453
    5. ' n' → logprob: -13.001026153564453
    6. 'N' → logprob: -14.001026153564453
    7. '#' → logprob: -14.126026153564453
    8. '   ' → logprob: -14.251026153564453
    9. '      ' → logprob: -14.251026153564453
    10. 't' → logprob: -14.626026153564453

Token 918: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6900451183319092
    2. '       ' → logprob: -0.8150451183319092
    3. 'N' → logprob: -3.940045118331909
    4. 'H' → logprob: -4.690045356750488
    5. 'W' → logprob: -4.815045356750488
    6. 'w' → logprob: -5.440045356750488
    7. 'h' → logprob: -5.565045356750488
    8. 'parts' → logprob: -5.815045356750488
    9. '#' → logprob: -6.315045356750488
    10. 'R' → logprob: -6.690045356750488

Token 919: ' w' (ID: 286)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5979686975479126
    2. 'N' → logprob: -1.2229686975479126
    3. 'H' → logprob: -2.347968578338623
    4. 'W' → logprob: -3.597968578338623
    5. 'h' → logprob: -4.222968578338623
    6. '       ' → logprob: -4.472968578338623
    7. 'w' (adapté à ' w') → logprob: -6.472968578338623
    8. 'L' → logprob: -6.972968578338623
    9. '   ' → logprob: -7.097968578338623
    10. 'R' → logprob: -7.597968578338623

Token 920: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06151547655463219
    2. ',h' → logprob: -3.0615155696868896
    3. ' =' → logprob: -5.1865153312683105
    4. 'idth' → logprob: -6.1865153312683105
    5. ',p' → logprob: -6.1865153312683105
    6. '=' → logprob: -6.4365153312683105
    7. 'hile' → logprob: -7.8115153312683105
    8. 'h' → logprob: -8.186515808105469
    9. 'p' → logprob: -8.311515808105469
    10. 'ith' → logprob: -8.561515808105469

Token 921: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.006621462292969227
    2. 'p' → logprob: -5.381621360778809
    3. ' h' → logprob: -6.256621360778809
    4. 'n' → logprob: -10.131621360778809
    5. ' p' → logprob: -11.006621360778809
    6. 'l' → logprob: -12.506621360778809
    7. 's' → logprob: -12.756621360778809
    8. 'ph' → logprob: -12.881621360778809
    9. 't' → logprob: -13.006621360778809
    10. 'k' → logprob: -13.381621360778809

Token 922: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1394161731004715
    2. ' =' → logprob: -2.139416217803955
    3. ',' → logprob: -4.389416217803955
    4. ')' → logprob: -14.514415740966797
    5. '=int' → logprob: -15.014415740966797
    6. '<|end|>' → logprob: -15.264415740966797
    7. ' ,' → logprob: -15.514415740966797
    8. ')=' → logprob: -15.639415740966797
    9. '=line' → logprob: -15.889415740966797
    10. 'w' → logprob: -16.139415740966797

Token 923: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1070290058851242
    2. 'n' → logprob: -2.3570289611816406
    3. 's' → logprob: -5.982028961181641
    4. 'k' → logprob: -6.732028961181641
    5. 't' → logprob: -7.357028961181641
    6. 'q' → logprob: -7.482028961181641
    7. 'm' → logprob: -7.732028961181641
    8. 'l' → logprob: -8.23202896118164
    9. 'd' → logprob: -8.48202896118164
    10. 'c' → logprob: -8.60702896118164

Token 924: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048659928143024445
    2. ' =' → logprob: -3.0486600399017334
    3. ',' → logprob: -9.548660278320312
    4. ' ' → logprob: -14.798660278320312
    5. ')' → logprob: -15.173660278320312
    6. '=line' → logprob: -15.923660278320312
    7. 'w' → logprob: -16.298660278320312
    8. '=}' → logprob: -17.173660278320312
    9. '=input' → logprob: -17.173660278320312
    10. '=int' → logprob: -17.298660278320312

Token 925: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.16036465764045715
    2. ' map' → logprob: -1.9103646278381348
    3. 'line' → logprob: -9.285365104675293
    4. '(map' → logprob: -10.785365104675293
    5. ' line' → logprob: -10.910365104675293
    6. '[' → logprob: -12.285365104675293
    7. '[line' → logprob: -13.410365104675293
    8. ' [' → logprob: -13.785365104675293
    9. 'list' → logprob: -14.410365104675293
    10. '(line' → logprob: -15.035365104675293

Token 926: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005536287208087742
    2. 'int' → logprob: -7.500553607940674
    3. '(str' → logprob: -15.250554084777832
    4. '[int' → logprob: -15.750554084777832
    5. '(' → logprob: -16.625553131103516
    6. '=int' → logprob: -16.750553131103516
    7. ' int' → logprob: -17.125553131103516
    8. '(lambda' → logprob: -17.875553131103516
    9. '	int' → logprob: -18.500553131103516
    10. '<int' → logprob: -18.625553131103516

Token 927: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0011280750622972846
    2. 'line' → logprob: -7.001128196716309
    3. ')' → logprob: -8.501128196716309
    4. ',line' → logprob: -11.876128196716309
    5. '=line' → logprob: -13.001128196716309
    6. '[line' → logprob: -13.751128196716309
    7. '#line' → logprob: -13.751128196716309
    8. '(' → logprob: -13.876128196716309
    9. ' line' → logprob: -14.251128196716309
    10. ',' → logprob: -15.876128196716309

Token 928: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -3.547789674485102e-05
    2. ' line' → logprob: -10.250035285949707
    3. '(line' → logprob: -18.375036239624023
    4. '[line' → logprob: -21.375036239624023
    5. '#line' → logprob: -21.500036239624023
    6. '=line' → logprob: -21.875036239624023
    7. '	line' → logprob: -22.250036239624023
    8. ')' → logprob: -22.750036239624023
    9. '_line' → logprob: -23.750036239624023
    10. ',line' → logprob: -24.375036239624023

Token 929: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.005628935527056456
    2. '.split' → logprob: -5.255629062652588
    3. '.strip' → logprob: -8.88062858581543
    4. 'split' → logprob: -9.88062858581543
    5. '.readline' → logprob: -10.00562858581543
    6. '(line' → logprob: -10.00562858581543
    7. '(split' → logprob: -10.63062858581543
    8. '.' → logprob: -11.00562858581543
    9. '()' → logprob: -11.00562858581543
    10. '[line' → logprob: -11.13062858581543

Token 930: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0009265877306461334
    2. '()' → logprob: -7.875926494598389
    3. '('' → logprob: -8.000926971435547
    4. '())
' → logprob: -8.875926971435547
    5. ')' → logprob: -9.750926971435547
    6. '(' → logprob: -11.500926971435547
    7. '(','' → logprob: -13.750926971435547
    8. '())

' → logprob: -14.625926971435547
    9. '("' → logprob: -15.000926971435547
    10. '())
' → logprob: -15.375926971435547

Token 931: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0257054902613163
    2. 'if' → logprob: -3.900705575942993
    3. ' if' → logprob: -5.400705337524414
    4. '<|end|>' → logprob: -7.900705337524414
    5. '```' → logprob: -8.775705337524414
    6. '   ' → logprob: -10.275705337524414
    7. '        
' → logprob: -10.525705337524414
    8. '           ' → logprob: -11.900705337524414
    9. '#' → logprob: -12.025705337524414
    10. '<|end|>' → logprob: -12.150705337524414

Token 932: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00021021578868385404
    2. '       ' → logprob: -8.50020980834961
    3. ' if' → logprob: -12.12520980834961
    4. '#' → logprob: -13.62520980834961
    5. 'If' → logprob: -16.87520980834961
    6. '	if' → logprob: -17.75020980834961
    7. '```' → logprob: -18.00020980834961
    8. '   ' → logprob: -19.00020980834961
    9. 'w' → logprob: -19.25020980834961
    10. 's' → logprob: -20.12520980834961

Token 933: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.7133641196996905e-05
    2. '(w' → logprob: -10.87502670288086
    3. ' w' → logprob: -11.75002670288086
    4. '(' → logprob: -15.37502670288086
    5. '   ' → logprob: -18.12502670288086
    6. ' (' → logprob: -18.25002670288086
    7. ' ' → logprob: -19.00002670288086
    8. '	w' → logprob: -19.00002670288086
    9. '[w' → logprob: -19.50002670288086
    10. ' ' → logprob: -20.62502670288086

Token 934: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08022356778383255
    2. ' ==' → logprob: -2.580223560333252
    3. '=' → logprob: -6.705223560333252
    4. '<=' → logprob: -9.83022403717041
    5. '===' → logprob: -10.70522403717041
    6. '==
' → logprob: -11.20522403717041
    7. 'w' → logprob: -12.83022403717041
    8. ' <=' → logprob: -13.08022403717041
    9. ')==' → logprob: -13.20522403717041
    10. ']==' → logprob: -13.45522403717041

Token 935: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -17.500139236450195
    4. '  ' → logprob: -17.625139236450195
    5. '=' → logprob: -19.500139236450195
    6. '```' → logprob: -19.500139236450195
    7. 'p' → logprob: -19.750139236450195
    8. '۰' → logprob: -20.000139236450195
    9. '    ' → logprob: -20.500139236450195
    10. '
' → logprob: -20.500139236450195

Token 936: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.081584716506768e-05
    2. ' ' → logprob: -10.875020980834961
    3. 'h' → logprob: -13.375020980834961
    4. 'p' → logprob: -15.125020980834961
    5. ' h' → logprob: -17.87502098083496
    6. '-' → logprob: -18.25002098083496
    7. '   ' → logprob: -19.12502098083496
    8. '  ' → logprob: -19.37502098083496
    9. '```' → logprob: -19.37502098083496
    10. 's' → logprob: -19.75002098083496

Token 937: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07889111340045929
    2. 'and' → logprob: -2.5788910388946533
    3. ' ' → logprob: -14.203890800476074
    4. '	and' → logprob: -14.828890800476074
    5. ':' → logprob: -15.703890800476074
    6. ' и' → logprob: -16.32889175415039
    7. '  ' → logprob: -18.32889175415039
    8. '0' → logprob: -18.70389175415039
    9. '<|end|>' → logprob: -18.82889175415039
    10. '   ' → logprob: -18.95389175415039

Token 938: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0005530327325686812
    2. ' h' → logprob: -7.500553131103516
    3. '	h' → logprob: -17.625553131103516
    4. '   ' → logprob: -18.750553131103516
    5. 'w' → logprob: -20.000553131103516
    6. 'p' → logprob: -20.625553131103516
    7. ' ' → logprob: -21.125553131103516
    8. ' ' → logprob: -21.375553131103516
    9. '  ' → logprob: -22.000553131103516
    10. 'hpp' → logprob: -22.875553131103516

Token 939: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931529641151428
    2. ' ==' → logprob: -0.6931529641151428
    3. '=' → logprob: -13.318153381347656
    4. '===' → logprob: -13.443153381347656
    5. ' ' → logprob: -13.818153381347656
    6. '0' → logprob: -15.318153381347656
    7. ' ' → logprob: -15.443153381347656
    8. ')==' → logprob: -15.443153381347656
    9. ' =' → logprob: -15.568153381347656
    10. '<|end|>' → logprob: -15.568153381347656

Token 940: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. 'and' → logprob: -17.375261306762695
    4. ' and' → logprob: -18.000261306762695
    5. ' ' → logprob: -20.875261306762695
    6. '   ' → logprob: -21.000261306762695
    7. '۰' → logprob: -21.625261306762695
    8. '  ' → logprob: -21.625261306762695
    9. 'p' → logprob: -22.250261306762695
    10. '```' → logprob: -22.250261306762695

Token 941: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '۰' → logprob: -20.875009536743164
    4. '<|end|>' → logprob: -20.875009536743164
    5. 'and' → logprob: -21.375009536743164
    6. ' and' → logprob: -21.500009536743164
    7. '<|end|>' → logprob: -22.125009536743164
    8. '=' → logprob: -22.250009536743164
    9. '```' → logprob: -22.875009536743164
    10. '   ' → logprob: -23.000009536743164

Token 942: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.012512944638729095
    2. 'and' → logprob: -4.387513160705566
    3. '0' → logprob: -12.762513160705566
    4. ' ' → logprob: -15.887513160705566
    5. ' и' → logprob: -16.13751220703125
    6. 'そして' → logprob: -16.38751220703125
    7. '	and' → logprob: -17.51251220703125
    8. '```' → logprob: -17.63751220703125
    9. '<|end|>' → logprob: -18.01251220703125
    10. '<|end|>' → logprob: -18.13751220703125

Token 943: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0015023599844425917
    2. ' p' → logprob: -6.501502513885498
    3. ' ' → logprob: -20.251502990722656
    4. '	p' → logprob: -21.001502990722656
    5. '   ' → logprob: -21.626502990722656
    6. '0' → logprob: -21.876502990722656
    7. ' ' → logprob: -22.501502990722656
    8. '  ' → logprob: -23.001502990722656
    9. '_p' → logprob: -23.376502990722656
    10. '<p' → logprob: -23.876502990722656

Token 944: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1602741926908493
    2. ' ==' → logprob: -1.9102741479873657
    3. '=' → logprob: -10.785274505615234
    4. '0' → logprob: -10.910274505615234
    5. ')==' → logprob: -12.785274505615234
    6. '===' → logprob: -13.410274505615234
    7. '()==' → logprob: -13.410274505615234
    8. '<|end|>' → logprob: -13.660274505615234
    9. ']==' → logprob: -14.035274505615234
    10. ':' → logprob: -14.035274505615234

Token 945: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '۰' → logprob: -21.0
    4. '০' → logprob: -22.125
    5. '<|end|>' → logprob: -22.375
    6. '```' → logprob: -22.875
    7. '<|end|>' → logprob: -23.5
    8. '=' → logprob: -23.625
    9. '०' → logprob: -23.75
    10. '#' → logprob: -24.125

Token 946: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '۰' → logprob: -20.125
    4. '০' → logprob: -21.0
    5. '<|end|>' → logprob: -21.5
    6. '०' → logprob: -21.875
    7. '```' → logprob: -21.875
    8. 'o' → logprob: -21.875
    9. '<|end|>' → logprob: -21.875
    10. '   ' → logprob: -22.25

Token 947: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3150745928287506
    2. ':
' → logprob: -1.3150745630264282
    3. '           ' → logprob: -6.440074443817139
    4. '       ' → logprob: -8.565074920654297
    5. ':return' → logprob: -11.690074920654297
    6. ':
' → logprob: -12.190074920654297
    7. '   ' → logprob: -12.190074920654297
    8. '):
' → logprob: -13.315074920654297
    9. '.' → logprob: -13.815074920654297
    10. '          ' → logprob: -14.315074920654297

Token 948: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.5213274309644476e-05
    2. '		' → logprob: -11.500015258789062
    3. '       ' → logprob: -12.875015258789062
    4. '               ' → logprob: -13.875015258789062
    5. '          ' → logprob: -14.375015258789062
    6. '	       ' → logprob: -15.250015258789062
    7. 'break' → logprob: -15.750015258789062
    8. '   ' → logprob: -15.875015258789062
    9. ' break' → logprob: -15.875015258789062
    10. '         ' → logprob: -17.000015258789062

Token 949: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.03774627670645714
    2. '           ' → logprob: -3.5377461910247803
    3. 'return' → logprob: -5.037746429443359
    4. ' break' → logprob: -6.537746429443359
    5. '	break' → logprob: -11.16274642944336
    6. '       ' → logprob: -11.91274642944336
    7. '               ' → logprob: -12.41274642944336
    8. ' return' → logprob: -13.41274642944336
    9. '		' → logprob: -14.28774642944336
    10. '_break' → logprob: -15.03774642944336

Token 950: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01902145706117153
    2. '   ' → logprob: -4.769021511077881
    3. '        
' → logprob: -4.769021511077881
    4. '    
' → logprob: -7.144021511077881
    5. '
' → logprob: -7.894021511077881
    6. 'image' → logprob: -8.144021034240723
    7. '#' → logprob: -8.519021034240723
    8. '            
' → logprob: -9.894021034240723
    9. '```' → logprob: -10.269021034240723
    10. '       
' → logprob: -10.769021034240723

Token 951: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00048191213863901794
    2. 'image' → logprob: -8.250481605529785
    3. 'pattern' → logprob: -9.250481605529785
    4. '#' → logprob: -9.375481605529785
    5. '   ' → logprob: -10.625481605529785
    6. '        
' → logprob: -12.000481605529785
    7. '```' → logprob: -12.500481605529785
    8. 'patterns' → logprob: -14.000481605529785
    9. 'w' → logprob: -14.375481605529785
    10. 'n' → logprob: -14.375481605529785

Token 952: ' #' (ID: 1069)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.11925787478685379
    2. '#' (adapté à ' #') → logprob: -2.494257926940918
    3. 'patterns' → logprob: -3.744257926940918
    4. 'encoded' → logprob: -5.869257926940918
    5. 'image' → logprob: -6.244257926940918
    6. 'pat' → logprob: -7.744257926940918
    7. 'p' → logprob: -8.119257926940918
    8. 'w' → logprob: -8.869257926940918
    9. 'decoded' → logprob: -9.494257926940918
    10. 'width' → logprob: -10.119257926940918

Token 953: ' Lire' (ID: 57624)
  Prédit: 'image'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'image' → logprob: -0.6947242617607117
    2. '#' → logprob: -0.9447242617607117
    3. 'pattern' → logprob: -2.3197243213653564
    4. 'patterns' → logprob: -5.319724082946777
    5. 'img' → logprob: -5.944724082946777
    6. 'encoded' → logprob: -6.069724082946777
    7. 'width' → logprob: -6.944724082946777
    8. 'images' → logprob: -7.569724082946777
    9. 'lines' → logprob: -8.069724082946777
    10. 'decoded' → logprob: -8.069724082946777

Token 954: ' image' (ID: 3621)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.7971844673156738
    2. 'image' → logprob: -0.9221844673156738
    3. 'encoded' → logprob: -2.922184467315674
    4. 'patterns' → logprob: -3.797184467315674
    5. '#' → logprob: -4.047184467315674
    6. '       ' → logprob: -4.172184467315674
    7. 'l' → logprob: -4.547184467315674
    8. 'les' → logprob: -5.172184467315674
    9. 'pat' → logprob: -5.172184467315674
    10. 'lines' → logprob: -5.422184467315674

Token 955: '
' (ID: 198)
  Prédit: 'image'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'image' → logprob: -0.05281272530555725
    2. '       ' → logprob: -3.0528128147125244
    3. 'lines' → logprob: -6.302812576293945
    4. 'img' → logprob: -6.677812576293945
    5. ' image' → logprob: -8.552812576293945
    6. 'decoded' → logprob: -8.677812576293945
    7. 'raw' → logprob: -9.052812576293945
    8. 'rows' → logprob: -9.177812576293945
    9. 'encoded' → logprob: -9.427812576293945
    10. '   ' → logprob: -9.427812576293945

Token 956: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053761452436447144
    2. 'image' → logprob: -3.3037614822387695
    3. ' =' → logprob: -4.9287614822387695
    4. 'lines' → logprob: -6.5537614822387695
    5. '=' → logprob: -6.6787614822387695
    6. '_lines' → logprob: -6.6787614822387695
    7. 'img' → logprob: -6.8037614822387695
    8. '_image' → logprob: -7.0537614822387695
    9. 'mat' → logprob: -7.4287614822387695
    10. ' image' → logprob: -8.05376148223877

Token 957: ' image' (ID: 3621)
  Prédit: 'image'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'image' (adapté à ' image') → logprob: -0.00015979631280060858
    2. 'img' → logprob: -9.500160217285156
    3. '       ' → logprob: -10.000160217285156
    4. ' image' → logprob: -10.250160217285156
    5. 'raw' → logprob: -13.375160217285156
    6. 'encoded' → logprob: -14.000160217285156
    7. '_image' → logprob: -15.250160217285156
    8. '   ' → logprob: -15.250160217285156
    9. 'grid' → logprob: -15.500160217285156
    10. 'images' → logprob: -15.625160217285156

Token 958: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37404584884643555
    2. '_bits' → logprob: -1.3740458488464355
    3. '_lines' → logprob: -3.7490458488464355
    4. '=' → logprob: -3.7490458488464355
    5. 'bits' → logprob: -5.8740458488464355
    6. '_encoded' → logprob: -5.8740458488464355
    7. '   ' → logprob: -6.3740458488464355
    8. '_matrix' → logprob: -7.3740458488464355
    9. '_data' → logprob: -7.3740458488464355
    10. '_bin' → logprob: -7.6240458488464355

Token 959: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.5863564014434814
    2. '[' → logprob: -0.8363564014434814
    3. '[]' → logprob: -4.586356163024902
    4. '[
' → logprob: -10.711356163024902
    5. '[array' → logprob: -10.711356163024902
    6. '[int' → logprob: -11.086356163024902
    7. '[new' → logprob: -11.336356163024902
    8. '[input' → logprob: -11.336356163024902
    9. '[list' → logprob: -11.711356163024902
    10. '[line' → logprob: -11.711356163024902

Token 960: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00033832306507974863
    2. 'for' → logprob: -8.125338554382324
    3. ' for' → logprob: -10.125338554382324
    4. '   ' → logprob: -14.000338554382324
    5. '	   ' → logprob: -14.250338554382324
    6. '	for' → logprob: -15.875338554382324
    7. '        
' → logprob: -16.250337600708008
    8. '	' → logprob: -16.625337600708008
    9. '           ' → logprob: -16.750337600708008
    10. '<|end|>' → logprob: -16.750337600708008

Token 961: ' nch' (ID: 45428)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12716065347194672
    2. '       ' → logprob: -2.1271605491638184
    3. ' for' → logprob: -8.377161026000977
    4. '   ' → logprob: -13.127161026000977
    5. '	for' → logprob: -15.002161026000977
    6. ' ' → logprob: -16.252161026000977
    7. '_for' → logprob: -18.377161026000977
    8. '```' → logprob: -18.502161026000977
    9. '      ' → logprob: -18.877161026000977
    10. 'while' → logprob: -19.002161026000977

Token 962: 'ars' (ID: 1904)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5825234055519104
    2. 'ar' → logprob: -1.9575233459472656
    3. ' =' → logprob: -1.9575233459472656
    4. '_lines' → logprob: -2.4575233459472656
    5. 'ars' → logprob: -2.9575233459472656
    6. 'lines' → logprob: -5.582523345947266
    7. '_l' → logprob: -5.707523345947266
    8. '   ' → logprob: -5.832523345947266
    9. 'a' → logprob: -6.457523345947266
    10. 'l' → logprob: -6.707523345947266

Token 963: '_image' (ID: 10607)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09395880997180939
    2. ' =' → logprob: -2.593958854675293
    3. '_needed' → logprob: -4.593958854675293
    4. '_per' → logprob: -6.343958854675293
    5. '_for' → logprob: -6.593958854675293
    6. 'for' → logprob: -7.718958854675293
    7. 'needed' → logprob: -7.968958854675293
    8. '_line' → logprob: -7.968958854675293
    9. '_to' → logprob: -8.593958854675293
    10. 'per' → logprob: -9.218958854675293

Token 964: '_line' (ID: 14418)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3138255774974823
    2. ' =' → logprob: -1.3138256072998047
    3. '_line' → logprob: -8.688825607299805
    4. '=line' → logprob: -9.188825607299805
    5. '_per' → logprob: -9.313825607299805
    6. '_needed' → logprob: -10.063825607299805
    7. '=int' → logprob: -10.438825607299805
    8. 'per' → logprob: -10.563825607299805
    9. '_count' → logprob: -11.188825607299805
    10. 'for' → logprob: -11.438825607299805

Token 965: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1128392368555069
    2. ' =' → logprob: -2.2378392219543457
    3. '=int' → logprob: -11.612839698791504
    4. 'for' → logprob: -12.862839698791504
    5. '=w' → logprob: -13.612839698791504
    6. '=line' → logprob: -13.987839698791504
    7. '   ' → logprob: -14.237839698791504
    8. ' for' → logprob: -14.737839698791504
    9. ' ' → logprob: -15.112839698791504
    10. 'w' → logprob: -15.237839698791504

Token 966: ' (' (ID: 350)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.25815725326538086
    2. '(math' → logprob: -2.133157253265381
    3. ' (' → logprob: -2.883157253265381
    4. 'math' → logprob: -3.008157253265381
    5. ' math' → logprob: -6.008157253265381
    6. '((' → logprob: -7.258157253265381
    7. '(W' → logprob: -8.883157730102539
    8. '   ' → logprob: -9.008157730102539
    9. ' ' → logprob: -9.633157730102539
    10. '(n' → logprob: -10.258157730102539

Token 967: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.01606111414730549
    2. '(w' → logprob: -4.141061305999756
    3. ' w' → logprob: -11.016060829162598
    4. ' (' → logprob: -12.516060829162598
    5. '   ' → logprob: -13.266060829162598
    6. '(' → logprob: -13.766060829162598
    7. '+w' → logprob: -13.766060829162598
    8. '	w' → logprob: -14.391060829162598
    9. '[w' → logprob: -14.891060829162598
    10. '((' → logprob: -15.141060829162598

Token 968: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759459733963013
    2. '+' → logprob: -0.8259459733963013
    3. ' ' → logprob: -12.700945854187012
    4. '   ' → logprob: -13.200945854187012
    5. ' +
' → logprob: -14.575945854187012
    6. '    ' → logprob: -15.450945854187012
    7. '+
' → logprob: -15.450945854187012
    8. '  ' → logprob: -15.700945854187012
    9. ' ' → logprob: -16.075946807861328
    10. ')' → logprob: -16.700946807861328

Token 969: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -2.5822400857578032e-05
    2. '(' → logprob: -11.000025749206543
    3. '2' → logprob: -11.875025749206543
    4. ' ' → logprob: -13.875025749206543
    5. '6' → logprob: -14.250025749206543
    6. '=' → logprob: -15.500025749206543
    7. '((' → logprob: -15.750025749206543
    8. '3' → logprob: -15.875025749206543
    9. '7' → logprob: -16.25002670288086
    10. '   ' → logprob: -18.00002670288086

Token 970: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -14.000001907348633
    3. ' ' → logprob: -14.875001907348633
    4. '2' → logprob: -15.500001907348633
    5. '05' → logprob: -16.750001907348633
    6. '=' → logprob: -17.000001907348633
    7. '7' → logprob: -17.000001907348633
    8. '
' → logprob: -17.125001907348633
    9. '63' → logprob: -17.625001907348633
    10. '((' → logprob: -17.750001907348633

Token 971: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008655819110572338
    2. ')//' → logprob: -4.758656024932861
    3. ' )' → logprob: -10.758655548095703
    4. ')>>' → logprob: -11.133655548095703
    5. '//' → logprob: -12.633655548095703
    6. '   ' → logprob: -13.508655548095703
    7. '       ' → logprob: -15.008655548095703
    8. ')
' → logprob: -15.883655548095703
    9. '	' → logprob: -16.383655548095703
    10. '>>' → logprob: -16.383655548095703

Token 972: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.039178572595119476
    2. ')' → logprob: -3.4141786098480225
    3. '>>' → logprob: -6.039178371429443
    4. ' //' → logprob: -6.039178371429443
    5. ')//' → logprob: -7.789178371429443
    6. '#' → logprob: -8.539178848266602
    7. '   ' → logprob: -9.789178848266602
    8. '       ' → logprob: -10.289178848266602
    9. '```' → logprob: -11.039178848266602
    10. ' ' → logprob: -11.789178848266602

Token 973: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '۶' → logprob: -21.125
    4. '٦' → logprob: -21.375
    5. '६' → logprob: -21.5
    6. '৬' → logprob: -22.25
    7. '   ' → logprob: -22.25
    8. '' → logprob: -22.5
    9. '６' → logprob: -22.625
    10. '3' → logprob: -23.125

Token 974: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '64' → logprob: -20.25
    4. '۶' → logprob: -21.375
    5. '=' → logprob: -21.75
    6. '٦' → logprob: -21.875
    7. '3' → logprob: -22.0
    8. '६' → logprob: -22.625
    9. '' → logprob: -22.75
    10. '2' → logprob: -23.0

Token 975: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.1424973713001236e-05
    2. '
' → logprob: -11.625031471252441
    3. '        
' → logprob: -11.750031471252441
    4. ')' → logprob: -12.500031471252441
    5. '<|end|>' → logprob: -12.500031471252441
    6. '   ' → logprob: -13.375031471252441
    7. '#' → logprob: -14.000031471252441
    8. ' ' → logprob: -14.250031471252441
    9. ' for' → logprob: -14.500031471252441
    10. '      ' → logprob: -14.500031471252441

Token 976: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016531638102605939
    2. '
' → logprob: -6.50165319442749
    3. '        
' → logprob: -9.376652717590332
    4. 'for' → logprob: -10.751652717590332
    5. ' ' → logprob: -11.501652717590332
    6. '#' → logprob: -11.876652717590332
    7. '  
' → logprob: -12.376652717590332
    8. ' for' → logprob: -12.376652717590332
    9. '   ' → logprob: -12.501652717590332
    10. ')' → logprob: -12.501652717590332

Token 977: ' nombre' (ID: 9733)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7099296450614929
    2. 'for' → logprob: -0.9599296450614929
    3. ' for' → logprob: -2.0849297046661377
    4. 'n' → logprob: -7.584929466247559
    5. ')' → logprob: -9.084929466247559
    6. 'next' → logprob: -9.209929466247559
    7. '#' → logprob: -9.709929466247559
    8. ' ' → logprob: -9.959929466247559
    9. '   ' → logprob: -10.334929466247559
    10. 'num' → logprob: -10.709929466247559

Token 978: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.11403641849756241
    2. '       ' → logprob: -2.6140363216400146
    3. ' de' → logprob: -4.239036560058594
    4. '   ' → logprob: -4.614036560058594
    5. '_de' → logprob: -4.989036560058594
    6. 'd' → logprob: -6.239036560058594
    7. '    ' → logprob: -8.614036560058594
    8. '_lines' → logprob: -8.864036560058594
    9. 'des' → logprob: -9.114036560058594
    10. '=' → logprob: -9.364036560058594

Token 979: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0028208012226969004
    2. 'chars' → logprob: -6.12782096862793
    3. 'characters' → logprob: -8.50282096862793
    4. ' caractères' → logprob: -8.50282096862793
    5. 'c' → logprob: -9.00282096862793
    6. 'char' → logprob: -10.00282096862793
    7. 'codes' → logprob: -10.50282096862793
    8. 'code' → logprob: -11.62782096862793
    9. 'encoded' → logprob: -11.62782096862793
    10. '```' → logprob: -12.37782096862793

Token 980: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.030781002715229988
    2. '       ' → logprob: -3.6557810306549072
    3. ' par' → logprob: -6.155780792236328
    4. 'pour' → logprob: -7.405780792236328
    5. 'for' → logprob: -7.405780792236328
    6. 'à' → logprob: -7.905780792236328
    7. 'per' → logprob: -8.780780792236328
    8. 'dans' → logprob: -9.030780792236328
    9. '_par' → logprob: -9.155780792236328
    10. 'de' → logprob: -9.155780792236328

Token 981: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.022617144510149956
    2. 'line' → logprob: -4.397617340087891
    3. ' ligne' → logprob: -4.647617340087891
    4. 'image' → logprob: -7.897617340087891
    5. ' line' → logprob: -10.52261734008789
    6. 'l' → logprob: -11.02261734008789
    7. 'input' → logprob: -11.39761734008789
    8. ' image' → logprob: -11.52261734008789
    9. 'lin' → logprob: -11.64761734008789
    10. 'encoded' → logprob: -11.77261734008789

Token 982: ' image' (ID: 3621)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.047134305234067e-05
    2. 'for' → logprob: -11.125030517578125
    3. ' for' → logprob: -11.750030517578125
    4. '        
' → logprob: -12.625030517578125
    5. '<|end|>' → logprob: -13.625030517578125
    6. ',' → logprob: -13.750030517578125
    7. '   ' → logprob: -14.125030517578125
    8. '#' → logprob: -15.125030517578125
    9. '<|end|>' → logprob: -15.125030517578125
    10. ')' → logprob: -15.875030517578125

Token 983: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.47757811343763e-05
    2. ' for' → logprob: -11.000044822692871
    3. 'for' → logprob: -11.125044822692871
    4. '<|end|>' → logprob: -12.375044822692871
    5. '        
' → logprob: -12.500044822692871
    6. '   ' → logprob: -13.000044822692871
    7. ',' → logprob: -13.875044822692871
    8. '
' → logprob: -14.750044822692871
    9. '<|end|>' → logprob: -15.000044822692871
    10. ' ' → logprob: -15.000044822692871

Token 984: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021224225929472595
    2. 'for' → logprob: -8.500212669372559
    3. ' for' → logprob: -12.000212669372559
    4. '   ' → logprob: -13.125212669372559
    5. '        
' → logprob: -16.000211715698242
    6. '           ' → logprob: -16.000211715698242
    7. '```' → logprob: -16.500211715698242
    8. ' ' → logprob: -17.125211715698242
    9. '<|end|>' → logprob: -17.250211715698242
    10. '	for' → logprob: -17.625211715698242

Token 985: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004090035799890757
    2. '       ' → logprob: -5.504089832305908
    3. ' for' → logprob: -11.379090309143066
    4. '   ' → logprob: -15.754090309143066
    5. '	for' → logprob: -17.12908935546875
    6. '        
' → logprob: -18.87908935546875
    7. ' ' → logprob: -18.87908935546875
    8. '```' → logprob: -19.12908935546875
    9. '_for' → logprob: -20.50408935546875
    10. '           ' → logprob: -20.50408935546875

Token 986: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0038513822946697474
    2. '_i' → logprob: -5.753851413726807
    3. '_image' → logprob: -8.003850936889648
    4. '_line' → logprob: -8.378850936889648
    5. '_l' → logprob: -10.378850936889648
    6. '_in' → logprob: -10.503850936889648
    7. '_img' → logprob: -11.378850936889648
    8. ' _' → logprob: -11.503850936889648
    9. 'i' → logprob: -12.128850936889648
    10. '_range' → logprob: -12.378850936889648

Token 987: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6819232702255249
    2. 'range' → logprob: -0.9319232702255249
    3. 'in' → logprob: -2.3069233894348145
    4. ' range' → logprob: -6.9319233894348145
    5. ' ' → logprob: -11.931922912597656
    6. '  ' → logprob: -12.931922912597656
    7. '   ' → logprob: -13.806922912597656
    8. 'import' → logprob: -13.806922912597656
    9. '	range' → logprob: -13.931922912597656
    10. '_' → logprob: -14.181922912597656

Token 988: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.5048530030981055e-06
    2. ' range' → logprob: -13.500001907348633
    3. '_range' → logprob: -19.500001907348633
    4. '(range' → logprob: -20.125001907348633
    5. '_' → logprob: -20.375001907348633
    6. '	range' → logprob: -20.375001907348633
    7. ')' → logprob: -21.625001907348633
    8. '[' → logprob: -22.500001907348633
    9. 'in' → logprob: -22.875001907348633
    10. 'Range' → logprob: -23.000001907348633

Token 989: '(h' (ID: 8120)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0028565898537635803
    2. '(h' → logprob: -6.002856731414795
    3. ' h' → logprob: -7.877856731414795
    4. '   ' → logprob: -14.252856254577637
    5. '	h' → logprob: -14.877856254577637
    6. '       ' → logprob: -15.127856254577637
    7. ' (' → logprob: -15.252856254577637
    8. '_h' → logprob: -16.252857208251953
    9. 'range' → logprob: -16.752857208251953
    10. '<h' → logprob: -17.127857208251953

Token 990: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.009000850841403008
    2. '):' → logprob: -4.759000778198242
    3. '):
' → logprob: -8.134000778198242
    4. '       ' → logprob: -9.509000778198242
    5. '   ' → logprob: -11.509000778198242
    6. ':
' → logprob: -12.634000778198242
    7. ':' → logprob: -13.134000778198242
    8. ')' → logprob: -14.009000778198242
    9. '():
' → logprob: -14.384000778198242
    10. '           ' → logprob: -14.384000778198242

Token 991: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025017432868480682
    2. '       ' → logprob: -4.275017261505127
    3. '	       ' → logprob: -4.900017261505127
    4. '   ' → logprob: -6.400017261505127
    5. '	   ' → logprob: -7.025017261505127
    6. ' line' → logprob: -8.400017738342285
    7. '    	   ' → logprob: -8.900017738342285
    8. 'encoded' → logprob: -9.275017738342285
    9. '		   ' → logprob: -9.650017738342285
    10. ' encoded' → logprob: -9.775017738342285

Token 992: ' encoded' (ID: 41096)
  Prédit: 'encoded'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'encoded' (adapté à ' encoded') → logprob: -0.32566753029823303
    2. ' encoded' → logprob: -1.8256675004959106
    3. 'enc' → logprob: -2.7006676197052
    4. ' enc' → logprob: -3.4506676197052
    5. '           ' → logprob: -4.700667381286621
    6. 'line' → logprob: -5.575667381286621
    7. ' line' → logprob: -6.325667381286621
    8. 'img' → logprob: -7.450667381286621
    9. 'e' → logprob: -7.700667381286621
    10. ' raw' → logprob: -8.200667381286621

Token 993: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0007890212000347674
    2. 'line' → logprob: -7.375789165496826
    3. '_image' → logprob: -8.750788688659668
    4. 'image' → logprob: -13.125788688659668
    5. '=line' → logprob: -14.875788688659668
    6. '	line' → logprob: -15.000788688659668
    7. '_l' → logprob: -15.125788688659668
    8. '_img' → logprob: -15.375788688659668
    9. '=' → logprob: -15.375788688659668
    10. 'ligne' → logprob: -15.750788688659668

Token 994: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014821320772171
    2. '=' → logprob: -1.7014821767807007
    3. '=line' → logprob: -9.701481819152832
    4. '=input' → logprob: -11.951481819152832
    5. '   ' → logprob: -14.951481819152832
    6. '           ' → logprob: -15.576481819152832
    7. '       ' → logprob: -15.951481819152832
    8. '_line' → logprob: -16.07648277282715
    9. ' ' → logprob: -16.32648277282715
    10. 'line' → logprob: -16.82648277282715

Token 995: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0002615742268972099
    2. ' input' → logprob: -8.250261306762695
    3. '   ' → logprob: -15.375261306762695
    4. 'encoded' → logprob: -17.625261306762695
    5. ' ' → logprob: -18.625261306762695
    6. '(input' → logprob: -18.750261306762695
    7. '       ' → logprob: -18.875261306762695
    8. 'output' → logprob: -19.000261306762695
    9. '           ' → logprob: -19.375261306762695
    10. '	input' → logprob: -19.500261306762695

Token 996: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0010314998216927052
    2. '_line' → logprob: -7.376031398773193
    3. 'lines' → logprob: -8.876031875610352
    4. '=' → logprob: -9.501031875610352
    5. ' =' → logprob: -9.751031875610352
    6. 'Lines' → logprob: -10.001031875610352
    7. '()' → logprob: -11.251031875610352
    8. '_' → logprob: -12.001031875610352
    9. '   ' → logprob: -12.126031875610352
    10. '(lines' → logprob: -12.126031875610352

Token 997: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -8.77627644513268e-06
    2. 'idx' → logprob: -11.750008583068848
    3. '[' → logprob: -15.500008583068848
    4. '```' → logprob: -15.500008583068848
    5. '[index' → logprob: -16.125009536743164
    6. '       ' → logprob: -16.250009536743164
    7. '   ' → logprob: -17.000009536743164
    8. '(idx' → logprob: -17.000009536743164
    9. '           ' → logprob: -17.125009536743164
    10. '[ind' → logprob: -17.375009536743164

Token 998: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0027310517616569996
    2. ']' → logprob: -6.502730846405029
    3. '[idx' → logprob: -7.377730846405029
    4. '.strip' → logprob: -8.002731323242188
    5. ']
' → logprob: -8.752731323242188
    6. '][' → logprob: -10.127731323242188
    7. '       ' → logprob: -10.877731323242188
    8. '           ' → logprob: -11.002731323242188
    9. '.rstrip' → logprob: -11.127731323242188
    10. ' ].' → logprob: -12.627731323242188

Token 999: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -4.68022444692906e-05
    2. 'rstrip' → logprob: -10.000046730041504
    3. 'idx' → logprob: -13.875046730041504
    4. '_strip' → logprob: -15.125046730041504
    5. ' strip' → logprob: -16.00004768371582
    6. 'split' → logprob: -17.37504768371582
    7. 'replace' → logprob: -19.00004768371582
    8. '(strip' → logprob: -19.00004768371582
    9. '.strip' → logprob: -19.37504768371582
    10. 'decode' → logprob: -19.37504768371582

Token 1000: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.6609046459197998
    2. '()' → logprob: -0.7859046459197998
    3. '()\' → logprob: -3.6609046459198
    4. '().' → logprob: -7.035904884338379
    5. '(idx' → logprob: -8.035904884338379
    6. '[idx' → logprob: -8.410904884338379
    7. '()
' → logprob: -8.660904884338379
    8. '();' → logprob: -9.035904884338379
    9. '       ' → logprob: -9.160904884338379
    10. '()[' → logprob: -9.535904884338379

Token 1001: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022153646568767726
    2. '<|end|>' → logprob: -9.750221252441406
    3. '       ' → logprob: -10.000221252441406
    4. 'idx' → logprob: -10.125221252441406
    5. '<|end|>' → logprob: -10.375221252441406
    6. '   ' → logprob: -11.375221252441406
    7. '	       ' → logprob: -11.500221252441406
    8. '	   ' → logprob: -12.125221252441406
    9. '		' → logprob: -12.750221252441406
    10. '[idx' → logprob: -12.875221252441406

Token 1002: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.03733052313327789
    2. '           ' → logprob: -3.6623306274414062
    3. ' idx' → logprob: -4.912330627441406
    4. '       ' → logprob: -5.912330627441406
    5. '	idx' → logprob: -7.537330627441406
    6. '   ' → logprob: -8.037330627441406
    7. '	   ' → logprob: -11.287330627441406
    8. '[idx' → logprob: -11.662330627441406
    9. '	       ' → logprob: -12.287330627441406
    10. ' ' → logprob: -12.412330627441406

Token 1003: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0011013990733772516
    2. ' +=' → logprob: -6.876101493835449
    3. '           ' → logprob: -10.00110149383545
    4. ']+=' → logprob: -11.12610149383545
    5. '=' → logprob: -12.50110149383545
    6. '       ' → logprob: -13.37610149383545
    7. '   ' → logprob: -14.12610149383545
    8. '```' → logprob: -14.50110149383545
    9. '               ' → logprob: -14.87610149383545
    10. '+' → logprob: -14.87610149383545

Token 1004: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.50002098083496
    4. '           ' → logprob: -18.50002098083496
    5. '```' → logprob: -18.62502098083496
    6. '       ' → logprob: -19.00002098083496
    7. '
' → logprob: -19.31252098083496
    8. 'def' → logprob: -20.12502098083496
    9. '１' → logprob: -20.31252098083496
    10. '[' → logprob: -20.43752098083496

Token 1005: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -19.25
    4. '#' → logprob: -19.375
    5. '   ' → logprob: -19.625
    6. '[' → logprob: -19.625
    7. '+' → logprob: -19.8125
    8. '_' → logprob: -20.5625
    9. '=' → logprob: -20.5625
    10. '0' → logprob: -20.875

Token 1006: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005364707321859896
    2. '       ' → logprob: -8.125536918640137
    3. 'decoded' → logprob: -9.000536918640137
    4. '   ' → logprob: -9.125536918640137
    5. ' decoded' → logprob: -12.750536918640137
    6. 'bits' → logprob: -13.750536918640137
    7. ' bits' → logprob: -14.250536918640137
    8. 'image' → logprob: -14.625536918640137
    9. '               ' → logprob: -14.750536918640137
    10. '```' → logprob: -14.875536918640137

Token 1007: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09572102874517441
    2. '       ' → logprob: -2.9707210063934326
    3. 'decoded' → logprob: -3.4707210063934326
    4. 'bits' → logprob: -4.970721244812012
    5. '   ' → logprob: -6.845721244812012
    6. ' decoded' → logprob: -7.720721244812012
    7. ' bits' → logprob: -7.970721244812012
    8. '```' → logprob: -9.470721244812012
    9. 'image' → logprob: -11.220721244812012
    10. 'decode' → logprob: -11.720721244812012

Token 1008: ' bits' (ID: 18189)
  Prédit: 'decoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decoded' → logprob: -0.5773334503173828
    2. 'bits' (adapté à ' bits') → logprob: -1.0773334503173828
    3. '       ' → logprob: -3.077333450317383
    4. '           ' → logprob: -3.702333450317383
    5. 'line' → logprob: -4.327333450317383
    6. 'image' → logprob: -4.577333450317383
    7. 'row' → logprob: -5.952333450317383
    8. ' decoded' → logprob: -7.702333450317383
    9. '   ' → logprob: -8.452333450317383
    10. ' bits' → logprob: -8.577333450317383

Token 1009: '_line' (ID: 14418)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06435878574848175
    2. ' =' → logprob: -2.814358711242676
    3. '.extend' → logprob: -6.064358711242676
    4. '+=' → logprob: -10.189358711242676
    5. ' +=' → logprob: -10.939358711242676
    6. '.append' → logprob: -12.689358711242676
    7. '   ' → logprob: -12.814358711242676
    8. '=line' → logprob: -13.564358711242676
    9. '    ' → logprob: -14.689358711242676
    10. '.=' → logprob: -15.314358711242676

Token 1010: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759394764900208
    2. ' =' → logprob: -0.8259394764900208
    3. '   ' → logprob: -17.200939178466797
    4. '＝' → logprob: -18.075939178466797
    5. '.extend' → logprob: -18.825939178466797
    6. ' ' → logprob: -18.950939178466797
    7. '+=' → logprob: -19.200939178466797
    8. 'decode' → logprob: -19.200939178466797
    9. ' +=' → logprob: -19.325939178466797
    10. ')' → logprob: -19.575939178466797

Token 1011: ' decode' (ID: 32043)
  Prédit: 'decode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -0.018150994554162025
    2. ' decode' → logprob: -4.018150806427002
    3. '   ' → logprob: -13.76815128326416
    4. '.decode' → logprob: -16.893150329589844
    5. '_decode' → logprob: -19.268150329589844
    6. 'decoded' → logprob: -19.393150329589844
    7. '       ' → logprob: -20.143150329589844
    8. '           ' → logprob: -20.393150329589844
    9. '    ' → logprob: -21.768150329589844
    10. ' ' → logprob: -21.893150329589844

Token 1012: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -2.4987974029500037e-05
    2. '_' → logprob: -10.625024795532227
    3. '_LINE' → logprob: -15.750024795532227
    4. 'line' → logprob: -16.375024795532227
    5. '(encoded' → logprob: -16.375024795532227
    6. '_encoded' → logprob: -16.375024795532227
    7. '(line' → logprob: -16.875024795532227
    8. '_l' → logprob: -17.125024795532227
    9. 'Line' → logprob: -17.500024795532227
    10. '_Line' → logprob: -18.000024795532227

Token 1013: '(encoded' (ID: 157395)
  Prédit: '(encoded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(encoded' → logprob: -3.054500666621607e-06
    2. 'encoded' → logprob: -12.87500286102295
    3. '(enc' → logprob: -15.50000286102295
    4. '(' → logprob: -16.500003814697266
    5. '(
' → logprob: -16.875003814697266
    6. '(decoded' → logprob: -17.125003814697266
    7. ' encoded' → logprob: -17.750003814697266
    8. ' (' → logprob: -18.000003814697266
    9. '(en' → logprob: -18.625003814697266
    10. '(e' → logprob: -20.375003814697266

Token 1014: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.032420966774225235
    2. 'encoded' → logprob: -4.032421112060547
    3. 'line' → logprob: -4.282421112060547
    4. '(encoded' → logprob: -8.407421112060547
    5. '_encoded' → logprob: -10.407421112060547
    6. 'Line' → logprob: -10.782421112060547
    7. 'l' → logprob: -11.532421112060547
    8. ' encoded' → logprob: -11.657421112060547
    9. '   ' → logprob: -11.657421112060547
    10. '_l' → logprob: -11.782421112060547

Token 1015: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018235044553875923
    2. ',w' → logprob: -4.018235206604004
    3. ' ,' → logprob: -10.018235206604004
    4. '(w' → logprob: -10.268235206604004
    5. '           ' → logprob: -12.643235206604004
    6. 'w' → logprob: -13.643235206604004
    7. '               ' → logprob: -14.643235206604004
    8. ',W' → logprob: -14.768235206604004
    9. '=w' → logprob: -16.393234252929688
    10. ',n' → logprob: -16.393234252929688

Token 1016: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -9.627176768844947e-05
    2. ' w' → logprob: -9.250096321105957
    3. '           ' → logprob: -17.75009536743164
    4. '	w' → logprob: -18.25009536743164
    5. '       ' → logprob: -19.00009536743164
    6. '   ' → logprob: -19.25009536743164
    7. '    ' → logprob: -21.25009536743164
    8. '               ' → logprob: -21.25009536743164
    9. '        ' → logprob: -22.12509536743164
    10. '            ' → logprob: -22.25009536743164

Token 1017: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06593520194292068
    2. ')' → logprob: -2.8159351348876953
    3. '           ' → logprob: -5.565935134887695
    4. ')
' → logprob: -8.940935134887695
    5. '       ' → logprob: -13.440935134887695
    6. ' )
' → logprob: -14.940935134887695
    7. ')

' → logprob: -15.190935134887695
    8. ')`
' → logprob: -15.315935134887695
    9. '          ' → logprob: -16.440935134887695
    10. '   ' → logprob: -16.440935134887695

Token 1018: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018262678757309914
    2. '       ' → logprob: -4.01826286315918
    3. '   ' → logprob: -9.26826286315918
    4. '```' → logprob: -11.14326286315918
    5. '<|end|>' → logprob: -14.39326286315918
    6. '	   ' → logprob: -14.51826286315918
    7. '               ' → logprob: -14.89326286315918
    8. '
' → logprob: -15.14326286315918
    9. '	       ' → logprob: -15.51826286315918
    10. '#' → logprob: -15.51826286315918

Token 1019: ' image' (ID: 3621)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00016802136087790132
    2. 'image' (adapté à ' image') → logprob: -8.750167846679688
    3. '   ' → logprob: -11.875167846679688
    4. '       ' → logprob: -12.875167846679688
    5. ' image' → logprob: -16.250167846679688
    6. '               ' → logprob: -18.625167846679688
    7. '          ' → logprob: -19.000167846679688
    8. '	   ' → logprob: -19.750167846679688
    9. ' ' → logprob: -20.125167846679688
    10. '         ' → logprob: -20.375167846679688

Token 1020: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.1888679839321412e-05
    2. '.' → logprob: -10.750021934509277
    3. ' .' → logprob: -16.25002098083496
    4. 'append' → logprob: -16.37502098083496
    5. '   ' → logprob: -16.50002098083496
    6. '.extend' → logprob: -16.87502098083496
    7. '.app' → logprob: -16.87502098083496
    8. '       ' → logprob: -17.87502098083496
    9. '           ' → logprob: -18.50002098083496
    10. '.Append' → logprob: -18.75002098083496

Token 1021: '(bits' (ID: 170698)
  Prédit: '(bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bits' → logprob: -0.018150877207517624
    2. 'bits' → logprob: -4.018150806427002
    3. ' bits' → logprob: -13.89315128326416
    4. '(bit' → logprob: -17.393150329589844
    5. '.bits' → logprob: -17.768150329589844
    6. '_bits' → logprob: -17.893150329589844
    7. 'Bits' → logprob: -18.768150329589844
    8. '(' → logprob: -18.768150329589844
    9. 'bit' → logprob: -19.018150329589844
    10. '(b' → logprob: -19.643150329589844

Token 1022: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.006128814537078142
    2. ')' → logprob: -5.756128787994385
    3. '[line' → logprob: -6.381128787994385
    4. '[-' → logprob: -7.131128787994385
    5. '(line' → logprob: -9.006129264831543
    6. '   ' → logprob: -9.756129264831543
    7. '[' → logprob: -9.756129264831543
    8. ')_' → logprob: -9.881129264831543
    9. '))' → logprob: -10.131129264831543
    10. '       ' → logprob: -10.631129264831543

Token 1023: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022300712298601866
    2. ')
' → logprob: -6.252230167388916
    3. '       ' → logprob: -8.127229690551758
    4. '   ' → logprob: -12.377229690551758
    5. ')

' → logprob: -13.752229690551758
    6. ')
' → logprob: -15.127229690551758
    7. ' )' → logprob: -15.127229690551758
    8. '<|end|>' → logprob: -16.752229690551758
    9. '           ' → logprob: -16.877229690551758
    10. '),' → logprob: -17.377229690551758

Token 1024: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.582848072052002
    2. '        
' → logprob: -0.832848072052002
    3. '
' → logprob: -5.207848072052002
    4. '```' → logprob: -6.957848072052002
    5. '    
' → logprob: -8.957847595214844
    6. '            
' → logprob: -9.082847595214844
    7. '#' → logprob: -9.582847595214844
    8. '       
' → logprob: -10.082847595214844
    9. 'pattern' → logprob: -10.207847595214844
    10. '  
' → logprob: -11.207847595214844

Token 1025: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002037129830569029
    2. '#' → logprob: -6.252037048339844
    3. '        
' → logprob: -9.502037048339844
    4. 'pattern' → logprob: -11.002037048339844
    5. '```' → logprob: -11.502037048339844
    6. '   ' → logprob: -13.377037048339844
    7. ' #' → logprob: -13.627037048339844
    8. '           ' → logprob: -13.627037048339844
    9. 'p' → logprob: -14.127037048339844
    10. 'n' → logprob: -14.502037048339844

Token 1026: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.3875660300254822
    2. '       ' → logprob: -1.512566089630127
    3. 'pattern' → logprob: -2.762566089630127
    4. 'n' → logprob: -3.762566089630127
    5. 'patterns' → logprob: -4.512566089630127
    6. 'nb' → logprob: -6.637566089630127
    7. 'num' → logprob: -7.137566089630127
    8. 'np' → logprob: -8.262565612792969
    9. 'p' → logprob: -8.637565612792969
    10. 'k' → logprob: -8.887565612792969

Token 1027: ' Lire' (ID: 57624)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23648405075073242
    2. 'pattern' → logprob: -1.9864840507507324
    3. 'n' → logprob: -3.1114840507507324
    4. 'encoded' → logprob: -4.236484050750732
    5. 'patterns' → logprob: -4.611484050750732
    6. 'p' → logprob: -6.486484050750732
    7. 'pat' → logprob: -7.361484050750732
    8. 'np' → logprob: -7.861484050750732
    9. 'nb' → logprob: -7.861484050750732
    10. 'lines' → logprob: -8.61148452758789

Token 1028: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.22202657163143158
    2. 'patterns' → logprob: -1.7220265865325928
    3. 'p' → logprob: -4.597026348114014
    4. 'encoded' → logprob: -4.847026348114014
    5. '#' → logprob: -6.722026348114014
    6. 'pat' → logprob: -7.472026348114014
    7. 'n' → logprob: -8.847026824951172
    8. ' pattern' → logprob: -8.972026824951172
    9. '       ' → logprob: -9.347026824951172
    10. 'pieces' → logprob: -10.097026824951172

Token 1029: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0063399262726306915
    2. 'pattern' → logprob: -5.131340026855469
    3. 'n' → logprob: -8.631340026855469
    4. 'pat' → logprob: -9.756340026855469
    5. '        
' → logprob: -10.256340026855469
    6. 'patterns' → logprob: -10.381340026855469
    7. 'p' → logprob: -10.506340026855469
    8. ' pattern' → logprob: -10.631340026855469
    9. '
' → logprob: -11.131340026855469
    10. '   ' → logprob: -12.006340026855469

Token 1030: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20942874252796173
    2. 'pattern' → logprob: -1.7094287872314453
    3. 'patterns' → logprob: -6.209428787231445
    4. '=' → logprob: -6.584428787231445
    5. ' pattern' → logprob: -6.834428787231445
    6. ' =' → logprob: -6.959428787231445
    7. 'n' → logprob: -7.209428787231445
    8. 'pat' → logprob: -7.834428787231445
    9. '        
' → logprob: -8.084428787231445
    10. 'p' → logprob: -8.209428787231445

Token 1031: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' (adapté à ' pattern') → logprob: -0.007086403202265501
    2. 'n' → logprob: -5.757086277008057
    3. 'for' → logprob: -6.007086277008057
    4. 'p' → logprob: -7.382086277008057
    5. 'pat' → logprob: -8.132086753845215
    6. 'patterns' → logprob: -8.132086753845215
    7. 'np' → logprob: -9.632086753845215
    8. 'num' → logprob: -10.507086753845215
    9. 'pch' → logprob: -11.007086753845215
    10. 'encoded' → logprob: -11.132086753845215

Token 1032: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932421326637268
    2. ' =' → logprob: -0.6932421326637268
    3. '=[]' → logprob: -10.318242073059082
    4. '       ' → logprob: -10.568242073059082
    5. '   ' → logprob: -10.568242073059082
    6. '=[]
' → logprob: -11.693242073059082
    7. ' ' → logprob: -13.818242073059082
    8. '=
' → logprob: -14.818242073059082
    9. '     ' → logprob: -15.693242073059082
    10. '  ' → logprob: -16.0682430267334

Token 1033: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.0019299437990412116
    2. '[]' → logprob: -6.251929759979248
    3. ' []
' → logprob: -14.501930236816406
    4. '[]

' → logprob: -14.751930236816406
    5. '[
' → logprob: -15.126930236816406
    6. '[' → logprob: -15.501930236816406
    7. '=[]
' → logprob: -17.626930236816406
    8. '[])
' → logprob: -18.251930236816406
    9. '[],
' → logprob: -18.501930236816406
    10. '   ' → logprob: -19.376930236816406

Token 1034: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04073324054479599
    2. 'n' → logprob: -3.9157333374023438
    3. 'for' → logprob: -3.9157333374023438
    4. ' for' → logprob: -10.915733337402344
    5. 'num' → logprob: -11.290733337402344
    6. '```' → logprob: -11.290733337402344
    7. '        
' → logprob: -12.415733337402344
    8. '   ' → logprob: -12.790733337402344
    9. '
' → logprob: -13.040733337402344
    10. ' n' → logprob: -13.415733337402344

Token 1035: ' nch' (ID: 45428)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009826449677348137
    2. 'n' → logprob: -4.63482666015625
    3. '       ' → logprob: -9.75982666015625
    4. 'num' → logprob: -12.00982666015625
    5. ' for' → logprob: -13.25982666015625
    6. 'm' → logprob: -13.75982666015625
    7. 'pattern' → logprob: -14.00982666015625
    8. '```' → logprob: -14.25982666015625
    9. 'chars' → logprob: -14.25982666015625
    10. 'lines' → logprob: -14.50982666015625

Token 1036: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.036787521094083786
    2. 'chars' → logprob: -3.411787509918213
    3. 'ar' → logprob: -6.036787509918213
    4. '_chars' → logprob: -7.536787509918213
    5. '   ' → logprob: -9.036787986755371
    6. '=' → logprob: -9.911787986755371
    7. '       ' → logprob: -11.286787986755371
    8. ' =' → logprob: -12.161787986755371
    9. '(chars' → logprob: -12.161787986755371
    10. '#' → logprob: -12.286787986755371

Token 1037: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.00782924983650446
    2. 'pattern' → logprob: -5.507829189300537
    3. '_line' → logprob: -6.257829189300537
    4. '_p' → logprob: -6.507829189300537
    5. '=' → logprob: -9.007829666137695
    6. ' =' → logprob: -9.382829666137695
    7. '_pat' → logprob: -9.632829666137695
    8. 'for' → logprob: -11.132829666137695
    9. '_patterns' → logprob: -11.382829666137695
    10. 'p' → logprob: -12.132829666137695

Token 1038: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.7891351580619812
    2. ' =' → logprob: -1.039135217666626
    3. '=' → logprob: -1.664135217666626
    4. 'line' → logprob: -6.539134979248047
    5. '=line' → logprob: -7.664134979248047
    6. 'for' → logprob: -8.164134979248047
    7. ' line' → logprob: -8.289134979248047
    8. '_lines' → logprob: -10.664134979248047
    9. '_for' → logprob: -11.039134979248047
    10. '_l' → logprob: -11.414134979248047

Token 1039: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931476593017578
    2. ' =' → logprob: -0.6931476593017578
    3. 'for' → logprob: -15.943147659301758
    4. '=(' → logprob: -16.193147659301758
    5. '   ' → logprob: -16.818147659301758
    6. ' ' → logprob: -17.318147659301758
    7. 's' → logprob: -17.318147659301758
    8. 'n' → logprob: -17.443147659301758
    9. '＝' → logprob: -17.568147659301758
    10. ')' → logprob: -17.568147659301758

Token 1040: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.16510306298732758
    2. '(w' → logprob: -2.040102958679199
    3. '(p' → logprob: -4.415102958679199
    4. '(n' → logprob: -4.665102958679199
    5. '(math' → logprob: -7.540102958679199
    6. '(' → logprob: -10.5401029586792
    7. '(m' → logprob: -10.9151029586792
    8. '   ' → logprob: -11.4151029586792
    9. '(v' → logprob: -11.4151029586792
    10. '((' → logprob: -11.4151029586792

Token 1041: 'p' (ID: 79)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.05504273623228073
    2. 'p' → logprob: -2.9300427436828613
    3. ' (' → logprob: -8.930042266845703
    4. '(' → logprob: -11.555042266845703
    5. '   ' → logprob: -11.805042266845703
    6. ' p' → logprob: -12.555042266845703
    7. ' ' → logprob: -13.305042266845703
    8. '
' → logprob: -13.430042266845703
    9. '[p' → logprob: -14.305042266845703
    10. '((' → logprob: -14.305042266845703

Token 1042: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6326066851615906
    2. '+' → logprob: -0.7576066851615906
    3. 'import' → logprob: -14.257606506347656
    4. ')' → logprob: -14.257606506347656
    5. '+p' → logprob: -14.257606506347656
    6. '   ' → logprob: -14.382606506347656
    7. 'p' → logprob: -14.382606506347656
    8. ' ' → logprob: -14.382606506347656
    9. '[' → logprob: -14.507606506347656
    10. '+)' → logprob: -14.632606506347656

Token 1043: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00023369524569716305
    2. ' ' → logprob: -8.37523365020752
    3. '4' → logprob: -12.87523365020752
    4. '6' → logprob: -15.25023365020752
    5. '   ' → logprob: -16.250234603881836
    6. '...' → logprob: -16.375234603881836
    7. '```' → logprob: -17.250234603881836
    8. '  ' → logprob: -17.812734603881836
    9. '(' → logprob: -18.062734603881836
    10. '7' → logprob: -18.312734603881836

Token 1044: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.37501335144043
    3. '
' → logprob: -14.75001335144043
    4. '4' → logprob: -15.00001335144043
    5. '   ' → logprob: -15.37501335144043
    6. '6' → logprob: -15.50001335144043
    7. '(' → logprob: -15.87501335144043
    8. '2' → logprob: -16.81251335144043
    9. '```' → logprob: -16.87501335144043
    10. '=' → logprob: -17.18751335144043

Token 1045: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02370031736791134
    2. ')//' → logprob: -3.77370023727417
    3. '//' → logprob: -7.77370023727417
    4. ' //' → logprob: -11.898700714111328
    5. ' )' → logprob: -12.023700714111328
    6. ')>>' → logprob: -12.398700714111328
    7. ')#' → logprob: -12.648700714111328
    8. '   ' → logprob: -12.773700714111328
    9. '<|end|>' → logprob: -13.273700714111328
    10. '       ' → logprob: -13.398700714111328

Token 1046: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.013488071039319038
    2. ' //' → logprob: -4.388488292694092
    3. '#' → logprob: -7.013488292694092
    4. '       ' → logprob: -10.763487815856934
    5. ')' → logprob: -10.888487815856934
    6. '```' → logprob: -11.638487815856934
    7. ' #' → logprob: -12.013487815856934
    8. '   ' → logprob: -12.138487815856934
    9. ' ' → logprob: -12.138487815856934
    10. '        ' → logprob: -13.013487815856934

Token 1047: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0031941127963364124
    2. ' ' → logprob: -5.753194332122803
    3. '   ' → logprob: -11.878193855285645
    4. '     ' → logprob: -12.378193855285645
    5. '    ' → logprob: -13.253193855285645
    6. '  ' → logprob: -13.503193855285645
    7. '```' → logprob: -14.753193855285645
    8. ' ' → logprob: -15.253193855285645
    9. '           ' → logprob: -15.628193855285645
    10. '       ' → logprob: -15.628193855285645

Token 1048: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -14.625001907348633
    4. '   ' → logprob: -17.500001907348633
    5. '...' → logprob: -18.750001907348633
    6. '[' → logprob: -19.062501907348633
    7. 'six' → logprob: -19.062501907348633
    8. '٦' → logprob: -19.062501907348633
    9. 'def' → logprob: -19.687501907348633
    10. '۶' → logprob: -19.750001907348633

Token 1049: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6851596832275391
    2. 'for' → logprob: -1.060159683227539
    3. ' for' → logprob: -1.935159683227539
    4. '	' → logprob: -6.185159683227539
    5. '	for' → logprob: -6.810159683227539
    6. '   ' → logprob: -7.685159683227539
    7. ')' → logprob: -7.935159683227539
    8. ' ' → logprob: -8.310159683227539
    9. '#' → logprob: -8.560159683227539
    10. '<|end|>' → logprob: -8.685159683227539

Token 1050: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011965400772169232
    2. 'for' → logprob: -6.751196384429932
    3. ' for' → logprob: -10.75119686126709
    4. '   ' → logprob: -12.37619686126709
    5. '	for' → logprob: -15.25119686126709
    6. '	' → logprob: -15.37619686126709
    7. '<|end|>' → logprob: -16.251195907592773
    8. '           ' → logprob: -16.376195907592773
    9. '	   ' → logprob: -16.501195907592773
    10. ' ' → logprob: -17.126195907592773

Token 1051: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0003416607796680182
    2. '       ' → logprob: -8.000341415405273
    3. ' for' → logprob: -12.000341415405273
    4. '	for' → logprob: -17.750341415405273
    5. '   ' → logprob: -18.750341415405273
    6. '
' → logprob: -19.750341415405273
    7. '        
' → logprob: -21.125341415405273
    8. ' ' → logprob: -22.375341415405273
    9. '﻿' → logprob: -23.125341415405273
    10. '```' → logprob: -23.375341415405273

Token 1052: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.7053759519476444e-05
    2. '_i' → logprob: -10.500057220458984
    3. ' _' → logprob: -11.000057220458984
    4. '_range' → logprob: -11.875057220458984
    5. '_p' → logprob: -13.250057220458984
    6. '_line' → logprob: -13.625057220458984
    7. 'i' → logprob: -13.625057220458984
    8. '_in' → logprob: -14.000057220458984
    9. '_=' → logprob: -15.250057220458984
    10. '_j' → logprob: -16.500057220458984

Token 1053: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004941989202052355
    2. ' in' → logprob: -6.379941940307617
    3. 'range' → logprob: -6.629941940307617
    4. '_range' → logprob: -7.004941940307617
    5. 'in' → logprob: -7.379941940307617
    6. ' range' → logprob: -8.004941940307617
    7. ' _' → logprob: -10.004941940307617
    8. '_in' → logprob: -13.629941940307617
    9. 'i' → logprob: -14.879941940307617
    10. '_=' → logprob: -15.129941940307617

Token 1054: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0029491744935512543
    2. ' range' → logprob: -6.002949237823486
    3. '_' → logprob: -7.752949237823486
    4. '_range' → logprob: -10.127948760986328
    5. 'in' → logprob: -13.252948760986328
    6. ' in' → logprob: -13.627948760986328
    7. '(range' → logprob: -14.127948760986328
    8. '	range' → logprob: -15.377948760986328
    9. ' ' → logprob: -17.127948760986328
    10. '
' → logprob: -17.127948760986328

Token 1055: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004779230337589979
    2. 'range' → logprob: -6.25477933883667
    3. ' p' → logprob: -6.50477933883667
    4. '(p' → logprob: -7.37977933883667
    5. '_' → logprob: -8.129778861999512
    6. '   ' → logprob: -8.879778861999512
    7. ' range' → logprob: -9.129778861999512
    8. '_p' → logprob: -9.254778861999512
    9. '       ' → logprob: -10.754778861999512
    10. '_range' → logprob: -11.129778861999512

Token 1056: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.045426853001117706
    2. '       ' → logprob: -3.670426845550537
    3. '           ' → logprob: -4.420426845550537
    4. ':
' → logprob: -6.045426845550537
    5. '):' → logprob: -6.795426845550537
    6. '   ' → logprob: -6.920426845550537
    7. ':' → logprob: -7.045426845550537
    8. ''):
' → logprob: -7.920426845550537
    9. '():
' → logprob: -7.920426845550537
    10. '):
' → logprob: -8.545427322387695

Token 1057: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0077928174287080765
    2. 'encoded' → logprob: -5.007792949676514
    3. ' encoded' → logprob: -7.257792949676514
    4. '   ' → logprob: -8.382792472839355
    5. '(encoded' → logprob: -9.007792472839355
    6. '```' → logprob: -11.757792472839355
    7. '       ' → logprob: -12.507792472839355
    8. '_encoded' → logprob: -13.007792472839355
    9. ' ' → logprob: -13.757792472839355
    10. '          ' → logprob: -14.257792472839355

Token 1058: ' encoded' (ID: 41096)
  Prédit: 'encoded'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'encoded' (adapté à ' encoded') → logprob: -0.006960689090192318
    2. '           ' → logprob: -5.506960868835449
    3. ' encoded' → logprob: -5.881960868835449
    4. '   ' → logprob: -9.50696086883545
    5. '(encoded' → logprob: -11.38196086883545
    6. '_encoded' → logprob: -13.88196086883545
    7. 'coded' → logprob: -14.50696086883545
    8. ' ' → logprob: -14.63196086883545
    9. 'decoded' → logprob: -14.63196086883545
    10. '       ' → logprob: -15.38196086883545

Token 1059: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.771655115589965e-05
    2. 'line' → logprob: -11.500018119812012
    3. '_' → logprob: -12.000018119812012
    4. '_encoded' → logprob: -15.000018119812012
    5. '_pattern' → logprob: -15.500018119812012
    6. '_lines' → logprob: -15.500018119812012
    7. '_l' → logprob: -15.500018119812012
    8. '_lin' → logprob: -16.250017166137695
    9. '_LINE' → logprob: -16.375017166137695
    10. '           ' → logprob: -16.375017166137695

Token 1060: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08896477520465851
    2. '=' → logprob: -2.4639647006988525
    3. '           ' → logprob: -11.088964462280273
    4. '=line' → logprob: -12.588964462280273
    5. '   ' → logprob: -12.838964462280273
    6. '       ' → logprob: -13.713964462280273
    7. '=input' → logprob: -14.213964462280273
    8. ' ' → logprob: -14.213964462280273
    9. 'encoded' → logprob: -15.963964462280273
    10. '		' → logprob: -16.088964462280273

Token 1061: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20141470432281494
    2. ' input' → logprob: -1.701414704322815
    3. '=input' → logprob: -14.576415061950684
    4. '(input' → logprob: -14.701415061950684
    5. '[input' → logprob: -15.576415061950684
    6. '	input' → logprob: -16.076414108276367
    7. ',input' → logprob: -16.576414108276367
    8. '           ' → logprob: -16.576414108276367
    9. '_input' → logprob: -16.951414108276367
    10. 'user' → logprob: -17.326414108276367

Token 1062: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.019027546048164368
    2. 'lines' → logprob: -4.0190277099609375
    3. '[input' → logprob: -7.8940277099609375
    4. 'Lines' → logprob: -8.269027709960938
    5. 'input' → logprob: -8.519027709960938
    6. '[idx' → logprob: -11.519027709960938
    7. ' lines' → logprob: -11.644027709960938
    8. '           ' → logprob: -12.019027709960938
    9. '       ' → logprob: -12.019027709960938
    10. '[' → logprob: -12.769027709960938

Token 1063: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0001295222609769553
    2. 'idx' → logprob: -9.125129699707031
    3. '       ' → logprob: -11.250129699707031
    4. '           ' → logprob: -12.125129699707031
    5. '[' → logprob: -14.625129699707031
    6. ' idx' → logprob: -14.625129699707031
    7. '   ' → logprob: -15.250129699707031
    8. '(idx' → logprob: -15.375129699707031
    9. '	idx' → logprob: -15.375129699707031
    10. '[index' → logprob: -15.750129699707031

Token 1064: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.34932276606559753
    2. '.rstrip' → logprob: -1.22432279586792
    3. 'rstrip' → logprob: -7.59932279586792
    4. '           ' → logprob: -8.349322319030762
    5. '.strip' → logprob: -9.474322319030762
    6. ']' → logprob: -10.849322319030762
    7. ''].' → logprob: -11.599322319030762
    8. '"].' → logprob: -11.724322319030762
    9. ').' → logprob: -11.974322319030762
    10. '.' → logprob: -12.099322319030762

Token 1065: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -4.320199877838604e-07
    2. 'strip' → logprob: -15.125
    3. '.rstrip' → logprob: -16.25
    4. 'r' → logprob: -17.5
    5. 'idx' → logprob: -19.375
    6. 'rcode' → logprob: -20.375
    7. 'rst' → logprob: -20.375
    8. 'rsp' → logprob: -21.375
    9. 'rd' → logprob: -22.125
    10. 'rs' → logprob: -22.125

Token 1066: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011683919467031956
    2. '<|end|>' → logprob: -5.511683940887451
    3. 'idx' → logprob: -6.386683940887451
    4. '       ' → logprob: -6.511683940887451
    5. '<|end|>' → logprob: -6.761683940887451
    6. '   ' → logprob: -7.011683940887451
    7. '
' → logprob: -7.386683940887451
    8. ',' → logprob: -7.886683940887451
    9. '[idx' → logprob: -8.136683464050293
    10. '		' → logprob: -8.261683464050293

Token 1067: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0077307261526584625
    2. '       ' → logprob: -5.632730960845947
    3. '   ' → logprob: -5.757730960845947
    4. 'idx' → logprob: -7.007730960845947
    5. '	       ' → logprob: -11.007730484008789
    6. '               ' → logprob: -11.632730484008789
    7. ' ' → logprob: -11.882730484008789
    8. '	   ' → logprob: -11.882730484008789
    9. '	idx' → logprob: -12.382730484008789
    10. '<|end|>' → logprob: -12.882730484008789

Token 1068: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.00021390743495430797
    2. '       ' → logprob: -9.125213623046875
    3. ' idx' → logprob: -10.250213623046875
    4. '   ' → logprob: -10.250213623046875
    5. '	idx' → logprob: -10.375213623046875
    6. '           ' → logprob: -13.000213623046875
    7. '_idx' → logprob: -14.500213623046875
    8. 'index' → logprob: -16.250213623046875
    9. '[idx' → logprob: -16.875213623046875
    10. ' ' → logprob: -17.375213623046875

Token 1069: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2533632814884186
    2. ' +=' → logprob: -1.5033632516860962
    3. '           ' → logprob: -6.628363132476807
    4. '   ' → logprob: -10.003363609313965
    5. '       ' → logprob: -10.753363609313965
    6. '            ' → logprob: -11.253363609313965
    7. '=' → logprob: -11.878363609313965
    8. '          ' → logprob: -12.003363609313965
    9. ']+=' → logprob: -12.753363609313965
    10. 'idx' → logprob: -12.753363609313965

Token 1070: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014013137842994183
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -15.750140190124512
    4. '           ' → logprob: -16.875139236450195
    5. '```' → logprob: -17.375139236450195
    6. ' ' → logprob: -18.875139236450195
    7. '       ' → logprob: -19.000139236450195
    8. '１' → logprob: -19.000139236450195
    9. '=' → logprob: -19.500139236450195
    10. ')' → logprob: -19.625139236450195

Token 1071: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -16.500003814697266
    4. '   ' → logprob: -17.125003814697266
    5. '１' → logprob: -19.187503814697266
    6. '۱' → logprob: -19.687503814697266
    7. '           ' → logprob: -19.687503814697266
    8. '
' → logprob: -19.812503814697266
    9. 'encoded' → logprob: -19.875003814697266
    10. '       ' → logprob: -20.312503814697266

Token 1072: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004754751571454108
    2. '   ' → logprob: -8.125475883483887
    3. 'bits' → logprob: -9.375475883483887
    4. '       ' → logprob: -9.500475883483887
    5. ' bits' → logprob: -11.375475883483887
    6. 'pattern' → logprob: -12.875475883483887
    7. 'decoded' → logprob: -13.250475883483887
    8. '```' → logprob: -13.375475883483887
    9. '               ' → logprob: -14.250475883483887
    10. 'bit' → logprob: -14.750475883483887

Token 1073: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026715215295553207
    2. '   ' → logprob: -3.7767152786254883
    3. '       ' → logprob: -5.901715278625488
    4. 'bits' → logprob: -7.276715278625488
    5. ' bits' → logprob: -11.276715278625488
    6. '```' → logprob: -11.276715278625488
    7. 'pattern' → logprob: -11.651715278625488
    8. 'decoded' → logprob: -13.901715278625488
    9. '               ' → logprob: -14.276715278625488
    10. 'bit' → logprob: -15.026715278625488

Token 1074: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' (adapté à ' bits') → logprob: -0.04512404650449753
    2. ' bits' → logprob: -3.670124053955078
    3. '           ' → logprob: -4.295124053955078
    4. '       ' → logprob: -5.670124053955078
    5. '   ' → logprob: -6.670124053955078
    6. 'pattern' → logprob: -8.920124053955078
    7. 'bit' → logprob: -9.670124053955078
    8. '```' → logprob: -10.795124053955078
    9. 'decoded' → logprob: -10.920124053955078
    10. '(bits' → logprob: -11.295124053955078

Token 1075: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -4.990154047845863e-05
    2. ' =' → logprob: -10.750049591064453
    3. '_pattern' → logprob: -11.250049591064453
    4. '=' → logprob: -12.250049591064453
    5. '   ' → logprob: -12.375049591064453
    6. '.append' → logprob: -13.125049591064453
    7. '       ' → logprob: -13.500049591064453
    8. 'line' → logprob: -13.625049591064453
    9. '           ' → logprob: -14.500049591064453
    10. 'Line' → logprob: -14.750049591064453

Token 1076: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408327460289
    2. '=' → logprob: -0.9740833044052124
    3. '.append' → logprob: -12.224082946777344
    4. '=line' → logprob: -15.224082946777344
    5. '           ' → logprob: -15.474082946777344
    6. '   ' → logprob: -15.474082946777344
    7. '+=' → logprob: -15.724082946777344
    8. '.extend' → logprob: -15.974082946777344
    9. '＝' → logprob: -16.224082946777344
    10. ' ' → logprob: -16.974082946777344

Token 1077: ' decode' (ID: 32043)
  Prédit: 'decode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -0.029750604182481766
    2. ' decode' → logprob: -3.5297505855560303
    3. '.decode' → logprob: -16.27975082397461
    4. '   ' → logprob: -17.15475082397461
    5. '_decode' → logprob: -17.27975082397461
    6. 'decoded' → logprob: -19.15475082397461
    7. ' ' → logprob: -19.27975082397461
    8. 'encode' → logprob: -19.90475082397461
    9. 'dec' → logprob: -20.40475082397461
    10. '       ' → logprob: -20.52975082397461

Token 1078: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -7.660315895918757e-05
    2. '_' → logprob: -10.500076293945312
    3. 'line' → logprob: -10.750076293945312
    4. 'decode' → logprob: -11.250076293945312
    5. 'decoded' → logprob: -12.375076293945312
    6. 'Line' → logprob: -12.500076293945312
    7. '_LINE' → logprob: -13.750076293945312
    8. 'bits' → logprob: -13.875076293945312
    9. 'encoded' → logprob: -14.125076293945312
    10. '   ' → logprob: -14.125076293945312

Token 1079: '(encoded' (ID: 157395)
  Prédit: '(encoded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(encoded' → logprob: -3.128163257315464e-07
    2. 'encoded' → logprob: -15.25
    3. '(enc' → logprob: -17.5
    4. '           ' → logprob: -18.5
    5. '(decoded' → logprob: -20.125
    6. '(en' → logprob: -20.125
    7. ' encoded' → logprob: -20.375
    8. '```' → logprob: -21.0
    9. ' (' → logprob: -21.125
    10. '(' → logprob: -21.25

Token 1080: '_line' (ID: 14418)
  Prédit: 'encoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'encoded' → logprob: -0.029992416501045227
    2. '(encoded' → logprob: -3.7799923419952393
    3. '_line' → logprob: -5.029992580413818
    4. ' encoded' → logprob: -8.90499210357666
    5. '_encoded' → logprob: -10.40499210357666
    6. 'coded' → logprob: -11.90499210357666
    7. '```' → logprob: -12.77999210357666
    8. 'line' → logprob: -12.90499210357666
    9. 'Line' → logprob: -12.90499210357666
    10. '   ' → logprob: -14.65499210357666

Token 1081: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6952235102653503
    2. '(encoded' → logprob: -0.6952235102653503
    3. 'encoded' → logprob: -6.820223331451416
    4. '           ' → logprob: -7.195223331451416
    5. ' encoded' → logprob: -8.820223808288574
    6. ')' → logprob: -9.695223808288574
    7. ' ,' → logprob: -11.570223808288574
    8. '               ' → logprob: -12.695223808288574
    9. '(enc' → logprob: -12.945223808288574
    10. '),' → logprob: -13.320223808288574

Token 1082: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00025204161647707224
    2. ' p' → logprob: -9.000251770019531
    3. 'encoded' → logprob: -9.125251770019531
    4. '           ' → logprob: -11.250251770019531
    5. ' encoded' → logprob: -12.875251770019531
    6. 'pattern' → logprob: -13.500251770019531
    7. '(p' → logprob: -14.125251770019531
    8. '       ' → logprob: -14.375251770019531
    9. 'pat' → logprob: -15.250251770019531
    10. '(encoded' → logprob: -15.625251770019531

Token 1083: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18700021505355835
    2. ')
' → logprob: -1.8120002746582031
    3. ')' → logprob: -4.937000274658203
    4. '       ' → logprob: -10.812000274658203
    5. ')
' → logprob: -11.437000274658203
    6. '          ' → logprob: -12.437000274658203
    7. '<|end|>' → logprob: -12.437000274658203
    8. '		' → logprob: -12.937000274658203
    9. '   ' → logprob: -12.937000274658203
    10. '	       ' → logprob: -13.687000274658203

Token 1084: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.13388703338569e-06
    2. 'pattern' → logprob: -12.000009536743164
    3. '   ' → logprob: -13.375009536743164
    4. '       ' → logprob: -14.125009536743164
    5. ' pattern' → logprob: -15.625009536743164
    6. '		' → logprob: -15.750009536743164
    7. '          ' → logprob: -16.125009536743164
    8. '	       ' → logprob: -16.250009536743164
    9. '```' → logprob: -16.250009536743164
    10. '         ' → logprob: -17.125009536743164

Token 1085: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' (adapté à ' pattern') → logprob: -0.00010318557906430215
    2. '           ' → logprob: -9.500102996826172
    3. ' pattern' → logprob: -10.500102996826172
    4. '       ' → logprob: -14.250102996826172
    5. '   ' → logprob: -16.125102996826172
    6. 'pat' → logprob: -17.250102996826172
    7. '(pattern' → logprob: -20.375102996826172
    8. ' ' → logprob: -20.750102996826172
    9. 'patterns' → logprob: -20.875102996826172
    10. '.pattern' → logprob: -20.875102996826172

Token 1086: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.2576454335358e-05
    2. '           ' → logprob: -9.500092506408691
    3. '.' → logprob: -11.250092506408691
    4. '       ' → logprob: -12.625092506408691
    5. 'append' → logprob: -14.375092506408691
    6. ' .' → logprob: -14.500092506408691
    7. '.extend' → logprob: -15.375092506408691
    8. '   ' → logprob: -16.875093460083008
    9. '.Append' → logprob: -18.000093460083008
    10. '.app' → logprob: -18.250093460083008

Token 1087: '(bits' (ID: 170698)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.31328243017196655
    2. '(bits' → logprob: -1.3132824897766113
    3. ' bits' → logprob: -10.813282012939453
    4. 'bit' → logprob: -15.313282012939453
    5. '_bits' → logprob: -16.563282012939453
    6. '.bits' → logprob: -16.563282012939453
    7. '(bit' → logprob: -16.563282012939453
    8. '   ' → logprob: -17.313282012939453
    9. '(b' → logprob: -17.938282012939453
    10. '       ' → logprob: -17.938282012939453

Token 1088: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -3.392824874026701e-05
    2. ')' → logprob: -10.87503433227539
    3. 'line' → logprob: -11.87503433227539
    4. '   ' → logprob: -12.50003433227539
    5. '[line' → logprob: -13.87503433227539
    6. '[' → logprob: -14.50003433227539
    7. '       ' → logprob: -14.75003433227539
    8. '_LINE' → logprob: -14.75003433227539
    9. 'Line' → logprob: -15.37503433227539
    10. '           ' → logprob: -15.50003433227539

Token 1089: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003995053935796022
    2. '       ' → logprob: -6.003994941711426
    3. ')
' → logprob: -6.503994941711426
    4. '<|end|>' → logprob: -11.628994941711426
    5. '   ' → logprob: -11.753994941711426
    6. '<|end|>' → logprob: -13.503994941711426
    7. ' )' → logprob: -14.128994941711426
    8. ')

' → logprob: -14.753994941711426
    9. ')return' → logprob: -15.003994941711426
    10. '),' → logprob: -16.253995895385742

Token 1090: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6534937620162964
    2. '        
' → logprob: -0.7784937620162964
    3. '
' → logprob: -4.528493881225586
    4. '    
' → logprob: -5.153493881225586
    5. 'variants' → logprob: -6.278493881225586
    6. 'transform' → logprob: -7.153493881225586
    7. '   ' → logprob: -7.528493881225586
    8. 'trans' → logprob: -7.778493881225586
    9. '#' → logprob: -9.028493881225586
    10. '```' → logprob: -9.528493881225586

Token 1091: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07071789354085922
    2. '        
' → logprob: -3.3207178115844727
    3. '#' (adapté à ' #') → logprob: -4.445717811584473
    4. 'variants' → logprob: -4.445717811584473
    5. 'transform' → logprob: -5.195717811584473
    6. 'trans' → logprob: -6.195717811584473
    7. '
' → logprob: -7.070717811584473
    8. 'vari' → logprob: -9.070717811584473
    9. 'variant' → logprob: -10.320717811584473
    10. '   ' → logprob: -10.695717811584473

Token 1092: ' Gén' (ID: 71828)
  Prédit: 'variants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'variants' → logprob: -0.9445026516914368
    2. 'transform' → logprob: -1.569502592086792
    3. '#' → logprob: -1.694502592086792
    4. 'trans' → logprob: -2.069502592086792
    5. 'pattern' → logprob: -3.319502592086792
    6. 'patterns' → logprob: -3.444502592086792
    7. '       ' → logprob: -4.819502830505371
    8. 'all' → logprob: -4.944502830505371
    9. 'vari' → logprob: -5.444502830505371
    10. 'variant' → logprob: -5.569502830505371

Token 1093: 'érer' (ID: 29097)
  Prédit: 'érer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.011490088887512684
    2. 'er' → logprob: -4.7614898681640625
    3. '       ' → logprob: -6.2614898681640625
    4. '   ' → logprob: -7.3864898681640625
    5. 'ér' → logprob: -9.636489868164062
    6. '           ' → logprob: -9.761489868164062
    7. 'ère' → logprob: -9.886489868164062
    8. 'éré' → logprob: -10.511489868164062
    9. '#' → logprob: -10.761489868164062
    10. 'ération' → logprob: -10.761489868164062

Token 1094: ' toutes' (ID: 17502)
  Prédit: 'transform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'transform' → logprob: -0.5498203635215759
    2. 'all' → logprob: -1.2998204231262207
    3. 'pattern' → logprob: -2.5498204231262207
    4. 'variants' → logprob: -3.1748204231262207
    5. 'trans' → logprob: -4.549820423126221
    6. 'vari' → logprob: -4.924820423126221
    7. 'patterns' → logprob: -5.299820423126221
    8. '       ' → logprob: -5.674820423126221
    9. 'les' → logprob: -6.924820423126221
    10. ' variants' → logprob: -7.174820423126221

Token 1095: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6718707084655762
    2. 'les' → logprob: -1.1718707084655762
    3. ' transformations' → logprob: -2.296870708465576
    4. 'transform' → logprob: -3.171870708465576
    5. ' variants' → logprob: -3.921870708465576
    6. 'variants' → logprob: -5.796870708465576
    7. '_transform' → logprob: -5.921870708465576
    8. '_vari' → logprob: -6.171870708465576
    9. '#' → logprob: -6.296870708465576
    10. '   ' → logprob: -6.546870708465576

Token 1096: ' transformations' (ID: 94732)
  Prédit: 'transform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'transform' → logprob: -0.010735217481851578
    2. 'vari' → logprob: -5.135735034942627
    3. ' transformations' → logprob: -6.260735034942627
    4. 'variants' → logprob: -6.260735034942627
    5. 'trans' → logprob: -7.385735034942627
    6. ' variants' → logprob: -8.885735511779785
    7. ' transform' → logprob: -8.885735511779785
    8. 'variant' → logprob: -10.760735511779785
    9. ' variantes' → logprob: -11.635735511779785
    10. ' transforms' → logprob: -12.135735511779785

Token 1097: ' distinct' (ID: 16913)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6228933334350586
    2. 'transform' → logprob: -1.7478933334350586
    3. 'trans' → logprob: -2.1228933334350586
    4. ' transforms' → logprob: -3.3728933334350586
    5. ' variants' → logprob: -3.3728933334350586
    6. 'variants' → logprob: -3.3728933334350586
    7. ' transformations' → logprob: -3.6228933334350586
    8. '   ' → logprob: -4.122893333435059
    9. 'patterns' → logprob: -5.247893333435059
    10. ' transform' → logprob: -5.622893333435059

Token 1098: 'es' (ID: 268)
  Prédit: 'du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'du' → logprob: -0.7369008660316467
    2. '       ' → logprob: -0.8619008660316467
    3. '   ' → logprob: -2.736900806427002
    4. ' du' → logprob: -3.736900806427002
    5. 'de' → logprob: -6.111900806427002
    6. 'ations' → logprob: -6.736900806427002
    7. '=' → logprob: -6.736900806427002
    8. ' =' → logprob: -7.236900806427002
    9. 'ues' → logprob: -7.486900806427002
    10. '(pattern' → logprob: -7.736900806427002

Token 1099: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6812501549720764
    2. 'transform' → logprob: -1.9312500953674316
    3. 'patterns' → logprob: -2.3062500953674316
    4. 'trans' → logprob: -2.4312500953674316
    5. 'variants' → logprob: -2.4312500953674316
    6. 'all' → logprob: -3.6812500953674316
    7. 'pattern' → logprob: -3.8062500953674316
    8. '   ' → logprob: -4.181250095367432
    9. 'vari' → logprob: -5.681250095367432
    10. ' variants' → logprob: -6.181250095367432

Token 1100: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -5.943783253314905e-05
    2. ' pattern' → logprob: -9.750059127807617
    3. 'pat' → logprob: -14.125059127807617
    4. 'patterns' → logprob: -16.250059127807617
    5. '```' → logprob: -16.750059127807617
    6. '
' → logprob: -16.875059127807617
    7. '#' → logprob: -17.000059127807617
    8. '(pattern' → logprob: -17.375059127807617
    9. '   ' → logprob: -17.750059127807617
    10. ' ' → logprob: -18.250059127807617

Token 1101: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11500256508588791
    2. 'variants' → logprob: -3.1150026321411133
    3. 'trans' → logprob: -3.3650026321411133
    4. 'transform' → logprob: -4.490002632141113
    5. 'patterns' → logprob: -5.490002632141113
    6. ' variants' → logprob: -5.615002632141113
    7. '
' → logprob: -6.115002632141113
    8. '   ' → logprob: -6.240002632141113
    9. 'pattern' → logprob: -6.740002632141113
    10. '        
' → logprob: -6.740002632141113

Token 1102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001938631059601903
    2. 'variants' → logprob: -6.876938819885254
    3. '   ' → logprob: -8.251938819885254
    4. 'transform' → logprob: -8.501938819885254
    5. 'trans' → logprob: -8.876938819885254
    6. 'all' → logprob: -9.001938819885254
    7. ' variants' → logprob: -9.626938819885254
    8. 'patterns' → logprob: -10.251938819885254
    9. 'vari' → logprob: -11.001938819885254
    10. '        
' → logprob: -11.251938819885254

Token 1103: ' pattern' (ID: 8302)
  Prédit: 'variants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variants' → logprob: -0.6810930967330933
    2. 'transform' → logprob: -1.1810930967330933
    3. 'pattern' (adapté à ' pattern') → logprob: -2.431093215942383
    4. 'trans' → logprob: -3.056093215942383
    5. 'patterns' → logprob: -3.431093215942383
    6. 'all' → logprob: -4.806093215942383
    7. 'vari' → logprob: -5.056093215942383
    8. '       ' → logprob: -5.431093215942383
    9. 'variant' → logprob: -8.181093215942383
    10. '   ' → logprob: -8.556093215942383

Token 1104: '_vari' (ID: 94080)
  Prédit: '_vari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vari' → logprob: -0.07899807393550873
    2. 's' → logprob: -3.32899808883667
    3. '_trans' → logprob: -3.57899808883667
    4. '_transform' → logprob: -5.32899808883667
    5. 'variants' → logprob: -5.45399808883667
    6. ' =' → logprob: -6.07899808883667
    7. '=' → logprob: -8.078997611999512
    8. '_versions' → logprob: -8.703997611999512
    9. '_var' → logprob: -9.328997611999512
    10. 'trans' → logprob: -9.703997611999512

Token 1105: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.00034809779026545584
    2. 'antes' → logprob: -8.125348091125488
    3. 'ations' → logprob: -10.250348091125488
    4. 'ents' → logprob: -12.000348091125488
    5. ' ants' → logprob: -13.125348091125488
    6. '
' → logprob: -13.375348091125488
    7. 'ANTS' → logprob: -13.500348091125488
    8. 'ans' → logprob: -13.500348091125488
    9. '   ' → logprob: -14.375348091125488
    10. '```' → logprob: -14.375348091125488

Token 1106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804149478673935
    2. '=' → logprob: -3.288041591644287
    3. 's' → logprob: -17.413042068481445
    4. ' =
' → logprob: -18.663042068481445
    5. ' ' → logprob: -18.913042068481445
    6. ' ' → logprob: -19.038042068481445
    7. '＝' → logprob: -19.288042068481445
    8. '   ' → logprob: -19.538042068481445
    9. ',' → logprob: -19.913042068481445
    10. ')' → logprob: -19.913042068481445

Token 1107: ' generate' (ID: 10419)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.02975141443312168
    2. ' generate' → logprob: -3.5297513008117676
    3. '   ' → logprob: -14.279751777648926
    4. '(generate' → logprob: -15.154751777648926
    5. '.generate' → logprob: -18.27975082397461
    6. '_generate' → logprob: -19.15475082397461
    7. ' ' → logprob: -20.40475082397461
    8. 'Generate' → logprob: -21.02975082397461
    9. '       ' → logprob: -21.77975082397461
    10. 'gener' → logprob: -21.90475082397461

Token 1108: '_transform' (ID: 46795)
  Prédit: '_transform'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_transform' → logprob: -0.0019028165843337774
    2. 'transform' → logprob: -6.5019025802612305
    3. '_' → logprob: -7.8769025802612305
    4. 'pattern' → logprob: -11.75190258026123
    5. '_trans' → logprob: -12.00190258026123
    6. 'Transform' → logprob: -13.50190258026123
    7. '_patterns' → logprob: -13.50190258026123
    8. '(pattern' → logprob: -13.75190258026123
    9. '_pattern' → logprob: -13.87690258026123
    10. '_vari' → logprob: -14.25190258026123

Token 1109: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -8.327856630785391e-05
    2. '_transform' → logprob: -9.750082969665527
    3. 'transform' → logprob: -11.000082969665527
    4. '_' → logprob: -11.875082969665527
    5. 's' → logprob: -14.250082969665527
    6. 't' → logprob: -15.500082969665527
    7. '_trans' → logprob: -16.000083923339844
    8. 'e' → logprob: -16.625083923339844
    9. ' transformations' → logprob: -16.875083923339844
    10. '_patterns' → logprob: -16.875083923339844

Token 1110: '(pattern' (ID: 62660)
  Prédit: '(pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -1.0206720617134124e-05
    2. 'pattern' → logprob: -11.50001049041748
    3. ' (' → logprob: -18.625009536743164
    4. ' pattern' → logprob: -20.125009536743164
    5. '   ' → logprob: -20.500009536743164
    6. '(p' → logprob: -20.500009536743164
    7. '```' → logprob: -20.875009536743164
    8. '(' → logprob: -21.125009536743164
    9. '(problem' → logprob: -21.125009536743164
    10. '.pattern' → logprob: -21.500009536743164

Token 1111: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5580301880836487
    2. '       ' → logprob: -1.183030128479004
    3. ')
' → logprob: -2.683030128479004
    4. '<|end|>' → logprob: -3.683030128479004
    5. '
' → logprob: -4.183030128479004
    6. '        
' → logprob: -4.558030128479004
    7. '<|end|>' → logprob: -6.558030128479004
    8. ')

' → logprob: -9.183030128479004
    9. '    
' → logprob: -9.433030128479004
    10. ').' → logprob: -9.683030128479004

Token 1112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1134202852845192
    2. 'count' → logprob: -3.113420248031616
    3. 'matches' → logprob: -4.113420486450195
    4. 'result' → logprob: -4.238420486450195
    5. '        
' → logprob: -4.613420486450195
    6. 'results' → logprob: -4.863420486450195
    7. 'counts' → logprob: -5.238420486450195
    8. 'found' → logprob: -5.238420486450195
    9. 'positions' → logprob: -6.613420486450195
    10. '```' → logprob: -7.863420486450195

Token 1113: ' #' (ID: 1069)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.999630868434906
    2. 'positions' → logprob: -0.999630868434906
    3. 'matches' → logprob: -1.8746309280395508
    4. 'results' → logprob: -2.749630928039551
    5. 'count' → logprob: -3.999630928039551
    6. 'result' → logprob: -4.124630928039551
    7. '       ' → logprob: -5.499630928039551
    8. '   ' → logprob: -5.874630928039551
    9. 'occ' → logprob: -6.374630928039551
    10. '#' (adapté à ' #') → logprob: -6.749630928039551

Token 1114: ' On' (ID: 2160)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.8923112750053406
    2. 'results' → logprob: -1.3923113346099854
    3. 'found' → logprob: -1.7673113346099854
    4. 'matches' → logprob: -2.1423113346099854
    5. 'result' → logprob: -3.3923113346099854
    6. 'count' → logprob: -4.767311096191406
    7. 'occ' → logprob: -5.392311096191406
    8. 'for' → logprob: -5.892311096191406
    9. 'res' → logprob: -6.392311096191406
    10. 'counts' → logprob: -6.642311096191406

Token 1115: ' va' (ID: 3423)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4297263026237488
    2. 'found' → logprob: -2.0547263622283936
    3. '       ' → logprob: -2.9297263622283936
    4. 'matches' → logprob: -3.5547263622283936
    5. 'positions' → logprob: -3.6797263622283936
    6. 'result' → logprob: -3.6797263622283936
    7. '=' → logprob: -3.9297263622283936
    8. 'results' → logprob: -3.9297263622283936
    9. '#' → logprob: -4.9297261238098145
    10. 'for' → logprob: -5.0547261238098145

Token 1116: ' scanner' (ID: 30686)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.9945878982543945
    2. 'chercher' → logprob: -1.3695878982543945
    3. '       ' → logprob: -1.7445878982543945
    4. 'comp' → logprob: -2.1195878982543945
    5. '#' → logprob: -3.3695878982543945
    6. 'search' → logprob: -4.3695878982543945
    7. 'counts' → logprob: -4.7445878982543945
    8. 're' → logprob: -5.3695878982543945
    9. ' compter' → logprob: -5.6195878982543945
    10. '   ' → logprob: -5.8695878982543945

Token 1117: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1262952834367752
    2. '       ' → logprob: -2.876295328140259
    3. ' l' → logprob: -2.876295328140259
    4. '   ' → logprob: -6.50129508972168
    5. 'image' → logprob: -7.00129508972168
    6. 'le' → logprob: -7.37629508972168
    7. 'sur' → logprob: -7.37629508972168
    8. ' image' → logprob: -7.62629508972168
    9. 'for' → logprob: -8.12629508972168
    10. 'la' → logprob: -8.37629508972168

Token 1118: ''image' (ID: 94128)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.067561149597168
    2. ''image' → logprob: -1.317561149597168
    3. ' range' → logprob: -2.067561149597168
    4. 'a' → logprob: -2.567561149597168
    5. ''ensemble' → logprob: -2.692561149597168
    6. 'e' → logprob: -3.067561149597168
    7. 'image' → logprob: -3.317561149597168
    8. ' image' → logprob: -4.067561149597168
    9. '   ' → logprob: -5.192561149597168
    10. '’image' → logprob: -5.442561149597168

Token 1119: ' sur' (ID: 1512)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9890836477279663
    2. 'for' → logprob: -1.1140836477279663
    3. '       ' → logprob: -1.2390836477279663
    4. '   ' → logprob: -5.239083766937256
    5. ' pour' → logprob: -6.739083766937256
    6. ',' → logprob: -7.114083766937256
    7. 'pour' → logprob: -7.364083766937256
    8. 'sur' → logprob: -8.114083290100098
    9. 'i' → logprob: -8.364083290100098
    10. ' i' → logprob: -8.614083290100098

Token 1120: ' toutes' (ID: 17502)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5783170461654663
    2. ' range' → logprob: -0.8283170461654663
    3. '   ' → logprob: -6.953317165374756
    4. ' la' → logprob: -7.078317165374756
    5. '(range' → logprob: -8.578316688537598
    6. ' h' → logprob: -9.578316688537598
    7. 'for' → logprob: -10.078316688537598
    8. ' ' → logprob: -10.203316688537598
    9. 'h' → logprob: -10.203316688537598
    10. 'la' → logprob: -10.453316688537598

Token 1121: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.8831614851951599
    2. 'l' → logprob: -1.5081615447998047
    3. 'la' → logprob: -2.1331615447998047
    4. 'range' → logprob: -2.6331615447998047
    5. 'positions' → logprob: -2.7581615447998047
    6. ' les' → logprob: -2.7581615447998047
    7. 'le' → logprob: -4.508161544799805
    8. ' la' → logprob: -4.508161544799805
    9. ' positions' → logprob: -5.633161544799805
    10. ' l' → logprob: -5.758161544799805

Token 1122: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.16787008941173553
    2. ' positions' → logprob: -2.667870044708252
    3. 'i' → logprob: -3.917870044708252
    4. 'poss' → logprob: -4.042870044708252
    5. 'pl' → logprob: -4.542870044708252
    6. 'range' → logprob: -4.792870044708252
    7. ' (' → logprob: -5.417870044708252
    8. '(' → logprob: -5.792870044708252
    9. '(i' → logprob: -5.917870044708252
    10. '(range' → logprob: -6.042870044708252

Token 1123: ' où' (ID: 15113)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06139250844717026
    2. ' possibles' → logprob: -4.061392307281494
    3. 'possible' → logprob: -4.186392307281494
    4. ' (' → logprob: -4.936392307281494
    5. ' possible' → logprob: -5.061392307281494
    6. 'for' → logprob: -5.561392307281494
    7. 'poss' → logprob: -6.186392307281494
    8. 'pour' → logprob: -6.311392307281494
    9. ',' → logprob: -6.561392307281494
    10. '(i' → logprob: -7.436392307281494

Token 1124: ' un' (ID: 537)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.07652317732572556
    2. 'on' → logprob: -3.7015230655670166
    3. 'un' → logprob: -3.8265230655670166
    4. 'pattern' → logprob: -4.076523303985596
    5. ' le' → logprob: -5.201523303985596
    6. 'p' → logprob: -6.076523303985596
    7. 'une' → logprob: -7.201523303985596
    8. 'la' → logprob: -7.451523303985596
    9. ' on' → logprob: -7.826523303985596
    10. 'l' → logprob: -8.201522827148438

Token 1125: ' carré' (ID: 191546)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.0047902571968734264
    2. ' pattern' → logprob: -5.754790306091309
    3. 'p' → logprob: -6.879790306091309
    4. 'pat' → logprob: -7.629790306091309
    5. 'variant' → logprob: -10.004790306091309
    6. 'e' → logprob: -11.254790306091309
    7. 'patch' → logprob: -11.754790306091309
    8. '   ' → logprob: -12.504790306091309
    9. ' ' → logprob: -12.629790306091309
    10. '#' → logprob: -13.129790306091309

Token 1126: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.45095258951187134
    2. 'de' → logprob: -1.0759525299072266
    3. 'd' → logprob: -4.325952529907227
    4. ' de' → logprob: -5.450952529907227
    5. ' p' → logprob: -6.200952529907227
    6. 'of' → logprob: -6.950952529907227
    7. 'possible' → logprob: -7.575952529907227
    8. 'pe' → logprob: -8.075952529907227
    9. ' of' → logprob: -8.825952529907227
    10. '   ' → logprob: -9.200952529907227

Token 1127: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05725019425153732
    2. '×' → logprob: -4.057250022888184
    3. 'p' → logprob: -4.557250022888184
    4. ' x' → logprob: -4.807250022888184
    5. '*' → logprob: -5.182250022888184
    6. '*p' → logprob: -5.182250022888184
    7. '<=' → logprob: -5.307250022888184
    8. '>' → logprob: -6.932250022888184
    9. '```' → logprob: -7.057250022888184
    10. ' <=' → logprob: -8.057250022888184

Token 1128: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.988221684878226e-06
    2. ' p' → logprob: -12.000006675720215
    3. '<p' → logprob: -14.750006675720215
    4. '
' → logprob: -15.125006675720215
    5. '```' → logprob: -16.25000762939453
    6. '   ' → logprob: -17.25000762939453
    7. ' ' → logprob: -17.62500762939453
    8. '<|end|>' → logprob: -18.75000762939453
    9. '<|end|>' → logprob: -19.00000762939453
    10. '	p' → logprob: -19.06250762939453

Token 1129: ' est' (ID: 893)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.04284844920039177
    2. 'p' → logprob: -4.042848587036133
    3. ' peut' → logprob: -4.792848587036133
    4. 'ent' → logprob: -4.792848587036133
    5. 't' → logprob: -6.792848587036133
    6. 'entr' → logprob: -6.917848587036133
    7. 's' → logprob: -7.292848587036133
    8. 'pu' → logprob: -7.542848587036133
    9. 'r' → logprob: -7.667848587036133
    10. 'entre' → logprob: -7.667848587036133

Token 1130: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.005213005933910608
    2. 'poss' → logprob: -6.255212783813477
    3. 'compatible' → logprob: -7.380212783813477
    4. 'plac' → logprob: -7.755212783813477
    5. 'pot' → logprob: -8.005212783813477
    6. 'posé' → logprob: -8.255212783813477
    7. 'pos' → logprob: -8.380212783813477
    8. '_possible' → logprob: -8.755212783813477
    9. 'test' → logprob: -8.880212783813477
    10. 'com' → logprob: -9.130212783813477

Token 1131: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012293950654566288
    2. '
' → logprob: -5.387293815612793
    3. ',' → logprob: -5.512293815612793
    4. ' (' → logprob: -6.262293815612793
    5. '        
' → logprob: -7.637293815612793
    6. ':
' → logprob: -8.637293815612793
    7. ' for' → logprob: -8.762293815612793
    8. 'for' → logprob: -8.887293815612793
    9. ',
' → logprob: -9.137293815612793
    10. ' et' → logprob: -9.137293815612793

Token 1132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.6895233531831764e-05
    2. ' for' → logprob: -11.75002670288086
    3. 'for' → logprob: -12.12502670288086
    4. '```' → logprob: -12.25002670288086
    5. '   ' → logprob: -12.62502670288086
    6. '        
' → logprob: -13.12502670288086
    7. '           ' → logprob: -14.00002670288086
    8. ',' → logprob: -14.12502670288086
    9. '
' → logprob: -14.12502670288086
    10. '	' → logprob: -15.25002670288086

Token 1133: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5932042002677917
    2. 'for' → logprob: -0.9682042002677917
    3. ' for' → logprob: -2.7182042598724365
    4. '   ' → logprob: -6.718204021453857
    5. 'positions' → logprob: -8.593204498291016
    6. '
' → logprob: -9.593204498291016
    7. '```' → logprob: -9.718204498291016
    8. '        
' → logprob: -9.968204498291016
    9. ' positions' → logprob: -10.218204498291016
    10. ' ' → logprob: -11.218204498291016

Token 1134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08999079465866089
    2. '=' → logprob: -2.4649908542633057
    3. '_' → logprob: -7.089990615844727
    4. '<|end|>' → logprob: -9.964990615844727
    5. ')' → logprob: -10.464990615844727
    6. ' ' → logprob: -10.589990615844727
    7. '   ' → logprob: -10.839990615844727
    8. ',' → logprob: -10.839990615844727
    9. '[' → logprob: -11.339990615844727
    10. '    ' → logprob: -11.464990615844727

Token 1135: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009761283174157143
    2. ' ' → logprob: -4.634761333465576
    3. '   ' → logprob: -12.884760856628418
    4. '       ' → logprob: -13.384760856628418
    5. '(' → logprob: -15.509760856628418
    6. ' ' → logprob: -15.509760856628418
    7. '        ' → logprob: -16.009761810302734
    8. '           ' → logprob: -16.134761810302734
    9. '    ' → logprob: -16.384761810302734
    10. '=' → logprob: -16.759761810302734

Token 1136: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.5
    4. '{}' → logprob: -18.625
    5. '[' → logprob: -19.75
    6. '{' → logprob: -21.625
    7. '{}
' → logprob: -21.625
    8. '```' → logprob: -22.125
    9. '       ' → logprob: -22.875
    10. '=' → logprob: -22.875

Token 1137: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05174412578344345
    2. '
' → logprob: -3.551744222640991
    3. '<|end|>' → logprob: -4.801743984222412
    4. '   ' → logprob: -4.926743984222412
    5. ' for' → logprob: -6.301743984222412
    6. '        
' → logprob: -6.426743984222412
    7. '    
' → logprob: -7.551743984222412
    8. '  
' → logprob: -7.676743984222412
    9. 'for' → logprob: -8.05174446105957
    10. '```' → logprob: -8.17674446105957

Token 1138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10029260814189911
    2. '   ' → logprob: -2.475292682647705
    3. ' for' → logprob: -4.975292682647705
    4. '
' → logprob: -6.850292682647705
    5. 'for' → logprob: -7.225292682647705
    6. '        
' → logprob: -7.600292682647705
    7. '<|end|>' → logprob: -7.725292682647705
    8. ' ' → logprob: -8.100292205810547
    9. '	' → logprob: -8.350292205810547
    10. '    
' → logprob: -8.475292205810547

Token 1139: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1618182510137558
    2. ' for' → logprob: -1.911818265914917
    3. '       ' → logprob: -6.536818027496338
    4. '   ' → logprob: -8.911818504333496
    5. '	for' → logprob: -12.286818504333496
    6. '```' → logprob: -12.536818504333496
    7. '
' → logprob: -15.411818504333496
    8. '``' → logprob: -15.661818504333496
    9. ' ' → logprob: -15.786818504333496
    10. 'i' → logprob: -16.03681755065918

Token 1140: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.160997211933136
    2. ' for' → logprob: -1.9109971523284912
    3. '       ' → logprob: -7.41099739074707
    4. '   ' → logprob: -9.28599739074707
    5. '```' → logprob: -9.78599739074707
    6. 'i' → logprob: -12.03599739074707
    7. '
' → logprob: -12.41099739074707
    8. '	for' → logprob: -12.53599739074707
    9. 'range' → logprob: -13.16099739074707
    10. '``' → logprob: -13.66099739074707

Token 1141: ' accél' (ID: 152966)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02682594023644924
    2. ' i' → logprob: -4.901825904846191
    3. 'start' → logprob: -5.026825904846191
    4. 'pi' → logprob: -5.401825904846191
    5. 'j' → logprob: -5.651825904846191
    6. 'pos' → logprob: -7.276825904846191
    7. 'variant' → logprob: -7.401825904846191
    8. 'pattern' → logprob: -7.401825904846191
    9. 'pat' → logprob: -7.651825904846191
    10. '   ' → logprob: -7.901825904846191

Token 1142: 'érer' (ID: 29097)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.25192195177078247
    2. '       ' → logprob: -2.2519218921661377
    3. '   ' → logprob: -2.8769218921661377
    4. 'urer' → logprob: -3.6269218921661377
    5. 'ancer' → logprob: -5.251922130584717
    6. 'iter' → logprob: -5.626922130584717
    7. '               ' → logprob: -6.001922130584717
    8. 'user' → logprob: -6.126922130584717
    9. 'uer' → logprob: -6.251922130584717
    10. 'érer' → logprob: -6.376922130584717

Token 1143: ' la' (ID: 557)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.289315104484558
    2. ' for' → logprob: -1.414315104484558
    3. 'i' → logprob: -1.789315104484558
    4. 'start' → logprob: -2.9143152236938477
    5. 'for' → logprob: -2.9143152236938477
    6. ' start' → logprob: -3.4143152236938477
    7. ' j' → logprob: -3.5393152236938477
    8. ' image' → logprob: -3.5393152236938477
    9. '   ' → logprob: -3.9143152236938477
    10. 'image' → logprob: -4.039315223693848

Token 1144: ' recherche' (ID: 24975)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6274474263191223
    2. 'start' → logprob: -1.3774473667144775
    3. 'range' → logprob: -2.8774473667144775
    4. 'row' → logprob: -3.1274473667144775
    5. 'pattern' → logprob: -3.6274473667144775
    6. 'p' → logprob: -4.252447605133057
    7. 'image' → logprob: -4.252447605133057
    8. ' start' → logprob: -4.627447605133057
    9. ' i' → logprob: -5.002447605133057
    10. 'j' → logprob: -5.002447605133057

Token 1145: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.48577019572257996
    2. 'for' → logprob: -1.1107702255249023
    3. '       ' → logprob: -3.8607702255249023
    4. ' i' → logprob: -4.235770225524902
    5. 'i' → logprob: -4.860770225524902
    6. '   ' → logprob: -5.610770225524902
    7. ',' → logprob: -6.235770225524902
    8. ' possible' → logprob: -7.235770225524902
    9. ' j' → logprob: -7.235770225524902
    10. 'possible' → logprob: -7.485770225524902

Token 1146: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9607219099998474
    2. 'for' → logprob: -0.9607219099998474
    3. '       ' → logprob: -1.5857219696044922
    4. 'possible' → logprob: -4.460721969604492
    5. 'positions' → logprob: -4.960721969604492
    6. ' possible' → logprob: -5.335721969604492
    7. ' positions' → logprob: -6.710721969604492
    8. 'import' → logprob: -6.960721969604492
    9. '```' → logprob: -7.460721969604492
    10. 'found' → logprob: -7.460721969604492

Token 1147: ' peut' (ID: 9216)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6907376646995544
    2. 'continue' → logprob: -1.5657377243041992
    3. 'import' → logprob: -2.440737724304199
    4. ' continue' → logprob: -2.565737724304199
    5. ' for' → logprob: -2.690737724304199
    6. ' can' → logprob: -4.565737724304199
    7. '#' → logprob: -4.565737724304199
    8. 'def' → logprob: -5.190737724304199
    9. '   ' → logprob: -5.315737724304199
    10. 'from' → logprob: -5.565737724304199

Token 1148: ' utiliser' (ID: 43227)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.36185652017593384
    2. 'break' → logprob: -2.486856460571289
    3. 'continue' → logprob: -2.611856460571289
    4. 'import' → logprob: -2.861856460571289
    5. '   ' → logprob: -3.611856460571289
    6. 'contin' → logprob: -4.236856460571289
    7. '```' → logprob: -4.361856460571289
    8. ' for' → logprob: -4.611856460571289
    9. 'range' → logprob: -5.611856460571289
    10. 'pré' → logprob: -5.736856460571289

Token 1149: ' un' (ID: 537)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6958358883857727
    2. 'range' → logprob: -0.9458358883857727
    3. '   ' → logprob: -3.195835828781128
    4. '```' → logprob: -3.820835828781128
    5. 'p' → logprob: -4.320836067199707
    6. 'import' → logprob: -4.570836067199707
    7. 'a' → logprob: -5.320836067199707
    8. ' for' → logprob: -5.445836067199707
    9. 'un' → logprob: -5.945836067199707
    10. '       ' → logprob: -6.070836067199707

Token 1150: ' set' (ID: 920)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11859636753797531
    2. 'range' → logprob: -2.868596315383911
    3. 'continue' → logprob: -4.24359655380249
    4. 'import' → logprob: -4.49359655380249
    5. ' for' → logprob: -4.86859655380249
    6. 'set' → logprob: -4.99359655380249
    7. 'break' → logprob: -5.74359655380249
    8. 'nested' → logprob: -6.24359655380249
    9. '   ' → logprob: -6.86859655380249
    10. 'p' → logprob: -7.24359655380249

Token 1151: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10276642441749573
    2. '()' → logprob: -3.602766513824463
    3. ' =' → logprob: -4.477766513824463
    4. '()
' → logprob: -4.977766513824463
    5. 'of' → logprob: -5.352766513824463
    6. '   ' → logprob: -5.477766513824463
    7. 'seen' → logprob: -5.477766513824463
    8. '=' → logprob: -5.602766513824463
    9. 'pattern' → logprob: -5.727766513824463
    10. 'positions' → logprob: -5.727766513824463

Token 1152: ' mém' (ID: 136981)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.06941431015729904
    2. 'range' → logprob: -4.444414138793945
    3. ' pattern' → logprob: -4.569414138793945
    4. 'les' → logprob: -4.694414138793945
    5. 'patterns' → logprob: -4.819414138793945
    6. 'all' → logprob: -5.694414138793945
    7. 'variants' → logprob: -5.819414138793945
    8. 'possible' → logprob: -5.944414138793945
    9. 'variant' → logprob: -6.319414138793945
    10. 'pr' → logprob: -6.944414138793945

Token 1153: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.06623414903879166
    2. 'orer' → logprob: -3.0662341117858887
    3. 'o' → logprob: -4.566234111785889
    4. '   ' → logprob: -5.816234111785889
    5. 'izer' → logprob: -6.941234111785889
    6. 'oir' → logprob: -7.316234111785889
    7. 'iser' → logprob: -7.566234111785889
    8. 'oire' → logprob: -7.691234111785889
    9. 'for' → logprob: -8.191234588623047
    10. '    ' → logprob: -8.316234588623047

Token 1154: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.009756443090736866
    2. 'izer' → logprob: -5.259756565093994
    3. 'ize' → logprob: -6.009756565093994
    4. 'er' → logprob: -6.259756565093994
    5. 'oir' → logprob: -9.884756088256836
    6. 'ise' → logprob: -11.259756088256836
    7. 'is' → logprob: -11.259756088256836
    8. 'iter' → logprob: -11.509756088256836
    9. '#' → logprob: -12.009756088256836
    10. 'orer' → logprob: -12.134756088256836

Token 1155: ' les' (ID: 1341)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.5602403879165649
    2. 'positions' → logprob: -2.0602402687072754
    3. 'seen' → logprob: -2.4352402687072754
    4. 'found' → logprob: -2.5602402687072754
    5. '[(' → logprob: -3.8102402687072754
    6. '(pattern' → logprob: -3.8102402687072754
    7. 'visited' → logprob: -4.560240268707275
    8. '   ' → logprob: -4.810240268707275
    9. 'the' → logprob: -4.810240268707275
    10. ' pattern' → logprob: -4.935240268707275

Token 1156: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.5015956163406372
    2. 'visited' → logprob: -1.8765956163406372
    3. 'seen' → logprob: -2.2515954971313477
    4. 'checked' → logprob: -3.2515954971313477
    5. 'found' → logprob: -3.2515954971313477
    6. 'pattern' → logprob: -3.2515954971313477
    7. 'already' → logprob: -5.626595497131348
    8. 'matches' → logprob: -5.876595497131348
    9. 'matched' → logprob: -5.876595497131348
    10. 'variants' → logprob: -6.001595497131348

Token 1157: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0189484357833862
    2. '       ' → logprob: -1.2689484357833862
    3. '```' → logprob: -2.643948554992676
    4. 'visited' → logprob: -2.893948554992676
    5. 'found' → logprob: -3.268948554992676
    6. 'for' → logprob: -3.643948554992676
    7. ',' → logprob: -4.268948554992676
    8. 'seen' → logprob: -4.643948554992676
    9. ' =' → logprob: -4.643948554992676
    10. ' found' → logprob: -4.768948554992676

Token 1158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0046509611420333385
    2. '        
' → logprob: -6.754651069641113
    3. '        ' → logprob: -7.629651069641113
    4. ' (' → logprob: -7.754651069641113
    5. '```' → logprob: -7.754651069641113
    6. ' for' → logprob: -7.754651069641113
    7. ',' → logprob: -8.129651069641113
    8. ' of' → logprob: -8.504651069641113
    9. 'for' → logprob: -8.629651069641113
    10. '
' → logprob: -8.754651069641113

Token 1159: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18418975174427032
    2. 'for' → logprob: -2.934189796447754
    3. ' for' → logprob: -2.934189796447754
    4. '
' → logprob: -3.559189796447754
    5. '        
' → logprob: -4.309189796447754
    6. 'visited' → logprob: -5.309189796447754
    7. 'positions' → logprob: -5.809189796447754
    8. ' positions' → logprob: -5.809189796447754
    9. ' 
' → logprob: -6.184189796447754
    10. 'seen' → logprob: -6.309189796447754

Token 1160: ' déjà' (ID: 21229)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6395277976989746
    2. '       ' → logprob: -0.8895277976989746
    3. 'visited' → logprob: -3.0145277976989746
    4. ' for' → logprob: -5.014527797698975
    5. 'seen' → logprob: -6.139527797698975
    6. 'positions' → logprob: -6.264527797698975
    7. 'found' → logprob: -7.389527797698975
    8. '
' → logprob: -8.139528274536133
    9. '```' → logprob: -8.139528274536133
    10. 'used' → logprob: -9.264528274536133

Token 1161: ' compt' (ID: 39238)
  Prédit: 'checked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'checked' → logprob: -0.8324481844902039
    2. 'visited' → logprob: -1.3324482440948486
    3. 'v' → logprob: -2.4574482440948486
    4. 'vis' → logprob: -2.8324482440948486
    5. 'tr' → logprob: -3.0824482440948486
    6. 'test' → logprob: -3.2074482440948486
    7. 'found' → logprob: -4.0824480056762695
    8. '```' → logprob: -4.3324480056762695
    9. 'matched' → logprob: -5.0824480056762695
    10. 'ren' → logprob: -5.4574480056762695

Token 1162: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.34147170186042786
    2. 'és' → logprob: -1.3414716720581055
    3. 'érées' → logprob: -4.0914716720581055
    4. 'érés' → logprob: -4.9664716720581055
    5. 'é' → logprob: -5.9664716720581055
    6. 'rés' → logprob: -7.9664716720581055
    7. 'r' → logprob: -8.091471672058105
    8. 'ér' → logprob: -8.841471672058105
    9. 'es' → logprob: -8.966471672058105
    10. 'nées' → logprob: -9.216471672058105

Token 1163: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4117067754268646
    2. '       ' → logprob: -1.161706805229187
    3. 'for' → logprob: -4.911706924438477
    4. '        
' → logprob: -5.411706924438477
    5. ' for' → logprob: -5.661706924438477
    6. 'positions' → logprob: -5.786706924438477
    7. 'visited' → logprob: -5.911706924438477
    8. ' positions' → logprob: -7.036706924438477
    9. '   ' → logprob: -7.536706924438477
    10. 'found' → logprob: -7.536706924438477

Token 1164: 'en' (ID: 262)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7597641348838806
    2. ')' → logprob: -0.8847641348838806
    3. ' )' → logprob: -2.5097641944885254
    4. '):
' → logprob: -4.634764194488525
    5. ')
' → logprob: -5.634764194488525
    6. '           ' → logprob: -6.009764194488525
    7. ' (' → logprob: -6.009764194488525
    8. '):' → logprob: -6.509764194488525
    9. ')set' → logprob: -6.509764194488525
    10. '        
' → logprob: -6.634764194488525

Token 1165: ' théorie' (ID: 155054)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'case' → logprob: -1.4030207395553589
    2. 'seen' → logprob: -2.2780208587646484
    3. 'fait' → logprob: -2.5280208587646484
    4. 'set' → logprob: -2.7780208587646484
    5. '```' → logprob: -2.9030208587646484
    6. 'python' → logprob: -3.0280208587646484
    7. '#' → logprob: -3.4030208587646484
    8. 'faite' → logprob: -3.7780208587646484
    9. ')' → logprob: -3.9030208587646484
    10. 'aj' → logprob: -3.9030208587646484

Token 1166: ' un' (ID: 537)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.239053875207901
    2. ')' → logprob: -1.7390538454055786
    3. ',' → logprob: -4.489053726196289
    4. '),' → logprob: -4.864053726196289
    5. '
' → logprob: -5.489053726196289
    6. ').' → logprob: -6.489053726196289
    7. '#' → logprob: -6.489053726196289
    8. ' )' → logprob: -6.739053726196289
    9. ' pour' → logprob: -6.989053726196289
    10. ' ce' → logprob: -7.114053726196289

Token 1167: ' carré' (ID: 191546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1897368431091309
    2. 'es' → logprob: -1.1897368431091309
    3. 'e' → logprob: -1.9397368431091309
    4. ' )' → logprob: -2.689736843109131
    5. 's' → logprob: -3.314736843109131
    6. ' espace' → logprob: -3.564736843109131
    7. 'esp' → logprob: -4.439736843109131
    8. 'ique' → logprob: -4.564736843109131
    9. 'iquement' → logprob: -4.689736843109131
    10. 'set' → logprob: -4.939736843109131

Token 1168: ' ne' (ID: 453)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8641135692596436
    2. ' complet' → logprob: -2.6141135692596436
    3. ' p' → logprob: -2.7391135692596436
    4. ' n' → logprob: -2.8641135692596436
    5. ' de' → logprob: -3.1141135692596436
    6. 'p' → logprob: -3.1141135692596436
    7. ' trouvé' → logprob: -3.2391135692596436
    8. ' )' → logprob: -3.3641135692596436
    9. 'n' → logprob: -3.9891135692596436
    10. '_' → logprob: -4.114113807678223

Token 1169: ' devrait' (ID: 52773)
  Prédit: ' se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' se' → logprob: -1.6773308515548706
    2. ')' → logprob: -1.9273308515548706
    3. 'pe' → logprob: -1.9273308515548706
    4. 'se' → logprob: -2.05233097076416
    5. '```' → logprob: -2.67733097076416
    6. ' peut' → logprob: -2.92733097076416
    7. ' doit' → logprob: -3.67733097076416
    8. 'do' → logprob: -3.67733097076416
    9. 'est' → logprob: -3.92733097076416
    10. 'a' → logprob: -4.30233097076416

Token 1170: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.08237117528915405
    2. 'comp' → logprob: -3.207371234893799
    3. 'être' → logprob: -3.707371234893799
    4. 'jam' → logprob: -6.082371234893799
    5. ' pas' → logprob: -6.332371234893799
    6. ' jamais' → logprob: -6.707371234893799
    7. 'plus' → logprob: -7.207371234893799
    8. 'com' → logprob: -7.207371234893799
    9. 'appar' → logprob: -7.332371234893799
    10. ' compter' → logprob: -7.457371234893799

Token 1171: ' être' (ID: 9104)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.527031421661377
    2. 'com' → logprob: -1.902031421661377
    3. 'être' → logprob: -2.027031421661377
    4. 'over' → logprob: -3.902031421661377
    5. 'se' → logprob: -4.027031421661377
    6. 'count' → logprob: -4.527031421661377
    7. 'avoir' → logprob: -4.777031421661377
    8. ' compter' → logprob: -4.777031421661377
    9. 'possible' → logprob: -4.902031421661377
    10. 'd' → logprob: -5.027031421661377

Token 1172: ' compt' (ID: 39238)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.11588316410779953
    2. 'comp' → logprob: -2.6158831119537354
    3. 'dé' → logprob: -4.1158833503723145
    4. 'double' → logprob: -4.7408833503723145
    5. 'count' → logprob: -6.9908833503723145
    6. 'tr' → logprob: -7.1158833503723145
    7. 'd' → logprob: -7.1158833503723145
    8. 'multip' → logprob: -7.2408833503723145
    9. 'dou' → logprob: -7.2408833503723145
    10. 'detect' → logprob: -7.2408833503723145

Token 1173: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.747814349073451e-05
    2. 'ré' → logprob: -12.375017166137695
    3. '�' → logprob: -13.125017166137695
    4. '
' → logprob: -13.125017166137695
    5. 'com' → logprob: -13.375017166137695
    6. '   ' → logprob: -13.875017166137695
    7. 'ed' → logprob: -14.125017166137695
    8. 'és' → logprob: -14.375017166137695
    9. 'té' → logprob: -14.375017166137695
    10. 'u' → logprob: -14.375017166137695

Token 1174: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.41538166999816895
    2. ' deux' → logprob: -1.665381669998169
    3. 'plus' → logprob: -2.665381669998169
    4. ')' → logprob: -4.16538143157959
    5. ' plusieurs' → logprob: -4.41538143157959
    6. 'double' → logprob: -4.91538143157959
    7. '   ' → logprob: -5.04038143157959
    8. ' twice' → logprob: -5.41538143157959
    9. ' plus' → logprob: -5.54038143157959
    10. 'two' → logprob: -5.66538143157959

Token 1175: ' fois' (ID: 14697)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fois' → logprob: -0.03147421032190323
    2. ' fois' → logprob: -3.7814741134643555
    3. ' ' → logprob: -5.0314741134643555
    4. 'fo' → logprob: -7.0314741134643555
    5. 'f' → logprob: -7.6564741134643555
    6. '   ' → logprob: -8.656474113464355
    7. ' ' → logprob: -10.781474113464355
    8. ')' → logprob: -11.156474113464355
    9. '
' → logprob: -11.156474113464355
    10. '#' → logprob: -11.156474113464355

Token 1176: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017396118491888046
    2. '       ' → logprob: -4.517395973205566
    3. ',' → logprob: -5.892395973205566
    4. ' )' → logprob: -6.892395973205566
    5. ')
' → logprob: -7.017395973205566
    6. '),' → logprob: -7.767395973205566
    7. '):
' → logprob: -8.017395973205566
    8. ').' → logprob: -8.392395973205566
    9. '):' → logprob: -8.392395973205566
    10. '#' → logprob: -9.767395973205566

Token 1177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034051232039928436
    2. '
' → logprob: -3.6590511798858643
    3. '        
' → logprob: -4.909051418304443
    4. '  
' → logprob: -9.284050941467285
    5. ' 
' → logprob: -9.909050941467285
    6. '<|end|>' → logprob: -10.159050941467285
    7. ' for' → logprob: -10.409050941467285
    8. '    
' → logprob: -11.159050941467285
    9. '```' → logprob: -11.284050941467285
    10. '            
' → logprob: -11.284050941467285

Token 1178: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6744263172149658
    2. 'seen' → logprob: -1.6744263172149658
    3. 'visited' → logprob: -2.174426317214966
    4. 'positions' → logprob: -2.424426317214966
    5. 'found' → logprob: -2.799426317214966
    6. '   ' → logprob: -3.549426317214966
    7. 'count' → logprob: -5.424426078796387
    8. 'matched' → logprob: -6.299426078796387
    9. ' counted' → logprob: -6.799426078796387
    10. ' positions' → logprob: -6.799426078796387

Token 1179: ' mais' (ID: 2899)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10493883490562439
    2. 'positions' → logprob: -3.3549387454986572
    3. 'visited' → logprob: -3.7299387454986572
    4. 'for' → logprob: -4.229938983917236
    5. 'seen' → logprob: -4.979938983917236
    6. ' positions' → logprob: -5.479938983917236
    7. 'found' → logprob: -5.604938983917236
    8. '
' → logprob: -5.604938983917236
    9. '        
' → logprob: -5.854938983917236
    10. ' for' → logprob: -6.104938983917236

Token 1180: ' le' (ID: 505)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11193995177745819
    2. '#' → logprob: -3.4869399070739746
    3. '        ' → logprob: -4.236939907073975
    4. ' True' → logprob: -4.611939907073975
    5. 'False' → logprob: -5.111939907073975
    6. '
' → logprob: -5.236939907073975
    7. '    ' → logprob: -5.236939907073975
    8. 'True' → logprob: -5.486939907073975
    9. 'for' → logprob: -5.736939907073975
    10. ' for' → logprob: -5.861939907073975

Token 1181: ' problème' (ID: 35630)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.396140217781067
    2. '#' → logprob: -2.0211400985717773
    3. ' for' → logprob: -2.0211400985717773
    4. '    ' → logprob: -2.3961400985717773
    5. '```' → logprob: -2.7711400985717773
    6. '       ' → logprob: -2.8961400985717773
    7. ' #' → logprob: -2.8961400985717773
    8. '        ' → logprob: -3.3961400985717773
    9. 'continue' → logprob: -3.5211400985717773
    10. ' continue' → logprob: -3.5211400985717773

Token 1182: ' indique' (ID: 97324)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5816657543182373
    2. 'n' → logprob: -2.0816657543182373
    3. '=' → logprob: -3.0816657543182373
    4. 'est' → logprob: -3.2066657543182373
    5. 'continue' → logprob: -3.2066657543182373
    6. ' est' → logprob: -3.4566657543182373
    7. ')' → logprob: -3.7066657543182373
    8. ':' → logprob: -4.081665992736816
    9. ' continues' → logprob: -4.206665992736816
    10. ' =' → logprob: -4.456665992736816

Token 1183: ' qu' (ID: 474)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.19766780734062195
    2. 'que' → logprob: -2.1976678371429443
    3. 'explicit' → logprob: -3.0726678371429443
    4. 'de' → logprob: -5.072667598724365
    5. 'd' → logprob: -5.447667598724365
    6. ' qu' → logprob: -5.572667598724365
    7. 'comp' → logprob: -6.697667598724365
    8. 'app' → logprob: -6.697667598724365
    9. ' que' → logprob: -7.447667598724365
    10. 'implicit' → logprob: -7.572667598724365

Token 1184: ''on' (ID: 25812)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7627776265144348
    2. ''il' → logprob: -2.01277756690979
    3. '   ' → logprob: -2.51277756690979
    4. '           ' → logprob: -3.26277756690979
    5. ' on' → logprob: -3.26277756690979
    6. ' il' → logprob: -3.38777756690979
    7. '```' → logprob: -3.76277756690979
    8. '#' → logprob: -4.012777805328369
    9. '        ' → logprob: -4.262777805328369
    10. 'for' → logprob: -4.387777805328369

Token 1185: ' ne' (ID: 453)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.38530945777893066
    2. 'comp' → logprob: -1.6353094577789307
    3. 'pe' → logprob: -2.3853094577789307
    4. ' doit' → logprob: -3.6353094577789307
    5. 've' → logprob: -6.760309219360352
    6. ' compte' → logprob: -7.135309219360352
    7. 'com' → logprob: -7.260309219360352
    8. ' peut' → logprob: -7.635309219360352
    9. 'continue' → logprob: -7.760309219360352
    10. 'dev' → logprob: -8.010309219360352

Token 1186: ' doit' (ID: 21822)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.554783284664154
    2. 'do' → logprob: -0.929783284664154
    3. 'pe' → logprob: -4.054783344268799
    4. 've' → logprob: -4.929783344268799
    5. 'cherche' → logprob: -6.429783344268799
    6. ' doit' → logprob: -6.679783344268799
    7. '       ' → logprob: -7.179783344268799
    8. 'dev' → logprob: -7.429783344268799
    9. '   ' → logprob: -7.929783344268799
    10. 'continue' → logprob: -8.05478286743164

Token 1187: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.2715997099876404
    2. ' compter' → logprob: -2.146599769592285
    3. 'pas' → logprob: -2.271599769592285
    4. 'comp' → logprob: -4.646599769592285
    5. 'count' → logprob: -6.396599769592285
    6. ' comp' → logprob: -6.521599769592285
    7. ' count' → logprob: -7.146599769592285
    8. ' compt' → logprob: -7.271599769592285
    9. ' compte' → logprob: -7.396599769592285
    10. ' seulement' → logprob: -8.271599769592285

Token 1188: ' compter' (ID: 81694)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5627847909927368
    2. 'for' → logprob: -1.6877847909927368
    3. '#' → logprob: -2.9377846717834473
    4. ' compter' → logprob: -3.4377846717834473
    5. 'comp' → logprob: -3.8127846717834473
    6. 'count' → logprob: -3.8127846717834473
    7. '   ' → logprob: -3.9377846717834473
    8. 'double' → logprob: -3.9377846717834473
    9. ' for' → logprob: -4.312784671783447
    10. '           ' → logprob: -4.437784671783447

Token 1189: ' deux' (ID: 10301)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06517612934112549
    2. '	' → logprob: -4.065176010131836
    3. 'positions' → logprob: -4.565176010131836
    4. '\t' → logprob: -4.815176010131836
    5. ' positions' → logprob: -5.440176010131836
    6. '_positions' → logprob: -5.940176010131836
    7. '	   ' → logprob: -6.065176010131836
    8. ')' → logprob: -6.065176010131836
    9. '   ' → logprob: -6.190176010131836
    10. '               ' → logprob: -6.940176010131836

Token 1190: ' fois' (ID: 14697)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fois' → logprob: -0.11919363588094711
    2. 'positions' → logprob: -3.8691935539245605
    3. 'occ' → logprob: -3.8691935539245605
    4. 'matches' → logprob: -4.2441935539245605
    5. 'c' → logprob: -4.6191935539245605
    6. ' fois' → logprob: -4.7441935539245605
    7. 'patterns' → logprob: -5.2441935539245605
    8. 'mot' → logprob: -5.3691935539245605
    9. 'car' → logprob: -5.6191935539245605
    10. 'zones' → logprob: -5.9941935539245605

Token 1191: ' une' (ID: 2463)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09114421904087067
    2. '        
' → logprob: -3.341144323348999
    3. '
' → logprob: -3.716144323348999
    4. 'for' → logprob: -4.71614408493042
    5. '   ' → logprob: -5.46614408493042
    6. '#' → logprob: -5.71614408493042
    7. ' for' → logprob: -6.34114408493042
    8. '    
' → logprob: -6.34114408493042
    9. ' 
' → logprob: -6.46614408493042
    10. 'positions' → logprob: -6.96614408493042

Token 1192: ' même' (ID: 9679)
  Prédit: ' même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' même' → logprob: -0.5617271661758423
    2. 'position' → logprob: -1.0617271661758423
    3. ' position' → logprob: -3.4367270469665527
    4. 'pattern' → logprob: -4.186727046966553
    5. 'm' → logprob: -4.936727046966553
    6. 'case' → logprob: -5.311727046966553
    7. ' ' → logprob: -5.311727046966553
    8. 'occ' → logprob: -5.561727046966553
    9. ' pattern' → logprob: -6.186727046966553
    10. 'match' → logprob: -6.311727046966553

Token 1193: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.0123654305934906
    2. 'occ' → logprob: -5.512365341186523
    3. 'zone' → logprob: -6.262365341186523
    4. 'case' → logprob: -6.387365341186523
    5. 'pattern' → logprob: -6.762365341186523
    6. '
' → logprob: -7.512365341186523
    7. ' position' → logprob: -7.512365341186523
    8. 'transform' → logprob: -8.012365341186523
    9. 'pos' → logprob: -8.137365341186523
    10. '   ' → logprob: -8.137365341186523

Token 1194: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002353526186197996
    2. '        
' → logprob: -6.502353668212891
    3. '
' → logprob: -8.12735366821289
    4. '.' → logprob: -8.87735366821289
    5. ',' → logprob: -9.00235366821289
    6. '<|end|>' → logprob: -9.25235366821289
    7. ':' → logprob: -10.62735366821289
    8. '   ' → logprob: -10.62735366821289
    9. ')' → logprob: -11.00235366821289
    10. '    
' → logprob: -11.25235366821289

Token 1195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01908181421458721
    2. ' donc' → logprob: -5.0190815925598145
    3. '<|end|>' → logprob: -5.3940815925598145
    4. '#' → logprob: -6.3940815925598145
    5. ' mais' → logprob: -6.5190815925598145
    6. ' continue' → logprob: -7.0190815925598145
    7. ' ' → logprob: -7.7690815925598145
    8. ' #' → logprob: -8.019082069396973
    9. '.' → logprob: -8.019082069396973
    10. ' so' → logprob: -8.269082069396973

Token 1196: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.15286964178085327
    2. ' #' → logprob: -2.652869701385498
    3. ' donc' → logprob: -3.277869701385498
    4. ' car' → logprob: -4.527869701385498
    5. 'car' → logprob: -4.527869701385498
    6. 'don' → logprob: -5.152869701385498
    7. 'count' → logprob: -6.527869701385498
    8. '       ' → logprob: -7.027869701385498
    9. 'ce' → logprob: -7.527869701385498
    10. 'on' → logprob: -7.527869701385498

Token 1197: ' même' (ID: 9679)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3584285080432892
    2. '#' → logprob: -1.3584284782409668
    3. 'continue' → logprob: -3.608428478240967
    4. ' #' → logprob: -5.608428478240967
    5. 'positions' → logprob: -6.233428478240967
    6. ' donc' → logprob: -6.233428478240967
    7. ' continue' → logprob: -6.733428478240967
    8. 'contin' → logprob: -6.983428478240967
    9. '```' → logprob: -7.233428478240967
    10. 'visited' → logprob: -7.608428478240967

Token 1198: ' si' (ID: 1784)
  Prédit: 'si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'si' → logprob: -0.41428229212760925
    2. 'if' → logprob: -1.6642823219299316
    3. ' si' → logprob: -2.7892823219299316
    4. '
' → logprob: -2.9142823219299316
    5. 's' → logprob: -4.539282321929932
    6. '       ' → logprob: -5.289282321929932
    7. '   ' → logprob: -5.664282321929932
    8. 'avec' → logprob: -5.789282321929932
    9. ' if' → logprob: -6.414282321929932
    10. 'pour' → logprob: -6.414282321929932

Token 1199: ' elle' (ID: 11451)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.8820944428443909
    2. 'les' → logprob: -1.132094383239746
    3. 'le' → logprob: -1.757094383239746
    4. 'la' → logprob: -4.507094383239746
    5. 'patterns' → logprob: -4.632094383239746
    6. 'on' → logprob: -4.632094383239746
    7. ' les' → logprob: -4.757094383239746
    8. 'une' → logprob: -4.882094383239746
    9. ' pattern' → logprob: -5.007094383239746
    10. 'the' → logprob: -5.132094383239746

Token 1200: ' correspond' (ID: 11095)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.755585253238678
    2. 'est' → logprob: -1.3805851936340332
    3. ' is' → logprob: -2.130585193634033
    4. ' se' → logprob: -3.630585193634033
    5. ' overlaps' → logprob: -4.005585193634033
    6. ' overlap' → logprob: -4.380585193634033
    7. 'se' → logprob: -4.630585193634033
    8. '       ' → logprob: -4.630585193634033
    9. '```' → logprob: -4.755585193634033
    10. '   ' → logprob: -4.880585193634033

Token 1201: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.3090170621871948
    2. ' à' → logprob: -1.5590170621871948
    3. '       ' → logprob: -3.3090171813964844
    4. '   ' → logprob: -5.684017181396484
    5. 'exact' → logprob: -5.809017181396484
    6. 'au' → logprob: -6.184017181396484
    7. '```' → logprob: -6.559017181396484
    8. '        ' → logprob: -6.809017181396484
    9. 'aux' → logprob: -7.059017181396484
    10. ''à' → logprob: -7.059017181396484

Token 1202: ' plusieurs' (ID: 20875)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.7754857540130615
    2. 'plus' → logprob: -1.4004857540130615
    3. 'de' → logprob: -2.0254857540130615
    4. 'des' → logprob: -2.1504857540130615
    5. 'une' → logprob: -4.025485992431641
    6. 'un' → logprob: -4.400485992431641
    7. ' plusieurs' → logprob: -5.400485992431641
    8. 'different' → logprob: -5.525485992431641
    9. '```' → logprob: -6.525485992431641
    10. 'la' → logprob: -7.525485992431641

Token 1203: ' variantes' (ID: 169119)
  Prédit: 'vari'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vari' → logprob: -1.1902445554733276
    2. 'transform' → logprob: -1.1902445554733276
    3. 'variants' → logprob: -1.6902445554733276
    4. 'patterns' → logprob: -2.065244674682617
    5. 'pattern' → logprob: -3.065244674682617
    6. ' variantes' → logprob: -3.940244674682617
    7. 'var' → logprob: -5.690244674682617
    8. 'variant' → logprob: -6.065244674682617
    9. 'trans' → logprob: -6.190244674682617
    10. 'versions' → logprob: -6.690244674682617

Token 1204: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07205881923437119
    2. '        
' → logprob: -3.447058916091919
    3. '
' → logprob: -4.07205867767334
    4. '<|end|>' → logprob: -4.32205867767334
    5. ',' → logprob: -5.82205867767334
    6. '.' → logprob: -5.94705867767334
    7. ' positions' → logprob: -8.07205867767334
    8. '<|end|>' → logprob: -8.19705867767334
    9. 'positions' → logprob: -8.69705867767334
    10. '.
' → logprob: -8.94705867767334

Token 1205: ' Donc' (ID: 88837)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04779011383652687
    2. '
' → logprob: -4.172790050506592
    3. '        
' → logprob: -4.172790050506592
    4. ' positions' → logprob: -4.672790050506592
    5. 'positions' → logprob: -5.297790050506592
    6. ' 
' → logprob: -7.547790050506592
    7. '    
' → logprob: -8.79779052734375
    8. ' for' → logprob: -8.92279052734375
    9. 'visited' → logprob: -9.29779052734375
    10. 'seen' → logprob: -9.42279052734375

Token 1206: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3366563320159912
    2. 'for' → logprob: -2.461656332015991
    3. 'positions' → logprob: -2.586656332015991
    4. '#' → logprob: -2.711656332015991
    5. 'continue' → logprob: -3.461656332015991
    6. ':' → logprob: -5.21165657043457
    7. ' for' → logprob: -5.96165657043457
    8. '```' → logprob: -5.96165657043457
    9. '
' → logprob: -6.46165657043457
    10. 'count' → logprob: -6.46165657043457

Token 1207: ' ne' (ID: 453)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.42013755440711975
    2. 'visited' → logprob: -2.170137643814087
    3. 'seen' → logprob: -2.420137643814087
    4. 'positions' → logprob: -3.545137643814087
    5. '_seen' → logprob: -3.545137643814087
    6. 'contin' → logprob: -3.795137643814087
    7. 'found' → logprob: -4.670137405395508
    8. '#' → logprob: -4.795137405395508
    9. ' continue' → logprob: -4.920137405395508
    10. 'used' → logprob: -4.920137405395508

Token 1208: ' peut' (ID: 9216)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.18629616498947144
    2. 'pas' → logprob: -3.186296224594116
    3. 'util' → logprob: -3.436296224594116
    4. 'aj' → logprob: -3.686296224594116
    5. 'stock' → logprob: -3.811296224594116
    6. 'continue' → logprob: -4.186295986175537
    7. 'mar' → logprob: -5.311295986175537
    8. 'count' → logprob: -5.436295986175537
    9. 'com' → logprob: -5.811295986175537
    10. 's' → logprob: -5.936295986175537

Token 1209: ' compter' (ID: 81694)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.09380632638931274
    2. ' pas' → logprob: -3.468806266784668
    3. 'plus' → logprob: -3.593806266784668
    4. 'util' → logprob: -5.343806266784668
    5. '        ' → logprob: -5.593806266784668
    6. '       ' → logprob: -5.968806266784668
    7. 'comp' → logprob: -6.093806266784668
    8. 'tout' → logprob: -6.093806266784668
    9. 't' → logprob: -6.718806266784668
    10. ' compter' → logprob: -6.843806266784668

Token 1210: ' qu' (ID: 474)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -1.0042587518692017
    2. 'que' → logprob: -1.5042587518692017
    3. '       ' → logprob: -2.004258632659912
    4. 'pas' → logprob: -2.129258632659912
    5. '           ' → logprob: -3.504258632659912
    6. 'une' → logprob: -3.754258632659912
    7. '        ' → logprob: -4.129258632659912
    8. ' qu' → logprob: -4.879258632659912
    9. ' pas' → logprob: -5.129258632659912
    10. '         ' → logprob: -5.129258632659912

Token 1211: ''une' (ID: 13337)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.2795455753803253
    2. ''une' → logprob: -2.154545545578003
    3. 'que' → logprob: -3.654545545578003
    4. ' pas' → logprob: -3.779545545578003
    5. ' qu' → logprob: -4.279545783996582
    6. 'qu' → logprob: -4.529545783996582
    7. ' que' → logprob: -4.904545783996582
    8. ''un' → logprob: -5.154545783996582
    9. ' chaque' → logprob: -5.279545783996582
    10. 'pas' → logprob: -5.404545783996582

Token 1212: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.8624416589736938
    2. ' seule' → logprob: -0.8624416589736938
    3. 'fois' → logprob: -2.3624415397644043
    4. 'position' → logprob: -3.7374415397644043
    5. 'case' → logprob: -4.112441539764404
    6. ' case' → logprob: -4.487441539764404
    7. ' seul' → logprob: -6.362441539764404
    8. ' position' → logprob: -6.612441539764404
    9. 'space' → logprob: -7.112441539764404
    10. ' ' → logprob: -7.237441539764404

Token 1213: ' par' (ID: 686)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023330263793468475
    2. ' par' → logprob: -5.023330211639404
    3. 'per' → logprob: -5.523330211639404
    4. 'à' → logprob: -5.648330211639404
    5. 'par' → logprob: -6.148330211639404
    6. ' à' → logprob: -6.273330211639404
    7. 'for' → logprob: -6.398330211639404
    8. ' at' → logprob: -7.398330211639404
    9. 'pour' → logprob: -7.523330211639404
    10. ',' → logprob: -8.023330688476562

Token 1214: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.00202594674192369
    2. ' position' → logprob: -6.502026081085205
    3. 'start' → logprob: -8.877025604248047
    4. 'pos' → logprob: -9.127025604248047
    5. 'coord' → logprob: -9.252025604248047
    6. '(position' → logprob: -10.127025604248047
    7. ' (' → logprob: -10.377025604248047
    8. '(' → logprob: -10.377025604248047
    9. 'coordinate' → logprob: -11.252025604248047
    10. 'em' → logprob: -11.502025604248047

Token 1215: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012468450702726841
    2. '
' → logprob: -4.637468338012695
    3. '        
' → logprob: -6.512468338012695
    4. '.' → logprob: -7.887468338012695
    5. ',' → logprob: -7.887468338012695
    6. '<|end|>' → logprob: -8.887468338012695
    7. '.
' → logprob: -9.387468338012695
    8. ',
' → logprob: -9.887468338012695
    9. '   ' → logprob: -10.137468338012695
    10. '  
' → logprob: -10.512468338012695

Token 1216: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015375800430774689
    2. '        
' → logprob: -4.51537561416626
    3. '
' → logprob: -5.64037561416626
    4. '```' → logprob: -8.015376091003418
    5. '<|end|>' → logprob: -8.390376091003418
    6. '  
' → logprob: -9.765376091003418
    7. '    
' → logprob: -10.265376091003418
    8. ' 
' → logprob: -11.140376091003418
    9. '   ' → logprob: -11.265376091003418
    10. ' for' → logprob: -11.390376091003418

Token 1217: ' matched' (ID: 31366)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3129599392414093
    2. 'visited' → logprob: -2.312959909439087
    3. 'seen' → logprob: -2.312959909439087
    4. 'positions' → logprob: -2.937959909439087
    5. 'found' → logprob: -4.187960147857666
    6. '   ' → logprob: -7.437960147857666
    7. 'matched' (adapté à ' matched') → logprob: -8.062959671020508
    8. 'marked' → logprob: -8.187959671020508
    9. 'for' → logprob: -8.312959671020508
    10. 'used' → logprob: -8.437959671020508

Token 1218: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.001880923518911004
    2. '_pos' → logprob: -6.626881122589111
    3. ' =' → logprob: -7.751881122589111
    4. 'positions' → logprob: -9.251880645751953
    5. '=' → logprob: -11.126880645751953
    6. 'Positions' → logprob: -12.251880645751953
    7. 'pos' → logprob: -12.751880645751953
    8. '_set' → logprob: -13.251880645751953
    9. '=set' → logprob: -13.626880645751953
    10. '   ' → logprob: -14.501880645751953

Token 1219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519495487213135
    2. '=' → logprob: -1.5019495487213135
    3. '=set' → logprob: -10.876949310302734
    4. '   ' → logprob: -14.376949310302734
    5. '={}' → logprob: -14.876949310302734
    6. ' ' → logprob: -15.376949310302734
    7. '=[]' → logprob: -16.001949310302734
    8. '[' → logprob: -16.126949310302734
    9. '  ' → logprob: -16.876949310302734
    10. '    ' → logprob: -17.501949310302734

Token 1220: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.1472419600977446e-06
    2. ' set' → logprob: -13.750000953674316
    3. '{}' → logprob: -20.125001907348633
    4. '=set' → logprob: -21.000001907348633
    5. '	set' → logprob: -21.750001907348633
    6. '{' → logprob: -22.250001907348633
    7. '   ' → logprob: -22.750001907348633
    8. ')set' → logprob: -23.375001907348633
    9. '(set' → logprob: -24.375001907348633
    10. ' ' → logprob: -25.000001907348633

Token 1221: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.43154358863830566
    2. '()
' → logprob: -1.0565435886383057
    3. '((' → logprob: -6.556543350219727
    4. '       ' → logprob: -7.556543350219727
    5. '(' → logprob: -7.681543350219727
    6. '()

' → logprob: -8.931543350219727
    7. '(start' → logprob: -9.056543350219727
    8. '()\' → logprob: -9.681543350219727
    9. '()
' → logprob: -10.681543350219727
    10. '   ' → logprob: -11.056543350219727

Token 1222: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2270703911781311
    2. '
' → logprob: -2.1020703315734863
    3. '   ' → logprob: -3.2270703315734863
    4. '        
' → logprob: -3.8520703315734863
    5. '    
' → logprob: -4.102070331573486
    6. '  
' → logprob: -6.602070331573486
    7. ' 
' → logprob: -6.852070331573486
    8. '<|end|>' → logprob: -8.227070808410645
    9. ' for' → logprob: -8.977070808410645
    10. '   
' → logprob: -9.102070808410645

Token 1223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016229959146585315
    2. '   ' → logprob: -8.750162124633789
    3. 'for' → logprob: -13.250162124633789
    4. '
' → logprob: -14.250162124633789
    5. '        
' → logprob: -15.000162124633789
    6. '```' → logprob: -15.000162124633789
    7. ' for' → logprob: -15.250162124633789
    8. '           ' → logprob: -15.625162124633789
    9. ' ' → logprob: -16.37516212463379
    10. 'while' → logprob: -16.50016212463379

Token 1224: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004271665588021278
    2. '       ' → logprob: -5.504271507263184
    3. ' for' → logprob: -8.629271507263184
    4. '   ' → logprob: -12.004271507263184
    5. 'while' → logprob: -12.004271507263184
    6. '```' → logprob: -13.629271507263184
    7. '
' → logprob: -14.629271507263184
    8. '	for' → logprob: -15.379271507263184
    9. '``' → logprob: -16.5042724609375
    10. '        
' → logprob: -17.0042724609375

Token 1225: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0012263007229194045
    2. 'start' → logprob: -7.376226425170898
    3. ' i' → logprob: -7.751226425170898
    4. 'y' → logprob: -9.626226425170898
    5. 'x' → logprob: -10.001226425170898
    6. 'top' → logprob: -11.126226425170898
    7. '_i' → logprob: -11.251226425170898
    8. 'row' → logprob: -11.751226425170898
    9. 'si' → logprob: -11.751226425170898
    10. 'pos' → logprob: -11.876226425170898

Token 1226: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008659723214805126
    2. 'in' → logprob: -4.758659839630127
    3. ',' → logprob: -10.883659362792969
    4. ' ' → logprob: -11.633659362792969
    5. ' ,' → logprob: -12.508659362792969
    6. '_in' → logprob: -12.758659362792969
    7. '	in' → logprob: -13.133659362792969
    8. '<|end|>' → logprob: -13.258659362792969
    9. '   ' → logprob: -13.383659362792969
    10. ' ' → logprob: -14.258659362792969

Token 1227: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009114635176956654
    2. ' range' → logprob: -7.000911235809326
    3. '0' → logprob: -17.250911712646484
    4. '   ' → logprob: -17.625911712646484
    5. ' ' → logprob: -18.625911712646484
    6. '	range' → logprob: -20.000911712646484
    7. '(range' → logprob: -20.125911712646484
    8. 'in' → logprob: -20.375911712646484
    9. 'r' → logprob: -20.750911712646484
    10. '
' → logprob: -21.375911712646484

Token 1228: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.08672469854354858
    2. 'h' → logprob: -3.2117247581481934
    3. '0' → logprob: -3.3367247581481934
    4. '(' → logprob: -5.211724758148193
    5. ' h' → logprob: -6.711724758148193
    6. ' (' → logprob: -8.211724281311035
    7. '   ' → logprob: -8.961724281311035
    8. ')' → logprob: -10.211724281311035
    9. ' ' → logprob: -10.211724281311035
    10. '       ' → logprob: -10.336724281311035

Token 1229: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5231983065605164
    2. '):
' → logprob: -1.7731983661651611
    3. '):' → logprob: -2.023198366165161
    4. '-' → logprob: -2.773198366165161
    5. '+' → logprob: -3.773198366165161
    6. ' +' → logprob: -5.648198127746582
    7. '   ' → logprob: -5.898198127746582
    8. '       ' → logprob: -5.898198127746582
    9. ',' → logprob: -6.023198127746582
    10. ')' → logprob: -6.398198127746582

Token 1230: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00017970333283301443
    2. ' p' → logprob: -8.625179290771484
    3. '(p' → logprob: -16.625179290771484
    4. '   ' → logprob: -17.625179290771484
    5. ' ' → logprob: -18.250179290771484
    6. ' (' → logprob: -18.375179290771484
    7. '<p' → logprob: -19.375179290771484
    8. '       ' → logprob: -19.375179290771484
    9. '...' → logprob: -20.125179290771484
    10. '(' → logprob: -20.125179290771484

Token 1231: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.043002620339393616
    2. ' +' → logprob: -3.1680026054382324
    3. '   ' → logprob: -13.66800308227539
    4. '):
' → logprob: -13.91800308227539
    5. '+
' → logprob: -14.16800308227539
    6. '):' → logprob: -15.16800308227539
    7. '       ' → logprob: -15.79300308227539
    8. ' ' → logprob: -17.04300308227539
    9. '＋' → logprob: -17.04300308227539
    10. '-' → logprob: -17.16800308227539

Token 1232: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -16.00000762939453
    4. '
' → logprob: -17.50000762939453
    5. '```' → logprob: -17.87500762939453
    6. '+' → logprob: -18.12500762939453
    7. '{' → logprob: -18.62500762939453
    8. '0' → logprob: -18.68750762939453
    9. ')' → logprob: -18.75000762939453
    10. '  ' → logprob: -18.87500762939453

Token 1233: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -17.375
    4. '
' → logprob: -17.375
    5. '+' → logprob: -18.75
    6. '2' → logprob: -19.375
    7. '```' → logprob: -19.5625
    8. '{
' → logprob: -19.625
    9. '１' → logprob: -20.0
    10. '  ' → logprob: -20.0625

Token 1234: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.002344969194382429
    2. '):' → logprob: -6.127345085144043
    3. '       ' → logprob: -9.127345085144043
    4. '   ' → logprob: -10.502345085144043
    5. '):
' → logprob: -11.127345085144043
    6. '           ' → logprob: -12.627345085144043
    7. ' ):
' → logprob: -13.002345085144043
    8. ':
' → logprob: -14.002345085144043
    9. '):

' → logprob: -14.502345085144043
    10. ')' → logprob: -14.627345085144043

Token 1235: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024995112791657448
    2. '   ' → logprob: -4.52499532699585
    3. '           ' → logprob: -4.64999532699585
    4. ' for' → logprob: -5.64999532699585
    5. '<|end|>' → logprob: -7.52499532699585
    6. '               ' → logprob: -9.524994850158691
    7. '<|end|>' → logprob: -10.774994850158691
    8. ' ' → logprob: -10.899994850158691
    9. '	   ' → logprob: -10.899994850158691
    10. '	       ' → logprob: -11.024994850158691

Token 1236: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7500718832015991
    2. ' for' → logprob: -0.7500718832015991
    3. '           ' → logprob: -3.5000720024108887
    4. '   ' → logprob: -3.8750720024108887
    5. '               ' → logprob: -6.500072002410889
    6. 'for' (adapté à ' for') → logprob: -6.625072002410889
    7. '    ' → logprob: -7.875072002410889
    8. ' ' → logprob: -7.875072002410889
    9. '        ' → logprob: -8.50007152557373
    10. '	for' → logprob: -8.87507152557373

Token 1237: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.038043901324272156
    2. ' j' → logprob: -3.288043975830078
    3. '   ' → logprob: -13.413043975830078
    4. '    ' → logprob: -15.163043975830078
    5. '           ' → logprob: -15.413043975830078
    6. '       ' → logprob: -15.788043975830078
    7. '_j' → logprob: -16.288043975830078
    8. '	j' → logprob: -16.538043975830078
    9. ' ' → logprob: -16.913043975830078
    10. '     ' → logprob: -17.413043975830078

Token 1238: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11329640448093414
    2. 'in' → logprob: -2.2382965087890625
    3. '<|end|>' → logprob: -7.9882965087890625
    4. '<|end|>' → logprob: -10.113296508789062
    5. ' ' → logprob: -10.363296508789062
    6. ')' → logprob: -11.238296508789062
    7. 'In' → logprob: -11.613296508789062
    8. '_in' → logprob: -11.863296508789062
    9. '=' → logprob: -12.488296508789062
    10. 'for' → logprob: -12.738296508789062

Token 1239: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014163863845169544
    2. ' range' → logprob: -4.264163970947266
    3. '0' → logprob: -15.264163970947266
    4. '(range' → logprob: -16.014163970947266
    5. ' ' → logprob: -18.514163970947266
    6. '(' → logprob: -19.889163970947266
    7. '	range' → logprob: -20.264163970947266
    8. '   ' → logprob: -20.764163970947266
    9. ')' → logprob: -21.889163970947266
    10. '_range' → logprob: -22.389163970947266

Token 1240: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.023266442120075226
    2. 'w' → logprob: -3.773266553878784
    3. ' w' → logprob: -11.148266792297363
    4. '0' → logprob: -12.523266792297363
    5. '=w' → logprob: -14.148266792297363
    6. '(' → logprob: -14.398266792297363
    7. '[w' → logprob: -14.398266792297363
    8. ' (' → logprob: -15.398266792297363
    9. '<w' → logprob: -15.523266792297363
    10. 'range' → logprob: -15.898266792297363

Token 1241: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7100061774253845
    2. ' +' → logprob: -0.7100061774253845
    3. ',' → logprob: -4.710006237030029
    4. '           ' → logprob: -5.585006237030029
    5. '<|end|>' → logprob: -6.835006237030029
    6. '   ' → logprob: -7.085006237030029
    7. '<|end|>' → logprob: -7.960006237030029
    8. ')' → logprob: -7.960006237030029
    9. '               ' → logprob: -8.335005760192871
    10. '       ' → logprob: -8.960005760192871

Token 1242: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00033558503491804004
    2. ' p' → logprob: -8.000335693359375
    3. '           ' → logprob: -17.500335693359375
    4. '   ' → logprob: -17.750335693359375
    5. '(p' → logprob: -18.125335693359375
    6. '       ' → logprob: -18.250335693359375
    7. '<p' → logprob: -18.625335693359375
    8. ' ' → logprob: -18.625335693359375
    9. ')' → logprob: -18.750335693359375
    10. ')p' → logprob: -20.000335693359375

Token 1243: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029751067981123924
    2. ' +' → logprob: -3.5297510623931885
    3. ')' → logprob: -15.52975082397461
    4. '+)' → logprob: -16.65475082397461
    5. '           ' → logprob: -16.77975082397461
    6. '＋' → logprob: -17.02975082397461
    7. '1' → logprob: -17.15475082397461
    8. ')+' → logprob: -17.15475082397461
    9. '       ' → logprob: -17.77975082397461
    10. '+j' → logprob: -17.90475082397461

Token 1244: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.822646693966817e-06
    2. ' ' → logprob: -12.125007629394531
    3. '+' → logprob: -13.750007629394531
    4. 'p' → logprob: -13.875007629394531
    5. '0' → logprob: -16.68750762939453
    6. '   ' → logprob: -16.75000762939453
    7. '```' → logprob: -17.31250762939453
    8. ')' → logprob: -17.43750762939453
    9. '{' → logprob: -18.18750762939453
    10. '
' → logprob: -18.56250762939453

Token 1245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. '+' → logprob: -13.000003814697266
    3. ' ' → logprob: -13.375003814697266
    4. '   ' → logprob: -18.125003814697266
    5. '0' → logprob: -19.000003814697266
    6. ' +' → logprob: -19.375003814697266
    7. '```' → logprob: -19.375003814697266
    8. 'p' → logprob: -19.812503814697266
    9. ')' → logprob: -20.187503814697266
    10. '１' → logprob: -20.750003814697266

Token 1246: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2808256149291992
    2. '):' → logprob: -2.405825614929199
    3. ':' → logprob: -2.530825614929199
    4. '               ' → logprob: -3.155825614929199
    5. ':
' → logprob: -4.030825614929199
    6. '           ' → logprob: -4.530825614929199
    7. ')' → logprob: -6.155825614929199
    8. '       ' → logprob: -7.655825614929199
    9. '                       ' → logprob: -8.6558256149292
    10. '):
' → logprob: -8.7808256149292

Token 1247: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005189551156945527
    2. '           ' → logprob: -8.625518798828125
    3. '       ' → logprob: -9.125518798828125
    4. '<|end|>' → logprob: -9.500518798828125
    5. '                   ' → logprob: -9.875518798828125
    6. '```' → logprob: -10.500518798828125
    7. ' token' → logprob: -11.125518798828125
    8. '                       ' → logprob: -11.250518798828125
    9. '   ' → logprob: -11.250518798828125
    10. ' for' → logprob: -11.750518798828125

Token 1248: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8170615434646606
    2. ' for' → logprob: -0.9420615434646606
    3. ' found' → logprob: -2.442061424255371
    4. 'for' → logprob: -3.317061424255371
    5. 'found' → logprob: -4.317061424255371
    6. '   ' → logprob: -4.442061424255371
    7. ' if' → logprob: -4.442061424255371
    8. '               ' → logprob: -6.192061424255371
    9. ' matched' → logprob: -6.192061424255371
    10. 'if' → logprob: -6.317061424255371

Token 1249: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7116320729255676
    2. 'found' → logprob: -0.7116320729255676
    3. 'if' → logprob: -4.336632251739502
    4. 'matched' → logprob: -6.086632251739502
    5. 'match' → logprob: -6.461632251739502
    6. '                   ' → logprob: -7.711632251739502
    7. '               ' → logprob: -7.836632251739502
    8. ' for' → logprob: -7.961632251739502
    9. ' found' → logprob: -8.961631774902344
    10. 'matches' → logprob: -10.836631774902344

Token 1250: ' la' (ID: 557)
  Prédit: 'variant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'variant' → logprob: -0.19355668127536774
    2. 'var' → logprob: -2.443556785583496
    3. ' variant' → logprob: -2.818556785583496
    4. 'pattern' → logprob: -3.818556785583496
    5. 'pos' → logprob: -5.693556785583496
    6. ' var' → logprob: -5.943556785583496
    7. ' pattern' → logprob: -7.318556785583496
    8. 'pat' → logprob: -8.318556785583496
    9. '_variant' → logprob: -9.443556785583496
    10. 'position' → logprob: -9.568556785583496

Token 1251: ' position' (ID: 4010)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.10667344927787781
    2. 'var' → logprob: -3.1066734790802
    3. 'pattern' → logprob: -3.8566734790802
    4. 'variant' → logprob: -3.9816734790802
    5. ' pos' → logprob: -4.981673240661621
    6. 'position' → logprob: -5.106673240661621
    7. ' variant' → logprob: -6.856673240661621
    8. ' var' → logprob: -7.106673240661621
    9. ' pattern' → logprob: -7.606673240661621
    10. 'pat' → logprob: -8.356673240661621

Token 1252: ' (' (ID: 350)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.5724326968193054
    2. 'pos' → logprob: -1.0724327564239502
    3. '               ' → logprob: -3.94743275642395
    4. ' pattern' → logprob: -3.94743275642395
    5. 'pattern' → logprob: -4.572432518005371
    6. ' in' → logprob: -4.822432518005371
    7. ',' → logprob: -5.072432518005371
    8. '                   ' → logprob: -5.447432518005371
    9. ' (' → logprob: -5.447432518005371
    10. ' if' → logprob: -5.822432518005371

Token 1253: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.167648876318708e-05
    2. ' i' → logprob: -10.125041961669922
    3. '               ' → logprob: -14.625041961669922
    4. '                   ' → logprob: -14.625041961669922
    5. ')' → logprob: -14.875041961669922
    6. '),' → logprob: -16.375041961669922
    7. ')i' → logprob: -16.625041961669922
    8. ',' → logprob: -17.500041961669922
    9. '                 ' → logprob: -17.625041961669922
    10. '                ' → logprob: -18.000041961669922

Token 1254: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11391196399927139
    2. ',j' → logprob: -2.3639118671417236
    3. ' ,' → logprob: -4.363912105560303
    4. ')' → logprob: -8.363911628723145
    5. '               ' → logprob: -8.488911628723145
    6. '                   ' → logprob: -8.738911628723145
    7. '),' → logprob: -10.238911628723145
    8. '                           ' → logprob: -10.488911628723145
    9. ',n' → logprob: -10.738911628723145
    10. '):
' → logprob: -10.863911628723145

Token 1255: '),' (ID: 936)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7840843200683594
    2. '):' → logprob: -1.4090843200683594
    3. '                   ' → logprob: -1.9090843200683594
    4. '               ' → logprob: -2.9090843200683594
    5. ',' → logprob: -3.0340843200683594
    6. ')' → logprob: -3.5340843200683594
    7. '),' → logprob: -4.159084320068359
    8. ':' → logprob: -6.909084320068359
    9. '):

' → logprob: -7.659084320068359
    10. ':
' → logprob: -7.909084320068359

Token 1256: ' verifier' (ID: 175562)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5852468013763428
    2. 'for' → logprob: -1.3352468013763428
    3. '                   ' → logprob: -2.3352468013763428
    4. 'found' → logprob: -3.5852468013763428
    5. '               ' → logprob: -3.9602468013763428
    6. ' found' → logprob: -3.9602468013763428
    7. ' if' → logprob: -5.335247039794922
    8. 'if' → logprob: -5.585247039794922
    9. 'token' → logprob: -5.585247039794922
    10. ':' → logprob: -6.210247039794922

Token 1257: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.48246362805366516
    2. ' any' → logprob: -1.4824635982513428
    3. 'if' → logprob: -2.7324635982513428
    4. '                   ' → logprob: -3.7324635982513428
    5. '               ' → logprob: -3.8574635982513428
    6. 'any' → logprob: -3.9824635982513428
    7. ' for' → logprob: -4.357463836669922
    8. 'for' → logprob: -4.857463836669922
    9. '                       ' → logprob: -6.357463836669922
    10. ' not' → logprob: -6.732463836669922

Token 1258: ' elle' (ID: 11451)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.993449866771698
    2. '(i' → logprob: -0.993449866771698
    3. '(any' → logprob: -2.3684499263763428
    4. '(j' → logprob: -2.8684499263763428
    5. ' any' → logprob: -2.8684499263763428
    6. ' (' → logprob: -3.2434499263763428
    7. '(image' → logprob: -5.993449687957764
    8. '(not' → logprob: -6.118449687957764
    9. '(pattern' → logprob: -6.368449687957764
    10. 'pattern' → logprob: -6.618449687957764

Token 1259: ' correspond' (ID: 11095)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6144705414772034
    2. ' not' → logprob: -0.9894705414772034
    3. 'in' → logprob: -2.9894704818725586
    4. 'not' → logprob: -3.6144704818725586
    5. ' dans' → logprob: -5.489470481872559
    6. ' is' → logprob: -7.239470481872559
    7. 'dans' → logprob: -7.364470481872559
    8. ' pas' → logprob: -7.364470481872559
    9. ' en' → logprob: -7.489470481872559
    10. 'en' → logprob: -7.614470481872559

Token 1260: ' à' (ID: 1221)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1330857276916504
    2. '                   ' → logprob: -1.1330857276916504
    3. ' à' → logprob: -1.8830857276916504
    4. '<|end|>' → logprob: -3.0080857276916504
    5. ' aux' → logprob: -3.5080857276916504
    6. ' to' → logprob: -3.5080857276916504
    7. '                ' → logprob: -3.8830857276916504
    8. '                       ' → logprob: -4.88308572769165
    9. 'to' → logprob: -4.88308572769165
    10. 'à' → logprob: -5.00808572769165

Token 1261: ' un' (ID: 537)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.1466177999973297
    2. 'True' → logprob: -2.271617889404297
    3. 'False' → logprob: -3.646617889404297
    4. ' any' → logprob: -5.396617889404297
    5. ' True' → logprob: -6.771617889404297
    6. 'matched' → logprob: -7.771617889404297
    7. 'une' → logprob: -8.146617889404297
    8. '   ' → logprob: -8.271617889404297
    9. ' False' → logprob: -8.896617889404297
    10. 'not' → logprob: -9.896617889404297

Token 1262: ' des' (ID: 731)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.5044211745262146
    2. ' pattern' → logprob: -1.0044212341308594
    3. 'variant' → logprob: -4.629421234130859
    4. ' variant' → logprob: -4.629421234130859
    5. ' des' → logprob: -5.879421234130859
    6. ' match' → logprob: -6.254421234130859
    7. 'match' → logprob: -6.254421234130859
    8. 'any' → logprob: -6.629421234130859
    9. ' any' → logprob: -7.004421234130859
    10. ' quelcon' → logprob: -7.754421234130859

Token 1263: ' patterns' (ID: 18587)
  Prédit: ' pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.26227572560310364
    2. 'pattern' → logprob: -1.5122756958007812
    3. ' variants' → logprob: -5.012275695800781
    4. 'patterns' → logprob: -6.512275695800781
    5. ' patterns' → logprob: -6.637275695800781
    6. 'variants' → logprob: -7.887275695800781
    7. ' variant' → logprob: -8.887275695800781
    8. ' variantes' → logprob: -8.887275695800781
    9. 'variant' → logprob: -10.137275695800781
    10. '_pattern' → logprob: -10.762275695800781

Token 1264: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06377693265676498
    2. ':' → logprob: -3.438776969909668
    3. '                   ' → logprob: -3.688776969909668
    4. ':
' → logprob: -6.188776969909668
    5. '.' → logprob: -7.063776969909668
    6. '                       ' → logprob: -8.313776969909668
    7. '                
' → logprob: -8.938776969909668
    8. ' :' → logprob: -8.938776969909668
    9. 'var' → logprob: -8.938776969909668
    10. '_vari' → logprob: -9.188776969909668

Token 1265: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1693599373102188
    2. '                   ' → logprob: -1.9193599224090576
    3. ':' → logprob: -5.044360160827637
    4. ':
' → logprob: -6.669360160827637
    5. '                       ' → logprob: -7.794360160827637
    6. ' :' → logprob: -8.544360160827637
    7. ',' → logprob: -8.919360160827637
    8. '```' → logprob: -9.294360160827637
    9. ' or' → logprob: -9.794360160827637
    10. '.' → logprob: -9.794360160827637

Token 1266: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.496352881193161
    2. ' for' → logprob: -0.9963529109954834
    3. 'for' → logprob: -3.8713529109954834
    4. '                   ' → logprob: -6.871352672576904
    5. ' found' → logprob: -9.496353149414062
    6. '   ' → logprob: -10.746353149414062
    7. ' if' → logprob: -11.371353149414062
    8. 'found' → logprob: -11.871353149414062
    9. '	for' → logprob: -11.996353149414062
    10. '           ' → logprob: -11.996353149414062

Token 1267: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.06476334482431412
    2. 'any' → logprob: -3.439763307571411
    3. ' (' → logprob: -4.68976354598999
    4. '(j' → logprob: -4.81476354598999
    5. '(any' → logprob: -4.93976354598999
    6. ' any' → logprob: -5.56476354598999
    7. 'not' → logprob: -7.93976354598999
    8. '(not' → logprob: -8.189763069152832
    9. 'pattern' → logprob: -8.439763069152832
    10. '(' → logprob: -8.439763069152832

Token 1268: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.114600834436715e-05
    2. '                   ' → logprob: -10.000091552734375
    3. ' i' → logprob: -11.250091552734375
    4. '(i' → logprob: -11.625091552734375
    5. '               ' → logprob: -11.875091552734375
    6. '   ' → logprob: -12.750091552734375
    7. '                           ' → logprob: -12.875091552734375
    8. 'not' → logprob: -13.000091552734375
    9. ')' → logprob: -13.125091552734375
    10. '                       ' → logprob: -13.250091552734375

Token 1269: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025794951245188713
    2. ',j' → logprob: -3.9007949829101562
    3. ' ,' → logprob: -5.275794982910156
    4. ',i' → logprob: -9.275794982910156
    5. ',y' → logprob: -12.650794982910156
    6. ',n' → logprob: -12.650794982910156
    7. ',
' → logprob: -12.775794982910156
    8. '           ' → logprob: -13.150794982910156
    9. '   ' → logprob: -13.400794982910156
    10. ',p' → logprob: -13.400794982910156

Token 1270: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011647999286651611
    2. ' not' → logprob: -5.136648178100586
    3. ' in' → logprob: -5.636648178100586
    4. ' )' → logprob: -6.886648178100586
    5. 'in' → logprob: -7.386648178100586
    6. 'not' → logprob: -7.636648178100586
    7. ')==' → logprob: -12.636648178100586
    8. '<|end|>' → logprob: -13.261648178100586
    9. ',)' → logprob: -13.511648178100586
    10. ',' → logprob: -13.511648178100586

Token 1271: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3083210289478302
    2. ' in' → logprob: -1.4333209991455078
    3. 'in' → logprob: -3.933320999145508
    4. 'not' → logprob: -4.933320999145508
    5. ')' → logprob: -11.558320999145508
    6. '	not' → logprob: -11.933320999145508
    7. '<|end|>' → logprob: -12.808320999145508
    8. ' ' → logprob: -13.183320999145508
    9. ' )' → logprob: -14.058320999145508
    10. '_in' → logprob: -14.183320999145508

Token 1272: ' matched' (ID: 31366)
  Prédit: 'matched'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matched' → logprob: -0.0001234428636962548
    2. ' matched' → logprob: -9.000123023986816
    3. '   ' → logprob: -17.625123977661133
    4. '           ' → logprob: -19.875123977661133
    5. 'm' → logprob: -20.125123977661133
    6. 'matching' → logprob: -20.375123977661133
    7. 'matches' → logprob: -20.500123977661133
    8. 'mat' → logprob: -21.375123977661133
    9. 'mapped' → logprob: -21.375123977661133
    10. '       ' → logprob: -21.375123977661133

Token 1273: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -7.3458322731312364e-06
    2. '_pos' → logprob: -12.375007629394531
    3. 'positions' → logprob: -13.125007629394531
    4. '_' → logprob: -14.625007629394531
    5. ' _' → logprob: -16.12500762939453
    6. '_position' → logprob: -16.50000762939453
    7. 'Positions' → logprob: -16.62500762939453
    8. '
' → logprob: -16.62500762939453
    9. ')' → logprob: -16.87500762939453
    10. ' positions' → logprob: -17.62500762939453

Token 1274: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2943662703037262
    2. ':
' → logprob: -1.9193662405014038
    3. '                   ' → logprob: -2.2943663597106934
    4. '               ' → logprob: -5.669366359710693
    5. ' continue' → logprob: -6.794366359710693
    6. ':return' → logprob: -7.294366359710693
    7. '                       ' → logprob: -7.794366359710693
    8. '==' → logprob: -7.919366359710693
    9. '                           ' → logprob: -8.419365882873535
    10. ' or' → logprob: -8.669365882873535

Token 1275: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009777694940567017
    2. '                       ' → logprob: -5.384777545928955
    3. '                    ' → logprob: -6.384777545928955
    4. '                ' → logprob: -7.009777545928955
    5. '               ' → logprob: -7.009777545928955
    6. '                           ' → logprob: -7.759777545928955
    7. '                  ' → logprob: -8.509778022766113
    8. ':' → logprob: -8.634778022766113
    9. '                               ' → logprob: -8.759778022766113
    10. ' continue' → logprob: -8.884778022766113

Token 1276: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.6504790186882019
    2. '                   ' → logprob: -0.9004790186882019
    3. '                       ' → logprob: -3.0254790782928467
    4. ' continue' → logprob: -3.7754790782928467
    5. '               ' → logprob: -8.400479316711426
    6. '   ' → logprob: -10.400479316711426
    7. '           ' → logprob: -10.650479316711426
    8. '```' → logprob: -10.650479316711426
    9. '                           ' → logprob: -10.900479316711426
    10. '       ' → logprob: -11.025479316711426

Token 1277: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005262456834316254
    2. '                
' → logprob: -6.25526237487793
    3. '                ' → logprob: -6.38026237487793
    4. '                   ' → logprob: -6.88026237487793
    5. '                    
' → logprob: -9.38026237487793
    6. '       ' → logprob: -9.63026237487793
    7. '           ' → logprob: -9.75526237487793
    8. ' 
' → logprob: -9.88026237487793
    9. '                       ' → logprob: -10.25526237487793
    10. '              ' → logprob: -10.38026237487793

Token 1278: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.690834273584187e-05
    2. '                
' → logprob: -10.62503719329834
    3. '                ' → logprob: -12.50003719329834
    4. '                   ' → logprob: -12.75003719329834
    5. '```' → logprob: -13.25003719329834
    6. ' for' → logprob: -13.87503719329834
    7. '       ' → logprob: -14.37503719329834
    8. '           ' → logprob: -15.00003719329834
    9. '              ' → logprob: -15.37503719329834
    10. '			' → logprob: -15.37503719329834

Token 1279: ' matched' (ID: 31366)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017015069723129272
    2. ' for' → logprob: -4.517014980316162
    3. 'for' → logprob: -5.142014980316162
    4. 'token' → logprob: -9.76701545715332
    5. 'found' → logprob: -10.76701545715332
    6. ' found' → logprob: -11.14201545715332
    7. ' token' → logprob: -12.51701545715332
    8. '                   ' → logprob: -13.14201545715332
    9. 'tokens' → logprob: -13.39201545715332
    10. '                
' → logprob: -14.14201545715332

Token 1280: ' =' (ID: 314)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.06039874628186226
    2. '_' → logprob: -3.560398817062378
    3. '_positions' → logprob: -3.560398817062378
    4. ' =' → logprob: -7.310398578643799
    5. 'At' → logprob: -8.435399055480957
    6. '=' → logprob: -8.935399055480957
    7. 'Positions' → logprob: -9.060399055480957
    8. '   ' → logprob: -9.185399055480957
    9. '_for' → logprob: -9.310399055480957
    10. 'at' → logprob: -9.435399055480957

Token 1281: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -5.848420551046729e-05
    2. 'any' → logprob: -10.0000581741333
    3. ' False' → logprob: -11.2500581741333
    4. '   ' → logprob: -17.750059127807617
    5. 'false' → logprob: -19.125059127807617
    6. 'True' → logprob: -19.875059127807617
    7. 'Any' → logprob: -20.000059127807617
    8. '(False' → logprob: -20.000059127807617
    9. '=False' → logprob: -20.625059127807617
    10. ' any' → logprob: -21.250059127807617

Token 1282: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00529257720336318
    2. '                ' → logprob: -6.2552924156188965
    3. '                   ' → logprob: -6.5052924156188965
    4. '<|end|>' → logprob: -7.3802924156188965
    5. ' for' → logprob: -7.5052924156188965
    6. '           ' → logprob: -8.505292892456055
    7. '                
' → logprob: -9.505292892456055
    8. '              ' → logprob: -9.880292892456055
    9. ')' → logprob: -9.880292892456055
    10. '       ' → logprob: -10.005292892456055

Token 1283: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005053732893429697
    2. '                   ' → logprob: -8.375505447387695
    3. '                ' → logprob: -8.625505447387695
    4. '           ' → logprob: -11.125505447387695
    5. ' for' → logprob: -11.125505447387695
    6. '       ' → logprob: -11.250505447387695
    7. '                
' → logprob: -11.250505447387695
    8. '<|end|>' → logprob: -11.750505447387695
    9. '```' → logprob: -11.875505447387695
    10. '              ' → logprob: -12.375505447387695

Token 1284: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4369334280490875
    2. ' for' → logprob: -1.0619333982467651
    3. 'for' (adapté à ' for') → logprob: -4.811933517456055
    4. '                   ' → logprob: -10.811933517456055
    5. '       ' → logprob: -11.311933517456055
    6. '	for' → logprob: -11.561933517456055
    7. '           ' → logprob: -11.686933517456055
    8. '   ' → logprob: -12.061933517456055
    9. '			' → logprob: -13.186933517456055
    10. '	           ' → logprob: -13.561933517456055

Token 1285: ' var' (ID: 972)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.13760212063789368
    2. 'variant' → logprob: -2.3876020908355713
    3. 'pat' → logprob: -3.3876020908355713
    4. 'var' → logprob: -5.88760232925415
    5. 'pv' → logprob: -9.512601852416992
    6. ' variant' → logprob: -10.262601852416992
    7. ' pattern' → logprob: -10.512601852416992
    8. 'p' → logprob: -12.387601852416992
    9. ' pat' → logprob: -14.262601852416992
    10. 'pt' → logprob: -15.387601852416992

Token 1286: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2223561853170395
    2. 'in' → logprob: -2.097356081008911
    3. '<|end|>' → logprob: -3.722356081008911
    4. '<|end|>' → logprob: -3.722356081008911
    5. '[' → logprob: -4.47235631942749
    6. '[token' → logprob: -4.97235631942749
    7. '_token' → logprob: -5.97235631942749
    8. ' =' → logprob: -7.22235631942749
    9. '[in' → logprob: -7.34735631942749
    10. '                   ' → logprob: -7.47235631942749

Token 1287: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -7.493430894101039e-05
    2. ' pattern' → logprob: -9.500075340270996
    3. '(pattern' → logprob: -17.12507438659668
    4. '   ' → logprob: -19.50007438659668
    5. 'patterns' → logprob: -20.50007438659668
    6. 'pat' → logprob: -20.62507438659668
    7. '       ' → logprob: -21.12507438659668
    8. 'generate' → logprob: -21.37507438659668
    9. '           ' → logprob: -21.50007438659668
    10. '[' → logprob: -22.12507438659668

Token 1288: '_vari' (ID: 94080)
  Prédit: '_vari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vari' → logprob: -1.9743012671824545e-05
    2. '_variant' → logprob: -11.500020027160645
    3. '_VARI' → logprob: -13.000020027160645
    4. 'variants' → logprob: -13.250020027160645
    5. ':' → logprob: -13.375020027160645
    6. 's' → logprob: -13.750020027160645
    7. '                   ' → logprob: -14.250020027160645
    8. '_variables' → logprob: -14.750020027160645
    9. '_var' → logprob: -14.750020027160645
    10. '           ' → logprob: -15.000020027160645

Token 1289: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -3.128163257315464e-07
    2. 'ANTS' → logprob: -15.375
    3. 's' → logprob: -18.25
    4. 'ats' → logprob: -18.75
    5. 'antes' → logprob: -18.875
    6. 'ations' → logprob: -18.875
    7. 'nts' → logprob: -19.125
    8. ' ants' → logprob: -19.125
    9. 'ents' → logprob: -19.25
    10. 'variants' → logprob: -19.25

Token 1290: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10166587680578232
    2. ':
' → logprob: -2.47666597366333
    3. '                   ' → logprob: -4.60166597366333
    4. '<|end|>' → logprob: -6.72666597366333
    5. '               ' → logprob: -7.47666597366333
    6. '   ' → logprob: -8.351665496826172
    7. '<|end|>' → logprob: -8.476665496826172
    8. '[' → logprob: -9.976665496826172
    9. '                           ' → logprob: -10.101665496826172
    10. '():
' → logprob: -10.101665496826172

Token 1291: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0023729160893708467
    2. '               ' → logprob: -8.127372741699219
    3. '<|end|>' → logprob: -8.252372741699219
    4. '           ' → logprob: -8.377372741699219
    5. '                    ' → logprob: -8.377372741699219
    6. '                           ' → logprob: -8.502372741699219
    7. ' if' → logprob: -8.752372741699219
    8. '                    
' → logprob: -8.877372741699219
    9. '                  ' → logprob: -8.877372741699219
    10. '```' → logprob: -9.002372741699219

Token 1292: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6459335088729858
    2. '                   ' → logprob: -1.2709335088729858
    3. 'if' (adapté à ' if') → logprob: -1.6459335088729858
    4. '                       ' → logprob: -6.145933628082275
    5. '               ' → logprob: -9.770933151245117
    6. '                    ' → logprob: -10.145933151245117
    7. '                           ' → logprob: -10.145933151245117
    8. '           ' → logprob: -10.145933151245117
    9. '   ' → logprob: -10.770933151245117
    10. '                  ' → logprob: -11.145933151245117

Token 1293: ' match' (ID: 3981)
  Prédit: ' match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.20157763361930847
    2. 'match' → logprob: -1.7015776634216309
    3. '                   ' → logprob: -9.076577186584473
    4. '(match' → logprob: -10.451577186584473
    5. '                       ' → logprob: -11.326577186584473
    6. '               ' → logprob: -12.951577186584473
    7. '                    ' → logprob: -13.201577186584473
    8. '	match' → logprob: -13.576577186584473
    9. '                           ' → logprob: -13.951577186584473
    10. '   ' → logprob: -14.826577186584473

Token 1294: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.0486326739192009
    2. '_' → logprob: -3.0486326217651367
    3. '(var' → logprob: -11.048632621765137
    4. '                   ' → logprob: -11.548632621765137
    5. '_(' → logprob: -11.673632621765137
    6. '   ' → logprob: -13.173632621765137
    7. '               ' → logprob: -13.673632621765137
    8. '(' → logprob: -13.798632621765137
    9. ' _' → logprob: -13.798632621765137
    10. '_AT' → logprob: -14.048632621765137

Token 1295: '(image' (ID: 19974)
  Prédit: '(image'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(image' → logprob: -0.0008166544139385223
    2. '(' → logprob: -7.250816822052002
    3. ' (' → logprob: -9.875816345214844
    4. 'image' → logprob: -10.000816345214844
    5. ' image' → logprob: -12.000816345214844
    6. '(
' → logprob: -13.000816345214844
    7. ',image' → logprob: -14.500816345214844
    8. '=image' → logprob: -15.125816345214844
    9. ':image' → logprob: -15.875816345214844
    10. ')' → logprob: -15.875816345214844

Token 1296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002455322304740548
    2. ',i' → logprob: -6.127455234527588
    3. '                   ' → logprob: -9.127455711364746
    4. ',var' → logprob: -9.127455711364746
    5. ' ,' → logprob: -11.002455711364746
    6. ',(' → logprob: -11.252455711364746
    7. ',j' → logprob: -12.002455711364746
    8. ',user' → logprob: -12.752455711364746
    9. '               ' → logprob: -13.002455711364746
    10. ',image' → logprob: -13.002455711364746

Token 1297: ' var' (ID: 972)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.0067698415368795395
    2. ' var' → logprob: -5.00676965713501
    3. '                   ' → logprob: -10.006770133972168
    4. ')var' → logprob: -12.131770133972168
    5. '[var' → logprob: -12.631770133972168
    6. '                    ' → logprob: -15.381770133972168
    7. '                       ' → logprob: -16.25676918029785
    8. '                           ' → logprob: -16.25676918029785
    9. '(var' → logprob: -16.38176918029785
    10. ',var' → logprob: -16.63176918029785

Token 1298: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004099177662283182
    2. ',i' → logprob: -5.504099369049072
    3. '                   ' → logprob: -11.754098892211914
    4. ' ,' → logprob: -11.754098892211914
    5. ',j' → logprob: -12.629098892211914
    6. '                           ' → logprob: -14.879098892211914
    7. ',start' → logprob: -15.129098892211914
    8. '                       ' → logprob: -15.254098892211914
    9. ',n' → logprob: -15.879098892211914
    10. '(i' → logprob: -16.254098892211914

Token 1299: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009165783412754536
    2. ' i' → logprob: -7.000916481018066
    3. '                   ' → logprob: -12.250916481018066
    4. '                       ' → logprob: -15.750916481018066
    5. '                           ' → logprob: -16.375917434692383
    6. '                               ' → logprob: -17.375917434692383
    7. '   ' → logprob: -17.875917434692383
    8. ')' → logprob: -17.875917434692383
    9. '                    ' → logprob: -18.250917434692383
    10. '```' → logprob: -18.250917434692383

Token 1300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020571785047650337
    2. ',j' → logprob: -3.895571708679199
    3. ' ,' → logprob: -10.5205717086792
    4. '                   ' → logprob: -13.5205717086792
    5. ',i' → logprob: -14.8955717086792
    6. '                           ' → logprob: -15.0205717086792
    7. ',n' → logprob: -16.270572662353516
    8. ',p' → logprob: -16.395572662353516
    9. ',user' → logprob: -16.645572662353516
    10. ',next' → logprob: -16.645572662353516

Token 1301: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.4391956685576588e-05
    2. ' j' → logprob: -10.625024795532227
    3. '                   ' → logprob: -16.875024795532227
    4. '```' → logprob: -19.250024795532227
    5. '_j' → logprob: -19.625024795532227
    6. '	j' → logprob: -19.750024795532227
    7. '$j' → logprob: -19.750024795532227
    8. '                       ' → logprob: -19.875024795532227
    9. ',j' → logprob: -20.125024795532227
    10. '[j' → logprob: -20.125024795532227

Token 1302: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25773751735687256
    2. '):' → logprob: -1.5077375173568726
    3. '                       ' → logprob: -5.507737636566162
    4. '                   ' → logprob: -7.007737636566162
    5. ')' → logprob: -7.382737636566162
    6. ':' → logprob: -9.757737159729004
    7. ')==' → logprob: -10.382737159729004
    8. ':
' → logprob: -10.882737159729004
    9. '):
' → logprob: -10.882737159729004
    10. '                           ' → logprob: -11.132737159729004

Token 1303: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0028254427015781403
    2. '                           ' → logprob: -6.8778252601623535
    3. '                               ' → logprob: -7.0028252601623535
    4. '                   ' → logprob: -8.002825736999512
    5. '<|end|>' → logprob: -9.002825736999512
    6. '                        ' → logprob: -9.502825736999512
    7. '                      ' → logprob: -9.752825736999512
    8. '               ' → logprob: -10.002825736999512
    9. '                        
' → logprob: -10.002825736999512
    10. '       ' → logprob: -10.002825736999512

Token 1304: ' matched' (ID: 31366)
  Prédit: 'matched'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matched' (adapté à ' matched') → logprob: -0.12354201823472977
    2. ' matched' → logprob: -2.373542070388794
    3. '                       ' → logprob: -4.123541831970215
    4. '                           ' → logprob: -5.373541831970215
    5. '                   ' → logprob: -6.123541831970215
    6. '               ' → logprob: -11.123541831970215
    7. '                               ' → logprob: -11.373541831970215
    8. 'count' → logprob: -11.498541831970215
    9. '           ' → logprob: -12.123541831970215
    10. '   ' → logprob: -12.623541831970215

Token 1305: ' =' (ID: 314)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.18016363680362701
    2. '                           ' → logprob: -2.305163621902466
    3. ':
' → logprob: -3.430163621902466
    4. '                       ' → logprob: -4.305163860321045
    5. '                   ' → logprob: -4.555163860321045
    6. ' =' → logprob: -5.430163860321045
    7. '               ' → logprob: -6.930163860321045
    8. '           ' → logprob: -7.430163860321045
    9. '                               ' → logprob: -7.680163860321045
    10. '):
' → logprob: -7.680163860321045

Token 1306: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -6.704273118884885e-07
    2. ' True' → logprob: -14.250000953674316
    3. 'true' → logprob: -19.5
    4. '=True' → logprob: -20.125
    5. '   ' → logprob: -20.625
    6. '(True' → logprob: -22.0
    7. 'Tr' → logprob: -23.5
    8. '           ' → logprob: -23.5
    9. '       ' → logprob: -23.625
    10. '_true' → logprob: -23.75

Token 1307: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.014911303296685219
    2. '                           ' → logprob: -4.26491117477417
    3. '                   ' → logprob: -8.264911651611328
    4. '                        
' → logprob: -8.514911651611328
    5. '                        ' → logprob: -9.639911651611328
    6. '               ' → logprob: -9.764911651611328
    7. '                               ' → logprob: -10.014911651611328
    8. '<|end|>' → logprob: -10.014911651611328
    9. '           ' → logprob: -10.639911651611328
    10. ':
' → logprob: -11.889911651611328

Token 1308: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.003216214943677187
    2. '                           ' → logprob: -5.87821626663208
    3. '                               ' → logprob: -9.253215789794922
    4. '                        
' → logprob: -9.253215789794922
    5. '```' → logprob: -10.003215789794922
    6. '                   ' → logprob: -10.003215789794922
    7. '                        ' → logprob: -10.253215789794922
    8. '               ' → logprob: -10.253215789794922
    9. '<|end|>' → logprob: -10.378215789794922
    10. '           ' → logprob: -11.378215789794922

Token 1309: ' break' (ID: 2338)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4656902849674225
    2. 'matched' → logprob: -1.4656902551651
    3. ' matched' → logprob: -2.2156903743743896
    4. '                           ' → logprob: -3.7156903743743896
    5. '                   ' → logprob: -5.4656901359558105
    6. 'break' (adapté à ' break') → logprob: -5.8406901359558105
    7. '               ' → logprob: -7.9656901359558105
    8. ' break' → logprob: -8.215690612792969
    9. '                               ' → logprob: -8.965690612792969
    10. '           ' → logprob: -9.715690612792969

Token 1310: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03182275965809822
    2. '                       ' → logprob: -4.531822681427002
    3. '                        
' → logprob: -5.031822681427002
    4. '           ' → logprob: -5.281822681427002
    5. '                
' → logprob: -5.531822681427002
    6. '
' → logprob: -5.781822681427002
    7. '            
' → logprob: -7.656822681427002
    8. '       ' → logprob: -7.781822681427002
    9. '                   ' → logprob: -7.781822681427002
    10. '        
' → logprob: -9.03182315826416

Token 1311: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004558884538710117
    2. '                       ' → logprob: -5.50455904006958
    3. '           ' → logprob: -8.254558563232422
    4. '                   ' → logprob: -9.379558563232422
    5. '       ' → logprob: -9.629558563232422
    6. '```' → logprob: -10.379558563232422
    7. '                        
' → logprob: -11.004558563232422
    8. '                
' → logprob: -12.004558563232422
    9. '
' → logprob: -12.129558563232422
    10. '                           ' → logprob: -12.754558563232422

Token 1312: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007365014404058456
    2. 'if' (adapté à ' if') → logprob: -5.0073652267456055
    3. ' if' → logprob: -8.007365226745605
    4. '       ' → logprob: -8.632365226745605
    5. '           ' → logprob: -9.507365226745605
    6. '                   ' → logprob: -9.882365226745605
    7. '                       ' → logprob: -12.007365226745605
    8. '   ' → logprob: -12.257365226745605
    9. '```' → logprob: -14.007365226745605
    10. '​' → logprob: -14.882365226745605

Token 1313: ' matched' (ID: 31366)
  Prédit: ' matched'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matched' → logprob: -0.1602267622947693
    2. 'matched' → logprob: -1.910226821899414
    3. '                   ' → logprob: -14.285226821899414
    4. ' not' → logprob: -14.910226821899414
    5. '               ' → logprob: -14.910226821899414
    6. 'not' → logprob: -14.910226821899414
    7. '   ' → logprob: -15.160226821899414
    8. '           ' → logprob: -15.535226821899414
    9. ' True' → logprob: -16.410226821899414
    10. 'Matched' → logprob: -16.410226821899414

Token 1314: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4919385015964508
    2. ':
' → logprob: -1.2419384717941284
    3. ':' → logprob: -2.366938591003418
    4. '               ' → logprob: -6.241938591003418
    5. '                       ' → logprob: -6.366938591003418
    6. '                           ' → logprob: -6.741938591003418
    7. '           ' → logprob: -7.241938591003418
    8. '):
' → logprob: -8.991938591003418
    9. '                  ' → logprob: -9.616938591003418
    10. '                    ' → logprob: -10.616938591003418

Token 1315: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00012868782505393028
    2. '           ' → logprob: -10.000128746032715
    3. '               ' → logprob: -10.125128746032715
    4. ' matched' → logprob: -10.500128746032715
    5. '                       ' → logprob: -11.375128746032715
    6. '   ' → logprob: -13.375128746032715
    7. '```' → logprob: -14.250128746032715
    8. 'matched' → logprob: -14.375128746032715
    9. '                           ' → logprob: -15.250128746032715
    10. '		           ' → logprob: -15.375128746032715

Token 1316: ' count' (ID: 3605)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04616812244057655
    2. ' matched' → logprob: -3.421168088912964
    3. 'matched' → logprob: -4.546168327331543
    4. '                       ' → logprob: -6.671168327331543
    5. '               ' → logprob: -7.921168327331543
    6. '           ' → logprob: -9.046168327331543
    7. '   ' → logprob: -9.796168327331543
    8. '       ' → logprob: -11.296168327331543
    9. '                           ' → logprob: -11.796168327331543
    10. '```' → logprob: -12.296168327331543

Token 1317: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.18373028934001923
    2. '+=' → logprob: -1.8087302446365356
    3. '                   ' → logprob: -6.058730125427246
    4. '                       ' → logprob: -7.683730125427246
    5. '                           ' → logprob: -7.683730125427246
    6. '+' → logprob: -8.808730125427246
    7. '               ' → logprob: -9.183730125427246
    8. '           ' → logprob: -9.558730125427246
    9. ']+=' → logprob: -9.808730125427246
    10. '.' → logprob: -9.933730125427246

Token 1318: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '+' → logprob: -20.125709533691406
    4. ' ' → logprob: -20.375709533691406
    5. '```' → logprob: -20.500709533691406
    6. '   ' → logprob: -21.000709533691406
    7. ' +' → logprob: -21.125709533691406
    8. '۱' → logprob: -22.813209533691406
    9. ')' → logprob: -22.875709533691406
    10. '<|end|>' → logprob: -23.188209533691406

Token 1319: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '```' → logprob: -23.75
    4. '۱' → logprob: -25.125
    5. '１' → logprob: -25.625
    6. '+' → logprob: -25.75
    7. '
' → logprob: -26.25
    8. '   ' → logprob: -26.375
    9. '১' → logprob: -26.875
    10. '१' → logprob: -27.0

Token 1320: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0011653418187052011
    2. '
' → logprob: -7.626165390014648
    3. '           ' → logprob: -8.001165390014648
    4. ' matched' → logprob: -8.501165390014648
    5. '               ' → logprob: -9.751165390014648
    6. '```' → logprob: -10.251165390014648
    7. 'matched' → logprob: -10.751165390014648
    8. '                       ' → logprob: -11.626165390014648
    9. '       ' → logprob: -12.751165390014648
    10. '``' → logprob: -12.751165390014648

Token 1321: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0012435632525011897
    2. '           ' → logprob: -7.001243591308594
    3. '               ' → logprob: -8.501243591308594
    4. ' matched' → logprob: -9.626243591308594
    5. '       ' → logprob: -10.626243591308594
    6. '                       ' → logprob: -10.751243591308594
    7. '   ' → logprob: -12.001243591308594
    8. 'matched' → logprob: -12.376243591308594
    9. '```' → logprob: -12.876243591308594
    10. '
' → logprob: -13.626243591308594

Token 1322: ' matched' (ID: 31366)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6185517311096191
    2. 'matched' (adapté à ' matched') → logprob: -0.8685517311096191
    3. ' matched' → logprob: -3.368551731109619
    4. '           ' → logprob: -5.493551731109619
    5. '               ' → logprob: -5.993551731109619
    6. '                       ' → logprob: -8.368551254272461
    7. '       ' → logprob: -8.493551254272461
    8. '   ' → logprob: -8.618551254272461
    9. '                           ' → logprob: -10.868551254272461
    10. ' ' → logprob: -12.118551254272461

Token 1323: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -1.6240566083070007e-06
    2. 'positions' → logprob: -13.375001907348633
    3. 'Positions' → logprob: -18.000001907348633
    4. '_locations' → logprob: -18.500001907348633
    5. '```' → logprob: -18.625001907348633
    6. '\' → logprob: -19.000001907348633
    7. '_position' → logprob: -19.000001907348633
    8. '                   ' → logprob: -19.000001907348633
    9. ' positions' → logprob: -20.250001907348633
    10. '_pos' → logprob: -20.625001907348633

Token 1324: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -1.8670179997570813e-05
    2. '.' → logprob: -11.000019073486328
    3. 'add' → logprob: -13.250019073486328
    4. ' .' → logprob: -16.000019073486328
    5. '.update' → logprob: -16.875019073486328
    6. '.Add' → logprob: -17.500019073486328
    7. ')add' → logprob: -18.875019073486328
    8. '.append' → logprob: -19.375019073486328
    9. '	add' → logprob: -19.625019073486328
    10. ').' → logprob: -19.750019073486328

Token 1325: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.12707509100437164
    2. '(i' → logprob: -2.1270751953125
    3. ' (' → logprob: -9.5020751953125
    4. '(' → logprob: -9.6270751953125
    5. '   ' → logprob: -12.7520751953125
    6. ' ' → logprob: -13.7520751953125
    7. '(ii' → logprob: -14.1270751953125
    8. '  ' → logprob: -14.7520751953125
    9. '(j' → logprob: -14.7520751953125
    10. '(
' → logprob: -15.3770751953125

Token 1326: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.512236498361744e-07
    2. ' i' → logprob: -15.125000953674316
    3. '                   ' → logprob: -15.750000953674316
    4. '   ' → logprob: -18.25
    5. '               ' → logprob: -18.375
    6. '                       ' → logprob: -19.375
    7. '                           ' → logprob: -19.875
    8. '           ' → logprob: -20.0
    9. ')i' → logprob: -20.0
    10. ')' → logprob: -20.25

Token 1327: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.11350075155496597
    2. ',' → logprob: -2.2385008335113525
    3. ',i' → logprob: -7.613500595092773
    4. ' ,' → logprob: -8.863500595092773
    5. '                   ' → logprob: -10.738500595092773
    6. '   ' → logprob: -11.363500595092773
    7. '           ' → logprob: -13.488500595092773
    8. '       ' → logprob: -13.613500595092773
    9. 'i' → logprob: -13.738500595092773
    10. 'j' → logprob: -14.238500595092773

Token 1328: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3306015716807451e-05
    2. '))' → logprob: -11.62501335144043
    3. ')
' → logprob: -12.50001335144043
    4. '                   ' → logprob: -14.50001335144043
    5. '               ' → logprob: -16.75001335144043
    6. ')`' → logprob: -17.12501335144043
    7. ')))' → logprob: -18.50001335144043
    8. ')}' → logprob: -18.62501335144043
    9. ' )' → logprob: -18.75001335144043
    10. '})' → logprob: -19.00001335144043

Token 1329: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4839613735675812
    2. '<|end|>' → logprob: -1.6089613437652588
    3. '       ' → logprob: -1.8589613437652588
    4. '   ' → logprob: -4.108961582183838
    5. '```' → logprob: -4.983961582183838
    6. '    
' → logprob: -6.108961582183838
    7. '        
' → logprob: -6.733961582183838
    8. '<|end|>' → logprob: -7.983961582183838
    9. '
' → logprob: -9.23396110534668
    10. '\n' → logprob: -9.60896110534668

Token 1330: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5531401634216309
    2. '   ' → logprob: -1.5531401634216309
    3. '       ' → logprob: -1.5531401634216309
    4. '
' → logprob: -7.178140163421631
    5. '```' → logprob: -7.803140163421631
    6. ' print' → logprob: -8.428140640258789
    7. '	print' → logprob: -8.803140640258789
    8. '        
' → logprob: -9.553140640258789
    9. '    
' → logprob: -9.678140640258789
    10. '<|end|>' → logprob: -11.928140640258789

Token 1331: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -5.200166469876422e-06
    2. '(f' → logprob: -13.000004768371582
    3. '(' → logprob: -13.375004768371582
    4. 'count' → logprob: -13.625004768371582
    5. '('' → logprob: -16.6250057220459
    6. ' (' → logprob: -17.6250057220459
    7. ' count' → logprob: -19.1250057220459
    8. '=count' → logprob: -19.2500057220459
    9. '(str' → logprob: -19.3750057220459
    10. '[count' → logprob: -19.6250057220459

Token 1332: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')`' → logprob: -14.250001907348633
    3. ' )' → logprob: -15.375001907348633
    4. ')
' → logprob: -15.375001907348633
    5. '`)' → logprob: -16.250001907348633
    6. '   ' → logprob: -16.500001907348633
    7. '))' → logprob: -16.750001907348633
    8. '())' → logprob: -17.125001907348633
    9. '')' → logprob: -17.250001907348633
    10. '")' → logprob: -17.625001907348633

Token 1333: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008706280030310154
    2. '```' → logprob: -5.008706092834473
    3. '<|end|>' → logprob: -6.758706092834473
    4. 'main' → logprob: -8.258706092834473
    5. ' if' → logprob: -8.508706092834473
    6. '#' → logprob: -8.633706092834473
    7. '
' → logprob: -8.758706092834473
    8. '...' → logprob: -11.633706092834473
    9. '``' → logprob: -12.008706092834473
    10. '__' → logprob: -12.758706092834473

Token 1334: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.31331634521484375
    2. ' __' → logprob: -1.3133163452148438
    3. 'name' → logprob: -10.188316345214844
    4. 'True' → logprob: -12.313316345214844
    5. '_name' → logprob: -12.688316345214844
    6. 'Name' → logprob: -13.063316345214844
    7. '_' → logprob: -13.188316345214844
    8. '___' → logprob: -13.688316345214844
    9. '```' → logprob: -14.313316345214844
    10. ''' → logprob: -14.563316345214844

Token 1335: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02252623625099659
    2. '==' → logprob: -4.147526264190674
    3. ' ==' → logprob: -5.272526264190674
    4. '=="' → logprob: -6.772526264190674
    5. '```' → logprob: -9.897525787353516
    6. '=='' → logprob: -10.022525787353516
    7. '__.__' → logprob: -10.397525787353516
    8. 'name' → logprob: -11.272525787353516
    9. 'main' → logprob: -11.647525787353516
    10. '__":
' → logprob: -12.022525787353516

Token 1336: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.643152740551159e-05
    2. '==' → logprob: -11.000036239624023
    3. '__.__' → logprob: -11.250036239624023
    4. '=="' → logprob: -12.500036239624023
    5. '__('' → logprob: -14.375036239624023
    6. ' ==' → logprob: -14.625036239624023
    7. '=='' → logprob: -14.625036239624023
    8. '___' → logprob: -15.000036239624023
    9. '__.' → logprob: -15.500036239624023
    10. '__["' → logprob: -15.625036239624023

Token 1337: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4943745732307434
    2. '==' → logprob: -0.9943745732307434
    3. '=="' → logprob: -4.244374752044678
    4. ' ==' → logprob: -5.494374752044678
    5. '=='' → logprob: -6.494374752044678
    6. '__.__' → logprob: -9.86937427520752
    7. '===' → logprob: -10.86937427520752
    8. '==
' → logprob: -11.61937427520752
    9. '==="' → logprob: -11.99437427520752
    10. '___' → logprob: -11.99437427520752

Token 1338: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005236837547272444
    2. ''' → logprob: -5.255236625671387
    3. '__' → logprob: -12.880236625671387
    4. ' "__' → logprob: -14.630236625671387
    5. ' '__' → logprob: -19.130237579345703
    6. '   ' → logprob: -19.755237579345703
    7. '"name' → logprob: -19.880237579345703
    8. '"user' → logprob: -20.130237579345703
    9. '("__' → logprob: -20.255237579345703
    10. 'main' → logprob: -20.255237579345703

Token 1339: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.2520615756511688
    2. '__' → logprob: -1.5020616054534912
    3. '"' → logprob: -9.62706184387207
    4. 'name' → logprob: -10.37706184387207
    5. ''' → logprob: -10.50206184387207
    6. '__":
' → logprob: -12.87706184387207
    7. '___' → logprob: -13.62706184387207
    8. 'built' → logprob: -14.12706184387207
    9. 'print' → logprob: -14.37706184387207
    10. '_main' → logprob: -14.62706184387207

Token 1340: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.009101157076656818
    2. '__' → logprob: -4.759101390838623
    3. '__':
' → logprob: -7.634101390838623
    4. '__["' → logprob: -13.509100914001465
    5. '__
' → logprob: -15.259100914001465
    6. '__:' → logprob: -15.509100914001465
    7. '__.' → logprob: -15.509100914001465
    8. '__.__' → logprob: -15.634100914001465
    9. '__
' → logprob: -15.759100914001465
    10. '==' → logprob: -16.13410186767578

Token 1341: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.6067134737968445
    2. '   ' → logprob: -0.8567134737968445
    3. '	main' → logprob: -3.6067135334014893
    4. ' main' → logprob: -5.98171329498291
    5. '__' → logprob: -7.48171329498291
    6. '_main' → logprob: -10.85671329498291
    7. '   ' → logprob: -10.98171329498291
    8. ' ' → logprob: -11.60671329498291
    9. '(main' → logprob: -11.85671329498291
    10. '    
' → logprob: -12.35671329498291

Token 1342: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -6.704273118884885e-07
    2. ' main' → logprob: -14.250000953674316
    3. '	main' → logprob: -19.25
    4. '   ' → logprob: -19.75
    5. '(main' → logprob: -23.5
    6. '_main' → logprob: -23.875
    7. '.main' → logprob: -24.125
    8. 'import' → logprob: -27.125
    9. 'Main' → logprob: -27.125
    10. '  ' → logprob: -27.375

Token 1343: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1341
Tokens correctement prédits (1ère position, stricte): 497
Tokens correctement prédits (1ère position, avec adaptation): 547
Tokens correctement prédits (top 10): 1060
Précision stricte (1ère position): 37.06%
Précision adaptée (1ère position): 40.79%
Précision (top 10): 79.05%
================================================================================
