================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:29:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
program = []
line_to_index = {}
variables = set()

for i in range(N):
    parts = input().split()
    line_num = int(parts[0])
    instr = parts[1]
    args = parts[2:]
    program.append((line_num, instr, args))
    line_to_index[line_num] = i
    # Collect variables
    if instr in ('ADD', 'SUB', 'SET', 'IF'):
        for a in args:
            if a.isalpha() and len(a) == 1:
                variables.add(a)

variables = sorted(variables)
vars_values = {v: 0 for v in variables}

def is_var(s):
    return s.isalpha() and len(s) == 1

def get_val(s):
    if is_var(s):
        return vars_values[s]
    else:
        return int(s)

visited = set()
pc = 0

while True:
    if pc < 0 or pc >= N:
        # Jumped outside the program, stop
        break
    state = (pc, tuple(vars_values[v] for v in variables))
    # To detect infinite loops more efficiently,
    # we track visited as (pc, variable values)
    # If revisit same state -> infinite loop
    if state in visited:
        print("inf")
        exit()
    visited.add(state)

    line_num, instr, args = program[pc]

    if instr == 'ADD':
        # ADD var1 var2 var3 or ADD var1 var2 con
        var1 = args[0]
        var2 = args[1]
        var3_or_con = args[2]
        val2 = vars_values[var2]
        if is_var(var3_or_con):
            val3 = vars_values[var3_or_con]
        else:
            val3 = int(var3_or_con)
        val = val2 + val3
        if val < 0 or val >= 16:
            # Stop before updating
            break
        vars_values[var1] = val
        pc += 1

    elif instr == 'SUB':
        # SUB var1 var2 var3 or SUB var1 var2 con
        var1 = args[0]
        var2 = args[1]
        var3_or_con = args[2]
        val2 = vars_values[var2]
        if is_var(var3_or_con):
            val3 = vars_values[var3_or_con]
        else:
            val3 = int(var3_or_con)
        val = val2 - val3
        if val < 0 or val >= 16:
            break
        vars_values[var1] = val
        pc += 1

    elif instr == 'SET':
        # SET var1 var2 or SET var1 con
        var1 = args[0]
        src = args[1]
        if is_var(src):
            val = vars_values[src]
        else:
            val = int(src)
        if val < 0 or val >= 16:
            break
        vars_values[var1] = val
        pc += 1

    elif instr == 'IF':
        # IF var dest
        var1 = args[0]
        dest = int(args[1])
        val = vars_values[var1]
        if val != 0:
            if dest not in line_to_index:
                # jump to non-existent line number
                break
            pc = line_to_index[dest]
        else:
            pc += 1

    elif instr == 'HALT':
        # Stop program
        break

    else:
        # Unknown instruction, just stop
        break

# If finished loop without break, print vars
# but if loop interrupted by break, print vars or "inf" already printed
for v in variables:
    print(f"{v}={vars_values[v]}")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003567959647625685
    2. '(N' → logprob: -9.000356674194336
    3. '('' → logprob: -9.500356674194336
    4. ''' → logprob: -9.875356674194336
    5. '`' → logprob: -10.500356674194336
    6. '```' → logprob: -10.500356674194336
    7. '("("' → logprob: -11.375356674194336
    8. '()' → logprob: -11.500356674194336
    9. '(input' → logprob: -11.625356674194336
    10. '(
' → logprob: -12.250356674194336

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2372170090675354
    2. ')' → logprob: -1.7372169494628906
    3. '()' → logprob: -3.4872169494628906
    4. '())' → logprob: -5.737216949462891
    5. '```' → logprob: -7.987216949462891
    6. '(
' → logprob: -8.23721694946289
    7. '`' → logprob: -9.61221694946289
    8. '(()' → logprob: -9.61221694946289
    9. '("("' → logprob: -9.61221694946289
    10. '")' → logprob: -9.73721694946289

Token 5: 'program' (ID: 20298)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31470787525177
    2. 'if' → logprob: -2.1897077560424805
    3. 'i' → logprob: -3.3147077560424805
    4. 'a' → logprob: -3.6897077560424805
    5. 's' → logprob: -3.9397077560424805
    6. 'x' → logprob: -4.3147077560424805
    7. '*' → logprob: -4.8147077560424805
    8. 'f' → logprob: -4.9397077560424805
    9. '`' → logprob: -4.9397077560424805
    10. ')' → logprob: -4.9397077560424805

Token 6: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0744497999548912
    2. '[' → logprob: -2.9494497776031494
    3. ')' → logprob: -5.3244500160217285
    4. '(' → logprob: -5.8244500160217285
    5. '()' → logprob: -5.8244500160217285
    6. ''' → logprob: -6.1994500160217285
    7. '_' → logprob: -6.8244500160217285
    8. '\' → logprob: -6.8244500160217285
    9. '```' → logprob: -6.8244500160217285
    10. ''s' → logprob: -7.4494500160217285

Token 7: ' []
' (ID: 8911)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3345714211463928
    2. '[]' → logprob: -2.334571361541748
    3. '"""' → logprob: -2.834571361541748
    4. '""' → logprob: -2.959571361541748
    5. ''' → logprob: -3.084571361541748
    6. ' []' → logprob: -4.459571361541748
    7. ''''' → logprob: -5.334571361541748
    8. 'input' → logprob: -5.834571361541748
    9. ' ' → logprob: -5.959571361541748
    10. '''' → logprob: -6.084571361541748

Token 8: 'line' (ID: 1137)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015238679014146328
    2. ' for' → logprob: -4.2652387619018555
    3. '\n' → logprob: -7.1402387619018555
    4. '\' → logprob: -8.640238761901855
    5. '
' → logprob: -10.640238761901855
    6. '`' → logprob: -11.015238761901855
    7. '```' → logprob: -11.140238761901855
    8. '[' → logprob: -11.390238761901855
    9. '\r' → logprob: -12.015238761901855
    10. ''' → logprob: -12.390238761901855

Token 9: '_to' (ID: 5089)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9928510189056396
    2. ' =' → logprob: -1.1178510189056396
    3. 's' → logprob: -1.2428510189056396
    4. '.append' → logprob: -5.742851257324219
    5. '=' → logprob: -5.867851257324219
    6. '.' → logprob: -6.367851257324219
    7. ' ' → logprob: -6.617851257324219
    8. '_s' → logprob: -6.992851257324219
    9. '[:]' → logprob: -7.117851257324219
    10. ')' → logprob: -7.742851257324219

Token 10: '_index' (ID: 7748)
  Prédit: '_program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -0.9411555528640747
    2. '_append' → logprob: -2.191155433654785
    3. '_index' → logprob: -2.316155433654785
    4. '_lines' → logprob: -2.816155433654785
    5. 'append' → logprob: -3.066155433654785
    6. '_line' → logprob: -3.191155433654785
    7. 'program' → logprob: -3.441155433654785
    8. '_add' → logprob: -3.566155433654785
    9. 'line' → logprob: -3.816155433654785
    10. '_code' → logprob: -4.066155433654785

Token 11: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5927635431289673
    2. '=' → logprob: -0.9677635431289673
    3. '_' → logprob: -2.9677634239196777
    4. 's' → logprob: -4.842763423919678
    5. ' =' → logprob: -5.092763423919678
    6. '_mapping' → logprob: -7.842763423919678
    7. '[]' → logprob: -8.342763900756836
    8. '_map' → logprob: -8.592763900756836
    9. ']' → logprob: -8.842763900756836
    10. '_=' → logprob: -9.092763900756836

Token 12: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.000591278774663806
    2. '{' → logprob: -7.500591278076172
    3. ' {}' → logprob: -10.250591278076172
    4. 'dict' → logprob: -13.500591278076172
    5. '{}

' → logprob: -14.375591278076172
    6. '{}\' → logprob: -14.875591278076172
    7. '{}
' → logprob: -15.125591278076172
    8. '{})' → logprob: -15.750591278076172
    9. ' ' → logprob: -16.875591278076172
    10. '{},' → logprob: -17.125591278076172

Token 13: 'variables' (ID: 28125)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005532711511477828
    2. ' for' → logprob: -7.500553131103516
    3. '\n' → logprob: -16.750553131103516
    4. '```' → logprob: -16.750553131103516
    5. '	for' → logprob: -17.000553131103516
    6. '
' → logprob: -17.625553131103516
    7. '_for' → logprob: -18.125553131103516
    8. 'For' → logprob: -18.125553131103516
    9. 'i' → logprob: -18.375553131103516
    10. ' 
' → logprob: -18.625553131103516

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.052598077803850174
    2. '_' → logprob: -3.552597999572754
    3. '=' → logprob: -3.927597999572754
    4. '[' → logprob: -6.177597999572754
    5. ' ' → logprob: -7.927597999572754
    6. '_space' → logprob: -9.052597999572754
    7. ')' → logprob: -9.677597999572754
    8. 's' → logprob: -9.927597999572754
    9. '.' → logprob: -9.927597999572754
    10. ''' → logprob: -10.552597999572754

Token 15: ' set' (ID: 920)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0013479728950187564
    2. ' {}' → logprob: -7.12634801864624
    3. 'set' → logprob: -7.62634801864624
    4. '{' → logprob: -11.126347541809082
    5. ' set' → logprob: -11.376347541809082
    6. '[]' → logprob: -11.626347541809082
    7. '{}
' → logprob: -11.751347541809082
    8. ' ' → logprob: -12.501347541809082
    9. '{}\' → logprob: -13.001347541809082
    10. '"' → logprob: -13.251347541809082

Token 16: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0063964310102164745
    2. '()' → logprob: -5.131396293640137
    3. '.' → logprob: -8.506396293640137
    4. '(
' → logprob: -8.881396293640137
    5. '('' → logprob: -10.381396293640137
    6. ' (' → logprob: -11.381396293640137
    7. '("("' → logprob: -11.381396293640137
    8. '((' → logprob: -11.506396293640137
    9. '(

' → logprob: -11.631396293640137
    10. '(`' → logprob: -12.006396293640137

Token 17: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00014036978245712817
    2. ' for' → logprob: -8.875140190124512
    3. '\n' → logprob: -16.125141143798828
    4. 'i' → logprob: -16.500141143798828
    5. '
' → logprob: -16.500141143798828
    6. '```' → logprob: -16.500141143798828
    7. 'n' → logprob: -17.750141143798828
    8. 'For' → logprob: -17.750141143798828
    9. 'while' → logprob: -18.000141143798828
    10. 'count' → logprob: -18.250141143798828

Token 18: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14751482009887695
    2. ' i' → logprob: -2.147514820098877
    3. ' _' → logprob: -4.022514820098877
    4. ' token' → logprob: -6.522514820098877
    5. ' line' → logprob: -7.522514820098877
    6. '_' → logprob: -8.022514343261719
    7. 'i' → logprob: -10.397514343261719
    8. '  ' → logprob: -10.522514343261719
    9. ' n' → logprob: -11.147514343261719
    10. ' var' → logprob: -12.022514343261719

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10580892860889435
    2. 'in' → logprob: -2.355808973312378
    3. ' ' → logprob: -5.230808734893799
    4. '  ' → logprob: -9.730809211730957
    5. '_' → logprob: -9.855809211730957
    6. ')' → logprob: -10.980809211730957
    7. ' range' → logprob: -11.230809211730957
    8. 'n' → logprob: -11.230809211730957
    9. 'range' → logprob: -11.355809211730957
    10. ' i' → logprob: -11.730809211730957

Token 20: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2519342601299286
    2. 'range' → logprob: -1.501934289932251
    3. '(range' → logprob: -12.501934051513672
    4. '	range' → logprob: -13.751934051513672
    5. '_range' → logprob: -15.626934051513672
    6. ' xrange' → logprob: -16.251934051513672
    7. ' ' → logprob: -16.626934051513672
    8. 'Range' → logprob: -17.376934051513672
    9. '.range' → logprob: -17.501934051513672
    10. '```' → logprob: -17.626934051513672

Token 21: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3870391845703125
    2. '(N' → logprob: -1.1370391845703125
    3. ' (' → logprob: -8.887039184570312
    4. '(n' → logprob: -10.887039184570312
    5. '(
' → logprob: -12.637039184570312
    6. '(len' → logprob: -13.137039184570312
    7. '(range' → logprob: -13.387039184570312
    8. 'N' → logprob: -14.262039184570312
    9. ' N' → logprob: -14.512039184570312
    10. '(i' → logprob: -14.762039184570312

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00381183042190969
    2. ')' → logprob: -5.628811836242676
    3. ' ):' → logprob: -9.253811836242676
    4. ':' → logprob: -9.628811836242676
    5. '):
' → logprob: -10.378811836242676
    6. '+' → logprob: -11.253811836242676
    7. '   ' → logprob: -13.753811836242676
    8. '```' → logprob: -13.753811836242676
    9. ' )' → logprob: -14.003811836242676
    10. ',' → logprob: -14.628811836242676

Token 23: '   ' (ID: 271)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.04753439128398895
    2. '   ' → logprob: -3.547534465789795
    3. ' code' → logprob: -4.797534465789795
    4. ' program' → logprob: -5.922534465789795
    5. ' lines' → logprob: -6.297534465789795
    6. ' input' → logprob: -6.672534465789795
    7. ' s' → logprob: -6.797534465789795
    8. ' ' → logprob: -7.547534465789795
    9. ' statement' → logprob: -7.672534465789795
    10. ' readline' → logprob: -8.172533988952637

Token 24: ' parts' (ID: 7881)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.08508015424013138
    2. 'line' → logprob: -3.210080146789551
    3. ' code' → logprob: -3.460080146789551
    4. 'code' → logprob: -5.585080146789551
    5. '   ' → logprob: -5.835080146789551
    6. ' s' → logprob: -6.085080146789551
    7. 's' → logprob: -8.08508014678955
    8. ' program' → logprob: -8.21008014678955
    9. ' statement' → logprob: -9.83508014678955
    10. '```' → logprob: -10.33508014678955

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004081128165125847
    2. '=' → logprob: -5.5040812492370605
    3. '   ' → logprob: -14.254080772399902
    4. '.append' → logprob: -14.629080772399902
    5. '=line' → logprob: -14.629080772399902
    6. '=input' → logprob: -15.129080772399902
    7. ')' → logprob: -15.629080772399902
    8. ' ' → logprob: -15.879080772399902
    9. '```' → logprob: -16.50408172607422
    10. '<|end|>' → logprob: -16.50408172607422

Token 26: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.055102866142988205
    2. 'input' → logprob: -2.930102825164795
    3. ' list' → logprob: -8.555103302001953
    4. 'list' → logprob: -10.680103302001953
    5. ' line' → logprob: -13.430103302001953
    6. '=input' → logprob: -14.055103302001953
    7. ' ' → logprob: -14.555103302001953
    8. '   ' → logprob: -14.680103302001953
    9. 'line' → logprob: -14.805103302001953
    10. '	input' → logprob: -15.305103302001953

Token 27: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.26353582739830017
    2. '().' → logprob: -1.5135358572006226
    3. '(' → logprob: -4.513535976409912
    4. '('' → logprob: -7.763535976409912
    5. '())' → logprob: -10.138535499572754
    6. '("("' → logprob: -10.263535499572754
    7. '()`' → logprob: -11.513535499572754
    8. '("' → logprob: -11.513535499572754
    9. '()]' → logprob: -12.138535499572754
    10. '("")' → logprob: -12.388535499572754

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.018161648884415627
    2. 'strip' → logprob: -4.018161773681641
    3. 'rstrip' → logprob: -11.39316177368164
    4. 'spl' → logprob: -15.01816177368164
    5. ' split' → logprob: -16.14316177368164
    6. 'rs' → logprob: -17.76816177368164
    7. 'replace' → logprob: -17.89316177368164
    8. 'startswith' → logprob: -18.01816177368164
    9. '```' → logprob: -18.64316177368164
    10. '(split' → logprob: -18.76816177368164

Token 29: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15691372752189636
    2. '('' → logprob: -2.4069137573242188
    3. '(' → logprob: -2.9069137573242188
    4. '("("' → logprob: -8.156913757324219
    5. '())' → logprob: -9.281913757324219
    6. '("' → logprob: -9.781913757324219
    7. '()]' → logprob: -11.531913757324219
    8. '(None' → logprob: -12.156913757324219
    9. '(),' → logprob: -12.406913757324219
    10. '(
' → logprob: -12.531913757324219

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26044324040412903
    2. '<|end|>' → logprob: -1.6354432106018066
    3. '[' → logprob: -4.885443210601807
    4. ' ' → logprob: -5.385443210601807
    5. '    
' → logprob: -5.760443210601807
    6. '\' → logprob: -5.760443210601807
    7. '    ' → logprob: -5.885443210601807
    8. '\n' → logprob: -6.135443210601807
    9. '<|end|>' → logprob: -6.135443210601807
    10. ' 
' → logprob: -6.260443210601807

Token 31: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1772825717926025
    2. ' if' → logprob: -1.3022825717926025
    3. 'program' → logprob: -1.6772825717926025
    4. 'if' → logprob: -2.4272825717926025
    5. 'line' (adapté à ' line') → logprob: -2.9272825717926025
    6. ' program' → logprob: -3.4272825717926025
    7. ' line' → logprob: -3.5522825717926025
    8. '    ' → logprob: -4.552282333374023
    9. ' ' → logprob: -5.177282333374023
    10. 'token' → logprob: -5.802282333374023

Token 32: '_num' (ID: 9834)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -6.885492621222511e-05
    2. '_' → logprob: -9.750068664550781
    3. 'to' → logprob: -12.125068664550781
    4. 'To' → logprob: -14.125068664550781
    5. '_tokens' → logprob: -14.375068664550781
    6. '   ' → logprob: -14.750068664550781
    7. '_parts' → logprob: -14.750068664550781
    8. ')' → logprob: -14.750068664550781
    9. ' to' → logprob: -14.875068664550781
    10. ' _' → logprob: -15.000068664550781

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6887335181236267
    2. '=' → logprob: -1.1887335777282715
    3. 's' → logprob: -2.0637335777282715
    4. '_' → logprob: -2.9387335777282715
    5. '_to' → logprob: -5.3137335777282715
    6. ']' → logprob: -5.8137335777282715
    7. ')' → logprob: -5.9387335777282715
    8. ',' → logprob: -7.0637335777282715
    9. '=line' → logprob: -7.4387335777282715
    10. ' ' → logprob: -8.688733100891113

Token 34: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6811562180519104
    2. 'int' → logprob: -0.9311562180519104
    3. ' parts' → logprob: -2.4311561584472656
    4. 'parts' → logprob: -4.431156158447266
    5. '   ' → logprob: -12.056156158447266
    6. ' ' → logprob: -12.306156158447266
    7. '[int' → logprob: -12.431156158447266
    8. 'ints' → logprob: -12.806156158447266
    9. '(parts' → logprob: -12.806156158447266
    10. '(int' → logprob: -13.181156158447266

Token 35: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.029762646183371544
    2. '(' → logprob: -3.5297627449035645
    3. 'parts' → logprob: -11.779762268066406
    4. ' (' → logprob: -13.779762268066406
    5. '(
' → logprob: -13.904762268066406
    6. ' parts' → logprob: -14.279762268066406
    7. '("("' → logprob: -15.029762268066406
    8. '(line' → logprob: -15.154762268066406
    9. '('' → logprob: -15.279762268066406
    10. '(`' → logprob: -15.404762268066406

Token 36: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.129266067640856e-05
    2. '0' → logprob: -11.125020980834961
    3. '(' → logprob: -12.500020980834961
    4. ' [' → logprob: -13.750020980834961
    5. '   ' → logprob: -14.375020980834961
    6. ')' → logprob: -15.000020980834961
    7. '1' → logprob: -15.125020980834961
    8. '[-' → logprob: -15.375020980834961
    9. '[
' → logprob: -15.875020980834961
    10. ' ' → logprob: -16.25002098083496

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.394135612528771e-05
    2. '[' → logprob: -10.625043869018555
    3. '1' → logprob: -11.625043869018555
    4. ' ' → logprob: -11.625043869018555
    5. ')' → logprob: -13.875043869018555
    6. '```' → logprob: -14.875043869018555
    7. '-' → logprob: -15.625043869018555
    8. '   ' → logprob: -16.625043869018555
    9. ']' → logprob: -16.937543869018555
    10. '`' → logprob: -17.125043869018555

Token 38: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.013139873743057251
    2. ')' → logprob: -4.638139724731445
    3. ']' → logprob: -5.763139724731445
    4. ')]' → logprob: -10.013139724731445
    5. '[' → logprob: -10.263139724731445
    6. ' ])' → logprob: -10.263139724731445
    7. ''])' → logprob: -10.513139724731445
    8. '],' → logprob: -10.638139724731445
    9. ')])' → logprob: -10.638139724731445
    10. '])
' → logprob: -11.138139724731445

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45416387915611267
    2. ' ' → logprob: -1.204163908958435
    3. ')' → logprob: -4.079164028167725
    4. '    ' → logprob: -4.079164028167725
    5. 'program' → logprob: -4.954164028167725
    6. ',' → logprob: -5.204164028167725
    7. '\t' → logprob: -5.454164028167725
    8. '  ' → logprob: -5.954164028167725
    9. '[' → logprob: -6.079164028167725
    10. '#' → logprob: -6.454164028167725

Token 40: ' instr' (ID: 10783)
  Prédit: ' program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' program' → logprob: -0.8955814838409424
    2. 'program' → logprob: -0.8955814838409424
    3. ' ' → logprob: -2.6455814838409424
    4. ' line' → logprob: -3.1455814838409424
    5. ')' → logprob: -4.020581245422363
    6. '   ' → logprob: -5.020581245422363
    7. '  ' → logprob: -5.145581245422363
    8. ' code' → logprob: -5.395581245422363
    9. 'instruction' → logprob: -5.395581245422363
    10. 'line' → logprob: -5.520581245422363

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4830556809902191
    2. 'uction' → logprob: -1.1080557107925415
    3. '=' → logprob: -3.233055591583252
    4. 'uct' → logprob: -4.983055591583252
    5. 'uctions' → logprob: -5.483055591583252
    6. 'uc' → logprob: -7.108055591583252
    7. 's' → logprob: -7.233055591583252
    8. 'ucion' → logprob: -8.23305606842041
    9. 'ument' → logprob: -8.85805606842041
    10. 'ution' → logprob: -9.60805606842041

Token 42: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.1566825807094574
    2. 'parts' → logprob: -2.0316824913024902
    3. ''' → logprob: -4.53168249130249
    4. ' '' → logprob: -6.40668249130249
    5. '"' → logprob: -7.28168249130249
    6. '(parts' → logprob: -7.40668249130249
    7. ' ' → logprob: -9.531682968139648
    8. ' "' → logprob: -9.906682968139648
    9. '[' → logprob: -10.906682968139648
    10. ' partes' → logprob: -11.531682968139648

Token 43: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.9186317482963204e-05
    2. '```' → logprob: -10.625049591064453
    3. '[:]' → logprob: -11.500049591064453
    4. '<|end|>' → logprob: -11.750049591064453
    5. '1' → logprob: -13.125049591064453
    6. '[]' → logprob: -13.375049591064453
    7. '[
' → logprob: -14.625049591064453
    8. '[:' → logprob: -14.875049591064453
    9. '<|end|>' → logprob: -14.875049591064453
    10. ']' → logprob: -15.000049591064453

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016766376211307943
    2. '0' → logprob: -8.875167846679688
    3. ']' → logprob: -11.125167846679688
    4. '])' → logprob: -12.625167846679688
    5. '2' → logprob: -12.875167846679688
    6. '-' → logprob: -13.000167846679688
    7. ':' → logprob: -13.375167846679688
    8. ':]' → logprob: -13.375167846679688
    9. ')' → logprob: -13.875167846679688
    10. ' ' → logprob: -15.000167846679688

Token 45: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006987088359892368
    2. ')' → logprob: -5.75698709487915
    3. '<|end|>' → logprob: -6.00698709487915
    4. ' ]' → logprob: -7.63198709487915
    5. '<|end|>' → logprob: -8.506986618041992
    6. '']' → logprob: -8.506986618041992
    7. ')]' → logprob: -8.881986618041992
    8. '])' → logprob: -9.381986618041992
    9. '[' → logprob: -9.381986618041992
    10. '()]' → logprob: -10.131986618041992

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5001137852668762
    2. ' ' → logprob: -1.1251137256622314
    3. '    ' → logprob: -4.0001139640808105
    4. 'if' → logprob: -4.7501139640808105
    5. '<|end|>' → logprob: -4.8751139640808105
    6. ' if' → logprob: -5.2501139640808105
    7. ' 
' → logprob: -5.2501139640808105
    8. '  ' → logprob: -5.3751139640808105
    9. '    
' → logprob: -5.3751139640808105
    10. '#' → logprob: -6.0001139640808105

Token 47: ' args' (ID: 4966)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27939990162849426
    2. ' if' → logprob: -2.529399871826172
    3. '<|end|>' → logprob: -2.654399871826172
    4. 'if' → logprob: -3.279399871826172
    5. 'rest' → logprob: -4.279399871826172
    6. '<|end|>' → logprob: -4.654399871826172
    7. 'program' → logprob: -5.154399871826172
    8. '   ' → logprob: -5.279399871826172
    9. '    ' → logprob: -5.529399871826172
    10. ' rest' → logprob: -5.654399871826172

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17975476384162903
    2. '=' → logprob: -1.8047547340393066
    3. '[:]' → logprob: -12.804755210876465
    4. '[' → logprob: -13.429755210876465
    5. '=[]' → logprob: -13.554755210876465
    6. ')' → logprob: -14.179755210876465
    7. '.' → logprob: -14.429755210876465
    8. '_' → logprob: -14.679755210876465
    9. '.extend' → logprob: -14.679755210876465
    10. 's' → logprob: -14.804755210876465

Token 49: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.006096942350268364
    2. 'parts' → logprob: -5.131096839904785
    3. '(parts' → logprob: -8.881096839904785
    4. ' ' → logprob: -11.756096839904785
    5. ' partes' → logprob: -12.631096839904785
    6. '[' → logprob: -12.756096839904785
    7. ' []' → logprob: -12.756096839904785
    8. '[]' → logprob: -13.006096839904785
    9. ' list' → logprob: -13.131096839904785
    10. '   ' → logprob: -13.256096839904785

Token 50: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.537868779967539e-06
    2. '```' → logprob: -12.375008583068848
    3. '   ' → logprob: -13.500008583068848
    4. '1' → logprob: -14.000008583068848
    5. '2' → logprob: -14.125008583068848
    6. ' [' → logprob: -15.250008583068848
    7. '[:]' → logprob: -15.250008583068848
    8. '[
' → logprob: -15.375008583068848
    9. '(' → logprob: -15.625008583068848
    10. '3' → logprob: -15.875008583068848

Token 51: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8074162653647363e-05
    2. ':]' → logprob: -11.875018119812012
    3. '1' → logprob: -12.500018119812012
    4. ':' → logprob: -12.625018119812012
    5. ']' → logprob: -13.375018119812012
    6. ')' → logprob: -13.625018119812012
    7. '])' → logprob: -15.000018119812012
    8. ' ' → logprob: -15.125018119812012
    9. '(' → logprob: -15.375018119812012
    10. '[' → logprob: -15.750018119812012

Token 52: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.0010887817479670048
    2. ':' → logprob: -7.626088619232178
    3. ']' → logprob: -7.876088619232178
    4. ' :]' → logprob: -8.501089096069336
    5. ' ]' → logprob: -11.751089096069336
    6. ' :' → logprob: -12.751089096069336
    7. '...]' → logprob: -13.126089096069336
    8. ':],' → logprob: -13.376089096069336
    9. ':]

' → logprob: -14.001089096069336
    10. ' ' → logprob: -14.126089096069336

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00864187441766262
    2. 'program' → logprob: -5.633641719818115
    3. '    
' → logprob: -6.258641719818115
    4. '```' → logprob: -7.133641719818115
    5. '
' → logprob: -7.258641719818115
    6. 'line' → logprob: -7.508641719818115
    7. ' program' → logprob: -9.133642196655273
    8. 'newline' → logprob: -9.258642196655273
    9. ')' → logprob: -9.383642196655273
    10. '\' → logprob: -9.508642196655273

Token 54: ' program' (ID: 2193)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32540163397789
    2. 'program' (adapté à ' program') → logprob: -1.3254016637802124
    3. ' program' → logprob: -5.075401782989502
    4. 'line' → logprob: -5.700401782989502
    5. 'if' → logprob: -6.825401782989502
    6. '    
' → logprob: -8.325401306152344
    7. ' line' → logprob: -8.325401306152344
    8. ' if' → logprob: -8.325401306152344
    9. '```' → logprob: -8.575401306152344
    10. '
' → logprob: -9.950401306152344

Token 55: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.014197002165019512
    2. '.' → logprob: -4.264196872711182
    3. '.app' → logprob: -11.01419734954834
    4. '.Append' → logprob: -12.26419734954834
    5. '.setdefault' → logprob: -12.76419734954834
    6. '.ap' → logprob: -13.01419734954834
    7. ' .' → logprob: -13.38919734954834
    8. '_append' → logprob: -13.38919734954834
    9. '.add' → logprob: -14.01419734954834
    10. '​.' → logprob: -14.51419734954834

Token 56: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0005712636047974229
    2. '(' → logprob: -8.250571250915527
    3. '(parts' → logprob: -8.250571250915527
    4. '([' → logprob: -10.000571250915527
    5. '(line' → logprob: -13.625571250915527
    6. '(((' → logprob: -14.375571250915527
    7. '(('' → logprob: -14.625571250915527
    8. '({'' → logprob: -15.500571250915527
    9. '(([' → logprob: -15.500571250915527
    10. '(
' → logprob: -15.750571250915527

Token 57: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0004612935590557754
    2. 'instr' → logprob: -7.875461101531982
    3. ' line' → logprob: -9.62546157836914
    4. '(line' → logprob: -11.37546157836914
    5. '   ' → logprob: -13.75046157836914
    6. 'instruction' → logprob: -14.62546157836914
    7. ')' → logprob: -14.87546157836914
    8. 'lin' → logprob: -14.87546157836914
    9. '	line' → logprob: -15.00046157836914
    10. '(instr' → logprob: -15.12546157836914

Token 58: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.00015908108616713434
    2. '_' → logprob: -8.75015926361084
    3. '_n' → logprob: -15.37515926361084
    4. '_,' → logprob: -15.87515926361084
    5. 'num' → logprob: -16.625158309936523
    6. '_i' → logprob: -17.000158309936523
    7. '_nums' → logprob: -17.250158309936523
    8. '_NUM' → logprob: -17.500158309936523
    9. ')' → logprob: -17.500158309936523
    10. ' _' → logprob: -18.000158309936523

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3557529857498594e-05
    2. ' ,' → logprob: -10.87502384185791
    3. ',
' → logprob: -12.37502384185791
    4. ',

' → logprob: -15.12502384185791
    5. ')' → logprob: -17.000022888183594
    6. '‌,' → logprob: -17.375022888183594
    7. '   ' → logprob: -17.500022888183594
    8. ' ' → logprob: -18.250022888183594
    9. ',)' → logprob: -19.125022888183594
    10. '),' → logprob: -19.125022888183594

Token 60: ' instr' (ID: 10783)
  Prédit: ' instr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' instr' → logprob: -0.428783655166626
    2. 'instr' → logprob: -1.053783655166626
    3. '(instr' → logprob: -9.803783416748047
    4. ' instru' → logprob: -12.053783416748047
    5. '_instr' → logprob: -12.303783416748047
    6. ' instruction' → logprob: -12.428783416748047
    7. '[in' → logprob: -12.678783416748047
    8. 'instruction' → logprob: -13.053783416748047
    9. ' instruct' → logprob: -13.678783416748047
    10. 'intr' → logprob: -13.678783416748047

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019245444855187088
    2. ',args' → logprob: -8.625192642211914
    3. ' ,' → logprob: -11.625192642211914
    4. ',
' → logprob: -13.875192642211914
    5. ',arg' → logprob: -14.000192642211914
    6. ',)' → logprob: -14.500192642211914
    7. '   ' → logprob: -14.500192642211914
    8. ',

' → logprob: -15.125192642211914
    9. '<|end|>' → logprob: -15.375192642211914
    10. ')' → logprob: -15.625192642211914

Token 62: ' args' (ID: 4966)
  Prédit: ' args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' args' → logprob: -0.038042984902858734
    2. 'args' → logprob: -3.2880430221557617
    3. '	args' → logprob: -14.913043022155762
    4. '$args' → logprob: -14.913043022155762
    5. '(args' → logprob: -15.163043022155762
    6. ',args' → logprob: -15.663043022155762
    7. '=args' → logprob: -15.788043022155762
    8. ')' → logprob: -16.663042068481445
    9. ' tuple' → logprob: -16.913042068481445
    10. ' *' → logprob: -16.913042068481445

Token 63: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20147570967674255
    2. '))' → logprob: -1.701475739479065
    3. ')
' → logprob: -9.951476097106934
    4. '))
' → logprob: -11.201476097106934
    5. ' )' → logprob: -14.576476097106934
    6. ')))' → logprob: -15.701476097106934
    7. ' ))' → logprob: -15.826476097106934
    8. '   ' → logprob: -15.951476097106934
    9. '),' → logprob: -16.076475143432617
    10. ')

' → logprob: -17.701475143432617

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14833950996398926
    2. '    
' → logprob: -3.1483395099639893
    3. 'for' → logprob: -3.5233395099639893
    4. 'line' → logprob: -3.7733395099639893
    5. '
' → logprob: -4.27333927154541
    6. ' 
' → logprob: -4.89833927154541
    7. '```' → logprob: -5.02333927154541
    8. ' for' → logprob: -6.27333927154541
    9. '  
' → logprob: -6.27333927154541
    10. 'if' → logprob: -6.27333927154541

Token 65: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.99163818359375
    2. 'if' → logprob: -0.99163818359375
    3. 'for' → logprob: -2.11663818359375
    4. ' if' → logprob: -2.61663818359375
    5. 'line' (adapté à ' line') → logprob: -3.36663818359375
    6. ' for' → logprob: -4.11663818359375
    7. ' line' → logprob: -5.49163818359375
    8. '```' → logprob: -5.49163818359375
    9. ' ' → logprob: -6.24163818359375
    10. '    
' → logprob: -6.36663818359375

Token 66: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -5.512236498361744e-07
    2. '_t' → logprob: -14.625000953674316
    3. '_' → logprob: -17.0
    4. 'to' → logprob: -17.5
    5. '##_' → logprob: -19.375
    6. '_top' → logprob: -19.5
    7. '_for' → logprob: -19.875
    8. '_te' → logprob: -20.0
    9. ' _' → logprob: -20.125
    10. 't' → logprob: -20.125

Token 67: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00019948746194131672
    2. '_' → logprob: -8.750199317932129
    3. 'index' → logprob: -10.500199317932129
    4. 's' → logprob: -12.500199317932129
    5. '_i' → logprob: -13.125199317932129
    6. '_in' → logprob: -13.250199317932129
    7. '_idx' → logprob: -13.750199317932129
    8. '_to' → logprob: -13.875199317932129
    9. '```' → logprob: -13.875199317932129
    10. '_indexes' → logprob: -14.250199317932129

Token 68: '[line' (ID: 129099)
  Prédit: '[line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[line' → logprob: -0.0031806828919798136
    2. '[' → logprob: -5.753180503845215
    3. '[word' → logprob: -14.753180503845215
    4. '[len' → logprob: -15.003180503845215
    5. '[file' → logprob: -15.128180503845215
    6. '[in' → logprob: -15.253180503845215
    7. '[col' → logprob: -15.378180503845215
    8. '\[' → logprob: -15.378180503845215
    9. '[...]' → logprob: -15.503180503845215
    10. '[row' → logprob: -15.503180503845215

Token 69: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.00023441045777872205
    2. 'num' → logprob: -9.375234603881836
    3. '[num' → logprob: -9.375234603881836
    4. '[_' → logprob: -10.000234603881836
    5. '[' → logprob: -11.625234603881836
    6. '```' → logprob: -12.250234603881836
    7. '_' → logprob: -13.750234603881836
    8. '_NUM' → logprob: -13.875234603881836
    9. '_nums' → logprob: -14.500234603881836
    10. '[line' → logprob: -15.000234603881836

Token 70: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12575456500053406
    2. ']' → logprob: -2.2507545948028564
    3. '=' → logprob: -5.500754356384277
    4. ' )' → logprob: -5.500754356384277
    5. ')=' → logprob: -5.750754356384277
    6. ']=' → logprob: -7.125754356384277
    7. '])' → logprob: -7.625754356384277
    8. ' =' → logprob: -9.125754356384277
    9. ' ]' → logprob: -9.875754356384277
    10. ')]' → logprob: -10.250754356384277

Token 71: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519296407699585
    2. ' =' → logprob: -1.5019296407699585
    3. ' =)' → logprob: -15.62692928314209
    4. '＝' → logprob: -15.75192928314209
    5. '=

' → logprob: -16.376930236816406
    6. ' ' → logprob: -17.126930236816406
    7. '=}' → logprob: -17.251930236816406
    8. ' =
' → logprob: -17.751930236816406
    9. '[' → logprob: -17.876930236816406
    10. '=i' → logprob: -18.501930236816406

Token 72: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2519424259662628
    2. 'i' → logprob: -1.5019423961639404
    3. ' len' → logprob: -11.62694263458252
    4. 'len' → logprob: -12.75194263458252
    5. ' ' → logprob: -13.75194263458252
    6. '	i' → logprob: -14.87694263458252
    7. '   ' → logprob: -16.126941680908203
    8. ' ' → logprob: -18.001941680908203
    9. '```' → logprob: -18.251941680908203
    10. '  ' → logprob: -18.751941680908203

Token 73: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0456362962722778
    2. '   ' → logprob: -2.0456361770629883
    3. '#' → logprob: -2.5456361770629883
    4. '```' → logprob: -2.5456361770629883
    5. '
' → logprob: -2.7956361770629883
    6. 'v' → logprob: -2.7956361770629883
    7. '_' → logprob: -3.0456361770629883
    8. 'i' → logprob: -3.2956361770629883
    9. 'if' → logprob: -3.5456361770629883
    10. 'n' → logprob: -3.9206361770629883

Token 75: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4040321707725525
    2. ' for' → logprob: -1.9040322303771973
    3. 'if' → logprob: -2.6540322303771973
    4. '   ' → logprob: -3.4040322303771973
    5. ' 
' → logprob: -3.9040322303771973
    6. '```' → logprob: -4.029032230377197
    7. '    
' → logprob: -4.779032230377197
    8. ' if' → logprob: -4.779032230377197
    9. 'variables' → logprob: -4.779032230377197
    10. ' ' → logprob: -5.029032230377197

Token 76: ' Collect' (ID: 30483)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3898696005344391
    2. 'for' → logprob: -1.3898695707321167
    3. ' if' → logprob: -3.5148696899414062
    4. ' variables' → logprob: -3.7648696899414062
    5. 'if' → logprob: -4.389869689941406
    6. 'variables' → logprob: -5.264869689941406
    7. ' 
' → logprob: -7.389869689941406
    8. '   ' → logprob: -7.389869689941406
    9. ' ' → logprob: -8.202369689941406
    10. '
' → logprob: -8.577369689941406

Token 77: ' variables' (ID: 13955)
  Prédit: ' variables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variables' → logprob: -0.18788409233093262
    2. 'variables' → logprob: -1.9378840923309326
    3. ' variable' → logprob: -3.9378840923309326
    4. 'variable' → logprob: -5.562884330749512
    5. ' args' → logprob: -6.812884330749512
    6. 'args' → logprob: -7.062884330749512
    7. ' for' → logprob: -7.437884330749512
    8. ' any' → logprob: -7.687884330749512
    9. ' vars' → logprob: -8.312884330749512
    10. ' all' → logprob: -9.062884330749512

Token 78: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3714520037174225
    2. 'for' → logprob: -1.4964519739151
    3. ' variables' → logprob: -4.3714518547058105
    4. ' ' → logprob: -4.6214518547058105
    5. '.update' → logprob: -4.6214518547058105
    6. 'variables' → logprob: -4.6214518547058105
    7. '<|end|>' → logprob: -4.8714518547058105
    8. ' |=' → logprob: -4.8714518547058105
    9. ' +=' → logprob: -5.6214518547058105
    10. '   ' → logprob: -5.6214518547058105

Token 79: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19562554359436035
    2. '   ' → logprob: -2.4456255435943604
    3. 'for' → logprob: -2.5706255435943604
    4. '<|end|>' → logprob: -4.945625305175781
    5. ' ' → logprob: -5.695625305175781
    6. ' if' → logprob: -5.945625305175781
    7. '  ' → logprob: -8.320625305175781
    8. ' 
' → logprob: -8.320625305175781
    9. '<|end|>' → logprob: -8.820625305175781
    10. 'if' → logprob: -8.820625305175781

Token 80: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07824202626943588
    2. ' for' → logprob: -2.703242063522339
    3. 'variables' → logprob: -5.20324182510376
    4. ' variables' → logprob: -6.57824182510376
    5. 'if' (adapté à ' if') → logprob: -6.70324182510376
    6. ' if' → logprob: -9.703242301940918
    7. '```' → logprob: -9.953242301940918
    8. '   ' → logprob: -10.328242301940918
    9. '<|end|>' → logprob: -12.453242301940918
    10. '
' → logprob: -13.453242301940918

Token 81: ' instr' (ID: 10783)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.8035888671875
    2. ' args' → logprob: -1.1785888671875
    3. 'instr' → logprob: -2.4285888671875
    4. ' instr' → logprob: -2.8035888671875
    5. 'len' → logprob: -2.9285888671875
    6. ' len' → logprob: -3.1785888671875
    7. '(instr' → logprob: -8.4285888671875
    8. ' parts' → logprob: -8.8035888671875
    9. '	args' → logprob: -9.8035888671875
    10. '$args' → logprob: -10.5535888671875

Token 82: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011080952361226082
    2. 'in' → logprob: -4.636080741882324
    3. ' ==' → logprob: -7.011080741882324
    4. '==' → logprob: -7.886080741882324
    5. ' ' → logprob: -10.636080741882324
    6. ' not' → logprob: -11.761080741882324
    7. '<|end|>' → logprob: -12.386080741882324
    8. '[' → logprob: -13.011080741882324
    9. '  ' → logprob: -13.386080741882324
    10. '=' → logprob: -13.636080741882324

Token 83: ' ('' (ID: 9906)
  Prédit: ' [''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ['' → logprob: -1.0810298919677734
    2. ' {"' → logprob: -1.7060298919677734
    3. ' {'' → logprob: -1.7060298919677734
    4. ' ["' → logprob: -1.9560298919677734
    5. ' ("' → logprob: -2.5810298919677734
    6. ' ('' → logprob: -3.0810298919677734
    7. '["' → logprob: -4.331029891967773
    8. '['' → logprob: -4.581029891967773
    9. '{"' → logprob: -4.956029891967773
    10. '{'' → logprob: -6.081029891967773

Token 84: 'ADD' (ID: 29357)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.052630312740802765
    2. 'LOAD' → logprob: -3.6776304244995117
    3. '['' → logprob: -4.927630424499512
    4. ''S' → logprob: -5.302630424499512
    5. ''M' → logprob: -5.427630424499512
    6. 'MOV' → logprob: -6.677630424499512
    7. 'STORE' → logprob: -6.677630424499512
    8. ''L' → logprob: -6.802630424499512
    9. '"' → logprob: -6.927630424499512
    10. ''s' → logprob: -7.052630424499512

Token 85: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.023828020319342613
    2. '','' → logprob: -4.023828029632568
    3. ' ',' → logprob: -5.648828029632568
    4. ''' → logprob: -6.898828029632568
    5. ' ','' → logprob: -7.398828029632568
    6. ' '' → logprob: -8.39882755279541
    7. ' ADD' → logprob: -9.64882755279541
    8. ',' → logprob: -9.89882755279541
    9. ' ,' → logprob: -10.39882755279541
    10. 'ADD' → logprob: -10.52382755279541

Token 86: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9286937117576599
    2. ' '' → logprob: -1.0536937713623047
    3. ''S' → logprob: -1.4286937713623047
    4. ''M' → logprob: -4.303693771362305
    5. '   ' → logprob: -6.428693771362305
    6. ' ' → logprob: -7.178693771362305
    7. '  ' → logprob: -9.053693771362305
    8. ''D' → logprob: -9.053693771362305
    9. ''C' → logprob: -9.428693771362305
    10. 'SUB' → logprob: -9.553693771362305

Token 87: 'SUB' (ID: 58665)
  Prédit: 'SUB'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SUB' → logprob: -0.06338651478290558
    2. ' SUB' → logprob: -3.5633864402770996
    3. 'MOV' → logprob: -3.9383864402770996
    4. 'M' → logprob: -5.4383864402771
    5. 'LOAD' → logprob: -5.6883864402771
    6. 'SET' → logprob: -6.9383864402771
    7. 'STORE' → logprob: -6.9383864402771
    8. ' ' → logprob: -7.3133864402771
    9. ' MUL' → logprob: -7.3133864402771
    10. 'MULT' → logprob: -7.4383864402771

Token 88: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0013742801966145635
    2. '','' → logprob: -7.126374244689941
    3. ',' → logprob: -8.626374244689941
    4. ' ',' → logprob: -8.876374244689941
    5. '')' → logprob: -9.251374244689941
    6. ''' → logprob: -9.376374244689941
    7. ''):' → logprob: -11.376374244689941
    8. ' '' → logprob: -11.751374244689941
    9. ''),' → logprob: -11.876374244689941
    10. ''))' → logprob: -12.126374244689941

Token 89: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0257675647735596
    2. ' '' → logprob: -1.0257675647735596
    3. ''M' → logprob: -1.2757675647735596
    4. ''S' → logprob: -5.9007673263549805
    5. '   ' → logprob: -8.65076732635498
    6. ''T' → logprob: -8.77576732635498
    7. ''D' → logprob: -9.02576732635498
    8. ')' → logprob: -9.52576732635498
    9. ''C' → logprob: -9.65076732635498
    10. ' ' → logprob: -9.90076732635498

Token 90: 'SET' (ID: 11481)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.4588223397731781
    2. 'MOV' → logprob: -1.0838223695755005
    3. 'MULT' → logprob: -4.458822250366211
    4. 'LOAD' → logprob: -4.833822250366211
    5. ' MUL' → logprob: -5.833822250366211
    6. 'STORE' → logprob: -5.958822250366211
    7. 'MOVE' → logprob: -6.458822250366211
    8. 'SET' → logprob: -6.708822250366211
    9. ' MOV' → logprob: -7.833822250366211
    10. ''M' → logprob: -8.083822250366211

Token 91: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.2282896488904953
    2. ''):' → logprob: -1.6032896041870117
    3. '')' → logprob: -6.603289604187012
    4. ''' → logprob: -7.228289604187012
    5. '','' → logprob: -8.103289604187012
    6. ''):
' → logprob: -8.978289604187012
    7. '':' → logprob: -9.353289604187012
    8. '):' → logprob: -9.978289604187012
    9. '(',' → logprob: -10.353289604187012
    10. ' ',' → logprob: -10.353289604187012

Token 92: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.4344775974750519
    2. ''' → logprob: -1.4344775676727295
    3. ''M' → logprob: -2.1844775676727295
    4. ''S' → logprob: -7.309477806091309
    5. ''T' → logprob: -8.559477806091309
    6. '   ' → logprob: -8.809477806091309
    7. ' ' → logprob: -9.059477806091309
    8. ''C' → logprob: -9.184477806091309
    9. ''D' → logprob: -9.434477806091309
    10. ')' → logprob: -9.934477806091309

Token 93: 'IF' (ID: 4648)
  Prédit: 'MOV'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOV' → logprob: -0.4628397822380066
    2. 'M' → logprob: -1.3378398418426514
    3. 'MULT' → logprob: -3.9628398418426514
    4. ''' → logprob: -3.9628398418426514
    5. 'PRINT' → logprob: -4.337839603424072
    6. ' MUL' → logprob: -4.337839603424072
    7. ''M' → logprob: -4.337839603424072
    8. 'LOAD' → logprob: -4.837839603424072
    9. 'CMP' → logprob: -4.962839603424072
    10. 'MOVE' → logprob: -5.587839603424072

Token 94: ''):
' (ID: 26539)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.6624488234519958
    2. ')' → logprob: -0.9124488234519958
    3. '',' → logprob: -3.9124488830566406
    4. ',' → logprob: -4.662448883056641
    5. ' )' → logprob: -4.912448883056641
    6. '_EQ' → logprob: -5.287448883056641
    7. '<|end|>' → logprob: -5.287448883056641
    8. '_' → logprob: -5.537448883056641
    9. '_EQUAL' → logprob: -5.537448883056641
    10. ' ')' → logprob: -5.662448883056641

Token 95: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3771619200706482
    2. ':' → logprob: -1.627161979675293
    3. ':
' → logprob: -2.877161979675293
    4. '       ' → logprob: -3.752161979675293
    5. ' and' → logprob: -4.002161979675293
    6. ':variables' → logprob: -5.127161979675293
    7. ' variables' → logprob: -5.502161979675293
    8. '    ' → logprob: -6.502161979675293
    9. '<|end|>' → logprob: -6.502161979675293
    10. ' for' → logprob: -6.877161979675293

Token 96: ' for' (ID: 395)
  Prédit: ' variables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variables' → logprob: -0.06563059240579605
    2. 'variables' → logprob: -3.0656306743621826
    3. ' for' → logprob: -4.3156304359436035
    4. '   ' → logprob: -5.9406304359436035
    5. 'for' (adapté à ' for') → logprob: -7.6906304359436035
    6. ':variables' → logprob: -8.815630912780762
    7. '
' → logprob: -9.440630912780762
    8. '       ' → logprob: -9.565630912780762
    9. '<|end|>' → logprob: -9.940630912780762
    10. '.variables' → logprob: -10.190630912780762

Token 97: ' a' (ID: 261)
  Prédit: 'arg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arg' → logprob: -0.18159066140651703
    2. ' arg' → logprob: -1.8065906763076782
    3. 'var' → logprob: -6.681590557098389
    4. ' var' → logprob: -8.056591033935547
    5. 'v' → logprob: -8.931591033935547
    6. 'args' → logprob: -9.806591033935547
    7. '	arg' → logprob: -10.431591033935547
    8. 'a' → logprob: -11.306591033935547
    9. '[arg' → logprob: -11.306591033935547
    10. 'part' → logprob: -12.431591033935547

Token 98: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1392328292131424
    2. 'r' → logprob: -2.639232873916626
    3. 'rg' → logprob: -3.014232873916626
    4. 's' → logprob: -4.764232635498047
    5. ' ' → logprob: -7.764232635498047
    6. 'in' → logprob: -8.514232635498047
    7. 'g' → logprob: -9.389232635498047
    8. '_args' → logprob: -9.639232635498047
    9. '_' → logprob: -10.639232635498047
    10. 'gs' → logprob: -10.764232635498047

Token 99: ' args' (ID: 4966)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.3133075535297394
    2. ' args' → logprob: -1.313307523727417
    3. '(args' → logprob: -10.438307762145996
    4. '	args' → logprob: -11.813307762145996
    5. '$args' → logprob: -12.438307762145996
    6. '=args' → logprob: -13.813307762145996
    7. 'range' → logprob: -14.438307762145996
    8. '.args' → logprob: -14.438307762145996
    9. '_args' → logprob: -14.688307762145996
    10. 'parts' → logprob: -14.688307762145996

Token 100: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.032132867723703384
    2. ':
' → logprob: -3.532132863998413
    3. '[' → logprob: -6.907133102416992
    4. ' :' → logprob: -7.032133102416992
    5. '[:-' → logprob: -8.032133102416992
    6. ' if' → logprob: -9.907133102416992
    7. 'if' → logprob: -10.032133102416992
    8. ' :
' → logprob: -10.782133102416992
    9. '   ' → logprob: -10.907133102416992
    10. '):' → logprob: -11.282133102416992

Token 101: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32586345076560974
    2. ' if' → logprob: -1.8258634805679321
    3. '       ' → logprob: -2.8258633613586426
    4. 'if' → logprob: -3.2008633613586426
    5. '   ' → logprob: -4.950863361358643
    6. '<|end|>' → logprob: -5.825863361358643
    7. ':
' → logprob: -6.325863361358643
    8. '            
' → logprob: -6.575863361358643
    9. '               ' → logprob: -6.825863361358643
    10. '
' → logprob: -7.575863361358643

Token 102: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07314833998680115
    2. 'if' (adapté à ' if') → logprob: -2.698148250579834
    3. ' variables' → logprob: -6.073148250579834
    4. '               ' → logprob: -7.323148250579834
    5. '           ' → logprob: -9.198148727416992
    6. 'variables' → logprob: -9.323148727416992
    7. '   ' → logprob: -10.698148727416992
    8. '```' → logprob: -12.198148727416992
    9. ' 
' → logprob: -12.323148727416992
    10. ' not' → logprob: -12.323148727416992

Token 103: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11228223890066147
    2. ' a' → logprob: -2.3622822761535645
    3. ' not' → logprob: -4.6122822761535645
    4. 'not' → logprob: -6.2372822761535645
    5. 'len' → logprob: -9.487281799316406
    6. ' ' → logprob: -10.862281799316406
    7. ' len' → logprob: -11.612281799316406
    8. '(a' → logprob: -11.987281799316406
    9. '   ' → logprob: -12.987281799316406
    10. '(not' → logprob: -13.612281799316406

Token 104: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.048705801367759705
    2. 'is' → logprob: -3.173705816268921
    3. ' not' → logprob: -5.298705577850342
    4. 'not' → logprob: -8.0487060546875
    5. '.' → logprob: -8.2987060546875
    6. ' .' → logprob: -9.9237060546875
    7. ' is' → logprob: -10.2987060546875
    8. '[' → logprob: -11.1737060546875
    9. '=is' → logprob: -12.1737060546875
    10. 'isdigit' → logprob: -12.4237060546875

Token 105: 'alpha' (ID: 15453)
  Prédit: 'alpha'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alpha' → logprob: -0.00034297199454158545
    2. 'identifier' → logprob: -8.000343322753906
    3. 'al' → logprob: -12.000343322753906
    4. 'digit' → logprob: -14.250343322753906
    5. ' alpha' → logprob: -14.500343322753906
    6. 'lower' → logprob: -16.250343322753906
    7. 'decimal' → logprob: -17.250343322753906
    8. 'alphabet' → logprob: -17.625343322753906
    9. 'numeric' → logprob: -18.000343322753906
    10. '_alpha' → logprob: -18.000343322753906

Token 106: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5759875774383545
    2. '()' → logprob: -0.8259875774383545
    3. '():
' → logprob: -10.825987815856934
    4. '(' → logprob: -10.950987815856934
    5. '():

' → logprob: -12.825987815856934
    6. '())' → logprob: -13.075987815856934
    7. '()>' → logprob: -13.450987815856934
    8. ' ():' → logprob: -14.575987815856934
    9. '()==' → logprob: -14.575987815856934
    10. '().' → logprob: -14.700987815856934

Token 107: ' and' (ID: 326)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06081913411617279
    2. ':' → logprob: -3.685819149017334
    3. '():
' → logprob: -3.685819149017334
    4. ' and' → logprob: -5.560819149017334
    5. '()' → logprob: -5.685819149017334
    6. 'and' → logprob: -6.935819149017334
    7. '):' → logprob: -7.935819149017334
    8. ':
' → logprob: -9.185818672180176
    9. ' ():' → logprob: -9.685818672180176
    10. ' :' → logprob: -9.935818672180176

Token 108: ' len' (ID: 4631)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.428933709859848
    2. ' a' → logprob: -1.0539337396621704
    3. ' not' → logprob: -9.178934097290039
    4. 'len' → logprob: -10.303934097290039
    5. 'not' → logprob: -10.303934097290039
    6. '(a' → logprob: -10.428934097290039
    7. ' (' → logprob: -11.053934097290039
    8. '   ' → logprob: -12.428934097290039
    9. ' len' → logprob: -12.553934097290039
    10. ' ' → logprob: -13.178934097290039

Token 109: '(a' (ID: 6271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8703262209892273
    2. '()>' → logprob: -1.245326280593872
    3. '(a' → logprob: -1.245326280593872
    4. '(' → logprob: -5.370326042175293
    5. '>' → logprob: -8.120326042175293
    6. 'a' → logprob: -8.120326042175293
    7. '()==' → logprob: -8.995326042175293
    8. '(">' → logprob: -10.620326042175293
    9. '(
' → logprob: -11.370326042175293
    10. ' >' → logprob: -11.495326042175293

Token 110: ')' (ID: 8)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.8191187977790833
    2. ')' → logprob: -1.0691187381744385
    3. ' >' → logprob: -1.6941187381744385
    4. ')>' → logprob: -3.5691187381744385
    5. ' )' → logprob: -6.319118976593018
    6. '==' → logprob: -7.444118976593018
    7. '()>' → logprob: -7.569118976593018
    8. ' ' → logprob: -8.44411849975586
    9. ' ==' → logprob: -8.56911849975586
    10. '>=' → logprob: -9.31911849975586

Token 111: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.35950374603271484
    2. ' >' → logprob: -1.2345037460327148
    3. '==' → logprob: -5.109503746032715
    4. ' ==' → logprob: -6.484503746032715
    5. ')' → logprob: -6.984503746032715
    6. '()>' → logprob: -7.234503746032715
    7. ' ' → logprob: -7.484503746032715
    8. '1' → logprob: -7.984503746032715
    9. '<|end|>' → logprob: -7.984503746032715
    10. ')>' → logprob: -8.484503746032715

Token 112: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0052398028783500195
    2. ' ' → logprob: -5.255239963531494
    3. '3' → logprob: -12.255239486694336
    4. '2' → logprob: -14.505239486694336
    5. '```' → logprob: -15.505239486694336
    6. 'variable' → logprob: -16.130239486694336
    7. '<|end|>' → logprob: -16.255239486694336
    8. '  ' → logprob: -16.380239486694336
    9. '4' → logprob: -16.817739486694336
    10. '   ' → logprob: -17.630239486694336

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013291679788380861
    2. ' ' → logprob: -6.626328945159912
    3. '3' → logprob: -13.00132942199707
    4. '2' → logprob: -15.31382942199707
    5. '```' → logprob: -15.81382942199707
    6. 'variable' → logprob: -16.43882942199707
    7. '<|end|>' → logprob: -16.43882942199707
    8. ' one' → logprob: -17.06382942199707
    9. 'a' → logprob: -17.25132942199707
    10. '  ' → logprob: -17.31382942199707

Token 114: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06815510243177414
    2. ':
' → logprob: -3.06815505027771
    3. ' and' → logprob: -4.068155288696289
    4. '):' → logprob: -7.193155288696289
    5. '):
' → logprob: -7.443155288696289
    6. '           ' → logprob: -8.068155288696289
    7. 'and' → logprob: -8.318155288696289
    8. '               ' → logprob: -9.193155288696289
    9. ')' → logprob: -9.443155288696289
    10. '       ' → logprob: -10.068155288696289

Token 115: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01407758891582489
    2. ':variables' → logprob: -4.764077663421631
    3. 'variables' → logprob: -6.139077663421631
    4. ' variables' → logprob: -6.639077663421631
    5. '           ' → logprob: -7.264077663421631
    6. ':
' → logprob: -7.389077663421631
    7. ':' → logprob: -8.639077186584473
    8. ' and' → logprob: -8.764077186584473
    9. '<|end|>' → logprob: -9.139077186584473
    10. '.variables' → logprob: -10.264077186584473

Token 116: ' variables' (ID: 13955)
  Prédit: 'variables'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variables' (adapté à ' variables') → logprob: -0.07044896483421326
    2. ' variables' → logprob: -2.695448875427246
    3. '               ' → logprob: -8.195448875427246
    4. ':variables' → logprob: -9.445448875427246
    5. '.variables' → logprob: -10.070448875427246
    6. '                   ' → logprob: -10.320448875427246
    7. '
' → logprob: -10.445448875427246
    8. '           ' → logprob: -10.445448875427246
    9. 'variable' → logprob: -11.445448875427246
    10. '_variables' → logprob: -12.570448875427246

Token 117: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.048603158444166183
    2. '.' → logprob: -3.048603057861328
    3. ' .' → logprob: -11.298603057861328
    4. '.update' → logprob: -12.923603057861328
    5. '.setdefault' → logprob: -14.548603057861328
    6. ').' → logprob: -15.423603057861328
    7. '.Add' → logprob: -15.673603057861328
    8. '.append' → logprob: -16.673603057861328
    9. 'add' → logprob: -17.923603057861328
    10. '.ADD' → logprob: -18.048603057861328

Token 118: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -7.541112427134067e-05
    2. '(' → logprob: -9.500075340270996
    3. '((' → logprob: -15.250075340270996
    4. 'a' → logprob: -15.750075340270996
    5. '('' → logprob: -16.750076293945312
    6. ' (' → logprob: -17.375076293945312
    7. '(
' → logprob: -18.125076293945312
    8. '(A' → logprob: -18.250076293945312
    9. '(ai' → logprob: -19.250076293945312
    10. '()' → logprob: -20.000076293945312

Token 119: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ' )' → logprob: -13.875001907348633
    3. ')
' → logprob: -14.125001907348633
    4. '))' → logprob: -16.000001907348633
    5. ')}' → logprob: -17.875001907348633
    6. ')#' → logprob: -18.000001907348633
    7. ')}}' → logprob: -18.125001907348633
    8. '}' → logprob: -18.250001907348633
    9. '<|end|>' → logprob: -18.250001907348633
    10. '),' → logprob: -18.375001907348633

Token 120: 'variables' (ID: 28125)
  Prédit: 'variables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variables' → logprob: -0.566180944442749
    2. 'register' → logprob: -2.191180944442749
    3. 'values' → logprob: -2.941180944442749
    4. 'var' → logprob: -3.441180944442749
    5. 'vars' → logprob: -3.441180944442749
    6. 'memory' → logprob: -3.941180944442749
    7. '#' → logprob: -3.941180944442749
    8. 'next' → logprob: -4.066181182861328
    9. 'visited' → logprob: -4.441181182861328
    10. 'state' → logprob: -4.566181182861328

Token 121: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.16255584359169006
    2. ' sorted' → logprob: -2.0375559329986572
    3. 'list' → logprob: -4.662555694580078
    4. 'set' → logprob: -5.162555694580078
    5. ' list' → logprob: -5.662555694580078
    6. ' set' → logprob: -7.162555694580078
    7. '{' → logprob: -8.662555694580078
    8. 'variables' → logprob: -10.912555694580078
    9. 'dict' → logprob: -11.162555694580078
    10. ' variables' → logprob: -11.162555694580078

Token 123: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002004410926019773
    2. '(list' → logprob: -9.625200271606445
    3. '((' → logprob: -10.125200271606445
    4. '(lambda' → logprob: -10.500200271606445
    5. '(vars' → logprob: -11.000200271606445
    6. '("("' → logprob: -12.125200271606445
    7. '(variable' → logprob: -12.125200271606445
    8. '(
' → logprob: -12.250200271606445
    9. '<|end|>' → logprob: -12.250200271606445
    10. '()' → logprob: -12.250200271606445

Token 124: 'variables' (ID: 28125)
  Prédit: 'variables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variables' → logprob: -0.0013054758310317993
    2. '(' → logprob: -7.00130558013916
    3. 'list' → logprob: -8.00130558013916
    4. ')' → logprob: -9.87630558013916
    5. ' variables' → logprob: -12.50130558013916
    6. '(list' → logprob: -13.25130558013916
    7. ':variables' → logprob: -13.62630558013916
    8. 'variable' → logprob: -15.00130558013916
    9. '.variables' → logprob: -15.50130558013916
    10. '_variables' → logprob: -16.626304626464844

Token 125: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.491498531133402e-06
    2. ' )' → logprob: -11.875009536743164
    3. '()' → logprob: -13.375009536743164
    4. '())' → logprob: -14.875009536743164
    5. ')
' → logprob: -15.125009536743164
    6. '))' → logprob: -15.500009536743164
    7. ')#' → logprob: -17.125009536743164
    8. ']' → logprob: -17.250009536743164
    9. ',' → logprob: -17.250009536743164
    10. ')

' → logprob: -17.625009536743164

Token 126: 'vars' (ID: 32791)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'var' → logprob: -1.7084413766860962
    2. 'result' → logprob: -1.9584413766860962
    3. 'variables' → logprob: -2.0834412574768066
    4. 'print' → logprob: -2.2084412574768066
    5. 'values' → logprob: -2.3334412574768066
    6. 'memory' → logprob: -2.4584412574768066
    7. 'mem' → logprob: -3.3334412574768066
    8. 'variable' → logprob: -3.4584412574768066
    9. 'results' → logprob: -4.083441257476807
    10. 'mapping' → logprob: -4.083441257476807

Token 127: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.7066125273704529
    2. '_' → logprob: -1.3316125869750977
    3. '_map' → logprob: -2.0816125869750977
    4. ' =' → logprob: -3.7066125869750977
    5. '_to' → logprob: -3.8316125869750977
    6. '=' → logprob: -4.331612586975098
    7. '_indices' → logprob: -4.581612586975098
    8. '_vals' → logprob: -4.581612586975098
    9. '_mapping' → logprob: -5.206612586975098
    10. '_list' → logprob: -5.331612586975098

Token 128: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759498476982117
    2. ' =' → logprob: -0.8259498476982117
    3. '={}' → logprob: -12.700949668884277
    4. '_' → logprob: -12.950949668884277
    5. '[' → logprob: -13.200949668884277
    6. ')' → logprob: -13.575949668884277
    7. '={' → logprob: -15.200949668884277
    8. 's' → logprob: -15.325949668884277
    9. ' ={' → logprob: -15.575949668884277
    10. '＝' → logprob: -15.825949668884277

Token 129: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.4741893708705902
    2. ' {' → logprob: -0.9741894006729126
    3. 'dict' → logprob: -10.224189758300781
    4. '{}' → logprob: -10.349189758300781
    5. ' dict' → logprob: -10.724189758300781
    6. ' [' → logprob: -11.724189758300781
    7. '[' → logprob: -11.849189758300781
    8. ' ' → logprob: -13.224189758300781
    9. '{name' → logprob: -13.474189758300781
    10. ' {}' → logprob: -13.599189758300781

Token 130: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.006992773152887821
    2. 'var' → logprob: -5.006992816925049
    3. ' v' → logprob: -8.75699234008789
    4. 'a' → logprob: -9.13199234008789
    5. '}' → logprob: -12.38199234008789
    6. ' var' → logprob: -12.38199234008789
    7. 'k' → logprob: -12.88199234008789
    8. '   ' → logprob: -15.50699234008789
    9. ''' → logprob: -16.00699234008789
    10. ' ' → logprob: -16.25699234008789

Token 131: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008139163837768137
    2. ' :' → logprob: -7.125813961029053
    3. '0' → logprob: -11.875813484191895
    4. ':v' → logprob: -13.500813484191895
    5. ' ' → logprob: -14.500813484191895
    6. ':int' → logprob: -16.00081443786621
    7. '=' → logprob: -16.37581443786621
    8. '```' → logprob: -16.50081443786621
    9. 'v' → logprob: -16.62581443786621
    10. '1' → logprob: -16.87581443786621

Token 132: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0052354102954268456
    2. ' ' → logprob: -5.255235195159912
    3. '
' → logprob: -14.50523567199707
    4. '   ' → logprob: -14.88023567199707
    5. '  ' → logprob: -15.50523567199707
    6. ' 
' → logprob: -16.38023567199707
    7. '}' → logprob: -16.38023567199707
    8. ''' → logprob: -16.50523567199707
    9. ' ' → logprob: -16.88023567199707
    10. '

' → logprob: -16.94273567199707

Token 133: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003809833142440766
    2. ' ' → logprob: -7.875380992889404
    3. '   ' → logprob: -15.375380516052246
    4. ''' → logprob: -16.250381469726562
    5. '}' → logprob: -16.312881469726562
    6. '  ' → logprob: -16.437881469726562
    7. '00' → logprob: -16.562881469726562
    8. '"' → logprob: -16.875381469726562
    9. 'int' → logprob: -17.250381469726562
    10. '000' → logprob: -17.375381469726562

Token 134: ' for' (ID: 395)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.5961855053901672
    2. ' for' → logprob: -0.8461855053901672
    3. ' }' → logprob: -4.596185684204102
    4. ',' → logprob: -5.346185684204102
    5. 'for' → logprob: -5.596185684204102
    6. ' ' → logprob: -6.596185684204102
    7. ')' → logprob: -9.721185684204102
    8. '   ' → logprob: -11.096185684204102
    9. ' ,' → logprob: -11.846185684204102
    10. '```' → logprob: -11.846185684204102

Token 135: ' v' (ID: 323)
  Prédit: 'variables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variables' → logprob: -0.31462013721466064
    2. ' variables' → logprob: -1.3146201372146606
    3. 'v' → logprob: -6.939620018005371
    4. ' v' → logprob: -7.939620018005371
    5. 'var' → logprob: -11.189620018005371
    6. 'variable' → logprob: -11.314620018005371
    7. 'vars' → logprob: -12.814620018005371
    8. '.variables' → logprob: -13.814620018005371
    9. ':variables' → logprob: -14.189620018005371
    10. ' variable' → logprob: -14.189620018005371

Token 136: ' in' (ID: 306)
  Prédit: ' variables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variables' → logprob: -0.576312780380249
    2. 'variables' → logprob: -0.826312780380249
    3. 'v' → logprob: -8.951313018798828
    4. ' v' → logprob: -9.201313018798828
    5. ' in' → logprob: -9.826313018798828
    6. ':variables' → logprob: -10.326313018798828
    7. 'vars' → logprob: -10.576313018798828
    8. 'variable' → logprob: -11.326313018798828
    9. 'var' → logprob: -11.701313018798828
    10. ' variable' → logprob: -13.201313018798828

Token 137: ' variables' (ID: 13955)
  Prédit: 'variables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variables' → logprob: -0.061978213489055634
    2. ' variables' → logprob: -2.8119781017303467
    3. 'variable' → logprob: -12.186978340148926
    4. 'var' → logprob: -12.936978340148926
    5. 'vars' → logprob: -13.436978340148926
    6. '.variables' → logprob: -14.811978340148926
    7. ':variables' → logprob: -14.811978340148926
    8. 'vari' → logprob: -15.561978340148926
    9. '_variables' → logprob: -15.811978340148926
    10. ' variable' → logprob: -16.31197738647461

Token 138: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -9.253090865968261e-06
    2. ' }' → logprob: -11.875009536743164
    3. '}
' → logprob: -13.250009536743164
    4. ')' → logprob: -14.750009536743164
    5. '})' → logprob: -17.250009536743164
    6. '}

' → logprob: -17.625009536743164
    7. ')}' → logprob: -19.375009536743164
    8. ',' → logprob: -19.625009536743164
    9. ' ' → logprob: -19.625009536743164
    10. '```' → logprob: -19.625009536743164

Token 139: 'def' (ID: 1314)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pc' → logprob: -0.43649396300315857
    2. 'i' → logprob: -2.0614938735961914
    3. 'ip' → logprob: -2.0614938735961914
    4. 'current' → logprob: -2.4364938735961914
    5. 'idx' → logprob: -5.436493873596191
    6. 'index' → logprob: -5.436493873596191
    7. 'pos' → logprob: -6.561493873596191
    8. 'ptr' → logprob: -7.561493873596191
    9. 'for' → logprob: -8.311493873596191
    10. 'pointer' → logprob: -8.686493873596191

Token 140: ' is' (ID: 382)
  Prédit: ' execute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' execute' → logprob: -0.4057389795780182
    2. ' run' → logprob: -1.1557389497756958
    3. 'execute' → logprob: -4.280738830566406
    4. ' simulate' → logprob: -6.030738830566406
    5. 'run' → logprob: -6.530738830566406
    6. ' find' → logprob: -8.155738830566406
    7. ' interpret' → logprob: -8.155738830566406
    8. 'simulate' → logprob: -8.780738830566406
    9. ' exec' → logprob: -9.405738830566406
    10. ' interpreter' → logprob: -10.030738830566406

Token 141: '_var' (ID: 12782)
  Prédit: '_number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.2376643270254135
    2. '_integer' → logprob: -3.112664222717285
    3. '_label' → logprob: -3.237664222717285
    4. '_variable' → logprob: -3.237664222717285
    5. '_digit' → logprob: -3.362664222717285
    6. '_jump' → logprob: -4.612664222717285
    7. '_numeric' → logprob: -4.737664222717285
    8. '_int' → logprob: -5.112664222717285
    9. '_constant' → logprob: -5.362664222717285
    10. '_valid' → logprob: -5.362664222717285

Token 142: '(s' (ID: 1858)
  Prédit: 'iable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iable' → logprob: -0.0007900939672254026
    2. 'name' → logprob: -8.375789642333984
    3. 'IABLE' → logprob: -8.500789642333984
    4. '_name' → logprob: -9.250789642333984
    5. 'iate' → logprob: -9.375789642333984
    6. '(' → logprob: -9.500789642333984
    7. 'ible' → logprob: -10.750789642333984
    8. '(token' → logprob: -10.875789642333984
    9. 'i' → logprob: -11.625789642333984
    10. 'ariable' → logprob: -11.750789642333984

Token 143: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0101923244073987
    2. ')' → logprob: -5.385192394256592
    3. '):
' → logprob: -5.385192394256592
    4. 's' → logprob: -7.760192394256592
    5. '(s' → logprob: -8.010191917419434
    6. '):

' → logprob: -9.885191917419434
    7. ' ):' → logprob: -10.135191917419434
    8. 'ent' → logprob: -10.885191917419434
    9. 'a' → logprob: -11.260191917419434
    10. ':' → logprob: -11.885191917419434

Token 144: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.15160293877124786
    2. ' s' → logprob: -2.2766029834747314
    3. 'return' → logprob: -3.5266029834747314
    4. 's' → logprob: -4.901602745056152
    5. '(s' → logprob: -7.026602745056152
    6. '   ' → logprob: -9.276602745056152
    7. ' ' → logprob: -9.776602745056152
    8. ' (' → logprob: -10.151602745056152
    9. ' lambda' → logprob: -10.401602745056152
    10. 'lambda' → logprob: -10.526602745056152

Token 145: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5271462798118591
    2. ' return' → logprob: -1.027146339416504
    3. 's' → logprob: -3.277146339416504
    4. ' s' → logprob: -4.277146339416504
    5. ' ' → logprob: -10.527146339416504
    6. 'len' → logprob: -11.152146339416504
    7. '   ' → logprob: -11.777146339416504
    8. ' len' → logprob: -12.402146339416504
    9. 'eturn' → logprob: -12.777146339416504
    10. '(s' → logprob: -13.152146339416504

Token 146: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5419724583625793
    2. ' s' → logprob: -1.0419723987579346
    3. 'len' → logprob: -3.0419723987579346
    4. ' len' → logprob: -4.041972637176514
    5. '(len' → logprob: -8.416972160339355
    6. '(s' → logprob: -9.666972160339355
    7. ' (' → logprob: -10.541972160339355
    8. ' isinstance' → logprob: -11.291972160339355
    9. ' ' → logprob: -11.666972160339355
    10. '(' → logprob: -13.416972160339355

Token 147: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.027624303475022316
    2. '.' → logprob: -3.6526243686676025
    3. ' in' → logprob: -7.152624130249023
    4. ' .' → logprob: -7.777624130249023
    5. 'is' → logprob: -9.152624130249023
    6. ' and' → logprob: -12.027624130249023
    7. '[' → logprob: -13.027624130249023
    8. 'and' → logprob: -13.152624130249023
    9. '>=' → logprob: -14.152624130249023
    10. '==' → logprob: -14.152624130249023

Token 148: 'alpha' (ID: 15453)
  Prédit: 'alpha'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alpha' → logprob: -3.054500666621607e-06
    2. ' alpha' → logprob: -13.62500286102295
    3. 'a' → logprob: -14.37500286102295
    4. '(alpha' → logprob: -14.75000286102295
    5. '_alpha' → logprob: -15.00000286102295
    6. 'al' → logprob: -15.50000286102295
    7. '	alpha' → logprob: -15.75000286102295
    8. '.alpha' → logprob: -16.875003814697266
    9. '-alpha' → logprob: -17.625003814697266
    10. '   ' → logprob: -17.875003814697266

Token 149: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.6286106983898208e-05
    2. 'and' → logprob: -11.250016212463379
    3. '())' → logprob: -13.625016212463379
    4. '(' → logprob: -14.125016212463379
    5. '()

' → logprob: -15.375016212463379
    6. '()
' → logprob: -15.375016212463379
    7. ' ()' → logprob: -15.625016212463379
    8. 's' → logprob: -15.875016212463379
    9. '()==' → logprob: -16.250017166137695
    10. '()%' → logprob: -16.875017166137695

Token 150: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.6379868984222412
    2. ' and' → logprob: -0.7629868984222412
    3. '()' → logprob: -5.63798713684082
    4. '<|end|>' → logprob: -6.38798713684082
    5. ' ' → logprob: -9.76298713684082
    6. '[' → logprob: -10.63798713684082
    7. '(' → logprob: -11.51298713684082
    8. '   ' → logprob: -11.63798713684082
    9. '<|end|>' → logprob: -12.51298713684082
    10. ')' → logprob: -12.63798713684082

Token 151: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.31343328952789307
    2. ' len' → logprob: -1.313433289527893
    3. '1' → logprob: -8.813433647155762
    4. '(len' → logprob: -11.063433647155762
    5. ' ' → logprob: -12.688433647155762
    6. 's' → logprob: -13.938433647155762
    7. '   ' → logprob: -14.063433647155762
    8. 'length' → logprob: -14.313433647155762
    9. '	len' → logprob: -14.313433647155762
    10. ' s' → logprob: -15.563433647155762

Token 152: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0003398726985324174
    2. '(' → logprob: -8.00033950805664
    3. 's' → logprob: -13.00033950805664
    4. ' (' → logprob: -13.37533950805664
    5. '(
' → logprob: -14.75033950805664
    6. '(a' → logprob: -15.87533950805664
    7. '=' → logprob: -17.75033950805664
    8. ' ' → logprob: -18.00033950805664
    9. '(

' → logprob: -18.00033950805664
    10. '```' → logprob: -18.12533950805664

Token 153: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.33068928122520447
    2. ' ==' → logprob: -1.7056893110275269
    3. ')' → logprob: -2.3306891918182373
    4. ')==' → logprob: -6.330689430236816
    5. '=' → logprob: -8.080689430236816
    6. '1' → logprob: -8.205689430236816
    7. '()' → logprob: -9.080689430236816
    8. '[' → logprob: -9.705689430236816
    9. ' ' → logprob: -9.830689430236816
    10. '()==' → logprob: -10.455689430236816

Token 154: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.012862063013017178
    2. ' ==' → logprob: -4.387862205505371
    3. '1' → logprob: -8.012862205505371
    4. '=' → logprob: -11.262862205505371
    5. '==
' → logprob: -13.137862205505371
    6. '===' → logprob: -13.262862205505371
    7. '()==' → logprob: -13.387862205505371
    8. ')==' → logprob: -13.637862205505371
    9. ']==' → logprob: -14.137862205505371
    10. ' ' → logprob: -14.887862205505371

Token 155: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '```' → logprob: -17.750158309936523
    4. '   ' → logprob: -17.875158309936523
    5. '  ' → logprob: -19.000158309936523
    6. '0' → logprob: -19.000158309936523
    7. '<|end|>' → logprob: -19.187658309936523
    8. '.' → logprob: -19.562658309936523
    9. '2' → logprob: -19.562658309936523
    10. '۱' → logprob: -19.687658309936523

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -19.625
    4. '<|end|>' → logprob: -20.125
    5. '   ' → logprob: -21.25
    6. '۱' → logprob: -21.5
    7. '.' → logprob: -22.0
    8. '１' → logprob: -22.375
    9. 'single' → logprob: -22.375
    10. '  ' → logprob: -22.75

Token 157: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.440765380859375
    2. 'def' → logprob: -1.065765380859375
    3. '<|end|>' → logprob: -5.065765380859375
    4. '

' → logprob: -5.690765380859375
    5. ' def' → logprob: -6.940765380859375
    6. '\n' → logprob: -8.065765380859375
    7. '<|end|>' → logprob: -8.440765380859375
    8. '
' → logprob: -9.065765380859375
    9. ':' → logprob: -9.190765380859375
    10. '    
' → logprob: -9.315765380859375

Token 158: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03651365637779236
    2. 'for' → logprob: -3.411513566970825
    3. 'while' → logprob: -6.536513805389404
    4. '
' → logprob: -6.911513805389404
    5. 'current' → logprob: -8.286513328552246
    6. ' for' → logprob: -10.286513328552246
    7. 'i' → logprob: -10.536513328552246
    8. 'next' → logprob: -11.161513328552246
    9. 'idx' → logprob: -11.411513328552246
    10. 'result' → logprob: -11.411513328552246

Token 159: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.028013158589601517
    2. ' get' → logprob: -5.028013229370117
    3. 'eval' → logprob: -5.153013229370117
    4. 'execute' → logprob: -5.403013229370117
    5. 'evaluate' → logprob: -5.653013229370117
    6. 'run' → logprob: -6.028013229370117
    7. 'value' → logprob: -6.528013229370117
    8. 'def' → logprob: -6.778013229370117
    9. 'resolve' → logprob: -7.153013229370117
    10. 'parse' → logprob: -7.903013229370117

Token 160: '_val' (ID: 13694)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.38698235154151917
    2. '_val' → logprob: -1.1369823217391968
    3. '_arg' → logprob: -10.011981964111328
    4. '_operand' → logprob: -10.011981964111328
    5. 'val' → logprob: -11.261981964111328
    6. 'value' → logprob: -12.761981964111328
    7. '_var' → logprob: -13.011981964111328
    8. '_next' → logprob: -13.886981964111328
    9. '_token' → logprob: -13.886981964111328
    10. '_' → logprob: -14.386981964111328

Token 161: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.011644463986158371
    2. '(' → logprob: -4.51164436340332
    3. '(token' → logprob: -8.13664436340332
    4. '(value' → logprob: -9.51164436340332
    5. '(val' → logprob: -9.51164436340332
    6. '(arg' → logprob: -10.13664436340332
    7. '(x' → logprob: -10.13664436340332
    8. ' (' → logprob: -10.63664436340332
    9. 's' → logprob: -10.88664436340332
    10. '(param' → logprob: -11.51164436340332

Token 162: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03013307973742485
    2. '):
' → logprob: -3.530133008956909
    3. ')' → logprob: -8.530133247375488
    4. ' ):' → logprob: -9.155133247375488
    5. ',' → logprob: -9.780133247375488
    6. '):

' → logprob: -11.905133247375488
    7. '):
' → logprob: -12.155133247375488
    8. '   ' → logprob: -12.280133247375488
    9. 's' → logprob: -12.905133247375488
    10. ' ):
' → logprob: -13.405133247375488

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00215799524448812
    2. 'if' → logprob: -6.502158164978027
    3. ' if' → logprob: -7.502158164978027
    4. '    
' → logprob: -10.627158164978027
    5. '
' → logprob: -10.877158164978027
    6. ':' → logprob: -11.377158164978027
    7. ':
' → logprob: -11.752158164978027
    8. '):
' → logprob: -12.002158164978027
    9. '(' → logprob: -12.002158164978027
    10. ')' → logprob: -12.127158164978027

Token 164: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.44651249051094055
    2. 'return' → logprob: -1.1965124607086182
    3. ' if' → logprob: -3.321512460708618
    4. ' return' → logprob: -4.446512699127197
    5. '   ' → logprob: -4.696512699127197
    6. 'try' → logprob: -7.321512699127197
    7. '
' → logprob: -8.446512222290039
    8. 'int' → logprob: -9.821512222290039
    9. 'vars' → logprob: -11.696512222290039
    10. ' try' → logprob: -11.946512222290039

Token 165: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.08959809690713882
    2. ' is' → logprob: -2.4645981788635254
    3. 's' → logprob: -7.464598178863525
    4. ' s' → logprob: -9.464597702026367
    5. ' ' → logprob: -12.839597702026367
    6. 'isdigit' → logprob: -13.089597702026367
    7. ' isinstance' → logprob: -14.214597702026367
    8. '   ' → logprob: -14.214597702026367
    9. '	is' → logprob: -14.339597702026367
    10. '(is' → logprob: -14.714597702026367

Token 166: '_var' (ID: 12782)
  Prédit: '_var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_var' → logprob: -0.0002752790169324726
    2. 'var' → logprob: -8.375275611877441
    3. 's' → logprob: -10.375275611877441
    4. '_val' → logprob: -11.875275611877441
    5. '_' → logprob: -12.750275611877441
    6. '(s' → logprob: -13.250275611877441
    7. '_vars' → logprob: -14.875275611877441
    8. '_v' → logprob: -15.250275611877441
    9. 'is' → logprob: -15.625275611877441
    10. 'a' → logprob: -16.000274658203125

Token 167: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -6.0629870858974755e-05
    2. '(' → logprob: -10.00006103515625
    3. ' (' → logprob: -11.75006103515625
    4. 's' → logprob: -12.00006103515625
    5. ')' → logprob: -14.00006103515625
    6. '(
' → logprob: -15.37506103515625
    7. ')(' → logprob: -17.25006103515625
    8. '<|end|>' → logprob: -18.37506103515625
    9. ')s' → logprob: -18.50006103515625
    10. ' ' → logprob: -18.87506103515625

Token 168: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47473615407943726
    2. '):' → logprob: -0.9747361540794373
    3. ')' → logprob: -7.974736213684082
    4. ' ):' → logprob: -9.224736213684082
    5. ' ):
' → logprob: -9.349736213684082
    6. '):
' → logprob: -9.474736213684082
    7. '):

' → logprob: -9.974736213684082
    8. ':' → logprob: -12.974736213684082
    9. '   ' → logprob: -14.099736213684082
    10. ':
' → logprob: -14.349736213684082

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40381208062171936
    2. 'return' → logprob: -1.153812050819397
    3. ' return' → logprob: -4.278811931610107
    4. ':
' → logprob: -6.778811931610107
    5. '   ' → logprob: -6.903811931610107
    6. ':return' → logprob: -8.028812408447266
    7. '
' → logprob: -8.153812408447266
    8. ':' → logprob: -9.778812408447266
    9. '):
' → logprob: -10.153812408447266
    10. ')' → logprob: -10.903812408447266

Token 170: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.032849136739969254
    2. ' return' → logprob: -3.532849073410034
    3. '       ' → logprob: -5.907849311828613
    4. '   ' → logprob: -7.907849311828613
    5. '
' → logprob: -12.282849311828613
    6. '	return' → logprob: -13.032849311828613
    7. '           ' → logprob: -14.782849311828613
    8. ' ' → logprob: -15.407849311828613
    9. '    ' → logprob: -16.157848358154297
    10. '    
' → logprob: -16.282848358154297

Token 171: ' vars' (ID: 36194)
  Prédit: 'vars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vars' → logprob: -0.06196846812963486
    2. ' vars' → logprob: -2.8119685649871826
    3. '(vars' → logprob: -14.811968803405762
    4. 'variables' → logprob: -15.686968803405762
    5. '_vars' → logprob: -16.436967849731445
    6. 'var' → logprob: -16.811967849731445
    7. 'vals' → logprob: -16.811967849731445
    8. 'Vars' → logprob: -16.936967849731445
    9. ' variables' → logprob: -17.561967849731445
    10. '   ' → logprob: -17.686967849731445

Token 172: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -2.7133641196996905e-05
    2. '_vals' → logprob: -11.12502670288086
    3. 'values' → logprob: -11.50002670288086
    4. 's' → logprob: -13.87502670288086
    5. '_VALUES' → logprob: -15.25002670288086
    6. '_variables' → logprob: -15.62502670288086
    7. '_vars' → logprob: -15.75002670288086
    8. 'vals' → logprob: -16.25002670288086
    9. '_val' → logprob: -16.37502670288086
    10. 'als' → logprob: -16.37502670288086

Token 173: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -2.0339031834737398e-05
    2. '[' → logprob: -10.875020027160645
    3. 's' → logprob: -13.750020027160645
    4. ' [' → logprob: -15.875020027160645
    5. '[
' → logprob: -16.50002098083496
    6. '[v' → logprob: -17.50002098083496
    7. '[S' → logprob: -17.87502098083496
    8. '```' → logprob: -18.37502098083496
    9. '(s' → logprob: -19.00002098083496
    10. '[get' → logprob: -19.25002098083496

Token 174: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24594703316688538
    2. ')' → logprob: -1.870947003364563
    3. ']
' → logprob: -3.1209471225738525
    4. ')
' → logprob: -4.370946884155273
    5. '   ' → logprob: -4.995946884155273
    6. '}' → logprob: -8.620946884155273
    7. 'else' → logprob: -8.745946884155273
    8. '<|end|>' → logprob: -9.620946884155273
    9. '}
' → logprob: -10.245946884155273
    10. ' ' → logprob: -10.370946884155273

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02834184840321541
    2. 'else' → logprob: -3.653341770172119
    3. ' else' → logprob: -6.403341770172119
    4. 'return' → logprob: -7.903341770172119
    5. '	else' → logprob: -11.903342247009277
    6. ' return' → logprob: -12.778342247009277
    7. 'elif' → logprob: -13.403342247009277
    8. '	return' → logprob: -14.278342247009277
    9. ')' → logprob: -14.528342247009277
    10. '       ' → logprob: -14.653342247009277

Token 176: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0917622521519661
    2. ' else' → logprob: -2.9667623043060303
    3. '   ' → logprob: -3.3417623043060303
    4. 'return' → logprob: -7.216762065887451
    5. '
' → logprob: -9.59176254272461
    6. '	else' → logprob: -11.59176254272461
    7. ' return' → logprob: -11.71676254272461
    8. 'int' → logprob: -11.84176254272461
    9. 'elif' → logprob: -12.96676254272461
    10. 'try' → logprob: -13.59176254272461

Token 177: ':
' (ID: 734)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023736177012324333
    2. ' int' → logprob: -4.273736000061035
    3. '   ' → logprob: -5.273736000061035
    4. 'return' → logprob: -5.898736000061035
    5. ':int' → logprob: -7.523736000061035
    6. ' return' → logprob: -7.773736000061035
    7. '       ' → logprob: -8.023736000061035
    8. '(int' → logprob: -8.523736000061035
    9. '[int' → logprob: -9.773736000061035
    10. '<int' → logprob: -10.273736000061035

Token 178: '       ' (ID: 309)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.007469143718481064
    2. 'return' → logprob: -5.007469177246094
    3. ' int' → logprob: -7.882469177246094
    4. '   ' → logprob: -8.632469177246094
    5. '       ' → logprob: -8.757469177246094
    6. ' return' → logprob: -10.132469177246094
    7. ':int' → logprob: -15.632469177246094
    8. '	int' → logprob: -15.882469177246094
    9. '<int' → logprob: -16.132469177246094
    10. '(int' → logprob: -16.132469177246094

Token 179: ' return' (ID: 622)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.968312951968983e-06
    2. ' int' → logprob: -12.000009536743164
    3. 'return' (adapté à ' return') → logprob: -12.500009536743164
    4. '   ' → logprob: -18.750009536743164
    5. ' return' → logprob: -20.750009536743164
    6. '[int' → logprob: -21.125009536743164
    7. '(int' → logprob: -21.375009536743164
    8. '<int' → logprob: -21.500009536743164
    9. '=int' → logprob: -21.875009536743164
    10. '
' → logprob: -22.125009536743164

Token 180: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0206720617134124e-05
    2. ' int' → logprob: -11.50001049041748
    3. '(int' → logprob: -21.875009536743164
    4. '<int' → logprob: -23.000009536743164
    5. '[int' → logprob: -24.125009536743164
    6. '   ' → logprob: -24.500009536743164
    7. '	int' → logprob: -25.000009536743164
    8. '0' → logprob: -25.250009536743164
    9. ':int' → logprob: -25.375009536743164
    10. 'ints' → logprob: -25.625009536743164

Token 181: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.001502598519437015
    2. '(' → logprob: -6.501502513885498
    3. 's' → logprob: -15.626502990722656
    4. '(
' → logprob: -15.876502990722656
    5. ' (' → logprob: -18.876502990722656
    6. '(

' → logprob: -19.001502990722656
    7. '('' → logprob: -20.126502990722656
    8. '((' → logprob: -21.001502990722656
    9. '(S' → logprob: -21.126502990722656
    10. '(
' → logprob: -22.126502990722656

Token 182: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.703443770878948e-06
    2. '(s' → logprob: -12.875007629394531
    3. ' )' → logprob: -13.000007629394531
    4. ')s' → logprob: -13.625007629394531
    5. ')
' → logprob: -14.125007629394531
    6. 's' → logprob: -14.500007629394531
    7. '(' → logprob: -16.12500762939453
    8. '))' → logprob: -16.12500762939453
    9. '())' → logprob: -16.25000762939453
    10. '[' → logprob: -17.00000762939453

Token 183: 'visited' (ID: 52453)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05112055316567421
    2. 'pc' → logprob: -3.6761205196380615
    3. 'idx' → logprob: -4.426120758056641
    4. 'for' → logprob: -5.551120758056641
    5. 'ip' → logprob: -5.676120758056641
    6. 'index' → logprob: -6.176120758056641
    7. 'current' → logprob: -6.426120758056641
    8. 'def' → logprob: -6.801120758056641
    9. 'ptr' → logprob: -8.92612075805664
    10. 'curr' → logprob: -9.55112075805664

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1668439507484436
    2. '=' → logprob: -2.541843891143799
    3. '_lines' → logprob: -2.791843891143799
    4. '_' → logprob: -5.041843891143799
    5. '=[]' → logprob: -6.041843891143799
    6. '_indices' → logprob: -6.666843891143799
    7. '[' → logprob: -7.166843891143799
    8. '[]' → logprob: -7.416843891143799
    9. '=set' → logprob: -8.041844367980957
    10. '_line' → logprob: -8.291844367980957

Token 185: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.009409071877598763
    2. '[' → logprob: -4.759408950805664
    3. ' set' → logprob: -7.509408950805664
    4. '{}' → logprob: -8.384408950805664
    5. '[]' → logprob: -12.009408950805664
    6. '{' → logprob: -12.009408950805664
    7. ' [' → logprob: -12.384408950805664
    8. '=set' → logprob: -14.509408950805664
    9. '(set' → logprob: -15.134408950805664
    10. '   ' → logprob: -15.384408950805664

Token 186: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08845239877700806
    2. '(' → logprob: -2.5884523391723633
    3. '()
' → logprob: -4.838452339172363
    4. '(
' → logprob: -7.838452339172363
    5. '<|end|>' → logprob: -7.963452339172363
    6. ',' → logprob: -8.213452339172363
    7. '_' → logprob: -9.213452339172363
    8. '()

' → logprob: -9.588452339172363
    9. ')' → logprob: -9.588452339172363
    10. '[' → logprob: -9.713452339172363

Token 187: 'pc' (ID: 6344)
  Prédit: 'pc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pc' → logprob: -0.4062769412994385
    2. 'i' → logprob: -2.0312769412994385
    3. 'index' → logprob: -2.7812769412994385
    4. 'ip' → logprob: -2.9062769412994385
    5. 'idx' → logprob: -3.1562769412994385
    6. 'def' → logprob: -3.6562769412994385
    7. 'current' → logprob: -4.656276702880859
    8. 'output' → logprob: -5.656276702880859
    9. 'ptr' → logprob: -6.656276702880859
    10. 'stack' → logprob: -7.156276702880859

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02631562203168869
    2. '=' → logprob: -3.651315689086914
    3. ' ' → logprob: -11.276315689086914
    4. '<|end|>' → logprob: -13.651315689086914
    5. ' =
' → logprob: -15.151315689086914
    6. '  ' → logprob: -15.401315689086914
    7. ' =)' → logprob: -15.526315689086914
    8. ')' → logprob: -15.526315689086914
    9. '0' → logprob: -15.651315689086914
    10. '.' → logprob: -16.026315689086914

Token 189: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '۰' → logprob: -20.125003814697266
    4. '   ' → logprob: -20.250003814697266
    5. '000' → logprob: -21.125003814697266
    6. '00' → logprob: -21.625003814697266
    7. ')' → logprob: -21.750003814697266
    8. '```' → logprob: -21.750003814697266
    9. '=' → logprob: -22.250003814697266
    10. '1' → logprob: -22.437503814697266

Token 190: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. 'program' → logprob: -16.937501907348633
    4. '   ' → logprob: -17.750001907348633
    5. '۰' → logprob: -18.062501907348633
    6. 'start' → logprob: -18.062501907348633
    7. '-' → logprob: -18.125001907348633
    8. '00' → logprob: -18.125001907348633
    9. '000' → logprob: -18.187501907348633
    10. '1' → logprob: -18.187501907348633

Token 191: '

' (ID: 279)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0010319766588509083
    2. '
' → logprob: -7.751031875610352
    3. ' while' → logprob: -7.876031875610352
    4. 'output' → logprob: -8.626031875610352
    5. 'result' → logprob: -11.126031875610352
    6. 'outputs' → logprob: -11.626031875610352
    7. 'results' → logprob: -13.001031875610352
    8. 'stack' → logprob: -13.626031875610352
    9. '\n' → logprob: -13.626031875610352
    10. 'steps' → logprob: -13.751031875610352

Token 192: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0005695947329513729
    2. 'output' → logprob: -7.625569820404053
    3. ' while' → logprob: -10.125569343566895
    4. 'result' → logprob: -10.875569343566895
    5. 'if' → logprob: -11.625569343566895
    6. 'out' → logprob: -12.625569343566895
    7. 'outputs' → logprob: -12.625569343566895
    8. 'line' → logprob: -13.125569343566895
    9. 'results' → logprob: -13.875569343566895
    10. 'wh' → logprob: -14.375569343566895

Token 193: ' True' (ID: 6432)
  Prédit: ' pc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pc' → logprob: -0.0004388942907098681
    2. 'pc' → logprob: -7.750438690185547
    3. '(pc' → logprob: -12.875438690185547
    4. ' ' → logprob: -13.125438690185547
    5. '	pc' → logprob: -13.125438690185547
    6. ' True' → logprob: -13.750438690185547
    7. 'True' → logprob: -15.750438690185547
    8. '_pc' → logprob: -15.875438690185547
    9. '.pc' → logprob: -16.000438690185547
    10. '   ' → logprob: -16.875438690185547

Token 194: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00022070204431656748
    2. ':
' → logprob: -8.50022029876709
    3. ' :' → logprob: -11.25022029876709
    4. '   ' → logprob: -12.87522029876709
    5. ',' → logprob: -14.75022029876709
    6. ':

' → logprob: -15.12522029876709
    7. '.' → logprob: -15.75022029876709
    8. '):' → logprob: -16.125221252441406
    9. ':**' → logprob: -16.250221252441406
    10. ')' → logprob: -16.375221252441406

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024216759484261274
    2. 'if' → logprob: -6.502421855926514
    3. ' if' → logprob: -7.002421855926514
    4. '   ' → logprob: -12.627421379089355
    5. '	if' → logprob: -13.377421379089355
    6. '<|end|>' → logprob: -13.377421379089355
    7. '    
' → logprob: -13.627421379089355
    8. '    ' → logprob: -14.877421379089355
    9. '```' → logprob: -15.252421379089355
    10. '  ' → logprob: -15.252421379089355

Token 196: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.14440087974071503
    2. '   ' → logprob: -2.3944008350372314
    3. ' if' → logprob: -3.1444008350372314
    4. 'pc' → logprob: -9.019400596618652
    5. '    ' → logprob: -12.394400596618652
    6. '    
' → logprob: -12.519400596618652
    7. 'line' → logprob: -12.519400596618652
    8. ' pc' → logprob: -13.519400596618652
    9. ' line' → logprob: -13.769400596618652
    10. '	if' → logprob: -13.769400596618652

Token 197: ' pc' (ID: 18736)
  Prédit: ' pc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pc' → logprob: -0.06201866269111633
    2. 'pc' → logprob: -2.812018632888794
    3. '	pc' → logprob: -10.312018394470215
    4. '   ' → logprob: -11.562018394470215
    5. '(pc' → logprob: -12.312018394470215
    6. ' ' → logprob: -12.812018394470215
    7. '_pc' → logprob: -15.187018394470215
    8. '  ' → logprob: -15.437018394470215
    9. '.pc' → logprob: -15.437018394470215
    10. ' not' → logprob: -15.562018394470215

Token 198: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.4008266031742096
    2. '>=' → logprob: -1.1508265733718872
    3. ' <' → logprob: -4.900826454162598
    4. '<' → logprob: -5.150826454162598
    5. ' not' → logprob: -8.150826454162598
    6. '==' → logprob: -8.900826454162598
    7. ' ==' → logprob: -9.025826454162598
    8. 'not' → logprob: -9.900826454162598
    9. ' ' → logprob: -11.275826454162598
    10. ')>=' → logprob: -12.775826454162598

Token 199: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017064863350242376
    2. ' ' → logprob: -6.376706600189209
    3. 'len' → logprob: -13.12670612335205
    4. 'N' → logprob: -14.00170612335205
    5. '   ' → logprob: -14.25170612335205
    6. 'or' → logprob: -15.50170612335205
    7. ' or' → logprob: -15.50170612335205
    8. ' N' → logprob: -15.75170612335205
    9. ' len' → logprob: -16.251707077026367
    10. '```' → logprob: -17.001707077026367

Token 200: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018077615823131055
    2. ' ' → logprob: -9.000181198120117
    3. 'N' → logprob: -10.250181198120117
    4. 'len' → logprob: -10.750181198120117
    5. '   ' → logprob: -15.500181198120117
    6. ' N' → logprob: -15.625181198120117
    7. ' len' → logprob: -16.000181198120117
    8. '```' → logprob: -18.250181198120117
    9. '00' → logprob: -18.437681198120117
    10. '  ' → logprob: -18.500181198120117

Token 201: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.04859009385108948
    2. 'or' → logprob: -3.0485901832580566
    3. '	or' → logprob: -13.423589706420898
    4. ' ' → logprob: -14.423589706420898
    5. '   ' → logprob: -15.048589706420898
    6. ')' → logprob: -16.1735897064209
    7. '0' → logprob: -16.2985897064209
    8. '```' → logprob: -16.6735897064209
    9. '    ' → logprob: -17.6735897064209
    10. '<|end|>' → logprob: -17.7985897064209

Token 202: ' pc' (ID: 18736)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pc' → logprob: -0.009764233604073524
    2. ' pc' → logprob: -4.634764194488525
    3. '   ' → logprob: -12.134764671325684
    4. '	pc' → logprob: -13.259764671325684
    5. '(pc' → logprob: -14.509764671325684
    6. ' ' → logprob: -15.509764671325684
    7. '.pc' → logprob: -15.759764671325684
    8. '_pc' → logprob: -16.134763717651367
    9. '  ' → logprob: -16.509763717651367
    10. '    ' → logprob: -17.634763717651367

Token 203: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.008619539439678192
    2. ' >=' → logprob: -4.75861930847168
    3. '==' → logprob: -13.25861930847168
    4. ']>=' → logprob: -13.75861930847168
    5. 'or' → logprob: -13.88361930847168
    6. ')>=' → logprob: -15.00861930847168
    7. '```' → logprob: -15.38361930847168
    8. ' or' → logprob: -15.50861930847168
    9. '>' → logprob: -15.88361930847168
    10. '   ' → logprob: -16.00861930847168

Token 204: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.07914865016937256
    2. 'len' → logprob: -2.579148769378662
    3. ' N' → logprob: -8.454148292541504
    4. ' len' → logprob: -10.204148292541504
    5. '   ' → logprob: -11.704148292541504
    6. ' ' → logprob: -15.829148292541504
    7. 'n' → logprob: -15.954148292541504
    8. '(len' → logprob: -16.32914924621582
    9. 'Len' → logprob: -16.57914924621582
    10. '  ' → logprob: -16.70414924621582

Token 205: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5870773792266846
    2. ':
' → logprob: -0.8370773792266846
    3. ' or' → logprob: -4.5870771408081055
    4. '   ' → logprob: -7.0870771408081055
    5. ':return' → logprob: -10.587077140808105
    6. ':
' → logprob: -11.587077140808105
    7. 'or' → logprob: -11.962077140808105
    8. '       ' → logprob: -12.212077140808105
    9. ':

' → logprob: -12.462077140808105
    10. '):
' → logprob: -13.087077140808105

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22586210072040558
    2. '   ' → logprob: -1.6008621454238892
    3. ' break' → logprob: -8.350862503051758
    4. 'break' → logprob: -8.725862503051758
    5. '
' → logprob: -10.975862503051758
    6. '	break' → logprob: -11.350862503051758
    7. ',' → logprob: -12.350862503051758
    8. '    
' → logprob: -12.850862503051758
    9. '           ' → logprob: -13.100862503051758
    10. '```' → logprob: -13.350862503051758

Token 207: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7125826478004456
    2. 'break' → logprob: -0.7125826478004456
    3. ' break' → logprob: -4.587582588195801
    4. '       ' → logprob: -4.712582588195801
    5. '	break' → logprob: -9.4625825881958
    6. '
' → logprob: -12.2125825881958
    7. '           ' → logprob: -13.0875825881958
    8. ' ' → logprob: -13.2125825881958
    9. '  ' → logprob: -14.4625825881958
    10. '_break' → logprob: -14.8375825881958

Token 208: ' Jump' (ID: 51108)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0004384174826554954
    2. ' break' → logprob: -7.750438213348389
    3. '   ' → logprob: -11.875438690185547
    4. '	break' → logprob: -15.250438690185547
    5. 'print' → logprob: -15.500438690185547
    6. 'Break' → logprob: -15.750438690185547
    7. '#' → logprob: -16.500438690185547
    8. 'BREAK' → logprob: -16.625438690185547
    9. '
' → logprob: -16.875438690185547
    10. '       ' → logprob: -18.250438690185547

Token 209: 'ed' (ID: 295)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.025039879605174065
    2. '   ' → logprob: -4.0250396728515625
    3. ' break' → logprob: -5.6500396728515625
    4. '       ' → logprob: -5.9000396728515625
    5. '
' → logprob: -7.6500396728515625
    6. '	break' → logprob: -10.025039672851562
    7. '           ' → logprob: -10.775039672851562
    8. '    ' → logprob: -10.775039672851562
    9. ' ' → logprob: -11.150039672851562
    10. '_break' → logprob: -11.775039672851562

Token 210: ' outside' (ID: 7539)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.011903173290193081
    2. ' out' → logprob: -4.511903285980225
    3. 'outside' → logprob: -7.136903285980225
    4. '_out' → logprob: -10.386902809143066
    5. '	out' → logprob: -11.386902809143066
    6. ' outside' → logprob: -11.761902809143066
    7. '   ' → logprob: -13.386902809143066
    8. ' خارج' → logprob: -14.011902809143066
    9. 'break' → logprob: -14.011902809143066
    10. 'Out' → logprob: -14.136902809143066

Token 211: ' the' (ID: 290)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.6636386513710022
    2. ' the' → logprob: -1.2886385917663574
    3. 'the' → logprob: -2.1636385917663574
    4. '   ' → logprob: -2.4136385917663574
    5. ' break' → logprob: -6.538638591766357
    6. '       ' → logprob: -6.663638591766357
    7. 'program' → logprob: -6.788638591766357
    8. ' of' → logprob: -7.538638591766357
    9. '
' → logprob: -8.663639068603516
    10. ' program' → logprob: -9.663639068603516

Token 212: ' program' (ID: 2193)
  Prédit: 'program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'program' → logprob: -0.005528169684112072
    2. ' program' → logprob: -5.255527973175049
    3. 'code' → logprob: -8.505528450012207
    4. 'range' → logprob: -10.255528450012207
    5. 'bounds' → logprob: -10.880528450012207
    6. 'list' → logprob: -12.005528450012207
    7. ' code' → logprob: -12.130528450012207
    8. 'valid' → logprob: -12.630528450012207
    9. 'instruction' → logprob: -12.630528450012207
    10. 'instructions' → logprob: -12.755528450012207

Token 213: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004416113253682852
    2. '   ' → logprob: -5.629415988922119
    3. 'break' → logprob: -7.504415988922119
    4. '           ' → logprob: -9.254416465759277
    5. ' break' → logprob: -9.504416465759277
    6. ',' → logprob: -9.504416465759277
    7. ':' → logprob: -12.379416465759277
    8. '      ' → logprob: -12.629416465759277
    9. '     ' → logprob: -12.629416465759277
    10. '
' → logprob: -13.129416465759277

Token 214: ' stop' (ID: 5666)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.2017030417919159
    2. '   ' → logprob: -2.2017030715942383
    3. ' break' → logprob: -3.3267030715942383
    4. '       ' → logprob: -3.3267030715942383
    5. '
' → logprob: -9.576703071594238
    6. '	break' → logprob: -9.951703071594238
    7. '           ' → logprob: -10.076703071594238
    8. '  ' → logprob: -10.826703071594238
    9. ' ' → logprob: -11.076703071594238
    10. '#' → logprob: -11.951703071594238

Token 215: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34635135531425476
    2. 'break' → logprob: -1.3463513851165771
    3. '   ' → logprob: -3.596351385116577
    4. ' break' → logprob: -5.596351146697998
    5. '           ' → logprob: -7.471351146697998
    6. '
' → logprob: -7.596351146697998
    7. '	break' → logprob: -8.971351623535156
    8. '_break' → logprob: -10.221351623535156
    9. '.' → logprob: -10.971351623535156
    10. '    ' → logprob: -11.096351623535156

Token 216: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005461543798446655
    2. '   ' → logprob: -5.255461692810059
    3. '           ' → logprob: -9.255461692810059
    4. 'break' → logprob: -9.505461692810059
    5. ' break' → logprob: -11.505461692810059
    6. '      ' → logprob: -11.630461692810059
    7. '```' → logprob: -12.130461692810059
    8. '     ' → logprob: -12.130461692810059
    9. '	break' → logprob: -12.255461692810059
    10. '    ' → logprob: -12.505461692810059

Token 217: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0001980570232262835
    2. '   ' → logprob: -9.375198364257812
    3. '       ' → logprob: -9.625198364257812
    4. ' break' → logprob: -10.000198364257812
    5. '	break' → logprob: -13.375198364257812
    6. '
' → logprob: -17.000198364257812
    7. '```' → logprob: -17.125198364257812
    8. 'BREAK' → logprob: -17.250198364257812
    9. '           ' → logprob: -17.625198364257812
    10. '_break' → logprob: -17.875198364257812

Token 218: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015836331993341446
    2. '    
' → logprob: -4.515836238861084
    3. 'line' → logprob: -5.515836238861084
    4. '(line' → logprob: -8.015836715698242
    5. '
' → logprob: -8.265836715698242
    6. ' line' → logprob: -9.265836715698242
    7. '  
' → logprob: -11.390836715698242
    8. '	line' → logprob: -11.765836715698242
    9. '```' → logprob: -11.765836715698242
    10. ',' → logprob: -12.015836715698242

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006512983236461878
    2. 'line' → logprob: -5.2565131187438965
    3. '    
' → logprob: -6.7565131187438965
    4. ' line' → logprob: -9.881512641906738
    5. '(line' → logprob: -10.631512641906738
    6. '
' → logprob: -11.006512641906738
    7. '```' → logprob: -12.381512641906738
    8. ',' → logprob: -12.506512641906738
    9. '_,' → logprob: -12.881512641906738
    10. '_line' → logprob: -12.881512641906738

Token 220: ' state' (ID: 2608)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0004267428594175726
    2. '   ' → logprob: -8.125426292419434
    3. 'if' → logprob: -9.625426292419434
    4. '_,' → logprob: -10.875426292419434
    5. '    
' → logprob: -11.125426292419434
    6. ' line' → logprob: -11.250426292419434
    7. '(line' → logprob: -11.250426292419434
    8. 'ln' → logprob: -13.625426292419434
    9. '_line' → logprob: -13.750426292419434
    10. 'visited' → logprob: -14.375426292419434

Token 221: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.325050950050354
    2. '=' → logprob: -1.325050950050354
    3. '_line' → logprob: -5.9500508308410645
    4. ',' → logprob: -6.0750508308410645
    5. '=line' → logprob: -6.0750508308410645
    6. '   ' → logprob: -6.4500508308410645
    7. '_' → logprob: -6.8250508308410645
    8. 'line' → logprob: -6.9500508308410645
    9. ')' → logprob: -8.575051307678223
    10. ' line' → logprob: -9.450051307678223

Token 222: ' (' (ID: 350)
  Prédit: '(pc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pc' → logprob: -0.21752652525901794
    2. '(' → logprob: -1.7175265550613403
    3. '(program' → logprob: -4.342526435852051
    4. '(tuple' → logprob: -6.342526435852051
    5. '(p' → logprob: -8.34252643585205
    6. 'pc' → logprob: -8.59252643585205
    7. ' (' → logprob: -8.71752643585205
    8. '(f' → logprob: -8.96752643585205
    9. '(line' → logprob: -8.96752643585205
    10. '(hash' → logprob: -9.96752643585205

Token 223: 'pc' (ID: 6344)
  Prédit: 'pc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pc' → logprob: -8.180258191714529e-06
    2. 'tuple' → logprob: -11.875008583068848
    3. ' pc' → logprob: -13.750008583068848
    4. '(pc' → logprob: -17.50000762939453
    5. 'vars' → logprob: -17.62500762939453
    6. '   ' → logprob: -18.00000762939453
    7. 'program' → logprob: -18.00000762939453
    8. 'variables' → logprob: -18.37500762939453
    9. 'pcs' → logprob: -18.87500762939453
    10. ')' → logprob: -19.12500762939453

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006089136004447937
    2. ',
' → logprob: -7.875608921051025
    3. 'tuple' → logprob: -8.875608444213867
    4. 'fro' → logprob: -9.875608444213867
    5. ' ,' → logprob: -11.625608444213867
    6. ',)' → logprob: -11.875608444213867
    7. ',f' → logprob: -12.000608444213867
    8. '
' → logprob: -12.625608444213867
    9. ',{
' → logprob: -13.125608444213867
    10. ' tuple' → logprob: -13.125608444213867

Token 225: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.00426253117620945
    2. 'fro' → logprob: -5.629262447357178
    3. ' tuple' → logprob: -7.504262447357178
    4. ')' → logprob: -9.379262924194336
    5. '(tuple' → logprob: -11.379262924194336
    6. ' fro' → logprob: -11.629262924194336
    7. '
' → logprob: -13.004262924194336
    8. 'tu' → logprob: -13.504262924194336
    9. '

' → logprob: -14.379262924194336
    10. '),' → logprob: -14.629262924194336

Token 226: '(vars' (ID: 174980)
  Prédit: '(sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.3165564239025116
    2. '(vars' → logprob: -1.316556453704834
    3. '((' → logprob: -5.816556453704834
    4. 'vars' → logprob: -9.066555976867676
    5. '(' → logprob: -9.691555976867676
    6. 'sorted' → logprob: -10.441555976867676
    7. '(v' → logprob: -10.566555976867676
    8. '(items' → logprob: -10.816555976867676
    9. '(vals' → logprob: -10.816555976867676
    10. '(tuple' → logprob: -11.066555976867676

Token 227: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.00029995047952979803
    2. 'values' → logprob: -8.250300407409668
    3. '_vals' → logprob: -11.125300407409668
    4. '[' → logprob: -12.625300407409668
    5. ')' → logprob: -12.875300407409668
    6. 'vals' → logprob: -13.000300407409668
    7. '_' → logprob: -13.125300407409668
    8. '(values' → logprob: -13.250300407409668
    9. 'val' → logprob: -13.250300407409668
    10. 's' → logprob: -13.375300407409668

Token 228: '[v' (ID: 36561)
  Prédit: '.items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.6713961958885193
    2. '[v' → logprob: -0.9213961958885193
    3. '.values' → logprob: -2.421396255493164
    4. '[var' → logprob: -6.296396255493164
    5. '[k' → logprob: -9.046396255493164
    6. '(v' → logprob: -9.046396255493164
    7. '[c' → logprob: -9.671396255493164
    8. 'items' → logprob: -10.046396255493164
    9. '[item' → logprob: -11.046396255493164
    10. '[val' → logprob: -11.296396255493164

Token 229: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00034952821442857385
    2. 'for' → logprob: -8.000349998474121
    3. ' for' → logprob: -11.500349998474121
    4. 'in' → logprob: -14.000349998474121
    5. ' ]' → logprob: -14.125349998474121
    6. '])' → logprob: -14.125349998474121
    7. ')' → logprob: -14.500349998474121
    8. ']
' → logprob: -15.375349998474121
    9. ']))' → logprob: -15.500349998474121
    10. '}' → logprob: -15.750349998474121

Token 230: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1801125556230545
    2. ' for' → logprob: -1.930112600326538
    3. ']' → logprob: -3.930112600326538
    4. 'v' → logprob: -10.555112838745117
    5. ')' → logprob: -11.680112838745117
    6. '[v' → logprob: -12.430112838745117
    7. '	for' → logprob: -12.805112838745117
    8. '()' → logprob: -13.305112838745117
    9. 'in' → logprob: -13.430112838745117
    10. '])' → logprob: -13.930112838745117

Token 231: ' v' (ID: 323)
  Prédit: 'variables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'variables' → logprob: -0.029753848910331726
    2. ' variables' → logprob: -3.5297539234161377
    3. 'vars' → logprob: -13.404753684997559
    4. 'sorted' → logprob: -14.654753684997559
    5. 'v' → logprob: -15.029753684997559
    6. '   ' → logprob: -15.154753684997559
    7. 'variable' → logprob: -15.404753684997559
    8. 'var' → logprob: -15.529753684997559
    9. '.variables' → logprob: -15.779753684997559
    10. ' sorted' → logprob: -17.154754638671875

Token 232: ' in' (ID: 306)
  Prédit: 'variables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variables' → logprob: -0.026464708149433136
    2. ' variables' → logprob: -3.6514647006988525
    3. ' in' → logprob: -9.026464462280273
    4. 'in' → logprob: -10.776464462280273
    5. '.variables' → logprob: -11.901464462280273
    6. ':variables' → logprob: -12.151464462280273
    7. 'ariable' → logprob: -12.276464462280273
    8. 'vars' → logprob: -13.401464462280273
    9. 'var' → logprob: -13.776464462280273
    10. 'sorted' → logprob: -14.026464462280273

Token 233: ' variables' (ID: 13955)
  Prédit: 'variables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variables' → logprob: -0.0008058178937062621
    2. ' variables' → logprob: -7.125805854797363
    3. 'sorted' → logprob: -14.500805854797363
    4. 'variable' → logprob: -15.250805854797363
    5. 'vars' → logprob: -15.750805854797363
    6. '.variables' → logprob: -15.750805854797363
    7. 'vari' → logprob: -16.625804901123047
    8. '   ' → logprob: -16.750804901123047
    9. 'variants' → logprob: -17.125804901123047
    10. 'Variables' → logprob: -17.625804901123047

Token 234: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.5794593691825867
    2. '))' → logprob: -0.8294593691825867
    3. ')' → logprob: -5.954459190368652
    4. ')
' → logprob: -7.079459190368652
    5. '))

' → logprob: -10.454459190368652
    6. '   ' → logprob: -10.829459190368652
    7. ' ))
' → logprob: -11.454459190368652
    8. '))
' → logprob: -11.579459190368652
    9. '),' → logprob: -12.204459190368652
    10. ' ))' → logprob: -13.204459190368652

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013674698770046234
    2. 'if' → logprob: -4.513674736022949
    3. ' if' → logprob: -6.013674736022949
    4. ')' → logprob: -9.38867473602295
    5. '
' → logprob: -10.26367473602295
    6. '<|end|>' → logprob: -10.63867473602295
    7. '    
' → logprob: -11.13867473602295
    8. ',' → logprob: -11.76367473602295
    9. ')
' → logprob: -12.01367473602295
    10. '	if' → logprob: -13.13867473602295

Token 236: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4048647880554199
    2. '   ' → logprob: -1.15486478805542
    3. ' if' → logprob: -4.02986478805542
    4. '    
' → logprob: -10.654865264892578
    5. ')' → logprob: -10.779865264892578
    6. '
' → logprob: -12.029865264892578
    7. '	if' → logprob: -13.529865264892578
    8. 'If' → logprob: -14.029865264892578
    9. '<|end|>' → logprob: -14.029865264892578
    10. ',' → logprob: -14.404865264892578

Token 237: ' To' (ID: 2514)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0002458430244587362
    2. '   ' → logprob: -8.500246047973633
    3. ' if' → logprob: -10.125246047973633
    4. 'If' → logprob: -13.750246047973633
    5. '
' → logprob: -14.750246047973633
    6. '#' → logprob: -15.250246047973633
    7. '    
' → logprob: -15.625246047973633
    8. 'visited' → logprob: -15.750246047973633
    9. 'state' → logprob: -16.750246047973633
    10. '	if' → logprob: -16.875246047973633

Token 238: ' detect' (ID: 11839)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21319089829921722
    2. ' if' → logprob: -2.713190793991089
    3. '   ' → logprob: -3.463190793991089
    4. 'continue' → logprob: -3.963190793991089
    5. 'check' → logprob: -3.963190793991089
    6. 'prevent' → logprob: -4.463191032409668
    7. 'o' → logprob: -5.588191032409668
    8. ' check' → logprob: -5.963191032409668
    9. ' prevent' → logprob: -6.088191032409668
    10. '
' → logprob: -6.088191032409668

Token 239: ' infinite' (ID: 48413)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.02327890694141388
    2. ' infinite' → logprob: -4.023278713226318
    3. ' loops' → logprob: -5.773278713226318
    4. 'loops' → logprob: -6.398278713226318
    5. 'loop' → logprob: -9.398279190063477
    6. ' cycles' → logprob: -9.648279190063477
    7. 'cycles' → logprob: -9.773279190063477
    8. 'visited' → logprob: -10.398279190063477
    9. ' an' → logprob: -10.773279190063477
    10. ' potential' → logprob: -10.773279190063477

Token 240: ' loops' (ID: 57130)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.24789178371429443
    2. 'loops' → logprob: -1.9978917837142944
    3. ' loops' → logprob: -2.747891902923584
    4. ' loop' → logprob: -3.997891902923584
    5. '_loop' → logprob: -6.497891902923584
    6. '-loop' → logprob: -12.872891426086426
    7. '_lo' → logprob: -12.997891426086426
    8. ' looping' → logprob: -13.122891426086426
    9. 'loopt' → logprob: -13.997891426086426
    10. 'Loops' → logprob: -13.997891426086426

Token 241: ' more' (ID: 945)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004205663222819567
    2. ' if' → logprob: -6.004205703735352
    3. 'if' → logprob: -6.379205703735352
    4. ',' → logprob: -11.254205703735352
    5. '
' → logprob: -11.504205703735352
    6. '    
' → logprob: -12.004205703735352
    7. '<|end|>' → logprob: -13.754205703735352
    8. '  ' → logprob: -14.879205703735352
    9. '<|end|>' → logprob: -15.129205703735352
    10. ')' → logprob: -15.129205703735352

Token 242: ' efficiently' (ID: 34229)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08543591946363449
    2. '   ' → logprob: -2.9604358673095703
    3. 'elif' → logprob: -4.33543586730957
    4. ' if' → logprob: -5.83543586730957
    5. 'in' → logprob: -6.08543586730957
    6. '=' → logprob: -6.71043586730957
    7. ':' → logprob: -6.96043586730957
    8. 'lines' → logprob: -6.96043586730957
    9. 'visited' → logprob: -6.96043586730957
    10. 'prec' → logprob: -7.21043586730957

Token 243: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032870364375412464
    2. ' if' → logprob: -6.378286838531494
    3. 'if' → logprob: -6.503286838531494
    4. ',' → logprob: -9.753287315368652
    5. '
' → logprob: -11.128287315368652
    6. '    
' → logprob: -11.753287315368652
    7. ')' → logprob: -13.628287315368652
    8. '<|end|>' → logprob: -14.253287315368652
    9. '  ' → logprob: -14.503287315368652
    10. '<|end|>' → logprob: -15.503287315368652

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005728095420636237
    2. 'if' → logprob: -8.00057315826416
    3. ' if' → logprob: -8.37557315826416
    4. '    
' → logprob: -13.25057315826416
    5. '
' → logprob: -13.37557315826416
    6. '#' → logprob: -14.12557315826416
    7. '  ' → logprob: -14.25057315826416
    8. '<|end|>' → logprob: -14.37557315826416
    9. ',' → logprob: -14.75057315826416
    10. '       ' → logprob: -15.25057315826416

Token 245: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15023648738861084
    2. '   ' → logprob: -2.1502366065979004
    3. ' if' → logprob: -3.7752366065979004
    4. '
' → logprob: -9.775236129760742
    5. '  ' → logprob: -10.775236129760742
    6. ' ' → logprob: -11.400236129760742
    7. '    
' → logprob: -12.025236129760742
    8. '```' → logprob: -12.775236129760742
    9. '	if' → logprob: -13.650236129760742
    10. ')' → logprob: -13.775236129760742

Token 246: ' we' (ID: 581)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08442860841751099
    2. '   ' → logprob: -2.584428548812866
    3. ' if' → logprob: -5.209428787231445
    4. '#' → logprob: -11.084428787231445
    5. '  ' → logprob: -11.209428787231445
    6. '
' → logprob: -11.334428787231445
    7. ' ' → logprob: -11.709428787231445
    8. '    
' → logprob: -13.334428787231445
    9. '       ' → logprob: -13.709428787231445
    10. '    ' → logprob: -14.084428787231445

Token 247: ' track' (ID: 5290)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09329226613044739
    2. ' if' → logprob: -2.968292236328125
    3. '   ' → logprob: -3.343292236328125
    4. ' can' → logprob: -7.343292236328125
    5. 'continue' → logprob: -8.093292236328125
    6. 'check' → logprob: -8.343292236328125
    7. ' check' → logprob: -8.718292236328125
    8. '
' → logprob: -9.468292236328125
    9. 'can' → logprob: -9.468292236328125
    10. ' should' → logprob: -9.468292236328125

Token 248: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6098599433898926
    2. 'state' → logprob: -0.9848599433898926
    3. 'states' → logprob: -3.4848599433898926
    4. 'if' → logprob: -3.4848599433898926
    5. 'the' → logprob: -4.984859943389893
    6. '(state' → logprob: -5.234859943389893
    7. 'all' → logprob: -5.984859943389893
    8. '   ' → logprob: -6.484859943389893
    9. ' visited' → logprob: -7.109859943389893
    10. 'execut' → logprob: -7.484859943389893

Token 249: ' as' (ID: 472)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.015509035438299179
    2. 'states' → logprob: -4.265509128570557
    3. '_states' → logprob: -7.265509128570557
    4. '.' → logprob: -8.265508651733398
    5. 'add' → logprob: -8.765508651733398
    6. ' states' → logprob: -9.890508651733398
    7. '   ' → logprob: -10.265508651733398
    8. 'state' → logprob: -10.390508651733398
    9. '
' → logprob: -10.515508651733398
    10. ',' → logprob: -10.765508651733398

Token 250: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6433278322219849
    2. ' a' → logprob: -2.1433277130126953
    3. 'visited' → logprob: -2.1433277130126953
    4. '(state' → logprob: -2.8933277130126953
    5. 'state' → logprob: -3.2683277130126953
    6. 'set' → logprob: -3.2683277130126953
    7. ' (' → logprob: -3.3933277130126953
    8. '   ' → logprob: -3.6433277130126953
    9. 'states' → logprob: -3.6433277130126953
    10. ' states' → logprob: -5.518327713012695

Token 251: 'pc' (ID: 6344)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.019502997398376465
    2. 'pc' → logprob: -4.019503116607666
    3. ')' → logprob: -7.019503116607666
    4. ' state' → logprob: -8.144502639770508
    5. 'program' → logprob: -9.894502639770508
    6. '   ' → logprob: -10.644502639770508
    7. 'line' → logprob: -10.769502639770508
    8. ' pc' → logprob: -10.894502639770508
    9. '(state' → logprob: -12.019502639770508
    10. '
' → logprob: -12.144502639770508

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003685474395751953
    2. ',state' → logprob: -5.628685474395752
    3. ' ,' → logprob: -10.253684997558594
    4. ',
' → logprob: -10.253684997558594
    5. 'state' → logprob: -12.378684997558594
    6. '
' → logprob: -12.503684997558594
    7. ')' → logprob: -13.003684997558594
    8. ',)' → logprob: -13.253684997558594
    9. ',

' → logprob: -14.128684997558594
    10. '

' → logprob: -14.378684997558594

Token 253: ' variable' (ID: 11076)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.06776150315999985
    2. 'tuple' → logprob: -3.0677614212036133
    3. 'vars' → logprob: -5.067761421203613
    4. ' state' → logprob: -5.067761421203613
    5. ')' → logprob: -5.317761421203613
    6. ' tuple' → logprob: -7.692761421203613
    7. 'variables' → logprob: -8.317761421203613
    8. '   ' → logprob: -8.817761421203613
    9. 'values' → logprob: -8.942761421203613
    10. '
' → logprob: -9.442761421203613

Token 254: ' values' (ID: 4824)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9888013601303101
    2. 'values' → logprob: -0.9888013601303101
    3. '_values' → logprob: -1.86380136013031
    4. ')' → logprob: -2.4888014793395996
    5. ' values' → logprob: -4.7388014793396
    6. ' s' → logprob: -6.2388014793396
    7. ',' → logprob: -6.2388014793396
    8. '_states' → logprob: -6.7388014793396
    9. 'states' → logprob: -6.7388014793396
    10. 'state' → logprob: -7.3638014793396

Token 255: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3869965076446533
    2. ')
' → logprob: -1.1369965076446533
    3. '   ' → logprob: -10.136996269226074
    4. 'state' → logprob: -10.136996269226074
    5. ')
' → logprob: -11.386996269226074
    6. 'values' → logprob: -12.261996269226074
    7. ' )' → logprob: -12.386996269226074
    8. ',' → logprob: -12.386996269226074
    9. ' )
' → logprob: -12.511996269226074
    10. '),' → logprob: -12.761996269226074

Token 256: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005136273335665464
    2. 'if' → logprob: -5.630136489868164
    3. ' if' → logprob: -6.755136489868164
    4. ')' → logprob: -8.380136489868164
    5. '
' → logprob: -9.755136489868164
    6. '    
' → logprob: -10.005136489868164
    7. '<|end|>' → logprob: -11.630136489868164
    8. 'token' → logprob: -11.755136489868164
    9. ',' → logprob: -11.880136489868164
    10. 'tokens' → logprob: -12.880136489868164

Token 257: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3870333731174469
    2. 'if' → logprob: -1.1370333433151245
    3. ' if' → logprob: -8.762033462524414
    4. '    
' → logprob: -12.887033462524414
    5. '
' → logprob: -13.137033462524414
    6. '	if' → logprob: -14.637033462524414
    7. ')' → logprob: -15.512033462524414
    8. '  ' → logprob: -15.762033462524414
    9. 'If' → logprob: -16.012033462524414
    10. '       ' → logprob: -16.262033462524414

Token 258: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.038519468158483505
    2. '   ' → logprob: -3.2885193824768066
    3. ' if' → logprob: -7.663519382476807
    4. '
' → logprob: -12.413519859313965
    5. '	if' → logprob: -13.788519859313965
    6. '    
' → logprob: -14.038519859313965
    7. ')' → logprob: -14.413519859313965
    8. '  ' → logprob: -14.538519859313965
    9. 'If' → logprob: -14.913519859313965
    10. ' ' → logprob: -15.413519859313965

Token 259: ' revisit' (ID: 103323)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.006881369277834892
    2. ' state' → logprob: -5.006881237030029
    3. '   ' → logprob: -8.756881713867188
    4. ' ' → logprob: -12.631881713867188
    5. '    ' → logprob: -13.631881713867188
    6. '(state' → logprob: -13.631881713867188
    7. ' ' → logprob: -14.006881713867188
    8. '  ' → logprob: -14.256881713867188
    9. '	state' → logprob: -14.881881713867188
    10. '
' → logprob: -15.256881713867188

Token 260: ' same' (ID: 2684)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.040545299649238586
    2. 'ed' → logprob: -3.7905452251434326
    3. ' state' → logprob: -4.790545463562012
    4. '(state' → logprob: -5.165545463562012
    5. 'ing' → logprob: -7.040545463562012
    6. '_state' → logprob: -7.165545463562012
    7. '   ' → logprob: -7.540545463562012
    8. 'in' → logprob: -8.040545463562012
    9. ' ' → logprob: -8.540545463562012
    10. ' in' → logprob: -9.415545463562012

Token 261: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.145073801279068
    2. ' state' → logprob: -2.020073890686035
    3. '(state' → logprob: -6.645073890686035
    4. '   ' → logprob: -7.270073890686035
    5. '_state' → logprob: -9.145073890686035
    6. '
' → logprob: -9.145073890686035
    7. ' (' → logprob: -9.270073890686035
    8. ' ' → logprob: -10.645073890686035
    9. ',' → logprob: -11.270073890686035
    10. '[state' → logprob: -11.520073890686035

Token 262: ' ->' (ID: 2747)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.550119161605835
    2. 'in' → logprob: -0.925119161605835
    3. '   ' → logprob: -3.675119161605835
    4. ',' → logprob: -7.550119400024414
    5. ':
' → logprob: -7.925119400024414
    6. ':' → logprob: -8.175119400024414
    7. '    ' → logprob: -10.425119400024414
    8. ' and' → logprob: -11.175119400024414
    9. '  ' → logprob: -11.425119400024414
    10. ' ' → logprob: -11.550119400024414

Token 263: ' infinite' (ID: 48413)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.993437647819519
    2. 'break' → logprob: -0.993437647819519
    3. 'print' → logprob: -1.743437647819519
    4. ' print' → logprob: -2.6184377670288086
    5. ' infinite' → logprob: -5.493437767028809
    6. '   ' → logprob: -5.743437767028809
    7. 'in' → logprob: -6.243437767028809
    8. '#' → logprob: -7.493437767028809
    9. '       ' → logprob: -7.743437767028809
    10. 'inf' → logprob: -7.993437767028809

Token 264: ' loop' (ID: 11453)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.05934581160545349
    2. ' loop' → logprob: -2.9343457221984863
    3. '_loop' → logprob: -5.434345722198486
    4. '
' → logprob: -9.934346199035645
    5. 'loops' → logprob: -11.059346199035645
    6. '   ' → logprob: -11.309346199035645
    7. 'while' → logprob: -13.059346199035645
    8. 'continue' → logprob: -13.184346199035645
    9. ' loops' → logprob: -13.309346199035645
    10. '_LOOP' → logprob: -13.809346199035645

Token 265: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00035751116229221225
    2. '    
' → logprob: -9.000357627868652
    3. ' if' → logprob: -9.375357627868652
    4. ')' → logprob: -9.750357627868652
    5. 'if' → logprob: -10.500357627868652
    6. ',' → logprob: -10.625357627868652
    7. '
' → logprob: -11.125357627868652
    8. '<|end|>' → logprob: -11.500357627868652
    9. '<|end|>' → logprob: -12.375357627868652
    10. 'token' → logprob: -13.500357627868652

Token 266: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004726433660835028
    2. 'if' → logprob: -5.379726409912109
    3. ' if' → logprob: -9.25472640991211
    4. '    
' → logprob: -12.12972640991211
    5. '
' → logprob: -12.50472640991211
    6. '	if' → logprob: -15.37972640991211
    7. '  ' → logprob: -15.37972640991211
    8. ')' → logprob: -15.50472640991211
    9. ',' → logprob: -15.50472640991211
    10. '  
' → logprob: -16.25472640991211

Token 267: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12764059007167816
    2. '   ' → logprob: -2.12764048576355
    3. ' if' → logprob: -7.252640724182129
    4. '    
' → logprob: -13.377640724182129
    5. '	if' → logprob: -13.502640724182129
    6. '  ' → logprob: -15.127640724182129
    7. '
' → logprob: -15.627640724182129
    8. 'If' → logprob: -16.002639770507812
    9. ')' → logprob: -16.127639770507812
    10. '```' → logprob: -16.377639770507812

Token 268: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.04860281944274902
    2. ' state' → logprob: -3.048602819442749
    3. '   ' → logprob: -11.673603057861328
    4. '(state' → logprob: -12.298603057861328
    5. ' ' → logprob: -13.298603057861328
    6. '
' → logprob: -15.798603057861328
    7. '	state' → logprob: -15.798603057861328
    8. 'State' → logprob: -16.673603057861328
    9. '    ' → logprob: -16.673603057861328
    10. '  ' → logprob: -16.673603057861328

Token 269: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.38688042759895325
    2. ' in' → logprob: -1.1368803977966309
    3. '   ' → logprob: -11.886880874633789
    4. '	in' → logprob: -13.386880874633789
    5. ' ' → logprob: -14.886880874633789
    6. ')' → logprob: -15.636880874633789
    7. '    ' → logprob: -16.01188087463379
    8. '  ' → logprob: -16.51188087463379
    9. ' ' → logprob: -16.76188087463379
    10. 'import' → logprob: -17.01188087463379

Token 270: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -2.7968066206085496e-05
    2. ' visited' → logprob: -10.500027656555176
    3. '   ' → logprob: -14.750027656555176
    4. '
' → logprob: -18.375028610229492
    5. ' ' → logprob: -21.125028610229492
    6. '  ' → logprob: -21.500028610229492
    7. '       ' → logprob: -22.125028610229492
    8. '    
' → logprob: -22.375028610229492
    9. 'seen' → logprob: -22.750028610229492
    10. '```' → logprob: -22.875028610229492

Token 271: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029835760593414307
    2. ':
' → logprob: -3.5298357009887695
    3. '   ' → logprob: -9.90483570098877
    4. '):' → logprob: -11.27983570098877
    5. '):
' → logprob: -11.77983570098877
    6. ':return' → logprob: -12.02983570098877
    7. '       ' → logprob: -12.65483570098877
    8. ',' → logprob: -13.52983570098877
    9. ':
' → logprob: -13.77983570098877
    10. ':

' → logprob: -14.27983570098877

Token 272: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00043448375072330236
    2. '
' → logprob: -8.375434875488281
    3. ' break' → logprob: -9.500434875488281
    4. '   ' → logprob: -9.750434875488281
    5. 'break' → logprob: -10.500434875488281
    6. ':
' → logprob: -10.875434875488281
    7. '        
' → logprob: -11.625434875488281
    8. ',' → logprob: -12.875434875488281
    9. '```' → logprob: -12.875434875488281
    10. '    
' → logprob: -13.250434875488281

Token 273: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.02629878558218479
    2. ' print' → logprob: -4.026298999786377
    3. '       ' → logprob: -5.401298999786377
    4. '   ' → logprob: -5.776298999786377
    5. 'break' → logprob: -7.776298999786377
    6. '           ' → logprob: -10.401298522949219
    7. '
' → logprob: -11.026298522949219
    8. ' break' → logprob: -11.026298522949219
    9. '```' → logprob: -11.776298522949219
    10. '	print' → logprob: -12.776298522949219

Token 274: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.043837111443281174
    2. '('' → logprob: -3.293837070465088
    3. '(-' → logprob: -5.168837070465088
    4. '(' → logprob: -10.668837547302246
    5. '("-' → logprob: -10.918837547302246
    6. '"' → logprob: -10.918837547302246
    7. '-' → logprob: -10.918837547302246
    8. '(in' → logprob: -12.418837547302246
    9. ''' → logprob: -14.043837547302246
    10. '"In' → logprob: -14.293837547302246

Token 275: 'inf' (ID: 22226)
  Prédit: 'IN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'IN' → logprob: -0.37511146068573
    2. 'Infinite' → logprob: -1.25011146068573
    3. 'INF' → logprob: -4.6251115798950195
    4. 'in' → logprob: -4.7501115798950195
    5. 'LO' → logprob: -5.8751115798950195
    6. 'Loops' → logprob: -6.6251115798950195
    7. 'Infinity' → logprob: -6.7501115798950195
    8. '-' → logprob: -7.3751115798950195
    9. '"' → logprob: -8.00011157989502
    10. 'Loop' → logprob: -8.12511157989502

Token 276: '")
' (ID: 1896)
  Prédit: 'inite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inite' → logprob: -0.03074558451771736
    2. '")' → logprob: -3.530745506286621
    3. 'loop' → logprob: -7.280745506286621
    4. 'init' → logprob: -9.280745506286621
    5. 'initely' → logprob: -9.655745506286621
    6. ')' → logprob: -10.780745506286621
    7. '_loop' → logprob: -10.905745506286621
    8. 'i' → logprob: -11.030745506286621
    9. 'inity' → logprob: -11.030745506286621
    10. '")
' → logprob: -11.530745506286621

Token 277: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.7954958821064793e-05
    2. '
' → logprob: -11.375018119812012
    3. '   ' → logprob: -12.375018119812012
    4. '           ' → logprob: -14.375018119812012
    5. '        
' → logprob: -14.750018119812012
    6. ',' → logprob: -14.875018119812012
    7. '<|end|>' → logprob: -15.750018119812012
    8. '    
' → logprob: -16.000017166137695
    9. '```' → logprob: -16.000017166137695
    10. ')' → logprob: -16.000017166137695

Token 278: ' exit' (ID: 10654)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.09637545049190521
    2. ' break' → logprob: -2.5963754653930664
    3. '       ' → logprob: -4.596375465393066
    4. '
' → logprob: -5.096375465393066
    5. 'exit' (adapté à ' exit') → logprob: -7.846375465393066
    6. '	break' → logprob: -8.346375465393066
    7. '        
' → logprob: -8.721375465393066
    8. '   ' → logprob: -8.846375465393066
    9. '    
' → logprob: -9.096375465393066
    10. '```' → logprob: -9.971375465393066

Token 279: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.57610023021698
    2. '(' → logprob: -0.82610023021698
    3. '()
' → logprob: -8.82610034942627
    4. '()(' → logprob: -11.70110034942627
    5. '())' → logprob: -12.70110034942627
    6. '()`' → logprob: -14.57610034942627
    7. '()

' → logprob: -14.70110034942627
    8. '()\' → logprob: -14.95110034942627
    9. '()]' → logprob: -15.57610034942627
    10. '()
' → logprob: -15.70110034942627

Token 280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03383680060505867
    2. 'visited' → logprob: -3.408836841583252
    3. ' visited' → logprob: -8.783836364746094
    4. '    
' → logprob: -11.158836364746094
    5. '
' → logprob: -11.783836364746094
    6. '  ' → logprob: -12.283836364746094
    7. '```' → logprob: -12.533836364746094
    8. '  
' → logprob: -13.408836364746094
    9. '<|end|>' → logprob: -13.658836364746094
    10. ' ' → logprob: -13.783836364746094

Token 281: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.00026622318546287715
    2. '   ' → logprob: -8.250266075134277
    3. ' visited' → logprob: -12.375266075134277
    4. '    
' → logprob: -15.375266075134277
    5. '
' → logprob: -15.500266075134277
    6. '```' → logprob: -15.625266075134277
    7. 'else' → logprob: -17.000267028808594
    8. '<|end|>' → logprob: -17.500267028808594
    9. 'visible' → logprob: -17.875267028808594
    10. 'Visited' → logprob: -18.000267028808594

Token 282: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.008615042082965374
    2. '.' → logprob: -4.758615016937256
    3. ' .' → logprob: -15.383615493774414
    4. '.Add' → logprob: -15.883615493774414
    5. '.append' → logprob: -15.883615493774414
    6. '.insert' → logprob: -16.883615493774414
    7. '.update' → logprob: -17.383615493774414
    8. 'add' → logprob: -18.258615493774414
    9. ').' → logprob: -18.383615493774414
    10. ')add' → logprob: -18.508615493774414

Token 283: '(state' (ID: 16114)
  Prédit: '(state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -8.180258191714529e-06
    2. '(' → logprob: -11.750008583068848
    3. ' (' → logprob: -15.875008583068848
    4. '((' → logprob: -17.87500762939453
    5. '(stat' → logprob: -18.12500762939453
    6. '(states' → logprob: -18.25000762939453
    7. '(
' → logprob: -18.37500762939453
    8. '(st' → logprob: -18.62500762939453
    9. '(s' → logprob: -18.87500762939453
    10. 'state' → logprob: -18.87500762939453

Token 284: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026246467605233192
    2. '   ' → logprob: -6.00262451171875
    3. ')
' → logprob: -8.87762451171875
    4. ' )' → logprob: -12.00262451171875
    5. '
' → logprob: -14.75262451171875
    6. '[' → logprob: -14.75262451171875
    7. '    
' → logprob: -15.12762451171875
    8. '`)' → logprob: -15.12762451171875
    9. ',' → logprob: -15.25262451171875
    10. ']' → logprob: -15.37762451171875

Token 285: '   ' (ID: 271)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.25950077176094055
    2. '   ' → logprob: -1.5095007419586182
    3. '_,' → logprob: -5.759500980377197
    4. ' line' → logprob: -6.134500980377197
    5. '(line' → logprob: -6.384500980377197
    6. '_line' → logprob: -8.259500503540039
    7. '    
' → logprob: -8.509500503540039
    8. '	line' → logprob: -10.759500503540039
    9. '
' → logprob: -12.134500503540039
    10. ',line' → logprob: -12.134500503540039

Token 286: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.005365021526813507
    2. '_,' → logprob: -5.255364894866943
    3. '(line' → logprob: -10.005365371704102
    4. '_line' → logprob: -10.380365371704102
    5. 'ln' → logprob: -10.630365371704102
    6. '(_,' → logprob: -11.630365371704102
    7. '   ' → logprob: -11.755365371704102
    8. ' line' → logprob: -12.130365371704102
    9. 'lin' → logprob: -12.380365371704102
    10. '    
' → logprob: -13.880365371704102

Token 287: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -2.9875325708417222e-05
    2. 'num' → logprob: -12.000029563903809
    3. ',' → logprob: -12.250029563903809
    4. ' =' → logprob: -12.500029563903809
    5. '_' → logprob: -12.500029563903809
    6. '=' → logprob: -12.750029563903809
    7. '_line' → logprob: -13.625029563903809
    8. '_number' → logprob: -13.625029563903809
    9. '_n' → logprob: -13.875029563903809
    10. '=_' → logprob: -13.875029563903809

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.203409844194539e-05
    2. '=' → logprob: -10.625041961669922
    3. ' ,' → logprob: -11.250041961669922
    4. ',line' → logprob: -13.000041961669922
    5. ',
' → logprob: -14.375041961669922
    6. '_,' → logprob: -14.625041961669922
    7. '   ' → logprob: -14.875041961669922
    8. ' =' → logprob: -15.625041961669922
    9. ',

' → logprob: -16.125041961669922
    10. ',,' → logprob: -16.500041961669922

Token 289: ' instr' (ID: 10783)
  Prédit: 'instr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'instr' → logprob: -0.07889506965875626
    2. ' instr' → logprob: -2.578895092010498
    3. '   ' → logprob: -13.20389461517334
    4. '(instr' → logprob: -13.45389461517334
    5. '_instr' → logprob: -14.07889461517334
    6. 'intr' → logprob: -15.20389461517334
    7. 'inst' → logprob: -15.32889461517334
    8. 'Instr' → logprob: -15.57889461517334
    9. ' ' → logprob: -15.57889461517334
    10. 'instruction' → logprob: -15.70389461517334

Token 290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012511172099038959
    2. '=' → logprob: -9.00012493133545
    3. ' ,' → logprob: -13.50012493133545
    4. ' =' → logprob: -15.12512493133545
    5. '   ' → logprob: -17.625125885009766
    6. ',var' → logprob: -18.375125885009766
    7. ',args' → logprob: -18.750125885009766
    8. ',
' → logprob: -18.750125885009766
    9. ',c' → logprob: -19.000125885009766
    10. ',...' → logprob: -19.250125885009766

Token 291: ' args' (ID: 4966)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.0017055326607078314
    2. ' args' → logprob: -6.376705646514893
    3. '   ' → logprob: -13.251705169677734
    4. '	args' → logprob: -14.751705169677734
    5. '(args' → logprob: -15.126705169677734
    6. 'argv' → logprob: -15.376705169677734
    7. '$args' → logprob: -15.376705169677734
    8. '_args' → logprob: -15.501705169677734
    9. '=args' → logprob: -16.001705169677734
    10. 'arguments' → logprob: -16.251705169677734

Token 292: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932960152626038
    2. ' =' → logprob: -0.6932960152626038
    3. '   ' → logprob: -8.818296432495117
    4. ')' → logprob: -14.818296432495117
    5. ' ' → logprob: -15.318296432495117
    6. '    ' → logprob: -15.693296432495117
    7. '  ' → logprob: -17.318296432495117
    8. '=line' → logprob: -17.818296432495117
    9. '=
' → logprob: -17.943296432495117
    10. ',' → logprob: -18.443296432495117

Token 293: ' program' (ID: 2193)
  Prédit: 'program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'program' → logprob: -0.03804941102862358
    2. ' program' → logprob: -3.2880494594573975
    3. '   ' → logprob: -11.788049697875977
    4. '(program' → logprob: -15.038049697875977
    5. 'programme' → logprob: -18.038049697875977
    6. 'prog' → logprob: -18.163049697875977
    7. 'programm' → logprob: -18.538049697875977
    8. ' ' → logprob: -19.038049697875977
    9. '_program' → logprob: -19.038049697875977
    10. '  ' → logprob: -19.663049697875977

Token 294: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. '```' → logprob: -14.000001907348633
    3. 'pc' → logprob: -15.375001907348633
    4. '   ' → logprob: -15.750001907348633
    5. ' [' → logprob: -16.125001907348633
    6. '\[' → logprob: -17.500001907348633
    7. '[current' → logprob: -18.500001907348633
    8. '(pc' → logprob: -18.625001907348633
    9. '[ip' → logprob: -19.125001907348633
    10. '[p' → logprob: -19.375001907348633

Token 295: 'pc' (ID: 6344)
  Prédit: 'pc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pc' → logprob: -3.833878508885391e-05
    2. '[' → logprob: -10.875038146972656
    3. ' pc' → logprob: -10.875038146972656
    4. '   ' → logprob: -15.125038146972656
    5. '(pc' → logprob: -16.375038146972656
    6. '	pc' → logprob: -18.625038146972656
    7. '```' → logprob: -18.625038146972656
    8. '
' → logprob: -19.250038146972656
    9. '0' → logprob: -19.250038146972656
    10. '_pc' → logprob: -19.375038146972656

Token 296: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.182190554682165e-05
    2. ']' → logprob: -10.375061988830566
    3. ')
' → logprob: -11.000061988830566
    4. '   ' → logprob: -11.750061988830566
    5. ' )' → logprob: -13.375061988830566
    6. ')]' → logprob: -13.500061988830566
    7. ')

' → logprob: -13.625061988830566
    8. ')`' → logprob: -14.625061988830566
    9. '])' → logprob: -14.750061988830566
    10. '）' → logprob: -14.875061988830566

Token 297: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010981805389747024
    2. 'if' → logprob: -6.876098155975342
    3. '    
' → logprob: -9.8760986328125
    4. ' if' → logprob: -11.3760986328125
    5. 'pc' → logprob: -13.6260986328125
    6. '```' → logprob: -14.1260986328125
    7. '    ' → logprob: -16.2510986328125
    8. '       ' → logprob: -16.5010986328125
    9. '  
' → logprob: -16.5010986328125
    10. '  ' → logprob: -16.5010986328125

Token 298: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00038264848990365863
    2. '   ' → logprob: -8.000382423400879
    3. 'pc' → logprob: -10.000382423400879
    4. '```' → logprob: -13.875382423400879
    5. ' if' → logprob: -14.250382423400879
    6. '    
' → logprob: -15.875382423400879
    7. 'elif' → logprob: -17.250383377075195
    8. '	if' → logprob: -18.000383377075195
    9. 'result' → logprob: -18.375383377075195
    10. 'increment' → logprob: -18.750383377075195

Token 299: ' instr' (ID: 10783)
  Prédit: ' instr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' instr' → logprob: -0.313296914100647
    2. 'instr' → logprob: -1.313296914100647
    3. '(instr' → logprob: -10.313297271728516
    4. '  ' → logprob: -14.063297271728516
    5. '   ' → logprob: -15.188297271728516
    6. '[in' → logprob: -15.438297271728516
    7. 'intr' → logprob: -15.688297271728516
    8. ' ' → logprob: -15.813297271728516
    9. 'Instr' → logprob: -15.938297271728516
    10. '_instr' → logprob: -16.063297271728516

Token 300: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31328070163726807
    2. '==' → logprob: -1.313280701637268
    3. '=="' → logprob: -11.813281059265137
    4. '=='' → logprob: -12.313281059265137
    5. '=' → logprob: -13.438281059265137
    6. '[' → logprob: -13.813281059265137
    7. ' in' → logprob: -13.813281059265137
    8. ')' → logprob: -14.188281059265137
    9. '==
' → logprob: -14.563281059265137
    10. ' ' → logprob: -14.688281059265137

Token 301: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16535760462284088
    2. '"' → logprob: -1.9153575897216797
    3. ''S' → logprob: -5.29035758972168
    4. ' '' → logprob: -10.16535758972168
    5. ''s' → logprob: -11.16535758972168
    6. '   ' → logprob: -11.54035758972168
    7. ''M' → logprob: -12.41535758972168
    8. ' "' → logprob: -12.91535758972168
    9. ''H' → logprob: -13.29035758972168
    10. ' ' → logprob: -13.54035758972168

Token 302: 'ADD' (ID: 29357)
  Prédit: 'SET'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SET' → logprob: -0.012390618212521076
    2. 'ADD' → logprob: -4.512390613555908
    3. 'IF' → logprob: -6.762390613555908
    4. ''' → logprob: -9.262391090393066
    5. 'END' → logprob: -10.387391090393066
    6. 'SUB' → logprob: -11.262391090393066
    7. 'NOP' → logprob: -11.637391090393066
    8. 'PRINT' → logprob: -12.137391090393066
    9. 'MOV' → logprob: -12.387391090393066
    10. ' SET' → logprob: -12.762391090393066

Token 303: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.16016481816768646
    2. '':' → logprob: -2.0351648330688477
    3. ''' → logprob: -4.410164833068848
    4. ' '' → logprob: -5.410164833068848
    5. '':
' → logprob: -8.035164833068848
    6. ''):
' → logprob: -9.285164833068848
    7. '':

' → logprob: -9.535164833068848
    8. ' ':' → logprob: -9.535164833068848
    9. '('' → logprob: -10.410164833068848
    10. '   ' → logprob: -10.410164833068848

Token 304: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2926771640777588
    2. ' vars' → logprob: -2.167677164077759
    3. '   ' → logprob: -3.542677164077759
    4. 'vars' → logprob: -3.792677164077759
    5. ' a' → logprob: -4.04267692565918
    6. 'a' → logprob: -4.16767692565918
    7. ' v' → logprob: -4.66767692565918
    8. '        
' → logprob: -4.79267692565918
    9. 'v' → logprob: -4.91767692565918
    10. ' 
' → logprob: -5.04267692565918

Token 305: ' #' (ID: 1069)
  Prédit: 'vars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vars' → logprob: -0.13804040849208832
    2. 'x' → logprob: -2.51304030418396
    3. 'a' → logprob: -4.013040542602539
    4. 'dest' → logprob: -4.763040542602539
    5. 'var' → logprob: -5.138040542602539
    6. ' vars' → logprob: -5.388040542602539
    7. 'v' → logprob: -5.513040542602539
    8. '       ' → logprob: -5.513040542602539
    9. '   ' → logprob: -7.138040542602539
    10. ' x' → logprob: -7.263040542602539

Token 306: ' ADD' (ID: 30791)
  Prédit: 'vars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vars' → logprob: -0.09454930573701859
    2. 'x' → logprob: -2.7195494174957275
    3. 'var' → logprob: -4.844549179077148
    4. 'a' → logprob: -4.969549179077148
    5. 'v' → logprob: -5.094549179077148
    6. ' vars' → logprob: -6.219549179077148
    7. 'dest' → logprob: -7.469549179077148
    8. ' x' → logprob: -8.344549179077148
    9. '   ' → logprob: -8.594549179077148
    10. 'vals' → logprob: -9.344549179077148

Token 307: ' var' (ID: 972)
  Prédit: ' args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' args' → logprob: -0.8898733258247375
    2. ' vars' → logprob: -1.2648732662200928
    3. 'args' → logprob: -1.7648732662200928
    4. 'vars' → logprob: -2.3898732662200928
    5. ' a' → logprob: -4.514873504638672
    6. 'a' → logprob: -5.014873504638672
    7. ' variables' → logprob: -5.139873504638672
    8. ' x' → logprob: -5.389873504638672
    9. 'dest' → logprob: -5.764873504638672
    10. ' =' → logprob: -6.264873504638672

Token 308: '1' (ID: 16)
  Prédit: ' args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' args' → logprob: -0.819235622882843
    2. ' =' → logprob: -1.0692355632781982
    3. ',' → logprob: -2.6942355632781982
    4. 'args' → logprob: -2.9442355632781982
    5. ' vars' → logprob: -3.0692355632781982
    6. 'vars' → logprob: -4.944235801696777
    7. 's' → logprob: -5.069235801696777
    8. '   ' → logprob: -5.319235801696777
    9. '_vars' → logprob: -5.319235801696777
    10. '_,' → logprob: -5.819235801696777

Token 309: ' var' (ID: 972)
  Prédit: ' vars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vars' → logprob: -0.0733577311038971
    2. ' =' → logprob: -3.8233578205108643
    3. 'vars' → logprob: -3.8233578205108643
    4. ' var' → logprob: -4.448357582092285
    5. ',' → logprob: -5.323357582092285
    6. ' args' → logprob: -5.448357582092285
    7. '_vars' → logprob: -6.323357582092285
    8. '       ' → logprob: -6.823357582092285
    9. 'var' → logprob: -6.948357582092285
    10. ' variables' → logprob: -7.573357582092285

Token 310: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011653638648567721
    2. ' ' → logprob: -9.875116348266602
    3. 's' → logprob: -10.500116348266602
    4. '2' → logprob: -11.125116348266602
    5. 'ar' → logprob: -11.750116348266602
    6. 'args' → logprob: -12.875116348266602
    7. '   ' → logprob: -13.125116348266602
    8. '[' → logprob: -13.500116348266602
    9. 'ariable' → logprob: -13.500116348266602
    10. ' args' → logprob: -13.625116348266602

Token 311: ' var' (ID: 972)
  Prédit: 'vars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vars' → logprob: -1.4706487655639648
    2. '       ' → logprob: -1.8456487655639648
    3. ' vars' → logprob: -1.8456487655639648
    4. '
' → logprob: -1.9706487655639648
    5. ' =' → logprob: -2.220648765563965
    6. '_vars' → logprob: -2.595648765563965
    7. '1' → logprob: -4.095648765563965
    8. '[' → logprob: -4.220648765563965
    9. ')' → logprob: -4.220648765563965
    10. 'var' → logprob: -4.220648765563965

Token 312: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009104699827730656
    2. '       ' → logprob: -5.7591047286987305
    3. '[' → logprob: -6.0091047286987305
    4. '   ' → logprob: -6.6341047286987305
    5. 's' → logprob: -8.00910472869873
    6. ' =' → logprob: -8.00910472869873
    7. ')' → logprob: -8.25910472869873
    8. '
' → logprob: -8.50910472869873
    9. '=' → logprob: -8.63410472869873
    10. ' ' → logprob: -8.63410472869873

Token 313: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14893685281276703
    2. '
' → logprob: -2.3989367485046387
    3. 'vars' → logprob: -4.773936748504639
    4. ' vars' → logprob: -5.023936748504639
    5. ' =' → logprob: -5.273936748504639
    6. '        
' → logprob: -5.398936748504639
    7. 'var' → logprob: -5.523936748504639
    8. ')' → logprob: -5.773936748504639
    9. '_vars' → logprob: -5.898936748504639
    10. '<|end|>' → logprob: -6.398936748504639

Token 314: ' ADD' (ID: 30791)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -1.1170110702514648
    2. 'args' → logprob: -1.1170110702514648
    3. '   ' → logprob: -1.7420110702514648
    4. 'ADD' → logprob: -2.992011070251465
    5. '       ' → logprob: -3.867011070251465
    6. ' ADD' → logprob: -4.117011070251465
    7. ' args' → logprob: -4.242011070251465
    8. 'if' → logprob: -4.367011070251465
    9. ' var' → logprob: -4.367011070251465
    10. 'vars' → logprob: -4.492011070251465

Token 315: ' var' (ID: 972)
  Prédit: ' args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' args' → logprob: -0.3944576680660248
    2. ' var' → logprob: -1.6444576978683472
    3. 'var' → logprob: -3.3944575786590576
    4. 'args' → logprob: -3.7694575786590576
    5. ' vars' → logprob: -4.019457817077637
    6. ' ' → logprob: -4.394457817077637
    7. '(args' → logprob: -4.769457817077637
    8. '_args' → logprob: -4.769457817077637
    9. '_vars' → logprob: -4.894457817077637
    10. '_var' → logprob: -5.519457817077637

Token 316: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.033593833446502686
    2. '3' → logprob: -4.658593654632568
    3. '   ' → logprob: -5.158593654632568
    4. '2' → logprob: -5.908593654632568
    5. '[' → logprob: -6.033593654632568
    6. ' ' → logprob: -6.283593654632568
    7. ')' → logprob: -6.533593654632568
    8. '    
' → logprob: -6.658593654632568
    9. 's' → logprob: -7.033593654632568
    10. 'args' → logprob: -7.033593654632568

Token 317: ' var' (ID: 972)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 318: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011545089073479176
    2. '3' → logprob: -7.12615442276001
    3. '1' → logprob: -8.126154899597168
    4. ' ' → logprob: -9.876154899597168
    5. '   ' → logprob: -13.251154899597168
    6. '0' → logprob: -15.501154899597168
    7. '  ' → logprob: -15.751154899597168
    8. '```' → logprob: -15.751154899597168
    9. '<|end|>' → logprob: -16.18865394592285
    10. '２' → logprob: -16.56365394592285

Token 319: ' con' (ID: 406)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3461405634880066
    2. '<|end|>' → logprob: -1.5961406230926514
    3. '
' → logprob: -3.7211406230926514
    4. '        
' → logprob: -4.346140384674072
    5. ' if' → logprob: -4.721140384674072
    6. ' 
' → logprob: -5.096140384674072
    7. '   ' → logprob: -5.221140384674072
    8. ':' → logprob: -5.346140384674072
    9. ' =' → logprob: -5.596140384674072
    10. ' ' → logprob: -5.721140384674072

Token 320: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.6568430662155151
    2. ')' → logprob: -1.7818430662155151
    3. '<|end|>' → logprob: -1.7818430662155151
    4. '   ' → logprob: -2.0318431854248047
    5. '[' → logprob: -2.4068431854248047
    6. '       ' → logprob: -2.5318431854248047
    7. '_vars' → logprob: -3.2818431854248047
    8. '1' → logprob: -3.5318431854248047
    9. ' ' → logprob: -3.9068431854248047
    10. ')
' → logprob: -4.781843185424805

Token 321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.902617335319519
    2. '
' → logprob: -1.277617335319519
    3. '   ' → logprob: -2.0276174545288086
    4. 'vars' → logprob: -2.9026174545288086
    5. '    
' → logprob: -3.2776174545288086
    6. ' 
' → logprob: -4.152617454528809
    7. '        
' → logprob: -4.527617454528809
    8. ')' → logprob: -4.777617454528809
    9. '<|end|>' → logprob: -4.902617454528809
    10. '_vars' → logprob: -5.277617454528809

Token 322: ' var' (ID: 972)
  Prédit: 'vars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vars' → logprob: -0.05725852772593498
    2. 'var' (adapté à ' var') → logprob: -3.8072586059570312
    3. ' vars' → logprob: -4.557258605957031
    4. 'v' → logprob: -4.682258605957031
    5. '       ' → logprob: -5.057258605957031
    6. 'val' → logprob: -5.682258605957031
    7. 'if' → logprob: -6.432258605957031
    8. 'vals' → logprob: -7.432258605957031
    9. 'a' → logprob: -7.682258605957031
    10. 'x' → logprob: -8.057258605957031

Token 323: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013451489619910717
    2. 's' → logprob: -4.51345157623291
    3. ' =' → logprob: -6.51345157623291
    4. '_values' → logprob: -7.76345157623291
    5. 'ar' → logprob: -9.38845157623291
    6. '_' → logprob: -9.88845157623291
    7. 'al' → logprob: -10.13845157623291
    8. 'values' → logprob: -10.26345157623291
    9. '   ' → logprob: -10.51345157623291
    10. '=' → logprob: -10.63845157623291

Token 324: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3742696940898895
    2. ',' → logprob: -1.249269723892212
    3. '=' → logprob: -4.249269485473633
    4. ']' → logprob: -4.749269485473633
    5. ')' → logprob: -7.124269485473633
    6. ' ,' → logprob: -7.499269485473633
    7. '   ' → logprob: -8.124269485473633
    8. '=args' → logprob: -8.249269485473633
    9. ']=' → logprob: -8.874269485473633
    10. ',args' → logprob: -9.124269485473633

Token 325: ' args' (ID: 4966)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.0013329789508134127
    2. ' args' → logprob: -6.626332759857178
    3. 'vars' → logprob: -12.126333236694336
    4. 'get' → logprob: -14.501333236694336
    5. '	args' → logprob: -14.626333236694336
    6. 'variables' → logprob: -15.126333236694336
    7. '(args' → logprob: -15.876333236694336
    8. '$args' → logprob: -16.876333236694336
    9. '=args' → logprob: -17.001333236694336
    10. '   ' → logprob: -17.251333236694336

Token 326: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.553032628493384e-05
    2. '0' → logprob: -9.500075340270996
    3. '1' → logprob: -15.375075340270996
    4. ' [' → logprob: -16.125076293945312
    5. ' ' → logprob: -16.250076293945312
    6. '   ' → logprob: -16.500076293945312
    7. '```' → logprob: -17.375076293945312
    8. 's' → logprob: -17.750076293945312
    9. '[
' → logprob: -18.125076293945312
    10. ',' → logprob: -18.750076293945312

Token 327: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.50000286102295
    3. ' ' → logprob: -14.25000286102295
    4. '1' → logprob: -16.000001907348633
    5. '   ' → logprob: -16.125001907348633
    6. '<|end|>' → logprob: -18.437501907348633
    7. '۰' → logprob: -18.500001907348633
    8. 's' → logprob: -18.562501907348633
    9. ')' → logprob: -18.562501907348633
    10. '       ' → logprob: -18.687501907348633

Token 328: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15183331072330475
    2. ')
' → logprob: -2.1518332958221436
    3. ']' → logprob: -3.9018332958221436
    4. ']
' → logprob: -5.526833534240723
    5. '<|end|>' → logprob: -8.776833534240723
    6. '   ' → logprob: -9.151833534240723
    7. ',' → logprob: -10.651833534240723
    8. '
' → logprob: -10.901833534240723
    9. ' )' → logprob: -11.026833534240723
    10. ')
' → logprob: -11.151833534240723

Token 329: '       ' (ID: 309)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.44379761815071106
    2. 'vars' → logprob: -1.3187975883483887
    3. 'val' → logprob: -2.5687975883483887
    4. 'vals' → logprob: -5.443797588348389
    5. '       ' → logprob: -5.818797588348389
    6. 'v' → logprob: -5.943797588348389
    7. 'value' → logprob: -7.193797588348389
    8. ' vars' → logprob: -7.318797588348389
    9. '   ' → logprob: -7.693797588348389
    10. ' var' → logprob: -7.818797588348389

Token 330: ' var' (ID: 972)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' (adapté à ' var') → logprob: -0.36992913484573364
    2. 'val' → logprob: -1.3699290752410889
    3. 'vars' → logprob: -2.994929075241089
    4. 'v' → logprob: -5.869929313659668
    5. 'vals' → logprob: -6.994929313659668
    6. 'op' → logprob: -7.994929313659668
    7. 'a' → logprob: -8.244929313659668
    8. 'operand' → logprob: -8.869929313659668
    9. 'arg' → logprob: -9.119929313659668
    10. 'res' → logprob: -9.369929313659668

Token 331: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02061266265809536
    2. '1' → logprob: -3.8956127166748047
    3. '[' → logprob: -9.895612716674805
    4. ' =' → logprob: -12.020612716674805
    5. '=' → logprob: -12.145612716674805
    6. '3' → logprob: -12.270612716674805
    7. ' ' → logprob: -13.895612716674805
    8. 'args' → logprob: -14.270612716674805
    9. 'var' → logprob: -14.395612716674805
    10. '0' → logprob: -15.145612716674805

Token 332: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28120434284210205
    2. '=' → logprob: -1.406204342842102
    3. ',' → logprob: -9.906204223632812
    4. ')' → logprob: -13.906204223632812
    5. ' ' → logprob: -14.156204223632812
    6. '   ' → logprob: -14.531204223632812
    7. '=args' → logprob: -14.656204223632812
    8. '<|end|>' → logprob: -14.906204223632812
    9. ' =
' → logprob: -15.156204223632812
    10. '=
' → logprob: -15.406204223632812

Token 333: ' args' (ID: 4966)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.0233652051538229
    2. ' args' → logprob: -3.7733652591705322
    3. 'get' → logprob: -9.148365020751953
    4. ' get' → logprob: -11.898365020751953
    5. '	args' → logprob: -13.273365020751953
    6. '(args' → logprob: -13.648365020751953
    7. '$args' → logprob: -13.773365020751953
    8. '=args' → logprob: -14.148365020751953
    9. '   ' → logprob: -14.648365020751953
    10. 'arg' → logprob: -14.648365020751953

Token 334: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003837213444057852
    2. '1' → logprob: -7.8753838539123535
    3. '[
' → logprob: -13.250383377075195
    4. '```' → logprob: -14.500383377075195
    5. ' [' → logprob: -14.625383377075195
    6. ' ' → logprob: -14.875383377075195
    7. '=' → logprob: -16.625383377075195
    8. 'def' → logprob: -16.625383377075195
    9. '(' → logprob: -16.625383377075195
    10. 'import' → logprob: -16.750383377075195

Token 335: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0802738870552275e-05
    2. '0' → logprob: -11.62501049041748
    3. ' ' → logprob: -13.50001049041748
    4. '   ' → logprob: -15.37501049041748
    5. '[' → logprob: -15.75001049041748
    6. '```' → logprob: -17.125011444091797
    7. ']' → logprob: -17.937511444091797
    8. '
' → logprob: -19.187511444091797
    9. ')' → logprob: -19.312511444091797
    10. ',' → logprob: -19.687511444091797

Token 336: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.33980849385261536
    2. ')' → logprob: -1.589808464050293
    3. ']
' → logprob: -2.714808464050293
    4. ']' → logprob: -4.339808464050293
    5. ',' → logprob: -5.839808464050293
    6. '       ' → logprob: -7.339808464050293
    7. 'var' → logprob: -7.464808464050293
    8. '
' → logprob: -8.589808464050293
    9. 'if' → logprob: -8.964808464050293
    10. '   ' → logprob: -9.339808464050293

Token 337: '       ' (ID: 309)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.023453239351511
    2. ' var' → logprob: -3.8984532356262207
    3. '   ' → logprob: -6.898453235626221
    4. 'if' → logprob: -7.523453235626221
    5. '       ' → logprob: -7.648453235626221
    6. 'val' → logprob: -8.023453712463379
    7. ' if' → logprob: -9.523453712463379
    8. '+' → logprob: -9.773453712463379
    9. '    
' → logprob: -9.773453712463379
    10. ' 
' → logprob: -9.898453712463379

Token 338: ' var' (ID: 972)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7059934139251709
    2. 'var' (adapté à ' var') → logprob: -0.7059934139251709
    3. 'op' → logprob: -5.33099365234375
    4. 'if' → logprob: -6.20599365234375
    5. 'arg' → logprob: -6.45599365234375
    6. 'operand' → logprob: -6.70599365234375
    7. 'v' → logprob: -6.83099365234375
    8. 'third' → logprob: -6.95599365234375
    9. 'res' → logprob: -7.95599365234375
    10. 'rhs' → logprob: -7.95599365234375

Token 339: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00016396844875998795
    2. '2' → logprob: -9.250164031982422
    3. 's' → logprob: -9.875164031982422
    4. '[' → logprob: -11.750164031982422
    5. ' ' → logprob: -12.125164031982422
    6. ' =' → logprob: -14.125164031982422
    7. '=' → logprob: -14.375164031982422
    8. 'val' → logprob: -15.125164031982422
    9. '   ' → logprob: -15.500164031982422
    10. 'vals' → logprob: -15.875164031982422

Token 340: '_or' (ID: 15400)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931481957435608
    2. ' =' → logprob: -0.6931481957435608
    3. ' ' → logprob: -14.943148612976074
    4. '   ' → logprob: -15.693148612976074
    5. '_val' → logprob: -15.693148612976074
    6. '=args' → logprob: -16.068147659301758
    7. ')' → logprob: -16.443147659301758
    8. '=get' → logprob: -16.818147659301758
    9. '_value' → logprob: -16.943147659301758
    10. ',' → logprob: -17.318147659301758

Token 341: '_con' (ID: 7531)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.0007237526006065309
    2. 'const' → logprob: -7.625723838806152
    3. '_con' → logprob: -8.625723838806152
    4. '_const' → logprob: -10.625723838806152
    5. 'int' → logprob: -10.875723838806152
    6. ' con' → logprob: -12.000723838806152
    7. 'val' → logprob: -12.375723838806152
    8. 'cons' → logprob: -13.875723838806152
    9. 'Con' → logprob: -14.250723838806152
    10. '_val' → logprob: -15.000723838806152

Token 342: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028638429939746857
    2. '=' → logprob: -6.127863883972168
    3. 'st' → logprob: -7.877863883972168
    4. 't' → logprob: -8.252863883972168
    5. 'd' → logprob: -10.752863883972168
    6. 'f' → logprob: -11.627863883972168
    7. 'v' → logprob: -12.252863883972168
    8. '   ' → logprob: -13.377863883972168
    9. 's' → logprob: -14.377863883972168
    10. 'stant' → logprob: -14.877863883972168

Token 343: ' args' (ID: 4966)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.014166799373924732
    2. ' args' → logprob: -4.264166831970215
    3. 'get' → logprob: -13.139166831970215
    4. '	args' → logprob: -14.514166831970215
    5. '(args' → logprob: -15.014166831970215
    6. '$args' → logprob: -15.264166831970215
    7. '=args' → logprob: -15.639166831970215
    8. '   ' → logprob: -16.3891658782959
    9. '.args' → logprob: -17.2641658782959
    10. 'argv' → logprob: -17.8891658782959

Token 344: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001398929744027555
    2. '2' → logprob: -8.875140190124512
    3. 's' → logprob: -17.500139236450195
    4. '[
' → logprob: -17.750139236450195
    5. '   ' → logprob: -18.000139236450195
    6. 'import' → logprob: -19.000139236450195
    7. '```' → logprob: -19.000139236450195
    8. 'from' → logprob: -19.000139236450195
    9. '=' → logprob: -19.375139236450195
    10. '(' → logprob: -19.750139236450195

Token 345: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.875000953674316
    3. '   ' → logprob: -15.250000953674316
    4. ' ' → logprob: -16.125
    5. '```' → logprob: -16.5
    6. '``' → logprob: -17.25
    7. '-' → logprob: -17.875
    8. '۲' → logprob: -18.8125
    9. '3' → logprob: -19.0
    10. '
' → logprob: -19.0625

Token 346: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01601090468466282
    2. ']
' → logprob: -4.516010761260986
    3. ')' → logprob: -5.391010761260986
    4. ']

' → logprob: -8.516011238098145
    5. '   ' → logprob: -9.391011238098145
    6. ')
' → logprob: -9.391011238098145
    7. ' ]' → logprob: -12.016011238098145
    8. '       ' → logprob: -12.516011238098145
    9. '<|end|>' → logprob: -12.641011238098145
    10. '])' → logprob: -13.016011238098145

Token 347: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005073771812021732
    2. '   ' → logprob: -6.505073547363281
    3. '        
' → logprob: -6.880073547363281
    4. '
' → logprob: -7.255073547363281
    5. ')' → logprob: -7.630073547363281
    6. ')
' → logprob: -8.380073547363281
    7. ' if' → logprob: -8.630073547363281
    8. 'val' → logprob: -9.005073547363281
    9. 'vars' → logprob: -9.005073547363281
    10. ',' → logprob: -9.255073547363281

Token 348: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.7424291968345642
    2. 'vars' → logprob: -0.9924291968345642
    3. 'if' → logprob: -2.367429256439209
    4. '       ' → logprob: -3.367429256439209
    5. 'vals' → logprob: -3.992429256439209
    6. 'v' → logprob: -6.367429256439209
    7. 'value' → logprob: -6.492429256439209
    8. ')
' → logprob: -7.492429256439209
    9. '
' → logprob: -7.742429256439209
    10. '+' → logprob: -7.992429256439209

Token 349: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014756395481526852
    2. ' =' → logprob: -4.639756202697754
    3. '_var' → logprob: -5.639756202697754
    4. '=' → logprob: -7.139756202697754
    5. 'var' → logprob: -7.514756202697754
    6. '1' → logprob: -9.514756202697754
    7. '3' → logprob: -11.264756202697754
    8. '_val' → logprob: -12.764756202697754
    9. '_' → logprob: -12.889756202697754
    10. '   ' → logprob: -13.639756202697754

Token 350: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931484341621399
    2. ' =' → logprob: -0.6931484341621399
    3. '=get' → logprob: -14.193148612976074
    4. '   ' → logprob: -14.943148612976074
    5. ' ' → logprob: -16.193147659301758
    6. '=
' → logprob: -19.193147659301758
    7. ' ' → logprob: -19.318147659301758
    8. 'get' → logprob: -19.318147659301758
    9. '=

' → logprob: -19.318147659301758
    10. '  ' → logprob: -20.068147659301758

Token 351: ' vars' (ID: 36194)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.00015943869948387146
    2. ' get' → logprob: -8.75015926361084
    3. 'vars' → logprob: -14.00015926361084
    4. '   ' → logprob: -17.500160217285156
    5. '	get' → logprob: -17.875160217285156
    6. '(get' → logprob: -18.000160217285156
    7. '
' → logprob: -18.375160217285156
    8. '_get' → logprob: -19.500160217285156
    9. '=get' → logprob: -19.500160217285156
    10. '0' → logprob: -19.750160217285156

Token 352: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -7.107425062713446e-06
    2. 'values' → logprob: -11.875006675720215
    3. 'Values' → logprob: -17.00000762939453
    4. '_VALUES' → logprob: -17.00000762939453
    5. '_vals' → logprob: -18.25000762939453
    6. '_variables' → logprob: -18.37500762939453
    7. '[' → logprob: -18.87500762939453
    8. '	values' → logprob: -19.37500762939453
    9. '.values' → logprob: -20.00000762939453
    10. '_' → logprob: -20.12500762939453

Token 353: '[var' (ID: 109537)
  Prédit: '[var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[var' → logprob: -0.00033939589047804475
    2. 'var' → logprob: -8.00033950805664
    3. '[' → logprob: -12.87533950805664
    4. '[arg' → logprob: -13.75033950805664
    5. '[val' → logprob: -15.50033950805664
    6. '[get' → logprob: -16.50033950805664
    7. ' var' → logprob: -17.87533950805664
    8. 'vars' → logprob: -17.87533950805664
    9. '.get' → logprob: -18.00033950805664
    10. 'get' → logprob: -18.12533950805664

Token 354: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1756367712223437e-05
    2. 'var' → logprob: -12.250011444091797
    3. 'ar' → logprob: -12.250011444091797
    4. '[' → logprob: -14.375011444091797
    5. 'al' → logprob: -14.875011444091797
    6. '[var' → logprob: -15.000011444091797
    7. '
' → logprob: -15.750011444091797
    8. 's' → logprob: -15.875011444091797
    9. '1' → logprob: -16.250011444091797
    10. 'ariable' → logprob: -16.375011444091797

Token 355: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04697075113654137
    2. ' if' → logprob: -4.046970844268799
    3. 'if' → logprob: -4.546970844268799
    4. '+' → logprob: -5.046970844268799
    5. '       ' → logprob: -5.546970844268799
    6. ')' → logprob: -5.671970844268799
    7. ']
' → logprob: -6.421970844268799
    8. '<|end|>' → logprob: -6.796970844268799
    9. '
' → logprob: -7.296970844268799
    10. ' +' → logprob: -8.17197036743164

Token 356: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4899880290031433
    2. '<|end|>' → logprob: -1.114988088607788
    3. '+' → logprob: -3.614988088607788
    4. ' +' → logprob: -3.989988088607788
    5. ')' → logprob: -5.739987850189209
    6. ' if' → logprob: -5.864987850189209
    7. 'val' → logprob: -6.614987850189209
    8. '        
' → logprob: -6.739987850189209
    9. ' ' → logprob: -6.989987850189209
    10. '<|end|>' → logprob: -7.364987850189209

Token 357: ' if' (ID: 538)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.025209834799170494
    2. 'if' (adapté à ' if') → logprob: -4.150209903717041
    3. '       ' → logprob: -5.525209903717041
    4. '+' → logprob: -6.025209903717041
    5. ' +' → logprob: -6.275209903717041
    6. ' val' → logprob: -7.900209903717041
    7. ' if' → logprob: -8.150209426879883
    8. 'vals' → logprob: -9.275209426879883
    9. '
' → logprob: -11.025209426879883
    10. '_val' → logprob: -11.275209426879883

Token 358: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.01816398836672306
    2. ' is' → logprob: -4.018164157867432
    3. 'var' → logprob: -11.768163681030273
    4. '   ' → logprob: -12.768163681030273
    5. '(is' → logprob: -14.268163681030273
    6. '	is' → logprob: -14.393163681030273
    7. '       ' → logprob: -14.643163681030273
    8. '_is' → logprob: -15.143163681030273
    9. '    ' → logprob: -15.268163681030273
    10. ' ' → logprob: -15.268163681030273

Token 359: '_var' (ID: 12782)
  Prédit: '_var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_var' → logprob: -1.3663626305060461e-05
    2. 'var' → logprob: -11.25001335144043
    3. '_val' → logprob: -14.37501335144043
    4. 'Var' → logprob: -17.75001335144043
    5. '_' → logprob: -18.37501335144043
    6. '_VAR' → logprob: -19.00001335144043
    7. '_vars' → logprob: -19.50001335144043
    8. '_va' → logprob: -19.87501335144043
    9. ' var' → logprob: -20.25001335144043
    10. '_variable' → logprob: -20.50001335144043

Token 360: '(var' (ID: 15816)
  Prédit: '(var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(var' → logprob: -1.723973582556937e-05
    2. 'var' → logprob: -11.125017166137695
    3. '(val' → logprob: -13.125017166137695
    4. '(' → logprob: -15.125017166137695
    5. ')var' → logprob: -16.000017166137695
    6. '(vars' → logprob: -17.625017166137695
    7. '[var' → logprob: -18.000017166137695
    8. ' var' → logprob: -18.000017166137695
    9. ' (' → logprob: -18.875017166137695
    10. ',var' → logprob: -19.125017166137695

Token 361: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1286916881799698
    2. '(var' → logprob: -2.1286916732788086
    3. 'ar' → logprob: -7.003691673278809
    4. 'var' → logprob: -7.503691673278809
    5. '(val' → logprob: -9.128691673278809
    6. 'a' → logprob: -10.003691673278809
    7. 'or' → logprob: -10.628691673278809
    8. '(' → logprob: -10.753691673278809
    9. 'al' → logprob: -10.878691673278809
    10. ' var' → logprob: -11.253691673278809

Token 362: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: -9.13388703338569e-06
    2. 'or' → logprob: -12.250009536743164
    3. '(or' → logprob: -13.125009536743164
    4. ')' → logprob: -13.750009536743164
    5. '(var' → logprob: -14.000009536743164
    6. 'Or' → logprob: -15.625009536743164
    7. ''or' → logprob: -17.750009536743164
    8. '(' → logprob: -18.125009536743164
    9. ')(' → logprob: -18.125009536743164
    10. 'orf' → logprob: -18.250009536743164

Token 363: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.28161847591400146
    2. 'con' → logprob: -1.4066184759140015
    3. 'var' → logprob: -7.781618595123291
    4. '_var' → logprob: -10.906618118286133
    5. '$con' → logprob: -11.781618118286133
    6. '	con' → logprob: -12.156618118286133
    7. 's' → logprob: -13.031618118286133
    8. '(con' → logprob: -13.031618118286133
    9. '_cons' → logprob: -13.406618118286133
    10. '_' → logprob: -13.531618118286133

Token 364: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.487050324678421
    2. '):' → logprob: -0.9870502948760986
    3. '(var' → logprob: -4.737050533294678
    4. ')' → logprob: -6.737050533294678
    5. 'var' → logprob: -6.737050533294678
    6. '):

' → logprob: -6.987050533294678
    7. '):
' → logprob: -8.23705005645752
    8. ')var' → logprob: -9.11205005645752
    9. '(' → logprob: -9.23705005645752
    10. '(args' → logprob: -9.61205005645752

Token 365: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14554058015346527
    2. ':
' → logprob: -2.270540475845337
    3. ':' → logprob: -3.520540475845337
    4. 'val' → logprob: -6.645540714263916
    5. '       ' → logprob: -7.520540714263916
    6. '):
' → logprob: -8.020540237426758
    7. ' val' → logprob: -8.770540237426758
    8. '   ' → logprob: -9.895540237426758
    9. '<|end|>' → logprob: -10.145540237426758
    10. '	       ' → logprob: -10.520540237426758

Token 366: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.0010055390885099769
    2. '           ' → logprob: -7.12600564956665
    3. ' val' → logprob: -9.251005172729492
    4. 'vals' → logprob: -9.501005172729492
    5. '       ' → logprob: -10.876005172729492
    6. '	val' → logprob: -12.751005172729492
    7. 'var' → logprob: -13.126005172729492
    8. '   ' → logprob: -13.376005172729492
    9. 'v' → logprob: -13.751005172729492
    10. 'vars' → logprob: -13.876005172729492

Token 367: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -8.256334695033729e-05
    2. '=' → logprob: -10.125082969665527
    3. ' =' → logprob: -10.125082969665527
    4. '2' → logprob: -13.250082969665527
    5. 'val' → logprob: -15.500082969665527
    6. '_' → logprob: -15.625082969665527
    7. '۳' → logprob: -16.87508201599121
    8. '   ' → logprob: -17.12508201599121
    9. 'var' → logprob: -17.12508201599121
    10. ' ' → logprob: -17.62508201599121

Token 368: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132619559764862
    2. ' =' → logprob: -1.3132619857788086
    3. '   ' → logprob: -16.188261032104492
    4. ' ' → logprob: -16.188261032104492
    5. '           ' → logprob: -17.813261032104492
    6. '       ' → logprob: -18.688261032104492
    7. '    ' → logprob: -19.188261032104492
    8. '=int' → logprob: -19.563261032104492
    9. ')' → logprob: -19.688261032104492
    10. '  ' → logprob: -19.938261032104492

Token 369: ' vars' (ID: 36194)
  Prédit: 'vars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vars' → logprob: -0.000204851632588543
    2. ' vars' → logprob: -8.500205039978027
    3. 'variables' → logprob: -14.125205039978027
    4. 'vals' → logprob: -14.875205039978027
    5. '(vars' → logprob: -16.25020408630371
    6. 'var' → logprob: -16.50020408630371
    7. '   ' → logprob: -16.62520408630371
    8. 'val' → logprob: -18.25020408630371
    9. 'get' → logprob: -18.37520408630371
    10. '_vars' → logprob: -18.75020408630371

Token 370: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -1.5332478142227046e-05
    2. 'values' → logprob: -11.125015258789062
    3. 'Values' → logprob: -14.625015258789062
    4. '_VALUES' → logprob: -17.625015258789062
    5. '_variables' → logprob: -17.750015258789062
    6. '[' → logprob: -18.125015258789062
    7. '	values' → logprob: -19.125015258789062
    8. '_vals' → logprob: -19.125015258789062
    9. ' values' → logprob: -19.500015258789062
    10. 'VALUES' → logprob: -19.625015258789062

Token 371: '[var' (ID: 109537)
  Prédit: '[var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[var' → logprob: -3.4121114822482923e-06
    2. 'var' → logprob: -12.625003814697266
    3. '[val' → logprob: -17.125003814697266
    4. '(var' → logprob: -19.000003814697266
    5. '[' → logprob: -19.125003814697266
    6. ' var' → logprob: -19.625003814697266
    7. ')var' → logprob: -19.750003814697266
    8. '[get' → logprob: -21.250003814697266
    9. '[
' → logprob: -21.750003814697266
    10. '[v' → logprob: -21.750003814697266

Token 372: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.088346359931165e-07
    2. 'or' → logprob: -15.500000953674316
    3. '
' → logprob: -15.500000953674316
    4. '۳' → logprob: -16.375
    5. '```' → logprob: -16.625
    6. '৩' → logprob: -16.75
    7. 'var' → logprob: -16.75
    8. ']' → logprob: -17.0
    9. '[var' → logprob: -17.375
    10. '[' → logprob: -17.5625

Token 373: '_or' (ID: 15400)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.06598319113254547
    2. 'or' → logprob: -3.065983295440674
    3. '_or' → logprob: -4.065983295440674
    4. 'ar' → logprob: -10.065982818603516
    5. 'Or' → logprob: -11.440982818603516
    6. '[' → logprob: -11.440982818603516
    7. ']' → logprob: -12.440982818603516
    8. ' or' → logprob: -12.440982818603516
    9. '_' → logprob: -12.690982818603516
    10. ')' → logprob: -12.815982818603516

Token 374: '_con' (ID: 7531)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.524040162563324
    2. 'or' → logprob: -1.1490402221679688
    3. '_con' → logprob: -3.1490402221679688
    4. '3' → logprob: -3.2740402221679688
    5. '_or' → logprob: -4.649040222167969
    6. 'org' → logprob: -8.024040222167969
    7. 'ar' → logprob: -9.774040222167969
    8. 'on' → logprob: -10.524040222167969
    9. 'cor' → logprob: -10.649040222167969
    10. 'ocon' → logprob: -11.274040222167969

Token 375: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3955223560333252
    2. '}' → logprob: -2.020522356033325
    3. '       ' → logprob: -2.520522356033325
    4. 'else' → logprob: -2.520522356033325
    5. '<|end|>' → logprob: -4.395522117614746
    6. ']' → logprob: -4.645522117614746
    7. ' else' → logprob: -5.520522117614746
    8. '   ' → logprob: -5.895522117614746
    9. ')
' → logprob: -6.395522117614746
    10. '}
' → logprob: -7.145522117614746

Token 376: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0591176301240921
    2. 'else' → logprob: -3.434117555618286
    3. ' else' → logprob: -3.684117555618286
    4. ')' → logprob: -10.934117317199707
    5. '	else' → logprob: -12.309117317199707
    6. '   ' → logprob: -13.059117317199707
    7. '	' → logprob: -13.434117317199707
    8. '#else' → logprob: -14.184117317199707
    9. '<|end|>' → logprob: -14.309117317199707
    10. '}else' → logprob: -14.434117317199707

Token 377: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5549919605255127
    2. ' else' → logprob: -1.0549919605255127
    3. '       ' → logprob: -2.5549919605255127
    4. '   ' → logprob: -10.679991722106934
    5. '	else' → logprob: -11.554991722106934
    6. ':
' → logprob: -14.679991722106934
    7. '           ' → logprob: -14.804991722106934
    8. '_else' → logprob: -15.179991722106934
    9. '	' → logprob: -15.304991722106934
    10. '      ' → logprob: -15.929991722106934

Token 378: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6817898154258728
    2. ':
' → logprob: -0.8067898154258728
    3. '           ' → logprob: -3.0567898750305176
    4. '       ' → logprob: -7.806789875030518
    5. '<|end|>' → logprob: -9.05678939819336
    6. '   ' → logprob: -9.55678939819336
    7. ':return' → logprob: -9.80678939819336
    8. '          ' → logprob: -10.05678939819336
    9. '):
' → logprob: -10.18178939819336
    10. '               ' → logprob: -10.43178939819336

Token 379: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016766138141974807
    2. 'val' → logprob: -6.501676559448242
    3. ' val' → logprob: -9.376676559448242
    4. '<|end|>' → logprob: -10.126676559448242
    5. '               ' → logprob: -11.501676559448242
    6. '<|end|>' → logprob: -11.876676559448242
    7. ':' → logprob: -12.001676559448242
    8. '       ' → logprob: -12.626676559448242
    9. '	       ' → logprob: -12.751676559448242
    10. '0' → logprob: -12.751676559448242

Token 380: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.0005296798190101981
    2. ' val' → logprob: -7.625529766082764
    3. '           ' → logprob: -10.250529289245605
    4. 'int' → logprob: -12.125529289245605
    5. '       ' → logprob: -15.250529289245605
    6. '	val' → logprob: -15.375529289245605
    7. '   ' → logprob: -16.750530242919922
    8. '
' → logprob: -16.875530242919922
    9. ',val' → logprob: -16.875530242919922
    10. '_val' → logprob: -17.250530242919922

Token 381: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.292907877039397e-06
    2. '_' → logprob: -13.37500286102295
    3. ' =' → logprob: -14.50000286102295
    4. '=' → logprob: -14.87500286102295
    5. 'val' → logprob: -15.25000286102295
    6. ' ' → logprob: -15.50000286102295
    7. '   ' → logprob: -15.62500286102295
    8. '(' → logprob: -17.437503814697266
    9. '۳' → logprob: -17.437503814697266
    10. '_val' → logprob: -17.812503814697266

Token 382: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804171830415726
    2. ' =' → logprob: -3.288041830062866
    3. '=int' → logprob: -15.288042068481445
    4. '=
' → logprob: -18.538042068481445
    5. '=get' → logprob: -19.038042068481445
    6. ' ' → logprob: -19.413042068481445
    7. '   ' → logprob: -20.038042068481445
    8. 'int' → logprob: -20.288042068481445
    9. '+=' → logprob: -20.413042068481445
    10. ')' → logprob: -20.913042068481445

Token 383: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00012356207298580557
    2. ' int' → logprob: -9.000123977661133
    3. 'get' → logprob: -16.375123977661133
    4. '<int' → logprob: -19.750123977661133
    5. '(int' → logprob: -19.875123977661133
    6. '=int' → logprob: -19.875123977661133
    7. '   ' → logprob: -20.625123977661133
    8. '[int' → logprob: -20.750123977661133
    9. ':int' → logprob: -21.500123977661133
    10. '	int' → logprob: -21.625123977661133

Token 384: '(var' (ID: 15816)
  Prédit: '(var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(var' → logprob: -0.029753267765045166
    2. 'var' → logprob: -3.5297532081604004
    3. ' var' → logprob: -13.904753684997559
    4. ')var' → logprob: -13.904753684997559
    5. '(' → logprob: -14.154753684997559
    6. '[var' → logprob: -15.529753684997559
    7. '(vars' → logprob: -17.529752731323242
    8. '(val' → logprob: -17.654752731323242
    9. '(program' → logprob: -18.279752731323242
    10. '(
' → logprob: -18.529752731323242

Token 385: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.4378848391061183e-05
    2. '(var' → logprob: -11.375014305114746
    3. '(' → logprob: -13.625014305114746
    4. 'var' → logprob: -14.250014305114746
    5. '_or' → logprob: -15.625014305114746
    6. ')' → logprob: -15.875014305114746
    7. 'or' → logprob: -16.000015258789062
    8. '[var' → logprob: -16.125015258789062
    9. '_' → logprob: -16.250015258789062
    10. 'vars' → logprob: -16.375015258789062

Token 386: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: -0.0005846070707775652
    2. '(var' → logprob: -8.000584602355957
    3. '3' → logprob: -9.250584602355957
    4. 'or' → logprob: -9.875584602355957
    5. '[var' → logprob: -9.875584602355957
    6. '[' → logprob: -10.750584602355957
    7. '(or' → logprob: -11.875584602355957
    8. 'Or' → logprob: -12.250584602355957
    9. '_con' → logprob: -12.375584602355957
    10. '(' → logprob: -12.625584602355957

Token 387: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.12718909978866577
    2. 'con' → logprob: -2.1271891593933105
    3. 'args' → logprob: -8.752188682556152
    4. '3' → logprob: -10.377188682556152
    5. '_or' → logprob: -11.502188682556152
    6. 'arg' → logprob: -11.502188682556152
    7. 'Con' → logprob: -11.877188682556152
    8. 'or' → logprob: -12.002188682556152
    9. '	con' → logprob: -12.002188682556152
    10. ' con' → logprob: -12.252188682556152

Token 388: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008229722734540701
    2. ')
' → logprob: -7.125823020935059
    3. '       ' → logprob: -11.125823020935059
    4. '   ' → logprob: -12.750823020935059
    5. ' )' → logprob: -14.875823020935059
    6. ')
' → logprob: -15.375823020935059
    7. '           ' → logprob: -16.375822067260742
    8. '))' → logprob: -16.500822067260742
    9. ')

' → logprob: -17.125822067260742
    10. ')return' → logprob: -17.125822067260742

Token 389: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07550454139709473
    2. 'vars' → logprob: -2.9505045413970947
    3. '
' → logprob: -4.200504302978516
    4. ' vars' → logprob: -5.450504302978516
    5. '        
' → logprob: -7.700504302978516
    6. '   ' → logprob: -8.700504302978516
    7. '(vars' → logprob: -9.200504302978516
    8. 'vals' → logprob: -9.700504302978516
    9. '```' → logprob: -9.825504302978516
    10. 'variables' → logprob: -9.950504302978516

Token 390: ' val' (ID: 1459)
  Prédit: 'vars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vars' → logprob: -0.037793345749378204
    2. ' vars' → logprob: -3.6627933979034424
    3. '       ' → logprob: -4.537793159484863
    4. '
' → logprob: -8.162793159484863
    5. '   ' → logprob: -8.412793159484863
    6. '        
' → logprob: -9.412793159484863
    7. 'variables' → logprob: -10.162793159484863
    8. '(vars' → logprob: -10.537793159484863
    9. 'vals' → logprob: -11.162793159484863
    10. '```' → logprob: -11.287793159484863

Token 391: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4262993633747101
    2. '2' → logprob: -1.3012993335723877
    3. '3' → logprob: -3.3012993335723877
    4. ' =' → logprob: -4.301299571990967
    5. '_result' → logprob: -4.676299571990967
    6. '1' → logprob: -5.426299571990967
    7. '=' → logprob: -5.551299571990967
    8. 'result' → logprob: -5.676299571990967
    9. 'sum' → logprob: -6.676299571990967
    10. '_values' → logprob: -7.551299571990967

Token 392: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.004082793369889259
    2. ' val' → logprob: -5.504082679748535
    3. '   ' → logprob: -13.004082679748535
    4. 'vals' → logprob: -14.254082679748535
    5. '	val' → logprob: -14.379082679748535
    6. '       ' → logprob: -14.879082679748535
    7. '(val' → logprob: -15.379082679748535
    8. 'vars' → logprob: -16.00408363342285
    9. '    ' → logprob: -17.00408363342285
    10. ' ' → logprob: -17.12908363342285

Token 393: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014080171473324299
    2. 'vals' → logprob: -5.389080047607422
    3. 'val' → logprob: -5.514080047607422
    4. 'var' → logprob: -6.514080047607422
    5. '[var' → logprob: -6.514080047607422
    6. 'vars' → logprob: -6.764080047607422
    7. '[val' → logprob: -7.639080047607422
    8. '_values' → logprob: -8.389080047607422
    9. '_vals' → logprob: -8.639080047607422
    10. '_vars' → logprob: -8.764080047607422

Token 394: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20141363143920898
    2. '+' → logprob: -1.701413631439209
    3. 'val' → logprob: -16.201414108276367
    4. '[val' → logprob: -16.576414108276367
    5. ' ' → logprob: -16.701414108276367
    6. '+
' → logprob: -17.076414108276367
    7. ' ' → logprob: -17.326414108276367
    8. ' +
' → logprob: -17.826414108276367
    9. '   ' → logprob: -17.951414108276367
    10. ' plus' → logprob: -18.076414108276367

Token 395: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.07888978719711304
    2. ' val' → logprob: -2.578889846801758
    3. '_val' → logprob: -18.078889846801758
    4. '	val' → logprob: -18.328889846801758
    5. '(val' → logprob: -19.203889846801758
    6. ' ' → logprob: -19.203889846801758
    7. '[val' → logprob: -20.453889846801758
    8. ' ' → logprob: -21.078889846801758
    9. 'vals' → logprob: -21.203889846801758
    10. '   ' → logprob: -21.578889846801758

Token 396: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0007210109033621848
    2. 'val' → logprob: -7.250720977783203
    3. '[val' → logprob: -12.375720977783203
    4. ' val' → logprob: -12.625720977783203
    5. '(val' → logprob: -13.625720977783203
    6. ' ' → logprob: -14.250720977783203
    7. ')' → logprob: -14.875720977783203
    8. '_val' → logprob: -15.250720977783203
    9. '[' → logprob: -15.625720977783203
    10. '.val' → logprob: -15.625720977783203

Token 397: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4807463586330414
    2. 'vars' → logprob: -1.9807463884353638
    3. '
' → logprob: -2.105746269226074
    4. '   ' → logprob: -2.855746269226074
    5. '    
' → logprob: -3.855746269226074
    6. '        
' → logprob: -4.105746269226074
    7. '  
' → logprob: -4.730746269226074
    8. '\n' → logprob: -5.480746269226074
    9. '<|end|>' → logprob: -5.855746269226074
    10. ')' → logprob: -5.980746269226074

Token 398: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09881927818059921
    2. 'vars' → logprob: -2.4738192558288574
    3. ' vars' → logprob: -5.723819255828857
    4. '
' → logprob: -5.848819255828857
    5. '   ' → logprob: -6.098819255828857
    6. '        
' → logprob: -7.973819255828857
    7. '(vars' → logprob: -8.473819732666016
    8. '<|end|>' → logprob: -8.473819732666016
    9. '_vars' → logprob: -8.598819732666016
    10. ')' → logprob: -9.473819732666016

Token 399: ' if' (ID: 538)
  Prédit: 'vars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vars' → logprob: -0.0020781708881258965
    2. '       ' → logprob: -6.502078056335449
    3. ' vars' → logprob: -7.877078056335449
    4. '   ' → logprob: -8.75207805633545
    5. 'variables' → logprob: -10.25207805633545
    6. '_vars' → logprob: -14.37707805633545
    7. '(vars' → logprob: -14.37707805633545
    8. 'vals' → logprob: -14.62707805633545
    9. '.vars' → logprob: -15.12707805633545
    10. ' variables' → logprob: -15.50207805633545

Token 400: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.6224234700202942
    2. 'val' → logprob: -0.8724234700202942
    3. 'var' → logprob: -3.8724234104156494
    4. ' var' → logprob: -4.4974236488342285
    5. ' len' → logprob: -5.4974236488342285
    6. ' is' → logprob: -6.1224236488342285
    7. 'is' → logprob: -6.2474236488342285
    8. ' ' → logprob: -6.4974236488342285
    9. 'len' → logprob: -6.9974236488342285
    10. ' isinstance' → logprob: -7.4974236488342285

Token 401: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2917380928993225
    2. ' >' → logprob: -1.4167380332946777
    3. ' >=' → logprob: -5.291738033294678
    4. '>=' → logprob: -5.541738033294678
    5. ' <' → logprob: -7.541738033294678
    6. '<' → logprob: -7.541738033294678
    7. '[var' → logprob: -8.666738510131836
    8. ' <=' → logprob: -9.041738510131836
    9. '<=' → logprob: -9.166738510131836
    10. 'vars' → logprob: -10.291738510131836

Token 402: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0755229964852333
    2. '0' → logprob: -2.7005228996276855
    3. '-(' → logprob: -6.0755228996276855
    4. '-min' → logprob: -6.4505228996276855
    5. '-int' → logprob: -7.2005228996276855
    6. ' -' → logprob: -7.4505228996276855
    7. '-s' → logprob: -9.325523376464844
    8. '-m' → logprob: -9.825523376464844
    9. ' ' → logprob: -9.950523376464844
    10. '-c' → logprob: -10.325523376464844

Token 403: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10216238349676132
    2. '0' → logprob: -2.3521623611450195
    3. '-(' → logprob: -6.4771623611450195
    4. '-int' → logprob: -8.97716236114502
    5. '-min' → logprob: -9.10216236114502
    6. ' -' → logprob: -10.22716236114502
    7. '-s' → logprob: -10.72716236114502
    8. '1' → logprob: -10.85216236114502
    9. '-m' → logprob: -10.97716236114502
    10. ' ' → logprob: -11.47716236114502

Token 404: ' or' (ID: 503)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20581424236297607
    2. ':' → logprob: -1.705814242362976
    3. '           ' → logprob: -5.705814361572266
    4. ' or' → logprob: -7.455814361572266
    5. '       ' → logprob: -8.080814361572266
    6. ':
' → logprob: -9.705814361572266
    7. 'val' → logprob: -10.080814361572266
    8. '   ' → logprob: -10.705814361572266
    9. '):
' → logprob: -10.705814361572266
    10. ':

' → logprob: -11.830814361572266

Token 405: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.016281981021165848
    2. ' val' → logprob: -4.141282081604004
    3. '   ' → logprob: -8.391282081604004
    4. '           ' → logprob: -12.391282081604004
    5. '  ' → logprob: -12.516282081604004
    6. '       ' → logprob: -13.016282081604004
    7. 'var' → logprob: -13.016282081604004
    8. '>' → logprob: -13.141282081604004
    9. '    ' → logprob: -13.391282081604004
    10. '	val' → logprob: -13.516282081604004

Token 406: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1811562031507492
    2. ' >' → logprob: -2.3061561584472656
    3. '>=' → logprob: -3.1811561584472656
    4. ' >=' → logprob: -3.8061561584472656
    5. 'val' → logprob: -6.306156158447266
    6. ' val' → logprob: -7.806156158447266
    7. '   ' → logprob: -11.181156158447266
    8. ' ' → logprob: -11.681156158447266
    9. '[val' → logprob: -11.931156158447266
    10. '[' → logprob: -12.181156158447266

Token 407: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.18056248128414154
    2. '2' → logprob: -2.5555624961853027
    3. '10' → logprob: -2.9305624961853027
    4. '(' → logprob: -3.6805624961853027
    5. '1' → logprob: -5.430562496185303
    6. '655' → logprob: -6.430562496185303
    7. '256' → logprob: -6.930562496185303
    8. '327' → logprob: -7.180562496185303
    9. '102' → logprob: -7.930562496185303
    10. '0' → logprob: -8.180562019348145

Token 408: '16' (ID: 1125)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.06722507625818253
    2. '2' → logprob: -3.3172249794006348
    3. '10' → logprob: -3.9422249794006348
    4. '655' → logprob: -5.317224979400635
    5. '(' → logprob: -6.442224979400635
    6. '1' → logprob: -6.442224979400635
    7. '256' → logprob: -7.817224979400635
    8. '327' → logprob: -7.942224979400635
    9. '102' → logprob: -8.567225456237793
    10. ' ' → logprob: -9.567225456237793

Token 409: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.02190258912742138
    2. ':' → logprob: -3.896902561187744
    3. '       ' → logprob: -6.896902561187744
    4. '   ' → logprob: -8.396903038024902
    5. '           ' → logprob: -9.646903038024902
    6. '):
' → logprob: -10.896903038024902
    7. ':return' → logprob: -11.396903038024902
    8. ':
' → logprob: -11.521903038024902
    9. '0' → logprob: -11.771903038024902
    10. ' or' → logprob: -11.896903038024902

Token 410: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.040094852447509766
    2. 'vars' → logprob: -3.2900948524475098
    3. ' vars' → logprob: -7.16509485244751
    4. 'print' → logprob: -7.41509485244751
    5. 'val' → logprob: -8.415094375610352
    6. '   ' → logprob: -8.790094375610352
    7. '       ' → logprob: -9.290094375610352
    8. 'vals' → logprob: -9.665094375610352
    9. 'variables' → logprob: -10.290094375610352
    10. ' print' → logprob: -11.040094375610352

Token 411: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015400325879454613
    2. '           ' → logprob: -5.015400409698486
    3. 'val' → logprob: -5.140400409698486
    4. ' print' → logprob: -6.515400409698486
    5. '       ' → logprob: -7.390400409698486
    6. 'pc' → logprob: -8.015399932861328
    7. '   ' → logprob: -8.515399932861328
    8. 'var' → logprob: -10.015399932861328
    9. 'vars' → logprob: -10.265399932861328
    10. ' val' → logprob: -10.515399932861328

Token 412: ' Stop' (ID: 22535)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008790888823568821
    2. 'val' → logprob: -4.883790969848633
    3. ' print' → logprob: -7.258790969848633
    4. '           ' → logprob: -8.008790969848633
    5. '       ' → logprob: -10.008790969848633
    6. '   ' → logprob: -10.633790969848633
    7. ' val' → logprob: -11.008790969848633
    8. 'pc' → logprob: -11.008790969848633
    9. 'break' → logprob: -11.258790969848633
    10. 'var' → logprob: -11.258790969848633

Token 413: ' before' (ID: 2254)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.5447438359260559
    2. '           ' → logprob: -1.0447437763214111
    3. '       ' → logprob: -3.419743776321411
    4. 'print' → logprob: -3.419743776321411
    5. '               ' → logprob: -6.79474401473999
    6. ' break' → logprob: -6.91974401473999
    7. '   ' → logprob: -8.044743537902832
    8. '
' → logprob: -8.794743537902832
    9. 'exit' → logprob: -9.294743537902832
    10. ' print' → logprob: -11.294743537902832

Token 414: ' updating' (ID: 34543)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.5483264327049255
    2. 'breaking' → logprob: -2.0483264923095703
    3. 'overflow' → logprob: -2.1733264923095703
    4. 'execut' → logprob: -2.6733264923095703
    5. 'print' → logprob: -3.1733264923095703
    6. 'execution' → logprob: -4.04832649230957
    7. 'printing' → logprob: -4.17332649230957
    8. 'ex' → logprob: -4.92332649230957
    9. 'running' → logprob: -5.29832649230957
    10. 'program' → logprob: -5.29832649230957

Token 415: '
' (ID: 198)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.027729937806725502
    2. '       ' → logprob: -4.0277299880981445
    3. ' break' → logprob: -5.5277299880981445
    4. '           ' → logprob: -5.6527299880981445
    5. 'print' → logprob: -6.2777299880981445
    6. '   ' → logprob: -8.902729988098145
    7. '	break' → logprob: -11.277729988098145
    8. '
' → logprob: -11.652729988098145
    9. '               ' → logprob: -11.777729988098145
    10. 'exit' → logprob: -13.527729988098145

Token 416: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6108351945877075
    2. 'break' → logprob: -1.1108351945877075
    3. '           ' → logprob: -2.360835075378418
    4. 'print' → logprob: -3.485835075378418
    5. ' break' → logprob: -6.235835075378418
    6. '   ' → logprob: -7.235835075378418
    7. '               ' → logprob: -9.610835075378418
    8. '```' → logprob: -9.860835075378418
    9. ' print' → logprob: -10.235835075378418
    10. '	break' → logprob: -11.735835075378418

Token 417: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.632706344127655
    2. 'print' → logprob: -0.757706344127655
    3. ' break' → logprob: -9.882706642150879
    4. '   ' → logprob: -10.632706642150879
    5. ' print' → logprob: -11.132706642150879
    6. 'exit' → logprob: -12.132706642150879
    7. '       ' → logprob: -12.507706642150879
    8. '           ' → logprob: -13.507706642150879
    9. '	break' → logprob: -14.007706642150879
    10. '```' → logprob: -14.132706642150879

Token 418: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17135868966579437
    2. '       ' → logprob: -2.546358585357666
    3. '
' → logprob: -2.921358585357666
    4. '    
' → logprob: -3.921358585357666
    5. '        
' → logprob: -5.921358585357666
    6. '  
' → logprob: -6.796358585357666
    7. '   
' → logprob: -8.046359062194824
    8. 'pc' → logprob: -8.296359062194824
    9. '\n' → logprob: -8.296359062194824
    10. ' 
' → logprob: -8.546359062194824

Token 419: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41870737075805664
    2. 'vars' → logprob: -1.2937073707580566
    3. '       ' → logprob: -2.7937073707580566
    4. ' vars' → logprob: -5.168707370758057
    5. '    
' → logprob: -7.543707370758057
    6. '        
' → logprob: -9.293706893920898
    7. 'variables' → logprob: -9.543706893920898
    8. '_vars' → logprob: -10.043706893920898
    9. '  
' → logprob: -10.418706893920898
    10. '
' → logprob: -10.668706893920898

Token 420: ' vars' (ID: 36194)
  Prédit: 'vars'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vars' (adapté à ' vars') → logprob: -0.2623260021209717
    2. '   ' → logprob: -1.7623260021209717
    3. '       ' → logprob: -3.2623260021209717
    4. ' vars' → logprob: -3.8873260021209717
    5. 'var' → logprob: -9.76232624053955
    6. 'variables' → logprob: -9.76232624053955
    7. '    
' → logprob: -10.13732624053955
    8. '        
' → logprob: -10.51232624053955
    9. '(vars' → logprob: -10.51232624053955
    10. '_vars' → logprob: -10.76232624053955

Token 421: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -3.650518920039758e-06
    2. '[_' → logprob: -13.000003814697266
    3. '_variables' → logprob: -14.250003814697266
    4. '_' → logprob: -15.000003814697266
    5. '_VALUES' → logprob: -16.125003814697266
    6. '[' → logprob: -16.250003814697266
    7. '_vals' → logprob: -16.625003814697266
    8. ' _' → logprob: -17.125003814697266
    9. 'Values' → logprob: -17.875003814697266
    10. 'values' → logprob: -18.000003814697266

Token 422: '[var' (ID: 109537)
  Prédit: '[var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[var' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -16.0
    3. '[val' → logprob: -16.125
    4. 'var' → logprob: -16.375
    5. '```' → logprob: -20.0
    6. '[v' → logprob: -20.5
    7. ' [' → logprob: -20.625
    8. '[param' → logprob: -20.875
    9. ' var' → logprob: -21.5
    10. '[...]' → logprob: -21.875

Token 423: '1' (ID: 16)
  Prédit: '[var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[var' → logprob: -0.28171154856681824
    2. '1' → logprob: -1.4067115783691406
    3. '[' → logprob: -7.781711578369141
    4. 'var' → logprob: -9.65671157836914
    5. '[val' → logprob: -9.78171157836914
    6. '```' → logprob: -12.53171157836914
    7. 's' → logprob: -12.65671157836914
    8. '_values' → logprob: -13.15671157836914
    9. ' var' → logprob: -13.28171157836914
    10. ']' → logprob: -13.53171157836914

Token 424: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006962312036193907
    2. ']=' → logprob: -7.375696182250977
    3. '=' → logprob: -10.125696182250977
    4. '[' → logprob: -10.500696182250977
    5. '[var' → logprob: -13.875696182250977
    6. ' ]' → logprob: -14.000696182250977
    7. ' =' → logprob: -15.625696182250977
    8. '[val' → logprob: -16.500696182250977
    9. ')' → logprob: -17.625696182250977
    10. '][' → logprob: -18.000696182250977

Token 425: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047814972698689
    2. ' =' → logprob: -4.511047840118408
    3. '[' → logprob: -17.51104736328125
    4. '＝' → logprob: -18.01104736328125
    5. ']=' → logprob: -18.76104736328125
    6. ']' → logprob: -19.01104736328125
    7. '.=' → logprob: -19.76104736328125
    8. ')' → logprob: -19.88604736328125
    9. ')=' → logprob: -19.88604736328125
    10. '=

' → logprob: -20.01104736328125

Token 426: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.00020354038861114532
    2. ' val' → logprob: -8.500203132629395
    3. '	val' → logprob: -20.75020408630371
    4. '(val' → logprob: -21.87520408630371
    5. '[val' → logprob: -23.25020408630371
    6. '   ' → logprob: -23.50020408630371
    7. '_val' → logprob: -23.50020408630371
    8. 'value' → logprob: -24.12520408630371
    9. 'v' → logprob: -24.25020408630371
    10. '.val' → logprob: -24.75020408630371

Token 427: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017833586782217026
    2. '
' → logprob: -4.267833709716797
    3. '    
' → logprob: -5.767833709716797
    4. '  
' → logprob: -8.267833709716797
    5. '\n' → logprob: -9.392833709716797
    6. 'pc' → logprob: -9.517833709716797
    7. '       ' → logprob: -10.142833709716797
    8. '   
' → logprob: -10.517833709716797
    9. ' 
' → logprob: -11.642833709716797
    10. '        
' → logprob: -11.892833709716797

Token 428: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015285872854292393
    2. 'pc' → logprob: -5.265285968780518
    3. '\n' → logprob: -5.265285968780518
    4. '    
' → logprob: -5.640285968780518
    5. '
' → logprob: -7.015285968780518
    6. '  
' → logprob: -8.64028549194336
    7. '\t' → logprob: -10.01528549194336
    8. '	pc' → logprob: -10.01528549194336
    9. '   
' → logprob: -10.26528549194336
    10. ' pc' → logprob: -10.76528549194336

Token 429: ' pc' (ID: 18736)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pc' (adapté à ' pc') → logprob: -0.007701507303863764
    2. '   ' → logprob: -5.257701396942139
    3. ' pc' → logprob: -6.007701396942139
    4. '
' → logprob: -12.632701873779297
    5. '	pc' → logprob: -14.257701873779297
    6. '    
' → logprob: -14.507701873779297
    7. '.pc' → logprob: -16.007701873779297
    8. '_pc' → logprob: -16.382701873779297
    9. '(pc' → logprob: -16.382701873779297
    10. '\n' → logprob: -16.757701873779297

Token 430: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06217113509774208
    2. ' +=' → logprob: -2.812171220779419
    3. '+' → logprob: -8.56217098236084
    4. '=' → logprob: -11.43717098236084
    5. '++' → logprob: -14.56217098236084
    6. ']+=' → logprob: -14.81217098236084
    7. '+='' → logprob: -15.31217098236084
    8. '+="' → logprob: -15.93717098236084
    9. ' =' → logprob: -16.312171936035156
    10. '```' → logprob: -16.562171936035156

Token 431: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '```' → logprob: -20.625
    4. '１' → logprob: -22.0
    5. '   ' → logprob: -22.25
    6. '
' → logprob: -23.5
    7. '۱' → logprob: -23.625
    8. '+' → logprob: -24.875
    9. '१' → logprob: -25.125
    10. '`' → logprob: -25.25

Token 432: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '```' → logprob: -21.25
    4. '
' → logprob: -22.75
    5. '１' → logprob: -23.125
    6. '   ' → logprob: -23.375
    7. '۱' → logprob: -24.0
    8. '+' → logprob: -24.25
    9. '0' → logprob: -25.0
    10. '`' → logprob: -25.125

Token 433: '

' (ID: 279)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.03689035028219223
    2. '   ' → logprob: -3.4118902683258057
    3. '```' → logprob: -6.411890506744385
    4. '
' → logprob: -7.286890506744385
    5. '<|end|>' → logprob: -7.661890506744385
    6. ' elif' → logprob: -8.161890029907227
    7. '    
' → logprob: -9.161890029907227
    8. '\n' → logprob: -10.786890029907227
    9. '	elif' → logprob: -11.036890029907227
    10. '#elif' → logprob: -12.536890029907227

Token 434: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0011792739387601614
    2. '   ' → logprob: -6.751179218292236
    3. ' elif' → logprob: -11.876179695129395
    4. 'el' → logprob: -13.376179695129395
    5. '```' → logprob: -15.126179695129395
    6. 'else' → logprob: -16.126178741455078
    7. '	elif' → logprob: -16.126178741455078
    8. ' ' → logprob: -17.251178741455078
    9. '    
' → logprob: -17.751178741455078
    10. 'El' → logprob: -17.876178741455078

Token 435: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -1.9504606825648807e-05
    2. ' elif' → logprob: -11.250019073486328
    3. 'el' → logprob: -12.625019073486328
    4. '```' → logprob: -12.875019073486328
    5. '   ' → logprob: -15.000019073486328
    6. 'else' → logprob: -15.250019073486328
    7. '	elif' → logprob: -17.375019073486328
    8. 'e' → logprob: -17.625019073486328
    9. 'elseif' → logprob: -18.250019073486328
    10. 'if' → logprob: -18.375019073486328

Token 436: ' instr' (ID: 10783)
  Prédit: ' instr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' instr' → logprob: -0.07936383038759232
    2. 'instr' → logprob: -2.5793638229370117
    3. '(instr' → logprob: -8.579363822937012
    4. ' '' → logprob: -9.329363822937012
    5. ''in' → logprob: -9.704363822937012
    6. ''' → logprob: -9.704363822937012
    7. ''s' → logprob: -10.579363822937012
    8. ' ' → logprob: -10.704363822937012
    9. '[in' → logprob: -12.079363822937012
    10. 'intr' → logprob: -12.704363822937012

Token 437: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01815216802060604
    2. '==' → logprob: -4.018152236938477
    3. '[' → logprob: -14.393152236938477
    4. ' =' → logprob: -14.768152236938477
    5. ' =='' → logprob: -14.768152236938477
    6. '=='' → logprob: -15.018152236938477
    7. '=' → logprob: -15.268152236938477
    8. ' ' → logprob: -16.393152236938477
    9. '===' → logprob: -16.643152236938477
    10. ' ' → logprob: -16.768152236938477

Token 438: ' '' (ID: 461)
  Prédit: ''S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''S' → logprob: -0.5978568196296692
    2. ''' → logprob: -0.8478568196296692
    3. ' '' → logprob: -3.8478567600250244
    4. '"' → logprob: -8.222856521606445
    5. ' ' → logprob: -9.972856521606445
    6. ''s' → logprob: -11.472856521606445
    7. '   ' → logprob: -11.597856521606445
    8. '('' → logprob: -12.222856521606445
    9. ''D' → logprob: -12.597856521606445
    10. '['' → logprob: -13.222856521606445

Token 439: 'SUB' (ID: 58665)
  Prédit: 'SUB'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SUB' → logprob: -0.0809553787112236
    2. 'SET' → logprob: -2.5809552669525146
    3. ''S' → logprob: -6.455955505371094
    4. ''' → logprob: -7.705955505371094
    5. ''s' → logprob: -11.080955505371094
    6. 'IF' → logprob: -11.205955505371094
    7. '"' → logprob: -11.955955505371094
    8. 'ADD' → logprob: -12.580955505371094
    9. ' SUB' → logprob: -13.955955505371094
    10. 'S' → logprob: -14.955955505371094

Token 440: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.03403026983141899
    2. '':' → logprob: -3.4090301990509033
    3. ''' → logprob: -8.284029960632324
    4. ' '' → logprob: -9.909029960632324
    5. ':
' → logprob: -10.784029960632324
    6. ':' → logprob: -10.784029960632324
    7. '':

' → logprob: -10.909029960632324
    8. '':
' → logprob: -11.409029960632324
    9. '   ' → logprob: -12.409029960632324
    10. '       ' → logprob: -12.534029960632324

Token 441: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04058283939957619
    2. 'var' → logprob: -3.6655828952789307
    3. '   ' → logprob: -4.290582656860352
    4. '
' → logprob: -8.540582656860352
    5. ' var' → logprob: -9.415582656860352
    6. '```' → logprob: -10.165582656860352
    7. '     ' → logprob: -10.790582656860352
    8. ':' → logprob: -11.040582656860352
    9. '        
' → logprob: -11.040582656860352
    10. '	' → logprob: -11.165582656860352

Token 442: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5897583365440369
    2. 'var' → logprob: -0.8397583365440369
    3. '   ' → logprob: -4.339758396148682
    4. '
' → logprob: -8.089757919311523
    5. ' var' → logprob: -8.214757919311523
    6. '#' (adapté à ' #') → logprob: -10.339757919311523
    7. ' ' → logprob: -10.964757919311523
    8. '           ' → logprob: -11.339757919311523
    9. '        
' → logprob: -11.339757919311523
    10. '	' → logprob: -12.214757919311523

Token 443: ' SUB' (ID: 31189)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.05366270989179611
    2. ' var' → logprob: -3.0536627769470215
    3. '   ' → logprob: -5.3036627769470215
    4. '       ' → logprob: -9.678662300109863
    5. ' ' → logprob: -11.053662300109863
    6. '  ' → logprob: -12.928662300109863
    7. 'args' → logprob: -13.178662300109863
    8. '
' → logprob: -13.303662300109863
    9. '	var' → logprob: -14.178662300109863
    10. '    ' → logprob: -14.678662300109863

Token 444: ' var' (ID: 972)
  Prédit: ' var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' var' → logprob: -0.3132714629173279
    2. 'var' → logprob: -1.3132715225219727
    3. '   ' → logprob: -11.813271522521973
    4. ' ' → logprob: -14.188271522521973
    5. '       ' → logprob: -15.063271522521973
    6. '_var' → logprob: -15.063271522521973
    7. ' =' → logprob: -15.563271522521973
    8. '	var' → logprob: -15.688271522521973
    9. '(var' → logprob: -15.688271522521973
    10. '    ' → logprob: -16.063270568847656

Token 445: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5469042658805847
    2. ' var' → logprob: -0.9219042658805847
    3. 'var' → logprob: -3.7969043254852295
    4. ' args' → logprob: -8.046904563903809
    5. '   ' → logprob: -8.171904563903809
    6. 'args' → logprob: -8.671904563903809
    7. ' ' → logprob: -9.421904563903809
    8. '[' → logprob: -9.796904563903809
    9. '[var' → logprob: -9.796904563903809
    10. '_' → logprob: -10.671904563903809

Token 446: ' var' (ID: 972)
  Prédit: ' var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' var' → logprob: -0.13271242380142212
    2. 'var' → logprob: -2.6327123641967773
    3. ' args' → logprob: -3.0077123641967773
    4. 'args' → logprob: -6.132712364196777
    5. ' =' → logprob: -7.632712364196777
    6. '       ' → logprob: -8.757712364196777
    7. '=' → logprob: -9.132712364196777
    8. ' val' → logprob: -11.007712364196777
    9. ' vars' → logprob: -11.007712364196777
    10. '=args' → logprob: -11.632712364196777

Token 447: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.028218192979693413
    2. '[' → logprob: -3.9032182693481445
    3. '1' → logprob: -4.9032182693481445
    4. '0' → logprob: -8.903218269348145
    5. '   ' → logprob: -10.653218269348145
    6. 'args' → logprob: -10.653218269348145
    7. ' ' → logprob: -11.153218269348145
    8. '```' → logprob: -12.403218269348145
    9. ' [' → logprob: -12.528218269348145
    10. '[]' → logprob: -12.903218269348145

Token 448: ' var' (ID: 972)
  Prédit: ' var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' var' → logprob: -0.3622862994670868
    2. 'var' → logprob: -1.6122863292694092
    3. ' args' → logprob: -2.362286329269409
    4. 'args' → logprob: -4.61228609085083
    5. 'vars' → logprob: -8.987286567687988
    6. ' vars' → logprob: -8.987286567687988
    7. ' val' → logprob: -10.487286567687988
    8. ' ' → logprob: -11.237286567687988
    9. ',args' → logprob: -11.487286567687988
    10. '$args' → logprob: -11.737286567687988

Token 449: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.1472419600977446e-06
    2. '2' → logprob: -14.500000953674316
    3. 'or' → logprob: -15.000000953674316
    4. '[' → logprob: -16.000001907348633
    5. '1' → logprob: -16.750001907348633
    6. '```' → logprob: -17.875001907348633
    7. '(' → logprob: -18.250001907348633
    8. ' or' → logprob: -18.500001907348633
    9. '۳' → logprob: -18.500001907348633
    10. '３' → logprob: -19.000001907348633

Token 450: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050709739327430725
    2. 'var' → logprob: -3.4257097244262695
    3. ' var' → logprob: -5.1757097244262695
    4. '
' → logprob: -5.1757097244262695
    5. '        
' → logprob: -6.9257097244262695
    6. ':
' → logprob: -6.9257097244262695
    7. '   ' → logprob: -7.1757097244262695
    8. ':' → logprob: -7.1757097244262695
    9. '	' → logprob: -7.3007097244262695
    10. '        ' → logprob: -8.17570972442627

Token 451: ' SUB' (ID: 31189)
  Prédit: ' args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' args' → logprob: -0.16153672337532043
    2. 'args' → logprob: -1.911536693572998
    3. 'SUB' → logprob: -7.286536693572998
    4. ' SUB' → logprob: -7.661536693572998
    5. '(args' → logprob: -9.786537170410156
    6. '   ' → logprob: -11.036537170410156
    7. ' var' → logprob: -11.661537170410156
    8. '=args' → logprob: -11.786537170410156
    9. 'var' → logprob: -11.911537170410156
    10. ' vars' → logprob: -12.161537170410156

Token 452: ' var' (ID: 972)
  Prédit: ' var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' var' → logprob: -0.2819378077983856
    2. 'var' → logprob: -1.406937837600708
    3. ' args' → logprob: -7.531937599182129
    4. 'args' → logprob: -8.531937599182129
    5. ' ' → logprob: -10.906937599182129
    6. ' ' → logprob: -11.906937599182129
    7. 'vars' → logprob: -11.906937599182129
    8. '_var' → logprob: -12.406937599182129
    9. ' vars' → logprob: -12.406937599182129
    10. '[var' → logprob: -12.781937599182129

Token 453: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.349075556499884e-05
    2. '[' → logprob: -9.7500638961792
    3. '3' → logprob: -12.8750638961792
    4. 'args' → logprob: -14.0000638961792
    5. ' ' → logprob: -14.5000638961792
    6. ''' → logprob: -15.2500638961792
    7. ''s' → logprob: -15.7500638961792
    8. '_' → logprob: -15.7500638961792
    9. '2' → logprob: -15.8750638961792
    10. '`' → logprob: -15.8750638961792

Token 454: ' var' (ID: 972)
  Prédit: ' var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' var' → logprob: -0.47432705760002136
    2. 'var' → logprob: -0.9743270874023438
    3. ' args' → logprob: -8.724327087402344
    4. 'vars' → logprob: -10.599327087402344
    5. 'args' → logprob: -10.849327087402344
    6. ' vars' → logprob: -11.599327087402344
    7. ''' → logprob: -11.724327087402344
    8. ' ' → logprob: -11.849327087402344
    9. '`' → logprob: -12.474327087402344
    10. ' ' → logprob: -12.724327087402344

Token 455: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.029847231227905e-05
    2. '[' → logprob: -10.125080108642578
    3. 'var' → logprob: -10.625080108642578
    4. ' ' → logprob: -11.250080108642578
    5. '3' → logprob: -13.625080108642578
    6. '   ' → logprob: -14.375080108642578
    7. '```' → logprob: -15.125080108642578
    8. ''' → logprob: -15.500080108642578
    9. ' var' → logprob: -15.500080108642578
    10. '[var' → logprob: -15.625080108642578

Token 456: ' con' (ID: 406)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.38804468512535095
    2. ' var' → logprob: -1.8880447149276733
    3. 'con' → logprob: -2.013044595718384
    4. ' con' → logprob: -3.388044595718384
    5. ' args' → logprob: -6.388044834136963
    6. 'args' → logprob: -6.888044834136963
    7. '_con' → logprob: -10.388044357299805
    8. 's' → logprob: -10.638044357299805
    9. 'val' → logprob: -10.763044357299805
    10. ' val' → logprob: -11.013044357299805

Token 457: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47446316480636597
    2. ' var' → logprob: -1.0994632244110107
    3. 'var' → logprob: -3.2244632244110107
    4. '[var' → logprob: -6.974462985992432
    5. ' args' → logprob: -7.099462985992432
    6. '   ' → logprob: -7.474462985992432
    7. '        
' → logprob: -7.974462985992432
    8. '        ' → logprob: -7.974462985992432
    9. '[' → logprob: -8.22446346282959
    10. ':' → logprob: -8.59946346282959

Token 458: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001281779957935214
    2. 'var' → logprob: -7.12628173828125
    3. '   ' → logprob: -9.50128173828125
    4. ' var' → logprob: -9.62628173828125
    5. '```' → logprob: -9.75128173828125
    6. '        
' → logprob: -9.87628173828125
    7. '	' → logprob: -9.87628173828125
    8. '
' → logprob: -10.25128173828125
    9. '        ' → logprob: -10.37628173828125
    10. ':' → logprob: -10.62628173828125

Token 459: ' var' (ID: 972)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' (adapté à ' var') → logprob: -0.009175688959658146
    2. ' var' → logprob: -5.009175777435303
    3. '       ' → logprob: -6.009175777435303
    4. '   ' → logprob: -13.884175300598145
    5. '	var' → logprob: -16.13417625427246
    6. '        ' → logprob: -16.88417625427246
    7. '```' → logprob: -17.25917625427246
    8. '           ' → logprob: -17.75917625427246
    9. '      ' → logprob: -17.88417625427246
    10. '_var' → logprob: -18.13417625427246

Token 460: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6166903151315637e-05
    2. '[' → logprob: -11.625016212463379
    3. '_' → logprob: -12.250016212463379
    4. '   ' → logprob: -14.125016212463379
    5. '3' → logprob: -14.875016212463379
    6. 'args' → logprob: -15.125016212463379
    7. ' =' → logprob: -15.250016212463379
    8. '=' → logprob: -15.500016212463379
    9. ' ' → logprob: -16.000015258789062
    10. '```' → logprob: -16.125015258789062

Token 461: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692862749099731
    2. '=' → logprob: -2.1269285678863525
    3. ' ' → logprob: -15.376928329467773
    4. ',' → logprob: -15.376928329467773
    5. '=args' → logprob: -16.376928329467773
    6. '   ' → logprob: -16.751928329467773
    7. '       ' → logprob: -18.376928329467773
    8. ')' → logprob: -19.376928329467773
    9. '    ' → logprob: -19.626928329467773
    10. ' ' → logprob: -19.626928329467773

Token 462: ' args' (ID: 4966)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.014168208464980125
    2. ' args' → logprob: -4.2641682624816895
    3. '(args' → logprob: -13.139167785644531
    4. '$args' → logprob: -13.264167785644531
    5. '	args' → logprob: -14.639167785644531
    6. '=args' → logprob: -15.014167785644531
    7. '.args' → logprob: -15.764167785644531
    8. 'arguments' → logprob: -16.76416778564453
    9. ',args' → logprob: -16.88916778564453
    10. 'argv' → logprob: -18.38916778564453

Token 463: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '0' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.250001907348633
    4. ' [' → logprob: -17.250001907348633
    5. '```' → logprob: -17.375001907348633
    6. '1' → logprob: -18.625001907348633
    7. '[
' → logprob: -19.750001907348633
    8. ' ' → logprob: -20.000001907348633
    9. '
' → logprob: -20.875001907348633
    10. '`' → logprob: -21.000001907348633

Token 464: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0722858102526516e-05
    2. '[' → logprob: -10.125041007995605
    3. ' ' → logprob: -14.625041007995605
    4. '   ' → logprob: -16.50004005432129
    5. '1' → logprob: -17.62504005432129
    6. '```' → logprob: -18.00004005432129
    7. '`' → logprob: -19.00004005432129
    8. '       ' → logprob: -19.12504005432129
    9. '۰' → logprob: -19.12504005432129
    10. '(' → logprob: -19.31254005432129

Token 465: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 466: '       ' (ID: 309)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.0007367274374701083
    2. ' var' → logprob: -7.875736713409424
    3. '       ' → logprob: -8.125737190246582
    4. '        
' → logprob: -10.750737190246582
    5. '
' → logprob: -11.625737190246582
    6. '[var' → logprob: -11.625737190246582
    7. '<|end|>' → logprob: -12.250737190246582
    8. '   ' → logprob: -12.500737190246582
    9. ' 
' → logprob: -12.500737190246582
    10. ')var' → logprob: -13.125737190246582

Token 467: ' var' (ID: 972)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' (adapté à ' var') → logprob: -3.128163257315464e-07
    2. ' var' → logprob: -15.25
    3. 'val' → logprob: -17.75
    4. '       ' → logprob: -20.0
    5. 'vars' → logprob: -24.25
    6. '_var' → logprob: -24.5
    7. '   ' → logprob: -25.25
    8. '```' → logprob: -25.375
    9. '[var' → logprob: -26.75
    10. '	var' → logprob: -26.875

Token 468: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3970052897930145
    2. '[' → logprob: -1.397005319595337
    3. '2' → logprob: -2.522005319595337
    4. '```' → logprob: -11.772005081176758
    5. '   ' → logprob: -11.897005081176758
    6. ' [' → logprob: -12.272005081176758
    7. ' ' → logprob: -13.022005081176758
    8. '=' → logprob: -13.272005081176758
    9. 's' → logprob: -13.397005081176758
    10. '_' → logprob: -13.397005081176758

Token 469: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4216953217983246
    2. ' =' → logprob: -1.171695351600647
    3. '[' → logprob: -3.5466952323913574
    4. 'args' → logprob: -5.921695232391357
    5. '=args' → logprob: -6.296695232391357
    6. ' args' → logprob: -8.296695709228516
    7. '(args' → logprob: -8.546695709228516
    8. '$args' → logprob: -9.296695709228516
    9. '<|end|>' → logprob: -9.796695709228516
    10. '   ' → logprob: -10.296695709228516

Token 470: ' args' (ID: 4966)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.0067167943343520164
    2. ' args' → logprob: -5.006716728210449
    3. '(args' → logprob: -14.63171672821045
    4. '	args' → logprob: -14.63171672821045
    5. '=args' → logprob: -15.75671672821045
    6. 'vars' → logprob: -15.88171672821045
    7. '$args' → logprob: -16.006717681884766
    8. '.args' → logprob: -16.506717681884766
    9. '   ' → logprob: -17.506717681884766
    10. 'argv' → logprob: -18.381717681884766

Token 471: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.810037742368877e-05
    2. '1' → logprob: -10.250038146972656
    3. '```' → logprob: -14.125038146972656
    4. '   ' → logprob: -14.250038146972656
    5. ' [' → logprob: -14.750038146972656
    6. '2' → logprob: -15.125038146972656
    7. ' ' → logprob: -15.250038146972656
    8. '       ' → logprob: -16.250038146972656
    9. '[
' → logprob: -16.375038146972656
    10. '0' → logprob: -17.250038146972656

Token 472: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. '0' → logprob: -13.875001907348633
    3. '[' → logprob: -14.000001907348633
    4. ' ' → logprob: -15.625001907348633
    5. '   ' → logprob: -17.000001907348633
    6. '```' → logprob: -18.312501907348633
    7. '(' → logprob: -18.812501907348633
    8. '１' → logprob: -20.062501907348633
    9. '``' → logprob: -20.187501907348633
    10. '' → logprob: -20.250001907348633

Token 473: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 474: '       ' (ID: 309)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.023480840027332306
    2. '       ' → logprob: -3.7734808921813965
    3. 'val' → logprob: -8.773480415344238
    4. ' var' → logprob: -9.523480415344238
    5. '   ' → logprob: -13.023480415344238
    6. '[var' → logprob: -13.898480415344238
    7. '        
' → logprob: -14.023480415344238
    8. ')var' → logprob: -14.523480415344238
    9. '```' → logprob: -14.523480415344238
    10. '           ' → logprob: -14.773480415344238

Token 475: ' var' (ID: 972)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' (adapté à ' var') → logprob: -6.704273118884885e-07
    2. ' var' → logprob: -15.500000953674316
    3. 'if' → logprob: -15.875000953674316
    4. 'val' → logprob: -16.125
    5. '       ' → logprob: -16.5
    6. '
' → logprob: -18.5
    7. '```' → logprob: -19.0
    8. '   ' → logprob: -19.25
    9. 'for' → logprob: -19.5
    10. 'try' → logprob: -19.875

Token 476: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16024088859558105
    2. '[' → logprob: -1.910240888595581
    3. '   ' → logprob: -12.28524112701416
    4. '```' → logprob: -12.66024112701416
    5. '       ' → logprob: -13.16024112701416
    6. '3' → logprob: -13.28524112701416
    7. '_' → logprob: -13.78524112701416
    8. '
' → logprob: -14.16024112701416
    9. ' ' → logprob: -14.28524112701416
    10. '``' → logprob: -14.41024112701416

Token 477: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.375000953674316
    3. '_OR' → logprob: -16.0
    4. 'or' → logprob: -16.5
    5. '_for' → logprob: -17.375
    6. '_to' → logprob: -17.625
    7. '[' → logprob: -17.875
    8. 'Or' → logprob: -17.875
    9. '   ' → logprob: -19.375
    10. '=' → logprob: -19.375

Token 478: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.02991432510316372
    2. 'args' → logprob: -3.779914379119873
    3. 'con' → logprob: -5.029914379119873
    4. ' args' → logprob: -9.529913902282715
    5. 'Con' → logprob: -11.029913902282715
    6. '_args' → logprob: -11.404913902282715
    7. '_cons' → logprob: -13.404913902282715
    8. '(args' → logprob: -13.529913902282715
    9. '_or' → logprob: -13.904913902282715
    10. '$con' → logprob: -14.654913902282715

Token 479: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047814972698689
    2. ' =' → logprob: -4.511047840118408
    3. '=args' → logprob: -17.88604736328125
    4. '   ' → logprob: -17.88604736328125
    5. '_=' → logprob: -18.01104736328125
    6. ' ' → logprob: -19.13604736328125
    7. 's' → logprob: -19.76104736328125
    8. '_' → logprob: -20.01104736328125
    9. '=
' → logprob: -20.01104736328125
    10. 'if' → logprob: -20.26104736328125

Token 480: ' args' (ID: 4966)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.001170225441455841
    2. ' args' → logprob: -6.7511701583862305
    3. '(args' → logprob: -17.501171112060547
    4. '	args' → logprob: -17.501171112060547
    5. '$args' → logprob: -17.751171112060547
    6. '=args' → logprob: -18.626171112060547
    7. '.args' → logprob: -19.626171112060547
    8. '   ' → logprob: -21.876171112060547
    9. 'argv' → logprob: -22.626171112060547
    10. ',args' → logprob: -22.751171112060547

Token 481: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00020461321400944144
    2. '2' → logprob: -8.500205039978027
    3. '   ' → logprob: -14.125205039978027
    4. 'args' → logprob: -16.12520408630371
    5. ' ' → logprob: -16.75020408630371
    6. '       ' → logprob: -16.87520408630371
    7. '```' → logprob: -16.87520408630371
    8. '[
' → logprob: -17.12520408630371
    9. ' [' → logprob: -17.25020408630371
    10. 's' → logprob: -17.87520408630371

Token 482: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.869017852295656e-06
    2. '[' → logprob: -12.125006675720215
    3. 'args' → logprob: -14.125006675720215
    4. ' ' → logprob: -15.000006675720215
    5. '   ' → logprob: -15.500006675720215
    6. '```' → logprob: -16.25000762939453
    7. '0' → logprob: -17.62500762939453
    8. '1' → logprob: -17.87500762939453
    9. '``' → logprob: -18.25000762939453
    10. '(' → logprob: -18.62500762939453

Token 483: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.48367321491241455
    2. ']' → logprob: -1.4836732149124146
    3. '       ' → logprob: -1.8586732149124146
    4. '']
' → logprob: -8.733673095703125
    5. '']' → logprob: -8.858673095703125
    6. ')
' → logprob: -9.108673095703125
    7. '   ' → logprob: -9.233673095703125
    8. '```' → logprob: -9.358673095703125
    9. ']
' → logprob: -9.733673095703125
    10. ')' → logprob: -10.108673095703125

Token 484: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10148312151432037
    2. 'val' → logprob: -2.351483106613159
    3. ' val' → logprob: -7.601483345031738
    4. '
' → logprob: -7.726483345031738
    5. '        
' → logprob: -8.726483345031738
    6. '	val' → logprob: -9.351483345031738
    7. '   ' → logprob: -10.851483345031738
    8. '```' → logprob: -11.226483345031738
    9. '        ' → logprob: -11.476483345031738
    10. '[val' → logprob: -11.976483345031738

Token 485: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.00013154871703591198
    2. '       ' → logprob: -9.000131607055664
    3. ' val' → logprob: -12.000131607055664
    4. 'if' → logprob: -14.125131607055664
    5. 'vals' → logprob: -14.625131607055664
    6. '	val' → logprob: -15.375131607055664
    7. '   ' → logprob: -15.500131607055664
    8. 'var' → logprob: -15.750131607055664
    9. '```' → logprob: -16.250131607055664
    10. '_val' → logprob: -16.750131607055664

Token 486: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010913881473243237
    2. '=' → logprob: -5.260913848876953
    3. ' =' → logprob: -5.385913848876953
    4. '_' → logprob: -6.885913848876953
    5. '_val' → logprob: -10.635913848876953
    6. '_=' → logprob: -11.260913848876953
    7. '_var' → logprob: -12.010913848876953
    8. '   ' → logprob: -12.260913848876953
    9. '_vars' → logprob: -12.635913848876953
    10. 'var' → logprob: -12.760913848876953

Token 487: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750484973192215
    2. ' =' → logprob: -3.5297505855560303
    3. '=
' → logprob: -17.52975082397461
    4. '=

' → logprob: -18.40475082397461
    5. '   ' → logprob: -18.65475082397461
    6. ' ' → logprob: -20.27975082397461
    7. '       ' → logprob: -20.77975082397461
    8. '＝' → logprob: -21.65475082397461
    9. '    ' → logprob: -21.77975082397461
    10. ')' → logprob: -21.77975082397461

Token 488: ' vars' (ID: 36194)
  Prédit: 'vars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vars' → logprob: -0.0024779161904007196
    2. ' vars' → logprob: -6.002478122711182
    3. 'variables' → logprob: -13.252477645874023
    4. '(vars' → logprob: -15.502477645874023
    5. 'vals' → logprob: -16.002477645874023
    6. ' variables' → logprob: -16.502477645874023
    7. 'var' → logprob: -17.127477645874023
    8. 'Vars' → logprob: -18.502477645874023
    9. '_vars' → logprob: -18.752477645874023
    10. 'val' → logprob: -19.127477645874023

Token 489: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.0008143932209350169
    2. 'values' → logprob: -7.250814437866211
    3. 'vars' → logprob: -9.500814437866211
    4. '_variables' → logprob: -10.750814437866211
    5. 'vals' → logprob: -12.625814437866211
    6. '_vars' → logprob: -13.125814437866211
    7. 'variables' → logprob: -13.875814437866211
    8. '[' → logprob: -14.375814437866211
    9. '[var' → logprob: -14.875814437866211
    10. 'Values' → logprob: -15.250814437866211

Token 490: '[var' (ID: 109537)
  Prédit: '[var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[var' → logprob: -0.0007100477814674377
    2. 'var' → logprob: -7.2507100105285645
    3. '(var' → logprob: -17.375709533691406
    4. '[val' → logprob: -17.750709533691406
    5. '[' → logprob: -18.125709533691406
    6. ')var' → logprob: -19.125709533691406
    7. ' var' → logprob: -19.500709533691406
    8. 'Var' → logprob: -19.625709533691406
    9. '[arg' → logprob: -19.625709533691406
    10. '_var' → logprob: -21.250709533691406

Token 491: '2' (ID: 17)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.00020413640595506877
    2. '[var' → logprob: -8.500204086303711
    3. ' var' → logprob: -14.750204086303711
    4. '(var' → logprob: -15.750204086303711
    5. 'ar' → logprob: -16.00020408630371
    6. '_var' → logprob: -16.62520408630371
    7. ')var' → logprob: -19.87520408630371
    8. '.var' → logprob: -21.25020408630371
    9. 'Var' → logprob: -21.62520408630371
    10. 'vars' → logprob: -21.87520408630371

Token 492: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.049513671547174454
    2. ']' → logprob: -3.049513578414917
    3. '       ' → logprob: -7.174513816833496
    4. ')
' → logprob: -9.049513816833496
    5. 'if' → logprob: -11.174513816833496
    6. ')' → logprob: -11.674513816833496
    7. ']

' → logprob: -12.674513816833496
    8. 'var' → logprob: -12.674513816833496
    9. ']
' → logprob: -12.799513816833496
    10. 'val' → logprob: -13.549513816833496

Token 493: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009349246975034475
    2. 'if' → logprob: -7.000935077667236
    3. '<|end|>' → logprob: -11.625934600830078
    4. 'val' → logprob: -11.875934600830078
    5. ' if' → logprob: -12.250934600830078
    6. '   ' → logprob: -13.375934600830078
    7. '           ' → logprob: -15.250934600830078
    8. '```' → logprob: -15.375934600830078
    9. '        
' → logprob: -16.125934600830078
    10. '{
' → logprob: -16.250934600830078

Token 494: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03601470962166786
    2. '       ' → logprob: -4.036014556884766
    3. 'val' → logprob: -4.036014556884766
    4. ' if' → logprob: -10.536014556884766
    5. '   ' → logprob: -12.786014556884766
    6. '
' → logprob: -12.911014556884766
    7. '```' → logprob: -12.911014556884766
    8. 'var' → logprob: -13.161014556884766
    9. '	if' → logprob: -15.161014556884766
    10. ' val' → logprob: -15.161014556884766

Token 495: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.011047814972698689
    2. ' is' → logprob: -4.511047840118408
    3. '   ' → logprob: -17.38604736328125
    4. '(is' → logprob: -18.38604736328125
    5. '	is' → logprob: -19.38604736328125
    6. ' ' → logprob: -19.38604736328125
    7. 'not' → logprob: -19.51104736328125
    8. ' ' → logprob: -19.63604736328125
    9. '       ' → logprob: -20.26104736328125
    10. '  ' → logprob: -20.26104736328125

Token 496: '_var' (ID: 12782)
  Prédit: '_var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_var' → logprob: -0.008629591204226017
    2. 'var' → logprob: -4.75862979888916
    3. '_val' → logprob: -12.00862979888916
    4. '_' → logprob: -12.25862979888916
    5. '(var' → logprob: -13.75862979888916
    6. '(' → logprob: -14.00862979888916
    7. '(_' → logprob: -15.00862979888916
    8. ' var' → logprob: -15.13362979888916
    9. '_vars' → logprob: -15.13362979888916
    10. 'Var' → logprob: -15.25862979888916

Token 497: '(var' (ID: 15816)
  Prédit: '(var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(var' → logprob: -7.672236824873835e-05
    2. 'var' → logprob: -9.500076293945312
    3. ')var' → logprob: -14.125076293945312
    4. '[var' → logprob: -14.375076293945312
    5. '(' → logprob: -15.000076293945312
    6. '(val' → logprob: -15.875076293945312
    7. ' var' → logprob: -16.875076293945312
    8. ' (' → logprob: -17.750076293945312
    9. '(
' → logprob: -18.375076293945312
    10. '(variable' → logprob: -18.625076293945312

Token 498: '3' (ID: 18)
  Prédit: '(var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(var' → logprob: -0.07137321680784225
    2. '3' → logprob: -2.696373224258423
    3. '_or' → logprob: -7.696372985839844
    4. 'var' → logprob: -7.946372985839844
    5. 'or' → logprob: -8.196372985839844
    6. '(' → logprob: -9.196372985839844
    7. '[var' → logprob: -9.446372985839844
    8. 's' → logprob: -9.696372985839844
    9. '(s' → logprob: -10.571372985839844
    10. '_' → logprob: -10.821372985839844

Token 499: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: -3.9888433093437925e-05
    2. 'or' → logprob: -10.500040054321289
    3. '(var' → logprob: -12.125040054321289
    4. 'Or' → logprob: -12.125040054321289
    5. '(or' → logprob: -14.750040054321289
    6. '3' → logprob: -15.375040054321289
    7. '_of' → logprob: -16.25004005432129
    8. ')' → logprob: -16.37504005432129
    9. '[var' → logprob: -16.37504005432129
    10. '-or' → logprob: -16.37504005432129

Token 500: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.012691402807831764
    2. 'con' → logprob: -4.387691497802734
    3. '_or' → logprob: -8.762691497802734
    4. 'or' → logprob: -10.887691497802734
    5. '(con' → logprob: -13.512691497802734
    6. 'Con' → logprob: -13.637691497802734
    7. '_cor' → logprob: -13.762691497802734
    8. '	con' → logprob: -14.012691497802734
    9. '$con' → logprob: -14.512691497802734
    10. 'a' → logprob: -15.387691497802734

Token 501: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.019647253677248955
    2. '):' → logprob: -4.019647121429443
    3. ':
' → logprob: -7.519647121429443
    4. '       ' → logprob: -7.769647121429443
    5. '           ' → logprob: -9.269647598266602
    6. 'var' → logprob: -9.519647598266602
    7. '(var' → logprob: -9.644647598266602
    8. ':' → logprob: -9.644647598266602
    9. '[var' → logprob: -9.769647598266602
    10. ')' → logprob: -10.644647598266602

Token 502: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022098273038864136
    2. 'val' → logprob: -3.8970983028411865
    3. '   ' → logprob: -7.272098064422607
    4. '       ' → logprob: -7.647098064422607
    5. ' val' → logprob: -8.272098541259766
    6. '               ' → logprob: -10.022098541259766
    7. '{
' → logprob: -10.272098541259766
    8. 'var' → logprob: -10.772098541259766
    9. 'vars' → logprob: -11.897098541259766
    10. 'vals' → logprob: -12.272098541259766

Token 503: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.0005060884868726134
    2. ' val' → logprob: -7.7505059242248535
    3. '           ' → logprob: -9.500506401062012
    4. '       ' → logprob: -15.250506401062012
    5. '   ' → logprob: -15.750506401062012
    6. '	val' → logprob: -16.250505447387695
    7. '               ' → logprob: -16.625505447387695
    8. 'var' → logprob: -18.000505447387695
    9. ',val' → logprob: -18.625505447387695
    10. 'vals' → logprob: -18.625505447387695

Token 504: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00016277639952022582
    2. '=' → logprob: -9.375163078308105
    3. ' =' → logprob: -10.625163078308105
    4. 'val' → logprob: -10.625163078308105
    5. '_' → logprob: -11.375163078308105
    6. 'var' → logprob: -12.000163078308105
    7. 'vars' → logprob: -13.000163078308105
    8. '[var' → logprob: -13.000163078308105
    9. 'vals' → logprob: -13.500163078308105
    10. '_values' → logprob: -13.625163078308105

Token 505: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602243334054947
    2. ' =' → logprob: -1.9102243185043335
    3. '=
' → logprob: -16.53522491455078
    4. '           ' → logprob: -16.66022491455078
    5. 's' → logprob: -17.03522491455078
    6. ' ' → logprob: -17.03522491455078
    7. '   ' → logprob: -17.16022491455078
    8. '       ' → logprob: -17.66022491455078
    9. ')' → logprob: -18.03522491455078
    10. '=

' → logprob: -18.28522491455078

Token 506: ' vars' (ID: 36194)
  Prédit: 'vars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vars' → logprob: -1.9981420336989686e-05
    2. ' vars' → logprob: -10.875020027160645
    3. 'variables' → logprob: -14.000020027160645
    4. 'vals' → logprob: -15.750020027160645
    5. '(vars' → logprob: -17.750019073486328
    6. 'var' → logprob: -17.750019073486328
    7. '   ' → logprob: -18.875019073486328
    8. '_vars' → logprob: -19.625019073486328
    9. '.vars' → logprob: -20.500019073486328
    10. ' ' → logprob: -20.625019073486328

Token 507: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.00013250234769657254
    2. '_variables' → logprob: -9.37513256072998
    3. 'values' → logprob: -10.87513256072998
    4. '[var' → logprob: -11.12513256072998
    5. 'Values' → logprob: -11.62513256072998
    6. '_vars' → logprob: -13.12513256072998
    7. '_VALUES' → logprob: -13.75013256072998
    8. '{' → logprob: -14.50013256072998
    9. '[' → logprob: -14.75013256072998
    10. 'var' → logprob: -15.25013256072998

Token 508: '[var' (ID: 109537)
  Prédit: '[var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[var' → logprob: -6.704273118884885e-07
    2. 'var' → logprob: -14.375000953674316
    3. '[val' → logprob: -17.375
    4. '[' → logprob: -18.625
    5. '(var' → logprob: -19.5
    6. '[
' → logprob: -21.25
    7. ')var' → logprob: -21.25
    8. ' var' → logprob: -21.375
    9. '[class' → logprob: -22.625
    10. '_var' → logprob: -22.875

Token 509: '3' (ID: 18)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.014606032520532608
    2. 'or' → logprob: -4.63960599899292
    3. '3' → logprob: -5.63960599899292
    4. '(var' → logprob: -6.88960599899292
    5. 'ar' → logprob: -9.014606475830078
    6. '[var' → logprob: -9.139606475830078
    7. '_or' → logprob: -11.139606475830078
    8. '_var' → logprob: -12.264606475830078
    9. 'org' → logprob: -12.389606475830078
    10. '{' → logprob: -12.514606475830078

Token 510: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: -0.0016437612939625978
    2. 'or' → logprob: -6.876643657684326
    3. '[var' → logprob: -7.626643657684326
    4. 'var' → logprob: -9.376644134521484
    5. '3' → logprob: -11.001644134521484
    6. 'Or' → logprob: -11.751644134521484
    7. '_var' → logprob: -11.876644134521484
    8. '(var' → logprob: -12.626644134521484
    9. '{' → logprob: -13.626644134521484
    10. '[' → logprob: -14.501644134521484

Token 511: '_con' (ID: 7531)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.5393669009208679
    2. 'or' → logprob: -1.4143669605255127
    3. '_con' → logprob: -1.7893669605255127
    4. '_or' → logprob: -5.414366722106934
    5. '3' → logprob: -6.289366722106934
    6. 'var' → logprob: -8.664366722106934
    7. 'org' → logprob: -9.039366722106934
    8. 'ar' → logprob: -10.414366722106934
    9. 'ocon' → logprob: -10.664366722106934
    10. 'cor' → logprob: -10.664366722106934

Token 512: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6404776573181152
    2. ')' → logprob: -0.8904776573181152
    3. 'else' → logprob: -3.2654776573181152
    4. ')
' → logprob: -4.515477657318115
    5. ']' → logprob: -5.140477657318115
    6. '}' → logprob: -5.390477657318115
    7. '<|end|>' → logprob: -6.890477657318115
    8. ' else' → logprob: -7.765477657318115
    9. ']
' → logprob: -7.765477657318115
    10. '}else' → logprob: -8.015478134155273

Token 513: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008180956356227398
    2. 'else' → logprob: -4.883181095123291
    3. ' else' → logprob: -7.508181095123291
    4. '<|end|>' → logprob: -11.258180618286133
    5. '   ' → logprob: -12.258180618286133
    6. '           ' → logprob: -13.008180618286133
    7. '	else' → logprob: -13.758180618286133
    8. '```' → logprob: -13.758180618286133
    9. '}else' → logprob: -13.883180618286133
    10. '<|end|>' → logprob: -14.633180618286133

Token 514: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.53764808177948
    2. '       ' → logprob: -1.03764808177948
    3. ' else' → logprob: -2.7876482009887695
    4. '	else' → logprob: -11.28764820098877
    5. '   ' → logprob: -11.53764820098877
    6. '           ' → logprob: -13.41264820098877
    7. '_else' → logprob: -14.28764820098877
    8. '{
' → logprob: -14.53764820098877
    9. '<|end|>' → logprob: -14.53764820098877
    10. '	' → logprob: -15.28764820098877

Token 515: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6012306809425354
    2. ':
' → logprob: -1.2262306213378906
    3. ':' → logprob: -1.8512306213378906
    4. '       ' → logprob: -7.351230621337891
    5. '{
' → logprob: -8.10123062133789
    6. '          ' → logprob: -8.60123062133789
    7. '               ' → logprob: -9.35123062133789
    8. '   ' → logprob: -9.85123062133789
    9. '<|end|>' → logprob: -10.60123062133789
    10. '[' → logprob: -11.10123062133789

Token 516: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.13388703338569e-06
    2. 'val' → logprob: -13.125009536743164
    3. '               ' → logprob: -13.500009536743164
    4. '   ' → logprob: -13.500009536743164
    5. '          ' → logprob: -13.625009536743164
    6. '       ' → logprob: -14.000009536743164
    7. '		' → logprob: -14.500009536743164
    8. '            ' → logprob: -14.875009536743164
    9. ' val' → logprob: -15.250009536743164
    10. ' ' → logprob: -15.500009536743164

Token 517: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.0003884894831571728
    2. 'int' → logprob: -8.250388145446777
    3. '           ' → logprob: -9.000388145446777
    4. ' val' → logprob: -12.500388145446777
    5. 'try' → logprob: -17.250389099121094
    6. '          ' → logprob: -17.375389099121094
    7. 'intval' → logprob: -17.625389099121094
    8. '       ' → logprob: -18.125389099121094
    9. '   ' → logprob: -18.125389099121094
    10. 'var' → logprob: -18.375389099121094

Token 518: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.054500666621607e-06
    2. ' =' → logprob: -13.87500286102295
    3. '=' → logprob: -14.37500286102295
    4. '(val' → logprob: -14.87500286102295
    5. '   ' → logprob: -15.25000286102295
    6. 'val' → logprob: -15.25000286102295
    7. ' ' → logprob: -15.37500286102295
    8. '(int' → logprob: -15.87500286102295
    9. '(or' → logprob: -16.375003814697266
    10. 'or' → logprob: -16.875003814697266

Token 519: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1802648901939392
    2. ' =' → logprob: -1.805264949798584
    3. '=int' → logprob: -7.680264949798584
    4. '           ' → logprob: -10.930264472961426
    5. '3' → logprob: -11.680264472961426
    6. '   ' → logprob: -11.805264472961426
    7. 'int' → logprob: -11.930264472961426
    8. '       ' → logprob: -12.805264472961426
    9. 'return' → logprob: -13.430264472961426
    10. '_or' → logprob: -13.430264472961426

Token 520: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.088346359931165e-07
    2. ' int' → logprob: -14.000000953674316
    3. '   ' → logprob: -20.375
    4. '(int' → logprob: -21.625
    5. '[int' → logprob: -22.625
    6. 'get' → logprob: -22.875
    7. '<int' → logprob: -23.25
    8. '  ' → logprob: -23.375
    9. '	int' → logprob: -23.75
    10. '=int' → logprob: -23.875

Token 521: '(var' (ID: 15816)
  Prédit: '(var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(var' → logprob: -2.7729658540920354e-05
    2. 'var' → logprob: -10.500027656555176
    3. '[var' → logprob: -15.750027656555176
    4. ')var' → logprob: -17.750028610229492
    5. ' var' → logprob: -18.875028610229492
    6. '(val' → logprob: -20.250028610229492
    7. ',var' → logprob: -20.500028610229492
    8. '(' → logprob: -21.125028610229492
    9. '(v' → logprob: -21.500028610229492
    10. '(variable' → logprob: -21.625028610229492

Token 522: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0008818074711598456
    2. '(var' → logprob: -7.125881671905518
    3. 'var' → logprob: -9.625882148742676
    4. '_or' → logprob: -11.875882148742676
    5. '[var' → logprob: -13.500882148742676
    6. 'or' → logprob: -13.875882148742676
    7. '(or' → logprob: -15.375882148742676
    8. '_var' → logprob: -15.500882148742676
    9. 'con' → logprob: -15.625882148742676
    10. 's' → logprob: -16.12588119506836

Token 523: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: -0.00013417120499070734
    2. 'or' → logprob: -9.375134468078613
    3. '3' → logprob: -10.000134468078613
    4. '(or' → logprob: -13.000134468078613
    5. '(var' → logprob: -14.000134468078613
    6. 'Or' → logprob: -14.625134468078613
    7. '-or' → logprob: -16.125133514404297
    8. ''or' → logprob: -16.250133514404297
    9. 'var' → logprob: -17.000133514404297
    10. ' or' → logprob: -17.125133514404297

Token 524: '_con' (ID: 7531)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.26462507247924805
    2. 'var' → logprob: -1.889625072479248
    3. '3' → logprob: -2.764625072479248
    4. 'or' → logprob: -4.514625072479248
    5. '_con' → logprob: -5.389625072479248
    6. '(var' → logprob: -6.139625072479248
    7. '_or' → logprob: -8.264625549316406
    8. 'org' → logprob: -9.139625549316406
    9. 'ar' → logprob: -10.014625549316406
    10. '[var' → logprob: -10.139625549316406

Token 525: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5875679850578308
    2. ')
' → logprob: -0.8375679850578308
    3. '       ' → logprob: -4.4625678062438965
    4. ')
' → logprob: -11.587568283081055
    5. '           ' → logprob: -11.962568283081055
    6. '   ' → logprob: -11.962568283081055
    7. ')

' → logprob: -13.212568283081055
    8. ')`
' → logprob: -13.712568283081055
    9. ')`' → logprob: -14.712568283081055
    10. ' )
' → logprob: -14.712568283081055

Token 526: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014029678422957659
    2. '<|end|>' → logprob: -7.376402854919434
    3. '        
' → logprob: -7.751402854919434
    4. ' val' → logprob: -9.251402854919434
    5. '
' → logprob: -10.001402854919434
    6. '           ' → logprob: -10.126402854919434
    7. '   ' → logprob: -10.126402854919434
    8. 'val' → logprob: -10.251402854919434
    9. '```' → logprob: -10.876402854919434
    10. '       
' → logprob: -11.501402854919434

Token 527: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -5.824579784530215e-05
    2. '       ' → logprob: -10.0000581741333
    3. ' val' → logprob: -11.5000581741333
    4. '   ' → logprob: -13.1250581741333
    5. '```' → logprob: -14.8750581741333
    6. '	val' → logprob: -15.2500581741333
    7. '_val' → logprob: -16.500059127807617
    8. '``' → logprob: -18.000059127807617
    9. '           ' → logprob: -18.000059127807617
    10. '
' → logprob: -18.125059127807617

Token 528: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868783116340637
    2. ' =' → logprob: -1.136878252029419
    3. '       ' → logprob: -12.26187801361084
    4. '   ' → logprob: -13.26187801361084
    5. '           ' → logprob: -15.51187801361084
    6. ' ' → logprob: -15.88687801361084
    7. '        ' → logprob: -16.386878967285156
    8. '    ' → logprob: -16.761878967285156
    9. 'val' → logprob: -16.761878967285156
    10. '2' → logprob: -17.261878967285156

Token 529: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0031777136027812958
    2. ' val' → logprob: -5.753177642822266
    3. '	val' → logprob: -17.003177642822266
    4. '(val' → logprob: -18.128177642822266
    5. ' ' → logprob: -18.378177642822266
    6. '   ' → logprob: -18.378177642822266
    7. '[val' → logprob: -18.503177642822266
    8. '.val' → logprob: -19.503177642822266
    9. 'Val' → logprob: -19.878177642822266
    10. '0' → logprob: -20.128177642822266

Token 530: '2' (ID: 17)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.035942837595939636
    2. '2' → logprob: -3.410942792892456
    3. ' val' → logprob: -6.910943031311035
    4. 'var' → logprob: -7.410943031311035
    5. '[val' → logprob: -8.285943031311035
    6. '_val' → logprob: -8.410943031311035
    7. '(val' → logprob: -9.410943031311035
    8. '   ' → logprob: -10.285943031311035
    9. 'vals' → logprob: -10.285943031311035
    10. 'vars' → logprob: -11.035943031311035

Token 531: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0067345574498176575
    2. '-' → logprob: -5.006734371185303
    3. '-val' → logprob: -10.881734848022461
    4. ' ' → logprob: -15.256734848022461
    5. ' ' → logprob: -16.63173484802246
    6. ' -
' → logprob: -17.25673484802246
    7. ' val' → logprob: -17.38173484802246
    8. '-
' → logprob: -18.13173484802246
    9. 'val' → logprob: -18.50673484802246
    10. '-sub' → logprob: -18.88173484802246

Token 532: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0015023599844425917
    2. ' val' → logprob: -6.501502513885498
    3. '	val' → logprob: -19.751502990722656
    4. '_val' → logprob: -20.501502990722656
    5. '   ' → logprob: -21.376502990722656
    6. '(val' → logprob: -21.751502990722656
    7. '[val' → logprob: -22.126502990722656
    8. 'var' → logprob: -22.751502990722656
    9. 'int' → logprob: -22.751502990722656
    10. ' ' → logprob: -22.876502990722656

Token 533: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.07892460376024246
    2. 'val' → logprob: -2.5789246559143066
    3. ' val' → logprob: -11.703924179077148
    4. '[val' → logprob: -11.828924179077148
    5. '_val' → logprob: -11.953924179077148
    6. '(val' → logprob: -12.203924179077148
    7. '   ' → logprob: -12.453924179077148
    8. 'var' → logprob: -13.453924179077148
    9. '```' → logprob: -14.828924179077148
    10. 'if' → logprob: -14.828924179077148

Token 534: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003032881941180676
    2. '<|end|>' → logprob: -8.250303268432617
    3. ' if' → logprob: -10.875303268432617
    4. '   ' → logprob: -11.250303268432617
    5. '
' → logprob: -12.375303268432617
    6. '        
' → logprob: -13.500303268432617
    7. '<|end|>' → logprob: -13.750303268432617
    8. 'if' → logprob: -14.125303268432617
    9. ',' → logprob: -14.125303268432617
    10. '           ' → logprob: -14.375303268432617

Token 535: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005359939532354474
    2. '<|end|>' → logprob: -8.00053596496582
    3. '   ' → logprob: -9.25053596496582
    4. ' if' → logprob: -9.62553596496582
    5. '```' → logprob: -10.62553596496582
    6. '           ' → logprob: -12.50053596496582
    7. '        
' → logprob: -12.87553596496582
    8. 'if' → logprob: -13.37553596496582
    9. ' ' → logprob: -13.75053596496582
    10. '<|end|>' → logprob: -13.75053596496582

Token 536: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48870396614074707
    2. 'if' (adapté à ' if') → logprob: -0.9887039661407471
    3. ' if' → logprob: -4.238703727722168
    4. '   ' → logprob: -9.613703727722168
    5. '```' → logprob: -11.488703727722168
    6. '           ' → logprob: -11.613703727722168
    7. ' ' → logprob: -12.113703727722168
    8. '        ' → logprob: -13.988703727722168
    9. '	if' → logprob: -14.238703727722168
    10. 'If' → logprob: -14.738703727722168

Token 537: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.02324605919420719
    2. 'val' → logprob: -3.7732460498809814
    3. '(val' → logprob: -14.523245811462402
    4. '	val' → logprob: -17.89824676513672
    5. '[val' → logprob: -18.02324676513672
    6. '0' → logprob: -18.02324676513672
    7. ' ' → logprob: -18.64824676513672
    8. '   ' → logprob: -18.89824676513672
    9. '.val' → logprob: -19.64824676513672
    10. '_val' → logprob: -19.64824676513672

Token 538: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.011049000546336174
    2. '<' → logprob: -4.511048793792725
    3. '   ' → logprob: -14.511049270629883
    4. ' ' → logprob: -15.011049270629883
    5. '[' → logprob: -15.386049270629883
    6. '<|end|>' → logprob: -16.636049270629883
    7. ' ' → logprob: -18.011049270629883
    8. ')' → logprob: -18.011049270629883
    9. '<int' → logprob: -18.136049270629883
    10. 'if' → logprob: -18.136049270629883

Token 539: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020545274019241333
    2. ' ' → logprob: -3.895545244216919
    3. '   ' → logprob: -12.89554500579834
    4. '```' → logprob: -14.14554500579834
    5. ' ' → logprob: -17.020545959472656
    6. '=' → logprob: -17.208045959472656
    7. '       ' → logprob: -17.208045959472656
    8. '[' → logprob: -17.270545959472656
    9. '  ' → logprob: -17.583045959472656
    10. '<|end|>' → logprob: -17.895545959472656

Token 540: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2113979209971149e-05
    2. ' ' → logprob: -11.375012397766113
    3. '   ' → logprob: -15.250012397766113
    4. '```' → logprob: -15.250012397766113
    5. '=' → logprob: -17.375011444091797
    6. '-' → logprob: -17.812511444091797
    7. '۰' → logprob: -18.062511444091797
    8. '``' → logprob: -18.312511444091797
    9. '00' → logprob: -18.500011444091797
    10. '
' → logprob: -18.687511444091797

Token 541: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0013294065138325095
    2. 'or' → logprob: -6.62632942199707
    3. '       ' → logprob: -13.37632942199707
    4. '	or' → logprob: -14.37632942199707
    5. '<|end|>' → logprob: -14.50132942199707
    6. ' ' → logprob: -15.62632942199707
    7. '   ' → logprob: -15.62632942199707
    8. '           ' → logprob: -16.12632942199707
    9. ' ' → logprob: -16.50132942199707
    10. '```' → logprob: -16.62632942199707

Token 542: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.2014172375202179
    2. ' val' → logprob: -1.7014172077178955
    3. '   ' → logprob: -14.326416969299316
    4. '```' → logprob: -14.326416969299316
    5. 'var' → logprob: -14.576416969299316
    6. '           ' → logprob: -14.701416969299316
    7. '	val' → logprob: -14.701416969299316
    8. '       ' → logprob: -14.951416969299316
    9. 'pc' → logprob: -15.201416969299316
    10. '(val' → logprob: -15.326416969299316

Token 543: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5772825479507446
    2. ' >=' → logprob: -0.8272825479507446
    3. 'val' → logprob: -6.952282428741455
    4. '   ' → logprob: -9.077282905578613
    5. '           ' → logprob: -9.327282905578613
    6. '>' → logprob: -9.952282905578613
    7. '       ' → logprob: -10.202282905578613
    8. ' val' → logprob: -10.452282905578613
    9. '```' → logprob: -10.702282905578613
    10. ' ' → logprob: -10.952282905578613

Token 544: ' ' (ID: 220)
  Prédit: '16'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -0.0003362966235727072
    2. ' ' → logprob: -8.000336647033691
    3. '   ' → logprob: -14.375336647033691
    4. 'int' → logprob: -17.687835693359375
    5. '1' → logprob: -17.812835693359375
    6. '
' → logprob: -17.812835693359375
    7. '  ' → logprob: -17.937835693359375
    8. '```' → logprob: -18.125335693359375
    9. '016' → logprob: -18.312835693359375
    10. '    ' → logprob: -19.000335693359375

Token 545: '16' (ID: 1125)
  Prédit: '16'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -16.875
    4. 'int' → logprob: -19.75
    5. '016' → logprob: -19.75
    6. '1' → logprob: -20.125
    7. '15' → logprob: -20.25
    8. '           ' → logprob: -20.375
    9. '0' → logprob: -20.5
    10. '```' → logprob: -20.875

Token 546: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6393159031867981
    2. ':
' → logprob: -1.3893158435821533
    3. '       ' → logprob: -1.5143158435821533
    4. '           ' → logprob: -6.139316082000732
    5. '   ' → logprob: -7.639316082000732
    6. '<|end|>' → logprob: -8.764315605163574
    7. '):
' → logprob: -8.889315605163574
    8. '```' → logprob: -9.514315605163574
    9. ' or' → logprob: -9.889315605163574
    10. '):' → logprob: -10.889315605163574

Token 547: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002628684975206852
    2. 'break' → logprob: -6.002628803253174
    3. '       ' → logprob: -9.377628326416016
    4. ' break' → logprob: -9.877628326416016
    5. '```' → logprob: -11.377628326416016
    6. '
' → logprob: -13.127628326416016
    7. '               ' → logprob: -13.377628326416016
    8. '   ' → logprob: -14.002628326416016
    9. '``' → logprob: -15.002628326416016
    10. '          ' → logprob: -15.127628326416016

Token 548: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.26874056458473206
    2. '           ' → logprob: -1.5187405347824097
    3. '       ' → logprob: -4.143740653991699
    4. '```' → logprob: -7.768740653991699
    5. ' break' → logprob: -8.0187406539917
    6. '   ' → logprob: -10.5187406539917
    7. '``' → logprob: -11.3937406539917
    8. '	break' → logprob: -11.7687406539917
    9. '               ' → logprob: -12.1437406539917
    10. '
' → logprob: -13.1437406539917

Token 549: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008885911083780229
    2. '   ' → logprob: -7.750888824462891
    3. '```' → logprob: -8.25088882446289
    4. '
' → logprob: -8.87588882446289
    5. 'vars' → logprob: -10.87588882446289
    6. '        
' → logprob: -11.00088882446289
    7. '``' → logprob: -11.87588882446289
    8. '           ' → logprob: -12.12588882446289
    9. '      ' → logprob: -13.25088882446289
    10. '<|end|>' → logprob: -13.62588882446289

Token 550: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006388116744346917
    2. '   ' → logprob: -7.875638961791992
    3. 'vars' → logprob: -9.000638961791992
    4. '```' → logprob: -9.000638961791992
    5. ' ' → logprob: -13.000638961791992
    6. '           ' → logprob: -13.125638961791992
    7. '        
' → logprob: -13.125638961791992
    8. ' vars' → logprob: -13.625638961791992
    9. '``' → logprob: -13.750638961791992
    10. '`' → logprob: -14.500638961791992

Token 551: ' vars' (ID: 36194)
  Prédit: 'vars'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vars' (adapté à ' vars') → logprob: -0.20559366047382355
    2. '       ' → logprob: -1.7055937051773071
    3. ' vars' → logprob: -6.080593585968018
    4. '   ' → logprob: -6.330593585968018
    5. 'variables' → logprob: -9.955594062805176
    6. '```' → logprob: -10.580594062805176
    7. 'var' → logprob: -11.580594062805176
    8. '(vars' → logprob: -12.455594062805176
    9. '           ' → logprob: -12.705594062805176
    10. '_vars' → logprob: -12.830594062805176

Token 552: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -3.128163257315464e-07
    2. 'values' → logprob: -15.75
    3. '_variables' → logprob: -15.875
    4. '_VALUES' → logprob: -17.25
    5. 'Values' → logprob: -18.875
    6. '[' → logprob: -19.375
    7. '[_' → logprob: -19.625
    8. '[var' → logprob: -20.0
    9. 's' → logprob: -21.5
    10. ' values' → logprob: -21.875

Token 553: '[var' (ID: 109537)
  Prédit: '[var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[var' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.625000953674316
    3. 'var' → logprob: -15.625000953674316
    4. '[val' → logprob: -18.25
    5. '```' → logprob: -19.125
    6. '[v' → logprob: -20.25
    7. '[...]' → logprob: -20.625
    8. ' [' → logprob: -20.75
    9. '[arg' → logprob: -21.0
    10. '[param' → logprob: -21.0

Token 554: '1' (ID: 16)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.1482326090335846
    2. '[var' → logprob: -2.0232326984405518
    3. '1' → logprob: -5.273232460021973
    4. ' var' → logprob: -8.898232460021973
    5. 'ar' → logprob: -9.648232460021973
    6. '[' → logprob: -9.648232460021973
    7. 'vars' → logprob: -9.773232460021973
    8. '(var' → logprob: -11.023232460021973
    9. '[arg' → logprob: -11.398232460021973
    10. '{' → logprob: -11.523232460021973

Token 555: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889848947525024
    2. ' =' → logprob: -2.5788984298706055
    3. ']' → logprob: -12.203898429870605
    4. ')' → logprob: -13.328898429870605
    5. '[' → logprob: -13.453898429870605
    6. ']=' → logprob: -14.828898429870605
    7. '<|end|>' → logprob: -15.703898429870605
    8. '=
' → logprob: -16.078899383544922
    9. ')=' → logprob: -16.828899383544922
    10. ' =
' → logprob: -17.328899383544922

Token 556: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005233763717114925
    2. ' =' → logprob: -5.2552337646484375
    3. '[' → logprob: -17.880233764648438
    4. '[val' → logprob: -19.630233764648438
    5. '=
' → logprob: -19.755233764648438
    6. '   ' → logprob: -20.505233764648438
    7. ')' → logprob: -20.755233764648438
    8. '＝' → logprob: -21.005233764648438
    9. '=

' → logprob: -21.255233764648438
    10. ']' → logprob: -22.130233764648438

Token 557: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0007099286303855479
    2. ' val' → logprob: -7.2507100105285645
    3. 'var' → logprob: -19.875709533691406
    4. '	val' → logprob: -20.000709533691406
    5. '(val' → logprob: -20.250709533691406
    6. '[val' → logprob: -20.500709533691406
    7. '_val' → logprob: -21.500709533691406
    8. '.val' → logprob: -22.375709533691406
    9. 'Val' → logprob: -22.500709533691406
    10. '   ' → logprob: -23.000709533691406

Token 558: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002563649322837591
    2. '   ' → logprob: -6.0025634765625
    3. '```' → logprob: -10.6275634765625
    4. '        
' → logprob: -10.7525634765625
    5. '<|end|>' → logprob: -12.0025634765625
    6. 'pc' → logprob: -12.1275634765625
    7. '           ' → logprob: -12.3775634765625
    8. ' ' → logprob: -12.5025634765625
    9. '
' → logprob: -12.5025634765625
    10. '     ' → logprob: -12.6275634765625

Token 559: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002879295265302062
    2. 'pc' → logprob: -6.5028791427612305
    3. '   ' → logprob: -6.6278791427612305
    4. '```' → logprob: -10.00287914276123
    5. '           ' → logprob: -13.25287914276123
    6. '      ' → logprob: -13.37787914276123
    7. ' pc' → logprob: -13.75287914276123
    8. '     ' → logprob: -14.00287914276123
    9. '	pc' → logprob: -14.62787914276123
    10. ' ' → logprob: -14.87787914276123

Token 560: ' pc' (ID: 18736)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pc' (adapté à ' pc') → logprob: -0.32452094554901123
    2. '       ' → logprob: -1.3245209455490112
    3. '   ' → logprob: -4.574521064758301
    4. ' pc' → logprob: -7.074521064758301
    5. '	pc' → logprob: -10.8245210647583
    6. ' ' → logprob: -12.1995210647583
    7. '```' → logprob: -13.1995210647583
    8. '      ' → logprob: -13.4495210647583
    9. '_pc' → logprob: -13.5745210647583
    10. '     ' → logprob: -13.5745210647583

Token 561: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03832731023430824
    2. ' +=' → logprob: -3.288327217102051
    3. '+' → logprob: -8.16332721710205
    4. ' +' → logprob: -15.16332721710205
    5. '=' → logprob: -15.53832721710205
    6. ']+=' → logprob: -15.53832721710205
    7. '```' → logprob: -15.78832721710205
    8. '+="' → logprob: -16.788328170776367
    9. '+='' → logprob: -16.913328170776367
    10. '   ' → logprob: -17.663328170776367

Token 562: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. '```' → logprob: -16.75009536743164
    4. '   ' → logprob: -16.87509536743164
    5. '
' → logprob: -18.12509536743164
    6. '+' → logprob: -20.93759536743164
    7. '１' → logprob: -20.93759536743164
    8. '`' → logprob: -21.06259536743164
    9. '       ' → logprob: -21.62509536743164
    10. '۱' → logprob: -21.75009536743164

Token 563: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '```' → logprob: -20.5
    4. '   ' → logprob: -23.625
    5. '`' → logprob: -24.0
    6. '+' → logprob: -24.0
    7. '１' → logprob: -24.5
    8. '۱' → logprob: -25.25
    9. '
' → logprob: -25.625
    10. '0' → logprob: -25.875

Token 564: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5240768790245056
    2. 'elif' → logprob: -1.0240769386291504
    3. '```' → logprob: -3.0240769386291504
    4. ' elif' → logprob: -9.024076461791992
    5. '``' → logprob: -10.774076461791992
    6. '    
' → logprob: -11.649076461791992
    7. '<|end|>' → logprob: -11.899076461791992
    8. '
' → logprob: -12.899076461791992
    9. '`' → logprob: -12.899076461791992
    10. '	elif' → logprob: -13.024076461791992

Token 565: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0008700100006535649
    2. '   ' → logprob: -7.250870227813721
    3. '```' → logprob: -8.750869750976562
    4. ' elif' → logprob: -13.375869750976562
    5. 'el' → logprob: -16.375869750976562
    6. '`' → logprob: -17.125869750976562
    7. '	elif' → logprob: -18.000869750976562
    8. '``' → logprob: -18.125869750976562
    9. '#elif' → logprob: -18.125869750976562
    10. ' ' → logprob: -18.125869750976562

Token 566: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -7.505351095460355e-05
    2. '   ' → logprob: -9.500075340270996
    3. ' elif' → logprob: -15.875075340270996
    4. '```' → logprob: -17.62507438659668
    5. 'el' → logprob: -19.37507438659668
    6. '	elif' → logprob: -20.75007438659668
    7. '#elif' → logprob: -20.75007438659668
    8. ' ' → logprob: -20.87507438659668
    9. '    
' → logprob: -21.00007438659668
    10. 'else' → logprob: -21.50007438659668

Token 567: ' instr' (ID: 10783)
  Prédit: ' instr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' instr' → logprob: -0.3454374670982361
    2. ''in' → logprob: -1.5954375267028809
    3. 'instr' → logprob: -2.470437526702881
    4. '(instr' → logprob: -6.095437526702881
    5. ' '' → logprob: -6.595437526702881
    6. ''' → logprob: -6.970437526702881
    7. '[in' → logprob: -10.095437049865723
    8. ' ' → logprob: -10.720437049865723
    9. '   ' → logprob: -10.845437049865723
    10. ''ins' → logprob: -11.470437049865723

Token 568: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.018602414056658745
    2. '==' → logprob: -4.01860237121582
    3. ' =' → logprob: -7.76860237121582
    4. '=' → logprob: -10.76860237121582
    5. '[' → logprob: -12.76860237121582
    6. '=='' → logprob: -13.76860237121582
    7. ' =='' → logprob: -13.76860237121582
    8. ' ===' → logprob: -14.01860237121582
    9. '===' → logprob: -14.01860237121582
    10. ' =="' → logprob: -14.51860237121582

Token 569: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0382581427693367
    2. ' '' → logprob: -3.2882580757141113
    3. ''S' → logprob: -8.66325855255127
    4. ''s' → logprob: -10.53825855255127
    5. '"' → logprob: -11.16325855255127
    6. ' ' → logprob: -13.53825855255127
    7. '('' → logprob: -13.78825855255127
    8. '['' → logprob: -15.03825855255127
    9. '   ' → logprob: -15.78825855255127
    10. '`' → logprob: -16.538257598876953

Token 570: 'SET' (ID: 11481)
  Prédit: 'SET'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SET' → logprob: -0.10034900158643723
    2. ''' → logprob: -2.350348949432373
    3. ''S' → logprob: -9.225349426269531
    4. ''s' → logprob: -10.975349426269531
    5. '"' → logprob: -11.350349426269531
    6. ' SET' → logprob: -12.475349426269531
    7. '	SET' → logprob: -13.225349426269531
    8. 'set' → logprob: -13.475349426269531
    9. 'PRINT' → logprob: -13.725349426269531
    10. '`' → logprob: -13.725349426269531

Token 571: '':
' (ID: 7669)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.26852068305015564
    2. ':
' → logprob: -1.893520712852478
    3. ' var' → logprob: -3.2685205936431885
    4. '   ' → logprob: -3.3935205936431885
    5. ':' → logprob: -5.268520832061768
    6. '(var' → logprob: -5.893520832061768
    7. '       ' → logprob: -6.143520832061768
    8. '):
' → logprob: -7.268520832061768
    9. '    
' → logprob: -7.268520832061768
    10. '
' → logprob: -7.893520832061768

Token 572: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44957950711250305
    2. 'var' → logprob: -1.1995794773101807
    3. '   ' → logprob: -3.4495794773101807
    4. ' var' → logprob: -3.5745794773101807
    5. 'v' → logprob: -7.57457971572876
    6. '
' → logprob: -9.199579238891602
    7. 'args' → logprob: -9.574579238891602
    8. '```' → logprob: -9.824579238891602
    9. 'vars' → logprob: -10.324579238891602
    10. 'a' → logprob: -10.449579238891602

Token 573: ' #' (ID: 1069)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.030714360997080803
    2. ' var' → logprob: -3.530714273452759
    3. '       ' → logprob: -7.405714511871338
    4. 'v' → logprob: -8.03071403503418
    5. ' v' → logprob: -11.15571403503418
    6. '   ' → logprob: -11.15571403503418
    7. 'vars' → logprob: -14.53071403503418
    8. '```' → logprob: -15.65571403503418
    9. ' ' → logprob: -15.78071403503418
    10. 'val' → logprob: -15.78071403503418

Token 574: ' SET' (ID: 17905)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.07003602385520935
    2. ' var' → logprob: -2.695035934448242
    3. 'v' → logprob: -9.695035934448242
    4. 'vars' → logprob: -12.070035934448242
    5. '       ' → logprob: -12.195035934448242
    6. ' v' → logprob: -12.195035934448242
    7. '   ' → logprob: -12.320035934448242
    8. 'val' → logprob: -12.570035934448242
    9. 'args' → logprob: -12.695035934448242
    10. 'arg' → logprob: -13.070035934448242

Token 575: ' var' (ID: 972)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.2257334291934967
    2. ' var' → logprob: -1.6007333993911743
    3. 'args' → logprob: -8.600733757019043
    4. ' args' → logprob: -9.350733757019043
    5. 'vars' → logprob: -11.475733757019043
    6. 'v' → logprob: -11.850733757019043
    7. ' arg' → logprob: -11.975733757019043
    8. 'arg' → logprob: -11.975733757019043
    9. ' vars' → logprob: -12.100733757019043
    10. '   ' → logprob: -12.100733757019043

Token 576: '1' (ID: 16)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.8562490344047546
    2. '1' → logprob: -1.6062490940093994
    3. ' =' → logprob: -1.6062490940093994
    4. ' var' → logprob: -1.8562490940093994
    5. '   ' → logprob: -5.23124885559082
    6. 'args' → logprob: -5.35624885559082
    7. ' args' → logprob: -5.85624885559082
    8. '=' → logprob: -6.48124885559082
    9. '       ' → logprob: -6.98124885559082
    10. 'v' → logprob: -8.35624885559082

Token 577: ' var' (ID: 972)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.2601630985736847
    2. ' var' → logprob: -1.6351630687713623
    3. '       ' → logprob: -3.3851630687713623
    4. ' =' → logprob: -8.885163307189941
    5. '=' → logprob: -10.135163307189941
    6. '   ' → logprob: -10.510163307189941
    7. 'v' → logprob: -10.885163307189941
    8. '
' → logprob: -11.760163307189941
    9. '(var' → logprob: -11.885163307189941
    10. ',' → logprob: -12.135163307189941

Token 578: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.43983903527259827
    2. '1' → logprob: -1.0648390054702759
    3. '0' → logprob: -4.939838886260986
    4. 'args' → logprob: -6.064838886260986
    5. 's' → logprob: -6.564838886260986
    6. '(' → logprob: -10.564839363098145
    7. ' [' → logprob: -10.814839363098145
    8. '```' → logprob: -10.814839363098145
    9. '(args' → logprob: -10.939839363098145
    10. '[
' → logprob: -10.939839363098145

Token 579: ' or' (ID: 503)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.45421671867370605
    2. '       ' → logprob: -1.329216718673706
    3. ' var' → logprob: -2.329216718673706
    4. '   ' → logprob: -6.829216957092285
    5. '
' → logprob: -7.454216957092285
    6. ' =' → logprob: -8.079216957092285
    7. '        
' → logprob: -8.829216957092285
    8. '1' → logprob: -8.954216957092285
    9. ':
' → logprob: -8.954216957092285
    10. '=' → logprob: -9.079216957092285

Token 580: ' SET' (ID: 17905)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.975503146648407
    2. 'SET' → logprob: -1.1005032062530518
    3. 'var' → logprob: -1.9755032062530518
    4. 'if' → logprob: -2.8505032062530518
    5. 'parts' → logprob: -3.8505032062530518
    6. 'instr' → logprob: -4.600502967834473
    7. 'int' → logprob: -4.850502967834473
    8. '   ' → logprob: -4.850502967834473
    9. 'val' → logprob: -5.100502967834473
    10. 'set' → logprob: -5.100502967834473

Token 581: ' var' (ID: 972)
  Prédit: ' args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' args' → logprob: -0.3873688578605652
    2. 'args' → logprob: -1.13736891746521
    3. '(args' → logprob: -8.012369155883789
    4. '1' → logprob: -10.012369155883789
    5. '[' → logprob: -10.387369155883789
    6. 'var' → logprob: -11.012369155883789
    7. '$args' → logprob: -11.012369155883789
    8. ' var' → logprob: -11.262369155883789
    9. ' [' → logprob: -11.887369155883789
    10. ' ' → logprob: -11.887369155883789

Token 582: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02639179304242134
    2. '[' → logprob: -3.6513917446136475
    3. '2' → logprob: -10.026391983032227
    4. ' ' → logprob: -11.026391983032227
    5. ' [' → logprob: -11.651391983032227
    6. '0' → logprob: -12.401391983032227
    7. '3' → logprob: -12.651391983032227
    8. '   ' → logprob: -12.651391983032227
    9. '```' → logprob: -13.151391983032227
    10. ''' → logprob: -13.401391983032227

Token 583: ' con' (ID: 406)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.095643401145935
    2. '[' → logprob: -1.095643401145935
    3. ' args' → logprob: -1.845643401145935
    4. ' var' → logprob: -3.2206435203552246
    5. 'args' → logprob: -3.7206435203552246
    6. ' if' → logprob: -3.9706435203552246
    7. '   ' → logprob: -4.220643520355225
    8. ' ' → logprob: -4.220643520355225
    9. 'var' → logprob: -4.220643520355225
    10. '       ' → logprob: -4.220643520355225

Token 584: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013974268920719624
    2. 'var' → logprob: -4.388974189758301
    3. '   ' → logprob: -7.013974189758301
    4. ' var' → logprob: -7.638974189758301
    5. ':' → logprob: -10.1389741897583
    6. '```' → logprob: -11.2639741897583
    7. ',' → logprob: -11.7639741897583
    8. '	' → logprob: -12.2639741897583
    9. ':
' → logprob: -12.3889741897583
    10. '[var' → logprob: -13.2639741897583

Token 585: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18021459877490997
    2. 'var' → logprob: -1.8052146434783936
    3. '   ' → logprob: -8.555214881896973
    4. ' var' → logprob: -8.930214881896973
    5. ':' → logprob: -9.305214881896973
    6. ':
' → logprob: -10.180214881896973
    7. '```' → logprob: -12.305214881896973
    8. '      ' → logprob: -13.430214881896973
    9. '           ' → logprob: -13.430214881896973
    10. 'v' → logprob: -13.430214881896973

Token 586: ' var' (ID: 972)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' (adapté à ' var') → logprob: -0.00033760786755010486
    2. ' var' → logprob: -8.000337600708008
    3. '       ' → logprob: -13.125337600708008
    4. 'v' → logprob: -16.750337600708008
    5. '   ' → logprob: -18.500337600708008
    6. 'arg' → logprob: -19.750337600708008
    7. 'val' → logprob: -20.125337600708008
    8. '           ' → logprob: -20.500337600708008
    9. 'vars' → logprob: -20.500337600708008
    10. 'args' → logprob: -20.625337600708008

Token 587: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012725738633889705
    2. ' =' → logprob: -9.875126838684082
    3. '=' → logprob: -10.125126838684082
    4. '_' → logprob: -11.000126838684082
    5. '[' → logprob: -11.500126838684082
    6. '_=' → logprob: -13.125126838684082
    7. 's' → logprob: -13.500126838684082
    8. '_name' → logprob: -14.125126838684082
    9. 'a' → logprob: -14.500126838684082
    10. 'name' → logprob: -14.500126838684082

Token 588: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692904472351074
    2. ' =' → logprob: -2.1269290447235107
    3. '=args' → logprob: -14.00192928314209
    4. ',' → logprob: -16.626928329467773
    5. ' ' → logprob: -17.751928329467773
    6. '   ' → logprob: -18.251928329467773
    7. '=
' → logprob: -18.876928329467773
    8. 'a' → logprob: -19.876928329467773
    9. '=}' → logprob: -19.876928329467773
    10. '＝' → logprob: -20.001928329467773

Token 589: ' args' (ID: 4966)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.0031777136027812958
    2. ' args' → logprob: -5.753177642822266
    3. '(args' → logprob: -16.878177642822266
    4. '$args' → logprob: -18.253177642822266
    5. '=args' → logprob: -18.378177642822266
    6. '	args' → logprob: -18.503177642822266
    7. '.args' → logprob: -19.003177642822266
    8. 'a' → logprob: -20.128177642822266
    9. 'arguments' → logprob: -20.253177642822266
    10. '   ' → logprob: -20.378177642822266

Token 590: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '0' → logprob: -15.125
    3. ' [' → logprob: -16.875
    4. '[
' → logprob: -17.125
    5. '```' → logprob: -17.875
    6. '1' → logprob: -18.125
    7. '=' → logprob: -18.125
    8. 'def' → logprob: -18.5
    9. '   ' → logprob: -19.125
    10. ' ' → logprob: -19.625

Token 591: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002476135268807411
    2. '[' → logprob: -6.002476215362549
    3. ' ' → logprob: -14.87747573852539
    4. '1' → logprob: -16.25247573852539
    5. '   ' → logprob: -18.75247573852539
    6. '00' → logprob: -19.00247573852539
    7. '```' → logprob: -19.37747573852539
    8. '-' → logprob: -19.75247573852539
    9. '[
' → logprob: -20.00247573852539
    10. '#' → logprob: -20.12747573852539

Token 592: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 593: '       ' (ID: 309)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.2630782127380371
    2. 'val' → logprob: -1.888078212738037
    3. '       ' → logprob: -2.638078212738037
    4. 'value' → logprob: -5.013078212738037
    5. 'arg' → logprob: -6.888078212738037
    6. 'if' → logprob: -7.888078212738037
    7. 'v' → logprob: -9.138078689575195
    8. 's' → logprob: -9.388078689575195
    9. ' var' → logprob: -9.388078689575195
    10. ' val' → logprob: -10.388078689575195

Token 594: ' src' (ID: 4537)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.20628021657466888
    2. 'var' → logprob: -1.70628023147583
    3. 'if' → logprob: -6.08128023147583
    4. 'value' → logprob: -6.58128023147583
    5. 'arg' → logprob: -7.33128023147583
    6. 's' → logprob: -8.081279754638672
    7. 'src' (adapté à ' src') → logprob: -9.831279754638672
    8. ' val' → logprob: -9.956279754638672
    9. 'v' → logprob: -10.581279754638672
    10. 'operand' → logprob: -10.831279754638672

Token 595: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02325456403195858
    2. ' =' → logprob: -3.773254632949829
    3. 's' → logprob: -11.64825439453125
    4. '<|end|>' → logprob: -16.77325439453125
    5. '=args' → logprob: -16.89825439453125
    6. '=s' → logprob: -17.02325439453125
    7. '=
' → logprob: -17.77325439453125
    8. 'if' → logprob: -18.14825439453125
    9. '_=' → logprob: -18.39825439453125
    10. '＝' → logprob: -18.52325439453125

Token 596: ' args' (ID: 4966)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.0007099286303855479
    2. ' args' → logprob: -7.2507100105285645
    3. '(args' → logprob: -18.000709533691406
    4. '$args' → logprob: -18.250709533691406
    5. '	args' → logprob: -19.500709533691406
    6. '=args' → logprob: -20.750709533691406
    7. '.args' → logprob: -21.125709533691406
    8. 'arguments' → logprob: -21.625709533691406
    9. 'argv' → logprob: -22.625709533691406
    10. 'arg' → logprob: -22.750709533691406

Token 597: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005932947155088186
    2. '1' → logprob: -5.130932807922363
    3. '   ' → logprob: -13.005932807922363
    4. '[
' → logprob: -14.380932807922363
    5. '```' → logprob: -14.630932807922363
    6. ' [' → logprob: -15.255932807922363
    7. 's' → logprob: -15.505932807922363
    8. ' ' → logprob: -16.13093376159668
    9. 'import' → logprob: -16.13093376159668
    10. '...' → logprob: -16.50593376159668

Token 598: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -13.125004768371582
    3. '   ' → logprob: -13.500004768371582
    4. '[' → logprob: -14.250004768371582
    5. '  ' → logprob: -16.812503814697266
    6. '       ' → logprob: -17.312503814697266
    7. '    ' → logprob: -17.625003814697266
    8. '```' → logprob: -17.875003814697266
    9. '     ' → logprob: -18.000003814697266
    10. '-' → logprob: -18.125003814697266

Token 599: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.13419565558433533
    2. ']' → logprob: -2.134195566177368
    3. '       ' → logprob: -5.009195804595947
    4. ')
' → logprob: -8.259195327758789
    5. ')' → logprob: -8.634195327758789
    6. '   ' → logprob: -9.759195327758789
    7. ' ]
' → logprob: -10.759195327758789
    8. ']

' → logprob: -11.134195327758789
    9. 'if' → logprob: -11.634195327758789
    10. ']
' → logprob: -12.009195327758789

Token 600: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015716375783085823
    2. 'if' → logprob: -6.7515716552734375
    3. 'val' → logprob: -8.501571655273438
    4. ' if' → logprob: -9.126571655273438
    5. '   ' → logprob: -9.626571655273438
    6. '
' → logprob: -11.376571655273438
    7. ' val' → logprob: -12.626571655273438
    8. '        
' → logprob: -12.751571655273438
    9. 'value' → logprob: -13.126571655273438
    10. '           ' → logprob: -13.876571655273438

Token 601: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.156819149851799
    2. 'val' → logprob: -2.0318191051483154
    3. '       ' → logprob: -4.9068193435668945
    4. 'vars' → logprob: -5.1568193435668945
    5. 'vals' → logprob: -7.7818193435668945
    6. ' if' → logprob: -8.531819343566895
    7. 'value' → logprob: -8.531819343566895
    8. '   ' → logprob: -10.906819343566895
    9. '```' → logprob: -11.156819343566895
    10. ' val' → logprob: -11.656819343566895

Token 602: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0008235682616941631
    2. ' is' → logprob: -7.125823497772217
    3. 'src' → logprob: -10.875823974609375
    4. '	is' → logprob: -16.500823974609375
    5. '   ' → logprob: -16.625823974609375
    6. ' ' → logprob: -16.875823974609375
    7. ' src' → logprob: -17.875823974609375
    8. 'isdigit' → logprob: -18.000823974609375
    9. '(is' → logprob: -18.500823974609375
    10. '  ' → logprob: -18.500823974609375

Token 603: '_var' (ID: 12782)
  Prédit: '_var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_var' → logprob: -0.0021923754829913378
    2. 'var' → logprob: -6.127192497253418
    3. 'src' → logprob: -12.127192497253418
    4. '_src' → logprob: -14.252192497253418
    5. '_' → logprob: -14.877192497253418
    6. '(src' → logprob: -15.002192497253418
    7. '_set' → logprob: -15.627192497253418
    8. 'Var' → logprob: -16.3771915435791
    9. ' var' → logprob: -16.5021915435791
    10. '_val' → logprob: -16.6271915435791

Token 604: '(src' (ID: 28558)
  Prédit: '(src'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(src' → logprob: -1.8074162653647363e-05
    2. 'src' → logprob: -11.000018119812012
    3. '<src' → logprob: -14.375018119812012
    4. '[src' → logprob: -15.125018119812012
    5. '(' → logprob: -15.375018119812012
    6. ' (' → logprob: -16.000017166137695
    7. '(s' → logprob: -16.125017166137695
    8. ' src' → logprob: -17.875017166137695
    9. '(source' → logprob: -17.875017166137695
    10. '	src' → logprob: -18.375017166137695

Token 605: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.002194755943492055
    2. '):' → logprob: -6.127194881439209
    3. ' ):
' → logprob: -12.62719440460205
    4. '   ' → logprob: -13.37719440460205
    5. '       ' → logprob: -13.50219440460205
    6. '):
' → logprob: -13.75219440460205
    7. '):

' → logprob: -13.87719440460205
    8. ':
' → logprob: -14.12719440460205
    9. ')' → logprob: -15.00219440460205
    10. '():
' → logprob: -15.62719440460205

Token 606: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3189636468887329
    2. '       ' → logprob: -1.318963646888733
    3. ':' → logprob: -6.193963527679443
    4. '   ' → logprob: -6.443963527679443
    5. ':
' → logprob: -6.443963527679443
    6. '               ' → logprob: -8.818964004516602
    7. '<|end|>' → logprob: -9.068964004516602
    8. '):
' → logprob: -10.568964004516602
    9. 'val' → logprob: -10.693964004516602
    10. '         ' → logprob: -10.818964004516602

Token 607: ' val' (ID: 1459)
  Prédit: 'vars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vars' → logprob: -0.6342265605926514
    2. 'val' (adapté à ' val') → logprob: -0.7592265605926514
    3. 'vals' → logprob: -6.8842267990112305
    4. '           ' → logprob: -8.50922679901123
    5. '       ' → logprob: -8.88422679901123
    6. ' val' → logprob: -9.25922679901123
    7. ' vars' → logprob: -9.63422679901123
    8. 'value' → logprob: -10.13422679901123
    9. 'var' → logprob: -10.25922679901123
    10. 'v' → logprob: -12.13422679901123

Token 608: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326186656951904
    2. ' =' → logprob: -1.313261866569519
    3. 's' → logprob: -17.063261032104492
    4. '=
' → logprob: -17.188261032104492
    5. '           ' → logprob: -18.438261032104492
    6. '   ' → logprob: -18.438261032104492
    7. ' ' → logprob: -19.063261032104492
    8. ')' → logprob: -19.188261032104492
    9. ' =
' → logprob: -19.313261032104492
    10. 'vars' → logprob: -19.313261032104492

Token 609: ' vars' (ID: 36194)
  Prédit: 'vars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vars' → logprob: -0.07889176905155182
    2. ' vars' → logprob: -2.5788917541503906
    3. 'variables' → logprob: -14.20389175415039
    4. ' variables' → logprob: -14.32889175415039
    5. '(vars' → logprob: -14.32889175415039
    6. 'vals' → logprob: -16.95389175415039
    7. '_vars' → logprob: -17.32889175415039
    8. 'var' → logprob: -17.45389175415039
    9. '```' → logprob: -18.32889175415039
    10. '0' → logprob: -18.32889175415039

Token 610: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -1.3856492842023727e-06
    2. 'values' → logprob: -13.625000953674316
    3. 'Values' → logprob: -16.500001907348633
    4. '_VALUES' → logprob: -17.000001907348633
    5. '_variables' → logprob: -18.250001907348633
    6. '	values' → logprob: -19.375001907348633
    7. '_' → logprob: -19.500001907348633
    8. ' values' → logprob: -19.625001907348633
    9. '_value' → logprob: -20.000001907348633
    10. '[' → logprob: -20.500001907348633

Token 611: '[src' (ID: 164384)
  Prédit: '[src'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[src' → logprob: -2.45848218582978e-06
    2. 'src' → logprob: -13.37500286102295
    3. '[' → logprob: -14.37500286102295
    4. '<src' → logprob: -16.000001907348633
    5. '(src' → logprob: -16.250001907348633
    6. '[source' → logprob: -17.250001907348633
    7. '	src' → logprob: -19.250001907348633
    8. ' [' → logprob: -19.500001907348633
    9. '/src' → logprob: -19.500001907348633
    10. '[var' → logprob: -19.875001907348633

Token 612: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.20228837430477142
    2. ']' → logprob: -1.7022883892059326
    3. '       ' → logprob: -7.4522881507873535
    4. 'else' → logprob: -9.077288627624512
    5. ')
' → logprob: -9.577288627624512
    6. ')' → logprob: -10.327288627624512
    7. '   ' → logprob: -10.827288627624512
    8. ']
' → logprob: -11.077288627624512
    9. ']

' → logprob: -11.702288627624512
    10. '           ' → logprob: -11.952288627624512

Token 613: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011904643615707755
    2. 'else' → logprob: -6.751190662384033
    3. ' else' → logprob: -10.876190185546875
    4. '<|end|>' → logprob: -14.501190185546875
    5. '           ' → logprob: -15.126190185546875
    6. '   ' → logprob: -16.376190185546875
    7. '```' → logprob: -16.376190185546875
    8. '	' → logprob: -16.501190185546875
    9. '	else' → logprob: -16.626190185546875
    10. ')' → logprob: -16.626190185546875

Token 614: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4979678988456726
    2. '       ' → logprob: -0.9979678988456726
    3. ' else' → logprob: -3.7479679584503174
    4. '	else' → logprob: -10.997967720031738
    5. '   ' → logprob: -11.247967720031738
    6. '           ' → logprob: -12.122967720031738
    7. '<|end|>' → logprob: -13.122967720031738
    8. '_else' → logprob: -14.122967720031738
    9. '	' → logprob: -14.372967720031738
    10. '     ' → logprob: -14.622967720031738

Token 615: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7330030798912048
    2. ':' → logprob: -1.2330031394958496
    3. '           ' → logprob: -1.4830031394958496
    4. '       ' → logprob: -7.60800313949585
    5. '   ' → logprob: -8.983002662658691
    6. '<|end|>' → logprob: -9.483002662658691
    7. '               ' → logprob: -9.608002662658691
    8. '):
' → logprob: -9.608002662658691
    9. '          ' → logprob: -9.733002662658691
    10. '=' → logprob: -9.983002662658691

Token 616: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00674142362549901
    2. 'val' → logprob: -5.256741523742676
    3. ' val' → logprob: -6.506741523742676
    4. 'int' → logprob: -12.381741523742676
    5. '          ' → logprob: -13.006741523742676
    6. '               ' → logprob: -13.631741523742676
    7. '            ' → logprob: -13.631741523742676
    8. '	val' → logprob: -13.881741523742676
    9. '   ' → logprob: -14.256741523742676
    10. '0' → logprob: -14.756741523742676

Token 617: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.00020652047533076257
    2. ' val' → logprob: -8.50020694732666
    3. '           ' → logprob: -12.75020694732666
    4. 'int' → logprob: -16.875205993652344
    5. '	val' → logprob: -17.875205993652344
    6. '_val' → logprob: -19.375205993652344
    7. 'vals' → logprob: -19.375205993652344
    8. 'var' → logprob: -19.625205993652344
    9. 'try' → logprob: -19.625205993652344
    10. 'print' → logprob: -20.000205993652344

Token 618: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014601230621338
    2. ' =' → logprob: -1.7014601230621338
    3. '=int' → logprob: -10.201459884643555
    4. ')' → logprob: -12.326459884643555
    5. '<|end|>' → logprob: -13.576459884643555
    6. '           ' → logprob: -13.826459884643555
    7. 'int' → logprob: -13.826459884643555
    8. '==' → logprob: -14.701459884643555
    9. ' ' → logprob: -14.826459884643555
    10. '(int' → logprob: -15.701459884643555

Token 619: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009114635176956654
    2. ' int' → logprob: -7.000911235809326
    3. '(int' → logprob: -22.250911712646484
    4. '[int' → logprob: -23.625911712646484
    5. '   ' → logprob: -23.875911712646484
    6. '=int' → logprob: -23.875911712646484
    7. '<int' → logprob: -24.250911712646484
    8. 'ints' → logprob: -24.500911712646484
    9. '	int' → logprob: -24.750911712646484
    10. '0' → logprob: -25.125911712646484

Token 620: '(src' (ID: 28558)
  Prédit: '(src'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(src' → logprob: -1.0206720617134124e-05
    2. 'src' → logprob: -11.50001049041748
    3. '(' → logprob: -17.500009536743164
    4. '[src' → logprob: -18.625009536743164
    5. ' src' → logprob: -19.625009536743164
    6. '<src' → logprob: -19.750009536743164
    7. '(sr' → logprob: -20.125009536743164
    8. '(s' → logprob: -21.500009536743164
    9. '(
' → logprob: -21.500009536743164
    10. ' (' → logprob: -21.500009536743164

Token 621: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2014666497707367
    2. ')
' → logprob: -1.701466679573059
    3. '       ' → logprob: -10.32646656036377
    4. ')
' → logprob: -11.57646656036377
    5. '   ' → logprob: -12.07646656036377
    6. ' )' → logprob: -12.95146656036377
    7. ' )
' → logprob: -13.45146656036377
    8. ')

' → logprob: -13.70146656036377
    9. ' ' → logprob: -15.57646656036377
    10. '           ' → logprob: -16.951467514038086

Token 622: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009529097587801516
    2. 'vars' → logprob: -7.25095272064209
    3. ' vars' → logprob: -9.25095272064209
    4. '   ' → logprob: -9.87595272064209
    5. '```' → logprob: -10.00095272064209
    6. ' if' → logprob: -10.87595272064209
    7. ' variables' → logprob: -11.75095272064209
    8. 'variables' → logprob: -12.12595272064209
    9. '<|end|>' → logprob: -12.12595272064209
    10. '           ' → logprob: -12.37595272064209

Token 623: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.09509901702404022
    2. 'vars' → logprob: -2.4700989723205566
    3. '       ' → logprob: -5.345098972320557
    4. ' if' → logprob: -6.970098972320557
    5. '   ' → logprob: -7.845098972320557
    6. ' vars' → logprob: -10.845099449157715
    7. '```' → logprob: -11.970099449157715
    8. 'variables' → logprob: -12.470099449157715
    9. 'var' → logprob: -13.345099449157715
    10. '
' → logprob: -13.595099449157715

Token 624: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.47408443689346313
    2. ' val' → logprob: -0.9740844368934631
    3. '   ' → logprob: -12.724084854125977
    4. '0' → logprob: -13.099084854125977
    5. '(val' → logprob: -13.724084854125977
    6. ' ' → logprob: -14.724084854125977
    7. ' not' → logprob: -15.099084854125977
    8. '	val' → logprob: -15.099084854125977
    9. 'not' → logprob: -15.974084854125977
    10. '  ' → logprob: -16.224084854125977

Token 625: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.17980298399925232
    2. '<' → logprob: -1.8048030138015747
    3. ' >=' → logprob: -9.929802894592285
    4. '>=' → logprob: -12.054802894592285
    5. '[' → logprob: -14.054802894592285
    6. ' ' → logprob: -14.304802894592285
    7. '   ' → logprob: -14.304802894592285
    8. ' not' → logprob: -14.679802894592285
    9. '<int' → logprob: -15.679802894592285
    10. '<|end|>' → logprob: -15.679802894592285

Token 626: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012514949776232243
    2. ' ' → logprob: -4.387515068054199
    3. '   ' → logprob: -12.2625150680542
    4. '```' → logprob: -15.7625150680542
    5. ' ' → logprob: -16.262514114379883
    6. '  ' → logprob: -16.762514114379883
    7. '    ' → logprob: -16.762514114379883
    8. '-' → logprob: -17.700014114379883
    9. '=' → logprob: -17.700014114379883
    10. '       ' → logprob: -18.012514114379883

Token 627: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015920029545668513
    2. ' ' → logprob: -8.75015926361084
    3. '   ' → logprob: -14.75015926361084
    4. '```' → logprob: -15.93765926361084
    5. '-' → logprob: -16.500158309936523
    6. '=' → logprob: -17.000158309936523
    7. ' ' → logprob: -18.000158309936523
    8. '۰' → logprob: -18.000158309936523
    9. '  ' → logprob: -18.250158309936523
    10. '    ' → logprob: -18.250158309936523

Token 628: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.00020497082732617855
    2. 'or' → logprob: -8.500205039978027
    3. '       ' → logprob: -14.750205039978027
    4. '<|end|>' → logprob: -14.875205039978027
    5. '	or' → logprob: -15.000205039978027
    6. '   ' → logprob: -15.750205039978027
    7. ' ' → logprob: -16.25020408630371
    8. '```' → logprob: -17.00020408630371
    9. '           ' → logprob: -17.50020408630371
    10. ' ' → logprob: -18.37520408630371

Token 629: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.07890146225690842
    2. ' val' → logprob: -2.578901529312134
    3. '           ' → logprob: -12.578901290893555
    4. '       ' → logprob: -13.203901290893555
    5. '16' → logprob: -13.203901290893555
    6. '   ' → logprob: -13.453901290893555
    7. 'var' → logprob: -13.578901290893555
    8. '```' → logprob: -14.203901290893555
    9. '	val' → logprob: -14.828901290893555
    10. '    ' → logprob: -15.078901290893555

Token 630: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.1270676553249359
    2. ' >=' → logprob: -2.1270675659179688
    3. '>' → logprob: -9.002067565917969
    4. ' >' → logprob: -12.377067565917969
    5. 'or' → logprob: -12.877067565917969
    6. '16' → logprob: -13.002067565917969
    7. ' or' → logprob: -13.127067565917969
    8. ' ' → logprob: -13.627067565917969
    9. '   ' → logprob: -14.002067565917969
    10. '≥' → logprob: -14.002067565917969

Token 631: ' ' (ID: 220)
  Prédit: '16'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -0.0008046258008107543
    2. ' ' → logprob: -7.125804424285889
    3. '   ' → logprob: -16.500804901123047
    4. '15' → logprob: -19.500804901123047
    5. '1' → logprob: -19.625804901123047
    6. '```' → logprob: -20.625804901123047
    7. '  ' → logprob: -20.875804901123047
    8. ' ' → logprob: -20.938304901123047
    9. '17' → logprob: -21.188304901123047
    10. '=' → logprob: -21.313304901123047

Token 632: '16' (ID: 1125)
  Prédit: '16'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -0.00012368128227535635
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.625123977661133
    4. '```' → logprob: -17.625123977661133
    5. '
' → logprob: -18.000123977661133
    6. '`' → logprob: -18.250123977661133
    7. '1' → logprob: -18.687623977661133
    8. '  ' → logprob: -19.187623977661133
    9. '=' → logprob: -19.625123977661133
    10. ''' → logprob: -19.687623977661133

Token 633: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5686153769493103
    2. ':' → logprob: -0.9436153769493103
    3. '           ' → logprob: -3.318615436553955
    4. '       ' → logprob: -4.818615436553955
    5. '   ' → logprob: -9.818614959716797
    6. ' or' → logprob: -9.818614959716797
    7. '):
' → logprob: -9.818614959716797
    8. '               ' → logprob: -11.818614959716797
    9. ',' → logprob: -12.443614959716797
    10. ':
' → logprob: -12.693614959716797

Token 634: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013320252764970064
    2. ':' → logprob: -7.251331806182861
    3. '       ' → logprob: -7.751331806182861
    4. ':
' → logprob: -8.62633228302002
    5. 'break' → logprob: -12.25133228302002
    6. '   ' → logprob: -13.25133228302002
    7. '               ' → logprob: -13.25133228302002
    8. '```' → logprob: -13.87633228302002
    9. '<|end|>' → logprob: -14.12633228302002
    10. ' or' → logprob: -14.50133228302002

Token 635: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0010123264510184526
    2. '       ' → logprob: -7.501012325286865
    3. ' break' → logprob: -7.751012325286865
    4. '           ' → logprob: -10.751012802124023
    5. '   ' → logprob: -12.501012802124023
    6. '	break' → logprob: -13.001012802124023
    7. '```' → logprob: -14.126012802124023
    8. '
' → logprob: -14.376012802124023
    9. '``' → logprob: -16.376012802124023
    10. '               ' → logprob: -17.126012802124023

Token 636: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003915614914149046
    2. 'vars' → logprob: -6.128915786743164
    3. '   ' → logprob: -6.378915786743164
    4. '
' → logprob: -11.253915786743164
    5. ' vars' → logprob: -11.753915786743164
    6. '```' → logprob: -12.628915786743164
    7. 'variables' → logprob: -12.753915786743164
    8. '           ' → logprob: -13.378915786743164
    9. '        
' → logprob: -14.003915786743164
    10. ' ' → logprob: -14.628915786743164

Token 637: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010792528046295047
    2. 'vars' → logprob: -7.251079082489014
    3. '   ' → logprob: -8.126079559326172
    4. '```' → logprob: -9.626079559326172
    5. ' vars' → logprob: -12.501079559326172
    6. '           ' → logprob: -13.751079559326172
    7. 'variables' → logprob: -14.126079559326172
    8. '``' → logprob: -14.251079559326172
    9. '
' → logprob: -14.501079559326172
    10. '(vars' → logprob: -15.876079559326172

Token 638: ' vars' (ID: 36194)
  Prédit: 'vars'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vars' (adapté à ' vars') → logprob: -7.76759916334413e-05
    2. '   ' → logprob: -9.750077247619629
    3. '       ' → logprob: -11.250077247619629
    4. ' vars' → logprob: -12.125077247619629
    5. 'variables' → logprob: -14.000077247619629
    6. 'var' → logprob: -16.625078201293945
    7. '```' → logprob: -17.375078201293945
    8. ' ' → logprob: -18.375078201293945
    9. '_vars' → logprob: -18.875078201293945
    10. '(vars' → logprob: -19.000078201293945

Token 639: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -1.9361264946837764e-07
    2. 'values' → logprob: -16.5
    3. '_variables' → logprob: -17.875
    4. '_VALUES' → logprob: -18.375
    5. 'Values' → logprob: -18.75
    6. '[_' → logprob: -19.5
    7. '1' → logprob: -20.625
    8. '[' → logprob: -20.875
    9. '_value' → logprob: -22.25
    10. '_' → logprob: -22.5

Token 640: '[var' (ID: 109537)
  Prédit: '[var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[var' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.250000953674316
    3. '[val' → logprob: -18.0
    4. 'var' → logprob: -18.125
    5. ' [' → logprob: -18.75
    6. '[v' → logprob: -19.125
    7. '```' → logprob: -20.125
    8. '[...]' → logprob: -20.875
    9. '   ' → logprob: -21.25
    10. '[param' → logprob: -21.25

Token 641: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016767330234870315
    2. '[var' → logprob: -6.626676559448242
    3. '_values' → logprob: -8.626676559448242
    4. '_variables' → logprob: -8.876676559448242
    5. '[' → logprob: -11.001676559448242
    6. 'var' → logprob: -12.126676559448242
    7. '_vars' → logprob: -12.376676559448242
    8. '```' → logprob: -13.751676559448242
    9. '[val' → logprob: -14.376676559448242
    10. 'variables' → logprob: -14.501676559448242

Token 642: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014200292527675629
    2. ' =' → logprob: -4.264200210571289
    3. ']' → logprob: -10.389200210571289
    4. '[' → logprob: -12.764200210571289
    5. ')' → logprob: -13.264200210571289
    6. ']=' → logprob: -13.639200210571289
    7. ')=' → logprob: -16.63920021057129
    8. '   ' → logprob: -16.88920021057129
    9. '=
' → logprob: -17.13920021057129
    10. '}' → logprob: -18.88920021057129

Token 643: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01814994215965271
    2. ' =' → logprob: -4.0181498527526855
    3. '   ' → logprob: -18.393150329589844
    4. '=
' → logprob: -20.893150329589844
    5. '.=' → logprob: -21.018150329589844
    6. '=

' → logprob: -21.518150329589844
    7. '＝' → logprob: -21.643150329589844
    8. ')' → logprob: -23.143150329589844
    9. ' ' → logprob: -23.518150329589844
    10. '=}' → logprob: -23.643150329589844

Token 644: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0024756586644798517
    2. ' val' → logprob: -6.002475738525391
    3. '	val' → logprob: -20.25247573852539
    4. '   ' → logprob: -21.75247573852539
    5. '(val' → logprob: -21.87747573852539
    6. '[val' → logprob: -23.12747573852539
    7. 'var' → logprob: -23.25247573852539
    8. '_val' → logprob: -23.25247573852539
    9. 'Val' → logprob: -23.50247573852539
    10. 'vals' → logprob: -23.75247573852539

Token 645: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001033999491482973
    2. '   ' → logprob: -6.876033782958984
    3. '```' → logprob: -14.501033782958984
    4. '           ' → logprob: -15.126033782958984
    5. ' ' → logprob: -16.251033782958984
    6. 'pc' → logprob: -16.376033782958984
    7. ',' → logprob: -16.626033782958984
    8. '     ' → logprob: -16.626033782958984
    9. '<|end|>' → logprob: -16.626033782958984
    10. '      ' → logprob: -17.126033782958984

Token 646: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4742316007614136
    2. '   ' → logprob: -0.9742316007614136
    3. 'pc' → logprob: -9.349231719970703
    4. '```' → logprob: -9.724231719970703
    5. ' pc' → logprob: -12.974231719970703
    6. '	pc' → logprob: -13.474231719970703
    7. '           ' → logprob: -13.724231719970703
    8. '     ' → logprob: -14.224231719970703
    9. '``' → logprob: -14.474231719970703
    10. '      ' → logprob: -15.099231719970703

Token 647: ' pc' (ID: 18736)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pc' (adapté à ' pc') → logprob: -0.6292152404785156
    2. ' pc' → logprob: -1.1292152404785156
    3. '       ' → logprob: -2.2542152404785156
    4. '   ' → logprob: -3.2542152404785156
    5. '	pc' → logprob: -9.379215240478516
    6. '(pc' → logprob: -11.129215240478516
    7. '_pc' → logprob: -11.379215240478516
    8. '.pc' → logprob: -11.379215240478516
    9. ' ' → logprob: -12.379215240478516
    10. '\n' → logprob: -13.504215240478516

Token 648: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04863971471786499
    2. ' +=' → logprob: -3.0486397743225098
    3. '+' → logprob: -9.923639297485352
    4. ']+=' → logprob: -13.548639297485352
    5. '+='' → logprob: -14.173639297485352
    6. '=' → logprob: -14.673639297485352
    7. '+="' → logprob: -14.673639297485352
    8. '```' → logprob: -15.423639297485352
    9. '<|end|>' → logprob: -16.29863929748535
    10. '++' → logprob: -17.04863929748535

Token 649: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '```' → logprob: -18.00010871887207
    4. '   ' → logprob: -21.25010871887207
    5. '
' → logprob: -21.62510871887207
    6. '１' → logprob: -22.87510871887207
    7. '`' → logprob: -23.00010871887207
    8. '+' → logprob: -23.12510871887207
    9. ' ' → logprob: -23.62510871887207
    10. '۱' → logprob: -23.87510871887207

Token 650: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '```' → logprob: -19.5
    4. '
' → logprob: -22.625
    5. '   ' → logprob: -22.875
    6. '`' → logprob: -23.625
    7. '１' → logprob: -23.75
    8. '۱' → logprob: -25.0
    9. '+' → logprob: -25.125
    10. '' → logprob: -25.875

Token 651: '

' (ID: 279)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.4943261444568634
    2. '   ' → logprob: -0.994326114654541
    3. '
' → logprob: -4.619326114654541
    4. '```' → logprob: -4.619326114654541
    5. '    
' → logprob: -8.3693265914917
    6. ' elif' → logprob: -9.4943265914917
    7. '``' → logprob: -11.9943265914917
    8. '	elif' → logprob: -12.7443265914917
    9. '
' → logprob: -13.2443265914917
    10. '<|end|>' → logprob: -13.3693265914917

Token 652: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.01105359848588705
    2. '   ' → logprob: -4.511053562164307
    3. '```' → logprob: -12.261054039001465
    4. ' elif' → logprob: -13.761054039001465
    5. '	elif' → logprob: -17.51105308532715
    6. '#elif' → logprob: -18.13605308532715
    7. 'elseif' → logprob: -18.88605308532715
    8. 'el' → logprob: -19.26105308532715
    9. '`' → logprob: -20.38605308532715
    10. 'else' → logprob: -20.51105308532715

Token 653: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -1.9361264946837764e-07
    2. ' elif' → logprob: -16.875
    3. '   ' → logprob: -17.125
    4. 'el' → logprob: -18.375
    5. '```' → logprob: -19.5
    6. '#elif' → logprob: -21.875
    7. '	elif' → logprob: -22.125
    8. 'else' → logprob: -23.625
    9. 'elseif' → logprob: -23.75
    10. '    
' → logprob: -24.25

Token 654: ' instr' (ID: 10783)
  Prédit: ' instr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' instr' → logprob: -0.474182665348053
    2. 'instr' → logprob: -0.974182665348053
    3. '(instr' → logprob: -9.224183082580566
    4. '[in' → logprob: -13.349183082580566
    5. ''' → logprob: -13.474183082580566
    6. ''in' → logprob: -13.599183082580566
    7. ' ' → logprob: -14.224183082580566
    8. '_instr' → logprob: -14.599183082580566
    9. 'intr' → logprob: -14.724183082580566
    10. '   ' → logprob: -14.974183082580566

Token 655: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06198124215006828
    2. '==' → logprob: -2.811981201171875
    3. '=='' → logprob: -11.561981201171875
    4. ' =='' → logprob: -13.311981201171875
    5. '=' → logprob: -14.436981201171875
    6. '[' → logprob: -14.686981201171875
    7. ' ' → logprob: -15.061981201171875
    8. '===' → logprob: -15.061981201171875
    9. '=="' → logprob: -15.061981201171875
    10. ' =' → logprob: -15.436981201171875

Token 656: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -4.723352049040841e-06
    2. ' '' → logprob: -12.375004768371582
    3. '"' → logprob: -15.125004768371582
    4. '('' → logprob: -16.125003814697266
    5. '`' → logprob: -17.000003814697266
    6. ''I' → logprob: -17.375003814697266
    7. '   ' → logprob: -18.000003814697266
    8. ''S' → logprob: -18.250003814697266
    9. '['' → logprob: -19.125003814697266
    10. '  ' → logprob: -19.375003814697266

Token 657: 'IF' (ID: 4648)
  Prédit: 'IF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IF' → logprob: -2.15310683415737e-05
    2. ''' → logprob: -10.750021934509277
    3. 'If' → logprob: -17.87502098083496
    4. ' IF' → logprob: -18.62502098083496
    5. '_IF' → logprob: -18.62502098083496
    6. 'IFI' → logprob: -18.62502098083496
    7. 'IFE' → logprob: -19.75002098083496
    8. '"' → logprob: -20.12502098083496
    9. 'if' → logprob: -20.25002098083496
    10. '`' → logprob: -20.87502098083496

Token 658: '':
' (ID: 7669)
  Prédit: ' args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' args' → logprob: -0.4563071131706238
    2. ''' → logprob: -1.7063071727752686
    3. '':' → logprob: -2.9563071727752686
    4. 'args' → logprob: -3.2063071727752686
    5. ' len' → logprob: -3.2063071727752686
    6. ' '' → logprob: -4.3313069343566895
    7. ' parts' → logprob: -4.9563069343566895
    8. '')' → logprob: -5.3313069343566895
    9. ' var' → logprob: -5.3313069343566895
    10. ' ' → logprob: -5.5813069343566895

Token 659: '       ' (ID: 309)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.27670231461524963
    2. '       ' → logprob: -1.7767022848129272
    3. 'cond' → logprob: -3.026702404022217
    4. '   ' → logprob: -4.401702404022217
    5. ' var' → logprob: -4.901702404022217
    6. 'condition' → logprob: -6.776702404022217
    7. 'a' → logprob: -7.401702404022217
    8. 'arg' → logprob: -7.401702404022217
    9. 'v' → logprob: -7.901702404022217
    10. '#' → logprob: -8.026701927185059

Token 660: ' #' (ID: 1069)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.027265913784503937
    2. 'cond' → logprob: -3.777266025543213
    3. '#' (adapté à ' #') → logprob: -6.277266025543213
    4. '       ' → logprob: -7.027266025543213
    5. 'arg' → logprob: -7.902266025543213
    6. 'x' → logprob: -8.277265548706055
    7. 'condition' → logprob: -8.652265548706055
    8. 'a' → logprob: -8.777265548706055
    9. 'v' → logprob: -9.152265548706055
    10. ' var' → logprob: -9.277265548706055

Token 661: ' IF' (ID: 20505)
  Prédit: 'cond'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cond' → logprob: -0.5812303423881531
    2. 'var' → logprob: -0.8312303423881531
    3. 'condition' → logprob: -5.831230163574219
    4. 'x' → logprob: -7.331230163574219
    5. 'arg' → logprob: -7.331230163574219
    6. ' cond' → logprob: -8.331230163574219
    7. ' var' → logprob: -8.581230163574219
    8. 'v' → logprob: -8.831230163574219
    9. 'conds' → logprob: -9.206230163574219
    10. 'a' → logprob: -9.456230163574219

Token 662: ' var' (ID: 972)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.4934352934360504
    2. 'args' → logprob: -1.118435263633728
    3. 'cond' → logprob: -3.4934353828430176
    4. ' args' → logprob: -4.493435382843018
    5. ' var' → logprob: -4.743435382843018
    6. 'arg' → logprob: -5.618435382843018
    7. 'condition' → logprob: -6.118435382843018
    8. ' cond' → logprob: -6.868435382843018
    9. 'conds' → logprob: -6.868435382843018
    10. 'vars' → logprob: -6.993435382843018

Token 663: ' dest' (ID: 3755)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8309576511383057
    2. ' var' → logprob: -1.5809576511383057
    3. ' args' → logprob: -2.0809576511383057
    4. 'var' → logprob: -2.0809576511383057
    5. 'args' → logprob: -3.0809576511383057
    6. '   ' → logprob: -4.705957412719727
    7. ' if' → logprob: -4.705957412719727
    8. 'if' → logprob: -5.205957412719727
    9. ' cond' → logprob: -5.205957412719727
    10. '_' → logprob: -5.205957412719727

Token 664: '
' (ID: 198)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18169035017490387
    2. ' =' → logprob: -2.3066904544830322
    3. ' var' → logprob: -3.9316904544830322
    4. 'var' → logprob: -4.181690216064453
    5. '[' → logprob: -4.806690216064453
    6. ' ' → logprob: -4.806690216064453
    7. '   ' → logprob: -5.431690216064453
    8. '_' → logprob: -5.556690216064453
    9. ' if' → logprob: -6.556690216064453
    10. 'if' → logprob: -6.931690216064453

Token 665: '       ' (ID: 309)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.8058685660362244
    2. '       ' → logprob: -0.9308685660362244
    3. ' var' → logprob: -1.9308686256408691
    4. 'cond' → logprob: -5.180868625640869
    5. '   ' → logprob: -6.305868625640869
    6. 'if' → logprob: -6.555868625640869
    7. ' =' → logprob: -6.680868625640869
    8. ' cond' → logprob: -6.680868625640869
    9. ' if' → logprob: -7.680868625640869
    10. ' condition' → logprob: -7.680868625640869

Token 666: ' var' (ID: 972)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' (adapté à ' var') → logprob: -0.07199414819478989
    2. 'cond' → logprob: -2.6969940662384033
    3. '       ' → logprob: -6.821994304656982
    4. 'condition' → logprob: -7.696994304656982
    5. ' var' → logprob: -8.571993827819824
    6. 'val' → logprob: -9.071993827819824
    7. 'conds' → logprob: -10.321993827819824
    8. 'v' → logprob: -10.571993827819824
    9. 'if' → logprob: -10.696993827819824
    10. 'a' → logprob: -10.696993827819824

Token 667: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0065994407050311565
    2. '=' → logprob: -5.131599426269531
    3. '1' → logprob: -7.631599426269531
    4. ',' → logprob: -9.631599426269531
    5. '   ' → logprob: -10.006599426269531
    6. '[' → logprob: -11.006599426269531
    7. '_' → logprob: -11.006599426269531
    8. ' var' → logprob: -11.881599426269531
    9. 'var' → logprob: -11.881599426269531
    10. '0' → logprob: -12.131599426269531

Token 668: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005237075500190258
    2. '=' → logprob: -5.255237102508545
    3. ',' → logprob: -12.880236625671387
    4. '   ' → logprob: -14.630236625671387
    5. ' ' → logprob: -16.255237579345703
    6. '=args' → logprob: -16.630237579345703
    7. ')' → logprob: -17.755237579345703
    8. ' =
' → logprob: -17.755237579345703
    9. '       ' → logprob: -18.630237579345703
    10. '    ' → logprob: -18.755237579345703

Token 669: ' args' (ID: 4966)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.00015872348740231246
    2. ' args' → logprob: -8.750158309936523
    3. 'get' → logprob: -16.750158309936523
    4. '   ' → logprob: -17.625158309936523
    5. '	args' → logprob: -18.000158309936523
    6. 'vars' → logprob: -18.250158309936523
    7. '(args' → logprob: -18.375158309936523
    8. '$args' → logprob: -18.625158309936523
    9. 'arguments' → logprob: -19.125158309936523
    10. '=args' → logprob: -19.875158309936523

Token 670: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.179569077678025e-05
    2. '0' → logprob: -10.500041961669922
    3. '1' → logprob: -11.375041961669922
    4. '=' → logprob: -13.125041961669922
    5. ' [' → logprob: -15.625041961669922
    6. 's' → logprob: -15.750041961669922
    7. '][' → logprob: -16.125041961669922
    8. '   ' → logprob: -16.125041961669922
    9. ' =' → logprob: -16.250041961669922
    10. 'def' → logprob: -16.500041961669922

Token 671: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.999452772201039e-05
    2. '[' → logprob: -10.500029563903809
    3. ' ' → logprob: -13.125029563903809
    4. '   ' → logprob: -15.750029563903809
    5. '1' → logprob: -16.625030517578125
    6. '۰' → logprob: -17.062530517578125
    7. '(' → logprob: -17.500030517578125
    8. '
' → logprob: -17.500030517578125
    9. '       ' → logprob: -17.875030517578125
    10. ')' → logprob: -18.375030517578125

Token 672: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8027745485305786
    2. ')' → logprob: -1.1777745485305786
    3. ')
' → logprob: -2.052774429321289
    4. ',' → logprob: -3.052774429321289
    5. ']' → logprob: -3.552774429321289
    6. ']
' → logprob: -3.802774429321289
    7. '<|end|>' → logprob: -4.802774429321289
    8. '   ' → logprob: -5.927774429321289
    9. 'var' → logprob: -6.177774429321289
    10. 'if' → logprob: -6.677774429321289

Token 673: '       ' (ID: 309)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.00824433658272028
    2. '       ' → logprob: -5.383244514465332
    3. 'cond' → logprob: -6.008244514465332
    4. 'var' → logprob: -7.883244514465332
    5. 'rest' → logprob: -8.633244514465332
    6. 'target' → logprob: -8.633244514465332
    7. 'label' → logprob: -8.758244514465332
    8. ' dest' → logprob: -9.508244514465332
    9. 'condition' → logprob: -9.758244514465332
    10. 'val' → logprob: -9.758244514465332

Token 674: ' dest' (ID: 3755)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dest' (adapté à ' dest') → logprob: -0.00019710339256562293
    2. 'var' → logprob: -9.250197410583496
    3. 'cond' → logprob: -10.000197410583496
    4. 'if' → logprob: -10.375197410583496
    5. 'val' → logprob: -11.625197410583496
    6. 'target' → logprob: -12.625197410583496
    7. ' dest' → logprob: -12.875197410583496
    8. 'destination' → logprob: -13.000197410583496
    9. 'label' → logprob: -13.125197410583496
    10. 'line' → logprob: -13.500197410583496

Token 675: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0024819616228342056
    2. ' =' → logprob: -6.002481937408447
    3. '=line' → logprob: -12.127482414245605
    4. '_line' → logprob: -14.877482414245605
    5. 'line' → logprob: -15.377482414245605
    6. '=int' → logprob: -16.00248146057129
    7. '=
' → logprob: -16.50248146057129
    8. '   ' → logprob: -17.87748146057129
    9. '_num' → logprob: -18.00248146057129
    10. '_' → logprob: -18.12748146057129

Token 676: ' int' (ID: 677)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.47879689931869507
    2. 'int' → logprob: -0.9787968993186951
    3. ' args' → logprob: -5.60379695892334
    4. ' int' → logprob: -6.97879695892334
    5. 'line' → logprob: -9.85379695892334
    6. 'parts' → logprob: -10.85379695892334
    7. '   ' → logprob: -11.60379695892334
    8. 'ints' → logprob: -12.47879695892334
    9. '	args' → logprob: -13.72879695892334
    10. 'get' → logprob: -13.97879695892334

Token 677: '(args' (ID: 14885)
  Prédit: '(args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(args' → logprob: -0.00019388488726690412
    2. '(parts' → logprob: -8.75019359588623
    3. 'args' → logprob: -10.25019359588623
    4. 'parts' → logprob: -17.375194549560547
    5. '=args' → logprob: -18.125194549560547
    6. '(' → logprob: -18.375194549560547
    7. ' args' → logprob: -18.500194549560547
    8. '	args' → logprob: -19.500194549560547
    9. '$args' → logprob: -19.500194549560547
    10. '(line' → logprob: -19.625194549560547

Token 678: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.134509021649137e-05
    2. '1' → logprob: -10.25006103515625
    3. '(' → logprob: -10.62506103515625
    4. 'args' → logprob: -13.50006103515625
    5. '[-' → logprob: -16.00006103515625
    6. '2' → logprob: -18.00006103515625
    7. ')' → logprob: -18.12506103515625
    8. 's' → logprob: -18.37506103515625
    9. '```' → logprob: -18.37506103515625
    10. '{' → logprob: -18.62506103515625

Token 679: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.084206375409849e-05
    2. '[' → logprob: -10.125041007995605
    3. '(' → logprob: -15.500041007995605
    4. '2' → logprob: -15.625041007995605
    5. '0' → logprob: -15.750041007995605
    6. '   ' → logprob: -16.75004005432129
    7. ' ' → logprob: -17.12504005432129
    8. '])' → logprob: -17.25004005432129
    9. ']' → logprob: -17.62504005432129
    10. '```' → logprob: -17.62504005432129

Token 680: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07894068211317062
    2. ')' → logprob: -2.5789406299591064
    3. ')
' → logprob: -10.328940391540527
    4. '   ' → logprob: -11.328940391540527
    5. ')

' → logprob: -12.578940391540527
    6. ' )
' → logprob: -14.203940391540527
    7. ')`
' → logprob: -14.453940391540527
    8. ']
' → logprob: -14.828940391540527
    9. '])
' → logprob: -14.953940391540527
    10. '       ' → logprob: -15.328940391540527

Token 681: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18469886481761932
    2. 'if' → logprob: -1.8096988201141357
    3. ' if' → logprob: -5.809699058532715
    4. '   ' → logprob: -6.434699058532715
    5. '
' → logprob: -8.434699058532715
    6. '        
' → logprob: -10.184699058532715
    7. 'val' → logprob: -10.684699058532715
    8. '```' → logprob: -10.934699058532715
    9. '<|end|>' → logprob: -12.184699058532715
    10. '	if' → logprob: -12.309699058532715

Token 682: ' val' (ID: 1459)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00015908108616713434
    2. 'val' (adapté à ' val') → logprob: -9.25015926361084
    3. '       ' → logprob: -9.75015926361084
    4. ' if' → logprob: -13.00015926361084
    5. '   ' → logprob: -13.87515926361084
    6. 'cond' → logprob: -14.37515926361084
    7. '```' → logprob: -15.37515926361084
    8. 'condition' → logprob: -16.000158309936523
    9. 'v' → logprob: -16.250158309936523
    10. 'vals' → logprob: -16.500158309936523

Token 683: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889022678136826
    2. ' =' → logprob: -2.578890323638916
    3. '   ' → logprob: -15.328889846801758
    4. 'var' → logprob: -16.453889846801758
    5. 'if' → logprob: -16.578889846801758
    6. '       ' → logprob: -17.078889846801758
    7. '           ' → logprob: -18.578889846801758
    8. '==' → logprob: -18.828889846801758
    9. '=
' → logprob: -19.078889846801758
    10. ' ' → logprob: -19.328889846801758

Token 684: ' vars' (ID: 36194)
  Prédit: 'vars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vars' → logprob: -1.2233183042553719e-05
    2. ' vars' → logprob: -11.875012397766113
    3. 'get' → logprob: -12.750012397766113
    4. '   ' → logprob: -14.125012397766113
    5. 'variables' → logprob: -14.125012397766113
    6. 'vals' → logprob: -14.250012397766113
    7. 'var' → logprob: -16.625011444091797
    8. '(vars' → logprob: -17.375011444091797
    9. '0' → logprob: -18.125011444091797
    10. '       ' → logprob: -18.375011444091797

Token 685: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -3.5716304410016164e-05
    2. 'values' → logprob: -10.250035285949707
    3. 'Values' → logprob: -15.625035285949707
    4. '_variables' → logprob: -15.750035285949707
    5. '_VALUES' → logprob: -17.500036239624023
    6. ' values' → logprob: -19.875036239624023
    7. 'var' → logprob: -20.250036239624023
    8. 'val' → logprob: -20.375036239624023
    9. '	values' → logprob: -20.625036239624023
    10. '.values' → logprob: -20.750036239624023

Token 686: '[var' (ID: 109537)
  Prédit: '[var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[var' → logprob: -1.1279553291387856e-05
    2. 'var' → logprob: -11.500011444091797
    3. '(var' → logprob: -13.875011444091797
    4. '[' → logprob: -16.750011444091797
    5. '[val' → logprob: -16.875011444091797
    6. '[v' → logprob: -17.875011444091797
    7. '.get' → logprob: -18.500011444091797
    8. ')var' → logprob: -19.250011444091797
    9. '```' → logprob: -19.750011444091797
    10. '[
' → logprob: -19.875011444091797

Token 687: '1' (ID: 16)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.0012209402630105615
    2. '[var' → logprob: -6.751220703125
    3. '(var' → logprob: -10.751220703125
    4. 'ar' → logprob: -10.876220703125
    5. '1' → logprob: -11.751220703125
    6. ' var' → logprob: -13.001220703125
    7. ')var' → logprob: -16.626220703125
    8. 'vars' → logprob: -17.126220703125
    9. '[' → logprob: -17.251220703125
    10. '_var' → logprob: -17.626220703125

Token 688: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.21298086643218994
    2. ')' → logprob: -2.2129807472229004
    3. ']
' → logprob: -3.0879807472229004
    4. '   ' → logprob: -4.0879807472229
    5. '       ' → logprob: -4.5879807472229
    6. ']' → logprob: -4.7129807472229
    7. 'if' → logprob: -7.9629807472229
    8. '
' → logprob: -8.587981224060059
    9. ' if' → logprob: -9.837981224060059
    10. ' )
' → logprob: -9.962981224060059

Token 689: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8700898289680481
    2. '   ' → logprob: -1.1200897693634033
    3. 'if' → logprob: -1.3700897693634033
    4. ' if' → logprob: -7.245090007781982
    5. '<|end|>' → logprob: -10.870089530944824
    6. 'If' → logprob: -11.995089530944824
    7. '	if' → logprob: -12.245089530944824
    8. ' ' → logprob: -12.995089530944824
    9. '```' → logprob: -13.995089530944824
    10. '  ' → logprob: -14.245089530944824

Token 690: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -2.8087270038668066e-05
    2. ' if' → logprob: -11.250027656555176
    3. 'pc' → logprob: -11.250027656555176
    4. '   ' → logprob: -13.125027656555176
    5. 'If' → logprob: -18.000028610229492
    6. '
' → logprob: -18.000028610229492
    7. '```' → logprob: -18.375028610229492
    8. '       ' → logprob: -18.625028610229492
    9. '	if' → logprob: -19.750028610229492
    10. ';if' → logprob: -21.000028610229492

Token 691: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.008615042082965374
    2. ' val' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.008615493774414
    4. '	val' → logprob: -15.633615493774414
    5. '(val' → logprob: -17.133615493774414
    6. '           ' → logprob: -18.008615493774414
    7. '    ' → logprob: -18.508615493774414
    8. '[val' → logprob: -18.508615493774414
    9. ' ' → logprob: -18.883615493774414
    10. '_val' → logprob: -19.258615493774414

Token 692: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.493679404258728
    2. '==' → logprob: -0.993679404258728
    3. ' !=' → logprob: -4.493679523468018
    4. '>' → logprob: -5.118679523468018
    5. ' ==' → logprob: -6.118679523468018
    6. '==
' → logprob: -11.24367904663086
    7. '=' → logprob: -11.74367904663086
    8. '>=' → logprob: -12.24367904663086
    9. ' >' → logprob: -12.36867904663086
    10. '<' → logprob: -12.74367904663086

Token 693: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015872348740231246
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -15.625158309936523
    4. 'var' → logprob: -17.000158309936523
    5. 'dest' → logprob: -17.250158309936523
    6. '1' → logprob: -18.000158309936523
    7. '۰' → logprob: -18.125158309936523
    8. '```' → logprob: -18.562658309936523
    9. '
' → logprob: -18.625158309936523
    10. 'zero' → logprob: -19.062658309936523

Token 694: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. 'var' → logprob: -16.000015258789062
    4. '1' → logprob: -17.750015258789062
    5. 'dest' → logprob: -18.000015258789062
    6. '   ' → logprob: -18.062515258789062
    7. '
' → logprob: -18.375015258789062
    8. '۰' → logprob: -18.500015258789062
    9. '=' → logprob: -18.562515258789062
    10. '```' → logprob: -19.312515258789062

Token 695: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03569958359003067
    2. ':' → logprob: -3.4106996059417725
    3. '           ' → logprob: -6.535699367523193
    4. ' and' → logprob: -8.035699844360352
    5. '       ' → logprob: -8.410699844360352
    6. 'and' → logprob: -10.660699844360352
    7. '   ' → logprob: -10.785699844360352
    8. '):
' → logprob: -12.535699844360352
    9. ':

' → logprob: -12.910699844360352
    10. ':
' → logprob: -13.160699844360352

Token 696: '           ' (ID: 352)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pc' → logprob: -0.02941301465034485
    2. '       ' → logprob: -4.029413223266602
    3. '           ' → logprob: -5.029413223266602
    4. 'if' → logprob: -5.779413223266602
    5. '   ' → logprob: -7.154413223266602
    6. ' pc' → logprob: -7.654413223266602
    7. '
' → logprob: -8.529413223266602
    8. '	pc' → logprob: -10.029413223266602
    9. ' if' → logprob: -10.529413223266602
    10. '```' → logprob: -11.779413223266602

Token 697: ' if' (ID: 538)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pc' → logprob: -6.229872087715194e-05
    2. 'if' (adapté à ' if') → logprob: -9.750061988830566
    3. ' pc' → logprob: -12.625061988830566
    4. '           ' → logprob: -14.875061988830566
    5. '   ' → logprob: -15.750061988830566
    6. '       ' → logprob: -16.250062942504883
    7. '	pc' → logprob: -16.875062942504883
    8. '
' → logprob: -18.750062942504883
    9. '_pc' → logprob: -18.875062942504883
    10. '```' → logprob: -18.875062942504883

Token 698: ' dest' (ID: 3755)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.0021913025993853807
    2. ' dest' → logprob: -6.127191066741943
    3. '   ' → logprob: -12.627191543579102
    4. '(dest' → logprob: -13.877191543579102
    5. '	dest' → logprob: -14.627191543579102
    6. ' ' → logprob: -15.127191543579102
    7. '           ' → logprob: -15.502191543579102
    8. '       ' → logprob: -15.627191543579102
    9. '    ' → logprob: -15.877191543579102
    10. 'pc' → logprob: -16.1271915435791

Token 699: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.46504905819892883
    2. ' in' → logprob: -1.2150490283966064
    3. 'in' → logprob: -2.8400490283966064
    4. 'not' → logprob: -4.0900492668151855
    5. '==' → logprob: -10.965048789978027
    6. ' ' → logprob: -12.215048789978027
    7. ' ==' → logprob: -12.590048789978027
    8. '	not' → logprob: -12.590048789978027
    9. ')' → logprob: -12.965048789978027
    10. '-' → logprob: -12.965048789978027

Token 700: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4760841131210327
    2. 'in' → logprob: -0.9760841131210327
    3. 'line' → logprob: -6.476084232330322
    4. ' line' → logprob: -7.851084232330322
    5. '=line' → logprob: -10.351083755493164
    6. '[line' → logprob: -11.226083755493164
    7. '_line' → logprob: -11.476083755493164
    8. '(line' → logprob: -11.851083755493164
    9. '_' → logprob: -13.101083755493164
    10. ',line' → logprob: -13.226083755493164

Token 701: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -3.547789674485102e-05
    2. ' line' → logprob: -10.250035285949707
    3. '   ' → logprob: -18.875036239624023
    4. '[line' → logprob: -19.000036239624023
    5. '#line' → logprob: -19.750036239624023
    6. ' ' → logprob: -20.125036239624023
    7. '(line' → logprob: -20.375036239624023
    8. '	line' → logprob: -20.500036239624023
    9. '=line' → logprob: -22.125036239624023
    10. '           ' → logprob: -22.500036239624023

Token 702: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -6.704273118884885e-07
    2. 'to' → logprob: -14.500000953674316
    3. '_line' → logprob: -15.625000953674316
    4. '_' → logprob: -19.5
    5. 'To' → logprob: -19.625
    6. 'line' → logprob: -19.875
    7. '_indices' → logprob: -20.625
    8. '   ' → logprob: -21.25
    9. '_index' → logprob: -21.25
    10. '```' → logprob: -21.625

Token 703: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0006348780007101595
    2. 'index' → logprob: -7.375634670257568
    3. '_' → logprob: -12.000635147094727
    4. 'line' → logprob: -13.375635147094727
    5. '_line' → logprob: -15.000635147094727
    6. 'Index' → logprob: -16.625635147094727
    7. ' _' → logprob: -16.875635147094727
    8. '_indices' → logprob: -17.000635147094727
    9. '```' → logprob: -17.500635147094727
    10. '_to' → logprob: -17.750635147094727

Token 704: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2068495750427246
    2. ':' → logprob: -1.7068495750427246
    3. ' or' → logprob: -5.581849575042725
    4. '       ' → logprob: -7.206849575042725
    5. '   ' → logprob: -7.331849575042725
    6. '           ' → logprob: -8.956850051879883
    7. '):
' → logprob: -9.956850051879883
    8. '               ' → logprob: -10.456850051879883
    9. ':
' → logprob: -11.331850051879883
    10. ':

' → logprob: -11.706850051879883

Token 705: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008645339403301477
    2. '           ' → logprob: -7.875864505767822
    3. ':
' → logprob: -8.12586498260498
    4. 'pc' → logprob: -9.37586498260498
    5. '```' → logprob: -10.62586498260498
    6. '                   ' → logprob: -11.25086498260498
    7. '{
' → logprob: -11.37586498260498
    8. '):
' → logprob: -11.37586498260498
    9. '   ' → logprob: -11.50086498260498
    10. ' pc' → logprob: -11.87586498260498

Token 706: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.10067448019981384
    2. '           ' → logprob: -2.4756743907928467
    3. ' break' → logprob: -4.600674629211426
    4. '       ' → logprob: -7.100674629211426
    5. '   ' → logprob: -8.100674629211426
    6. '               ' → logprob: -8.100674629211426
    7. '	break' → logprob: -8.975674629211426
    8. '```' → logprob: -10.225674629211426
    9. ' ' → logprob: -11.725674629211426
    10. 'print' → logprob: -11.850674629211426

Token 707: ' jump' (ID: 13843)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.00016384923947043717
    2. ' break' → logprob: -9.000164031982422
    3. '   ' → logprob: -11.500164031982422
    4. 'print' → logprob: -11.500164031982422
    5. '       ' → logprob: -11.625164031982422
    6. '#' → logprob: -12.375164031982422
    7. '           ' → logprob: -12.375164031982422
    8. '```' → logprob: -14.125164031982422
    9. '	break' → logprob: -14.375164031982422
    10. 'Break' → logprob: -14.500164031982422

Token 708: ' to' (ID: 316)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16428256034851074
    2. 'break' → logprob: -2.1642825603485107
    3. ' break' → logprob: -4.28928279876709
    4. '           ' → logprob: -4.53928279876709
    5. '                   ' → logprob: -4.66428279876709
    6. '=' → logprob: -7.16428279876709
    7. '   ' → logprob: -7.66428279876709
    8. '       ' → logprob: -8.03928279876709
    9. '
' → logprob: -8.03928279876709
    10. ' =' → logprob: -8.16428279876709

Token 709: ' non' (ID: 2893)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.027139345183968544
    2. 'pc' → logprob: -4.402139186859131
    3. ' break' → logprob: -5.527139186859131
    4. 'exit' → logprob: -5.777139186859131
    5. 'out' → logprob: -7.027139186859131
    6. 'end' → logprob: -7.027139186859131
    7. 'program' → logprob: -7.152139186859131
    8. 'line' → logprob: -7.277139186859131
    9. 'outside' → logprob: -7.277139186859131
    10. 'the' → logprob: -7.402139186859131

Token 710: '-existent' (ID: 130142)
  Prédit: 'existent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'existent' → logprob: -0.04354201629757881
    2. 'existing' → logprob: -3.54354190826416
    3. '-existent' → logprob: -5.16854190826416
    4. ' existing' → logprob: -5.54354190826416
    5. '-existing' → logprob: -5.91854190826416
    6. '_existing' → logprob: -7.29354190826416
    7. 'ex' → logprob: -8.16854190826416
    8. ' existent' → logprob: -8.16854190826416
    9. 'program' → logprob: -10.29354190826416
    10. '-ex' → logprob: -10.41854190826416

Token 711: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.10635828226804733
    2. 'pc' → logprob: -3.231358289718628
    3. 'instruction' → logprob: -3.231358289718628
    4. ' line' → logprob: -4.356358051300049
    5. 'program' → logprob: -5.231358051300049
    6. '
' → logprob: -6.606358051300049
    7. ' pc' → logprob: -7.106358051300049
    8. 'lines' → logprob: -7.981358051300049
    9. '```' → logprob: -8.481358528137207
    10. 'break' → logprob: -8.481358528137207

Token 712: ' number' (ID: 2086)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.6764489412307739
    2. '               ' → logprob: -0.8014489412307739
    3. '                   ' → logprob: -4.301448822021484
    4. '           ' → logprob: -4.426448822021484
    5. '
' → logprob: -4.926448822021484
    6. ' break' → logprob: -5.176448822021484
    7. '                
' → logprob: -6.176448822021484
    8. '            
' → logprob: -7.926448822021484
    9. '```' → logprob: -8.301448822021484
    10. '                       ' → logprob: -8.801448822021484

Token 713: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6961115002632141
    2. '               ' → logprob: -1.1961114406585693
    3. 'break' → logprob: -1.6961114406585693
    4. '                   ' → logprob: -4.696111679077148
    5. ' break' → logprob: -5.821111679077148
    6. '
' → logprob: -5.946111679077148
    7. '```' → logprob: -7.946111679077148
    8. '       ' → logprob: -8.696111679077148
    9. ':
' → logprob: -8.946111679077148
    10. '   ' → logprob: -9.071111679077148

Token 714: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3284318447113037
    2. '               ' → logprob: -1.4534318447113037
    3. ' break' → logprob: -3.8284318447113037
    4. '           ' → logprob: -4.328432083129883
    5. 'break' → logprob: -4.578432083129883
    6. '
' → logprob: -7.828432083129883
    7. '```' → logprob: -8.203432083129883
    8. '                       ' → logprob: -9.453432083129883
    9. '   ' → logprob: -9.578432083129883
    10. '  
' → logprob: -10.953432083129883

Token 715: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0002707529056351632
    2. ' break' → logprob: -8.25027084350586
    3. '           ' → logprob: -12.75027084350586
    4. '	break' → logprob: -12.87527084350586
    5. '       ' → logprob: -13.12527084350586
    6. '   ' → logprob: -14.12527084350586
    7. '
' → logprob: -14.37527084350586
    8. '```' → logprob: -15.00027084350586
    9. '               ' → logprob: -15.50027084350586
    10. 'print' → logprob: -15.50027084350586

Token 716: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5769108533859253
    2. '           ' → logprob: -0.8269108533859253
    3. '            
' → logprob: -7.576910972595215
    4. '    
' → logprob: -8.451910972595215
    5. '
' → logprob: -9.451910972595215
    6. 'else' → logprob: -9.576910972595215
    7. '        
' → logprob: -10.326910972595215
    8. '       ' → logprob: -10.701910972595215
    9. ' 
' → logprob: -11.201910972595215
    10. '\n' → logprob: -12.451910972595215

Token 717: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15944761037826538
    2. '
' → logprob: -2.53444766998291
    3. '       ' → logprob: -3.03444766998291
    4. 'pc' → logprob: -4.03444766998291
    5. '   ' → logprob: -8.15944766998291
    6. 'else' → logprob: -8.15944766998291
    7. ' pc' → logprob: -8.15944766998291
    8. '
' → logprob: -8.53444766998291
    9. '	pc' → logprob: -8.65944766998291
    10. '		' → logprob: -8.78444766998291

Token 718: ' pc' (ID: 18736)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pc' (adapté à ' pc') → logprob: -0.0004424667276907712
    2. '   ' → logprob: -7.8754425048828125
    3. '           ' → logprob: -10.500442504882812
    4. ' pc' → logprob: -10.750442504882812
    5. '	pc' → logprob: -11.625442504882812
    6. '       ' → logprob: -12.625442504882812
    7. '
' → logprob: -15.000442504882812
    8. '```' → logprob: -15.250442504882812
    9. '_pc' → logprob: -15.875442504882812
    10. '.pc' → logprob: -16.000442504882812

Token 719: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804149478673935
    2. ' =' → logprob: -3.288041591644287
    3. '＝' → logprob: -17.663042068481445
    4. '.=' → logprob: -19.038042068481445
    5. '=

' → logprob: -19.288042068481445
    6. '=}' → logprob: -19.788042068481445
    7. '=
' → logprob: -20.663042068481445
    8. '+=' → logprob: -21.038042068481445
    9. '=line' → logprob: -21.288042068481445
    10. '=end' → logprob: -21.913042068481445

Token 720: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0001234428636962548
    2. ' line' → logprob: -9.000123023986816
    3. '   ' → logprob: -22.125123977661133
    4. '[line' → logprob: -22.250123977661133
    5. '	line' → logprob: -23.000123977661133
    6. '=line' → logprob: -23.375123977661133
    7. ' ' → logprob: -24.125123977661133
    8. 'Line' → logprob: -24.125123977661133
    9. '(line' → logprob: -24.750123977661133
    10. '#line' → logprob: -24.875123977661133

Token 721: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.011088027618825436
    2. 'to' → logprob: -4.511087894439697
    3. 'To' → logprob: -10.511088371276855
    4. '=' → logprob: -12.136088371276855
    5. '   ' → logprob: -13.136088371276855
    6. 'line' → logprob: -13.636088371276855
    7. ' to' → logprob: -14.511088371276855
    8. ' =' → logprob: -14.636088371276855
    9. '_line' → logprob: -14.636088371276855
    10. '-to' → logprob: -14.636088371276855

Token 722: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.4296073913574219
    2. 'index' → logprob: -1.0546073913574219
    3. 'line' → logprob: -7.054607391357422
    4. ' index' → logprob: -11.804607391357422
    5. 'dest' → logprob: -12.429607391357422
    6. 'num' → logprob: -12.554607391357422
    7. '_to' → logprob: -12.804607391357422
    8. 'pc' → logprob: -12.804607391357422
    9. '[line' → logprob: -12.929607391357422
    10. '_number' → logprob: -13.054607391357422

Token 723: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. 'dest' → logprob: -15.375
    3. '(dest' → logprob: -16.125
    4. ' [' → logprob: -18.5
    5. '```' → logprob: -19.125
    6. '[
' → logprob: -19.625
    7. '[int' → logprob: -20.375
    8. 'Dest' → logprob: -21.125
    9. '[line' → logprob: -21.25
    10. '[(' → logprob: -21.5

Token 724: 'dest' (ID: 28338)
  Prédit: 'dest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dest' → logprob: -1.0683535037969705e-05
    2. '(dest' → logprob: -11.50001049041748
    3. ' dest' → logprob: -14.50001049041748
    4. '[' → logprob: -20.250011444091797
    5. '	dest' → logprob: -20.375011444091797
    6. 'dst' → logprob: -20.625011444091797
    7. '```' → logprob: -22.375011444091797
    8. ')' → logprob: -22.625011444091797
    9. '
' → logprob: -22.750011444091797
    10. 'def' → logprob: -22.750011444091797

Token 725: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02043093740940094
    2. ']
' → logprob: -4.145431041717529
    3. '       ' → logprob: -6.270431041717529
    4. '<|end|>' → logprob: -7.145431041717529
    5. '   ' → logprob: -7.270431041717529
    6. ')' → logprob: -7.395431041717529
    7. ' ]' → logprob: -9.145430564880371
    8. '}' → logprob: -9.770430564880371
    9. '           ' → logprob: -9.770430564880371
    10. ']+' → logprob: -9.895430564880371

Token 726: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44184067845344543
    2. 'else' → logprob: -1.316840648651123
    3. '   ' → logprob: -2.441840648651123
    4. ' else' → logprob: -6.191840648651123
    5. '```' → logprob: -10.191841125488281
    6. '<|end|>' → logprob: -10.316841125488281
    7. '	else' → logprob: -10.441841125488281
    8. '           ' → logprob: -12.066841125488281
    9. '_else' → logprob: -13.191841125488281
    10. '}else' → logprob: -13.441841125488281

Token 727: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5950760245323181
    2. '       ' → logprob: -0.8450760245323181
    3. '   ' → logprob: -4.220076084136963
    4. ' else' → logprob: -5.470076084136963
    5. '	else' → logprob: -10.095075607299805
    6. '	' → logprob: -12.970075607299805
    7. '           ' → logprob: -14.470075607299805
    8. 'elif' → logprob: -14.470075607299805
    9. '	   ' → logprob: -14.845075607299805
    10. '_else' → logprob: -15.095075607299805

Token 728: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.055259790271520615
    2. ':' → logprob: -3.3052597045898438
    3. '       ' → logprob: -4.305259704589844
    4. '           ' → logprob: -5.680259704589844
    5. '   ' → logprob: -8.930259704589844
    6. '):
' → logprob: -12.055259704589844
    7. ',' → logprob: -12.180259704589844
    8. '
' → logprob: -12.805259704589844
    9. ',
' → logprob: -13.180259704589844
    10. '```' → logprob: -13.305259704589844

Token 729: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038689903914928436
    2. '   ' → logprob: -3.2886898517608643
    3. 'pc' → logprob: -7.538690090179443
    4. ' pc' → logprob: -9.788689613342285
    5. '           ' → logprob: -10.163689613342285
    6. ' ' → logprob: -11.163689613342285
    7. '	pc' → logprob: -12.538689613342285
    8. '
' → logprob: -13.913689613342285
    9. '	   ' → logprob: -14.163689613342285
    10. '     ' → logprob: -14.413689613342285

Token 730: ' pc' (ID: 18736)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pc' (adapté à ' pc') → logprob: -0.010350790806114674
    2. '   ' → logprob: -5.010350704193115
    3. ' pc' → logprob: -6.010350704193115
    4. '       ' → logprob: -6.760350704193115
    5. '	pc' → logprob: -11.510351181030273
    6. '           ' → logprob: -12.635351181030273
    7. ' ' → logprob: -13.260351181030273
    8. '_pc' → logprob: -14.260351181030273
    9. '.pc' → logprob: -15.510351181030273
    10. '  ' → logprob: -15.635351181030273

Token 731: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0011703446507453918
    2. ' +=' → logprob: -6.7511701583862305
    3. '=' → logprob: -16.001171112060547
    4. ']+=' → logprob: -19.126171112060547
    5. '+' → logprob: -19.376171112060547
    6. '   ' → logprob: -21.001171112060547
    7. '+='' → logprob: -22.251171112060547
    8. '+="' → logprob: -22.501171112060547
    9. '-=' → logprob: -22.626171112060547
    10. '```' → logprob: -23.251171112060547

Token 732: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.000001907348633
    4. '```' → logprob: -19.000001907348633
    5. '
' → logprob: -21.250001907348633
    6. '       ' → logprob: -22.875001907348633
    7. '<|end|>' → logprob: -23.000001907348633
    8. '１' → logprob: -23.000001907348633
    9. '           ' → logprob: -23.312501907348633
    10. '=' → logprob: -23.312501907348633

Token 733: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '```' → logprob: -21.0
    4. '   ' → logprob: -21.75
    5. '
' → logprob: -22.25
    6. '１' → logprob: -23.25
    7. '0' → logprob: -23.5
    8. '۱' → logprob: -24.125
    9. '১' → logprob: -24.375
    10. '१' → logprob: -24.625

Token 734: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1785743683576584
    2. '<|end|>' → logprob: -2.428574323654175
    3. 'else' → logprob: -2.678574323654175
    4. 'elif' → logprob: -5.178574562072754
    5. ')' → logprob: -8.053574562072754
    6. '```' → logprob: -8.553574562072754
    7. '...' → logprob: -8.803574562072754
    8. 'continue' → logprob: -9.178574562072754
    9. ' else' → logprob: -9.553574562072754
    10. '<|end|>' → logprob: -9.928574562072754

Token 735: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3771372437477112
    2. 'elif' → logprob: -1.2521371841430664
    3. 'print' → logprob: -3.6271371841430664
    4. '   ' → logprob: -6.502137184143066
    5. '<|end|>' → logprob: -9.627137184143066
    6. ' else' → logprob: -10.627137184143066
    7. 'continue' → logprob: -10.627137184143066
    8. '.' → logprob: -10.752137184143066
    9. 'for' → logprob: -11.377137184143066
    10. '```' → logprob: -11.752137184143066

Token 736: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.5245566368103027
    2. 'else' → logprob: -0.8995566368103027
    3. 'print' → logprob: -6.899556636810303
    4. 'for' → logprob: -8.149557113647461
    5. '#' → logprob: -10.149557113647461
    6. '   ' → logprob: -10.524557113647461
    7. 'if' → logprob: -10.524557113647461
    8. ' else' → logprob: -11.399557113647461
    9. ' elif' → logprob: -11.649557113647461
    10. '```' → logprob: -11.649557113647461

Token 737: ' instr' (ID: 10783)
  Prédit: 'instr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'instr' → logprob: -0.06221830099821091
    2. ' instr' → logprob: -2.812218189239502
    3. ''in' → logprob: -8.56221866607666
    4. '(instr' → logprob: -9.81221866607666
    5. '[in' → logprob: -13.56221866607666
    6. 'inp' → logprob: -13.81221866607666
    7. 'intr' → logprob: -14.06221866607666
    8. ''' → logprob: -14.18721866607666
    9. 'in' → logprob: -15.18721866607666
    10. ' ' → logprob: -15.93721866607666

Token 738: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20144686102867126
    2. '==' → logprob: -1.7014468908309937
    3. '=='' → logprob: -10.576446533203125
    4. '[' → logprob: -12.951446533203125
    5. '===' → logprob: -13.326446533203125
    6. ' =='' → logprob: -13.576446533203125
    7. '=' → logprob: -13.951446533203125
    8. '=="' → logprob: -14.326446533203125
    9. '==
' → logprob: -14.576446533203125
    10. ' =' → logprob: -15.326446533203125

Token 739: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0015768787125125527
    2. ''D' → logprob: -6.876576900482178
    3. '"' → logprob: -7.876576900482178
    4. ' '' → logprob: -9.87657642364502
    5. ''S' → logprob: -9.87657642364502
    6. ''H' → logprob: -10.62657642364502
    7. ''N' → logprob: -11.00157642364502
    8. '   ' → logprob: -12.25157642364502
    9. '"G' → logprob: -12.37657642364502
    10. '('' → logprob: -13.12657642364502

Token 740: 'HAL' (ID: 61281)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.046850524842739105
    2. 'PRINT' → logprob: -3.5468504428863525
    3. 'G' → logprob: -4.921850681304932
    4. '"' → logprob: -5.671850681304932
    5. 'END' → logprob: -5.796850681304932
    6. 'SET' → logprob: -7.796850681304932
    7. 'EXIT' → logprob: -7.796850681304932
    8. '"G' → logprob: -7.796850681304932
    9. 'NOP' → logprob: -7.796850681304932
    10. ''S' → logprob: -8.421850204467773

Token 741: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: 0.0
    2. 'Т' → logprob: -17.75
    3. '
' → logprob: -19.375
    4. '```' → logprob: -19.625
    5. 'Ｔ' → logprob: -20.125
    6. ''T' → logprob: -20.375
    7. ' T' → logprob: -20.5
    8. '``' → logprob: -20.5
    9. '[T' → logprob: -20.625
    10. '\
' → logprob: -20.75

Token 742: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036159895826131105
    2. ':
' → logprob: -5.628615856170654
    3. '   ' → logprob: -11.628616333007812
    4. '):' → logprob: -12.378616333007812
    5. ' :' → logprob: -14.253616333007812
    6. '():' → logprob: -14.503616333007812
    7. ':

' → logprob: -14.878616333007812
    8. '.' → logprob: -15.003616333007812
    9. '):
' → logprob: -15.128616333007812
    10. ':
' → logprob: -15.503616333007812

Token 743: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.395311564207077
    2. '       ' → logprob: -1.1453115940093994
    3. 'break' → logprob: -4.89531135559082
    4. ' break' → logprob: -7.52031135559082
    5. 'print' → logprob: -8.27031135559082
    6. '    
' → logprob: -9.89531135559082
    7. '
' → logprob: -10.27031135559082
    8. '        
' → logprob: -11.39531135559082
    9. '	break' → logprob: -11.52031135559082
    10. '    ' → logprob: -12.39531135559082

Token 744: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0033668738324195147
    2. '       ' → logprob: -6.003366947174072
    3. '   ' → logprob: -7.253366947174072
    4. ' break' → logprob: -8.753366470336914
    5. 'print' → logprob: -10.753366470336914
    6. '	break' → logprob: -12.503366470336914
    7. 'exit' → logprob: -18.128366470336914
    8. '_break' → logprob: -18.253366470336914
    9. '```' → logprob: -18.628366470336914
    10. '
' → logprob: -18.753366470336914

Token 745: ' Stop' (ID: 22535)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.004233562387526035
    2. 'print' → logprob: -5.504233360290527
    3. ' break' → logprob: -9.129233360290527
    4. 'exit' → logprob: -10.004233360290527
    5. '   ' → logprob: -13.629233360290527
    6. '	break' → logprob: -16.129234313964844
    7. '    
' → logprob: -17.129234313964844
    8. '
' → logprob: -17.379234313964844
    9. '       ' → logprob: -17.379234313964844
    10. ' print' → logprob: -17.504234313964844

Token 746: ' program' (ID: 2193)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5369256138801575
    2. '       ' → logprob: -0.9119256138801575
    3. '
' → logprob: -5.411925792694092
    4. '    
' → logprob: -6.161925792694092
    5. '<|end|>' → logprob: -6.161925792694092
    6. 'break' → logprob: -6.411925792694092
    7. '    ' → logprob: -6.911925792694092
    8. '\n' → logprob: -7.536925792694092
    9. ' break' → logprob: -7.786925792694092
    10. '           ' → logprob: -8.161925315856934

Token 747: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007287623360753059
    2. '   ' → logprob: -5.007287502288818
    3. 'break' → logprob: -8.132287979125977
    4. '
' → logprob: -8.382287979125977
    5. '           ' → logprob: -10.882287979125977
    6. '        
' → logprob: -11.382287979125977
    7. '    
' → logprob: -12.007287979125977
    8. ' break' → logprob: -12.007287979125977
    9. '<|end|>' → logprob: -13.882287979125977
    10. '     ' → logprob: -14.007287979125977

Token 748: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016283506527543068
    2. '   ' → logprob: -4.7662835121154785
    3. 'break' → logprob: -4.8912835121154785
    4. ' break' → logprob: -9.14128303527832
    5. '           ' → logprob: -11.64128303527832
    6. '        
' → logprob: -12.64128303527832
    7. '```' → logprob: -12.89128303527832
    8. '
' → logprob: -13.14128303527832
    9. '	break' → logprob: -13.39128303527832
    10. '    
' → logprob: -13.89128303527832

Token 749: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0002997120900545269
    2. ' break' → logprob: -8.750299453735352
    3. '   ' → logprob: -9.750299453735352
    4. '       ' → logprob: -9.875299453735352
    5. 'print' → logprob: -10.375299453735352
    6. '	break' → logprob: -15.250299453735352
    7. '```' → logprob: -16.62529945373535
    8. '           ' → logprob: -18.12529945373535
    9. 'BREAK' → logprob: -18.12529945373535
    10. 'Break' → logprob: -18.37529945373535

Token 750: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009345541708171368
    2. '#' → logprob: -5.509345531463623
    3. '
' → logprob: -5.884345531463623
    4. 'for' → logprob: -6.509345531463623
    5. '

' → logprob: -8.134346008300781
    6. 'else' → logprob: -8.259346008300781
    7. 'if' → logprob: -9.509346008300781
    8. '```' → logprob: -9.634346008300781
    9. 'pc' → logprob: -10.009346008300781
    10. '   ' → logprob: -10.259346008300781

Token 751: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0390121228992939
    2. 'for' → logprob: -3.4140121936798096
    3. '#' → logprob: -6.1640119552612305
    4. 'else' → logprob: -6.2890119552612305
    5. 'if' → logprob: -8.03901195526123
    6. 'pc' → logprob: -8.28901195526123
    7. '
' → logprob: -8.91401195526123
    8. '   ' → logprob: -9.03901195526123
    9. 'output' → logprob: -9.16401195526123
    10. ' for' → logprob: -9.53901195526123

Token 752: ' else' (ID: 1203)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5104833245277405
    2. 'else' (adapté à ' else') → logprob: -1.1354832649230957
    3. 'elif' → logprob: -3.0104832649230957
    4. 'pc' → logprob: -4.010483264923096
    5. '#' → logprob: -4.760483264923096
    6. 'if' → logprob: -7.510483264923096
    7. 'for' → logprob: -7.510483264923096
    8. ' else' → logprob: -7.635483264923096
    9. '   ' → logprob: -8.135483741760254
    10. '
' → logprob: -8.510483741760254

Token 753: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004652273200917989
    2. ':
' → logprob: -7.875465393066406
    3. '       ' → logprob: -10.000465393066406
    4. ' :' → logprob: -10.875465393066406
    5. '   ' → logprob: -11.125465393066406
    6. '[' → logprob: -13.750465393066406
    7. '    ' → logprob: -13.750465393066406
    8. '():' → logprob: -13.750465393066406
    9. '{' → logprob: -14.875465393066406
    10. '<|end|>' → logprob: -15.000465393066406

Token 754: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12292961031198502
    2. 'pc' → logprob: -2.372929573059082
    3. '       ' → logprob: -3.997929573059082
    4. ' pc' → logprob: -5.497929573059082
    5. '	pc' → logprob: -12.122929573059082
    6. 'raise' → logprob: -12.872929573059082
    7. '   ' → logprob: -12.872929573059082
    8. '#' → logprob: -12.997929573059082
    9. '```' → logprob: -13.497929573059082
    10. 'pass' → logprob: -13.872929573059082

Token 755: ' #' (ID: 1069)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pc' → logprob: -5.0020742492051795e-05
    2. 'break' → logprob: -10.500049591064453
    3. '   ' → logprob: -11.250049591064453
    4. ' pc' → logprob: -12.375049591064453
    5. '#' (adapté à ' #') → logprob: -12.500049591064453
    6. 'pass' → logprob: -14.125049591064453
    7. 'print' → logprob: -14.625049591064453
    8. 'raise' → logprob: -15.500049591064453
    9. 'assert' → logprob: -17.250049591064453
    10. '	pc' → logprob: -17.250049591064453

Token 756: ' Unknown' (ID: 41855)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pc' → logprob: -0.01847650110721588
    2. '#' → logprob: -4.018476486206055
    3. '   ' → logprob: -8.768476486206055
    4. 'break' → logprob: -9.393476486206055
    5. ' pc' → logprob: -9.893476486206055
    6. 'pass' → logprob: -10.893476486206055
    7. 'raise' → logprob: -11.643476486206055
    8. 'print' → logprob: -11.768476486206055
    9. ' #' → logprob: -13.893476486206055
    10. 'pcs' → logprob: -14.768476486206055

Token 757: ' instruction' (ID: 21179)
  Prédit: 'instr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'instr' → logprob: -1.3003616333007812
    2. '_' → logprob: -1.9253616333007812
    3. '_instruction' → logprob: -2.0503616333007812
    4. '_instr' → logprob: -2.1753616333007812
    5. '   ' → logprob: -2.4253616333007812
    6. 'instruction' → logprob: -2.8003616333007812
    7. ' ' → logprob: -3.0503616333007812
    8. ')' → logprob: -3.4253616333007812
    9. '<|end|>' → logprob: -3.5503616333007812
    10. '_token' → logprob: -3.6753616333007812

Token 758: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23652054369449615
    2. '   ' → logprob: -2.111520528793335
    3. ':' → logprob: -2.486520528793335
    4. ':
' → logprob: -5.111520767211914
    5. 'break' → logprob: -9.361520767211914
    6. '        
' → logprob: -10.236520767211914
    7. '.' → logprob: -10.361520767211914
    8. '           ' → logprob: -10.486520767211914
    9. '     ' → logprob: -10.611520767211914
    10. '    ' → logprob: -10.736520767211914

Token 759: ' just' (ID: 1327)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.017932647839188576
    2. ' break' → logprob: -4.267932415008545
    3. '   ' → logprob: -5.642932415008545
    4. '       ' → logprob: -9.017932891845703
    5. 'pc' → logprob: -9.517932891845703
    6. '#' → logprob: -11.142932891845703
    7. 'print' → logprob: -12.517932891845703
    8. ' pc' → logprob: -12.767932891845703
    9. '	break' → logprob: -13.642932891845703
    10. 'raise' → logprob: -14.017932891845703

Token 760: ' stop' (ID: 5666)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pc' → logprob: -0.7135516405105591
    2. 'break' → logprob: -0.7135516405105591
    3. '   ' → logprob: -3.9635515213012695
    4. ' pc' → logprob: -7.3385515213012695
    5. ' break' → logprob: -7.5885515213012695
    6. 'pass' → logprob: -10.83855152130127
    7. '       ' → logprob: -10.96355152130127
    8. 'print' → logprob: -13.08855152130127
    9. '	pc' → logprob: -13.33855152130127
    10. '    ' → logprob: -13.58855152130127

Token 761: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012990460963919759
    2. 'break' → logprob: -6.876298904418945
    3. '   ' → logprob: -8.251298904418945
    4. ' break' → logprob: -12.376298904418945
    5. '```' → logprob: -14.251298904418945
    6. '	break' → logprob: -14.876298904418945
    7. '           ' → logprob: -15.626298904418945
    8. '      ' → logprob: -18.376298904418945
    9. '     ' → logprob: -18.751298904418945
    10. '	' → logprob: -18.751298904418945

Token 762: '       ' (ID: 309)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.34982216358184814
    2. '       ' → logprob: -1.3498221635818481
    3. '   ' → logprob: -3.3498220443725586
    4. ' break' → logprob: -7.224822044372559
    5. '	break' → logprob: -9.474822044372559
    6. '```' → logprob: -12.849822044372559
    7. '           ' → logprob: -14.474822044372559
    8. '_break' → logprob: -15.349822044372559
    9. 'br' → logprob: -15.474822044372559
    10. '    ' → logprob: -15.849822044372559

Token 763: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -4.320199877838604e-07
    2. ' break' → logprob: -15.0
    3. '   ' → logprob: -18.75
    4. '	break' → logprob: -19.0
    5. '```' → logprob: -23.0
    6. 'br' → logprob: -23.25
    7. 'BREAK' → logprob: -24.0
    8. '       ' → logprob: -24.125
    9. 'pc' → logprob: -24.125
    10. 'breaking' → logprob: -24.125

Token 764: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1310245841741562
    2. 'for' → logprob: -2.1310245990753174
    3. '#' → logprob: -6.256024360656738
    4. '
' → logprob: -7.506024360656738
    5. 'if' → logprob: -7.881024360656738
    6. ' for' → logprob: -8.131024360656738
    7. 'variables' → logprob: -8.256024360656738
    8. '```' → logprob: -9.381024360656738
    9. 'output' → logprob: -9.631024360656738
    10. 'values' → logprob: -9.756024360656738

Token 765: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13571523129940033
    2. 'for' → logprob: -2.1357152462005615
    3. 'pass' → logprob: -5.510715007781982
    4. '#' → logprob: -6.260715007781982
    5. ' for' → logprob: -7.510715007781982
    6. '```' → logprob: -7.885715007781982
    7. 'variables' → logprob: -8.01071548461914
    8. 'values' → logprob: -8.26071548461914
    9. '<|end|>' → logprob: -8.51071548461914
    10. ')' → logprob: -9.01071548461914

Token 766: ' If' (ID: 1843)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47485384345054626
    2. 'for' → logprob: -0.9748538732528687
    3. 'output' → logprob: -7.974853992462158
    4. 'if' → logprob: -8.849853515625
    5. 'out' → logprob: -9.724853515625
    6. 'vals' → logprob: -9.724853515625
    7. 'result' → logprob: -9.849853515625
    8. 'values' → logprob: -9.974853515625
    9. ' for' → logprob: -10.224853515625
    10. 'res' → logprob: -11.349853515625

Token 767: ' finished' (ID: 11684)
  Prédit: 'variables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'variables' → logprob: -0.2569163739681244
    2. 'len' → logprob: -2.2569162845611572
    3. 'print' → logprob: -3.0069162845611572
    4. ' variables' → logprob: -3.5069162845611572
    5. 'vars' → logprob: -4.381916522979736
    6. ' len' → logprob: -4.631916522979736
    7. ''' → logprob: -5.006916522979736
    8. 'for' → logprob: -5.631916522979736
    9. 'all' → logprob: -5.881916522979736
    10. 'if' → logprob: -7.006916522979736

Token 768: ' loop' (ID: 11453)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.17351041734218597
    2. 'for' → logprob: -2.1735103130340576
    3. 'if' → logprob: -3.9235103130340576
    4. '   ' → logprob: -4.548510551452637
    5. 'else' → logprob: -4.923510551452637
    6. ':' → logprob: -5.673510551452637
    7. ' for' → logprob: -6.548510551452637
    8. ',' → logprob: -7.298510551452637
    9. '#' → logprob: -7.798510551452637
    10. '=' → logprob: -8.048510551452637

Token 769: ' without' (ID: 2935)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6675460338592529
    2. 'else' → logprob: -1.542546033859253
    3. 'for' → logprob: -2.042546033859253
    4. ':' → logprob: -2.667546033859253
    5. ':
' → logprob: -3.792546033859253
    6. '   ' → logprob: -3.792546033859253
    7. ' for' → logprob: -4.167546272277832
    8. 'if' → logprob: -5.667546272277832
    9. ',' → logprob: -5.917546272277832
    10. ' and' → logprob: -6.042546272277832

Token 770: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.4893566966056824
    2. 'print' → logprob: -1.7393567562103271
    3. 'breaking' → logprob: -2.614356756210327
    4. 'exit' → logprob: -2.614356756210327
    5. 'printing' → logprob: -3.239356756210327
    6. 'ex' → logprob: -5.239356517791748
    7. ' printing' → logprob: -5.364356517791748
    8. 'in' → logprob: -5.614356517791748
    9. ' breaking' → logprob: -6.239356517791748
    10. 'any' → logprob: -6.364356517791748

Token 771: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05706791952252388
    2. 'for' → logprob: -3.30706787109375
    3. ':' → logprob: -5.55706787109375
    4. '   ' → logprob: -5.55706787109375
    5. ':
' → logprob: -5.68206787109375
    6. ',' → logprob: -5.93206787109375
    7. 'else' → logprob: -6.18206787109375
    8. ' for' → logprob: -6.43206787109375
    9. 'if' → logprob: -7.43206787109375
    10. ' print' → logprob: -7.55706787109375

Token 772: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10082860291004181
    2. 'for' → logprob: -2.3508286476135254
    3. 'output' → logprob: -8.725828170776367
    4. '   ' → logprob: -9.100828170776367
    5. 'values' → logprob: -9.475828170776367
    6. 'vals' → logprob: -9.600828170776367
    7. 'if' → logprob: -9.975828170776367
    8. '#' → logprob: -10.100828170776367
    9. ' print' → logprob: -10.100828170776367
    10. ' for' → logprob: -10.475828170776367

Token 773: ' vars' (ID: 36194)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5618137121200562
    2. 'vars' → logprob: -1.3118137121200562
    3. ''' → logprob: -2.8118138313293457
    4. '0' → logprob: -3.3118138313293457
    5. 'sum' → logprob: -4.061813831329346
    6. '''.' → logprob: -4.561813831329346
    7. 'final' → logprob: -4.936813831329346
    8. 'print' → logprob: -5.061813831329346
    9. 'values' → logprob: -5.436813831329346
    10. 'vals' → logprob: -5.936813831329346

Token 774: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18035288155078888
    2. 'for' → logprob: -1.8053529262542725
    3. 'if' → logprob: -8.555353164672852
    4. ' for' → logprob: -9.305353164672852
    5. ' print' → logprob: -9.680353164672852
    6. '   ' → logprob: -9.930353164672852
    7. 'else' → logprob: -9.930353164672852
    8. '('' → logprob: -9.930353164672852
    9. 'values' → logprob: -10.430353164672852
    10. '```' → logprob: -10.930353164672852

Token 775: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10021582990884781
    2. 'for' → logprob: -2.3502159118652344
    3. 'result' → logprob: -13.225215911865234
    4. 'output' → logprob: -13.225215911865234
    5. 'vals' → logprob: -13.350215911865234
    6. 'values' → logprob: -13.475215911865234
    7. 'if' → logprob: -13.975215911865234
    8. '   ' → logprob: -14.475215911865234
    9. ' print' → logprob: -14.725215911865234
    10. 'res' → logprob: -14.850215911865234

Token 776: ' but' (ID: 889)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06200063228607178
    2. 'for' → logprob: -2.8120007514953613
    3. 'if' → logprob: -10.812000274658203
    4. 'output' → logprob: -12.687000274658203
    5. 'values' → logprob: -13.062000274658203
    6. 'res' → logprob: -13.437000274658203
    7. 'result' → logprob: -13.437000274658203
    8. 'vals' → logprob: -13.562000274658203
    9. '   ' → logprob: -13.687000274658203
    10. ' print' → logprob: -13.812000274658203

Token 777: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5941461324691772
    2. 'for' → logprob: -0.8441461324691772
    3. 'if' → logprob: -4.469146251678467
    4. ' for' → logprob: -5.094146251678467
    5. ' print' → logprob: -7.969146251678467
    6. ' if' → logprob: -10.219145774841309
    7. 'vars' → logprob: -10.844145774841309
    8. '   ' → logprob: -10.969145774841309
    9. 'values' → logprob: -11.469145774841309
    10. 'else' → logprob: -11.594145774841309

Token 778: ' loop' (ID: 11453)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pc' → logprob: -0.5879195928573608
    2. 'len' → logprob: -1.7129195928573608
    3. 'instr' → logprob: -2.2129197120666504
    4. 'any' → logprob: -2.9629197120666504
    5. '"' → logprob: -3.3379197120666504
    6. ''' → logprob: -3.5879197120666504
    7. ''in' → logprob: -4.71291971206665
    8. 'all' → logprob: -5.08791971206665
    9. 'False' → logprob: -5.33791971206665
    10. 'break' → logprob: -5.71291971206665

Token 779: ' interrupted' (ID: 75107)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.02279137447476387
    2. '   ' → logprob: -5.272791385650635
    3. '==' → logprob: -5.397791385650635
    4. 'not' → logprob: -6.147791385650635
    5. 'completed' → logprob: -6.147791385650635
    6. 'was' → logprob: -6.272791385650635
    7. ' else' → logprob: -7.147791385650635
    8. 'ended' → logprob: -7.147791385650635
    9. 'ed' → logprob: -7.647791385650635
    10. 'print' → logprob: -7.772791385650635

Token 780: ' by' (ID: 656)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.17684191465377808
    2. ':' → logprob: -1.9268419742584229
    3. ':
' → logprob: -4.926841735839844
    4. '==' → logprob: -5.926841735839844
    5. 'print' → logprob: -6.301841735839844
    6. ' else' → logprob: -6.426841735839844
    7. 'elif' → logprob: -6.801841735839844
    8. 'and' → logprob: -7.676841735839844
    9. '   ' → logprob: -7.801841735839844
    10. 'not' → logprob: -8.926841735839844

Token 781: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.5992573499679565
    2. 'print' → logprob: -2.099257469177246
    3. 'exit' → logprob: -2.349257469177246
    4. '"' → logprob: -2.474257469177246
    5. 'inf' → logprob: -3.724257469177246
    6. 'pc' → logprob: -3.724257469177246
    7. 'any' → logprob: -3.849257469177246
    8. 'in' → logprob: -3.974257469177246
    9. 'len' → logprob: -4.224257469177246
    10. 'if' → logprob: -5.099257469177246

Token 782: ',' (ID: 11)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0072522275149822235
    2. 'print' → logprob: -6.007252216339111
    3. ':
' → logprob: -6.132252216339111
    4. ':' → logprob: -7.132252216339111
    5. 'elif' → logprob: -7.507252216339111
    6. ' else' → logprob: -8.13225269317627
    7. 'and' → logprob: -8.38225269317627
    8. ',' → logprob: -8.38225269317627
    9. 'or' → logprob: -8.63225269317627
    10. ' and' → logprob: -9.50725269317627

Token 783: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0069579691626131535
    2. 'for' → logprob: -5.0069580078125
    3. 'if' → logprob: -8.6319580078125
    4. ' print' → logprob: -10.0069580078125
    5. ' for' → logprob: -11.3819580078125
    6. '   ' → logprob: -12.5069580078125
    7. 'pass' → logprob: -13.5069580078125
    8. 'continue' → logprob: -14.5069580078125
    9. 'break' → logprob: -14.7569580078125
    10. ' if' → logprob: -15.2569580078125

Token 784: ' vars' (ID: 36194)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07092124223709106
    2. ''' → logprob: -2.8209211826324463
    3. 'vars' → logprob: -5.445921421051025
    4. 'sum' → logprob: -7.320921421051025
    5. '*' → logprob: -7.445921421051025
    6. '("' → logprob: -7.445921421051025
    7. 'values' → logprob: -7.820921421051025
    8. '"in' → logprob: -7.820921421051025
    9. '('' → logprob: -8.070920944213867
    10. ''s' → logprob: -8.570920944213867

Token 785: ' or' (ID: 503)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.013674578629434109
    2. 'for' → logprob: -4.513674736022949
    3. 'else' → logprob: -6.388674736022949
    4. 'values' → logprob: -7.763674736022949
    5. 'if' → logprob: -8.38867473602295
    6. 'vals' → logprob: -8.63867473602295
    7. ' print' → logprob: -11.01367473602295
    8. '{' → logprob: -11.01367473602295
    9. ' for' → logprob: -11.01367473602295
    10. '```' → logprob: -11.13867473602295

Token 786: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12496542185544968
    2. 'print' → logprob: -2.3749654293060303
    3. '("' → logprob: -4.374965190887451
    4. '"in' → logprob: -5.874965190887451
    5. '
' → logprob: -6.249965190887451
    6. '   ' → logprob: -7.249965190887451
    7. ''in' → logprob: -7.374965190887451
    8. ''' → logprob: -7.749965190887451
    9. 'vars' → logprob: -7.874965190887451
    10. ' "' → logprob: -7.999965190887451

Token 787: 'inf' (ID: 22226)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.602200984954834
    2. 'inf' → logprob: -1.477200984954834
    3. 'vars' → logprob: -1.727200984954834
    4. 'print' → logprob: -3.977200984954834
    5. ''' → logprob: -4.227200984954834
    6. '
' → logprob: -5.852200984954834
    7. 'for' → logprob: -6.227200984954834
    8. 'variables' → logprob: -6.852200984954834
    9. '"in' → logprob: -6.977200984954834
    10. '".' → logprob: -7.352200984954834

Token 788: '"' (ID: 1)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4607205390930176
    2. 'vars' → logprob: -2.4607205390930176
    3. 'if' → logprob: -2.5857205390930176
    4. '
' → logprob: -2.7107205390930176
    5. 'for' → logprob: -3.5857205390930176
    6. 'else' → logprob: -3.5857205390930176
    7. '("' → logprob: -4.085720539093018
    8. '   ' → logprob: -4.710720539093018
    9. '('' → logprob: -4.835720539093018
    10. '("\' → logprob: -5.085720539093018

Token 789: ' already' (ID: 4279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.029830090701580048
    2. 'for' → logprob: -4.029829978942871
    3. 'else' → logprob: -5.154829978942871
    4. 'if' → logprob: -5.404829978942871
    5. 'vals' → logprob: -7.029829978942871
    6. 'values' → logprob: -8.154829978942871
    7. ' for' → logprob: -9.904829978942871
    8. ' print' → logprob: -10.529829978942871
    9. 'output' → logprob: -10.529829978942871
    10. '   ' → logprob: -11.154829978942871

Token 790: ' printed' (ID: 22774)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02826165407896042
    2. 'for' → logprob: -3.778261661529541
    3. 'else' → logprob: -5.403261661529541
    4. 'if' → logprob: -7.903261661529541
    5. ' for' → logprob: -10.028261184692383
    6. ' print' → logprob: -10.528261184692383
    7. 'values' → logprob: -10.653261184692383
    8. 'vals' → logprob: -11.403261184692383
    9. '   ' → logprob: -11.653261184692383
    10. 'output' → logprob: -12.028261184692383

Token 791: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03019576519727707
    2. 'for' → logprob: -3.530195713043213
    3. 'if' → logprob: -7.905195713043213
    4. ' for' → logprob: -11.280196189880371
    5. ' print' → logprob: -11.280196189880371
    6. 'result' → logprob: -11.405196189880371
    7. 'output' → logprob: -11.530196189880371
    8. '   ' → logprob: -11.780196189880371
    9. 'values' → logprob: -12.030196189880371
    10. 'vals' → logprob: -12.030196189880371

Token 792: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07909411936998367
    2. 'for' → logprob: -2.579094171524048
    3. 'if' → logprob: -8.704093933105469
    4. 'output' → logprob: -11.329093933105469
    5. 'values' → logprob: -11.704093933105469
    6. 'result' → logprob: -11.829093933105469
    7. 'vals' → logprob: -12.329093933105469
    8. 'res' → logprob: -13.204093933105469
    9. '   ' → logprob: -14.079093933105469
    10. ' print' → logprob: -14.079093933105469

Token 793: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.652451464906335e-05
    2. 'var' → logprob: -11.125016212463379
    3. 'i' → logprob: -13.750016212463379
    4. ' v' → logprob: -14.375016212463379
    5. '```' → logprob: -16.750017166137695
    6. '_v' → logprob: -18.750017166137695
    7. '`' → logprob: -19.125017166137695
    8. '	v' → logprob: -19.500017166137695
    9. '   ' → logprob: -19.625017166137695
    10. 'k' → logprob: -19.750017166137695

Token 794: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.474078893661499
    2. ' in' → logprob: -0.974078893661499
    3. ' ' → logprob: -14.349079132080078
    4. 'v' → logprob: -14.474079132080078
    5. ',' → logprob: -14.599079132080078
    6. '	in' → logprob: -17.099079132080078
    7. '_in' → logprob: -17.224079132080078
    8. 'n' → logprob: -17.224079132080078
    9. '```' → logprob: -17.224079132080078
    10. 'In' → logprob: -17.474079132080078

Token 795: ' variables' (ID: 13955)
  Prédit: 'variables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variables' → logprob: -7.896309739408025e-07
    2. ' variables' → logprob: -14.250000953674316
    3. 'variable' → logprob: -19.0
    4. '.variables' → logprob: -19.125
    5. 'vars' → logprob: -19.5
    6. 'vari' → logprob: -19.75
    7. 'var' → logprob: -20.5
    8. 'Variables' → logprob: -20.875
    9. 'variants' → logprob: -21.5
    10. 'sorted' → logprob: -21.75

Token 796: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16303510963916779
    2. 'print' → logprob: -2.0380351543426514
    3. ',' → logprob: -4.538034915924072
    4. '   ' → logprob: -5.663034915924072
    5. ':
' → logprob: -5.913034915924072
    6. ' print' → logprob: -6.038034915924072
    7. ')' → logprob: -7.788034915924072
    8. '.print' → logprob: -8.03803539276123
    9. '(print' → logprob: -10.16303539276123
    10. ' ,' → logprob: -10.53803539276123

Token 797: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0010708003537729383
    2. ' print' → logprob: -7.001070976257324
    3. '   ' → logprob: -8.751070976257324
    4. '	print' → logprob: -14.751070976257324
    5. '.print' → logprob: -14.876070976257324
    6. '       ' → logprob: -15.751070976257324
    7. '```' → logprob: -16.626070022583008
    8. '(print' → logprob: -17.626070022583008
    9. '    
' → logprob: -18.251070022583008
    10. '#print' → logprob: -19.126070022583008

Token 798: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -8.113290095934644e-05
    2. ' print' → logprob: -9.500081062316895
    3. '   ' → logprob: -12.000081062316895
    4. '	print' → logprob: -19.37508201599121
    5. '    
' → logprob: -19.75008201599121
    6. 'printf' → logprob: -19.87508201599121
    7. '.print' → logprob: -20.12508201599121
    8. '
' → logprob: -21.00008201599121
    9. '    ' → logprob: -22.00008201599121
    10. '```' → logprob: -22.00008201599121

Token 799: '(f' (ID: 1526)
  Prédit: 'vars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vars' → logprob: -0.10060279816389084
    2. '(vars' → logprob: -2.350602865219116
    3. '(f' → logprob: -8.475603103637695
    4. '(v' → logprob: -8.975603103637695
    5. 'v' → logprob: -10.725603103637695
    6. 'f' → logprob: -11.100603103637695
    7. 'var' → logprob: -11.100603103637695
    8. 'variables' → logprob: -12.225603103637695
    9. ' vars' → logprob: -13.100603103637695
    10. '(' → logprob: -13.600603103637695

Token 800: '"{' (ID: 27510)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.34413811564445496
    2. '"{' → logprob: -1.8441381454467773
    3. 'vars' → logprob: -2.0941381454467773
    4. '(vars' → logprob: -5.344138145446777
    5. 'v' → logprob: -5.594138145446777
    6. '(v' → logprob: -7.344138145446777
    7. ''{' → logprob: -8.094138145446777
    8. 'variables' → logprob: -8.469138145446777
    9. '{}' → logprob: -9.219138145446777
    10. '("{' → logprob: -10.594138145446777

Token 801: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0002690840628929436
    2. '{' → logprob: -8.250268936157227
    3. 'vars' → logprob: -12.125268936157227
    4. ' v' → logprob: -14.000268936157227
    5. 'variables' → logprob: -14.250268936157227
    6. 'var' → logprob: -15.125268936157227
    7. 'f' → logprob: -15.875268936157227
    8. ')v' → logprob: -16.250268936157227
    9. '}' → logprob: -16.625268936157227
    10. '{}' → logprob: -16.625268936157227

Token 802: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.000810340337920934
    2. '}{' → logprob: -7.375810146331787
    3. '}:' → logprob: -8.875810623168945
    4. '}:{' → logprob: -11.125810623168945
    5. '}=' → logprob: -11.250810623168945
    6. '{' → logprob: -11.375810623168945
    7. ' }' → logprob: -13.875810623168945
    8. '=' → logprob: -14.125810623168945
    9. '=}' → logprob: -14.125810623168945
    10. '},' → logprob: -14.250810623168945

Token 803: '={' (ID: 1693)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.5295534729957581
    2. '=' → logprob: -1.5295534133911133
    3. ' {' → logprob: -1.9045534133911133
    4. 'vars' → logprob: -3.9045534133911133
    5. ' =' → logprob: -4.654553413391113
    6. ' vars' → logprob: -5.279553413391113
    7. '"' → logprob: -5.404553413391113
    8. '(vars' → logprob: -5.904553413391113
    9. '}' → logprob: -6.404553413391113
    10. '{}' → logprob: -7.279553413391113

Token 804: 'vars' (ID: 32791)
  Prédit: 'vars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vars' → logprob: -2.7729658540920354e-05
    2. '{' → logprob: -11.000027656555176
    3. '}{' → logprob: -11.500027656555176
    4. ' vars' → logprob: -14.625027656555176
    5. 'variables' → logprob: -15.375027656555176
    6. '}' → logprob: -16.000028610229492
    7. '```' → logprob: -18.375028610229492
    8. '(vars' → logprob: -18.375028610229492
    9. 'vals' → logprob: -19.125028610229492
    10. 'var' → logprob: -19.500028610229492

Token 805: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.006228098180145025
    2. 'values' → logprob: -5.631227970123291
    3. '[v' → logprob: -7.256227970123291
    4. 'v' → logprob: -7.381227970123291
    5. '_vars' → logprob: -7.756227970123291
    6. '_variables' → logprob: -7.881227970123291
    7. 'vars' → logprob: -8.63122844696045
    8. 'vals' → logprob: -9.13122844696045
    9. 's' → logprob: -10.00622844696045
    10. '[' → logprob: -10.25622844696045

Token 806: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00043102685594931245
    2. 'v' → logprob: -7.750431060791016
    3. '[' → logprob: -15.750431060791016
    4. '{' → logprob: -16.625431060791016
    5. '```' → logprob: -16.875431060791016
    6. '}' → logprob: -17.125431060791016
    7. '}[' → logprob: -17.625431060791016
    8. '(v' → logprob: -18.000431060791016
    9. ' v' → logprob: -18.750431060791016
    10. 's' → logprob: -19.500431060791016

Token 807: ']}' (ID: 28000)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.0003978992172051221
    2. '}' → logprob: -7.875397682189941
    3. '()}' → logprob: -11.750397682189941
    4. '")' → logprob: -13.000397682189941
    5. '}")
' → logprob: -13.250397682189941
    6. ')}' → logprob: -13.875397682189941
    7. ')")' → logprob: -14.125397682189941
    8. '}",' → logprob: -14.250397682189941
    9. ']}' → logprob: -14.250397682189941
    10. '[v' → logprob: -14.250397682189941

Token 808: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021731010638177395
    2. '")' → logprob: -6.502172946929932
    3. ' )' → logprob: -7.877172946929932
    4. '()' → logprob: -9.50217342376709
    5. '())' → logprob: -9.50217342376709
    6. '')' → logprob: -10.62717342376709
    7. '   ' → logprob: -11.00217342376709
    8. '"' → logprob: -11.25217342376709
    9. '<|end|>' → logprob: -11.25217342376709
    10. '}' → logprob: -11.37717342376709


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 806
Tokens correctement prédits (1ère position, stricte): 307
Tokens correctement prédits (1ère position, avec adaptation): 361
Tokens correctement prédits (top 10): 664
Précision stricte (1ère position): 38.09%
Précision adaptée (1ère position): 44.79%
Précision (top 10): 82.38%
================================================================================
