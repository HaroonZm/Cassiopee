================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    import sys
    lines = sys.stdin.read().strip('\n ').split('\n')
    idx = 0
    first = True
    while True:
        if idx >= len(lines):
            break
        line = lines[idx].strip()
        if line == '0':
            break
        if not line:
            idx += 1
            continue
        p, s = map(int, line.split())
        idx += 1
        table = []
        for _ in range(p):
            row = lines[idx].split()
            idx += 1
            table.append(row)
        totals_row = lines[idx].split()
        idx += 1

        # Parse table: store known values as int, unknown as None
        # Also record the unknown positions in order
        data = []
        unknowns = []
        for i in range(p):
            row_data = []
            for j in range(s):
                if table[i][j] == '?':
                    row_data.append(None)
                    unknowns.append((i,j))
                else:
                    row_data.append(int(table[i][j]))
            row_data.append(int(table[i][s]))  # product total
            data.append(row_data)
        # Parse totals row, last element is grand total but can be ignored
        totals = list(map(int, totals_row[:s]))
        grand_total = int(totals_row[s])

        # We have p*s unknowns with some known and unknown entries
        # We can use the equations:
        # sum over stores of product i = product total[i]
        # sum over products of store j = totals[j]
        #
        # Variables: unknowns
        # Equations: p (product totals) + s (store totals) = p + s equations
        # Unknowns count can be more than equations => no unique solution.
        # We try to solve by substitution repeatedly.

        values = [[data[i][j] for j in range(s)] for i in range(p)]
        # Initially known values in values, unknown are None

        changed = True
        while changed:
            changed = False
            # Try to solve rows (product totals)
            for i in range(p):
                row = values[i]
                total = data[i][s]
                unknown_indices = [j for j in range(s) if row[j] is None]
                if len(unknown_indices) == 1:
                    j = unknown_indices[0]
                    s_known = 0
                    for k in range(s):
                        if k != j and row[k] is not None:
                            s_known += row[k]
                    val = total - s_known
                    if values[i][j] is None:
                        values[i][j] = val
                        changed = True
            # Try to solve columns (store totals)
            for j in range(s):
                col_vals = [values[i][j] for i in range(p)]
                total = totals[j]
                unknown_indices = [i for i in range(p) if col_vals[i] is None]
                if len(unknown_indices) == 1:
                    i = unknown_indices[0]
                    s_known = 0
                    for k in range(p):
                        if k != i and values[k][j] is not None:
                            s_known += values[k][j]
                    val = total - s_known
                    if values[i][j] is None:
                        values[i][j] = val
                        changed = True

        # Check if all unknowns are filled
        no_solution = False
        for i,j in unknowns:
            if values[i][j] is None:
                no_solution = True
                break

        # Check consistency: recompute row and column sums to match given totals
        if not no_solution:
            # Check rows
            for i in range(p):
                ssum = 0
                for j in range(s):
                    if values[i][j] is None:
                        no_solution = True
                        break
                    ssum += values[i][j]
                if no_solution:
                    break
                if ssum != data[i][s]:
                    no_solution = True
                    break
            # Check columns
            if not no_solution:
                for j in range(s):
                    ssum = 0
                    for i in range(p):
                        if values[i][j] is None:
                            no_solution = True
                            break
                        ssum += values[i][j]
                    if no_solution:
                        break
                    if ssum != totals[j]:
                        no_solution = True
                        break

        # If all unknown filled and consistent, print answers in order
        if no_solution:
            if not first:
                print()
            print("NO")
            first = False
        else:
            if not first:
                print()
            for i,j in unknowns:
                print(values[i][j])
            first = False

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2677304744720459
    2. '\n' → logprob: -1.767730474472046
    3. '   ' → logprob: -4.392730712890625
    4. '    ' → logprob: -4.517730712890625
    5. '    
' → logprob: -4.642730712890625
    6. ' 
' → logprob: -5.017730712890625
    7. ''' → logprob: -5.142730712890625
    8. '(' → logprob: -5.517730712890625
    9. ' ' → logprob: -5.892730712890625
    10. '\r' → logprob: -6.267730712890625

Token 4: ' import' (ID: 1588)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4218076467514038
    2. '   ' → logprob: -1.6718076467514038
    3. 'pass' → logprob: -2.4218077659606934
    4. 'p' → logprob: -3.6718077659606934
    5. 'return' → logprob: -4.171807765960693
    6. 'r' → logprob: -4.421807765960693
    7. '#' → logprob: -5.171807765960693
    8. '    ' → logprob: -6.171807765960693
    9. 'a' → logprob: -6.296807765960693
    10. 'n' → logprob: -6.796807765960693

Token 5: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.045836254954338074
    2. ' sys' → logprob: -3.6708362102508545
    3. ' ' → logprob: -4.545836448669434
    4. ' math' → logprob: -5.420836448669434
    5. ' numpy' → logprob: -5.920836448669434
    6. ' json' → logprob: -7.795836448669434
    7. ' random' → logprob: -7.920836448669434
    8. ' tensorflow' → logprob: -9.045836448669434
    9. ' tkinter' → logprob: -9.170836448669434
    10. ' pandas' → logprob: -9.170836448669434

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.706175446510315
    2. 'newline' → logprob: -1.706175446510315
    3. '\n' → logprob: -1.956175446510315
    4. '   ' → logprob: -2.0811753273010254
    5. '.readline' → logprob: -2.5811753273010254
    6. 'import' → logprob: -2.8311753273010254
    7. '<|end|>' → logprob: -2.9561753273010254
    8. '\' → logprob: -3.3311753273010254
    9. 'print' → logprob: -3.4561753273010254
    10. '<|end|>' → logprob: -4.081175327301025

Token 7: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.15540142357349396
    2. '   ' → logprob: -3.1554014682769775
    3. '[' → logprob: -4.030401229858398
    4. 'newline' → logprob: -4.405401229858398
    5. '\n' → logprob: -4.530401229858398
    6. '.readline' → logprob: -4.780401229858398
    7. 'print' → logprob: -5.280401229858398
    8. 'import' → logprob: -5.405401229858398
    9. '.stdout' → logprob: -5.405401229858398
    10. '    
' → logprob: -5.405401229858398

Token 8: ' lines' (ID: 8698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34727635979652405
    2. ' ' → logprob: -2.347276449203491
    3. '    ' → logprob: -2.347276449203491
    4. '\n' → logprob: -3.722276449203491
    5. '\' → logprob: -4.222276210784912
    6. '.' → logprob: -4.722276210784912
    7. '[' → logprob: -4.722276210784912
    8. 'import' → logprob: -4.847276210784912
    9. 'newline' → logprob: -5.222276210784912
    10. '  ' → logprob: -5.347276210784912

Token 9: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2391819804906845
    2. '=' → logprob: -2.1141819953918457
    3. '[' → logprob: -2.4891819953918457
    4. ' =' → logprob: -4.864181995391846
    5. '[:]' → logprob: -7.614181995391846
    6. ')' → logprob: -8.239181518554688
    7. '_' → logprob: -8.989181518554688
    8. '[]' → logprob: -9.114181518554688
    9. '.append' → logprob: -9.989181518554688
    10. '.=' → logprob: -10.239181518554688

Token 10: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.02074800431728363
    2. 'sys' → logprob: -3.8957479000091553
    3. ' []' → logprob: -8.895748138427734
    4. '=sys' → logprob: -11.270748138427734
    5. '[]' → logprob: -11.395748138427734
    6. '(sys' → logprob: -11.770748138427734
    7. '	sys' → logprob: -11.895748138427734
    8. ' open' → logprob: -12.020748138427734
    9. ' lines' → logprob: -12.145748138427734
    10. ' ' → logprob: -12.270748138427734

Token 11: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05146029591560364
    2. '.stdin' → logprob: -3.1764602661132812
    3. '.argv' → logprob: -5.051460266113281
    4. '.stdout' → logprob: -6.676460266113281
    5. '.readline' → logprob: -7.676460266113281
    6. ' .' → logprob: -9.176460266113281
    7. '.exit' → logprob: -10.426460266113281
    8. '.stderr' → logprob: -10.676460266113281
    9. '.std' → logprob: -10.801460266113281
    10. '.path' → logprob: -11.051460266113281

Token 12: '.read' (ID: 7211)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4383048713207245
    2. '.readline' → logprob: -1.0633049011230469
    3. '.readlines' → logprob: -4.938304901123047
    4. '.read' → logprob: -6.063304901123047
    5. 'read' → logprob: -10.563304901123047
    6. '.write' → logprob: -12.438304901123047
    7. '.Read' → logprob: -12.438304901123047
    8. '[:]' → logprob: -12.438304901123047
    9. '```' → logprob: -12.563304901123047
    10. ')' → logprob: -12.688304901123047

Token 13: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07692702859640121
    2. '(' → logprob: -2.7019269466400146
    3. '().' → logprob: -5.076927185058594
    4. 'lines' → logprob: -8.701927185058594
    5. 'line' → logprob: -8.951927185058594
    6. ')' → logprob: -9.326927185058594
    7. ' ()' → logprob: -9.951927185058594
    8. '```' → logprob: -10.326927185058594
    9. '())' → logprob: -10.451927185058594
    10. '.' → logprob: -10.451927185058594

Token 14: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.038070641458034515
    2. 'strip' → logprob: -3.2880706787109375
    3. 'rstrip' → logprob: -10.538070678710938
    4. 'read' → logprob: -13.038070678710938
    5. 'decode' → logprob: -15.038070678710938
    6. ' split' → logprob: -16.413070678710938
    7. '```' → logprob: -17.288070678710938
    8. 'replace' → logprob: -17.413070678710938
    9. 'plit' → logprob: -18.788070678710938
    10. '(split' → logprob: -18.913070678710938

Token 15: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15032058954238892
    2. '(' → logprob: -2.025320529937744
    3. '"' → logprob: -5.775320529937744
    4. ''' → logprob: -6.775320529937744
    5. '().' → logprob: -6.775320529937744
    6. '('' → logprob: -6.900320529937744
    7. ' ()' → logprob: -9.275321006774902
    8. ')' → logprob: -9.400321006774902
    9. ''s' → logprob: -9.400321006774902
    10. '("("' → logprob: -9.400321006774902

Token 16: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012664096429944038
    2. '\n' → logprob: -4.387664318084717
    3. ')' → logprob: -9.262663841247559
    4. '\' → logprob: -10.762663841247559
    5. ' \' → logprob: -11.512663841247559
    6. '
' → logprob: -11.637663841247559
    7. ' n' → logprob: -12.387663841247559
    8. 'r' → logprob: -12.512663841247559
    9. '')' → logprob: -12.887663841247559
    10. ')n' → logprob: -13.262663841247559

Token 17: ' ').' (ID: 114765)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1617540568113327
    2. '')' → logprob: -2.2867541313171387
    3. '\n' → logprob: -4.411754131317139
    4. '()' → logprob: -4.411754131317139
    5. '').' → logprob: -4.536754131317139
    6. ').' → logprob: -5.161754131317139
    7. ')\' → logprob: -5.536754131317139
    8. 's' → logprob: -6.661754131317139
    9. ''' → logprob: -8.28675365447998
    10. ')
' → logprob: -8.53675365447998

Token 18: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.2664456789934775e-06
    2. 'strip' → logprob: -14.875000953674316
    3. ' split' → logprob: -15.125000953674316
    4. 'rstrip' → logprob: -15.500000953674316
    5. 'sp' → logprob: -16.125001907348633
    6. 's' → logprob: -16.125001907348633
    7. '```' → logprob: -16.250001907348633
    8. 'spl' → logprob: -16.375001907348633
    9. 'replace' → logprob: -17.500001907348633
    10. '(split' → logprob: -18.000001907348633

Token 19: '('\' (ID: 24345)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.007708130870014429
    2. '(' → logprob: -5.6327080726623535
    3. 'lines' → logprob: -6.1327080726623535
    4. ''' → logprob: -6.8827080726623535
    5. '("("' → logprob: -7.2577080726623535
    6. '('\' → logprob: -9.632708549499512
    7. 'line' → logprob: -10.382708549499512
    8. '()' → logprob: -10.507708549499512
    9. '('.')' → logprob: -11.132708549499512
    10. '('(' → logprob: -11.132708549499512

Token 20: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.003718723077327013
    2. 'n' → logprob: -5.753718852996826
    3. '\' → logprob: -8.378718376159668
    4. ''\' → logprob: -8.503718376159668
    5. ')' → logprob: -10.503718376159668
    6. '('\' → logprob: -10.628718376159668
    7. '
' → logprob: -10.753718376159668
    8. 'lines' → logprob: -11.503718376159668
    9. '')' → logprob: -11.753718376159668
    10. 'newline' → logprob: -12.253718376159668

Token 21: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.4741482436656952
    2. ')' → logprob: -0.9741482734680176
    3. '")' → logprob: -10.47414779663086
    4. ''' → logprob: -11.59914779663086
    5. ']' → logprob: -11.72414779663086
    6. '`)' → logprob: -11.97414779663086
    7. '   ' → logprob: -12.47414779663086
    8. '')
' → logprob: -12.47414779663086
    9. '']' → logprob: -13.22414779663086
    10. '['' → logprob: -13.59914779663086

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026027850806713104
    2. '    
' → logprob: -4.776027679443359
    3. 'for' → logprob: -4.776027679443359
    4. '
' → logprob: -6.026027679443359
    5. 'if' → logprob: -6.151027679443359
    6. ' for' → logprob: -6.651027679443359
    7. '[' → logprob: -6.651027679443359
    8. ' if' → logprob: -7.526027679443359
    9. ')' → logprob: -8.02602767944336
    10. '    ' → logprob: -9.02602767944336

Token 23: ' idx' (ID: 14016)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1036111116409302
    2. 'i' → logprob: -1.4786111116409302
    3. 'for' → logprob: -1.4786111116409302
    4. 'n' → logprob: -2.6036109924316406
    5. 'if' → logprob: -2.8536109924316406
    6. 'f' → logprob: -4.228610992431641
    7. '    
' → logprob: -4.353610992431641
    8. 'a' → logprob: -4.728610992431641
    9. 'r' → logprob: -4.853610992431641
    10. ' for' → logprob: -5.103610992431641

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6950365304946899
    2. '=' → logprob: -1.57003653049469
    3. '+' → logprob: -1.82003653049469
    4. ' +=' → logprob: -2.3200364112854004
    5. ' ' → logprob: -4.0700364112854
    6. '+=' → logprob: -4.8200364112854
    7. ' +' → logprob: -5.6950364112854
    8. ')' → logprob: -6.9450364112854
    9. 's' → logprob: -7.0700364112854
    10. '_' → logprob: -7.1950364112854

Token 25: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.038057904690504074
    2. ' ' → logprob: -3.288057804107666
    3. '1' → logprob: -11.038058280944824
    4. '2' → logprob: -15.788058280944824
    5. '   ' → logprob: -16.913057327270508
    6. '```' → logprob: -16.913057327270508
    7. ' ' → logprob: -17.350557327270508
    8. '`' → logprob: -17.538057327270508
    9. 'len' → logprob: -17.850557327270508
    10. ' `' → logprob: -17.975557327270508

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000111768240458332
    2. ' ' → logprob: -9.12511157989502
    3. '1' → logprob: -13.12511157989502
    4. 'len' → logprob: -14.50011157989502
    5. '   ' → logprob: -16.375112533569336
    6. '```' → logprob: -16.375112533569336
    7. '-' → logprob: -16.750112533569336
    8. '`' → logprob: -17.000112533569336
    9. '2' → logprob: -17.500112533569336
    10. '  ' → logprob: -17.937612533569336

Token 27: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025404755026102066
    2. '    
' → logprob: -3.900404691696167
    3. 'n' → logprob: -6.775404930114746
    4. '```' → logprob: -7.025404930114746
    5. '\n' → logprob: -7.400404930114746
    6. '
' → logprob: -7.525404930114746
    7. '    ' → logprob: -8.025404930114746
    8. '     
' → logprob: -8.275404930114746
    9. ' ' → logprob: -8.525404930114746
    10. '`' → logprob: -8.775404930114746

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18940933048725128
    2. ' ' → logprob: -2.1894092559814453
    3. 'n' → logprob: -3.5644092559814453
    4. '```' → logprob: -4.564409255981445
    5. 'i' → logprob: -4.689409255981445
    6. '  ' → logprob: -6.564409255981445
    7. '    
' → logprob: -6.564409255981445
    8. '
' → logprob: -6.939409255981445
    9. ',' → logprob: -7.064409255981445
    10. '4' → logprob: -7.314409255981445

Token 29: ' first' (ID: 1577)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3133542537689209
    2. ' ' → logprob: -1.938354253768921
    3. 'w' → logprob: -3.063354253768921
    4. 'n' → logprob: -3.188354253768921
    5. 'i' → logprob: -4.0633544921875
    6. 'd' → logprob: -5.4383544921875
    7. 'm' → logprob: -5.9383544921875
    8. 'b' → logprob: -5.9383544921875
    9. '```' → logprob: -5.9383544921875
    10. 'while' → logprob: -6.5633544921875

Token 30: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004354991018772125
    2. '=' → logprob: -6.379354953765869
    3. ' =' → logprob: -6.629354953765869
    4. ')' → logprob: -8.004355430603027
    5. 'space' → logprob: -8.504355430603027
    6. ' ' → logprob: -8.629355430603027
    7. '_line' → logprob: -8.754355430603027
    8. '_space' → logprob: -9.129355430603027
    9. '(' → logprob: -9.379355430603027
    10. ' _' → logprob: -10.004355430603027

Token 31: ' True' (ID: 6432)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.19582657516002655
    2. 'lines' → logprob: -2.445826530456543
    3. ' True' → logprob: -2.570826530456543
    4. ' int' → logprob: -5.320826530456543
    5. 'True' → logprob: -5.570826530456543
    6. 'int' → logprob: -6.195826530456543
    7. ' len' → logprob: -6.445826530456543
    8. 'len' → logprob: -7.070826530456543
    9. ' ' → logprob: -7.570826530456543
    10. ' []' → logprob: -8.070826530456543

Token 32: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2352238893508911
    2. ' ' → logprob: -2.7352237701416016
    3. '```' → logprob: -2.9852237701416016
    4. 'n' → logprob: -3.6102237701416016
    5. ':' → logprob: -4.110223770141602
    6. ',' → logprob: -5.110223770141602
    7. 'b' → logprob: -5.110223770141602
    8. ')' → logprob: -5.110223770141602
    9. '
' → logprob: -5.735223770141602
    10. 'w' → logprob: -5.735223770141602

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4386366605758667
    2. ' ' → logprob: -1.3136366605758667
    3. 'n' → logprob: -3.6886367797851562
    4. '```' → logprob: -4.438636779785156
    5. '    
' → logprob: -4.813636779785156
    6. '  ' → logprob: -5.313636779785156
    7. '
' → logprob: -5.313636779785156
    8. '\n' → logprob: -5.688636779785156
    9. '  
' → logprob: -6.063636779785156
    10. ',' → logprob: -6.063636779785156

Token 34: ' while' (ID: 2049)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.015128899365663528
    2. '   ' → logprob: -4.515129089355469
    3. 'while' (adapté à ' while') → logprob: -6.640129089355469
    4. '```' → logprob: -6.890129089355469
    5. 'i' → logprob: -7.765129089355469
    6. 'n' → logprob: -7.765129089355469
    7. ' ' → logprob: -8.140129089355469
    8. 'b' → logprob: -8.515129089355469
    9. 'd' → logprob: -9.140129089355469
    10. '`' → logprob: -9.890129089355469

Token 35: ' True' (ID: 6432)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.007432223297655582
    2. ' lines' → logprob: -5.757432460784912
    3. ' len' → logprob: -6.882432460784912
    4. ' True' → logprob: -6.882432460784912
    5. ' not' → logprob: -7.007432460784912
    6. 'idx' → logprob: -7.257432460784912
    7. ' ' → logprob: -7.507432460784912
    8. ' ' → logprob: -12.257431983947754
    9. 'lines' → logprob: -12.382431983947754
    10. 'True' → logprob: -12.507431983947754

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.133198283147067e-05
    2. ':**' → logprob: -10.750051498413086
    3. '):' → logprob: -10.875051498413086
    4. ' :' → logprob: -12.750051498413086
    5. ':
' → logprob: -13.125051498413086
    6. '():' → logprob: -13.125051498413086
    7. '   ' → logprob: -13.375051498413086
    8. ',' → logprob: -14.750051498413086
    9. '       ' → logprob: -15.250051498413086
    10. ',:' → logprob: -15.375051498413086

Token 37: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7657204866409302
    2. ' ' → logprob: -1.3907204866409302
    3. '   ' → logprob: -1.6407204866409302
    4. '    ' → logprob: -2.6407203674316406
    5. 'i' → logprob: -4.640720367431641
    6. 'n' → logprob: -5.765720367431641
    7. '     ' → logprob: -5.765720367431641
    8. '  ' → logprob: -6.390720367431641
    9. 't' → logprob: -7.515720367431641
    10. ' 
' → logprob: -8.01572036743164

Token 38: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02907472662627697
    2. 'i' → logprob: -4.029074668884277
    3. '   ' → logprob: -4.654074668884277
    4. '  ' → logprob: -7.904074668884277
    5. 'n' → logprob: -8.154074668884277
    6. '    ' → logprob: -8.154074668884277
    7. 'if' (adapté à ' if') → logprob: -9.029074668884277
    8. 'l' → logprob: -9.154074668884277
    9. 't' → logprob: -9.779074668884277
    10. ' if' → logprob: -10.279074668884277

Token 39: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.00021867557370569557
    2. 'idx' → logprob: -8.500218391418457
    3. ' ' → logprob: -12.625218391418457
    4. ' lines' → logprob: -12.625218391418457
    5. '	idx' → logprob: -12.625218391418457
    6. ' not' → logprob: -12.875218391418457
    7. ' ' → logprob: -14.250218391418457
    8. '(idx' → logprob: -14.250218391418457
    9. ' len' → logprob: -14.375218391418457
    10. '[idx' → logprob: -14.875218391418457

Token 40: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.010790298692882061
    2. ' ' → logprob: -5.3857903480529785
    3. ' <' → logprob: -5.8857903480529785
    4. '+' → logprob: -6.5107903480529785
    5. '>=' → logprob: -6.6357903480529785
    6. ' ==' → logprob: -7.6357903480529785
    7. ' +' → logprob: -10.26078987121582
    8. '<' → logprob: -11.13578987121582
    9. ' >' → logprob: -11.63578987121582
    10. '==' → logprob: -12.13578987121582

Token 41: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2014133334159851
    2. ' len' → logprob: -1.7014133930206299
    3. '(len' → logprob: -16.826414108276367
    4. '   ' → logprob: -17.201414108276367
    5. '<len' → logprob: -18.326414108276367
    6. '	len' → logprob: -18.576414108276367
    7. ' ' → logprob: -19.076414108276367
    8. 'length' → logprob: -19.076414108276367
    9. '=len' → logprob: -19.451414108276367
    10. '[len' → logprob: -19.576414108276367

Token 42: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.005257714539766312
    2. '(' → logprob: -5.255257606506348
    3. ' lines' → logprob: -10.755257606506348
    4. ' (' → logprob: -13.630257606506348
    5. '(line' → logprob: -14.255257606506348
    6. 'lines' → logprob: -15.130257606506348
    7. '(rows' → logprob: -16.005258560180664
    8. ')' → logprob: -16.130258560180664
    9. '	lines' → logprob: -16.630258560180664
    10. '(l' → logprob: -16.880258560180664

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1473410725593567
    2. ')' → logprob: -2.022341012954712
    3. ' or' → logprob: -6.022341251373291
    4. ' ):' → logprob: -6.397341251373291
    5. '):
' → logprob: -8.022340774536133
    6. ':' → logprob: -9.147340774536133
    7. ' )' → logprob: -9.147340774536133
    8. 'or' → logprob: -11.897340774536133
    9. '   ' → logprob: -12.147340774536133
    10. ' and' → logprob: -12.772340774536133

Token 44: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0467265285551548
    2. '           ' → logprob: -3.2967264652252197
    3. ':' → logprob: -5.171726703643799
    4. '   ' → logprob: -6.796726703643799
    5. '    ' → logprob: -7.921726703643799
    6. ' :' → logprob: -8.04672622680664
    7. '        ' → logprob: -8.54672622680664
    8. ' ' → logprob: -8.67172622680664
    9. '\n' → logprob: -8.79672622680664
    10. ':
' → logprob: -8.79672622680664

Token 45: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5536473989486694
    2. '       ' → logprob: -1.8036473989486694
    3. 'break' (adapté à ' break') → logprob: -1.9286473989486694
    4. ' break' → logprob: -2.178647518157959
    5. '```' → logprob: -7.053647518157959
    6. '   ' → logprob: -8.3036470413208
    7. 'return' → logprob: -8.3036470413208
    8. '	break' → logprob: -8.5536470413208
    9. 'b' → logprob: -8.9286470413208
    10. '_break' → logprob: -10.0536470413208

Token 46: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.597496509552002
    2. ':' → logprob: -1.097496509552002
    3. '\n' → logprob: -3.597496509552002
    4. '        
' → logprob: -3.722496509552002
    5. '\' → logprob: -3.972496509552002
    6. '   ' → logprob: -4.722496509552002
    7. ':
' → logprob: -4.722496509552002
    8. '```' → logprob: -5.097496509552002
    9. '
' → logprob: -5.597496509552002
    10. '    
' → logprob: -5.722496509552002

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20818974077701569
    2. ':' → logprob: -2.7081897258758545
    3. '   ' → logprob: -3.2081897258758545
    4. '\n' → logprob: -4.208189964294434
    5. '\' → logprob: -4.333189964294434
    6. '        
' → logprob: -4.583189964294434
    7. ' ' → logprob: -4.958189964294434
    8. '    ' → logprob: -4.958189964294434
    9. '    
' → logprob: -5.458189964294434
    10. 'n' → logprob: -5.958189964294434

Token 48: ' line' (ID: 2543)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7919265627861023
    2. '       ' → logprob: -1.416926622390747
    3. ' ' → logprob: -1.666926622390747
    4. '   ' → logprob: -2.791926622390747
    5. 'l' → logprob: -3.791926622390747
    6. 't' → logprob: -4.791926383972168
    7. '    ' → logprob: -5.041926383972168
    8. '  ' → logprob: -6.541926383972168
    9. '        ' → logprob: -6.666926383972168
    10. 's' → logprob: -6.666926383972168

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04861188679933548
    2. '=' → logprob: -3.048611879348755
    3. 's' → logprob: -11.423611640930176
    4. ',' → logprob: -12.923611640930176
    5. ' ' → logprob: -13.048611640930176
    6. '[' → logprob: -13.173611640930176
    7. '.strip' → logprob: -13.673611640930176
    8. ' ==' → logprob: -13.673611640930176
    9. ')' → logprob: -14.173611640930176
    10. '=line' → logprob: -14.173611640930176

Token 50: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.0002625278721097857
    2. 'lines' → logprob: -8.250262260437012
    3. ' line' → logprob: -15.000262260437012
    4. '(lines' → logprob: -15.125262260437012
    5. ' ' → logprob: -15.125262260437012
    6. '	lines' → logprob: -15.750262260437012
    7. ' ' → logprob: -16.250263214111328
    8. ' l' → logprob: -17.625263214111328
    9. ' linhas' → logprob: -18.125263214111328
    10. 'line' → logprob: -18.125263214111328

Token 51: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.054959580302238464
    2. '[' → logprob: -2.929959535598755
    3. '```' → logprob: -10.304959297180176
    4. '   ' → logprob: -10.929959297180176
    5. '\[' → logprob: -11.429959297180176
    6. '[id' → logprob: -12.929959297180176
    7. '[token' → logprob: -13.304959297180176
    8. '[...]' → logprob: -13.304959297180176
    9. ' [' → logprob: -13.679959297180176
    10. '[]' → logprob: -13.929959297180176

Token 52: '].' (ID: 1651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2269570678472519
    2. ')' → logprob: -1.726957082748413
    3. '])' → logprob: -3.726957082748413
    4. ']
' → logprob: -7.351956844329834
    5. ')]' → logprob: -8.601957321166992
    6. ')
' → logprob: -9.101957321166992
    7. '].' → logprob: -9.976957321166992
    8. ' ]' → logprob: -10.101957321166992
    9. ' )' → logprob: -10.226957321166992
    10. '）' → logprob: -10.601957321166992

Token 53: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0007767542265355587
    2. 'split' → logprob: -7.250776767730713
    3. 'rstrip' → logprob: -9.625776290893555
    4. 'replace' → logprob: -14.750776290893555
    5. 'startswith' → logprob: -14.875776290893555
    6. 'str' → logprob: -17.375776290893555
    7. 'l' → logprob: -18.125776290893555
    8. ' strip' → logprob: -18.250776290893555
    9. '```' → logprob: -18.625776290893555
    10. '.strip' → logprob: -18.625776290893555

Token 54: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06085256114602089
    2. '(' → logprob: -3.060852527618408
    3. '('' → logprob: -4.435852527618408
    4. ''' → logprob: -9.060853004455566
    5. '("("' → logprob: -9.185853004455566
    6. '().' → logprob: -10.560853004455566
    7. '("' → logprob: -11.435853004455566
    8. '()='' → logprob: -11.560853004455566
    9. '```' → logprob: -11.810853004455566
    10. '('.')' → logprob: -11.810853004455566

Token 55: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' if' (ID: 538)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.26258647441864014
    2. 'if' (adapté à ' if') → logprob: -1.5125864744186401
    3. 'i' → logprob: -5.26258659362793
    4. '   ' → logprob: -6.01258659362793
    5. ' if' → logprob: -6.51258659362793
    6. ' idx' → logprob: -7.13758659362793
    7. '	idx' → logprob: -9.13758659362793
    8. '```' → logprob: -9.13758659362793
    9. '[idx' → logprob: -9.51258659362793
    10. '<|end|>' → logprob: -9.88758659362793

Token 57: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.058417364954948425
    2. 'not' → logprob: -3.183417320251465
    3. ' line' → logprob: -4.558417320251465
    4. 'line' → logprob: -5.433417320251465
    5. ' ' → logprob: -8.058417320251465
    6. ' len' → logprob: -9.433417320251465
    7. 'len' → logprob: -10.308417320251465
    8. '   ' → logprob: -12.308417320251465
    9. ' ' → logprob: -12.433417320251465
    10. '!' → logprob: -13.058417320251465

Token 58: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5764191150665283
    2. ' ==' → logprob: -0.8264191150665283
    3. '.startswith' → logprob: -7.826418876647949
    4. '[' → logprob: -10.57641887664795
    5. '=' → logprob: -11.32641887664795
    6. '()==' → logprob: -11.70141887664795
    7. ' in' → logprob: -12.45141887664795
    8. '===' → logprob: -12.57641887664795
    9. 'startswith' → logprob: -12.82641887664795
    10. 's' → logprob: -12.82641887664795

Token 59: ' '' (ID: 461)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.16092827916145325
    2. ''' → logprob: -2.035928249359131
    3. '""' → logprob: -4.285928249359131
    4. '"' → logprob: -6.285928249359131
    5. '"":' → logprob: -6.535928249359131
    6. ' ''' → logprob: -8.535928726196289
    7. ''A' → logprob: -8.535928726196289
    8. ''#' → logprob: -8.785928726196289
    9. ''a' → logprob: -9.785928726196289
    10. ''S' → logprob: -10.285928726196289

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2668156027793884
    2. ''' → logprob: -1.7668156623840332
    3. '':' → logprob: -3.141815662384033
    4. '''' → logprob: -4.016815662384033
    5. ''''' → logprob: -7.766815662384033
    6. '#' → logprob: -7.891815662384033
    7. '```' → logprob: -8.141815185546875
    8. '"":' → logprob: -8.891815185546875
    9. '"' → logprob: -9.016815185546875
    10. ''#' → logprob: -9.766815185546875

Token 61: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':' → logprob: -0.04537138342857361
    2. ' ' → logprob: -3.6703712940216064
    3. ''' → logprob: -4.5453715324401855
    4. ':' → logprob: -6.2953715324401855
    5. ' ':' → logprob: -6.4203715324401855
    6. '0' → logprob: -6.6703715324401855
    7. ' '' → logprob: -7.1703715324401855
    8. '<|end|>' → logprob: -7.4203715324401855
    9. '<|end|>' → logprob: -7.5453715324401855
    10. ''):' → logprob: -8.045371055603027

Token 62: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08500942587852478
    2. '           ' → logprob: -3.2100093364715576
    3. ':' → logprob: -3.3350093364715576
    4. '   ' → logprob: -6.585009574890137
    5. ':
' → logprob: -7.085009574890137
    6. '0' → logprob: -7.335009574890137
    7. '        ' → logprob: -7.710009574890137
    8. '<|end|>' → logprob: -7.710009574890137
    9. '    ' → logprob: -7.835009574890137
    10. '      ' → logprob: -8.835009574890137

Token 63: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3156276047229767
    2. '       ' → logprob: -1.5656275749206543
    3. ' break' → logprob: -2.9406275749206543
    4. '        
' → logprob: -6.190627574920654
    5. '\n' → logprob: -6.190627574920654
    6. 'break' (adapté à ' break') → logprob: -6.190627574920654
    7. '   ' → logprob: -7.440627574920654
    8. '
' → logprob: -7.440627574920654
    9. '        ' → logprob: -8.190628051757812
    10. '```' → logprob: -8.440628051757812

Token 64: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.461724191904068
    2. '\n' → logprob: -1.9617241621017456
    3. '
' → logprob: -2.086724281311035
    4. '        
' → logprob: -3.211724281311035
    5. '<|end|>' → logprob: -3.336724281311035
    6. '\' → logprob: -4.961724281311035
    7. '    
' → logprob: -5.086724281311035
    8. '   ' → logprob: -5.461724281311035
    9. '<|end|>' → logprob: -6.336724281311035
    10. '```' → logprob: -6.461724281311035

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20950616896152496
    2. '<|end|>' → logprob: -1.9595061540603638
    3. '
' → logprob: -4.334506034851074
    4. '\n' → logprob: -4.584506034851074
    5. '        
' → logprob: -4.709506034851074
    6. '   ' → logprob: -5.084506034851074
    7. '    
' → logprob: -5.959506034851074
    8. '  
' → logprob: -6.584506034851074
    9. '<|end|>' → logprob: -6.584506034851074
    10. '\' → logprob: -7.084506034851074

Token 66: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1202901154756546
    2. '<|end|>' → logprob: -3.2452900409698486
    3. ' ' → logprob: -3.3702900409698486
    4. '        
' → logprob: -4.370290279388428
    5. '   ' → logprob: -4.870290279388428
    6. '    ' → logprob: -5.120290279388428
    7. '
' → logprob: -5.870290279388428
    8. '<|end|>' → logprob: -5.995290279388428
    9. '  ' → logprob: -6.245290279388428
    10. '        ' → logprob: -6.370290279388428

Token 67: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.07851261645555496
    2. ' first' → logprob: -3.203512668609619
    3. ' ' → logprob: -3.453512668609619
    4. ' len' → logprob: -6.078512668609619
    5. 'not' → logprob: -7.828512668609619
    6. ' ' → logprob: -8.453512191772461
    7. 'first' → logprob: -8.578512191772461
    8. ' line' → logprob: -9.703512191772461
    9. ' space' → logprob: -10.953512191772461
    10. ' no' → logprob: -11.453512191772461

Token 68: ' line' (ID: 2543)
  Prédit: ' first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.0010278081754222512
    2. 'first' → logprob: -7.001027584075928
    3. ' ' → logprob: -9.251028060913086
    4. ' line' → logprob: -12.626028060913086
    5. '	first' → logprob: -12.626028060913086
    6. '<|end|>' → logprob: -12.751028060913086
    7. '[first' → logprob: -13.001028060913086
    8. ' ' → logprob: -13.126028060913086
    9. 'irst' → logprob: -13.501028060913086
    10. '(first' → logprob: -13.501028060913086

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2846592664718628
    2. '.' → logprob: -2.6596593856811523
    3. '.startswith' → logprob: -2.6596593856811523
    4. '.strip' → logprob: -3.2846593856811523
    5. ' or' → logprob: -3.9096593856811523
    6. '.is' → logprob: -4.284659385681152
    7. ' .' → logprob: -4.534659385681152
    8. '<|end|>' → logprob: -4.659659385681152
    9. '.split' → logprob: -4.909659385681152
    10. '.endswith' → logprob: -5.784659385681152

Token 70: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6288877129554749
    2. '           ' → logprob: -1.00388765335083
    3. '<|end|>' → logprob: -2.62888765335083
    4. '<|end|>' → logprob: -3.87888765335083
    5. '   ' → logprob: -5.62888765335083
    6. '        
' → logprob: -6.87888765335083
    7. '            
' → logprob: -7.62888765335083
    8. ' ' → logprob: -7.75388765335083
    9. '    
' → logprob: -8.128888130187988
    10. '```' → logprob: -8.128888130187988

Token 71: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.218441441655159
    2. 'idx' (adapté à ' idx') → logprob: -2.0934414863586426
    3. '           ' → logprob: -3.2184414863586426
    4. '   ' → logprob: -3.7184414863586426
    5. '       ' → logprob: -5.093441486358643
    6. '	idx' → logprob: -6.343441486358643
    7. '    ' → logprob: -8.468441009521484
    8. '```' → logprob: -8.593441009521484
    9. '[idx' → logprob: -9.343441009521484
    10. ' ' → logprob: -9.468441009521484

Token 72: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5825328230857849
    2. '+=' → logprob: -0.8325328230857849
    3. '+' → logprob: -5.08253288269043
    4. '<|end|>' → logprob: -9.20753288269043
    5. '++' → logprob: -9.33253288269043
    6. ' ' → logprob: -9.58253288269043
    7. '```' → logprob: -10.20753288269043
    8. '=' → logprob: -10.58253288269043
    9. '    ' → logprob: -11.58253288269043
    10. ']+=' → logprob: -11.70753288269043

Token 73: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002678920282050967
    2. ' ' → logprob: -8.25026798248291
    3. '   ' → logprob: -12.00026798248291
    4. '```' → logprob: -15.12526798248291
    5. '       ' → logprob: -16.625267028808594
    6. '  ' → logprob: -17.125267028808594
    7. '    ' → logprob: -17.125267028808594
    8. '           ' → logprob: -17.687767028808594
    9. '2' → logprob: -17.875267028808594
    10. '`' → logprob: -18.625267028808594

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.463036435074173e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.750024795532227
    4. '```' → logprob: -16.375024795532227
    5. '  ' → logprob: -18.125024795532227
    6. '2' → logprob: -18.625024795532227
    7. '    ' → logprob: -18.875024795532227
    8. '       ' → logprob: -19.062524795532227
    9. '`' → logprob: -19.375024795532227
    10. '１' → logprob: -19.437524795532227

Token 75: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21566608548164368
    2. '           ' → logprob: -1.8406660556793213
    3. '<|end|>' → logprob: -3.5906660556793213
    4. '
' → logprob: -5.8406662940979
    5. '   ' → logprob: -6.2156662940979
    6. '        
' → logprob: -6.9656662940979
    7. '<|end|>' → logprob: -7.3406662940979
    8. '    
' → logprob: -8.340665817260742
    9. '```' → logprob: -8.465665817260742
    10. '            
' → logprob: -8.840665817260742

Token 76: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02128927782177925
    2. '           ' → logprob: -4.271289348602295
    3. '<|end|>' → logprob: -5.271289348602295
    4. '        
' → logprob: -7.396289348602295
    5. '
' → logprob: -7.771289348602295
    6. '   ' → logprob: -8.146288871765137
    7. '<|end|>' → logprob: -9.021288871765137
    8. '            
' → logprob: -9.021288871765137
    9. '```' → logprob: -9.146288871765137
    10. 'else' → logprob: -9.896288871765137

Token 77: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.314083456993103
    2. ' continue' → logprob: -1.314083456993103
    3. 'contin' → logprob: -7.939083576202393
    4. '	continue' → logprob: -8.189083099365234
    5. '   ' → logprob: -9.939083099365234
    6. '_continue' → logprob: -10.189083099365234
    7. 'continu' → logprob: -10.439083099365234
    8. '       ' → logprob: -10.564083099365234
    9. '```' → logprob: -11.189083099365234
    10. ' continu' → logprob: -11.564083099365234

Token 78: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038886915892362595
    2. '        
' → logprob: -3.4138870239257812
    3. '   ' → logprob: -6.413887023925781
    4. '<|end|>' → logprob: -6.538887023925781
    5. '    
' → logprob: -7.413887023925781
    6. '        
        
' → logprob: -8.538887023925781
    7. '\' → logprob: -8.788887023925781
    8. '`' → logprob: -9.038887023925781
    9. '```' → logprob: -9.163887023925781
    10. '#' → logprob: -9.163887023925781

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30906519293785095
    2. '   ' → logprob: -1.5590652227401733
    3. ' ' → logprob: -4.059065341949463
    4. ' 
' → logprob: -4.684065341949463
    5. '#' → logprob: -4.809065341949463
    6. '        
' → logprob: -4.934065341949463
    7. '    
' → logprob: -5.684065341949463
    8. 'n' → logprob: -6.309065341949463
    9. 't' → logprob: -6.309065341949463
    10. '    ' → logprob: -6.559065341949463

Token 80: ' p' (ID: 275)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04293844476342201
    2. 't' → logprob: -4.542938232421875
    3. 'd' → logprob: -4.667938232421875
    4. 's' → logprob: -5.417938232421875
    5. '       ' → logprob: -5.542938232421875
    6. 'l' → logprob: -5.792938232421875
    7. ' n' → logprob: -6.292938232421875
    8. ' ' → logprob: -6.417938232421875
    9. 'a' → logprob: -6.917938232421875
    10. 'm' → logprob: -7.042938232421875

Token 81: ',' (ID: 11)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6013228893280029
    2. ',' → logprob: -1.351322889328003
    3. ' =' → logprob: -2.976322889328003
    4. 'a' → logprob: -3.226322889328003
    5. 'i' → logprob: -3.726322889328003
    6. 'ar' → logprob: -3.976322889328003
    7. '=' → logprob: -4.476323127746582
    8. ' ' → logprob: -5.101323127746582
    9. 'l' → logprob: -5.226323127746582
    10. 'u' → logprob: -5.226323127746582

Token 82: ' s' (ID: 265)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08437392860651016
    2. 'q' → logprob: -3.334373950958252
    3. 's' → logprob: -3.959373950958252
    4. ' =' → logprob: -4.834373950958252
    5. ' q' → logprob: -5.584373950958252
    6. 'n' → logprob: -6.084373950958252
    7. 'd' → logprob: -6.209373950958252
    8. 'space' → logprob: -6.209373950958252
    9. 'c' → logprob: -6.834373950958252
    10. '=' → logprob: -7.084373950958252

Token 83: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2821609079837799
    2. ' =' → logprob: -1.4071608781814575
    3. ',' → logprob: -6.907160758972168
    4. ' ,' → logprob: -12.782160758972168
    5. ')' → logprob: -13.282160758972168
    6. ' =
' → logprob: -13.282160758972168
    7. ' ' → logprob: -14.032160758972168
    8. '=
' → logprob: -14.782160758972168
    9. 'p' → logprob: -15.282160758972168
    10. '.' → logprob: -15.282160758972168

Token 84: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.25852182507514954
    2. ' line' → logprob: -1.7585217952728271
    3. ' ' → logprob: -3.383521795272827
    4. 'line' → logprob: -4.258522033691406
    5. 'map' → logprob: -5.258522033691406
    6. ' [' → logprob: -7.008522033691406
    7. ' lines' → logprob: -7.758522033691406
    8. ' l' → logprob: -8.883522033691406
    9. '[line' → logprob: -9.008522033691406
    10. ' '' → logprob: -9.008522033691406

Token 85: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.714346706867218
    2. '(int' → logprob: -0.714346706867218
    3. '(lambda' → logprob: -4.214346885681152
    4. '(str' → logprob: -5.089346885681152
    5. '(float' → logprob: -11.214346885681152
    6. '(in' → logprob: -12.339346885681152
    7. '(eval' → logprob: -12.714346885681152
    8. '(list' → logprob: -12.964346885681152
    9. ' (' → logprob: -13.464346885681152
    10. '[int' → logprob: -13.589346885681152

Token 86: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8969100713729858
    2. '(lines' → logprob: -1.1469100713729858
    3. '(line' → logprob: -1.3969100713729858
    4. ')' → logprob: -3.6469101905822754
    5. '(lambda' → logprob: -7.396910190582275
    6. '(
' → logprob: -8.521909713745117
    7. '()' → logprob: -10.396909713745117
    8. '<|end|>' → logprob: -10.646909713745117
    9. '(parts' → logprob: -10.771909713745117
    10. '(split' → logprob: -10.771909713745117

Token 87: ' line' (ID: 2543)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.011805158108472824
    2. 'lines' → logprob: -5.011805057525635
    3. ' line' → logprob: -5.636805057525635
    4. ')' → logprob: -7.136805057525635
    5. 'line' → logprob: -8.136805534362793
    6. ' )' → logprob: -8.136805534362793
    7. '(lines' → logprob: -9.261805534362793
    8. '	lines' → logprob: -11.511805534362793
    9. '[line' → logprob: -11.886805534362793
    10. '<|end|>' → logprob: -12.386805534362793

Token 88: '.split' (ID: 10347)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028128400444984436
    2. ',' → logprob: -6.37781286239624
    3. '.split' → logprob: -8.127812385559082
    4. ' )' → logprob: -8.377812385559082
    5. '),' → logprob: -8.627812385559082
    6. '[' → logprob: -8.752812385559082
    7. '))' → logprob: -9.377812385559082
    8. '   ' → logprob: -10.627812385559082
    9. ')
' → logprob: -10.627812385559082
    10. '(' → logprob: -11.002812385559082

Token 89: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0304303169250488
    2. '('' → logprob: -1.0304303169250488
    3. '())' → logprob: -1.4054303169250488
    4. '(' → logprob: -3.405430316925049
    5. ')' → logprob: -4.905430316925049
    6. '(','' → logprob: -8.78042984008789
    7. '(',' → logprob: -9.65542984008789
    8. '()
' → logprob: -9.78042984008789
    9. '')' → logprob: -10.03042984008789
    10. '())
' → logprob: -10.15542984008789

Token 90: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6150206923484802
    2. '\n' → logprob: -1.365020751953125
    3. '<|end|>' → logprob: -2.865020751953125
    4. '    
' → logprob: -3.865020751953125
    5. '   ' → logprob: -3.990020751953125
    6. '       ' → logprob: -3.990020751953125
    7. ':' → logprob: -3.990020751953125
    8. '\' → logprob: -4.115020751953125
    9. ' 
' → logprob: -4.490020751953125
    10. '  
' → logprob: -4.865020751953125

Token 91: ' idx' (ID: 14016)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9437152147293091
    2. '<|end|>' → logprob: -1.443715214729309
    3. '
' → logprob: -1.693715214729309
    4. ' 
' → logprob: -2.6937150955200195
    5. ' ' → logprob: -3.1937150955200195
    6. '\' → logprob: -4.0687150955200195
    7. '  
' → logprob: -4.0687150955200195
    8. '<|end|>' → logprob: -4.4437150955200195
    9. '  ' → logprob: -4.5687150955200195
    10. '   ' → logprob: -5.0687150955200195

Token 92: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.18306007981300354
    2. '+' → logprob: -1.9330600500106812
    3. '+=' → logprob: -4.058060169219971
    4. ' +' → logprob: -5.433060169219971
    5. ' ' → logprob: -7.183060169219971
    6. ' =' → logprob: -9.058059692382812
    7. '=' → logprob: -10.183059692382812
    8. '++' → logprob: -13.183059692382812
    9. ' +
' → logprob: -13.308059692382812
    10. '<|end|>' → logprob: -13.308059692382812

Token 93: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10020752996206284
    2. ' ' → logprob: -2.350207567214966
    3. '2' → logprob: -14.225207328796387
    4. ' ' → logprob: -15.725207328796387
    5. '`' → logprob: -17.537708282470703
    6. ' `' → logprob: -17.787708282470703
    7. ' p' → logprob: -17.850208282470703
    8. '+' → logprob: -17.912708282470703
    9. '0' → logprob: -18.162708282470703
    10. '3' → logprob: -18.225208282470703

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.723973582556937e-05
    2. ' ' → logprob: -11.000017166137695
    3. '2' → logprob: -15.000017166137695
    4. 'p' → logprob: -17.562517166137695
    5. 's' → logprob: -17.812517166137695
    6. '+' → logprob: -18.312517166137695
    7. '```' → logprob: -18.437517166137695
    8. '１' → logprob: -18.750017166137695
    9. '`' → logprob: -19.000017166137695
    10. ' p' → logprob: -19.312517166137695

Token 95: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2239973098039627
    2. ' 
' → logprob: -2.9739973545074463
    3. '       ' → logprob: -2.9739973545074463
    4. ' ' → logprob: -3.4739973545074463
    5. '<|end|>' → logprob: -3.4739973545074463
    6. '        
' → logprob: -4.598997116088867
    7. '    
' → logprob: -5.098997116088867
    8. '   ' → logprob: -5.348997116088867
    9. '  
' → logprob: -5.473997116088867
    10. '        ' → logprob: -6.348997116088867

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2604568302631378
    2. '<|end|>' → logprob: -2.2604568004608154
    3. ' ' → logprob: -2.8854568004608154
    4. '        
' → logprob: -3.8854568004608154
    5. '   ' → logprob: -4.2604570388793945
    6. '
' → logprob: -4.2604570388793945
    7. '        ' → logprob: -5.5104570388793945
    8. '    ' → logprob: -5.7604570388793945
    9. ' 
' → logprob: -6.1354570388793945
    10. '  ' → logprob: -6.1354570388793945

Token 97: ' table' (ID: 3293)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.2716188430786133
    2. 'graph' → logprob: -3.2716188430786133
    3. 'grid' → logprob: -3.3966188430786133
    4. 'r' → logprob: -3.3966188430786133
    5. 'g' → logprob: -3.5216188430786133
    6. 'arr' → logprob: -3.5216188430786133
    7. 'counts' → logprob: -3.5216188430786133
    8. 's' → logprob: -3.7091188430786133
    9. 'c' → logprob: -3.7091188430786133
    10. 'a' → logprob: -3.7716188430786133

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0076601081527769566
    2. '=' → logprob: -5.257659912109375
    3. 's' → logprob: -6.507659912109375
    4. '[' → logprob: -8.632659912109375
    5. '_' → logprob: -9.007659912109375
    6. '_rows' → logprob: -9.132659912109375
    7. '=[]' → logprob: -9.257659912109375
    8. '_data' → logprob: -9.507659912109375
    9. '_lines' → logprob: -9.632659912109375
    10. '.' → logprob: -9.757659912109375

Token 99: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.16430148482322693
    2. ' []' → logprob: -2.0393013954162598
    3. '[' → logprob: -4.41430139541626
    4. ' [' → logprob: -5.16430139541626
    5. '{}' → logprob: -6.28930139541626
    6. ' [[]' → logprob: -7.66430139541626
    7. ' {}' → logprob: -8.039301872253418
    8. '[p' → logprob: -8.414301872253418
    9. '[][]' → logprob: -9.039301872253418
    10. '['' → logprob: -9.039301872253418

Token 100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0359699726104736
    2. '<|end|>' → logprob: -1.1609699726104736
    3. ' ' → logprob: -2.1609699726104736
    4. '   ' → logprob: -2.9109699726104736
    5. ' for' → logprob: -3.1609699726104736
    6. '	for' → logprob: -3.1609699726104736
    7. '    ' → logprob: -4.2859697341918945
    8. 'for' → logprob: -4.2859697341918945
    9. '	while' → logprob: -4.2859697341918945
    10. '	   ' → logprob: -4.9109697341918945

Token 101: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16089093685150146
    2. ' for' → logprob: -1.9108909368515015
    3. '       ' → logprob: -7.785891056060791
    4. '	for' → logprob: -8.660890579223633
    5. '   ' → logprob: -9.535890579223633
    6. ' ' → logprob: -13.535890579223633
    7. 'while' → logprob: -13.535890579223633
    8. ' ' → logprob: -14.160890579223633
    9. '    ' → logprob: -14.535890579223633
    10. '	' → logprob: -14.785890579223633

Token 102: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.008203075267374516
    2. ' ' → logprob: -5.133203029632568
    3. '_' → logprob: -6.133203029632568
    4. ' i' → logprob: -9.258203506469727
    5. ' ' → logprob: -12.633203506469727
    6. ' ‌' → logprob: -13.508203506469727
    7. ' __' → logprob: -14.133203506469727
    8. ' p' → logprob: -14.633203506469727
    9. 'i' → logprob: -15.008203506469727
    10. ' ▁' → logprob: -15.133203506469727

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005990893114358187
    2. 'in' → logprob: -5.880990982055664
    3. 'range' → logprob: -6.880990982055664
    4. ' ' → logprob: -7.130990982055664
    5. ' range' → logprob: -7.130990982055664
    6. ' _' → logprob: -8.005990982055664
    7. ' i' → logprob: -8.755990982055664
    8. 'i' → logprob: -10.380990982055664
    9. '  ' → logprob: -11.005990982055664
    10. '_' → logprob: -12.380990982055664

Token 104: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03376257047057152
    2. ' range' → logprob: -3.4087624549865723
    3. 'ange' → logprob: -10.15876293182373
    4. '(range' → logprob: -10.78376293182373
    5. ' xrange' → logprob: -11.53376293182373
    6. 's' → logprob: -11.65876293182373
    7. '	range' → logprob: -11.78376293182373
    8. 'table' → logprob: -11.78376293182373
    9. 'p' → logprob: -12.03376293182373
    10. ')' → logprob: -12.15876293182373

Token 105: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.18766267597675323
    2. ' p' → logprob: -1.9376627206802368
    3. '(' → logprob: -4.437662601470947
    4. ' (' → logprob: -5.062662601470947
    5. '(s' → logprob: -5.312662601470947
    6. 'p' → logprob: -5.687662601470947
    7. ' s' → logprob: -7.562662601470947
    8. 's' → logprob: -9.937663078308105
    9. ' ' → logprob: -10.687663078308105
    10. '(
' → logprob: -12.687663078308105

Token 106: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00019173922191839665
    2. '):
' → logprob: -9.000191688537598
    3. ':' → logprob: -9.875191688537598
    4. ' ):' → logprob: -11.500191688537598
    5. ']:' → logprob: -13.125191688537598
    6. ')' → logprob: -13.500191688537598
    7. '():' → logprob: -13.875191688537598
    8. '   ' → logprob: -14.500191688537598
    9. '}:' → logprob: -14.750191688537598
    10. '):
' → logprob: -14.875191688537598

Token 107: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2280999720096588
    2. '       ' → logprob: -1.8530999422073364
    3. '<|end|>' → logprob: -3.978100061416626
    4. '   ' → logprob: -4.103099822998047
    5. '<|end|>' → logprob: -5.978099822998047
    6. '	       ' → logprob: -6.103099822998047
    7. ' ' → logprob: -6.353099822998047
    8. '	   ' → logprob: -6.353099822998047
    9. '    	   ' → logprob: -7.853099822998047
    10. '               ' → logprob: -8.103099822998047

Token 108: ' row' (ID: 5225)
  Prédit: ' table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' table' → logprob: -0.27971845865249634
    2. '           ' → logprob: -1.7797183990478516
    3. ' line' → logprob: -3.0297183990478516
    4. ' row' → logprob: -4.654718399047852
    5. ' lines' → logprob: -5.279718399047852
    6. 'table' → logprob: -5.404718399047852
    7. '   ' → logprob: -5.904718399047852
    8. '       ' → logprob: -6.279718399047852
    9. 'line' → logprob: -7.029718399047852
    10. 'row' (adapté à ' row') → logprob: -8.029718399047852

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010193271562457085
    2. '=' → logprob: -4.760193347930908
    3. '.append' → logprob: -6.760193347930908
    4. ' ' → logprob: -8.51019287109375
    5. '    ' → logprob: -9.38519287109375
    6. '.' → logprob: -10.51019287109375
    7. '   ' → logprob: -10.76019287109375
    8. '=line' → logprob: -11.01019287109375
    9. ' +=' → logprob: -11.26019287109375
    10. ' .' → logprob: -11.51019287109375

Token 110: ' lines' (ID: 8698)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.1666393280029297
    2. ' lines' → logprob: -1.2916393280029297
    3. 'list' → logprob: -1.4166393280029297
    4. 'lines' → logprob: -1.7916393280029297
    5. ' [' → logprob: -6.29163932800293
    6. '[' → logprob: -6.79163932800293
    7. ' input' → logprob: -7.54163932800293
    8. 'input' → logprob: -7.91663932800293
    9. '[]' → logprob: -9.16663932800293
    10. ' ' → logprob: -9.29163932800293

Token 111: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.9027791495318525e-05
    2. '[' → logprob: -11.625019073486328
    3. 'idx' → logprob: -11.750019073486328
    4. ' [' → logprob: -14.000019073486328
    5. '   ' → logprob: -14.375019073486328
    6. ' idx' → logprob: -14.750019073486328
    7. '	idx' → logprob: -15.625019073486328
    8. '```' → logprob: -16.000019073486328
    9. '(idx' → logprob: -17.000019073486328
    10. '[++' → logprob: -17.375019073486328

Token 112: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.014250358566641808
    2. ']' → logprob: -4.2642502784729
    3. ' ].' → logprob: -9.764250755310059
    4. '])' → logprob: -10.889250755310059
    5. '][' → logprob: -12.014250755310059
    6. ']
' → logprob: -13.514250755310059
    7. ' ]' → logprob: -13.639250755310059
    8. ').' → logprob: -15.014250755310059
    9. '.strip' → logprob: -15.389250755310059
    10. '()].' → logprob: -15.514250755310059

Token 113: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0005699523026123643
    2. 'split' → logprob: -7.500569820404053
    3. 'rstrip' → logprob: -11.000570297241211
    4. ' strip' → logprob: -15.250570297241211
    5. 'str' → logprob: -18.62557029724121
    6. '.strip' → logprob: -19.00057029724121
    7. '(strip' → logprob: -20.25057029724121
    8. '_strip' → logprob: -20.25057029724121
    9. 'replace' → logprob: -20.62557029724121
    10. 'startswith' → logprob: -21.12557029724121

Token 114: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06229166314005852
    2. '('' → logprob: -2.8122916221618652
    3. '(' → logprob: -8.312292098999023
    4. ''' → logprob: -10.437292098999023
    5. '('.')' → logprob: -10.437292098999023
    6. '()
' → logprob: -12.562292098999023
    7. '("("' → logprob: -12.562292098999023
    8. '(',' → logprob: -12.937292098999023
    9. '()[' → logprob: -12.937292098999023
    10. '())' → logprob: -13.062292098999023

Token 115: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3204836845397949
    2. '<|end|>' → logprob: -1.570483684539795
    3. '           ' → logprob: -2.945483684539795
    4. '<|end|>' → logprob: -5.820483684539795
    5. '
' → logprob: -6.070483684539795
    6. '        
' → logprob: -6.320483684539795
    7. '[idx' → logprob: -6.570483684539795
    8. '            
' → logprob: -6.695483684539795
    9. '   ' → logprob: -6.945483684539795
    10. ' 
' → logprob: -7.445483684539795

Token 116: ' idx' (ID: 14016)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015598706901073456
    2. 'idx' (adapté à ' idx') → logprob: -5.015598773956299
    3. '           ' → logprob: -5.140598773956299
    4. ' idx' → logprob: -6.390598773956299
    5. '   ' → logprob: -7.265598773956299
    6. '	idx' → logprob: -8.39059829711914
    7. '	   ' → logprob: -9.26559829711914
    8. ' ' → logprob: -9.89059829711914
    9. '        
' → logprob: -10.01559829711914
    10. '      ' → logprob: -10.39059829711914

Token 117: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2057768851518631
    2. '+=' → logprob: -1.7057769298553467
    3. '+' → logprob: -5.830776691436768
    4. ' ' → logprob: -7.330776691436768
    5. '    ' → logprob: -8.080777168273926
    6. '++' → logprob: -9.205777168273926
    7. '<|end|>' → logprob: -9.705777168273926
    8. '        ' → logprob: -9.955777168273926
    9. ']+=' → logprob: -10.205777168273926
    10. '```' → logprob: -10.330777168273926

Token 118: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001502717612311244
    2. ' ' → logprob: -6.501502513885498
    3. '   ' → logprob: -15.876502990722656
    4. '```' → logprob: -16.876502990722656
    5. 'p' → logprob: -17.689002990722656
    6. 's' → logprob: -17.751502990722656
    7. ' p' → logprob: -17.939002990722656
    8. 'len' → logprob: -18.001502990722656
    9. '    ' → logprob: -18.564002990722656
    10. '           ' → logprob: -18.626502990722656

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.812509536743164
    4. 'p' → logprob: -17.875009536743164
    5. 's' → logprob: -18.437509536743164
    6. '```' → logprob: -19.125009536743164
    7. '１' → logprob: -19.125009536743164
    8. 'len' → logprob: -19.250009536743164
    9. '`' → logprob: -19.750009536743164
    10. '  ' → logprob: -20.000009536743164

Token 120: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014528609812259674
    2. '           ' → logprob: -4.639528751373291
    3. '<|end|>' → logprob: -6.264528751373291
    4. ' ' → logprob: -6.889528751373291
    5. '        
' → logprob: -7.889528751373291
    6. '   ' → logprob: -7.889528751373291
    7. '        ' → logprob: -8.139528274536133
    8. '      ' → logprob: -8.889528274536133
    9. '
' → logprob: -9.014528274536133
    10. ',' → logprob: -9.514528274536133

Token 121: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00809416826814413
    2. '           ' → logprob: -4.883094310760498
    3. 'table' → logprob: -8.25809383392334
    4. '   ' → logprob: -9.25809383392334
    5. '	   ' → logprob: -10.00809383392334
    6. ' table' → logprob: -11.13309383392334
    7. '      ' → logprob: -11.13309383392334
    8. '	' → logprob: -11.75809383392334
    9. '<|end|>' → logprob: -11.88309383392334
    10. '        ' → logprob: -12.25809383392334

Token 122: ' table' (ID: 3293)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' (adapté à ' table') → logprob: -0.061430394649505615
    2. ' table' → logprob: -3.0614304542541504
    3. 'row' → logprob: -4.56143045425415
    4. ' row' → logprob: -8.061429977416992
    5. '   ' → logprob: -8.436429977416992
    6. 'nums' → logprob: -8.561429977416992
    7. 'for' → logprob: -8.561429977416992
    8. 't' → logprob: -8.936429977416992
    9. 'numbers' → logprob: -9.061429977416992
    10. '           ' → logprob: -9.186429977416992

Token 123: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.01848141849040985
    2. '.' → logprob: -4.018481254577637
    3. '.extend' → logprob: -8.018481254577637
    4. '.app' → logprob: -14.143481254577637
    5. ' .' → logprob: -14.143481254577637
    6. '.add' → logprob: -15.643481254577637
    7. '.ap' → logprob: -16.018482208251953
    8. '​.' → logprob: -16.018482208251953
    9. '.Append' → logprob: -16.268482208251953
    10. '.py' → logprob: -17.143482208251953

Token 124: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.18497952818870544
    2. '(list' → logprob: -2.0599794387817383
    3. '([' → logprob: -3.4349794387817383
    4. '(' → logprob: -4.934979438781738
    5. '(tuple' → logprob: -6.934979438781738
    6. 'row' → logprob: -7.309979438781738
    7. '[row' → logprob: -9.309979438781738
    8. '(line' → logprob: -9.309979438781738
    9. 'list' → logprob: -9.434979438781738
    10. ' row' → logprob: -10.934979438781738

Token 125: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.886803359724581e-05
    2. ')
' → logprob: -10.125079154968262
    3. '[' → logprob: -11.500079154968262
    4. ' )' → logprob: -11.750079154968262
    5. '       ' → logprob: -11.875079154968262
    6. '<|end|>' → logprob: -12.625079154968262
    7. '[])' → logprob: -13.250079154968262
    8. ')return' → logprob: -13.250079154968262
    9. '
' → logprob: -13.750079154968262
    10. '   ' → logprob: -14.000079154968262

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0642177164554596
    2. '<|end|>' → logprob: -3.4392178058624268
    3. '   ' → logprob: -4.189217567443848
    4. '
' → logprob: -5.314217567443848
    5. '        
' → logprob: -6.064217567443848
    6. '#' → logprob: -6.689217567443848
    7. '           ' → logprob: -6.939217567443848
    8. ' #' → logprob: -7.314217567443848
    9. 's' → logprob: -7.564217567443848
    10. ')' → logprob: -7.689217567443848

Token 127: ' totals' (ID: 92279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9885399341583252
    2. 'result' → logprob: -2.863539934158325
    3. '#' → logprob: -3.113539934158325
    4. 'max' → logprob: -3.113539934158325
    5. 'r' → logprob: -3.238539934158325
    6. '        
' → logprob: -3.613539934158325
    7. 'res' → logprob: -3.613539934158325
    8. 'score' → logprob: -3.613539934158325
    9. 'dp' → logprob: -3.613539934158325
    10. 'm' → logprob: -3.988539934158325

Token 128: '_row' (ID: 19157)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021200355142354965
    2. '=' → logprob: -3.89620041847229
    3. '_' → logprob: -7.771200180053711
    4. '[' → logprob: -9.271200180053711
    5. ' ' → logprob: -9.396200180053711
    6. 's' → logprob: -10.521200180053711
    7. '.' → logprob: -12.021200180053711
    8. ')' → logprob: -12.271200180053711
    9. '(' → logprob: -12.271200180053711
    10. ',' → logprob: -12.396200180053711

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008687848225235939
    2. '=' → logprob: -4.758687973022461
    3. 's' → logprob: -9.633687973022461
    4. '_' → logprob: -13.383687973022461
    5. ',' → logprob: -13.508687973022461
    6. ' ' → logprob: -13.633687973022461
    7. '[:]' → logprob: -14.008687973022461
    8. '[' → logprob: -14.133687973022461
    9. ' =[' → logprob: -14.883687973022461
    10. '=[]' → logprob: -15.133687973022461

Token 130: ' lines' (ID: 8698)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3713634014129639
    2. ' [' → logprob: -1.6213634014129639
    3. '['' → logprob: -1.9963634014129639
    4. ' table' → logprob: -1.9963634014129639
    5. 'table' → logprob: -2.246363401412964
    6. ' ['' → logprob: -2.746363401412964
    7. 'lines' → logprob: -3.496363401412964
    8. '[]' → logprob: -3.621363401412964
    9. ' lines' → logprob: -3.871363401412964
    10. ' []' → logprob: -4.371363639831543

Token 131: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.214019307051785e-05
    2. 'idx' → logprob: -10.625032424926758
    3. ' [' → logprob: -12.375032424926758
    4. ' idx' → logprob: -13.375032424926758
    5. '[' → logprob: -14.000032424926758
    6. '[index' → logprob: -14.625032424926758
    7. '(idx' → logprob: -15.375032424926758
    8. '	idx' → logprob: -15.625032424926758
    9. '   ' → logprob: -16.000032424926758
    10. '```' → logprob: -16.375032424926758

Token 132: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.007316019386053085
    2. '.split' → logprob: -5.3823161125183105
    3. ']' → logprob: -6.1323161125183105
    4. '.' → logprob: -8.132315635681152
    5. '.strip' → logprob: -9.132315635681152
    6. ' ].' → logprob: -9.632315635681152
    7. ''].' → logprob: -11.257315635681152
    8. ').' → logprob: -11.757315635681152
    9. '[' → logprob: -11.882315635681152
    10. '][' → logprob: -12.132315635681152

Token 133: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.011055129580199718
    2. 'strip' → logprob: -4.511054992675781
    3. ' split' → logprob: -12.136054992675781
    4. 'rstrip' → logprob: -13.386054992675781
    5. 'startswith' → logprob: -16.38605499267578
    6. 'replace' → logprob: -16.51105499267578
    7. ' strip' → logprob: -16.76105499267578
    8. 'spl' → logprob: -16.76105499267578
    9. '.split' → logprob: -17.51105499267578
    10. 's' → logprob: -17.76105499267578

Token 134: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0015600931365042925
    2. '()
' → logprob: -6.501560211181641
    3. '(' → logprob: -10.00156021118164
    4. '()\' → logprob: -12.75156021118164
    5. '()

' → logprob: -13.00156021118164
    6. ' ()' → logprob: -13.00156021118164
    7. '('' → logprob: -13.12656021118164
    8. '()[' → logprob: -13.87656021118164
    9. '()
' → logprob: -14.25156021118164
    10. '();' → logprob: -15.00156021118164

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28473520278930664
    2. '<|end|>' → logprob: -1.7847352027893066
    3. '[idx' → logprob: -3.5347352027893066
    4. 'idx' → logprob: -4.034735202789307
    5. '   ' → logprob: -4.534735202789307
    6. ' idx' → logprob: -4.909735202789307
    7. '	idx' → logprob: -5.284735202789307
    8. '```' → logprob: -6.409735202789307
    9. '<|end|>' → logprob: -6.534735202789307
    10. ' 
' → logprob: -6.534735202789307

Token 136: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.38748350739479065
    2. ' idx' → logprob: -1.1374834775924683
    3. '	idx' → logprob: -8.137483596801758
    4. '[idx' → logprob: -8.762483596801758
    5. ' 
' → logprob: -9.387483596801758
    6. '   ' → logprob: -10.387483596801758
    7. '_idx' → logprob: -10.637483596801758
    8. '(idx' → logprob: -11.762483596801758
    9. '<|end|>' → logprob: -11.887483596801758
    10. '
' → logprob: -12.887483596801758

Token 137: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.38773712515830994
    2. ' +=' → logprob: -1.1377371549606323
    3. '+' → logprob: -7.387737274169922
    4. ']+=' → logprob: -9.512737274169922
    5. '=' → logprob: -9.887737274169922
    6. ')' → logprob: -10.762737274169922
    7. '```' → logprob: -10.762737274169922
    8. '.append' → logprob: -10.887737274169922
    9. '++' → logprob: -11.012737274169922
    10. '+++' → logprob: -11.262737274169922

Token 138: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3132622241973877
    2. ' ' → logprob: -1.3132622241973877
    3. '(' → logprob: -15.938261985778809
    4. ' ' → logprob: -16.188262939453125
    5. '```' → logprob: -16.688262939453125
    6. '`' → logprob: -16.813262939453125
    7. '0' → logprob: -16.938262939453125
    8. ' 
' → logprob: -17.438262939453125
    9. '１' → logprob: -17.563262939453125
    10. ' `' → logprob: -17.688262939453125

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.659005157416686e-05
    2. ' ' → logprob: -9.625066757202148
    3. '0' → logprob: -15.375066757202148
    4. '`' → logprob: -16.37506675720215
    5. '   ' → logprob: -17.43756675720215
    6. '```' → logprob: -17.62506675720215
    7. '2' → logprob: -17.81256675720215
    8. '(' → logprob: -18.00006675720215
    9. '-' → logprob: -18.18756675720215
    10. '3' → logprob: -18.68756675720215

Token 140: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34352684020996094
    2. '<|end|>' → logprob: -1.468526840209961
    3. '
' → logprob: -3.093526840209961
    4. '   ' → logprob: -5.343526840209961
    5. '        
' → logprob: -5.718526840209961
    6. ' for' → logprob: -6.468526840209961
    7. '<|end|>' → logprob: -7.218526840209961
    8. ' if' → logprob: -7.218526840209961
    9. ' totals' → logprob: -7.593526840209961
    10. ' ' → logprob: -7.718526840209961

Token 141: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4063553214073181
    2. '<|end|>' → logprob: -1.656355381011963
    3. '
' → logprob: -2.156355381011963
    4. '   ' → logprob: -4.281355381011963
    5. '#' → logprob: -6.031355381011963
    6. '        
' → logprob: -6.281355381011963
    7. ' totals' → logprob: -6.406355381011963
    8. '<|end|>' → logprob: -6.656355381011963
    9. 'total' → logprob: -6.906355381011963
    10. ' for' → logprob: -7.031355381011963

Token 142: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0666354894638062
    2. '       ' → logprob: -1.4416354894638062
    3. '#' (adapté à ' #') → logprob: -2.5666356086730957
    4. 'total' → logprob: -2.5666356086730957
    5. 'result' → logprob: -3.0666356086730957
    6. 'scores' → logprob: -3.8166356086730957
    7. 'for' → logprob: -3.9416356086730957
    8. 'sum' → logprob: -3.9416356086730957
    9. 'results' → logprob: -4.191635608673096
    10. 't' → logprob: -4.191635608673096

Token 143: ' Parse' (ID: 26701)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.4339962005615234
    2. 'total' → logprob: -2.1839962005615234
    3. ' totals' → logprob: -2.1839962005615234
    4. 'tot' → logprob: -2.3089962005615234
    5. 'for' → logprob: -2.6839962005615234
    6. 'result' → logprob: -2.6839962005615234
    7. ' if' → logprob: -2.8089962005615234
    8. '#' → logprob: -2.8089962005615234
    9. ' total' → logprob: -3.9339962005615234
    10. ' result' → logprob: -4.058996200561523

Token 144: ' table' (ID: 3293)
  Prédit: ' totals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' totals' → logprob: -0.08177585154771805
    2. 'total' → logprob: -3.3317759037017822
    3. ' total' → logprob: -4.831775665283203
    4. 'scores' → logprob: -4.956775665283203
    5. 'tot' → logprob: -5.081775665283203
    6. '       ' → logprob: -5.456775665283203
    7. 'counts' → logprob: -5.581775665283203
    8. 't' → logprob: -6.581775665283203
    9. ' scores' → logprob: -6.706775665283203
    10. ' counts' → logprob: -6.831775665283203

Token 145: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: ' store' (ID: 4897)
  Prédit: ' totals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' totals' → logprob: -0.1107129231095314
    2. '       ' → logprob: -3.860713005065918
    3. ' rows' → logprob: -4.985713005065918
    4. ' total' → logprob: -4.985713005065918
    5. ' columns' → logprob: -4.985713005065918
    6. ' scores' → logprob: -5.110713005065918
    7. 'rows' → logprob: -5.110713005065918
    8. 'total' → logprob: -5.235713005065918
    9. 'columns' → logprob: -5.235713005065918
    10. ' counts' → logprob: -5.235713005065918

Token 147: ' known' (ID: 5542)
  Prédit: ' totals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' totals' → logprob: -0.5926725268363953
    2. 'scores' → logprob: -1.59267258644104
    3. 'columns' → logprob: -3.09267258644104
    4. ' as' → logprob: -3.46767258644104
    5. ' scores' → logprob: -4.217672348022461
    6. 'counts' → logprob: -4.217672348022461
    7. 'tot' → logprob: -4.217672348022461
    8. 'votes' → logprob: -4.342672348022461
    9. 'rows' → logprob: -4.592672348022461
    10. 'numbers' → logprob: -4.717672348022461

Token 148: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.7476879954338074
    2. 'cells' → logprob: -2.372688055038452
    3. '_values' → logprob: -2.622688055038452
    4. 'scores' → logprob: -2.997688055038452
    5. ' cells' → logprob: -3.372688055038452
    6. ' values' → logprob: -3.372688055038452
    7. '_cells' → logprob: -3.997688055038452
    8. 'numbers' → logprob: -4.122687816619873
    9. 'answers' → logprob: -4.122687816619873
    10. 'votes' → logprob: -4.372687816619873

Token 149: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4686478078365326
    2. '<|end|>' → logprob: -1.093647837638855
    3. ',' → logprob: -3.7186477184295654
    4. ' and' → logprob: -5.8436479568481445
    5. '        
' → logprob: -6.0936479568481445
    6. ' for' → logprob: -6.3436479568481445
    7. '<|end|>' → logprob: -6.3436479568481445
    8. '        ' → logprob: -6.8436479568481445
    9. '.' → logprob: -7.0936479568481445
    10. 'values' → logprob: -7.4686479568481445

Token 150: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7417835593223572
    2. 'inte' → logprob: -1.366783618927002
    3. 'ints' → logprob: -1.866783618927002
    4. ' integers' → logprob: -2.866783618927002
    5. 'float' → logprob: -3.991783618927002
    6. 'flo' → logprob: -4.366783618927002
    7. 'None' → logprob: -4.866783618927002
    8. '(int' → logprob: -5.241783618927002
    9. ' int' → logprob: -5.366783618927002
    10. ' floats' → logprob: -5.491783618927002

Token 151: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1288825422525406
    2. '<|end|>' → logprob: -2.753882646560669
    3. ',' → logprob: -3.378882646560669
    4. ' for' → logprob: -4.75388240814209
    5. '        
' → logprob: -5.75388240814209
    6. ' and' → logprob: -6.12888240814209
    7. '<|end|>' → logprob: -6.37888240814209
    8. '        ' → logprob: -6.50388240814209
    9. '   ' → logprob: -6.62888240814209
    10. 'for' → logprob: -7.12888240814209

Token 152: ' unknown' (ID: 17927)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.16282948851585388
    2. ' None' → logprob: -2.4128293991088867
    3. '#' → logprob: -3.4128293991088867
    4. '       ' → logprob: -4.037829399108887
    5. 'none' → logprob: -5.912829399108887
    6. 'for' → logprob: -6.162829399108887
    7. '        ' → logprob: -7.162829399108887
    8. ' for' → logprob: -7.287829399108887
    9. 'and' → logprob: -7.412829399108887
    10. ' and' → logprob: -7.662829399108887

Token 153: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.03661686182022095
    2. 's' → logprob: -3.786616802215576
    3. 'as' → logprob: -4.786616802215576
    4. ' ' → logprob: -6.536616802215576
    5. '<|end|>' → logprob: -6.661616802215576
    6. ',' → logprob: -7.161616802215576
    7. ' or' → logprob: -7.286616802215576
    8. '=' → logprob: -8.911617279052734
    9. ' values' → logprob: -9.286617279052734
    10. ' =' → logprob: -9.411617279052734

Token 154: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.03613073378801346
    2. ' None' → logprob: -3.411130666732788
    3. '-' → logprob: -6.161130905151367
    4. '0' → logprob: -8.786130905151367
    5. ' -' → logprob: -9.661130905151367
    6. ''' → logprob: -10.161130905151367
    7. ' ' → logprob: -10.286130905151367
    8. '(None' → logprob: -10.911130905151367
    9. '?' → logprob: -11.911130905151367
    10. '''' → logprob: -12.411130905151367

Token 155: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02066030167043209
    2. '        
' → logprob: -4.520660400390625
    3. ' for' → logprob: -5.770660400390625
    4. '
' → logprob: -6.645660400390625
    5. ',' → logprob: -6.895660400390625
    6. '   ' → logprob: -7.020660400390625
    7. ' ' → logprob: -7.520660400390625
    8. '<|end|>' → logprob: -7.520660400390625
    9. '    
' → logprob: -7.770660400390625
    10. '  
' → logprob: -7.895660400390625

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011886567808687687
    2. '        
' → logprob: -5.2618865966796875
    3. '
' → logprob: -5.8868865966796875
    4. '<|end|>' → logprob: -6.3868865966796875
    5. '        ' → logprob: -7.5118865966796875
    6. '   ' → logprob: -7.8868865966796875
    7. ' for' → logprob: -8.261886596679688
    8. ' ' → logprob: -8.636886596679688
    9. '  
' → logprob: -8.636886596679688
    10. ',' → logprob: -8.886886596679688

Token 157: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053394563496112823
    2. ' for' → logprob: -3.5533945560455322
    3. '        
' → logprob: -5.053394794464111
    4. ' ' → logprob: -5.178394794464111
    5. 'for' → logprob: -5.553394794464111
    6. '<|end|>' → logprob: -5.928394794464111
    7. '   ' → logprob: -6.178394794464111
    8. '        ' → logprob: -7.428394794464111
    9. ' 
' → logprob: -7.803394794464111
    10. '    ' → logprob: -8.053394317626953

Token 158: ' Also' (ID: 8820)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16226723790168762
    2. 'for' → logprob: -2.2872672080993652
    3. '       ' → logprob: -4.162267208099365
    4. ' table' → logprob: -4.287267208099365
    5. '
' → logprob: -4.912267208099365
    6. '        ' → logprob: -5.287267208099365
    7. '        
' → logprob: -6.662267208099365
    8. 'table' → logprob: -6.662267208099365
    9. ' values' → logprob: -7.537267208099365
    10. ' 
' → logprob: -7.912267208099365

Token 159: ' record' (ID: 3704)
  Prédit: ' totals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' totals' → logprob: -0.9352638721466064
    2. '       ' → logprob: -1.6852638721466064
    3. 'total' → logprob: -2.4352638721466064
    4. 'for' → logprob: -2.6852638721466064
    5. 'sum' → logprob: -2.8102638721466064
    6. ' for' → logprob: -3.8102638721466064
    7. 'known' → logprob: -3.8102638721466064
    8. '
' → logprob: -3.9352638721466064
    9. 'tot' → logprob: -4.185263633728027
    10. 'col' → logprob: -4.185263633728027

Token 160: ' the' (ID: 290)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.5782932043075562
    2. 'positions' → logprob: -2.0782933235168457
    3. ' unknown' → logprob: -2.0782933235168457
    4. ' positions' → logprob: -2.3282933235168457
    5. 'known' → logprob: -3.2032933235168457
    6. ' known' → logprob: -4.203293323516846
    7. ' missing' → logprob: -4.203293323516846
    8. 'missing' → logprob: -4.953293323516846
    9. 'cells' → logprob: -6.328293323516846
    10. ' cells' → logprob: -6.578293323516846

Token 161: ' unknown' (ID: 17927)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.2960047125816345
    2. 'positions' → logprob: -1.9210047721862793
    3. ' unknown' → logprob: -3.7960047721862793
    4. 'row' → logprob: -4.296004772186279
    5. 'known' → logprob: -4.421004772186279
    6. ' positions' → logprob: -4.546004772186279
    7. 'missing' → logprob: -4.671004772186279
    8. 'col' → logprob: -4.921004772186279
    9. 'rows' → logprob: -4.921004772186279
    10. 'sum' → logprob: -5.796004772186279

Token 162: ' positions' (ID: 15897)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.7101203799247742
    2. 's' → logprob: -0.8351203799247742
    3. '_cells' → logprob: -3.085120439529419
    4. '_indices' → logprob: -4.21012020111084
    5. '_indexes' → logprob: -6.08512020111084
    6. '_counts' → logprob: -6.21012020111084
    7. '_' → logprob: -6.33512020111084
    8. '_pos' → logprob: -6.46012020111084
    9. 'positions' → logprob: -6.83512020111084
    10. ' positions' → logprob: -6.96012020111084

Token 163: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1851668506860733
    2. '<|end|>' → logprob: -3.185166835784912
    3. ',' → logprob: -3.560166835784912
    4. '        ' → logprob: -3.685166835784912
    5. ' for' → logprob: -3.935166835784912
    6. 's' → logprob: -3.935166835784912
    7. '        
' → logprob: -4.810166835784912
    8. ' ' → logprob: -5.310166835784912
    9. ' ,' → logprob: -5.435166835784912
    10. '<|end|>' → logprob: -5.560166835784912

Token 164: ' order' (ID: 2569)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rows' → logprob: -1.0619620084762573
    2. 'unknown' → logprob: -1.8119620084762573
    3. 'row' → logprob: -2.311962127685547
    4. 'a' → logprob: -2.686962127685547
    5. ' a' → logprob: -2.811962127685547
    6. 'the' → logprob: -3.061962127685547
    7. 'columns' → logprob: -3.061962127685547
    8. 'each' → logprob: -3.561962127685547
    9. ' unknown' → logprob: -3.811962127685547
    10. '[]' → logprob: -3.936962127685547

Token 165: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2205236703157425
    2. '        
' → logprob: -2.5955235958099365
    3. '
' → logprob: -2.7205235958099365
    4. ' ' → logprob: -4.845523834228516
    5. ' for' → logprob: -5.095523834228516
    6. '        ' → logprob: -5.095523834228516
    7. ',' → logprob: -5.220523834228516
    8. '   ' → logprob: -5.220523834228516
    9. '    
' → logprob: -5.345523834228516
    10. '<|end|>' → logprob: -5.345523834228516

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19715067744255066
    2. '
' → logprob: -2.322150707244873
    3. '        
' → logprob: -3.197150707244873
    4. '<|end|>' → logprob: -4.447150707244873
    5. ' for' → logprob: -5.322150707244873
    6. '   ' → logprob: -5.322150707244873
    7. '  
' → logprob: -5.697150707244873
    8. '    
' → logprob: -5.697150707244873
    9. ' 
' → logprob: -5.947150707244873
    10. ' ' → logprob: -6.072150707244873

Token 167: ' data' (ID: 1238)
  Prédit: ' unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' unknown' → logprob: -0.23248134553432465
    2. 'unknown' → logprob: -1.8574813604354858
    3. '       ' → logprob: -3.8574812412261963
    4. ' positions' → logprob: -4.232481479644775
    5. '        
' → logprob: -6.357481479644775
    6. ' for' → logprob: -6.482481479644775
    7. 'positions' → logprob: -6.482481479644775
    8. ' u' → logprob: -6.607481479644775
    9. ' unk' → logprob: -6.732481479644775
    10. ' known' → logprob: -6.982481479644775

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014384318143129349
    2. '=' → logprob: -4.2643842697143555
    3. '_' → logprob: -8.514384269714355
    4. 's' → logprob: -12.139384269714355
    5. ',' → logprob: -12.264384269714355
    6. '[' → logprob: -12.889384269714355
    7. '=[]' → logprob: -13.139384269714355
    8. '[]' → logprob: -13.889384269714355
    9. '_positions' → logprob: -14.139384269714355
    10. 'd' → logprob: -14.514384269714355

Token 169: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.1715562343597412
    2. '[]' → logprob: -1.9215562343597412
    3. ' [' → logprob: -4.92155647277832
    4. '[' → logprob: -5.54655647277832
    5. ' [[]' → logprob: -10.92155647277832
    6. ' []
' → logprob: -11.54655647277832
    7. ' ' → logprob: -11.54655647277832
    8. ' [],' → logprob: -11.79655647277832
    9. '[],' → logprob: -11.79655647277832
    10. '[][]' → logprob: -12.04655647277832

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10870055854320526
    2. ' for' → logprob: -2.7337005138397217
    3. '[' → logprob: -4.358700752258301
    4. 'for' → logprob: -4.983700752258301
    5. '   ' → logprob: -5.108700752258301
    6. '<|end|>' → logprob: -5.608700752258301
    7. ' ' → logprob: -5.858700752258301
    8. '        ' → logprob: -7.108700752258301
    9. '[
' → logprob: -7.108700752258301
    10. ',' → logprob: -7.108700752258301

Token 171: ' unknown' (ID: 17927)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43252262473106384
    2. '[' → logprob: -1.4325226545333862
    3. ' for' → logprob: -2.9325225353240967
    4. 'for' → logprob: -3.1825225353240967
    5. ' 
' → logprob: -5.432522773742676
    6. '[]' → logprob: -5.557522773742676
    7. '[
' → logprob: -6.057522773742676
    8. ' [
' → logprob: -6.557522773742676
    9. ' [' → logprob: -6.682522773742676
    10. '    ' → logprob: -6.932522773742676

Token 172: 's' (ID: 82)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.3159347176551819
    2. 's' → logprob: -1.315934658050537
    3. '_pos' → logprob: -6.690934658050537
    4. '_' → logprob: -6.815934658050537
    5. '_indices' → logprob: -8.690935134887695
    6. '_s' → logprob: -10.190935134887695
    7. '_indexes' → logprob: -10.565935134887695
    8. '_idxs' → logprob: -10.815935134887695
    9. '_rows' → logprob: -11.315935134887695
    10. ' =' → logprob: -11.315935134887695

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27466002106666565
    2. '_positions' → logprob: -1.5246599912643433
    3. '=' → logprob: -3.899660110473633
    4. '_' → logprob: -6.399660110473633
    5. '_pos' → logprob: -8.024660110473633
    6. '=[]' → logprob: -9.649660110473633
    7. '_indices' → logprob: -10.024660110473633
    8. 'positions' → logprob: -10.649660110473633
    9. 'Positions' → logprob: -11.024660110473633
    10. ',' → logprob: -11.149660110473633

Token 174: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.0038840349297970533
    2. '[]' → logprob: -5.6288838386535645
    3. ' ' → logprob: -8.878884315490723
    4. ' [' → logprob: -9.128884315490723
    5. '[' → logprob: -10.628884315490723
    6. ' []
' → logprob: -11.503884315490723
    7. ' [],' → logprob: -14.753884315490723
    8. ' [];' → logprob: -15.128884315490723
    9. ' []

' → logprob: -15.253884315490723
    10. ' [
' → logprob: -15.753884315490723

Token 175: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.673990786075592
    2. '       ' → logprob: -1.1739907264709473
    3. ' ' → logprob: -2.5489907264709473
    4. '   ' → logprob: -3.0489907264709473
    5. ' =' → logprob: -4.423990726470947
    6. 'for' → logprob: -4.548990726470947
    7. ' 
' → logprob: -4.798990726470947
    8. '        
' → logprob: -5.048990726470947
    9. '\' → logprob: -5.923990726470947
    10. '[' → logprob: -5.923990726470947

Token 176: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3014877438545227
    2. 'for' (adapté à ' for') → logprob: -1.676487684249878
    3. '       ' → logprob: -3.051487684249878
    4. ' ' → logprob: -4.301487922668457
    5. ' 
' → logprob: -5.051487922668457
    6. '   ' → logprob: -6.051487922668457
    7. '	for' → logprob: -6.801487922668457
    8. '        
' → logprob: -7.551487922668457
    9. '[' → logprob: -7.676487922668457
    10. '
' → logprob: -8.176487922668457

Token 177: ' i' (ID: 575)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6545256972312927
    2. 'i' → logprob: -1.0295257568359375
    3. ' i' → logprob: -2.5295257568359375
    4. ' r' → logprob: -3.4045257568359375
    5. 'row' → logprob: -4.7795257568359375
    6. ' row' → logprob: -6.4045257568359375
    7. 'p' → logprob: -9.404525756835938
    8. 'y' → logprob: -11.654525756835938
    9. 'pr' → logprob: -11.654525756835938
    10. ' ' → logprob: -11.654525756835938

Token 178: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20510601997375488
    2. 'in' → logprob: -1.7051060199737549
    3. ',' → logprob: -6.330105781555176
    4. ' ' → logprob: -6.580105781555176
    5. 'n' → logprob: -7.830105781555176
    6. ' ,' → logprob: -9.455105781555176
    7. ' n' → logprob: -11.330105781555176
    8. '	in' → logprob: -11.955105781555176
    9. ' i' → logprob: -12.330105781555176
    10. '_' → logprob: -12.955105781555176

Token 179: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20142202079296112
    2. ' range' → logprob: -1.7014219760894775
    3. ' ' → logprob: -12.826421737670898
    4. '(range' → logprob: -13.326421737670898
    5. '	range' → logprob: -13.451421737670898
    6. '   ' → logprob: -13.701421737670898
    7. 'ange' → logprob: -14.826421737670898
    8. ' xrange' → logprob: -15.076421737670898
    9. '  ' → logprob: -15.201421737670898
    10. 'rang' → logprob: -15.576421737670898

Token 180: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3728559911251068
    2. ' p' → logprob: -1.2478560209274292
    3. '(p' → logprob: -3.7478559017181396
    4. 'len' → logprob: -8.497856140136719
    5. '(len' → logprob: -8.997856140136719
    6. ' len' → logprob: -9.247856140136719
    7. ')' → logprob: -10.247856140136719
    8. '(' → logprob: -10.247856140136719
    9. ' (' → logprob: -10.997856140136719
    10. '   ' → logprob: -11.372856140136719

Token 181: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12713776528835297
    2. '):
' → logprob: -2.1271376609802246
    3. '   ' → logprob: -9.627138137817383
    4. '+' → logprob: -9.752138137817383
    5. ' ):' → logprob: -10.377138137817383
    6. ')' → logprob: -10.752138137817383
    7. ':' → logprob: -11.002138137817383
    8. '       ' → logprob: -12.502138137817383
    9. '):
' → logprob: -12.752138137817383
    10. ' ):
' → logprob: -13.002138137817383

Token 182: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5897576212882996
    2. '       ' → logprob: -1.4647576808929443
    3. ':' → logprob: -1.5897576808929443
    4. '    ' → logprob: -5.339757442474365
    5. ' ' → logprob: -6.714757442474365
    6. '<|end|>' → logprob: -7.089757442474365
    7. ' :' → logprob: -7.214757442474365
    8. ':
' → logprob: -7.214757442474365
    9. '[' → logprob: -7.464757442474365
    10. '           ' → logprob: -8.214757919311523

Token 183: ' row' (ID: 5225)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.7903828024864197
    2. ' ' → logprob: -1.1653828620910645
    3. ' for' → logprob: -2.5403828620910645
    4. '   ' → logprob: -2.7903828620910645
    5. ' row' → logprob: -3.2903828620910645
    6. '    ' → logprob: -3.5403828620910645
    7. 'data' → logprob: -4.2903828620910645
    8. '       ' → logprob: -4.9153828620910645
    9. ' []' → logprob: -6.1653828620910645
    10. ' ' → logprob: -6.9153828620910645

Token 184: '_data' (ID: 3537)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.29753538966178894
    2. ' =' → logprob: -1.5475354194641113
    3. '=' → logprob: -3.1725354194641113
    4. '.' → logprob: -6.547535419464111
    5. '.extend' → logprob: -7.797535419464111
    6. '=[]' → logprob: -8.172534942626953
    7. ' ' → logprob: -9.297534942626953
    8. ' +=' → logprob: -9.422534942626953
    9. ',' → logprob: -9.672534942626953
    10. ':' → logprob: -10.172534942626953

Token 185: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.7641487717628479
    2. ' =' → logprob: -1.2641487121582031
    3. '=' → logprob: -1.3891487121582031
    4. '.' → logprob: -7.139148712158203
    5. '=[]' → logprob: -7.264148712158203
    6. '.extend' → logprob: -7.514148712158203
    7. ' +=' → logprob: -9.139148712158203
    8. ')' → logprob: -9.264148712158203
    9. ' ' → logprob: -9.514148712158203
    10. ',' → logprob: -10.014148712158203

Token 186: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.07892558723688126
    2. ' []' → logprob: -2.578925609588623
    3. '[' → logprob: -10.453925132751465
    4. '[]
' → logprob: -13.078925132751465
    5. ' [' → logprob: -13.453925132751465
    6. '[]>' → logprob: -13.828925132751465
    7. ' ' → logprob: -13.828925132751465
    8. '[],' → logprob: -14.578925132751465
    9. '[]}' → logprob: -14.578925132751465
    10. ' []
' → logprob: -15.453925132751465

Token 187: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1478962898254395
    2. ' ' → logprob: -1.3978962898254395
    3. ' for' → logprob: -1.3978962898254395
    4. '       ' → logprob: -2.6478962898254395
    5. '               ' → logprob: -3.0228962898254395
    6. '        ' → logprob: -4.3978962898254395
    7. '            ' → logprob: -4.3978962898254395
    8. '    ' → logprob: -4.7728962898254395
    9. '[' → logprob: -4.7728962898254395
    10. '   ' → logprob: -5.0228962898254395

Token 188: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15905633568763733
    2. 'for' (adapté à ' for') → logprob: -2.0340564250946045
    3. ' ' → logprob: -4.659056186676025
    4. '       ' → logprob: -5.659056186676025
    5. '	for' → logprob: -6.284056186676025
    6. '   ' → logprob: -7.159056186676025
    7. '    ' → logprob: -8.659056663513184
    8. '	' → logprob: -9.034056663513184
    9. '           ' → logprob: -9.034056663513184
    10. ' ' → logprob: -9.284056663513184

Token 189: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5232294201850891
    2. ' j' → logprob: -0.8982294201850891
    3. '    ' → logprob: -10.148229598999023
    4. '   ' → logprob: -10.648229598999023
    5. ' ' → logprob: -11.398229598999023
    6. ' range' → logprob: -12.023229598999023
    7. 'range' → logprob: -12.273229598999023
    8. '	j' → logprob: -12.398229598999023
    9. '  ' → logprob: -12.523229598999023
    10. '```' → logprob: -12.898229598999023

Token 190: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1276632398366928
    2. 'in' → logprob: -2.1276631355285645
    3. ' ' → logprob: -7.5026631355285645
    4. '            ' → logprob: -10.377663612365723
    5. '	in' → logprob: -10.502663612365723
    6. '<|end|>' → logprob: -10.627663612365723
    7. 'import' → logprob: -11.377663612365723
    8. ')' → logprob: -12.127663612365723
    9. ',' → logprob: -12.127663612365723
    10. '    ' → logprob: -12.252663612365723

Token 191: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25193482637405396
    2. ' range' → logprob: -1.5019347667694092
    3. ' ' → logprob: -13.126935005187988
    4. '(range' → logprob: -13.626935005187988
    5. '   ' → logprob: -14.251935005187988
    6. ')' → logprob: -14.501935005187988
    7. 'table' → logprob: -15.126935005187988
    8. '    ' → logprob: -15.251935005187988
    9. 's' → logprob: -15.376935005187988
    10. ' table' → logprob: -15.876935005187988

Token 192: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.21531721949577332
    2. 'range' → logprob: -2.2153172492980957
    3. 's' → logprob: -2.7153172492980957
    4. '(p' → logprob: -5.090317249298096
    5. '(range' → logprob: -5.090317249298096
    6. ' range' → logprob: -5.215317249298096
    7. 'p' → logprob: -8.465316772460938
    8. '   ' → logprob: -9.215316772460938
    9. ')' → logprob: -9.340316772460938
    10. ' s' → logprob: -9.590316772460938

Token 193: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4293425977230072
    2. '):
' → logprob: -1.0543426275253296
    3. ')' → logprob: -7.679342746734619
    4. '           ' → logprob: -9.429342269897461
    5. '):
' → logprob: -10.679342269897461
    6. ':' → logprob: -10.929342269897461
    7. ']:' → logprob: -11.179342269897461
    8. '               ' → logprob: -11.554342269897461
    9. '):

' → logprob: -11.679342269897461
    10. '       ' → logprob: -11.929342269897461

Token 194: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08677136898040771
    2. ' ' → logprob: -2.7117714881896973
    3. '                
' → logprob: -5.086771488189697
    4. '            ' → logprob: -6.086771488189697
    5. '                ' → logprob: -6.336771488189697
    6. '           ' → logprob: -6.586771488189697
    7. ':' → logprob: -6.961771488189697
    8. '             ' → logprob: -7.711771488189697
    9. ',' → logprob: -7.836771488189697
    10. '              ' → logprob: -8.086771011352539

Token 195: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15676085650920868
    2. '                   ' → logprob: -2.0317609310150146
    3. ' if' → logprob: -5.2817606925964355
    4. '               ' → logprob: -6.1567606925964355
    5. '                    ' → logprob: -6.5317606925964355
    6. ' token' → logprob: -6.7817606925964355
    7. 'token' → logprob: -7.1567606925964355
    8. '                ' → logprob: -7.4067606925964355
    9. ' 
' → logprob: -7.6567606925964355
    10. ' ' → logprob: -7.9067606925964355

Token 196: ' table' (ID: 3293)
  Prédit: ' table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' table' → logprob: -0.22603869438171387
    2. 'table' → logprob: -1.6010386943817139
    3. ' lines' → logprob: -7.476038932800293
    4. 'lines' → logprob: -10.601038932800293
    5. '	table' → logprob: -10.851038932800293
    6. '   ' → logprob: -12.476038932800293
    7. '(table' → logprob: -12.851038932800293
    8. ' ' → logprob: -13.226038932800293
    9. 'tables' → logprob: -13.351038932800293
    10. ' tables' → logprob: -13.476038932800293

Token 197: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1279553291387856e-05
    2. '[j' → logprob: -12.000011444091797
    3. '[I' → logprob: -13.375011444091797
    4. '[' → logprob: -13.375011444091797
    5. ' [' → logprob: -14.375011444091797
    6. '```' → logprob: -14.875011444091797
    7. '][' → logprob: -15.000011444091797
    8. '[int' → logprob: -15.750011444091797
    9. 'i' → logprob: -16.500011444091797
    10. '
' → logprob: -16.625011444091797

Token 198: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6359091997146606
    2. '][' → logprob: -0.8859091997146606
    3. '[j' → logprob: -2.885909080505371
    4. '[' → logprob: -6.510909080505371
    5. '[I' → logprob: -7.760909080505371
    6. ')[' → logprob: -8.510909080505371
    7. ']' → logprob: -9.260909080505371
    8. ' [' → logprob: -10.760909080505371
    9. '[ii' → logprob: -11.010909080505371
    10. '}[' → logprob: -11.010909080505371

Token 199: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.2200749754119897e-06
    2. ' j' → logprob: -13.500001907348633
    3. '	j' → logprob: -15.000001907348633
    4. '[j' → logprob: -15.375001907348633
    5. '```' → logprob: -16.125001907348633
    6. '   ' → logprob: -17.000001907348633
    7. ' ' → logprob: -17.250001907348633
    8. ',j' → logprob: -17.250001907348633
    9. '
' → logprob: -17.500001907348633
    10. '$j' → logprob: -17.625001907348633

Token 200: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08355175703763962
    2. ']==' → logprob: -2.5835516452789307
    3. '==' → logprob: -6.08355188369751
    4. ']=='' → logprob: -6.33355188369751
    5. ' ==' → logprob: -7.83355188369751
    6. '[' → logprob: -9.083551406860352
    7. '=='' → logprob: -10.833551406860352
    8. ' ]' → logprob: -10.958551406860352
    9. ']=="' → logprob: -11.333551406860352
    10. '']' → logprob: -11.958551406860352

Token 201: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08736741542816162
    2. ' ==' → logprob: -2.587367534637451
    3. '=='' → logprob: -5.212367534637451
    4. '[' → logprob: -6.087367534637451
    5. ']==' → logprob: -8.337367057800293
    6. 'isdigit' → logprob: -9.087367057800293
    7. '.is' → logprob: -9.212367057800293
    8. '=' → logprob: -9.712367057800293
    9. '.startswith' → logprob: -10.462367057800293
    10. ']' → logprob: -10.587367057800293

Token 202: ' '?' (ID: 73818)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.760025143623352
    2. ''?' → logprob: -0.760025143623352
    3. ''*' → logprob: -3.5100250244140625
    4. ''.' → logprob: -4.5100250244140625
    5. ''-' → logprob: -4.7600250244140625
    6. '"' → logprob: -5.1350250244140625
    7. '"?' → logprob: -5.8850250244140625
    8. ''x' → logprob: -6.1350250244140625
    9. ''#' → logprob: -6.6350250244140625
    10. ''A' → logprob: -8.260025024414062

Token 203: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.421077698469162
    2. '':' → logprob: -1.4210777282714844
    3. ''' → logprob: -2.2960777282714844
    4. ''):
' → logprob: -6.671077728271484
    5. '':
' → logprob: -8.671077728271484
    6. '')' → logprob: -10.296077728271484
    7. ''):' → logprob: -10.921077728271484
    8. '':

' → logprob: -11.171077728271484
    9. ' '' → logprob: -11.421077728271484
    10. '):
' → logprob: -12.046077728271484

Token 204: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04511982202529907
    2. ' row' → logprob: -3.4201197624206543
    3. 'row' → logprob: -5.295119762420654
    4. ' None' → logprob: -6.045119762420654
    5. '               ' → logprob: -6.420119762420654
    6. '                       ' → logprob: -7.420119762420654
    7. 'None' → logprob: -7.920119762420654
    8. '                    ' → logprob: -8.420120239257812
    9. ' ' → logprob: -8.545120239257812
    10. '                    
' → logprob: -8.795120239257812

Token 205: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.008295880630612373
    2. 'row' (adapté à ' row') → logprob: -4.883296012878418
    3. ' None' → logprob: -7.383296012878418
    4. 'None' → logprob: -9.883296012878418
    5. '                   ' → logprob: -11.883296012878418
    6. '	row' → logprob: -12.633296012878418
    7. ' ' → logprob: -12.758296012878418
    8. ' ' → logprob: -14.008296012878418
    9. '                    ' → logprob: -14.633296012878418
    10. '                ' → logprob: -14.758296012878418

Token 206: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -5.796184723294573e-06
    2. '_' → logprob: -12.125005722045898
    3. ' _' → logprob: -16.1250057220459
    4. '_unknown' → logprob: -16.2500057220459
    5. 's' → logprob: -17.2500057220459
    6. 'unknown' → logprob: -17.7500057220459
    7. '_DATA' → logprob: -18.0000057220459
    8. '_datas' → logprob: -18.6250057220459
    9. '_Data' → logprob: -18.7500057220459
    10. ''_' → logprob: -18.7500057220459

Token 207: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0015105740167200565
    2. '.' → logprob: -6.5015106201171875
    3. ' .' → logprob: -12.501510620117188
    4. '.app' → logprob: -12.876510620117188
    5. '=' → logprob: -13.876510620117188
    6. ' =' → logprob: -14.626510620117188
    7. 'append' → logprob: -15.001510620117188
    8. '.ap' → logprob: -15.376510620117188
    9. '.extend' → logprob: -16.876510620117188
    10. '.=' → logprob: -17.626510620117188

Token 208: '(None' (ID: 65126)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.06263670325279236
    2. ' None' → logprob: -2.812636613845825
    3. '(None' → logprob: -7.312636852264404
    4. '_None' → logprob: -13.937636375427246
    5. ',None' → logprob: -14.562636375427246
    6. '=None' → logprob: -15.187636375427246
    7. '.None' → logprob: -15.812636375427246
    8. '   ' → logprob: -16.937637329101562
    9. '(' → logprob: -17.187637329101562
    10. '_none' → logprob: -17.812637329101562

Token 209: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.864272967912257e-05
    2. ')
' → logprob: -9.875088691711426
    3. '               ' → logprob: -10.375088691711426
    4. '                   ' → logprob: -13.000088691711426
    5. ' )' → logprob: -13.125088691711426
    6. '           ' → logprob: -14.000088691711426
    7. ',' → logprob: -15.250088691711426
    8. '),' → logprob: -15.625088691711426
    9. 'else' → logprob: -16.50008773803711
    10. '                       ' → logprob: -16.75008773803711

Token 210: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003963112831115723
    2. 'else' → logprob: -6.003962993621826
    3. ' else' → logprob: -7.128962993621826
    4. ')' → logprob: -8.003963470458984
    5. '                   ' → logprob: -8.628963470458984
    6. '                ' → logprob: -9.878963470458984
    7. '           ' → logprob: -10.128963470458984
    8. '              ' → logprob: -10.503963470458984
    9. '<|end|>' → logprob: -11.378963470458984
    10. '                
' → logprob: -11.753963470458984

Token 211: ' unknown' (ID: 17927)
  Prédit: ' unknown'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unknown' → logprob: -0.3150947690010071
    2. 'unknown' (adapté à ' unknown') → logprob: -1.3150947093963623
    3. '                   ' → logprob: -6.315094947814941
    4. '                       ' → logprob: -12.190094947814941
    5. '               ' → logprob: -12.440094947814941
    6. '                    ' → logprob: -12.815094947814941
    7. '_unknown' → logprob: -13.440094947814941
    8. '                    
' → logprob: -13.565094947814941
    9. '   ' → logprob: -13.565094947814941
    10. '           ' → logprob: -13.690094947814941

Token 212: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: 0.0
    2. '_positions' → logprob: -18.625
    3. 'positions' → logprob: -19.625
    4. '_s' → logprob: -21.625
    5. 'с' → logprob: -21.875
    6. '_' → logprob: -22.125
    7. '```' → logprob: -22.375
    8. ' s' → logprob: -22.5
    9. '(s' → logprob: -22.5
    10. '<|end|>' → logprob: -22.75

Token 213: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002997120900545269
    2. '.' → logprob: -8.125299453735352
    3. '.setdefault' → logprob: -13.625299453735352
    4. '.extend' → logprob: -14.000299453735352
    5. '.push' → logprob: -14.625299453735352
    6. '.add' → logprob: -14.750299453735352
    7. '.app' → logprob: -15.375299453735352
    8. '.Append' → logprob: -15.750299453735352
    9. ').' → logprob: -16.12529945373535
    10. '<|end|>' → logprob: -16.25029945373535

Token 214: '((' (ID: 2054)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.06336906552314758
    2. '(' → logprob: -2.813369035720825
    3. ' (' → logprob: -6.813369274139404
    4. '(j' → logprob: -8.813368797302246
    5. '(p' → logprob: -8.938368797302246
    6. '((' → logprob: -11.313368797302246
    7. '(I' → logprob: -12.438368797302246
    8. '(ii' → logprob: -13.438368797302246
    9. '(len' → logprob: -13.563368797302246
    10. '(s' → logprob: -14.188368797302246

Token 215: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.9623810658231378e-05
    2. ' i' → logprob: -10.875020027160645
    3. '   ' → logprob: -14.625020027160645
    4. '	i' → logprob: -16.250019073486328
    5. ')' → logprob: -16.750019073486328
    6. ')i' → logprob: -17.125019073486328
    7. '
' → logprob: -17.250019073486328
    8. ' ' → logprob: -17.375019073486328
    9. '(i' → logprob: -17.875019073486328
    10. ',i' → logprob: -18.000019073486328

Token 216: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008832250721752644
    2. ',j' → logprob: -4.7588324546813965
    3. ' ,' → logprob: -8.633831977844238
    4. ',
' → logprob: -10.633831977844238
    5. ')' → logprob: -11.508831977844238
    6. ' ' → logprob: -13.883831977844238
    7. '‌,' → logprob: -14.133831977844238
    8. ',

' → logprob: -14.133831977844238
    9. '<|end|>' → logprob: -14.508831977844238
    10. ',)' → logprob: -15.508831977844238

Token 217: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.002140267053619027
    2. ')' → logprob: -6.377140045166016
    3. '))
' → logprob: -7.752140045166016
    4. ')))' → logprob: -13.252140045166016
    5. ' ))' → logprob: -13.377140045166016
    6. ',' → logprob: -13.627140045166016
    7. '),' → logprob: -13.627140045166016
    8. ')
' → logprob: -13.627140045166016
    9. '));' → logprob: -15.127140045166016
    10. '))

' → logprob: -15.127140045166016

Token 218: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01769106276333332
    2. 'else' → logprob: -4.142691135406494
    3. ' else' → logprob: -6.517691135406494
    4. ')' → logprob: -9.642690658569336
    5. ' ' → logprob: -10.892690658569336
    6. '                ' → logprob: -11.017690658569336
    7. '              ' → logprob: -11.642690658569336
    8. 'elif' → logprob: -11.642690658569336
    9. 'continue' → logprob: -11.767690658569336
    10. '           ' → logprob: -11.767690658569336

Token 219: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.13472014665603638
    2. ' else' → logprob: -2.3847200870513916
    3. '               ' → logprob: -3.3847200870513916
    4. '           ' → logprob: -10.759719848632812
    5. 'elif' → logprob: -12.009719848632812
    6. '	else' → logprob: -12.634719848632812
    7. ' 
' → logprob: -13.634719848632812
    8. '   ' → logprob: -13.759719848632812
    9. '       ' → logprob: -14.259719848632812
    10. ' ' → logprob: -14.384719848632812

Token 220: ':
' (ID: 734)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.2568013072013855
    2. '                   ' → logprob: -2.3818013668060303
    3. ':' → logprob: -3.1318013668060303
    4. ',' → logprob: -3.7568013668060303
    5. 'row' → logprob: -4.006801128387451
    6. '               ' → logprob: -4.631801128387451
    7. ' ' → logprob: -5.006801128387451
    8. ',row' → logprob: -5.006801128387451
    9. '	row' → logprob: -5.256801128387451
    10. ':
' → logprob: -5.256801128387451

Token 221: '                   ' (ID: 699)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.07309427112340927
    2. '                   ' → logprob: -2.823094367980957
    3. 'row' → logprob: -5.698094367980957
    4. ' ' → logprob: -6.073094367980957
    5. '               ' → logprob: -6.073094367980957
    6. '                ' → logprob: -6.698094367980957
    7. ' ' → logprob: -6.823094367980957
    8. '                    ' → logprob: -8.823094367980957
    9. '           ' → logprob: -8.948094367980957
    10. '   ' → logprob: -9.448094367980957

Token 222: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.5766742825508118
    2. 'row' (adapté à ' row') → logprob: -0.8266742825508118
    3. 'int' → logprob: -7.326674461364746
    4. ' int' → logprob: -9.576674461364746
    5. '                   ' → logprob: -13.201674461364746
    6. ' ' → logprob: -13.451674461364746
    7. '	row' → logprob: -13.451674461364746
    8. '   ' → logprob: -14.576674461364746
    9. ',row' → logprob: -14.576674461364746
    10. '           ' → logprob: -15.451674461364746

Token 223: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -8.2994620242971e-06
    2. 'data' → logprob: -13.000008583068848
    3. 'int' → logprob: -13.625008583068848
    4. ' _' → logprob: -13.625008583068848
    5. '_' → logprob: -14.250008583068848
    6. 's' → logprob: -14.500008583068848
    7. '.append' → logprob: -14.625008583068848
    8. '[_' → logprob: -15.125008583068848
    9. '_datas' → logprob: -15.125008583068848
    10. ')' → logprob: -15.750008583068848

Token 224: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00030078491545282304
    2. '.' → logprob: -8.625300407409668
    3. '[' → logprob: -10.375300407409668
    4. '=' → logprob: -10.375300407409668
    5. 'append' → logprob: -10.375300407409668
    6. '[int' → logprob: -11.750300407409668
    7. '[i' → logprob: -12.250300407409668
    8. ')' → logprob: -12.625300407409668
    9. '.app' → logprob: -12.875300407409668
    10. '[
' → logprob: -13.125300407409668

Token 225: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014164801687002182
    2. ' int' → logprob: -4.264164924621582
    3. '(int' → logprob: -13.639164924621582
    4. '[int' → logprob: -17.514163970947266
    5. ',int' → logprob: -17.764163970947266
    6. '=int' → logprob: -18.014163970947266
    7. '<int' → logprob: -18.014163970947266
    8. ':int' → logprob: -18.639163970947266
    9. '	int' → logprob: -18.764163970947266
    10. 'in' → logprob: -19.514163970947266

Token 226: '(table' (ID: 28523)
  Prédit: '(table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(table' → logprob: -0.0005692371050827205
    2. '(' → logprob: -7.6255693435668945
    3. 'table' → logprob: -10.125569343566895
    4. ')table' → logprob: -10.250569343566895
    5. ')' → logprob: -12.625569343566895
    6. ')(' → logprob: -13.750569343566895
    7. '(
' → logprob: -14.000569343566895
    8. ' (' → logprob: -15.250569343566895
    9. '(

' → logprob: -15.250569343566895
    10. ' table' → logprob: -17.000568389892578

Token 227: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.875001907348633
    3. '[j' → logprob: -15.750001907348633
    4. 'i' → logprob: -16.250001907348633
    5. ')' → logprob: -16.250001907348633
    6. '[I' → logprob: -16.250001907348633
    7. ' [' → logprob: -18.375001907348633
    8. '{i' → logprob: -18.500001907348633
    9. '(i' → logprob: -19.000001907348633
    10. ')i' → logprob: -19.375001907348633

Token 228: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003955274820327759
    2. '[i' → logprob: -5.878955364227295
    3. '[j' → logprob: -7.503955364227295
    4. ']' → logprob: -7.878955364227295
    5. '[' → logprob: -9.378954887390137
    6. ' ][' → logprob: -9.753954887390137
    7. ')' → logprob: -10.878954887390137
    8. ')[' → logprob: -11.003954887390137
    9. '])' → logprob: -11.378954887390137
    10. ')][' → logprob: -12.003954887390137

Token 229: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0018605689983814955
    2. 'i' → logprob: -6.376860618591309
    3. '][' → logprob: -9.126860618591309
    4. ' j' → logprob: -11.001860618591309
    5. '[j' → logprob: -11.001860618591309
    6. ']' → logprob: -12.376860618591309
    7. '   ' → logprob: -13.001860618591309
    8. '])' → logprob: -13.126860618591309
    9. ')' → logprob: -13.251860618591309
    10. '```' → logprob: -13.501860618591309

Token 230: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0029140000697225332
    2. ']))' → logprob: -6.127913951873779
    3. ')' → logprob: -7.627913951873779
    4. ')))' → logprob: -8.877914428710938
    5. '])' → logprob: -9.752914428710938
    6. ' ))' → logprob: -11.252914428710938
    7. '']))' → logprob: -11.502914428710938
    8. '))
' → logprob: -11.877914428710938
    9. '}))' → logprob: -12.502914428710938
    10. ']' → logprob: -12.627914428710938

Token 231: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.43849635124206543
    2. '           ' → logprob: -1.5634963512420654
    3. ')' → logprob: -2.3134963512420654
    4. '            ' → logprob: -4.3134965896606445
    5. ' ' → logprob: -4.6884965896606445
    6. '<|end|>' → logprob: -5.3134965896606445
    7. '                ' → logprob: -5.8134965896606445
    8. '       ' → logprob: -6.0634965896606445
    9. '        ' → logprob: -6.3134965896606445
    10. '		' → logprob: -6.4384965896606445

Token 232: ' row' (ID: 5225)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4956512749195099
    2. '       ' → logprob: -0.9956512451171875
    3. 'else' → logprob: -4.1206512451171875
    4. ' else' → logprob: -5.7456512451171875
    5. ' ' → logprob: -8.120651245117188
    6. 'data' → logprob: -8.245651245117188
    7. '   ' → logprob: -8.245651245117188
    8. '               ' → logprob: -8.495651245117188
    9. 'return' → logprob: -8.995651245117188
    10. '        ' → logprob: -9.120651245117188

Token 233: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -1.4855663721391466e-05
    2. '.append' → logprob: -11.250015258789062
    3. 'data' → logprob: -14.125015258789062
    4. '_' → logprob: -14.500015258789062
    5. 's' → logprob: -15.875015258789062
    6. '   ' → logprob: -17.250015258789062
    7. 'append' → logprob: -17.375015258789062
    8. '_d' → logprob: -17.500015258789062
    9. '_append' → logprob: -17.875015258789062
    10. '_datas' → logprob: -18.000015258789062

Token 234: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.048622336238622665
    2. '.' → logprob: -3.0486223697662354
    3. ')' → logprob: -11.048622131347656
    4. '.extend' → logprob: -11.798622131347656
    5. 'append' → logprob: -12.048622131347656
    6. ' .' → logprob: -12.423622131347656
    7. '.app' → logprob: -15.048622131347656
    8. '.ap' → logprob: -15.173622131347656
    9. '=' → logprob: -15.298622131347656
    10. ',' → logprob: -15.548622131347656

Token 235: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.030570201575756073
    2. '(' → logprob: -4.030570030212402
    3. '(None' → logprob: -4.530570030212402
    4. '(t' → logprob: -7.530570030212402
    5. 'int' → logprob: -7.905570030212402
    6. '(sum' → logprob: -8.030570030212402
    7. 'None' → logprob: -8.405570030212402
    8. '0' → logprob: -9.905570030212402
    9. '(-' → logprob: -10.405570030212402
    10. '(
' → logprob: -11.780570030212402

Token 236: '(table' (ID: 28523)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -13.125003814697266
    3. 'tot' → logprob: -13.625003814697266
    4. 't' → logprob: -15.000003814697266
    5. ')' → logprob: -15.875003814697266
    6. ')(' → logprob: -17.125003814697266
    7. ' (' → logprob: -17.125003814697266
    8. '	t' → logprob: -17.875003814697266
    9. ' totals' → logprob: -18.000003814697266
    10. '(
' → logprob: -18.125003814697266

Token 237: '[i' (ID: 1768)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.003401213325560093
    2. 's' → logprob: -6.628401279449463
    3. ')' → logprob: -7.128401279449463
    4. '[t' → logprob: -7.503401279449463
    5. 'tot' → logprob: -7.753401279449463
    6. '(' → logprob: -9.628400802612305
    7. ' (' → logprob: -9.753400802612305
    8. 't' → logprob: -10.128400802612305
    9. ')(' → logprob: -10.628400802612305
    10. '[' → logprob: -10.878400802612305

Token 238: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.05501723289489746
    2. '][-' → logprob: -4.305017471313477
    3. 's' → logprob: -4.555017471313477
    4. '])' → logprob: -4.680017471313477
    5. ']' → logprob: -5.555017471313477
    6. '[j' → logprob: -5.680017471313477
    7. '[idx' → logprob: -5.930017471313477
    8. ']))' → logprob: -6.430017471313477
    9. 'tot' → logprob: -6.930017471313477
    10. 'x' → logprob: -6.930017471313477

Token 239: 's' (ID: 82)
  Prédit: 'tot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tot' → logprob: -0.00019471932318992913
    2. ' totals' → logprob: -8.625194549560547
    3. '_tot' → logprob: -11.875194549560547
    4. ' tot' → logprob: -13.375194549560547
    5. 't' → logprob: -13.500194549560547
    6. 'to' → logprob: -13.625194549560547
    7. '[t' → logprob: -14.250194549560547
    8. 's' → logprob: -14.625194549560547
    9. '
' → logprob: -14.750194549560547
    10. '   ' → logprob: -14.875194549560547

Token 240: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.004322352819144726
    2. ']' → logprob: -6.254322528839111
    3. '-' → logprob: -6.754322528839111
    4. '])' → logprob: -7.129322528839111
    5. ']))
' → logprob: -8.754322052001953
    6. '']))' → logprob: -9.879322052001953
    7. ']))

' → logprob: -10.129322052001953
    8. '])))' → logprob: -10.504322052001953
    9. '])-' → logprob: -10.629322052001953
    10. '][' → logprob: -10.754322052001953

Token 241: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12174482643604279
    2. '<|end|>' → logprob: -2.2467448711395264
    3. '       ' → logprob: -4.871744632720947
    4. '<|end|>' → logprob: -7.371744632720947
    5. ')
' → logprob: -8.996745109558105
    6. ' )' → logprob: -9.246745109558105
    7. ']' → logprob: -9.996745109558105
    8. ' totals' → logprob: -9.996745109558105
    9. '
' → logprob: -10.246745109558105
    10. ' ' → logprob: -10.246745109558105

Token 242: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7212712168693542
    2. '       ' → logprob: -0.7212712168693542
    3. ')
' → logprob: -3.596271276473999
    4. '   ' → logprob: -9.096271514892578
    5. ')
' → logprob: -10.596271514892578
    6. '')' → logprob: -10.846271514892578
    7. ' ' → logprob: -11.096271514892578
    8. ' )' → logprob: -11.096271514892578
    9. '           ' → logprob: -11.096271514892578
    10. ']' → logprob: -11.096271514892578

Token 243: ' product' (ID: 1888)
  Prédit: 'tot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tot' → logprob: -0.0063375565223395824
    2. ' totals' → logprob: -5.131337642669678
    3. '(t' → logprob: -8.50633716583252
    4. ')' → logprob: -8.88133716583252
    5. ' tot' → logprob: -10.38133716583252
    6. 'Totals' → logprob: -11.13133716583252
    7. 't' → logprob: -12.25633716583252
    8. '_tot' → logprob: -12.25633716583252
    9. '
' → logprob: -12.63133716583252
    10. 'total' → logprob: -13.13133716583252

Token 244: ' total' (ID: 3609)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 245: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43101730942726135
    2. '<|end|>' → logprob: -1.181017279624939
    3. '       ' → logprob: -3.4310173988342285
    4. '<|end|>' → logprob: -5.0560173988342285
    5. ')
' → logprob: -7.1810173988342285
    6. 's' → logprob: -7.1810173988342285
    7. '
' → logprob: -7.3060173988342285
    8. ',' → logprob: -7.5560173988342285
    9. '        
' → logprob: -8.18101692199707
    10. '_' → logprob: -8.93101692199707

Token 246: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7574424147605896
    2. '<|end|>' → logprob: -0.7574424147605896
    3. ')' → logprob: -3.6324424743652344
    4. '           ' → logprob: -4.382442474365234
    5. ' ' → logprob: -4.882442474365234
    6. '<|end|>' → logprob: -5.382442474365234
    7. '```' → logprob: -6.132442474365234
    8. '[' → logprob: -6.632442474365234
    9. '.' → logprob: -6.882442474365234
    10. '        ' → logprob: -7.257442474365234

Token 247: ' data' (ID: 1238)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32399705052375793
    2. 'data' (adapté à ' data') → logprob: -1.4489970207214355
    3. ' data' → logprob: -3.4489970207214355
    4. '           ' → logprob: -5.9489970207214355
    5. ' ' → logprob: -6.1989970207214355
    6. '   ' → logprob: -7.1989970207214355
    7. 'table' → logprob: -7.3239970207214355
    8. '         ' → logprob: -7.4489970207214355
    9. ')' → logprob: -7.4489970207214355
    10. '        ' → logprob: -7.9489970207214355

Token 248: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.20266807079315186
    2. '[i' → logprob: -1.7026680707931519
    3. '[-' → logprob: -6.702668190002441
    4. '[I' → logprob: -12.452668190002441
    5. '_append' → logprob: -12.452668190002441
    6. '.setdefault' → logprob: -12.577668190002441
    7. 'append' → logprob: -12.577668190002441
    8. '.' → logprob: -12.702668190002441
    9. '[' → logprob: -12.827668190002441
    10. '```' → logprob: -13.702668190002441

Token 249: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.00016587569552939385
    2. '(' → logprob: -8.750165939331055
    3. 'row' → logprob: -12.125165939331055
    4. '(line' → logprob: -13.625165939331055
    5. ' row' → logprob: -15.250165939331055
    6. '(
' → logprob: -15.500165939331055
    7. ' (' → logprob: -16.000165939331055
    8. '((' → logprob: -17.125165939331055
    9. '[row' → logprob: -17.375165939331055
    10. ',row' → logprob: -17.500165939331055

Token 250: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -4.4849443838757e-06
    2. 'data' → logprob: -13.250004768371582
    3. '[_' → logprob: -14.000004768371582
    4. ')_' → logprob: -14.875004768371582
    5. ')' → logprob: -15.000004768371582
    6. '[i' → logprob: -15.625004768371582
    7. '[' → logprob: -15.625004768371582
    8. '[-' → logprob: -16.000003814697266
    9. '[row' → logprob: -16.250003814697266
    10. '```' → logprob: -16.500003814697266

Token 251: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009318724274635315
    2. '<|end|>' → logprob: -4.759318828582764
    3. '
' → logprob: -8.009318351745605
    4. '       ' → logprob: -8.884318351745605
    5. ')
' → logprob: -8.884318351745605
    6. '<|end|>' → logprob: -10.134318351745605
    7. ' )' → logprob: -11.634318351745605
    8. ')return' → logprob: -11.884318351745605
    9. '#' → logprob: -12.384318351745605
    10. ']' → logprob: -12.759318351745605

Token 252: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28004905581474304
    2. '<|end|>' → logprob: -2.0300490856170654
    3. '
' → logprob: -2.6550490856170654
    4. '        
' → logprob: -4.530048847198486
    5. ' ' → logprob: -4.780048847198486
    6. ')' → logprob: -5.530048847198486
    7. '   ' → logprob: -5.780048847198486
    8. '    
' → logprob: -6.405048847198486
    9. ' 
' → logprob: -6.655048847198486
    10. '[' → logprob: -6.655048847198486

Token 253: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06808249652385712
    2. ' totals' → logprob: -3.193082571029663
    3. ' for' → logprob: -4.318082332611084
    4. '<|end|>' → logprob: -5.568082332611084
    5. '#' (adapté à ' #') → logprob: -6.443082332611084
    6. 'for' → logprob: -6.818082332611084
    7. ',' → logprob: -6.943082332611084
    8. ' row' → logprob: -7.818082332611084
    9. '        
' → logprob: -7.943082332611084
    10. '   ' → logprob: -7.943082332611084

Token 254: ' Parse' (ID: 26701)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.17659015953540802
    2. 'for' → logprob: -2.5515902042388916
    3. ' col' → logprob: -3.4265902042388916
    4. 'column' → logprob: -4.4265899658203125
    5. 'tot' → logprob: -4.6765899658203125
    6. 'cols' → logprob: -4.6765899658203125
    7. ' for' → logprob: -5.0515899658203125
    8. '#' → logprob: -5.0515899658203125
    9. 'row' → logprob: -6.1765899658203125
    10. 'columns' → logprob: -7.0515899658203125

Token 255: ' totals' (ID: 92279)
  Prédit: 'tot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tot' → logprob: -0.40902283787727356
    2. ' totals' → logprob: -2.034022808074951
    3. 'col' → logprob: -2.409022808074951
    4. 'column' → logprob: -2.909022808074951
    5. 'total' → logprob: -4.034022808074951
    6. 's' → logprob: -4.534022808074951
    7. ' column' → logprob: -4.909022808074951
    8. 'row' → logprob: -5.534022808074951
    9. ' col' → logprob: -5.534022808074951
    10. 'columns' → logprob: -6.596522808074951

Token 256: ' row' (ID: 5225)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3370991051197052
    2. 'col' → logprob: -1.9620990753173828
    3. '_col' → logprob: -2.837099075317383
    4. '=' → logprob: -3.837099075317383
    5. '_row' → logprob: -3.962099075317383
    6. '_' → logprob: -4.337099075317383
    7. '_column' → logprob: -5.087099075317383
    8. 'row' → logprob: -5.087099075317383
    9. 'column' → logprob: -5.087099075317383
    10. 's' → logprob: -5.462099075317383

Token 257: ',' (ID: 11)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6775150895118713
    2. ' totals' → logprob: -1.1775150299072266
    3. '       ' → logprob: -2.4275150299072266
    4. 'for' → logprob: -3.4275150299072266
    5. 'tot' → logprob: -4.052515029907227
    6. ' for' → logprob: -4.302515029907227
    7. 'data' → logprob: -4.302515029907227
    8. 't' → logprob: -5.177515029907227
    9. ' total' → logprob: -5.552515029907227
    10. '
' → logprob: -6.802515029907227

Token 258: ' last' (ID: 2174)
  Prédit: 'tot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tot' → logprob: -0.11490906029939651
    2. 'col' → logprob: -3.2399091720581055
    3. 'total' → logprob: -3.3649091720581055
    4. ' totals' → logprob: -3.8649091720581055
    5. 'row' → logprob: -5.1149091720581055
    6. '   ' → logprob: -6.6149091720581055
    7. 'column' → logprob: -6.9899091720581055
    8. 'for' → logprob: -6.9899091720581055
    9. 'data' → logprob: -7.1149091720581055
    10. 'cols' → logprob: -7.2399091720581055

Token 259: ' element' (ID: 3577)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.7911531329154968
    2. 's' → logprob: -2.5411531925201416
    3. ' =' → logprob: -2.5411531925201416
    4. 'total' → logprob: -2.7911531925201416
    5. 'token' → logprob: -3.0411531925201416
    6. '=' → logprob: -3.1661531925201416
    7. 'value' → logprob: -3.2911531925201416
    8. '.append' → logprob: -3.6661531925201416
    9. 'row' → logprob: -3.9161531925201416
    10. 'element' → logprob: -4.1661529541015625

Token 260: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4458877444267273
    2. ' =' → logprob: -1.570887804031372
    3. '.append' → logprob: -2.070887804031372
    4. '.' → logprob: -4.195887565612793
    5. ':' → logprob: -6.195887565612793
    6. 'total' → logprob: -6.695887565612793
    7. 's' → logprob: -6.820887565612793
    8. ' is' → logprob: -7.195887565612793
    9. '<|end|>' → logprob: -7.195887565612793
    10. ')' → logprob: -7.445887565612793

Token 261: ' grand' (ID: 6363)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.6170130372047424
    2. 'int' → logprob: -1.1170129776000977
    3. ' None' → logprob: -3.2420129776000977
    4. 'sum' → logprob: -3.3670129776000977
    5. 'the' → logprob: -3.4920129776000977
    6. '0' → logprob: -4.492012977600098
    7. ' int' → logprob: -5.492012977600098
    8. ' the' → logprob: -6.367012977600098
    9. 'total' → logprob: -6.367012977600098
    10. '1' → logprob: -6.492012977600098

Token 262: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.9358273148536682
    2. '_total' → logprob: -1.3108272552490234
    3. 'total' → logprob: -1.3108272552490234
    4. '_' → logprob: -2.6858272552490234
    5. ' _' → logprob: -9.435827255249023
    6. ' product' → logprob: -9.935827255249023
    7. '_t' → logprob: -10.060827255249023
    8. '	total' → logprob: -10.185827255249023
    9. '_tot' → logprob: -10.185827255249023
    10. 't' → logprob: -10.435827255249023

Token 263: ' but' (ID: 889)
  Prédit: ' totals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' totals' → logprob: -0.3751221001148224
    2. ' =' → logprob: -2.1251220703125
    3. '       ' → logprob: -2.7501220703125
    4. 'total' → logprob: -2.8751220703125
    5. '=' → logprob: -3.5001220703125
    6. ' total' → logprob: -4.7501220703125
    7. 'tot' → logprob: -5.1251220703125
    8. ',' → logprob: -5.1251220703125
    9. ' for' → logprob: -5.8751220703125
    10. 'for' → logprob: -6.1251220703125

Token 264: ' can' (ID: 665)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.009391240775585175
    2. 'not' → logprob: -4.7593913078308105
    3. ' only' → logprob: -8.884390830993652
    4. ' no' → logprob: -9.259390830993652
    5. ' ' → logprob: -9.384390830993652
    6. ' totals' → logprob: -9.384390830993652
    7. ' ignored' → logprob: -9.509390830993652
    8. ' data' → logprob: -10.384390830993652
    9. ' it' → logprob: -10.384390830993652
    10. ' is' → logprob: -10.634390830993652

Token 265: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.001518430421128869
    2. ' ignore' → logprob: -7.126518249511719
    3. 'be' → logprob: -8.251518249511719
    4. ' not' → logprob: -8.876518249511719
    5. ' skip' → logprob: -8.876518249511719
    6. 'ignore' → logprob: -9.501518249511719
    7. ''' → logprob: -10.626518249511719
    8. 'skip' → logprob: -11.376518249511719
    9. 'not' → logprob: -11.626518249511719
    10. ' ignored' → logprob: -11.876518249511719

Token 266: ' ignored' (ID: 25203)
  Prédit: 'ignored'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ignored' → logprob: -0.03919634968042374
    2. ' ignored' → logprob: -3.414196252822876
    3. '_' → logprob: -5.914196491241455
    4. 'ignore' → logprob: -6.164196491241455
    5. 'None' → logprob: -8.664196014404297
    6. '   ' → logprob: -8.914196014404297
    7. 'discard' → logprob: -9.164196014404297
    8. 'ign' → logprob: -9.414196014404297
    9. '-' → logprob: -10.539196014404297
    10. 'used' → logprob: -10.789196014404297

Token 267: '
' (ID: 198)
  Prédit: ' totals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' totals' → logprob: -0.008124561980366707
    2. 'tot' → logprob: -5.508124351501465
    3. ' tot' → logprob: -6.883124351501465
    4. '       ' → logprob: -6.883124351501465
    5. ' total' → logprob: -7.133124351501465
    6. 'total' → logprob: -7.508124351501465
    7. 't' → logprob: -8.258124351501465
    8. ' for' → logprob: -9.883124351501465
    9. ',' → logprob: -10.008124351501465
    10. '
' → logprob: -10.133124351501465

Token 268: '       ' (ID: 309)
  Prédit: ' totals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' totals' → logprob: -0.0012116642901673913
    2. ' tot' → logprob: -8.501212120056152
    3. ' for' → logprob: -8.626212120056152
    4. 'tot' → logprob: -8.751212120056152
    5. ' total' → logprob: -8.876212120056152
    6. 't' → logprob: -9.376212120056152
    7. '
' → logprob: -9.376212120056152
    8. ' 
' → logprob: -9.501212120056152
    9. 'total' → logprob: -9.751212120056152
    10. '       ' → logprob: -9.751212120056152

Token 269: ' totals' (ID: 92279)
  Prédit: 'tot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tot' → logprob: -0.12466658651828766
    2. ' totals' → logprob: -2.374666690826416
    3. 'col' → logprob: -4.624666690826416
    4. 'row' → logprob: -5.874666690826416
    5. ' tot' → logprob: -6.124666690826416
    6. '   ' → logprob: -6.124666690826416
    7. 'total' → logprob: -6.624666690826416
    8. ' row' → logprob: -6.874666690826416
    9. '       ' → logprob: -6.874666690826416
    10. 'column' → logprob: -6.999666690826416

Token 270: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31598636507987976
    2. '=' → logprob: -1.3159863948822021
    3. '_row' → logprob: -6.315986156463623
    4. '_data' → logprob: -8.190986633300781
    5. '_' → logprob: -8.315986633300781
    6. '_values' → logprob: -8.940986633300781
    7. 's' → logprob: -9.815986633300781
    8. '_vals' → logprob: -10.065986633300781
    9. '=[]' → logprob: -10.190986633300781
    10. 'data' → logprob: -10.815986633300781

Token 271: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0015704454854130745
    2. ' list' → logprob: -6.501570224761963
    3. '[list' → logprob: -9.626570701599121
    4. '[' → logprob: -13.376570701599121
    5. '=list' → logprob: -15.376570701599121
    6. '(list' → logprob: -15.751570701599121
    7. '   ' → logprob: -15.876570701599121
    8. '[]' → logprob: -17.251569747924805
    9. '	list' → logprob: -17.751569747924805
    10. 'line' → logprob: -17.751569747924805

Token 272: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0008658452425152063
    2. 'map' → logprob: -7.125865936279297
    3. '=' → logprob: -10.375865936279297
    4. '(' → logprob: -11.625865936279297
    5. '.map' → logprob: -11.875865936279297
    6. ',map' → logprob: -12.875865936279297
    7. '   ' → logprob: -13.375865936279297
    8. '()' → logprob: -13.500865936279297
    9. '```' → logprob: -13.500865936279297
    10. '	map' → logprob: -13.625865936279297

Token 273: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10024268925189972
    2. 'int' → logprob: -2.3502426147460938
    3. '(lambda' → logprob: -11.475242614746094
    4. '=int' → logprob: -11.725242614746094
    5. '[int' → logprob: -12.350242614746094
    6. ',int' → logprob: -12.350242614746094
    7. '```' → logprob: -13.225242614746094
    8. 'lambda' → logprob: -13.350242614746094
    9. ' int' → logprob: -13.725242614746094
    10. '(' → logprob: -13.850242614746094

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10158231854438782
    2. '(lines' → logprob: -2.3515822887420654
    3. '(t' → logprob: -7.4765825271606445
    4. ' ,' → logprob: -7.8515825271606445
    5. ',t' → logprob: -8.101582527160645
    6. ',(' → logprob: -9.851582527160645
    7. ' (' → logprob: -10.351582527160645
    8. '(' → logprob: -11.226582527160645
    9. ' lines' → logprob: -11.726582527160645
    10. ',line' → logprob: -12.726582527160645

Token 275: ' totals' (ID: 92279)
  Prédit: 'tot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tot' → logprob: -0.02543194778263569
    2. 'lines' → logprob: -3.7754318714141846
    3. ' totals' → logprob: -6.275432109832764
    4. ' lines' → logprob: -8.525431632995605
    5. ' tot' → logprob: -9.275431632995605
    6. 'tables' → logprob: -12.275431632995605
    7. 'total' → logprob: -12.775431632995605
    8. '(lines' → logprob: -13.400431632995605
    9. 'table' → logprob: -14.400431632995605
    10. '_tot' → logprob: -15.900431632995605

Token 276: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.000850605487357825
    2. 'row' → logprob: -7.125850677490234
    3. '[' → logprob: -11.000850677490234
    4. '[row' → logprob: -11.375850677490234
    5. '[:-' → logprob: -12.375850677490234
    6. 's' → logprob: -12.500850677490234
    7. '[-' → logprob: -13.000850677490234
    8. ')' → logprob: -13.375850677490234
    9. ' row' → logprob: -13.750850677490234
    10. '_' → logprob: -14.000850677490234

Token 277: '[:' (ID: 7808)
  Prédit: '[:-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.004421693738549948
    2. '[:' → logprob: -6.004421710968018
    3. '))' → logprob: -6.254421710968018
    4. '[' → logprob: -11.00442123413086
    5. ' ))' → logprob: -13.00442123413086
    6. '))
' → logprob: -13.12942123413086
    7. '[:]' → logprob: -14.87942123413086
    8. ')))' → logprob: -15.25442123413086
    9. '[]' → logprob: -15.87942123413086
    10. ')' → logprob: -16.00442123413086

Token 278: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16438552737236023
    2. '-s' → logprob: -1.9143855571746826
    3. '-' → logprob: -5.5393853187561035
    4. ' -' → logprob: -9.289385795593262
    5. ' s' → logprob: -10.164385795593262
    6. 'len' → logprob: -10.664385795593262
    7. '-p' → logprob: -11.039385795593262
    8. '-(' → logprob: -11.539385795593262
    9. '(s' → logprob: -11.914385795593262
    10. 'p' → logprob: -12.039385795593262

Token 279: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.002370893256738782
    2. ']' → logprob: -6.627370834350586
    3. '-' → logprob: -7.002370834350586
    4. ']))
' → logprob: -9.877370834350586
    5. ' ]' → logprob: -10.002370834350586
    6. '])' → logprob: -11.377370834350586
    7. ']))

' → logprob: -11.752370834350586
    8. '']))' → logprob: -12.502370834350586
    9. ' -' → logprob: -12.627370834350586
    10. '])))' → logprob: -12.877370834350586

Token 280: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2888202667236328
    2. '<|end|>' → logprob: -1.6638202667236328
    3. ')' → logprob: -3.288820266723633
    4. '
' → logprob: -4.038820266723633
    5. '        
' → logprob: -6.163820266723633
    6. '#' → logprob: -6.788820266723633
    7. '<|end|>' → logprob: -6.913820266723633
    8. ',' → logprob: -7.038820266723633
    9. ')
' → logprob: -8.038820266723633
    10. '.' → logprob: -9.163820266723633

Token 281: ' grand' (ID: 6363)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06556327641010284
    2. '<|end|>' → logprob: -4.065563201904297
    3. '#' → logprob: -4.315563201904297
    4. ' for' → logprob: -4.565563201904297
    5. 'for' → logprob: -5.065563201904297
    6. '
' → logprob: -5.440563201904297
    7. ' totals' → logprob: -6.190563201904297
    8. '        
' → logprob: -6.315563201904297
    9. ')' → logprob: -6.690563201904297
    10. ',' → logprob: -6.940563201904297

Token 282: '_total' (ID: 23814)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6848707795143127
    2. '_total' → logprob: -0.8098707795143127
    3. 'total' → logprob: -4.059870719909668
    4. ' total' → logprob: -4.434870719909668
    5. ' _' → logprob: -4.434870719909668
    6. '_tot' → logprob: -5.309870719909668
    7. ' ' → logprob: -5.934870719909668
    8. 'Total' → logprob: -7.059870719909668
    9. '<|end|>' → logprob: -7.684870719909668
    10. ' totals' → logprob: -8.059870719909668

Token 283: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6934685111045837
    2. ' =' → logprob: -0.6934685111045837
    3. ')' → logprob: -8.81846809387207
    4. '_' → logprob: -9.44346809387207
    5. ',' → logprob: -9.94346809387207
    6. '.' → logprob: -11.19346809387207
    7. ' ' → logprob: -11.19346809387207
    8. '<|end|>' → logprob: -12.69346809387207
    9. '=int' → logprob: -12.69346809387207
    10. 's' → logprob: -13.31846809387207

Token 284: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.29864177107810974
    2. ' int' → logprob: -1.9236418008804321
    3. ' totals' → logprob: -2.4236416816711426
    4. 'tot' → logprob: -3.7986416816711426
    5. ' tot' → logprob: -6.923641681671143
    6. 'ints' → logprob: -10.0486421585083
    7. 'total' → logprob: -10.4236421585083
    8. '0' → logprob: -11.1736421585083
    9. ' total' → logprob: -12.5486421585083
    10. 'inte' → logprob: -12.6736421585083

Token 285: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -9.829823102336377e-05
    2. '(' → logprob: -9.25009822845459
    3. 'tot' → logprob: -13.50009822845459
    4. '(total' → logprob: -14.25009822845459
    5. '(lines' → logprob: -17.125099182128906
    6. '	t' → logprob: -17.375099182128906
    7. ' totals' → logprob: -17.625099182128906
    8. 'Totals' → logprob: -18.000099182128906
    9. '((' → logprob: -18.375099182128906
    10. '_tot' → logprob: -18.750099182128906

Token 286: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.007958526723086834
    2. 'tot' → logprob: -5.00795841217041
    3. 'otal' → logprob: -7.13295841217041
    4. 'o' → logprob: -8.25795841217041
    5. '[' → logprob: -10.50795841217041
    6. 'ost' → logprob: -10.63295841217041
    7. '   ' → logprob: -11.00795841217041
    8. '_tot' → logprob: -11.13295841217041
    9. 'lines' → logprob: -11.63295841217041
    10. 'ots' → logprob: -12.00795841217041

Token 287: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -2.8325677703833207e-05
    2. 'al' → logprob: -10.875028610229492
    3. 'a' → logprob: -11.875028610229492
    4. '   ' → logprob: -13.750028610229492
    5. 's' → logprob: -14.250028610229492
    6. 'ials' → logprob: -15.625028610229492
    7. 'as' → logprob: -16.375028610229492
    8. '```' → logprob: -16.750028610229492
    9. '       ' → logprob: -17.250028610229492
    10. ' totals' → logprob: -17.625028610229492

Token 288: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -2.5776860184123507e-06
    2. '[-' → logprob: -13.25000286102295
    3. 'row' → logprob: -14.75000286102295
    4. '[s' → logprob: -15.12500286102295
    5. '[' → logprob: -16.750001907348633
    6. '_line' → logprob: -17.625001907348633
    7. 'Row' → logprob: -19.000001907348633
    8. ')' → logprob: -19.750001907348633
    9. 's' → logprob: -20.000001907348633
    10. '_s' → logprob: -20.125001907348633

Token 289: '[s' (ID: 24177)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.313268780708313
    2. '[s' → logprob: -1.313268780708313
    3. '[' → logprob: -11.938268661499023
    4. 's' → logprob: -15.813268661499023
    5. ' [-' → logprob: -16.313268661499023
    6. '[len' → logprob: -16.313268661499023
    7. ' [' → logprob: -17.063268661499023
    8. '   ' → logprob: -17.563268661499023
    9. '[
' → logprob: -17.813268661499023
    10. '
' → logprob: -17.813268661499023

Token 290: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -3.1424973713001236e-05
    2. '])
' → logprob: -11.750031471252441
    3. ']' → logprob: -11.875031471252441
    4. ' ])' → logprob: -12.625031471252441
    5. '])-' → logprob: -12.750031471252441
    6. '-' → logprob: -13.000031471252441
    7. ''])' → logprob: -13.000031471252441
    8. ')' → logprob: -13.375031471252441
    9. ']))' → logprob: -13.875031471252441
    10. ']])' → logprob: -14.000031471252441

Token 291: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 292: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7389582395553589
    2. 'def' → logprob: -1.6139582395553589
    3. '#' (adapté à ' #') → logprob: -2.3639583587646484
    4. 'from' → logprob: -2.7389583587646484
    5. 'for' → logprob: -2.9889583587646484
    6. 'while' → logprob: -3.6139583587646484
    7. 'found' → logprob: -4.363958358764648
    8. 'rows' → logprob: -4.488958358764648
    9. 'row' → logprob: -4.613958358764648
    10. 'possible' → logprob: -4.988958358764648

Token 293: ' We' (ID: 1416)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9276862144470215
    2. 'def' → logprob: -1.4276862144470215
    3. 'for' → logprob: -1.5526862144470215
    4. 'from' → logprob: -2.8026862144470215
    5. 'while' → logprob: -3.1776862144470215
    6. ' #' → logprob: -4.5526862144470215
    7. ' for' → logprob: -4.9276862144470215
    8. 'unknown' → logprob: -4.9276862144470215
    9. 'found' → logprob: -5.5526862144470215
    10. 'rows' → logprob: -6.0526862144470215

Token 294: ' have' (ID: 679)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.4210749864578247
    2. ' #' → logprob: -1.5460749864578247
    3. '       ' → logprob: -2.171074867248535
    4. ''' → logprob: -2.546074867248535
    5. ' have' → logprob: -2.921074867248535
    6. '#' → logprob: -2.921074867248535
    7. ' ' → logprob: -3.296074867248535
    8. ' need' → logprob: -3.296074867248535
    9. '   ' → logprob: -3.546074867248535
    10. ''re' → logprob: -3.796074867248535

Token 295: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.1367511749267578
    2. ' unknown' → logprob: -1.7617511749267578
    3. ' a' → logprob: -2.261751174926758
    4. ' ' → logprob: -2.386751174926758
    5. 'unknown' → logprob: -2.636751174926758
    6. 'len' → logprob: -3.136751174926758
    7. ' data' → logprob: -3.886751174926758
    8. ' all' → logprob: -3.886751174926758
    9. ' to' → logprob: -4.011751174926758
    10. 'a' → logprob: -4.011751174926758

Token 296: '*s' (ID: 71191)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.2127858400344849
    2. 'rows' → logprob: -1.7127858400344849
    3. '<|end|>' → logprob: -1.8377858400344849
    4. '*' → logprob: -2.5877857208251953
    5. '-' → logprob: -2.8377857208251953
    6. ' -' → logprob: -3.2127857208251953
    7. '*s' → logprob: -3.4627857208251953
    8. ' rows' → logprob: -3.5877857208251953
    9. 'otential' → logprob: -3.8377857208251953
    10. '   ' → logprob: -4.087785720825195

Token 297: ' unknown' (ID: 17927)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8080999851226807
    2. ' unknown' → logprob: -1.3080999851226807
    3. ' +' → logprob: -1.9330999851226807
    4. '+' → logprob: -3.3080999851226807
    5. 'unknown' → logprob: -3.4330999851226807
    6. ' ' → logprob: -3.9330999851226807
    7. '<|end|>' → logprob: -4.058099746704102
    8. '-' → logprob: -4.933099746704102
    9. ' cells' → logprob: -5.183099746704102
    10. '    ' → logprob: -5.433099746704102

Token 298: 's' (ID: 82)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.3521970510482788
    2. 's' → logprob: -1.7271970510482788
    3. ' =' → logprob: -2.3521971702575684
    4. '_count' → logprob: -2.6021971702575684
    5. ' *' → logprob: -2.6021971702575684
    6. ')' → logprob: -2.8521971702575684
    7. ' ' → logprob: -3.2271971702575684
    8. '_' → logprob: -3.8521971702575684
    9. ' +' → logprob: -4.102197170257568
    10. ',' → logprob: -4.227197170257568

Token 299: ' with' (ID: 483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 300: ' some' (ID: 1236)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6433016061782837
    2. 'p' → logprob: -1.6433016061782837
    3. 'len' → logprob: -2.893301486968994
    4. 'unknown' → logprob: -2.893301486968994
    5. ' unknown' → logprob: -3.518301486968994
    6. ' len' → logprob: -3.893301486968994
    7. 'possible' → logprob: -4.268301486968994
    8. 'None' → logprob: -4.518301486968994
    9. '[]' → logprob: -5.268301486968994
    10. 's' → logprob: -5.393301486968994

Token 301: ' known' (ID: 5542)
  Prédit: ' constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -0.8182136416435242
    2. ' known' → logprob: -0.9432136416435242
    3. 'known' → logprob: -2.193213701248169
    4. 'constraints' → logprob: -3.693213701248169
    5. ' of' → logprob: -5.19321346282959
    6. ' values' → logprob: -5.44321346282959
    7. ' unknown' → logprob: -5.81821346282959
    8. '_known' → logprob: -6.06821346282959
    9. ' None' → logprob: -6.31821346282959
    10. ' missing' → logprob: -6.44321346282959

Token 302: ' and' (ID: 326)
  Prédit: ' values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.5233285427093506
    2. 'values' → logprob: -1.0233285427093506
    3. ' constraints' → logprob: -4.14832878112793
    4. ',' → logprob: -4.89832878112793
    5. 'constraints' → logprob: -5.27332878112793
    6. ' cells' → logprob: -5.52332878112793
    7. 's' → logprob: -5.89832878112793
    8. 'cells' → logprob: -6.27332878112793
    9. '.' → logprob: -6.52332878112793
    10. ' and' → logprob: -6.77332878112793

Token 303: ' unknown' (ID: 17927)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.9743180274963379
    2. ' some' → logprob: -1.099318027496338
    3. 'p' → logprob: -2.099318027496338
    4. 'some' → logprob: -2.099318027496338
    5. ' unknown' → logprob: -3.974318027496338
    6. 'unknown' → logprob: -4.724318027496338
    7. 's' → logprob: -5.224318027496338
    8. ' s' → logprob: -6.349318027496338
    9. ' totals' → logprob: -6.349318027496338
    10. ' total' → logprob: -6.911818027496338

Token 304: ' entries' (ID: 18614)
  Prédit: ' values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.24730521440505981
    2. 'values' → logprob: -1.997305154800415
    3. 's' → logprob: -3.997305154800415
    4. ' variables' → logprob: -4.247305393218994
    5. ' cells' → logprob: -4.497305393218994
    6. ',' → logprob: -4.872305393218994
    7. ' positions' → logprob: -5.122305393218994
    8. ' entries' → logprob: -5.372305393218994
    9. 'variables' → logprob: -5.747305393218994
    10. 'cells' → logprob: -5.872305393218994

Token 305: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 306: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3104868233203888
    2. '       ' → logprob: -2.1854867935180664
    3. '<|end|>' → logprob: -2.4354867935180664
    4. '        
' → logprob: -3.8104867935180664
    5. ',' → logprob: -4.310486793518066
    6. ' ' → logprob: -5.185486793518066
    7. '.' → logprob: -5.560486793518066
    8. '<|end|>' → logprob: -5.560486793518066
    9. '#' → logprob: -5.685486793518066
    10. '        ' → logprob: -6.185486793518066

Token 307: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4840618968009949
    2. '
' → logprob: -1.7340619564056396
    3. '#' (adapté à ' #') → logprob: -3.3590619564056396
    4. '<|end|>' → logprob: -3.4840619564056396
    5. 'def' → logprob: -3.7340619564056396
    6. ',' → logprob: -4.1090617179870605
    7. ' while' → logprob: -4.3590617179870605
    8. ' for' → logprob: -4.6090617179870605
    9. ' from' → logprob: -4.6090617179870605
    10. 'from' → logprob: -4.7340617179870605

Token 308: ' We' (ID: 1416)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5366408228874207
    2. ' from' → logprob: -1.7866408824920654
    3. '#' → logprob: -2.6616408824920654
    4. 'def' → logprob: -3.6616408824920654
    5. 'for' → logprob: -3.6616408824920654
    6. ' for' → logprob: -3.9116408824920654
    7. ' #' → logprob: -4.286640644073486
    8. '       ' → logprob: -4.411640644073486
    9. 'import' → logprob: -4.411640644073486
    10. ' equations' → logprob: -4.786640644073486

Token 309: ' can' (ID: 665)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.5366516709327698
    2. ' have' → logprob: -2.411651611328125
    3. 'need' → logprob: -2.661651611328125
    4. 'def' → logprob: -2.911651611328125
    5. ' can' → logprob: -3.036651611328125
    6. ' continue' → logprob: -3.161651611328125
    7. ' want' → logprob: -3.536651611328125
    8. '       ' → logprob: -3.661651611328125
    9. 'continue' → logprob: -4.661651611328125
    10. 'have' → logprob: -4.661651611328125

Token 310: ' use' (ID: 1199)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.3636612594127655
    2. ' use' → logprob: -1.988661289215088
    3. 'try' → logprob: -1.988661289215088
    4. 'solve' → logprob: -4.988661289215088
    5. 'use' → logprob: -5.238661289215088
    6. 'attempt' → logprob: -5.363661289215088
    7. 'def' → logprob: -5.488661289215088
    8. ' attempt' → logprob: -5.738661289215088
    9. ' solve' → logprob: -5.863661289215088
    10. ' continue' → logprob: -7.238661289215088

Token 311: ' the' (ID: 290)
  Prédit: ' numpy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numpy' → logprob: -0.6852849125862122
    2. ' back' → logprob: -1.4352848529815674
    3. ' a' → logprob: -3.1852848529815674
    4. ' the' → logprob: -3.1852848529815674
    5. ' from' → logprob: -3.3102848529815674
    6. ' itertools' → logprob: -3.6852848529815674
    7. ' constraint' → logprob: -3.8102848529815674
    8. 'from' → logprob: -4.0602850914001465
    9. ' import' → logprob: -4.3102850914001465
    10. ' linear' → logprob: -4.4352850914001465

Token 312: ' equations' (ID: 61524)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.530480980873108
    2. 'from' → logprob: -1.780480980873108
    3. 'constraints' → logprob: -2.1554808616638184
    4. 'constraint' → logprob: -2.6554808616638184
    5. ' constraints' → logprob: -3.0304808616638184
    6. ' itertools' → logprob: -3.4054808616638184
    7. ' constraint' → logprob: -3.4054808616638184
    8. ' while' → logprob: -3.5304808616638184
    9. 'queue' → logprob: -3.6554808616638184
    10. 'p' → logprob: -3.9054808616638184

Token 313: ':
' (ID: 734)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4058821201324463
    2. ' ' → logprob: -2.2808821201324463
    3. ' for' → logprob: -2.5308821201324463
    4. '<|end|>' → logprob: -3.1558821201324463
    5. '       ' → logprob: -4.405881881713867
    6. '#' → logprob: -4.405881881713867
    7. '.' → logprob: -4.530881881713867
    8. ',' → logprob: -4.530881881713867
    9. 'import' → logprob: -4.780881881713867
    10. '    ' → logprob: -4.905881881713867

Token 314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11491554230451584
    2. ' for' → logprob: -2.739915609359741
    3. '#' → logprob: -4.364915370941162
    4. '        ' → logprob: -4.614915370941162
    5. '        
' → logprob: -4.989915370941162
    6. 'for' → logprob: -5.364915370941162
    7. ' #' → logprob: -5.364915370941162
    8. '           ' → logprob: -7.239915370941162
    9. ' rows' → logprob: -7.239915370941162
    10. ' ' → logprob: -7.489915370941162

Token 315: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5409267544746399
    2. '       ' → logprob: -1.6659266948699951
    3. ' for' → logprob: -1.7909266948699951
    4. 'for' → logprob: -3.040926694869995
    5. ' #' → logprob: -4.540926933288574
    6. '"' → logprob: -7.540926933288574
    7. '        
' → logprob: -7.540926933288574
    8. '        ' → logprob: -7.790926933288574
    9. '           ' → logprob: -8.165926933288574
    10. '   ' → logprob: -8.290926933288574

Token 316: ' sum' (ID: 4215)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.58910071849823
    2. ' for' → logprob: -1.46410071849823
    3. 'for' → logprob: -1.71410071849823
    4. ' #' → logprob: -3.9641008377075195
    5. '       ' → logprob: -5.0891008377075195
    6. ' row' → logprob: -6.4641008377075195
    7. 'row' → logprob: -6.9641008377075195
    8. ' rows' → logprob: -7.3391008377075195
    9. '        ' → logprob: -8.08910083770752
    10. 'rows' → logprob: -8.21410083770752

Token 317: ' over' (ID: 1072)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -2.036754608154297
    2. 'row' → logprob: -2.036754608154297
    3. '(row' → logprob: -2.036754608154297
    4. ' of' → logprob: -2.161754608154297
    5. '(data' → logprob: -2.286754608154297
    6. '_row' → logprob: -2.911754608154297
    7. 's' → logprob: -3.286754608154297
    8. 'data' → logprob: -3.411754608154297
    9. '([' → logprob: -3.411754608154297
    10. '[' → logprob: -3.536754608154297

Token 318: ' stores' (ID: 14604)
  Prédit: ' rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rows' → logprob: -0.5583065152168274
    2. 'rows' → logprob: -1.8083064556121826
    3. ' columns' → logprob: -1.9333064556121826
    4. 'columns' → logprob: -2.8083064556121826
    5. ' j' → logprob: -4.058306694030762
    6. 'j' → logprob: -4.183306694030762
    7. 'cols' → logprob: -4.933306694030762
    8. ' row' → logprob: -5.433306694030762
    9. ' all' → logprob: -5.558306694030762
    10. 'row' → logprob: -5.683306694030762

Token 319: ' of' (ID: 328)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.055087924003601
    2. 'for' → logprob: -1.555087924003601
    3. '[i' → logprob: -2.0550880432128906
    4. ' (' → logprob: -2.6800880432128906
    5. ',' → logprob: -2.9300880432128906
    6. '(' → logprob: -3.5550880432128906
    7. '   ' → logprob: -3.5550880432128906
    8. ' of' → logprob: -3.8050880432128906
    9. '[' → logprob: -4.180088043212891
    10. '(i' → logprob: -4.180088043212891

Token 320: ' product' (ID: 1888)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.910904049873352
    2. 'data' → logprob: -1.160904049873352
    3. 'products' → logprob: -2.4109039306640625
    4. 'rows' → logprob: -3.1609039306640625
    5. ' rows' → logprob: -4.0359039306640625
    6. ' products' → logprob: -4.0359039306640625
    7. 'p' → logprob: -4.2859039306640625
    8. ' sales' → logprob: -4.4109039306640625
    9. ' quantities' → logprob: -4.5359039306640625
    10. 'sales' → logprob: -4.5359039306640625

Token 321: ' i' (ID: 575)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1919445991516113
    2. ' totals' → logprob: -1.6919445991516113
    3. 's' → logprob: -1.8169445991516113
    4. ' quantities' → logprob: -2.1919445991516113
    5. '   ' → logprob: -2.8169445991516113
    6. ' of' → logprob: -3.3169445991516113
    7. ' counts' → logprob: -3.4419445991516113
    8. '[' → logprob: -3.6919445991516113
    9. ' for' → logprob: -3.8169445991516113
    10. 'tot' → logprob: -4.441944599151611

Token 322: ' =' (ID: 314)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4847915768623352
    2. ' for' → logprob: -2.1097915172576904
    3. '[' → logprob: -3.1097915172576904
    4. 'for' → logprob: -3.2347915172576904
    5. ' =' → logprob: -3.4847915172576904
    6. ' of' → logprob: -3.9847915172576904
    7. '=' → logprob: -3.9847915172576904
    8. ' i' → logprob: -4.4847917556762695
    9. '[j' → logprob: -4.6097917556762695
    10. ' quantities' → logprob: -4.6097917556762695

Token 323: ' product' (ID: 1888)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.18865583837032318
    2. ' data' → logprob: -1.8136558532714844
    3. 'tot' → logprob: -5.438655853271484
    4. ' totals' → logprob: -5.563655853271484
    5. 'total' → logprob: -7.938655853271484
    6. '   ' → logprob: -9.438655853271484
    7. ' tot' → logprob: -10.563655853271484
    8. ' total' → logprob: -10.688655853271484
    9. 'int' → logprob: -10.813655853271484
    10. 't' → logprob: -10.813655853271484

Token 324: ' total' (ID: 3609)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.796665370464325
    2. ' totals' → logprob: -1.9216654300689697
    3. '_' → logprob: -2.2966654300689697
    4. ' s' → logprob: -3.4216654300689697
    5. '   ' → logprob: -3.5466654300689697
    6. '_s' → logprob: -3.7966654300689697
    7. '[i' → logprob: -3.7966654300689697
    8. ' _' → logprob: -3.9216654300689697
    9. ' i' → logprob: -4.046665191650391
    10. ',' → logprob: -4.296665191650391

Token 325: '[i' (ID: 1768)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5910505652427673
    2. '       ' → logprob: -1.341050624847412
    3. '        
' → logprob: -3.466050624847412
    4. '<|end|>' → logprob: -3.466050624847412
    5. ')' → logprob: -4.091050624847412
    6. ',' → logprob: -4.091050624847412
    7. ' for' → logprob: -4.216050624847412
    8. '  
' → logprob: -4.966050624847412
    9. ',
' → logprob: -5.091050624847412
    10. 's' → logprob: -5.091050624847412

Token 326: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.49726739525794983
    2. ']
' → logprob: -1.4972673654556274
    3. '])' → logprob: -2.372267484664917
    4. ')' → logprob: -3.497267484664917
    5. ')
' → logprob: -3.747267484664917
    6. '])
' → logprob: -4.497267246246338
    7. '       ' → logprob: -6.247267246246338
    8. '[i' → logprob: -6.372267246246338
    9. ')]' → logprob: -6.997267246246338
    10. '']' → logprob: -7.372267246246338

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1710556298494339
    2. '#' → logprob: -1.9210556745529175
    3. '
' → logprob: -5.546055793762207
    4. '        
' → logprob: -6.296055793762207
    5. '<|end|>' → logprob: -6.296055793762207
    6. '#
' → logprob: -7.046055793762207
    7. ' #' → logprob: -7.421055793762207
    8. ',' → logprob: -7.796055793762207
    9. ' for' → logprob: -8.546055793762207
    10. ',
' → logprob: -8.671055793762207

Token 328: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3145686089992523
    2. '#' (adapté à ' #') → logprob: -1.3145686388015747
    3. ' #' → logprob: -7.439568519592285
    4. '<|end|>' → logprob: -8.689568519592285
    5. '
' → logprob: -8.939568519592285
    6. '   ' → logprob: -9.064568519592285
    7. ' ' → logprob: -9.814568519592285
    8. '#
' → logprob: -9.939568519592285
    9. '           ' → logprob: -10.189568519592285
    10. ',' → logprob: -10.189568519592285

Token 329: ' sum' (ID: 4215)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.03857773169875145
    2. '       ' → logprob: -3.2885777950286865
    3. ' #' → logprob: -7.913577556610107
    4. 'for' → logprob: -9.788578033447266
    5. '   ' → logprob: -10.163578033447266
    6. '
' → logprob: -10.413578033447266
    7. ' ' → logprob: -11.038578033447266
    8. 'sum' → logprob: -11.288578033447266
    9. '        
' → logprob: -12.913578033447266
    10. ' for' → logprob: -13.038578033447266

Token 330: ' over' (ID: 1072)
  Prédit: ' over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' over' → logprob: -0.0037802429869771004
    2. 'over' → logprob: -5.628780364990234
    3. ' of' → logprob: -9.628780364990234
    4. ' ' → logprob: -10.128780364990234
    5. '_over' → logprob: -11.253780364990234
    6. '   ' → logprob: -11.503780364990234
    7. '_' → logprob: -11.628780364990234
    8. ' ' → logprob: -11.878780364990234
    9. '    ' → logprob: -12.378780364990234
    10. '[' → logprob: -12.628780364990234

Token 331: ' products' (ID: 3891)
  Prédit: 'products'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'products' → logprob: -0.16959460079669952
    2. 'stores' → logprob: -2.0445945262908936
    3. 'rows' → logprob: -4.794594764709473
    4. 'store' → logprob: -5.169594764709473
    5. 'range' → logprob: -5.794594764709473
    6. ' products' → logprob: -6.294594764709473
    7. 'i' → logprob: -6.419594764709473
    8. 'p' → logprob: -6.544594764709473
    9. ' stores' → logprob: -7.419594764709473
    10. 'all' → logprob: -7.544594764709473

Token 332: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.023403525352478027
    2. 'of' → logprob: -4.148403644561768
    3. ' ' → logprob: -6.523403644561768
    4. ' j' → logprob: -6.773403644561768
    5. ' over' → logprob: -6.773403644561768
    6. '   ' → logprob: -7.023403644561768
    7. '    ' → logprob: -7.398403644561768
    8. '        ' → logprob: -7.898403644561768
    9. 'j' → logprob: -7.898403644561768
    10. '       ' → logprob: -8.02340316772461

Token 333: ' store' (ID: 4897)
  Prédit: 'store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'store' → logprob: -1.4144564867019653
    2. 'product' → logprob: -1.7894564867019653
    3. ' product' → logprob: -1.9144564867019653
    4. ' store' → logprob: -2.039456367492676
    5. ' j' → logprob: -2.539456367492676
    6. 'j' → logprob: -3.039456367492676
    7. ' data' → logprob: -3.289456367492676
    8. 'data' → logprob: -3.914456367492676
    9. ' range' → logprob: -4.289456367492676
    10. ' i' → logprob: -4.414456367492676

Token 334: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3982024192810059
    2. ' j' → logprob: -1.5232024192810059
    3. ' i' → logprob: -1.6482024192810059
    4. 'j' → logprob: -2.023202419281006
    5. '   ' → logprob: -2.398202419281006
    6. '[j' → logprob: -3.148202419281006
    7. '[i' → logprob: -3.773202419281006
    8. '    ' → logprob: -3.898202419281006
    9. '[' → logprob: -4.773202419281006
    10. ' ' → logprob: -5.148202419281006

Token 335: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5998846888542175
    2. ' =' → logprob: -0.8498846888542175
    3. ' of' → logprob: -4.349884510040283
    4. '[' → logprob: -5.974884510040283
    5. '[i' → logprob: -6.099884510040283
    6. ' ' → logprob: -7.099884510040283
    7. '   ' → logprob: -7.224884510040283
    8. ''s' → logprob: -7.224884510040283
    9. 'of' → logprob: -7.474884510040283
    10. ''' → logprob: -7.724884510040283

Token 336: ' totals' (ID: 92279)
  Prédit: ' totals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' totals' → logprob: -0.3209076225757599
    2. 'tot' → logprob: -1.3209075927734375
    3. 'store' → logprob: -5.1959075927734375
    4. 'total' → logprob: -6.6959075927734375
    5. ' tot' → logprob: -7.8209075927734375
    6. ' store' → logprob: -8.195907592773438
    7. ' total' → logprob: -9.945907592773438
    8. 'int' → logprob: -11.070907592773438
    9. 'stores' → logprob: -11.070907592773438
    10. 's' → logprob: -11.195907592773438

Token 337: '[j' (ID: 7895)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04980836436152458
    2. '
' → logprob: -3.6748082637786865
    3. '        
' → logprob: -4.674808502197266
    4. '#' → logprob: -5.424808502197266
    5. '<|end|>' → logprob: -5.674808502197266
    6. 'for' → logprob: -7.174808502197266
    7. 'def' → logprob: -7.424808502197266
    8. ' for' → logprob: -7.549808502197266
    9. ',' → logprob: -7.549808502197266
    10. '<|end|>' → logprob: -8.424808502197266

Token 338: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.019587755203247
    2. ']' → logprob: -1.144587755203247
    3. '])' → logprob: -1.144587755203247
    4. ')
' → logprob: -7.394587516784668
    5. '[i' → logprob: -7.519587516784668
    6. ']
' → logprob: -8.144587516784668
    7. '       ' → logprob: -8.394587516784668
    8. '[j' → logprob: -8.894587516784668
    9. '])
' → logprob: -8.894587516784668
    10. ' )' → logprob: -9.519587516784668

Token 339: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11836277693510056
    2. '<|end|>' → logprob: -2.7433626651763916
    3. '
' → logprob: -3.8683626651763916
    4. '#' → logprob: -4.368362903594971
    5. '        
' → logprob: -4.618362903594971
    6. ',' → logprob: -6.993362903594971
    7. '<|end|>' → logprob: -7.243362903594971
    8. ')' → logprob: -7.993362903594971
    9. '   ' → logprob: -8.493362426757812
    10. '#
' → logprob: -8.618362426757812

Token 340: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2305145561695099
    2. '
' → logprob: -1.9805145263671875
    3. '#' → logprob: -3.4805145263671875
    4. '        
' → logprob: -4.1055145263671875
    5. '<|end|>' → logprob: -4.6055145263671875
    6. '

' → logprob: -6.7305145263671875
    7. ',' → logprob: -6.7305145263671875
    8. ' #' → logprob: -6.9805145263671875
    9. '  
' → logprob: -7.2305145263671875
    10. '   ' → logprob: -7.2305145263671875

Token 341: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038704924285411835
    2. '#' → logprob: -3.9137048721313477
    3. '
' → logprob: -4.538704872131348
    4. '        
' → logprob: -5.788704872131348
    5. '<|end|>' → logprob: -6.413704872131348
    6. 'from' → logprob: -7.413704872131348
    7. ' #' → logprob: -7.913704872131348
    8. '<|end|>' → logprob: -8.038704872131348
    9. 'import' → logprob: -8.413704872131348
    10. '   ' → logprob: -8.538704872131348

Token 342: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.22217950224876404
    2. 'from' → logprob: -2.472179412841797
    3. '       ' → logprob: -3.472179412841797
    4. 'unknown' → logprob: -3.597179412841797
    5. 'for' → logprob: -3.847179412841797
    6. 'import' → logprob: -4.847179412841797
    7. 'known' → logprob: -5.472179412841797
    8. '
' → logprob: -5.847179412841797
    9. 'while' → logprob: -6.097179412841797
    10. 'equ' → logprob: -6.222179412841797

Token 343: ' Variables' (ID: 46975)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5501565337181091
    2. 'from' → logprob: -1.050156593322754
    3. 'import' → logprob: -3.050156593322754
    4. ' from' → logprob: -4.675156593322754
    5. '       ' → logprob: -4.800156593322754
    6. ' #' → logprob: -6.050156593322754
    7. 'unknown' → logprob: -6.425156593322754
    8. 'def' → logprob: -6.800156593322754
    9. ' import' → logprob: -7.925156593322754
    10. '
' → logprob: -7.925156593322754

Token 344: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008340333588421345
    2. '=' → logprob: -5.008340358734131
    3. ' are' → logprob: -6.883340358734131
    4. ',' → logprob: -8.508339881896973
    5. ')' → logprob: -9.633339881896973
    6. ':' → logprob: -10.258339881896973
    7. ' to' → logprob: -10.633339881896973
    8. '<|end|>' → logprob: -10.883339881896973
    9. ' in' → logprob: -11.133339881896973
    10. ' is' → logprob: -11.133339881896973

Token 345: ' unknown' (ID: 17927)
  Prédit: ' unknown'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unknown' → logprob: -0.17736677825450897
    2. 'unknown' → logprob: -2.1773667335510254
    3. ' ' → logprob: -4.302366733551025
    4. '[]' → logprob: -4.802366733551025
    5. '[' → logprob: -5.552366733551025
    6. '<|end|>' → logprob: -5.677366733551025
    7. ' []' → logprob: -6.177366733551025
    8. '#' → logprob: -6.427366733551025
    9. ' (' → logprob: -6.677366733551025
    10. ' #' → logprob: -6.802366733551025

Token 346: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06600875407457352
    2. '_positions' → logprob: -3.4410088062286377
    3. ')' → logprob: -4.441008567810059
    4. '_s' → logprob: -4.691008567810059
    5. '_' → logprob: -5.941008567810059
    6. '_indices' → logprob: -6.191008567810059
    7. '_count' → logprob: -6.441008567810059
    8. ' =' → logprob: -6.441008567810059
    9. '_counts' → logprob: -7.441008567810059
    10. '_values' → logprob: -7.941008567810059

Token 347: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7763852477073669
    2. '<|end|>' → logprob: -1.0263853073120117
    3. ')' → logprob: -2.1513853073120117
    4. ',' → logprob: -3.9013853073120117
    5. '<|end|>' → logprob: -4.276385307312012
    6. '
' → logprob: -4.276385307312012
    7. '=' → logprob: -5.401385307312012
    8. 's' → logprob: -6.276385307312012
    9. '[' → logprob: -6.401385307312012
    10. ',
' → logprob: -7.026385307312012

Token 348: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8045628666877747
    2. '<|end|>' → logprob: -1.3045628070831299
    3. ',' → logprob: -3.30456280708313
    4. '#' → logprob: -3.30456280708313
    5. ')' → logprob: -3.30456280708313
    6. ' =' → logprob: -3.42956280708313
    7. '
' → logprob: -3.67956280708313
    8. 'import' → logprob: -4.429563045501709
    9. ' #' → logprob: -4.679563045501709
    10. '   ' → logprob: -4.929563045501709

Token 349: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7416869401931763
    2. '
' → logprob: -1.1166869401931763
    3. 'import' → logprob: -3.1166868209838867
    4. '<|end|>' → logprob: -3.4916868209838867
    5. '#' (adapté à ' #') → logprob: -4.241686820983887
    6. ',' → logprob: -4.241686820983887
    7. ' 
' → logprob: -4.366686820983887
    8. ' from' → logprob: -4.741686820983887
    9. 'from' → logprob: -4.991686820983887
    10. ' ' → logprob: -4.991686820983887

Token 350: ' Equ' (ID: 14400)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1491426229476929
    2. 'from' → logprob: -1.2741426229476929
    3. 'import' → logprob: -2.2741427421569824
    4. '       ' → logprob: -2.3991427421569824
    5. ' from' → logprob: -2.3991427421569824
    6. ' #' → logprob: -3.6491427421569824
    7. ' equations' → logprob: -3.8991427421569824
    8. 'A' → logprob: -4.149142742156982
    9. ' A' → logprob: -4.524142742156982
    10. 'constraints' → logprob: -5.024142742156982

Token 351: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.25715428590774536
    2. 'als' → logprob: -1.5071542263031006
    3. 'al' → logprob: -6.13215446472168
    4. 'a' → logprob: -6.75715446472168
    5. '
' → logprob: -7.75715446472168
    6. 'at' → logprob: -7.88215446472168
    7. '   ' → logprob: -8.88215446472168
    8. '

' → logprob: -9.00715446472168
    9. '```' → logprob: -9.13215446472168
    10. 'ats' → logprob: -9.38215446472168

Token 352: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06110064312815666
    2. '=' → logprob: -4.186100482940674
    3. '#' → logprob: -4.436100482940674
    4. 's' → logprob: -5.436100482940674
    5. ' #' → logprob: -5.436100482940674
    6. ',' → logprob: -5.936100482940674
    7. 'import' → logprob: -6.061100482940674
    8. '       ' → logprob: -6.186100482940674
    9. ' =
' → logprob: -6.186100482940674
    10. ':' → logprob: -6.311100482940674

Token 353: ' p' (ID: 275)
  Prédit: ' equations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' equations' → logprob: -1.1552927494049072
    2. ' #' → logprob: -2.0302927494049072
    3. ' eq' → logprob: -2.9052927494049072
    4. '#' → logprob: -2.9052927494049072
    5. ' num' → logprob: -3.0302927494049072
    6. 'num' → logprob: -3.2802927494049072
    7. ' lines' → logprob: -3.2802927494049072
    8. ' n' → logprob: -3.2802927494049072
    9. ' rows' → logprob: -3.2802927494049072
    10. ' pass' → logprob: -3.5302927494049072

Token 354: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 355: 'product' (ID: 5260)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8012687563896179
    2. '+' → logprob: -1.1762688159942627
    3. ')' → logprob: -1.5512688159942627
    4. '+
' → logprob: -4.926268577575684
    5. ' )' → logprob: -5.301268577575684
    6. ' +
' → logprob: -5.426268577575684
    7. '+s' → logprob: -5.676268577575684
    8. '+)' → logprob: -5.926268577575684
    9. '
' → logprob: -6.051268577575684
    10. ')+' → logprob: -6.176268577575684

Token 356: ' totals' (ID: 92279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9727797508239746
    2. 's' → logprob: -0.9727797508239746
    3. ')s' → logprob: -2.3477797508239746
    4. ' )' → logprob: -2.8477797508239746
    5. ' s' → logprob: -3.3477797508239746
    6. ' totals' → logprob: -3.9727797508239746
    7. '   ' → logprob: -4.472779750823975
    8. '_s' → logprob: -5.097779750823975
    9. ' ' → logprob: -5.972779750823975
    10. '_total' → logprob: -6.472779750823975

Token 357: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004492427222430706
    2. ' )' → logprob: -6.379492282867432
    3. ')+' → logprob: -6.504492282867432
    4. ' +' → logprob: -7.254492282867432
    5. ')
' → logprob: -8.62949275970459
    6. '   ' → logprob: -9.12949275970459
    7. '+' → logprob: -9.25449275970459
    8. '),' → logprob: -10.12949275970459
    9. 's' → logprob: -10.37949275970459
    10. '+)' → logprob: -11.00449275970459

Token 358: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.168007254600525
    2. ' +' → logprob: -1.418007254600525
    3. ')' → logprob: -1.918007254600525
    4. '
' → logprob: -2.1680073738098145
    5. '<|end|>' → logprob: -2.5430073738098145
    6. '+' → logprob: -3.5430073738098145
    7. 's' → logprob: -4.1680073738098145
    8. ' and' → logprob: -4.1680073738098145
    9. ' s' → logprob: -4.7930073738098145
    10. ')
' → logprob: -5.0430073738098145

Token 359: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.25203201174736023
    2. 's' → logprob: -1.5020320415496826
    3. '1' → logprob: -10.127032279968262
    4. ' ' → logprob: -10.252032279968262
    5. ' ' → logprob: -12.127032279968262
    6. '
' → logprob: -12.752032279968262
    7. ' p' → logprob: -12.752032279968262
    8. ' +' → logprob: -13.127032279968262
    9. '+' → logprob: -13.314532279968262
    10. '    ' → logprob: -13.877032279968262

Token 360: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 361: 'store' (ID: 8862)
  Prédit: 'store'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'store' → logprob: -0.610858678817749
    2. ' store' → logprob: -1.110858678817749
    3. 'stores' → logprob: -2.735858678817749
    4. '(store' → logprob: -3.860858678817749
    5. ' stores' → logprob: -4.610858917236328
    6. ' (' → logprob: -4.860858917236328
    7. ' totals' → logprob: -4.860858917236328
    8. 'tot' → logprob: -4.860858917236328
    9. ')' → logprob: -5.485858917236328
    10. '1' → logprob: -6.485858917236328

Token 362: ' totals' (ID: 92279)
  Prédit: ' totals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' totals' → logprob: -0.09075161814689636
    2. 'tot' → logprob: -2.9657516479492188
    3. ')' → logprob: -3.9657516479492188
    4. ' )' → logprob: -5.090751647949219
    5. '_tot' → logprob: -5.215751647949219
    6. ' tot' → logprob: -5.840751647949219
    7. 's' → logprob: -6.840751647949219
    8. ' counts' → logprob: -9.215751647949219
    9. ' ' → logprob: -9.465751647949219
    10. ' total' → logprob: -9.590751647949219

Token 363: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004074009135365486
    2. ')
' → logprob: -5.7540740966796875
    3. ' )' → logprob: -7.6290740966796875
    4. ')

' → logprob: -9.629074096679688
    5. '=' → logprob: -10.004074096679688
    6. '#' → logprob: -10.254074096679688
    7. ' =' → logprob: -10.379074096679688
    8. '   ' → logprob: -10.629074096679688
    9. '):' → logprob: -10.879074096679688
    10. 's' → logprob: -11.004074096679688

Token 364: ' =' (ID: 314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25681301951408386
    2. '       ' → logprob: -1.8818130493164062
    3. '        
' → logprob: -3.3818130493164062
    4. '<|end|>' → logprob: -4.381813049316406
    5. '#' → logprob: -5.006813049316406
    6. 'import' → logprob: -5.381813049316406
    7. '

' → logprob: -6.256813049316406
    8. '<|end|>' → logprob: -6.381813049316406
    9. '  
' → logprob: -6.756813049316406
    10. '    
' → logprob: -6.881813049316406

Token 365: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2857552170753479
    2. ' p' → logprob: -1.4107551574707031
    3. '(p' → logprob: -6.535755157470703
    4. ' (' → logprob: -6.535755157470703
    5. 'len' → logprob: -7.285755157470703
    6. ' len' → logprob: -7.785755157470703
    7. ' ' → logprob: -8.660755157470703
    8. '(' → logprob: -9.160755157470703
    9. '(len' → logprob: -9.160755157470703
    10. ' unknown' → logprob: -9.910755157470703

Token 366: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1409706324338913
    2. ' +' → logprob: -2.7659707069396973
    3. '*' → logprob: -3.3909707069396973
    4. '-' → logprob: -4.890970706939697
    5. 's' → logprob: -4.890970706939697
    6. ')' → logprob: -5.640970706939697
    7. '+s' → logprob: -6.015970706939697
    8. '+
' → logprob: -6.265970706939697
    9. ' ' → logprob: -6.390970706939697
    10. ' *' → logprob: -6.640970706939697

Token 367: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2622758150100708
    2. ' s' → logprob: -1.5122758150100708
    3. '<|end|>' → logprob: -4.637275695800781
    4. ' ' → logprob: -8.262275695800781
    5. '1' → logprob: -8.637275695800781
    6. '
' → logprob: -9.137275695800781
    7. '<|end|>' → logprob: -10.137275695800781
    8. '	s' → logprob: -11.887275695800781
    9. ' (' → logprob: -12.887275695800781
    10. '(s' → logprob: -13.137275695800781

Token 368: ' equations' (ID: 61524)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41445574164390564
    2. '       ' → logprob: -1.539455771446228
    3. '        
' → logprob: -2.9144556522369385
    4. '<|end|>' → logprob: -3.1644556522369385
    5. 'import' → logprob: -5.164455890655518
    6. '<|end|>' → logprob: -5.789455890655518
    7. ',' → logprob: -5.914455890655518
    8. '        ' → logprob: -6.164455890655518
    9. '\n' → logprob: -6.289455890655518
    10. '#' → logprob: -6.414455890655518

Token 369: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8200642466545105
    2. '       ' → logprob: -0.9450642466545105
    3. 'import' → logprob: -2.6950643062591553
    4. '        
' → logprob: -2.9450643062591553
    5. 'from' → logprob: -3.9450643062591553
    6. '#' → logprob: -4.320064067840576
    7. ',' → logprob: -5.820064067840576
    8. '        ' → logprob: -6.320064067840576
    9. ' from' → logprob: -6.320064067840576
    10. '<|end|>' → logprob: -6.445064067840576

Token 370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20076315104961395
    2. '<|end|>' → logprob: -2.45076322555542
    3. '
' → logprob: -3.20076322555542
    4. '#' → logprob: -4.32576322555542
    5. 'import' → logprob: -5.32576322555542
    6. '        
' → logprob: -5.45076322555542
    7. ' #' → logprob: -5.70076322555542
    8. ',' → logprob: -5.95076322555542
    9. '   ' → logprob: -6.07576322555542
    10. '        ' → logprob: -6.20076322555542

Token 371: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22374725341796875
    2. '
' → logprob: -2.9737472534179688
    3. '#' (adapté à ' #') → logprob: -3.4737472534179688
    4. '<|end|>' → logprob: -3.8487472534179688
    5. '        
' → logprob: -3.9737472534179688
    6. 'import' → logprob: -4.223747253417969
    7. '        ' → logprob: -4.598747253417969
    8. ',' → logprob: -4.848747253417969
    9. ' if' → logprob: -4.973747253417969
    10. ' #' → logprob: -5.348747253417969

Token 372: ' Unknown' (ID: 41855)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.168177843093872
    2. 'from' → logprob: -1.418177843093872
    3. 'import' → logprob: -1.543177843093872
    4. '#' → logprob: -2.418177843093872
    5. '
' → logprob: -2.918177843093872
    6. ' from' → logprob: -3.168177843093872
    7. 'if' → logprob: -4.293177604675293
    8. ' if' → logprob: -4.668177604675293
    9. ' #' → logprob: -5.043177604675293
    10. '        
' → logprob: -5.418177604675293

Token 373: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00010163593105971813
    2. '<|end|>' → logprob: -9.500102043151855
    3. '_' → logprob: -12.250102043151855
    4. '<|end|>' → logprob: -12.875102043151855
    5. '_tokens' → logprob: -13.000102043151855
    6. ')' → logprob: -13.125102043151855
    7. '_s' → logprob: -13.125102043151855
    8. '
' → logprob: -13.250102043151855
    9. '=' → logprob: -13.375102043151855
    10. ' s' → logprob: -13.500102043151855

Token 374: ' count' (ID: 3605)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 375: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08270979672670364
    2. '=' → logprob: -2.707709789276123
    3. ')' → logprob: -6.207709789276123
    4. '>' → logprob: -6.457709789276123
    5. ' >' → logprob: -6.582709789276123
    6. ' +=' → logprob: -6.832709789276123
    7. ' >=' → logprob: -6.957709789276123
    8. '_count' → logprob: -7.332709789276123
    9. ' ==' → logprob: -7.457709789276123
    10. '_' → logprob: -7.582709789276123

Token 376: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.3287498950958252
    2. 'be' → logprob: -1.5787498950958252
    3. 'ex' → logprob: -3.203749895095825
    4. ' exceed' → logprob: -3.578749895095825
    5. '>' → logprob: -5.703749656677246
    6. 'not' → logprob: -8.328749656677246
    7. ' vary' → logprob: -8.453749656677246
    8. '<=' → logprob: -8.578749656677246
    9. 'equal' → logprob: -9.203749656677246
    10. ' ex' → logprob: -9.328749656677246

Token 377: ' more' (ID: 945)
  Prédit: 'greater'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'greater' → logprob: -0.3120477497577667
    2. 'more' → logprob: -1.6870477199554443
    3. 'larg' → logprob: -3.6870477199554443
    4. ' greater' → logprob: -3.8120477199554443
    5. ' more' → logprob: -4.562047958374023
    6. 'p' → logprob: -4.812047958374023
    7. 'less' → logprob: -5.687047958374023
    8. '>' → logprob: -5.937047958374023
    9. 'equal' → logprob: -5.937047958374023
    10. ' larger' → logprob: -6.562047958374023

Token 378: ' than' (ID: 1572)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7254317998886108
    2. '
' → logprob: -1.4754317998886108
    3. '<|end|>' → logprob: -1.9754317998886108
    4. ' =' → logprob: -3.8504319190979004
    5. '        
' → logprob: -3.9754319190979004
    6. '   ' → logprob: -4.3504319190979
    7. ',' → logprob: -4.6004319190979
    8. ')' → logprob: -4.6004319190979
    9. '<|end|>' → logprob: -4.6004319190979
    10. '=' → logprob: -4.7254319190979

Token 379: ' equations' (ID: 61524)
  Prédit: ' equations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' equations' → logprob: -0.8810640573501587
    2. 'p' → logprob: -1.2560640573501587
    3. 'equ' → logprob: -1.5060640573501587
    4. ' p' → logprob: -2.631063938140869
    5. 'the' → logprob: -6.006063938140869
    6. ' the' → logprob: -6.756063938140869
    7. 'variables' → logprob: -7.006063938140869
    8. ' variables' → logprob: -7.631063938140869
    9. 'number' → logprob: -7.756063938140869
    10. ' number' → logprob: -8.006064414978027

Token 380: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3819521963596344
    2. '<|end|>' → logprob: -1.881952166557312
    3. '
' → logprob: -2.6319522857666016
    4. '        
' → logprob: -2.8819522857666016
    5. '<|end|>' → logprob: -4.756952285766602
    6. '#' → logprob: -4.881952285766602
    7. ',' → logprob: -5.256952285766602
    8. '        ' → logprob: -5.506952285766602
    9. ' ' → logprob: -6.506952285766602
    10. ' #' → logprob: -6.881952285766602

Token 381: ' no' (ID: 860)
  Prédit: ' use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' use' → logprob: -1.0219671726226807
    2. ' back' → logprob: -1.7719671726226807
    3. ' possible' → logprob: -2.3969671726226807
    4. ' None' → logprob: -3.2719671726226807
    5. ' continue' → logprob: -3.3969671726226807
    6. '   ' → logprob: -3.6469671726226807
    7. ' #' → logprob: -3.7719671726226807
    8. ' need' → logprob: -3.7719671726226807
    9. ' pass' → logprob: -4.021966934204102
    10. ' try' → logprob: -4.146966934204102

Token 382: ' unique' (ID: 5746)
  Prédit: ' solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -1.1696507930755615
    2. 'solution' → logprob: -2.2946507930755615
    3. ' unique' → logprob: -2.5446507930755615
    4. ' guarantee' → logprob: -2.9196507930755615
    5. 'gu' → logprob: -3.0446507930755615
    6. ' guaranteed' → logprob: -3.0446507930755615
    7. 'unique' → logprob: -3.0446507930755615
    8. ' problem' → logprob: -3.1696507930755615
    9. 'problem' → logprob: -3.6696507930755615
    10. 'space' → logprob: -3.6696507930755615

Token 383: ' solution' (ID: 7578)
  Prédit: ' solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.8324171900749207
    2. '       ' → logprob: -1.0824172496795654
    3. '        
' → logprob: -3.4574172496795654
    4. ' for' → logprob: -3.8324172496795654
    5. ' line' → logprob: -3.9574172496795654
    6. '           ' → logprob: -3.9574172496795654
    7. ' if' → logprob: -4.207417011260986
    8. 'solution' → logprob: -4.332417011260986
    9. '<|end|>' → logprob: -4.707417011260986
    10. ' or' → logprob: -4.832417011260986

Token 384: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6391730308532715
    2. '
' → logprob: -1.3891730308532715
    3. '<|end|>' → logprob: -2.0141730308532715
    4. '        
' → logprob: -3.2641730308532715
    5. ',' → logprob: -4.6391730308532715
    6. '<|end|>' → logprob: -4.8891730308532715
    7. '#' → logprob: -5.0141730308532715
    8. ' if' → logprob: -5.3891730308532715
    9. ' ' → logprob: -5.7641730308532715
    10. '   ' → logprob: -6.2641730308532715

Token 385: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6343113780021667
    2. ' ' → logprob: -1.2593114376068115
    3. '<|end|>' → logprob: -2.7593114376068115
    4. ' 
' → logprob: -3.2593114376068115
    5. '\' → logprob: -4.509311199188232
    6. '        ' → logprob: -4.634311199188232
    7. ',' → logprob: -4.759311199188232
    8. ')' → logprob: -4.884311199188232
    9. ' \' → logprob: -4.884311199188232
    10. '        
' → logprob: -5.134311199188232

Token 386: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3233671188354492
    2. '        ' → logprob: -2.573367118835449
    3. '        
' → logprob: -2.823367118835449
    4. ' if' → logprob: -4.073367118835449
    5. 'import' → logprob: -4.073367118835449
    6. ' ' → logprob: -4.198367118835449
    7. '
' → logprob: -4.323367118835449
    8. ',' → logprob: -4.323367118835449
    9. '<|end|>' → logprob: -4.573367118835449
    10. '#' (adapté à ' #') → logprob: -4.573367118835449

Token 387: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8876444101333618
    2. 'from' → logprob: -1.3876444101333618
    3. 'import' → logprob: -1.8876444101333618
    4. '#' → logprob: -3.0126442909240723
    5. ' from' → logprob: -3.1376442909240723
    6. '
' → logprob: -3.7626442909240723
    7. 'if' → logprob: -4.512644290924072
    8. 'A' → logprob: -4.762644290924072
    9. '        
' → logprob: -4.762644290924072
    10. ' if' → logprob: -4.762644290924072

Token 388: ' try' (ID: 2075)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.6566199064254761
    2. ' need' → logprob: -1.281619906425476
    3. ' continue' → logprob: -3.4066200256347656
    4. 'need' → logprob: -3.4066200256347656
    5. ' want' → logprob: -3.5316200256347656
    6. 'can' → logprob: -3.5316200256347656
    7. '       ' → logprob: -3.6566200256347656
    8. 'continue' → logprob: -4.281620025634766
    9. '   ' → logprob: -4.906620025634766
    10. 'import' → logprob: -5.031620025634766

Token 389: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6576997637748718
    2. 'to' → logprob: -0.7826997637748718
    3. ':' → logprob: -4.4076995849609375
    4. '   ' → logprob: -4.9076995849609375
    5. ':
' → logprob: -5.9076995849609375
    6. '    ' → logprob: -6.2826995849609375
    7. '	to' → logprob: -8.532699584960938
    8. ' ' → logprob: -8.782699584960938
    9. '  ' → logprob: -9.657699584960938
    10. ' :' → logprob: -10.032699584960938

Token 390: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.12801803648471832
    2. 'use' → logprob: -3.0030181407928467
    3. ' use' → logprob: -4.003017902374268
    4. 'find' → logprob: -4.753017902374268
    5. ' solve' → logprob: -5.128017902374268
    6. 'prop' → logprob: -5.503017902374268
    7. 'ded' → logprob: -5.628017902374268
    8. 'det' → logprob: -5.878017902374268
    9. 'fill' → logprob: -5.878017902374268
    10. 'implement' → logprob: -6.128017902374268

Token 391: ' by' (ID: 656)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28070488572120667
    2. 'for' → logprob: -1.5307048559188843
    3. '   ' → logprob: -5.030704975128174
    4. ' the' → logprob: -5.405704975128174
    5. ' ' → logprob: -6.155704975128174
    6. '       ' → logprob: -6.780704975128174
    7. '
' → logprob: -6.905704975128174
    8. '    ' → logprob: -6.905704975128174
    9. ' by' → logprob: -7.155704975128174
    10. ' them' → logprob: -7.155704975128174

Token 392: ' substitution' (ID: 92838)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.9062412977218628
    2. 'iter' → logprob: -1.9062412977218628
    3. ' using' → logprob: -2.1562414169311523
    4. 'el' → logprob: -2.5312414169311523
    5. ' constraint' → logprob: -2.6562414169311523
    6. ' filling' → logprob: -2.7812414169311523
    7. 'using' → logprob: -2.7812414169311523
    8. ' iter' → logprob: -3.2812414169311523
    9. 'import' → logprob: -3.4062414169311523
    10. 'constraint' → logprob: -3.7812414169311523

Token 393: ' repeatedly' (ID: 45605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8224287629127502
    2. '
' → logprob: -2.3224287033081055
    3. '<|end|>' → logprob: -2.3224287033081055
    4. ' ' → logprob: -2.4474287033081055
    5. '        
' → logprob: -2.5724287033081055
    6. ',' → logprob: -2.8224287033081055
    7. ' 
' → logprob: -4.1974287033081055
    8. '        ' → logprob: -4.1974287033081055
    9. '   ' → logprob: -4.4474287033081055
    10. ' for' → logprob: -4.5724287033081055

Token 394: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05985569208860397
    2. '        
' → logprob: -3.3098556995391846
    3. '
' → logprob: -4.3098554611206055
    4. '        ' → logprob: -6.4348554611206055
    5. ' while' → logprob: -6.4348554611206055
    6. 'while' → logprob: -6.9348554611206055
    7. '    ' → logprob: -7.4348554611206055
    8. '   ' → logprob: -7.5598554611206055
    9. ',' → logprob: -7.6848554611206055
    10. '    
' → logprob: -8.059855461120605

Token 395: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3202933967113495
    2. ' while' → logprob: -2.320293426513672
    3. 'while' → logprob: -2.445293426513672
    4. '        
' → logprob: -2.945293426513672
    5. '
' → logprob: -4.695293426513672
    6. '        ' → logprob: -4.945293426513672
    7. ' 
' → logprob: -5.195293426513672
    8. '    ' → logprob: -5.820293426513672
    9. ' ' → logprob: -5.820293426513672
    10. '   ' → logprob: -6.570293426513672

Token 396: ' values' (ID: 4824)
  Prédit: 'changed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'changed' → logprob: -0.993783712387085
    2. '       ' → logprob: -1.118783712387085
    3. 'while' → logprob: -1.868783712387085
    4. 'updated' → logprob: -3.368783712387085
    5. ' changed' → logprob: -3.368783712387085
    6. ' while' → logprob: -3.743783712387085
    7. 'def' → logprob: -4.118783950805664
    8. 'for' → logprob: -5.243783950805664
    9. '   ' → logprob: -5.368783950805664
    10. 'from' → logprob: -5.618783950805664

Token 397: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023489460349082947
    2. '=' → logprob: -3.773489475250244
    3. '_found' → logprob: -9.648488998413086
    4. '_changed' → logprob: -9.773488998413086
    5. ',' → logprob: -10.648488998413086
    6. ')' → logprob: -10.773488998413086
    7. '_' → logprob: -11.023488998413086
    8. '_updated' → logprob: -11.773488998413086
    9. ' ' → logprob: -11.898488998413086
    10. 'found' → logprob: -12.023488998413086

Token 398: ' [[' (ID: 9237)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.06447067111730576
    2. '{' → logprob: -3.6894707679748535
    3. '[' → logprob: -4.0644707679748535
    4. '[[' → logprob: -4.5644707679748535
    5. '[data' → logprob: -4.9394707679748535
    6. '[]' → logprob: -6.9394707679748535
    7. 'data' → logprob: -7.0644707679748535
    8. 'dict' → logprob: -7.4394707679748535
    9. ' {}' → logprob: -9.439470291137695
    10. '[{' → logprob: -9.564470291137695

Token 399: 'data' (ID: 1074)
  Prédit: 'data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.6375924348831177
    2. 'None' → logprob: -1.2625924348831177
    3. '0' → logprob: -2.262592315673828
    4. 'table' → logprob: -3.137592315673828
    5. 'x' → logprob: -4.387592315673828
    6. 'row' → logprob: -4.762592315673828
    7. 'v' → logprob: -5.387592315673828
    8. 'val' → logprob: -5.387592315673828
    9. ' data' → logprob: -6.012592315673828
    10. '(' → logprob: -6.387592315673828

Token 400: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0056071155704557896
    2. ']' → logprob: -6.5056071281433105
    3. '[j' → logprob: -6.8806071281433105
    4. ']]' → logprob: -7.0056071281433105
    5. '[row' → logprob: -7.0056071281433105
    6. 'if' → logprob: -8.380606651306152
    7. ' if' → logprob: -8.630606651306152
    8. '[y' → logprob: -9.130606651306152
    9. '       ' → logprob: -9.505606651306152
    10. '[' → logprob: -9.505606651306152

Token 401: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002920303028076887
    2. '[j' → logprob: -6.002920150756836
    3. ']' → logprob: -8.252920150756836
    4. ' ][' → logprob: -8.877920150756836
    5. ']][' → logprob: -11.377920150756836
    6. '[' → logprob: -11.377920150756836
    7. ']]' → logprob: -12.252920150756836
    8. '   ' → logprob: -13.377920150756836
    9. 'j' → logprob: -13.377920150756836
    10. '"][' → logprob: -13.877920150756836

Token 402: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.214019307051785e-05
    2. '0' → logprob: -10.875032424926758
    3. ']' → logprob: -12.375032424926758
    4. '
' → logprob: -12.500032424926758
    5. ' j' → logprob: -13.375032424926758
    6. '   ' → logprob: -13.750032424926758
    7. ' ' → logprob: -14.750032424926758
    8. ':j' → logprob: -14.750032424926758
    9. '][' → logprob: -14.875032424926758
    10. '-' → logprob: -15.375032424926758

Token 403: ']' (ID: 60)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.33961421251296997
    2. 'if' → logprob: -2.214614152908325
    3. ']' → logprob: -2.339614152908325
    4. ' for' → logprob: -2.839614152908325
    5. ' is' → logprob: -4.839614391326904
    6. 'for' → logprob: -5.089614391326904
    7. ']]' → logprob: -5.464614391326904
    8. ' ]' → logprob: -6.339614391326904
    9. '            ' → logprob: -7.214614391326904
    10. '           ' → logprob: -7.214614391326904

Token 404: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23833763599395752
    2. ' if' → logprob: -2.238337516784668
    3. 'for' → logprob: -2.363337516784668
    4. 'if' → logprob: -4.613337516784668
    5. ' ' → logprob: -7.363337516784668
    6. '            ' → logprob: -8.488337516784668
    7. '           ' → logprob: -8.863337516784668
    8. '        ' → logprob: -9.113337516784668
    9. '         ' → logprob: -9.863337516784668
    10. '    ' → logprob: -10.238337516784668

Token 405: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00029637437546625733
    2. ' j' → logprob: -8.125296592712402
    3. '	j' → logprob: -15.375296592712402
    4. '   ' → logprob: -16.750295639038086
    5. ' ' → logprob: -16.750295639038086
    6. '  ' → logprob: -18.375295639038086
    7. '$j' → logprob: -18.625295639038086
    8. '    ' → logprob: -19.125295639038086
    9. '_j' → logprob: -19.250295639038086
    10. '
' → logprob: -19.625295639038086

Token 406: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.386902779340744
    2. 'in' → logprob: -1.1369028091430664
    3. ' ' → logprob: -10.761902809143066
    4. 'range' → logprob: -12.386902809143066
    5. 's' → logprob: -12.886902809143066
    6. '0' → logprob: -13.761902809143066
    7. 'n' → logprob: -14.886902809143066
    8. ')' → logprob: -15.011902809143066
    9. ' range' → logprob: -15.261902809143066
    10. 'j' → logprob: -15.386902809143066

Token 407: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029757089912891388
    2. ' range' → logprob: -3.529757022857666
    3. '   ' → logprob: -12.154757499694824
    4. ' ' → logprob: -14.404757499694824
    5. '  ' → logprob: -14.904757499694824
    6. '(range' → logprob: -15.529757499694824
    7. '    ' → logprob: -16.404756546020508
    8. '
' → logprob: -17.279756546020508
    9. '	range' → logprob: -17.529756546020508
    10. '     ' → logprob: -17.654756546020508

Token 408: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0019487487152218819
    2. '(s' → logprob: -6.626948833465576
    3. ' s' → logprob: -7.876948833465576
    4. '   ' → logprob: -8.501948356628418
    5. '       ' → logprob: -11.376948356628418
    6. '           ' → logprob: -11.626948356628418
    7. '    ' → logprob: -12.501948356628418
    8. '	s' → logprob: -13.126948356628418
    9. ' ' → logprob: -13.251948356628418
    10. ' (' → logprob: -13.501948356628418

Token 409: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.26052823662757874
    2. ')' → logprob: -1.6355282068252563
    3. ']' → logprob: -3.885528326034546
    4. ' )' → logprob: -4.510528087615967
    5. ' ]' → logprob: -6.385528087615967
    6. '+' → logprob: -7.885528087615967
    7. ' if' → logprob: -8.385528564453125
    8. '       ' → logprob: -8.760528564453125
    9. '   ' → logprob: -9.010528564453125
    10. '           ' → logprob: -9.510528564453125

Token 410: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13036957383155823
    2. ']' → logprob: -2.3803696632385254
    3. ' ]' → logprob: -3.8803696632385254
    4. 'for' → logprob: -5.630369663238525
    5. '       ' → logprob: -6.255369663238525
    6. '        ' → logprob: -6.880369663238525
    7. '           ' → logprob: -7.005369663238525
    8. '               ' → logprob: -7.880369663238525
    9. ' ' → logprob: -7.880369663238525
    10. '                ' → logprob: -8.505369186401367

Token 411: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6936715245246887
    2. 'range' → logprob: -0.6936715245246887
    3. 'i' → logprob: -7.568671703338623
    4. ' i' → logprob: -11.818671226501465
    5. '_range' → logprob: -16.19367218017578
    6. 'p' → logprob: -16.44367218017578
    7. ' ' → logprob: -16.44367218017578
    8. '	range' → logprob: -16.69367218017578
    9. 'r' → logprob: -16.81867218017578
    10. '(range' → logprob: -17.06867218017578

Token 412: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005116584710776806
    2. '<|end|>' → logprob: -5.7551164627075195
    3. 'in' → logprob: -6.8801164627075195
    4. ']' → logprob: -7.5051164627075195
    5. ' ]' → logprob: -9.00511646270752
    6. '<|end|>' → logprob: -9.63011646270752
    7. ' ' → logprob: -9.75511646270752
    8. ')' → logprob: -10.00511646270752
    9. ',' → logprob: -12.00511646270752
    10. '   ' → logprob: -12.13011646270752

Token 413: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006727564614266157
    2. ' range' → logprob: -5.006727695465088
    3. 'p' → logprob: -11.38172721862793
    4. '(range' → logprob: -14.00672721862793
    5. '   ' → logprob: -17.13172721862793
    6. ' p' → logprob: -17.88172721862793
    7. ' ' → logprob: -18.88172721862793
    8. '(p' → logprob: -18.88172721862793
    9. '	range' → logprob: -18.88172721862793
    10. 'r' → logprob: -19.75672721862793

Token 414: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5235621929168701
    2. '(p' → logprob: -0.8985621929168701
    3. ' p' → logprob: -7.898562431335449
    4. 'range' → logprob: -10.64856243133545
    5. '(' → logprob: -10.77356243133545
    6. ' (' → logprob: -11.52356243133545
    7. '   ' → logprob: -12.14856243133545
    8. ' range' → logprob: -14.14856243133545
    9. '           ' → logprob: -14.14856243133545
    10. '
' → logprob: -14.27356243133545

Token 415: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.47519850730895996
    2. ')]' → logprob: -0.97519850730896
    3. ' ]' → logprob: -7.350198745727539
    4. ']]' → logprob: -8.225198745727539
    5. ']
' → logprob: -9.725198745727539
    6. '       ' → logprob: -9.850198745727539
    7. ')' → logprob: -9.850198745727539
    8. '}]' → logprob: -11.600198745727539
    9. ']}' → logprob: -11.725198745727539
    10. '   ' → logprob: -12.100198745727539

Token 416: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06204241141676903
    2. '        
' → logprob: -3.687042474746704
    3. '<|end|>' → logprob: -4.812042236328125
    4. '
' → logprob: -5.062042236328125
    5. ' ' → logprob: -5.187042236328125
    6. ')' → logprob: -5.687042236328125
    7. '[' → logprob: -6.312042236328125
    8. ' 
' → logprob: -6.312042236328125
    9. '        ' → logprob: -6.562042236328125
    10. '  
' → logprob: -6.687042236328125

Token 417: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4471780061721802
    2. ' while' → logprob: -2.1971778869628906
    3. 'while' → logprob: -2.4471778869628906
    4. '        
' → logprob: -2.4471778869628906
    5. '
' → logprob: -3.3221778869628906
    6. ' 
' → logprob: -3.9471778869628906
    7. ' ' → logprob: -6.197177886962891
    8. '    
' → logprob: -6.197177886962891
    9. '  
' → logprob: -6.197177886962891
    10. '<|end|>' → logprob: -6.322177886962891

Token 418: ' Initially' (ID: 96924)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.3579084575176239
    2. 'while' → logprob: -1.3579084873199463
    3. '       ' → logprob: -4.107908248901367
    4. ' for' → logprob: -4.482908248901367
    5. ' changed' → logprob: -5.482908248901367
    6. 'for' → logprob: -5.482908248901367
    7. 'changed' → logprob: -6.857908248901367
    8. '   ' → logprob: -7.107908248901367
    9. ' solved' → logprob: -7.482908248901367
    10. 'unknown' → logprob: -7.732908248901367

Token 419: ' known' (ID: 5542)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.222253680229187
    2. '       ' → logprob: -1.597253680229187
    3. ' =' → logprob: -2.2222537994384766
    4. 'while' → logprob: -2.5972537994384766
    5. '=' → logprob: -2.9722537994384766
    6. ' while' → logprob: -3.3472537994384766
    7. 'known' → logprob: -3.8472537994384766
    8. ':' → logprob: -3.8472537994384766
    9. '   ' → logprob: -3.9722537994384766
    10. '    ' → logprob: -4.472253799438477

Token 420: ' values' (ID: 4824)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 421: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05790741741657257
    2. '_count' → logprob: -3.8079073429107666
    3. '=' → logprob: -3.9329073429107666
    4. 'count' → logprob: -5.932907581329346
    5. '.' → logprob: -6.307907581329346
    6. '_counts' → logprob: -6.432907581329346
    7. ',' → logprob: -6.932907581329346
    8. ' ' → logprob: -7.432907581329346
    9. '   ' → logprob: -7.557907581329346
    10. 'found' → logprob: -7.682907581329346

Token 422: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.0019085274543613195
    2. ' values' → logprob: -6.376908302307129
    3. 'data' → logprob: -10.001908302307129
    4. 'a' → logprob: -10.251908302307129
    5. 'for' → logprob: -10.501908302307129
    6. 'the' → logprob: -10.626908302307129
    7. 'value' → logprob: -11.626908302307129
    8. 'table' → logprob: -11.876908302307129
    9. '
' → logprob: -12.001908302307129
    10. 'some' → logprob: -12.251908302307129

Token 423: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 424: ' unknown' (ID: 17927)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -1.7275298833847046
    2. '#' → logprob: -1.8525298833847046
    3. ' unknown' → logprob: -1.8525298833847046
    4. ' for' → logprob: -1.9775298833847046
    5. '   ' → logprob: -2.227530002593994
    6. '       ' → logprob: -2.727530002593994
    7. 'for' → logprob: -3.227530002593994
    8. ' and' → logprob: -3.602530002593994
    9. ' while' → logprob: -3.977530002593994
    10. ' #' → logprob: -4.352530002593994

Token 425: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29757657647132874
    2. 's' → logprob: -2.047576665878296
    3. '<|end|>' → logprob: -3.047576665878296
    4. ' are' → logprob: -3.672576665878296
    5. '=' → logprob: -4.922576427459717
    6. ')' → logprob: -5.047576427459717
    7. ' as' → logprob: -5.047576427459717
    8. ' values' → logprob: -5.297576427459717
    9. '_values' → logprob: -5.422576427459717
    10. 'values' → logprob: -6.172576427459717

Token 426: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.1602381318807602
    2. ' None' → logprob: -1.9102381467819214
    3. '   ' → logprob: -12.410238265991211
    4. '       ' → logprob: -13.410238265991211
    5. '    ' → logprob: -13.410238265991211
    6. '[' → logprob: -13.660238265991211
    7. ' ' → logprob: -13.660238265991211
    8. '[]' → logprob: -13.785238265991211
    9. '(None' → logprob: -14.535238265991211
    10. ' set' → logprob: -15.035238265991211

Token 427: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 428: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5084801316261292
    2. ' while' → logprob: -1.5084800720214844
    3. 'while' → logprob: -2.2584800720214844
    4. '        
' → logprob: -3.2584800720214844
    5. '
' → logprob: -3.8834800720214844
    6. ' 
' → logprob: -5.508480072021484
    7. '    
' → logprob: -6.008480072021484
    8. '   ' → logprob: -6.383480072021484
    9. '<|end|>' → logprob: -6.633480072021484
    10. '	while' → logprob: -6.758480072021484

Token 429: ' changed' (ID: 9180)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.40960291028022766
    2. ' while' → logprob: -1.4096028804779053
    3. '       ' → logprob: -2.9096028804779053
    4. 'for' → logprob: -4.659603118896484
    5. ' for' → logprob: -4.784603118896484
    6. ' changed' → logprob: -5.159603118896484
    7. 'changed' (adapté à ' changed') → logprob: -5.159603118896484
    8. 'def' → logprob: -5.909603118896484
    9. 'done' → logprob: -6.784603118896484
    10. '   ' → logprob: -7.034603118896484

Token 430: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018729714676737785
    2. '=' → logprob: -4.1437296867370605
    3. '_' → logprob: -6.0187296867370605
    4. ',' → logprob: -8.643730163574219
    5. ' ' → logprob: -10.268730163574219
    6. 's' → logprob: -12.268730163574219
    7. ' +=' → logprob: -12.393730163574219
    8. '[' → logprob: -12.518730163574219
    9. ' ,' → logprob: -12.643730163574219
    10. '_count' → logprob: -12.768730163574219

Token 431: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.00862521305680275
    2. 'True' → logprob: -4.758625030517578
    3. ' False' → logprob: -11.633625030517578
    4. 'False' → logprob: -13.883625030517578
    5. ' ' → logprob: -14.008625030517578
    6. ' ' → logprob: -18.133625030517578
    7. '(True' → logprob: -18.508625030517578
    8. '=True' → logprob: -19.008625030517578
    9. ' Tru' → logprob: -19.008625030517578
    10. '   ' → logprob: -20.258625030517578

Token 432: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48071613907814026
    2. '
' → logprob: -1.1057161092758179
    3. '<|end|>' → logprob: -4.605716228485107
    4. ':' → logprob: -4.730716228485107
    5. '        
' → logprob: -4.855716228485107
    6. 'while' → logprob: -4.980716228485107
    7. '    
' → logprob: -5.105716228485107
    8. '   ' → logprob: -6.105716228485107
    9. ' while' → logprob: -6.480716228485107
    10. '	while' → logprob: -6.980716228485107

Token 433: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0875545740127563
    2. '       ' → logprob: -1.8375545740127563
    3. ' 
' → logprob: -1.9625545740127563
    4. 'while' → logprob: -2.212554454803467
    5. ' while' → logprob: -2.712554454803467
    6. '\n' → logprob: -2.712554454803467
    7. ' ' → logprob: -3.837554454803467
    8. '\' → logprob: -3.837554454803467
    9. '        
' → logprob: -3.837554454803467
    10. '    
' → logprob: -3.837554454803467

Token 434: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.70782870054245
    2. 'while' (adapté à ' while') → logprob: -1.0828287601470947
    3. '       ' → logprob: -2.5828287601470947
    4. ' 
' → logprob: -2.5828287601470947
    5. '    
' → logprob: -5.582828521728516
    6. '        
' → logprob: -5.707828521728516
    7. ' ' → logprob: -5.832828521728516
    8. '	while' → logprob: -6.457828521728516
    9. '   ' → logprob: -6.832828521728516
    10. ' ' → logprob: -6.957828521728516

Token 435: ' changed' (ID: 9180)
  Prédit: ' changed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' changed' → logprob: -0.003183420980349183
    2. 'changed' → logprob: -5.753183364868164
    3. ' ' → logprob: -13.128183364868164
    4. ' ' → logprob: -13.378183364868164
    5. ' True' → logprob: -13.628183364868164
    6. '_changed' → logprob: -14.878183364868164
    7. ' not' → logprob: -15.003183364868164
    8. '.changed' → logprob: -16.253183364868164
    9. 'Changed' → logprob: -16.628183364868164
    10. 'True' → logprob: -16.753183364868164

Token 436: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001872094871941954
    2. ' :' → logprob: -9.250186920166016
    3. ':
' → logprob: -9.750186920166016
    4. '=' → logprob: -10.750186920166016
    5. ' =' → logprob: -11.750186920166016
    6. ' and' → logprob: -13.125186920166016
    7. 'and' → logprob: -14.500186920166016
    8. '):' → logprob: -15.500186920166016
    9. ':=' → logprob: -16.000186920166016
    10. ':

' → logprob: -16.000186920166016

Token 437: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013111407868564129
    2. '   ' → logprob: -4.638111591339111
    3. '       ' → logprob: -5.888111591339111
    4. '    
' → logprob: -8.263111114501953
    5. '
' → logprob: -9.638111114501953
    6. '	       ' → logprob: -10.013111114501953
    7. '            
' → logprob: -10.138111114501953
    8. '    ' → logprob: -10.513111114501953
    9. '               ' → logprob: -10.513111114501953
    10. ' changed' → logprob: -10.763111114501953

Token 438: ' changed' (ID: 9180)
  Prédit: ' changed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' changed' → logprob: -0.2330634742975235
    2. 'changed' (adapté à ' changed') → logprob: -1.7330634593963623
    3. '   ' → logprob: -3.4830634593963623
    4. '       ' → logprob: -8.233063697814941
    5. '           ' → logprob: -10.108063697814941
    6. '    
' → logprob: -10.233063697814941
    7. '_changed' → logprob: -10.358063697814941
    8. '.changed' → logprob: -10.483063697814941
    9. ' ' → logprob: -11.233063697814941
    10. '    ' → logprob: -11.733063697814941

Token 439: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038115501403808594
    2. '=' → logprob: -3.2881155014038086
    3. ' ' → logprob: -9.538115501403809
    4. ' =
' → logprob: -14.038115501403809
    5. ' =)' → logprob: -15.163115501403809
    6. '  ' → logprob: -15.788115501403809
    7. ')' → logprob: -15.788115501403809
    8. '   ' → logprob: -16.038116455078125
    9. '=True' → logprob: -16.163116455078125
    10. ' |=' → logprob: -16.663116455078125

Token 440: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.15991808474063873
    2. 'False' → logprob: -2.4099180698394775
    3. ' True' → logprob: -2.9099180698394775
    4. 'True' → logprob: -5.659918308258057
    5. ' ' → logprob: -14.284917831420898
    6. ' ' → logprob: -17.2849178314209
    7. '   ' → logprob: -18.0349178314209
    8. '    ' → logprob: -18.9099178314209
    9. '(False' → logprob: -19.0349178314209
    10. ' false' → logprob: -19.4099178314209

Token 441: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.025286201387643814
    2. '    
' → logprob: -5.0252861976623535
    3. ' 
' → logprob: -5.2752861976623535
    4. '           ' → logprob: -5.6502861976623535
    5. '       ' → logprob: -6.0252861976623535
    6. '        
' → logprob: -6.0252861976623535
    7. '  
' → logprob: -6.4002861976623535
    8. '\n' → logprob: -6.7752861976623535
    9. '            
' → logprob: -7.0252861976623535
    10. '<|end|>' → logprob: -8.275286674499512

Token 442: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18479816615581512
    2. '
' → logprob: -1.8097981214523315
    3. '    
' → logprob: -5.934798240661621
    4. ' for' → logprob: -7.434798240661621
    5. '       ' → logprob: -7.559798240661621
    6. '            
' → logprob: -7.934798240661621
    7. '        
' → logprob: -8.309798240661621
    8. ' 
' → logprob: -8.559798240661621
    9. '   ' → logprob: -8.934798240661621
    10. '  
' → logprob: -9.059798240661621

Token 443: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0034459992311894894
    2. '#' (adapté à ' #') → logprob: -6.003446102142334
    3. ' for' → logprob: -7.128446102142334
    4. '       ' → logprob: -8.753445625305176
    5. ' #' → logprob: -11.878445625305176
    6. '           ' → logprob: -13.628445625305176
    7. '   ' → logprob: -13.878445625305176
    8. '
' → logprob: -15.128445625305176
    9. '        
' → logprob: -15.378445625305176
    10. '	for' → logprob: -15.628445625305176

Token 444: ' Try' (ID: 14720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.062157806009054184
    2. '#' → logprob: -2.8121578693389893
    3. ' for' → logprob: -9.06215763092041
    4. '           ' → logprob: -10.31215763092041
    5. '       ' → logprob: -10.81215763092041
    6. 'For' → logprob: -11.18715763092041
    7. ' #' → logprob: -12.68715763092041
    8. '   ' → logprob: -13.43715763092041
    9. '
' → logprob: -14.81215763092041
    10. '	for' → logprob: -14.81215763092041

Token 445: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.06226489320397377
    2. ' for' → logprob: -3.062264919281006
    3. '   ' → logprob: -4.937264919281006
    4. 'for' → logprob: -5.687264919281006
    5. 'to' → logprob: -6.062264919281006
    6. ':' → logprob: -8.437264442443848
    7. ' each' → logprob: -9.437264442443848
    8. ' all' → logprob: -9.687264442443848
    9. '    ' → logprob: -9.687264442443848
    10. ' row' → logprob: -9.812264442443848

Token 446: ' solve' (ID: 17722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05524545907974243
    2. ' for' → logprob: -3.4302453994750977
    3. 'range' → logprob: -4.180245399475098
    4. ' range' → logprob: -5.805245399475098
    5. 'solve' → logprob: -6.430245399475098
    6. 'fill' → logprob: -7.930245399475098
    7. 'update' → logprob: -8.305245399475098
    8. 'resolve' → logprob: -8.680245399475098
    9. ' solve' → logprob: -9.180245399475098
    10. 'enumer' → logprob: -9.305245399475098

Token 447: ' rows' (ID: 13585)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08042675256729126
    2. 'for' → logprob: -3.0804266929626465
    3. ' rows' → logprob: -3.5804266929626465
    4. 'rows' → logprob: -6.5804266929626465
    5. ' each' → logprob: -7.3304266929626465
    6. '   ' → logprob: -7.7054266929626465
    7. ' row' → logprob: -7.9554266929626465
    8. '           ' → logprob: -8.830427169799805
    9. ' by' → logprob: -9.580427169799805
    10. '       ' → logprob: -9.580427169799805

Token 448: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5755192637443542
    2. '           ' → logprob: -1.825519323348999
    3. ' for' → logprob: -1.950519323348999
    4. 'for' → logprob: -2.075519323348999
    5. '   ' → logprob: -6.45051908493042
    6. ':' → logprob: -6.45051908493042
    7. '
' → logprob: -7.07551908493042
    8. ',' → logprob: -7.57551908493042
    9. '               ' → logprob: -7.57551908493042
    10. ':
' → logprob: -7.82551908493042

Token 449: 'product' (ID: 5260)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9787746071815491
    2. ')' → logprob: -1.2287745475769043
    3. 'range' → logprob: -2.1037745475769043
    4. 'for' → logprob: -2.2287745475769043
    5. ' for' → logprob: -3.2287745475769043
    6. ' range' → logprob: -3.3537745475769043
    7. ' i' → logprob: -4.478774547576904
    8. 'j' → logprob: -5.853774547576904
    9. '   ' → logprob: -5.853774547576904
    10. ' in' → logprob: -6.353774547576904

Token 450: ' totals' (ID: 92279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4468492269515991
    2. ' totals' → logprob: -1.0718492269515991
    3. ' )' → logprob: -5.321849346160889
    4. 'tot' → logprob: -5.946849346160889
    5. 's' → logprob: -6.196849346160889
    6. '_tot' → logprob: -6.321849346160889
    7. '):
' → logprob: -6.446849346160889
    8. '   ' → logprob: -7.196849346160889
    9. ' sums' → logprob: -7.196849346160889
    10. 'Totals' → logprob: -7.321849346160889

Token 451: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3475733995437622
    2. ')
' → logprob: -1.4725733995437622
    3. '):
' → logprob: -3.2225732803344727
    4. '):' → logprob: -3.8475732803344727
    5. 'for' → logprob: -7.097573280334473
    6. '           ' → logprob: -7.722573280334473
    7. '       ' → logprob: -7.722573280334473
    8. ')

' → logprob: -7.972573280334473
    9. ')
' → logprob: -8.722573280334473
    10. '):

' → logprob: -8.722573280334473

Token 452: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1229308694601059
    2. '       ' → logprob: -2.6229307651519775
    3. ' for' → logprob: -3.6229307651519775
    4. 'for' → logprob: -4.122931003570557
    5. '   ' → logprob: -10.247930526733398
    6. '               ' → logprob: -10.497930526733398
    7. ',' → logprob: -10.747930526733398
    8. '
' → logprob: -10.997930526733398
    9. ':' → logprob: -11.122930526733398
    10. '```' → logprob: -11.497930526733398

Token 453: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.23884116113185883
    2. ' for' → logprob: -1.61384117603302
    3. '       ' → logprob: -4.3638410568237305
    4. '           ' → logprob: -7.8638410568237305
    5. '   ' → logprob: -8.48884105682373
    6. ' ' → logprob: -11.73884105682373
    7. '
' → logprob: -12.86384105682373
    8. '	for' → logprob: -12.86384105682373
    9. '```' → logprob: -13.73884105682373
    10. ' ' → logprob: -14.11384105682373

Token 454: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06196948140859604
    2. ' i' → logprob: -2.811969518661499
    3. '	i' → logprob: -14.061969757080078
    4. ' ' → logprob: -14.561969757080078
    5. '   ' → logprob: -15.811969757080078
    6. ' ' → logprob: -16.686969757080078
    7. '```' → logprob: -16.686969757080078
    8. '  ' → logprob: -16.936969757080078
    9. '0' → logprob: -16.936969757080078
    10. '_i' → logprob: -17.061969757080078

Token 455: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.022995276376605034
    2. 'in' → logprob: -4.022995471954346
    3. ' ' → logprob: -5.397995471954346
    4. '<|end|>' → logprob: -8.522994995117188
    5. ')' → logprob: -10.147994995117188
    6. '=' → logprob: -11.647994995117188
    7. ' )' → logprob: -11.772994995117188
    8. ',' → logprob: -11.897994995117188
    9. '<|end|>' → logprob: -11.897994995117188
    10. ' ,' → logprob: -12.272994995117188

Token 456: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10021205991506577
    2. ' range' → logprob: -2.3502120971679688
    3. '(range' → logprob: -13.100212097167969
    4. ' ' → logprob: -13.350212097167969
    5. '   ' → logprob: -14.350212097167969
    6. '	range' → logprob: -14.475212097167969
    7. '  ' → logprob: -15.475212097167969
    8. '
' → logprob: -16.35021209716797
    9. ' xrange' → logprob: -16.35021209716797
    10. 'ange' → logprob: -16.60021209716797

Token 457: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04876131936907768
    2. '(p' → logprob: -3.5487613677978516
    3. ' p' → logprob: -4.173761367797852
    4. 'range' → logprob: -5.923761367797852
    5. ' range' → logprob: -7.298761367797852
    6. ')' → logprob: -9.798761367797852
    7. ' (' → logprob: -11.548761367797852
    8. '(' → logprob: -11.673761367797852
    9. '   ' → logprob: -12.548761367797852
    10. ')p' → logprob: -12.798761367797852

Token 458: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6932783126831055
    2. '):' → logprob: -0.6932783126831055
    3. ')' → logprob: -9.318278312683105
    4. '):
' → logprob: -10.693278312683105
    5. ' ):' → logprob: -12.193278312683105
    6. '):

' → logprob: -12.818278312683105
    7. '       ' → logprob: -12.818278312683105
    8. ' ):
' → logprob: -12.943278312683105
    9. '           ' → logprob: -13.318278312683105
    10. ':' → logprob: -13.318278312683105

Token 459: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3246362507343292
    2. 'count' → logprob: -2.324636220932007
    3. 'unknown' → logprob: -2.824636220932007
    4. 'known' → logprob: -3.699636220932007
    5. '           ' → logprob: -3.949636220932007
    6. 'sum' → logprob: -4.324636459350586
    7. 'cnt' → logprob: -4.324636459350586
    8. ':' → logprob: -4.824636459350586
    9. 'None' → logprob: -4.949636459350586
    10. 'total' → logprob: -5.074636459350586

Token 460: ' row' (ID: 5225)
  Prédit: 'known'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'known' → logprob: -0.823833703994751
    2. 'row' (adapté à ' row') → logprob: -1.698833703994751
    3. 'count' → logprob: -2.198833703994751
    4. ' row' → logprob: -2.323833703994751
    5. 'cnt' → logprob: -2.823833703994751
    6. 'unknown' → logprob: -3.198833703994751
    7. ' known' → logprob: -3.448833703994751
    8. ' count' → logprob: -4.323833465576172
    9. ' cnt' → logprob: -4.948833465576172
    10. 'sum' → logprob: -5.323833465576172

Token 461: ' =' (ID: 314)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.5563673973083496
    2. '_vals' → logprob: -1.1813673973083496
    3. '_known' → logprob: -2.8063673973083496
    4. '_sum' → logprob: -3.0563673973083496
    5. '_unknown' → logprob: -5.68136739730835
    6. 'vals' → logprob: -6.05636739730835
    7. 'sum' → logprob: -6.55636739730835
    8. 'known' → logprob: -6.55636739730835
    9. '_total' → logprob: -6.80636739730835
    10. '_' → logprob: -7.05636739730835

Token 462: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.004981132224202156
    2. ' values' → logprob: -5.37998104095459
    3. '[' → logprob: -8.37998104095459
    4. '[(' → logprob: -10.25498104095459
    5. '	values' → logprob: -10.75498104095459
    6. 'data' → logprob: -11.00498104095459
    7. '[i' → logprob: -11.12998104095459
    8. ' [' → logprob: -11.37998104095459
    9. '[
' → logprob: -12.00498104095459
    10. '.values' → logprob: -12.12998104095459

Token 463: '[i' (ID: 1768)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 464: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06753465533256531
    2. ']
' → logprob: -2.8175346851348877
    3. ')' → logprob: -5.317534446716309
    4. ')
' → logprob: -8.567534446716309
    5. ')]' → logprob: -8.817534446716309
    6. ']
' → logprob: -9.067534446716309
    7. ']

' → logprob: -9.192534446716309
    8. ' ]' → logprob: -10.692534446716309
    9. '])' → logprob: -11.067534446716309
    10. '   ' → logprob: -11.442534446716309

Token 465: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07760387659072876
    2. 'count' → logprob: -3.202603816986084
    3. 'unknown' → logprob: -4.827603816986084
    4. 'sum' → logprob: -5.827603816986084
    5. 'total' → logprob: -6.077603816986084
    6. 'cnt' → logprob: -6.327603816986084
    7. 'known' → logprob: -6.452603816986084
    8. ' =' → logprob: -6.452603816986084
    9. ' count' → logprob: -6.452603816986084
    10. ' unknown' → logprob: -6.577603816986084

Token 466: ' total' (ID: 3609)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.7493566274642944
    2. 'known' → logprob: -1.3743566274642944
    3. 'count' → logprob: -1.9993566274642944
    4. 'unknown' → logprob: -2.499356746673584
    5. 'if' → logprob: -4.249356746673584
    6. 'sum' → logprob: -4.249356746673584
    7. 'none' → logprob: -4.624356746673584
    8. 'total' (adapté à ' total') → logprob: -4.999356746673584
    9. 'c' → logprob: -5.874356746673584
    10. 'num' → logprob: -6.249356746673584

Token 467: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5153706073760986
    2. '=' → logprob: -1.2653706073760986
    3. '_sum' → logprob: -2.6403706073760986
    4. '_' → logprob: -4.1403703689575195
    5. 'sum' → logprob: -4.5153703689575195
    6. '-' → logprob: -4.8903703689575195
    7. ' -' → logprob: -5.1403703689575195
    8. '_count' → logprob: -6.2653703689575195
    9. '=sum' → logprob: -6.5153703689575195
    10. '_s' → logprob: -6.6403703689575195

Token 468: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.046761102974414825
    2. 'row' → logprob: -3.5467610359191895
    3. ' data' → logprob: -4.1717610359191895
    4. ' row' → logprob: -6.5467610359191895
    5. '	data' → logprob: -13.046761512756348
    6. '   ' → logprob: -13.796761512756348
    7. '           ' → logprob: -14.046761512756348
    8. ' ' → logprob: -14.171761512756348
    9. '	row' → logprob: -14.546761512756348
    10. 'int' → logprob: -15.421761512756348

Token 469: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -16.375
    3. '```' → logprob: -16.375
    4. 'i' → logprob: -16.625
    5. ' [' → logprob: -16.75
    6. '   ' → logprob: -18.625
    7. '[row' → logprob: -18.75
    8. '`' → logprob: -18.875
    9. 'def' → logprob: -19.125
    10. 's' → logprob: -19.375

Token 470: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6755002737045288
    2. '[s' → logprob: -1.5505002737045288
    3. '[-' → logprob: -1.8005002737045288
    4. '][-' → logprob: -2.1755003929138184
    5. 's' → logprob: -9.42549991607666
    6. '[' → logprob: -10.30049991607666
    7. '   ' → logprob: -11.17549991607666
    8. ')[' → logprob: -11.17549991607666
    9. '[S' → logprob: -11.55049991607666
    10. ']' → logprob: -11.80049991607666

Token 471: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0014307129895314574
    2. '-s' → logprob: -6.751430511474609
    3. '-' → logprob: -8.62643051147461
    4. '[s' → logprob: -10.50143051147461
    5. ' s' → logprob: -11.25143051147461
    6. '[-' → logprob: -11.37643051147461
    7. '][' → logprob: -11.62643051147461
    8. ' -' → logprob: -11.75143051147461
    9. '   ' → logprob: -11.87643051147461
    10. '][-' → logprob: -13.37643051147461

Token 472: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0053160544484853745
    2. ']
' → logprob: -5.255316257476807
    3. ']
' → logprob: -10.130315780639648
    4. ']

' → logprob: -11.255315780639648
    5. ' ]' → logprob: -11.255315780639648
    6. '])' → logprob: -12.630315780639648
    7. ']-' → logprob: -12.880315780639648
    8. ')]' → logprob: -13.630315780639648
    9. ')' → logprob: -13.630315780639648
    10. '']' → logprob: -13.880315780639648

Token 473: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.047449350357055664
    2. '
' → logprob: -3.9224493503570557
    3. 'sum' → logprob: -4.672449111938477
    4. '                
' → logprob: -5.297449111938477
    5. ' sum' → logprob: -5.672449111938477
    6. ',' → logprob: -6.547449111938477
    7. ' 
' → logprob: -6.547449111938477
    8. ')' → logprob: -6.922449111938477
    9. '           ' → logprob: -7.422449111938477
    10. '                ' → logprob: -7.672449111938477

Token 474: ' unknown' (ID: 17927)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -1.2113029956817627
    2. 'count' → logprob: -1.4613029956817627
    3. 'unknown' (adapté à ' unknown') → logprob: -1.5863029956817627
    4. 'known' → logprob: -1.9613029956817627
    5. '               ' → logprob: -3.2113029956817627
    6. ' cnt' → logprob: -3.7113029956817627
    7. 'sum' → logprob: -3.8363029956817627
    8. ' unknown' → logprob: -4.711302757263184
    9. ' count' → logprob: -4.711302757263184
    10. ' known' → logprob: -4.836302757263184

Token 475: '_indices' (ID: 43508)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.17305321991443634
    2. 's' → logprob: -1.92305326461792
    3. '_cnt' → logprob: -4.67305326461792
    4. '_indices' → logprob: -6.29805326461792
    5. '_idx' → logprob: -7.04805326461792
    6. '_positions' → logprob: -8.673052787780762
    7. 'count' → logprob: -9.048052787780762
    8. '_pos' → logprob: -9.423052787780762
    9. ' =' → logprob: -9.423052787780762
    10. '_idxs' → logprob: -9.673052787780762

Token 476: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931824684143066
    2. ' =' → logprob: -0.6931824684143066
    3. '=[]' → logprob: -10.943181991577148
    4. 's' → logprob: -11.943181991577148
    5. '	' → logprob: -13.443181991577148
    6. '   ' → logprob: -13.818181991577148
    7. ' ' → logprob: -13.943181991577148
    8. ')' → logprob: -13.943181991577148
    9. ',' → logprob: -14.193181991577148
    10. '_' → logprob: -14.193181991577148

Token 477: ' [' (ID: 723)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.03416161611676216
    2. '[i' → logprob: -3.5341615676879883
    3. '[' → logprob: -5.534161567687988
    4. ' [' → logprob: -8.659161567687988
    5. '[]' → logprob: -9.034161567687988
    6. '[k' → logprob: -10.659161567687988
    7. '[row' → logprob: -10.784161567687988
    8. '[token' → logprob: -11.284161567687988
    9. '[u' → logprob: -11.409161567687988
    10. '[index' → logprob: -11.659161567687988

Token 478: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.003115561092272401
    2. 'k' → logprob: -6.253115653991699
    3. 'idx' → logprob: -6.753115653991699
    4. ' j' → logprob: -11.0031156539917
    5. 'index' → logprob: -13.8781156539917
    6. 'x' → logprob: -15.0031156539917
    7. ' idx' → logprob: -15.2531156539917
    8. '   ' → logprob: -15.8781156539917
    9. 'jx' → logprob: -16.378114700317383
    10. 'jj' → logprob: -16.628114700317383

Token 479: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.012528955936431885
    2. 'for' → logprob: -4.387528896331787
    3. ' ' → logprob: -11.637529373168945
    4. '	for' → logprob: -12.887529373168945
    5. '
' → logprob: -13.262529373168945
    6. '[j' → logprob: -13.637529373168945
    7. 'j' → logprob: -14.012529373168945
    8. 'index' → logprob: -14.387529373168945
    9. ' 
' → logprob: -14.637529373168945
    10. '           ' → logprob: -14.887529373168945

Token 480: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.026664717122912407
    2. ' j' → logprob: -3.6516647338867188
    3. 'range' → logprob: -8.151664733886719
    4. ' range' → logprob: -10.276664733886719
    5. ',' → logprob: -11.151664733886719
    6. ',j' → logprob: -11.276664733886719
    7. ' in' → logprob: -12.151664733886719
    8. 'in' → logprob: -12.651664733886719
    9. ' ' → logprob: -13.151664733886719
    10. '	j' → logprob: -13.276664733886719

Token 481: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.307329922914505
    2. 'in' → logprob: -1.5573298931121826
    3. ',' → logprob: -2.9323298931121826
    4. ',row' → logprob: -8.432330131530762
    5. ' ' → logprob: -8.682330131530762
    6. ' ,' → logprob: -9.057330131530762
    7. ',in' → logprob: -10.807330131530762
    8. ',j' → logprob: -10.807330131530762
    9. ',v' → logprob: -10.932330131530762
    10. ',value' → logprob: -11.057330131530762

Token 482: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009115827269852161
    2. ' range' → logprob: -7.000911712646484
    3. ' ' → logprob: -16.750911712646484
    4. '   ' → logprob: -17.500911712646484
    5. '	range' → logprob: -18.000911712646484
    6. '
' → logprob: -18.250911712646484
    7. '  ' → logprob: -18.625911712646484
    8. '(range' → logprob: -18.750911712646484
    9. '[' → logprob: -19.375911712646484
    10. 'r' → logprob: -19.625911712646484

Token 483: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.28183719515800476
    2. '(s' → logprob: -1.4068372249603271
    3. ' s' → logprob: -7.531836986541748
    4. '(' → logprob: -10.281837463378906
    5. '(len' → logprob: -10.781837463378906
    6. 'len' → logprob: -10.906837463378906
    7. '           ' → logprob: -11.031837463378906
    8. ' (' → logprob: -11.281837463378906
    9. '0' → logprob: -11.406837463378906
    10. '   ' → logprob: -11.781837463378906

Token 484: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003600782947614789
    2. ' if' → logprob: -5.878600597381592
    3. ' )' → logprob: -7.253600597381592
    4. 'if' → logprob: -9.62860107421875
    5. '           ' → logprob: -11.00360107421875
    6. '               ' → logprob: -13.37860107421875
    7. ' ' → logprob: -13.75360107421875
    8. '                   ' → logprob: -14.50360107421875
    9. '		' → logprob: -15.00360107421875
    10. '       ' → logprob: -15.12860107421875

Token 485: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.006719163153320551
    2. 'if' → logprob: -5.00671911239624
    3. ' ' → logprob: -13.131719589233398
    4. '                   ' → logprob: -14.381719589233398
    5. '	if' → logprob: -14.756719589233398
    6. '           ' → logprob: -15.006719589233398
    7. '               ' → logprob: -15.131719589233398
    8. '                ' → logprob: -16.2567195892334
    9. '   ' → logprob: -17.5067195892334
    10. ' ' → logprob: -17.6317195892334

Token 486: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.5231672525405884
    2. ' row' → logprob: -0.8981672525405884
    3. '	row' → logprob: -10.898167610168457
    4. ' values' → logprob: -11.898167610168457
    5. 'values' → logprob: -12.148167610168457
    6. ' ' → logprob: -12.648167610168457
    7. '   ' → logprob: -12.773167610168457
    8. '(row' → logprob: -12.773167610168457
    9. '[row' → logprob: -14.023167610168457
    10. '
' → logprob: -14.023167610168457

Token 487: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.4121114822482923e-06
    2. 'j' → logprob: -13.000003814697266
    3. '[' → logprob: -14.625003814697266
    4. ' [' → logprob: -15.500003814697266
    5. '```' → logprob: -15.750003814697266
    6. '[i' → logprob: -16.000003814697266
    7. '   ' → logprob: -16.750003814697266
    8. '[
' → logprob: -17.000003814697266
    9. '	j' → logprob: -17.250003814697266
    10. '
' → logprob: -17.375003814697266

Token 488: ']' (ID: 60)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.007651114836335182
    2. 'is' → logprob: -4.882651329040527
    3. ']' → logprob: -10.382651329040527
    4. '	is' → logprob: -12.382651329040527
    5. ')' → logprob: -12.757651329040527
    6. ' ' → logprob: -13.132651329040527
    7. '==' → logprob: -13.257651329040527
    8. ']==' → logprob: -14.382651329040527
    9. ')is' → logprob: -14.507651329040527
    10. '[' → logprob: -15.132651329040527

Token 489: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1002374067902565
    2. 'is' → logprob: -2.3502373695373535
    3. '==' → logprob: -10.725237846374512
    4. 'None' → logprob: -13.100237846374512
    5. '[' → logprob: -13.475237846374512
    6. ' ' → logprob: -13.975237846374512
    7. '	is' → logprob: -14.225237846374512
    8. ']' → logprob: -14.225237846374512
    9. ')' → logprob: -14.350237846374512
    10. ' ==' → logprob: -14.725237846374512

Token 490: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0015023599844425917
    2. ' None' → logprob: -6.501502513885498
    3. '_None' → logprob: -18.876502990722656
    4. '=None' → logprob: -19.376502990722656
    5. ' ' → logprob: -19.876502990722656
    6. '
' → logprob: -20.251502990722656
    7. '(None' → logprob: -20.626502990722656
    8. 'none' → logprob: -21.001502990722656
    9. ',None' → logprob: -21.626502990722656
    10. '   ' → logprob: -21.626502990722656

Token 491: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004797664878424257
    2. ']
' → logprob: -7.875479698181152
    3. ' ]' → logprob: -9.250479698181152
    4. ']

' → logprob: -13.500479698181152
    5. '       ' → logprob: -14.500479698181152
    6. ']
' → logprob: -14.500479698181152
    7. '           ' → logprob: -15.000479698181152
    8. ' ]
' → logprob: -15.500479698181152
    9. '               ' → logprob: -15.625479698181152
    10. '   ' → logprob: -15.875479698181152

Token 492: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5260060429573059
    2. '           ' → logprob: -1.5260059833526611
    3. ']' → logprob: -1.7760059833526611
    4. ' if' → logprob: -5.27600622177124
    5. '<|end|>' → logprob: -5.65100622177124
    6. '                   ' → logprob: -5.77600622177124
    7. ']
' → logprob: -6.65100622177124
    8. '       ' → logprob: -6.77600622177124
    9. '                ' → logprob: -6.90100622177124
    10. ')' → logprob: -7.02600622177124

Token 493: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5943537950515747
    2. ' if' → logprob: -0.9693537950515747
    3. 'if' (adapté à ' if') → logprob: -3.344353675842285
    4. '               ' → logprob: -3.469353675842285
    5. ' ' → logprob: -6.969353675842285
    6. '            ' → logprob: -8.094353675842285
    7. '<|end|>' → logprob: -8.719353675842285
    8. '       ' → logprob: -9.219353675842285
    9. '          ' → logprob: -9.219353675842285
    10. '                ' → logprob: -9.219353675842285

Token 494: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.10020915418863297
    2. 'len' → logprob: -2.3502092361450195
    3. '	len' → logprob: -13.47520923614502
    4. '(len' → logprob: -14.60020923614502
    5. ' ' → logprob: -14.97520923614502
    6. '   ' → logprob: -16.350208282470703
    7. '=len' → logprob: -16.850208282470703
    8. '1' → logprob: -17.100208282470703
    9. ' ' → logprob: -17.725208282470703
    10. '    ' → logprob: -17.725208282470703

Token 495: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.749814019713085e-06
    2. ' (' → logprob: -12.000006675720215
    3. 'unknown' → logprob: -14.875006675720215
    4. '(
' → logprob: -16.62500762939453
    5. ' unknown' → logprob: -16.62500762939453
    6. '```' → logprob: -18.00000762939453
    7. 'Unknown' → logprob: -18.12500762939453
    8. '_unknown' → logprob: -18.50000762939453
    9. '(unique' → logprob: -19.12500762939453
    10. '(un' → logprob: -19.12500762939453

Token 496: 'unknown' (ID: 33936)
  Prédit: 'unknown'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -7.231182826217264e-05
    2. '(' → logprob: -9.875072479248047
    3. ' unknown' → logprob: -10.875072479248047
    4. 'unk' → logprob: -13.500072479248047
    5. 'Unknown' → logprob: -16.125072479248047
    6. '_unknown' → logprob: -16.125072479248047
    7. ')' → logprob: -16.375072479248047
    8. '```' → logprob: -16.625072479248047
    9. 'undefined' → logprob: -17.375072479248047
    10. 'UNKNOWN' → logprob: -17.500072479248047

Token 497: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.00010747690976131707
    2. 's' → logprob: -9.375107765197754
    3. ')' → logprob: -12.125107765197754
    4. '(indices' → logprob: -12.125107765197754
    5. 'indices' → logprob: -12.250107765197754
    6. '_' → logprob: -13.625107765197754
    7. '   ' → logprob: -13.625107765197754
    8. '
' → logprob: -13.875107765197754
    9. '```' → logprob: -14.375107765197754
    10. '_)' → logprob: -14.375107765197754

Token 498: ')' (ID: 8)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.42157649993896484
    2. '==' → logprob: -1.4215764999389648
    3. ')' → logprob: -2.296576499938965
    4. ')==' → logprob: -6.296576499938965
    5. ' )' → logprob: -9.171576499938965
    6. '=' → logprob: -10.296576499938965
    7. ' ' → logprob: -10.546576499938965
    8. ']==' → logprob: -11.796576499938965
    9. '1' → logprob: -12.046576499938965
    10. '==
' → logprob: -12.171576499938965

Token 499: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4288302958011627
    2. '==' → logprob: -1.0538302659988403
    3. '=' → logprob: -9.55383014678955
    4. ')' → logprob: -10.92883014678955
    5. '==
' → logprob: -11.67883014678955
    6. ' ' → logprob: -11.80383014678955
    7. ')==' → logprob: -11.92883014678955
    8. '===' → logprob: -12.80383014678955
    9. '1' → logprob: -12.80383014678955
    10. ' =' → logprob: -12.92883014678955

Token 500: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003601021133363247
    2. ' ' → logprob: -5.62860107421875
    3. '   ' → logprob: -15.37860107421875
    4. ' ' → logprob: -15.87860107421875
    5. 'exact' → logprob: -15.87860107421875
    6. '  ' → logprob: -16.25360107421875
    7. '```' → logprob: -16.25360107421875
    8. '0' → logprob: -16.56610107421875
    9. '=' → logprob: -16.69110107421875
    10. '۱' → logprob: -17.37860107421875

Token 501: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023166877508629113
    2. ' ' → logprob: -8.375231742858887
    3. '0' → logprob: -15.125231742858887
    4. '   ' → logprob: -15.250231742858887
    5. '  ' → logprob: -15.500231742858887
    6. '
' → logprob: -16.81273078918457
    7. 'exact' → logprob: -16.81273078918457
    8. '2' → logprob: -17.18773078918457
    9. '```' → logprob: -17.18773078918457
    10. '=' → logprob: -17.25023078918457

Token 502: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024094901978969574
    2. ':
' → logprob: -3.774094820022583
    3. ' and' → logprob: -7.274095058441162
    4. ')' → logprob: -10.024094581604004
    5. 'and' → logprob: -10.274094581604004
    6. '):' → logprob: -10.399094581604004
    7. '):
' → logprob: -11.524094581604004
    8. '<|end|>' → logprob: -11.524094581604004
    9. ' :' → logprob: -11.774094581604004
    10. ',' → logprob: -12.274094581604004

Token 503: '                   ' (ID: 699)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26426663994789124
    2. '                   ' → logprob: -2.2642667293548584
    3. ':
' → logprob: -2.7642667293548584
    4. '               ' → logprob: -3.2642667293548584
    5. '                       ' → logprob: -4.639266490936279
    6. '                           ' → logprob: -5.514266490936279
    7. '):' → logprob: -5.639266490936279
    8. '                ' → logprob: -6.139266490936279
    9. ',' → logprob: -7.014266490936279
    10. '                               ' → logprob: -7.139266490936279

Token 504: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.1451801061630249
    2. ' idx' → logprob: -2.5201802253723145
    3. 'j' (adapté à ' j') → logprob: -3.6451802253723145
    4. 'idx' → logprob: -4.8951802253723145
    5. ' k' → logprob: -5.7701802253723145
    6. ' col' → logprob: -5.8951802253723145
    7. 'index' → logprob: -6.1451802253723145
    8. ' missing' → logprob: -6.2701802253723145
    9. ' ind' → logprob: -6.3951802253723145
    10. '                   ' → logprob: -6.5201802253723145

Token 505: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6408340930938721
    2. '=' → logprob: -0.7658340930938721
    3. ']' → logprob: -5.390833854675293
    4. ' ' → logprob: -6.765833854675293
    5. ')' → logprob: -7.140833854675293
    6. '<|end|>' → logprob: -7.140833854675293
    7. ' ]' → logprob: -8.640833854675293
    8. '[' → logprob: -8.640833854675293
    9. '.' → logprob: -9.140833854675293
    10. '<|end|>' → logprob: -9.765833854675293

Token 506: ' unknown' (ID: 17927)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.1602308303117752
    2. ' unknown' → logprob: -1.9102308750152588
    3. 'unk' → logprob: -12.03523063659668
    4. 'Unknown' → logprob: -15.78523063659668
    5. '_unknown' → logprob: -15.78523063659668
    6. 'undefined' → logprob: -16.28523063659668
    7. '   ' → logprob: -16.28523063659668
    8. ' unk' → logprob: -16.41023063659668
    9. ' ' → logprob: -16.66023063659668
    10. '    ' → logprob: -17.41023063659668

Token 507: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.001222966704517603
    2. 'indices' → logprob: -6.751223087310791
    3. 's' → logprob: -10.376222610473633
    4. 'Indices' → logprob: -11.501222610473633
    5. '[' → logprob: -12.376222610473633
    6. '"indices' → logprob: -12.876222610473633
    7. '_indexes' → logprob: -13.251222610473633
    8. 'x' → logprob: -15.126222610473633
    9. '.indices' → logprob: -15.376222610473633
    10. '(indices' → logprob: -15.501222610473633

Token 508: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006301135290414095
    2. '0' → logprob: -7.375629901885986
    3. ' ' → logprob: -13.875630378723145
    4. ' [' → logprob: -13.875630378723145
    5. 's' → logprob: -15.000630378723145
    6. ']' → logprob: -15.375630378723145
    7. '   ' → logprob: -15.500630378723145
    8. '```' → logprob: -15.625630378723145
    9. '[
' → logprob: -15.625630378723145
    10. ')' → logprob: -15.875630378723145

Token 509: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.312508583068848
    4. '[' → logprob: -15.625008583068848
    5. '
' → logprob: -15.750008583068848
    6. '1' → logprob: -16.250009536743164
    7. '-' → logprob: -16.312509536743164
    8. '```' → logprob: -16.500009536743164
    9. ']' → logprob: -17.375009536743164
    10. ')' → logprob: -17.937509536743164

Token 510: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.028093142434954643
    2. ')' → logprob: -3.903093099594116
    3. ']
' → logprob: -5.528093338012695
    4. '                   ' → logprob: -5.778093338012695
    5. ')
' → logprob: -9.028093338012695
    6. '               ' → logprob: -9.778093338012695
    7. '<|end|>' → logprob: -9.778093338012695
    8. '                       ' → logprob: -9.903093338012695
    9. '                           ' → logprob: -10.528093338012695
    10. ' ]' → logprob: -10.653093338012695

Token 511: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4044276475906372
    2. ' =' → logprob: -1.7794276475906372
    3. '=' → logprob: -3.0294275283813477
    4. '
' → logprob: -3.0294275283813477
    5. '                    
' → logprob: -3.5294275283813477
    6. ' 
' → logprob: -4.779427528381348
    7. '                       ' → logprob: -5.154427528381348
    8. '               ' → logprob: -5.279427528381348
    9. '                    ' → logprob: -5.654427528381348
    10. ')' → logprob: -5.779427528381348

Token 512: ' s' (ID: 265)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.2851702868938446
    2. 'sum' → logprob: -2.160170316696167
    3. 'values' → logprob: -2.910170316696167
    4. 'known' → logprob: -3.160170316696167
    5. ' row' → logprob: -3.785170316696167
    6. ' known' → logprob: -5.535170078277588
    7. ' values' → logprob: -5.910170078277588
    8. ' sum' → logprob: -6.285170078277588
    9. 'rest' → logprob: -6.285170078277588
    10. 'missing' → logprob: -7.535170078277588

Token 513: '_known' (ID: 183002)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0002917254460044205
    2. 'ums' → logprob: -8.75029182434082
    3. 'ummed' → logprob: -10.75029182434082
    4. 'umme' → logprob: -11.75029182434082
    5. 'sum' → logprob: -11.75029182434082
    6. 'ub' → logprob: -11.75029182434082
    7. 't' → logprob: -12.00029182434082
    8. 'known' → logprob: -12.00029182434082
    9. 'uma' → logprob: -12.00029182434082
    10. ' =' → logprob: -12.00029182434082

Token 514: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.02343262918293476
    2. ' =' → logprob: -3.773432731628418
    3. '=' → logprob: -9.273432731628418
    4. 'ums' → logprob: -9.523432731628418
    5. '=sum' → logprob: -12.148432731628418
    6. '_sum' → logprob: -12.523432731628418
    7. 'sum' → logprob: -13.148432731628418
    8. '_' → logprob: -13.273432731628418
    9. 'uma' → logprob: -13.773432731628418
    10. '_um' → logprob: -14.023432731628418

Token 515: ' ' (ID: 220)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.023392461240291595
    2. ' sum' → logprob: -3.77339243888855
    3. '0' → logprob: -9.398392677307129
    4. 'um' → logprob: -10.023392677307129
    5. 'total' → logprob: -11.273392677307129
    6. ' ' → logprob: -12.398392677307129
    7. '   ' → logprob: -13.773392677307129
    8. ' total' → logprob: -13.898392677307129
    9. '(sum' → logprob: -14.773392677307129
    10. '=sum' → logprob: -15.398392677307129

Token 516: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.00037895687273703516
    2. '0' → logprob: -8.500378608703613
    3. ' sum' → logprob: -8.750378608703613
    4. 'um' → logprob: -11.000378608703613
    5. '(sum' → logprob: -15.625378608703613
    6. '   ' → logprob: -16.75037956237793
    7. '=sum' → logprob: -17.00037956237793
    8. '1' → logprob: -17.25037956237793
    9. ' ' → logprob: -17.50037956237793
    10. '
' → logprob: -17.50037956237793

Token 517: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015036839991807938
    2. ' for' → logprob: -5.0150370597839355
    3. '                   ' → logprob: -5.3900370597839355
    4. '
' → logprob: -5.8900370597839355
    5. '	for' → logprob: -8.765036582946777
    6. ' ' → logprob: -9.515036582946777
    7. '                    ' → logprob: -9.515036582946777
    8. '+' → logprob: -9.515036582946777
    9. '<|end|>' → logprob: -9.515036582946777
    10. '   ' → logprob: -9.640036582946777

Token 518: '                   ' (ID: 699)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28876549005508423
    2. '+' → logprob: -2.0387654304504395
    3. '
' → logprob: -2.6637654304504395
    4. ' for' → logprob: -3.5387654304504395
    5. '<|end|>' → logprob: -4.7887654304504395
    6. '                   ' → logprob: -5.0387654304504395
    7. ' +' → logprob: -6.5387654304504395
    8. ',' → logprob: -7.4137654304504395
    9. '                    ' → logprob: -7.4137654304504395
    10. 'import' → logprob: -7.7887654304504395

Token 519: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0009342094417661428
    2. ' for' → logprob: -7.00093412399292
    3. '                   ' → logprob: -11.125934600830078
    4. '                           ' → logprob: -13.000934600830078
    5. '
' → logprob: -13.250934600830078
    6. '	for' → logprob: -13.375934600830078
    7. '                       ' → logprob: -13.875934600830078
    8. '           ' → logprob: -15.500934600830078
    9. '                    ' → logprob: -15.500934600830078
    10. '               ' → logprob: -15.750934600830078

Token 520: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.023828603327274323
    2. 'x' → logprob: -3.7738285064697266
    3. ' k' → logprob: -8.273828506469727
    4. 'jj' → logprob: -8.398828506469727
    5. 'kj' → logprob: -9.773828506469727
    6. 'col' → logprob: -11.023828506469727
    7. ' x' → logprob: -11.648828506469727
    8. 'v' → logprob: -12.273828506469727
    9. ' jj' → logprob: -12.273828506469727
    10. 'kk' → logprob: -12.523828506469727

Token 521: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048598047345876694
    2. 'in' → logprob: -3.048598051071167
    3. ' ' → logprob: -12.048598289489746
    4. 'k' → logprob: -13.048598289489746
    5. ' k' → logprob: -13.923598289489746
    6. '	in' → logprob: -14.048598289489746
    7. '<|end|>' → logprob: -14.923598289489746
    8. '
' → logprob: -16.17359733581543
    9. '0' → logprob: -16.54859733581543
    10. ',' → logprob: -16.54859733581543

Token 522: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0017368246335536242
    2. ' range' → logprob: -6.376736640930176
    3. 'row' → logprob: -10.376736640930176
    4. '(range' → logprob: -13.251736640930176
    5. '   ' → logprob: -14.001736640930176
    6. ' ' → logprob: -15.251736640930176
    7. '	range' → logprob: -16.251737594604492
    8. '  ' → logprob: -16.501737594604492
    9. '
' → logprob: -16.626737594604492
    10. '[' → logprob: -16.751737594604492

Token 523: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0019366045016795397
    2. '(s' → logprob: -6.251936435699463
    3. 'len' → logprob: -12.626936912536621
    4. ' s' → logprob: -12.626936912536621
    5. '   ' → logprob: -14.001936912536621
    6. '{s' → logprob: -16.251935958862305
    7. '	s' → logprob: -16.501935958862305
    8. '`s' → logprob: -16.751935958862305
    9. '[s' → logprob: -16.876935958862305
    10. '<s' → logprob: -17.251935958862305

Token 524: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11420626193284988
    2. '):' → logprob: -2.239206314086914
    3. ')' → logprob: -6.989206314086914
    4. 'k' → logprob: -8.489206314086914
    5. '):

' → logprob: -9.739206314086914
    6. '                   ' → logprob: -10.114206314086914
    7. '):
' → logprob: -10.364206314086914
    8. 'if' → logprob: -10.739206314086914
    9. ' k' → logprob: -10.989206314086914
    10. ':' → logprob: -11.364206314086914

Token 525: '                       ' (ID: 968)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4239588677883148
    2. 'if' → logprob: -1.2989588975906372
    3. '                       ' → logprob: -3.6739587783813477
    4. '                           ' → logprob: -4.173958778381348
    5. ' ' → logprob: -4.923958778381348
    6. '                               ' → logprob: -5.673958778381348
    7. ' s' → logprob: -5.923958778381348
    8. '+' → logprob: -5.923958778381348
    9. '                        ' → logprob: -5.923958778381348
    10. ' k' → logprob: -5.923958778381348

Token 526: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11472147703170776
    2. ' if' → logprob: -2.2397215366363525
    3. '                           ' → logprob: -6.614721298217773
    4. '                               ' → logprob: -7.739721298217773
    5. ' ' → logprob: -10.364721298217773
    6. '   ' → logprob: -10.614721298217773
    7. '	if' → logprob: -11.614721298217773
    8. 'k' → logprob: -11.989721298217773
    9. 's' → logprob: -12.114721298217773
    10. '           ' → logprob: -12.239721298217773

Token 527: ' k' (ID: 372)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.49949970841407776
    2. 'k' → logprob: -0.9994996786117554
    3. ' row' → logprob: -3.874499797821045
    4. ' k' → logprob: -5.999499797821045
    5. 'values' → logprob: -6.374499797821045
    6. ' values' → logprob: -9.249499320983887
    7. '   ' → logprob: -11.249499320983887
    8. ' ' → logprob: -11.624499320983887
    9. '	row' → logprob: -11.749499320983887
    10. '(row' → logprob: -12.499499320983887

Token 528: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.313640832901001
    2. ' !=' → logprob: -1.313640832901001
    3. '==' → logprob: -8.313640594482422
    4. 'k' → logprob: -9.688640594482422
    5. ' ==' → logprob: -10.938640594482422
    6. '   ' → logprob: -11.813640594482422
    7. ']!=' → logprob: -11.938640594482422
    8. '[' → logprob: -12.563640594482422
    9. '[k' → logprob: -12.563640594482422
    10. ' ' → logprob: -12.688640594482422

Token 529: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0004931025905534625
    2. ' j' → logprob: -7.625493049621582
    3. 'k' → logprob: -13.250493049621582
    4. '   ' → logprob: -13.375493049621582
    5. '	j' → logprob: -14.125493049621582
    6. ' ' → logprob: -14.750493049621582
    7. 'None' → logprob: -15.375493049621582
    8. '    ' → logprob: -15.875493049621582
    9. '  ' → logprob: -16.1254940032959
    10. 'unknown' → logprob: -17.1254940032959

Token 530: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.047976937144994736
    2. 'and' → logprob: -3.1729769706726074
    3. ':
' → logprob: -5.422976970672607
    4. '                           ' → logprob: -8.17297649383545
    5. ':' → logprob: -8.42297649383545
    6. '):
' → logprob: -10.79797649383545
    7. '<|end|>' → logprob: -11.67297649383545
    8. ' ' → logprob: -12.42297649383545
    9. '                               ' → logprob: -12.54797649383545
    10. '	and' → logprob: -12.67297649383545

Token 531: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.10453198105096817
    2. ' row' → logprob: -2.35453200340271
    3. 'values' → logprob: -5.729531764984131
    4. ' values' → logprob: -6.854531764984131
    5. '   ' → logprob: -12.604532241821289
    6. '(row' → logprob: -12.979532241821289
    7. 'rows' → logprob: -13.604532241821289
    8. '	row' → logprob: -13.604532241821289
    9. '           ' → logprob: -14.104532241821289
    10. ' ' → logprob: -14.104532241821289

Token 532: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -7.226628895296017e-06
    2. 'k' → logprob: -11.875007629394531
    3. '[j' → logprob: -16.50000762939453
    4. '[' → logprob: -16.87500762939453
    5. '{k' → logprob: -17.75000762939453
    6. '```' → logprob: -18.00000762939453
    7. '[i' → logprob: -18.25000762939453
    8. '(k' → logprob: -18.50000762939453
    9. '[
' → logprob: -18.87500762939453
    10. '	k' → logprob: -19.12500762939453

Token 533: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02567167580127716
    2. 'is' → logprob: -4.025671482086182
    3. ' is' → logprob: -4.900671482086182
    4. ' ]' → logprob: -10.77567195892334
    5. ']!=' → logprob: -11.52567195892334
    6. '"' → logprob: -12.65067195892334
    7. ')' → logprob: -13.02567195892334
    8. 'Is' → logprob: -13.02567195892334
    9. '']' → logprob: -13.52567195892334
    10. 's' → logprob: -13.52567195892334

Token 534: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.12693913280963898
    2. 'is' → logprob: -2.126939058303833
    3. ' ' → logprob: -12.626938819885254
    4. ')' → logprob: -13.751938819885254
    5. 'and' → logprob: -13.751938819885254
    6. '	is' → logprob: -14.001938819885254
    7. ']' → logprob: -14.251938819885254
    8. '!==' → logprob: -14.251938819885254
    9. '!=' → logprob: -14.376938819885254
    10. ':' → logprob: -14.501938819885254

Token 535: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0298226997256279
    2. ' not' → logprob: -3.529822587966919
    3. '               ' → logprob: -11.65482234954834
    4. '           ' → logprob: -11.65482234954834
    5. '
' → logprob: -12.02982234954834
    6. '                   ' → logprob: -12.15482234954834
    7. '       ' → logprob: -12.15482234954834
    8. '	not' → logprob: -12.52982234954834
    9. 'n' → logprob: -12.77982234954834
    10. 'Not' → logprob: -12.77982234954834

Token 536: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0004311460361350328
    2. ' None' → logprob: -7.750431060791016
    3. '(None' → logprob: -16.250431060791016
    4. '   ' → logprob: -16.375431060791016
    5. 'none' → logprob: -16.500431060791016
    6. 'not' → logprob: -16.625431060791016
    7. '=None' → logprob: -16.750431060791016
    8. '_None' → logprob: -17.000431060791016
    9. '0' → logprob: -18.000431060791016
    10. ' ' → logprob: -18.125431060791016

Token 537: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.027899326756596565
    2. ':' → logprob: -3.6528992652893066
    3. '                           ' → logprob: -6.527899265289307
    4. '):
' → logprob: -9.777899742126465
    5. ' :
' → logprob: -11.152899742126465
    6. ':
' → logprob: -11.402899742126465
    7. ':

' → logprob: -11.652899742126465
    8. ':s' → logprob: -11.652899742126465
    9. '                               ' → logprob: -11.777899742126465
    10. ',' → logprob: -12.277899742126465

Token 538: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.6034055352210999
    2. ' s' → logprob: -0.8534055352210999
    3. 's' → logprob: -3.978405475616455
    4. ':
' → logprob: -5.853405475616455
    5. ':' → logprob: -6.978405475616455
    6. '+' → logprob: -7.353405475616455
    7. '                               ' → logprob: -7.478405475616455
    8. '                            ' → logprob: -7.603405475616455
    9. '                       ' → logprob: -7.728405475616455
    10. ',' → logprob: -7.978405475616455

Token 539: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.693232536315918
    2. ' s' → logprob: -0.693232536315918
    3. '+=' → logprob: -10.318232536315918
    4. '                           ' → logprob: -10.818232536315918
    5. '+' → logprob: -11.068232536315918
    6. ' +=' → logprob: -12.443232536315918
    7. '+s' → logprob: -12.818232536315918
    8. ' ' → logprob: -13.193232536315918
    9. '                               ' → logprob: -13.318232536315918
    10. ' ' → logprob: -14.193232536315918

Token 540: '_known' (ID: 183002)
  Prédit: '_known'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_known' → logprob: -0.0005436192732304335
    2. 'nown' → logprob: -7.750543594360352
    3. '+=' → logprob: -10.000543594360352
    4. '_' → logprob: -10.125543594360352
    5. ' +=' → logprob: -11.625543594360352
    6. 'Known' → logprob: -12.000543594360352
    7. 'known' → logprob: -12.375543594360352
    8. '_k' → logprob: -13.750543594360352
    9. '-known' → logprob: -14.125543594360352
    10. '_used' → logprob: -14.250543594360352

Token 541: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0024970639497041702
    2. ' +=' → logprob: -6.00249719619751
    3. '+' → logprob: -11.252496719360352
    4. '=' → logprob: -12.002496719360352
    5. ']+=' → logprob: -13.252496719360352
    6. '+=(' → logprob: -15.252496719360352
    7. '+="' → logprob: -16.12749671936035
    8. '+='' → logprob: -16.62749671936035
    9. '                           ' → logprob: -17.12749671936035
    10. ' +' → logprob: -17.87749671936035

Token 542: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.01815006136894226
    2. ' row' → logprob: -4.0181498527526855
    3. '	row' → logprob: -16.518150329589844
    4. 'ro' → logprob: -17.768150329589844
    5. ' ' → logprob: -18.018150329589844
    6. 'r' → logprob: -18.268150329589844
    7. '(row' → logprob: -18.393150329589844
    8. 'int' → logprob: -19.268150329589844
    9. '$row' → logprob: -19.268150329589844
    10. '   ' → logprob: -19.393150329589844

Token 543: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.6166903151315637e-05
    2. '[' → logprob: -11.125016212463379
    3. ' [' → logprob: -14.000016212463379
    4. 'k' → logprob: -14.875016212463379
    5. '[
' → logprob: -16.750015258789062
    6. '[j' → logprob: -16.750015258789062
    7. '[i' → logprob: -18.125015258789062
    8. '(k' → logprob: -19.125015258789062
    9. '[key' → logprob: -19.250015258789062
    10. '```' → logprob: -19.375015258789062

Token 544: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09658641368150711
    2. '<|end|>' → logprob: -2.4715864658355713
    3. ']
' → logprob: -5.346586227416992
    4. '<|end|>' → logprob: -6.721586227416992
    5. ' ]' → logprob: -7.596586227416992
    6. ')' → logprob: -7.971586227416992
    7. '']' → logprob: -8.471586227416992
    8. '
' → logprob: -8.596586227416992
    9. '                           ' → logprob: -9.596586227416992
    10. '+' → logprob: -10.346586227416992

Token 545: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05113527551293373
    2. '
' → logprob: -3.051135301589966
    3. '                           ' → logprob: -6.801135063171387
    4. ',' → logprob: -8.551135063171387
    5. '                    
' → logprob: -8.676135063171387
    6. '                       ' → logprob: -8.801135063171387
    7. '               ' → logprob: -8.801135063171387
    8. '           ' → logprob: -9.301135063171387
    9. ' 
' → logprob: -9.301135063171387
    10. ',
' → logprob: -9.301135063171387

Token 546: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.7421669363975525
    2. ' values' → logprob: -1.2421669960021973
    3. 'values' → logprob: -2.7421669960021973
    4. ' missing' → logprob: -3.2421669960021973
    5. ' value' → logprob: -3.3671669960021973
    6. ' next' → logprob: -3.8671669960021973
    7. 'val' (adapté à ' val') → logprob: -3.9921669960021973
    8. 'value' → logprob: -4.117166996002197
    9. ' row' → logprob: -4.492166996002197
    10. '                   ' → logprob: -4.992166996002197

Token 547: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132856786251068
    2. ' =' → logprob: -1.3132857084274292
    3. '=
' → logprob: -12.063285827636719
    4. '=int' → logprob: -12.188285827636719
    5. ' =
' → logprob: -13.188285827636719
    6. 'u' → logprob: -13.313285827636719
    7. '=j' → logprob: -13.313285827636719
    8. '=

' → logprob: -13.438285827636719
    9. '	' → logprob: -14.313285827636719
    10. '   ' → logprob: -14.438285827636719

Token 548: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.16022513806819916
    2. ' total' → logprob: -1.9102251529693604
    3. 'tot' → logprob: -14.785224914550781
    4. ' ' → logprob: -15.035224914550781
    5. '(total' → logprob: -15.785224914550781
    6. '   ' → logprob: -16.28522491455078
    7. '	total' → logprob: -16.28522491455078
    8. ' tot' → logprob: -17.78522491455078
    9. ' tota' → logprob: -18.16022491455078
    10. 't' → logprob: -18.16022491455078

Token 549: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005258660763502121
    2. '-' → logprob: -5.255258560180664
    3. '-val' → logprob: -10.630258560180664
    4. ' ' → logprob: -15.005258560180664
    5. ' val' → logprob: -16.380258560180664
    6. '-s' → logprob: -16.380258560180664
    7. ' ' → logprob: -17.130258560180664
    8. '[val' → logprob: -17.380258560180664
    9. 'val' → logprob: -17.505258560180664
    10. '-v' → logprob: -17.880258560180664

Token 550: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005233763717114925
    2. ' s' → logprob: -5.2552337646484375
    3. '_s' → logprob: -19.505233764648438
    4. '	s' → logprob: -21.130233764648438
    5. '   ' → logprob: -22.005233764648438
    6. ' ' → logprob: -22.255233764648438
    7. '(s' → logprob: -22.380233764648438
    8. '{s' → logprob: -22.380233764648438
    9. ' ' → logprob: -23.005233764648438
    10. '                   ' → logprob: -23.880233764648438

Token 551: '_known' (ID: 183002)
  Prédit: '_known'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_known' → logprob: -5.512236498361744e-07
    2. 'known' → logprob: -15.375000953674316
    3. 'Known' → logprob: -15.625000953674316
    4. 'nown' → logprob: -16.5
    5. '_unknown' → logprob: -17.875
    6. '-known' → logprob: -18.75
    7. ' Known' → logprob: -19.0
    8. '_k' → logprob: -19.375
    9. '_defined' → logprob: -19.5
    10. '_owned' → logprob: -19.75

Token 552: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03289481997489929
    2. '<|end|>' → logprob: -3.9078948497772217
    3. '
' → logprob: -5.032894611358643
    4. '               ' → logprob: -6.407894611358643
    5. '                           ' → logprob: -7.032894611358643
    6. '           ' → logprob: -7.032894611358643
    7. '				' → logprob: -7.407894611358643
    8. ')' → logprob: -7.907894611358643
    9. '                       ' → logprob: -8.5328950881958
    10. ',' → logprob: -8.5328950881958

Token 553: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006959626916795969
    2. '
' → logprob: -5.506959438323975
    3. '                    
' → logprob: -7.131959438323975
    4. '               ' → logprob: -7.381959438323975
    5. '<|end|>' → logprob: -8.131959915161133
    6. '           ' → logprob: -8.506959915161133
    7. '                           ' → logprob: -8.506959915161133
    8. '				' → logprob: -8.631959915161133
    9. '                       ' → logprob: -9.256959915161133
    10. ' if' → logprob: -9.256959915161133

Token 554: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9431985020637512
    2. '                   ' → logprob: -1.4431984424591064
    3. 'if' (adapté à ' if') → logprob: -1.6931984424591064
    4. 'values' → logprob: -2.4431984424591064
    5. ' values' → logprob: -2.5681984424591064
    6. ' row' → logprob: -4.5681986808776855
    7. 'row' → logprob: -4.8181986808776855
    8. '                           ' → logprob: -5.9431986808776855
    9. '               ' → logprob: -6.9431986808776855
    10. '                    
' → logprob: -6.9431986808776855

Token 555: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.7839590907096863
    2. 'row' → logprob: -1.033959150314331
    3. 'val' → logprob: -1.908959150314331
    4. '0' → logprob: -3.658959150314331
    5. ' values' → logprob: -5.158958911895752
    6. ' row' → logprob: -5.283958911895752
    7. ' val' → logprob: -7.283958911895752
    8. '(row' → logprob: -7.533958911895752
    9. ' ' → logprob: -7.783958911895752
    10. 'not' → logprob: -8.28395938873291

Token 556: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.75000286102295
    3. '[j' → logprob: -13.87500286102295
    4. 'i' → logprob: -16.125001907348633
    5. '```' → logprob: -16.750001907348633
    6. '                   ' → logprob: -16.875001907348633
    7. '   ' → logprob: -16.875001907348633
    8. ' [' → logprob: -17.000001907348633
    9. '[I' → logprob: -17.250001907348633
    10. '][' → logprob: -17.500001907348633

Token 557: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2328709214925766
    2. '[i' → logprob: -1.7328709363937378
    3. '[j' → logprob: -3.4828708171844482
    4. '[' → logprob: -9.107871055603027
    5. ']' → logprob: -9.107871055603027
    6. ' ][' → logprob: -11.857871055603027
    7. ')[' → logprob: -12.982871055603027
    8. '                   ' → logprob: -13.232871055603027
    9. '}[' → logprob: -13.607871055603027
    10. '[k' → logprob: -13.732871055603027

Token 558: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.4121114822482923e-06
    2. ' j' → logprob: -12.875003814697266
    3. '   ' → logprob: -14.625003814697266
    4. '                   ' → logprob: -16.500003814697266
    5. '	j' → logprob: -16.625003814697266
    6. '    ' → logprob: -17.625003814697266
    7. '           ' → logprob: -18.125003814697266
    8. '                           ' → logprob: -18.375003814697266
    9. '[j' → logprob: -18.500003814697266
    10. ']' → logprob: -18.625003814697266

Token 559: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.578204870223999
    2. '[j' → logprob: -0.828204870223999
    3. '[' → logprob: -6.953205108642578
    4. ']!=' → logprob: -7.828205108642578
    5. ' is' → logprob: -8.078205108642578
    6. '][' → logprob: -8.953205108642578
    7. ']=' → logprob: -9.203205108642578
    8. ']==' → logprob: -9.328205108642578
    9. ' ]' → logprob: -9.453205108642578
    10. 'is' → logprob: -9.578205108642578

Token 560: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5842059850692749
    2. 'is' → logprob: -0.8342059850692749
    3. '!=' → logprob: -5.7092061042785645
    4. '==' → logprob: -5.8342061042785645
    5. '=' → logprob: -6.5842061042785645
    6. ')' → logprob: -7.7092061042785645
    7. ']' → logprob: -9.459205627441406
    8. ')is' → logprob: -11.084205627441406
    9. ' !=' → logprob: -11.209205627441406
    10. '[' → logprob: -11.834205627441406

Token 561: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -4.56102097814437e-05
    2. ' None' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.875045776367188
    4. ' ' → logprob: -17.625045776367188
    5. 'not' → logprob: -17.875045776367188
    6. '_None' → logprob: -18.250045776367188
    7. '=None' → logprob: -19.000045776367188
    8. '(None' → logprob: -19.250045776367188
    9. '```' → logprob: -19.375045776367188
    10. '  ' → logprob: -19.375045776367188

Token 562: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08587930351495743
    2. ':
' → logprob: -3.085879325866699
    3. '                       ' → logprob: -4.460879325866699
    4. ' and' → logprob: -4.460879325866699
    5. '                           ' → logprob: -4.710879325866699
    6. '                               ' → logprob: -6.960879325866699
    7. '                   ' → logprob: -6.960879325866699
    8. '):' → logprob: -7.085879325866699
    9. '):
' → logprob: -7.710879325866699
    10. ')' → logprob: -7.835879325866699

Token 563: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.06845972687005997
    2. '                               ' → logprob: -3.5684597492218018
    3. ' =' → logprob: -3.8184597492218018
    4. '                           ' → logprob: -4.443459510803223
    5. '=' → logprob: -5.693459510803223
    6. '                        ' → logprob: -8.318459510803223
    7. '                   ' → logprob: -8.318459510803223
    8. '                        
' → logprob: -8.818459510803223
    9. '                                   ' → logprob: -10.193459510803223
    10. '                            ' → logprob: -10.568459510803223

Token 564: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' (adapté à ' values') → logprob: -0.2555483877658844
    2. ' values' → logprob: -1.505548357963562
    3. '                           ' → logprob: -6.755548477172852
    4. '                               ' → logprob: -6.755548477172852
    5. '                       ' → logprob: -6.880548477172852
    6. '                   ' → logprob: -8.630548477172852
    7. '	values' → logprob: -10.630548477172852
    8. '               ' → logprob: -10.755548477172852
    9. '                                   ' → logprob: -11.505548477172852
    10. '           ' → logprob: -12.505548477172852

Token 565: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.375000953674316
    3. '][' → logprob: -15.875000953674316
    4. ' [' → logprob: -16.75
    5. '   ' → logprob: -18.0
    6. '```' → logprob: -18.125
    7. '[j' → logprob: -18.375
    8. ')[' → logprob: -18.5
    9. '[I' → logprob: -19.125
    10. '           ' → logprob: -19.125

Token 566: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5760906338691711
    2. '][' → logprob: -0.8260906338691711
    3. '[' → logprob: -9.451090812683105
    4. ']' → logprob: -11.076090812683105
    5. '[j' → logprob: -11.201090812683105
    6. ' ][' → logprob: -11.576090812683105
    7. '```' → logprob: -12.076090812683105
    8. '[][' → logprob: -12.201090812683105
    9. ''][' → logprob: -12.451090812683105
    10. ')[' → logprob: -12.576090812683105

Token 567: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.4121114822482923e-06
    2. 'i' → logprob: -13.375003814697266
    3. ' j' → logprob: -13.625003814697266
    4. '	j' → logprob: -15.250003814697266
    5. '[j' → logprob: -16.000003814697266
    6. '```' → logprob: -16.375003814697266
    7. '][' → logprob: -16.625003814697266
    8. '   ' → logprob: -17.125003814697266
    9. '$j' → logprob: -18.500003814697266
    10. '_j' → logprob: -18.625003814697266

Token 568: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011886448599398136
    2. ']=' → logprob: -4.5118865966796875
    3. '=' → logprob: -7.1368865966796875
    4. ' ]' → logprob: -10.261886596679688
    5. ' =' → logprob: -11.761886596679688
    6. ')' → logprob: -16.136886596679688
    7. '[j' → logprob: -16.886886596679688
    8. ']=(' → logprob: -17.761886596679688
    9. '[' → logprob: -17.886886596679688
    10. '][' → logprob: -17.886886596679688

Token 569: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324547804892063
    2. ' =' → logprob: -3.7732455730438232
    3. '=

' → logprob: -17.648244857788086
    4. '＝' → logprob: -18.648244857788086
    5. ']=' → logprob: -19.023244857788086
    6. '=int' → logprob: -19.148244857788086
    7. '=
' → logprob: -19.148244857788086
    8. ']' → logprob: -19.773244857788086
    9. ' ' → logprob: -20.273244857788086
    10. '=None' → logprob: -20.648244857788086

Token 570: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0007104054093360901
    2. ' val' → logprob: -7.250710487365723
    3. 'va' → logprob: -14.750710487365723
    4. 'v' → logprob: -16.875709533691406
    5. '	val' → logprob: -17.000709533691406
    6. 'int' → logprob: -17.500709533691406
    7. '(val' → logprob: -18.375709533691406
    8. '[val' → logprob: -19.125709533691406
    9. '   ' → logprob: -19.875709533691406
    10. ' ' → logprob: -20.250709533691406

Token 571: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0005022776313126087
    2. '                           ' → logprob: -8.000502586364746
    3. '               ' → logprob: -9.750502586364746
    4. '                   ' → logprob: -9.750502586364746
    5. '           ' → logprob: -10.875502586364746
    6. '<|end|>' → logprob: -11.500502586364746
    7. ',' → logprob: -12.000502586364746
    8. '                               ' → logprob: -12.125502586364746
    9. '					' → logprob: -12.875502586364746
    10. '                        
' → logprob: -13.500502586364746

Token 572: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.01724322699010372
    2. '<|end|>' → logprob: -4.892243385314941
    3. '                           ' → logprob: -5.142243385314941
    4. '                   ' → logprob: -6.517243385314941
    5. '               ' → logprob: -7.142243385314941
    6. '                        
' → logprob: -7.517243385314941
    7. '                               ' → logprob: -8.017243385314941
    8. '           ' → logprob: -8.267243385314941
    9. '                        ' → logprob: -9.642243385314941
    10. '       ' → logprob: -9.642243385314941

Token 573: ' changed' (ID: 9180)
  Prédit: 'changed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'changed' (adapté à ' changed') → logprob: -0.31331467628479004
    2. ' changed' → logprob: -1.31331467628479
    3. '                   ' → logprob: -10.563314437866211
    4. '                       ' → logprob: -11.438314437866211
    5. '           ' → logprob: -12.438314437866211
    6. '                           ' → logprob: -12.563314437866211
    7. '               ' → logprob: -12.688314437866211
    8. '.changed' → logprob: -12.813314437866211
    9. '   ' → logprob: -13.563314437866211
    10. 'Changed' → logprob: -14.688314437866211

Token 574: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693819403648376
    2. '=' → logprob: -2.1269381046295166
    3. '=True' → logprob: -11.626937866210938
    4. ' ' → logprob: -14.501937866210938
    5. ' |=' → logprob: -16.251937866210938
    6. '<|end|>' → logprob: -16.501937866210938
    7. '               ' → logprob: -16.751937866210938
    8. '=False' → logprob: -16.751937866210938
    9. '           ' → logprob: -17.126937866210938
    10. '                   ' → logprob: -17.376937866210938

Token 575: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.2014133334159851
    2. ' True' → logprob: -1.7014133930206299
    3. '(True' → logprob: -19.576414108276367
    4. '=True' → logprob: -20.951414108276367
    5. ' ' → logprob: -22.576414108276367
    6. 'true' → logprob: -22.701414108276367
    7. ' true' → logprob: -24.076414108276367
    8. 'Tr' → logprob: -24.076414108276367
    9. ' Tru' → logprob: -24.326414108276367
    10. '.True' → logprob: -24.451414108276367

Token 576: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.542546808719635
    2. '<|end|>' → logprob: -1.5425467491149902
    3. '           ' → logprob: -1.9175467491149902
    4. '               ' → logprob: -4.04254674911499
    5. '       ' → logprob: -4.91754674911499
    6. '                   ' → logprob: -5.29254674911499
    7. ' 
' → logprob: -5.41754674911499
    8. '                           ' → logprob: -5.91754674911499
    9. '            
' → logprob: -5.91754674911499
    10. '\n' → logprob: -6.04254674911499

Token 577: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45307493209838867
    2. '
' → logprob: -1.2030749320983887
    3. '               ' → logprob: -4.453074932098389
    4. '            
' → logprob: -4.453074932098389
    5. '        
' → logprob: -5.078074932098389
    6. ' 
' → logprob: -5.078074932098389
    7. '    
' → logprob: -5.203074932098389
    8. '       ' → logprob: -5.453074932098389
    9. '  
' → logprob: -5.453074932098389
    10. '                        
' → logprob: -6.203074932098389

Token 578: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5821499824523926
    2. '
' → logprob: -0.8321499824523926
    3. '       ' → logprob: -5.207149982452393
    4. '   ' → logprob: -8.957149505615234
    5. '        
' → logprob: -9.082149505615234
    6. '            
' → logprob: -9.082149505615234
    7. ' 
' → logprob: -9.457149505615234
    8. '    
' → logprob: -9.832149505615234
    9. '
' → logprob: -10.207149505615234
    10. '    ' → logprob: -10.832149505615234

Token 579: ' Try' (ID: 14720)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29900726675987244
    2. '       ' → logprob: -2.0490071773529053
    3. '#' → logprob: -3.0490071773529053
    4. ' for' → logprob: -3.1740071773529053
    5. ' #' → logprob: -3.9240071773529053
    6. 'for' → logprob: -4.049007415771484
    7. '   ' → logprob: -6.549007415771484
    8. '
' → logprob: -7.799007415771484
    9. 'Try' → logprob: -8.174007415771484
    10. ' try' → logprob: -8.549007415771484

Token 580: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0031395703554153442
    2. 'to' → logprob: -5.878139495849609
    3. '   ' → logprob: -9.00313949584961
    4. '    ' → logprob: -9.25313949584961
    5. ':' → logprob: -10.00313949584961
    6. '               ' → logprob: -11.12813949584961
    7. '            ' → logprob: -11.12813949584961
    8. ' ' → logprob: -11.62813949584961
    9. ' for' → logprob: -11.87813949584961
    10. '           ' → logprob: -12.37813949584961

Token 581: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.030047018080949783
    2. ' solve' → logprob: -3.5300469398498535
    3. 'for' → logprob: -8.905047416687012
    4. ' for' → logprob: -10.280047416687012
    5. 'resolve' → logprob: -10.905047416687012
    6. '
' → logprob: -10.905047416687012
    7. '#' → logprob: -11.030047416687012
    8. 'apply' → logprob: -11.280047416687012
    9. 'check' → logprob: -11.655047416687012
    10. '       ' → logprob: -12.155047416687012

Token 582: ' columns' (ID: 15697)
  Prédit: ' columns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' columns' → logprob: -0.223847895860672
    2. 'columns' → logprob: -2.3488478660583496
    3. ' rows' → logprob: -3.2238478660583496
    4. 's' → logprob: -3.9738478660583496
    5. ' s' → logprob: -4.09884786605835
    6. ' cols' → logprob: -4.84884786605835
    7. 'rows' → logprob: -5.09884786605835
    8. ' stores' → logprob: -5.09884786605835
    9. 'cols' → logprob: -5.59884786605835
    10. ' store' → logprob: -5.72384786605835

Token 583: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08055555820465088
    2. ' for' → logprob: -3.0805554389953613
    3. ' (' → logprob: -3.5805554389953613
    4. '       ' → logprob: -6.580555438995361
    5. 'for' → logprob: -6.580555438995361
    6. '   ' → logprob: -8.08055591583252
    7. '               ' → logprob: -8.33055591583252
    8. '          ' → logprob: -9.70555591583252
    9. '(' → logprob: -9.95555591583252
    10. '
' → logprob: -10.20555591583252

Token 584: 'store' (ID: 8862)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23883073031902313
    2. 'for' → logprob: -1.6138306856155396
    3. ' range' → logprob: -4.73883056640625
    4. ' s' → logprob: -5.98883056640625
    5. 's' → logprob: -6.48883056640625
    6. 'range' → logprob: -7.98883056640625
    7. '           ' → logprob: -8.86383056640625
    8. '               ' → logprob: -11.36383056640625
    9. ' store' → logprob: -11.48883056640625
    10. '       ' → logprob: -11.48883056640625

Token 585: ' totals' (ID: 92279)
  Prédit: ' totals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' totals' → logprob: -0.008648491464555264
    2. 'tot' → logprob: -4.88364839553833
    3. ')' → logprob: -7.13364839553833
    4. '_tot' → logprob: -9.633648872375488
    5. '           ' → logprob: -9.883648872375488
    6. ' total' → logprob: -10.133648872375488
    7. ' tot' → logprob: -10.258648872375488
    8. 'Totals' → logprob: -10.758648872375488
    9. ' )' → logprob: -11.133648872375488
    10. 'total' → logprob: -11.758648872375488

Token 586: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.018383236601948738
    2. ')' → logprob: -4.018383026123047
    3. '           ' → logprob: -8.768383026123047
    4. ')
' → logprob: -10.143383026123047
    5. '):
' → logprob: -10.893383026123047
    6. ' )
' → logprob: -11.768383026123047
    7. '       ' → logprob: -12.518383026123047
    8. ')

' → logprob: -13.143383026123047
    9. '```' → logprob: -13.643383026123047
    10. ')`
' → logprob: -14.018383026123047

Token 587: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6472573280334473
    2. '       ' → logprob: -0.7722573280334473
    3. ' for' → logprob: -4.522257328033447
    4. '   ' → logprob: -5.897257328033447
    5. 'for' → logprob: -7.147257328033447
    6. '	   ' → logprob: -9.397256851196289
    7. '	       ' → logprob: -11.272256851196289
    8. '<|end|>' → logprob: -11.397256851196289
    9. ' ' → logprob: -12.022256851196289
    10. '```' → logprob: -12.272256851196289

Token 588: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08994351327419281
    2. ' for' → logprob: -2.5899434089660645
    3. '       ' → logprob: -4.5899434089660645
    4. '           ' → logprob: -7.0899434089660645
    5. '   ' → logprob: -12.339943885803223
    6. '	for' → logprob: -14.214943885803223
    7. 'from' → logprob: -15.089943885803223
    8. '
' → logprob: -15.964943885803223
    9. 'import' → logprob: -16.214942932128906
    10. '```' → logprob: -16.464942932128906

Token 589: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01827413961291313
    2. ' j' → logprob: -4.018274307250977
    3. 'i' → logprob: -9.018274307250977
    4. ' i' → logprob: -12.768274307250977
    5. '	j' → logprob: -16.518274307250977
    6. ' ' → logprob: -17.018274307250977
    7. '   ' → logprob: -17.268274307250977
    8. '_j' → logprob: -17.268274307250977
    9. 'range' → logprob: -18.518274307250977
    10. '$j' → logprob: -18.643274307250977

Token 590: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008845483884215355
    2. 'in' → logprob: -4.758845329284668
    3. ' ' → logprob: -8.383845329284668
    4. '  ' → logprob: -14.383845329284668
    5. ' ,' → logprob: -15.383845329284668
    6. '	in' → logprob: -15.383845329284668
    7. ' i' → logprob: -15.508845329284668
    8. 'space' → logprob: -15.633845329284668
    9. ' ' → logprob: -16.008846282958984
    10. 'n' → logprob: -16.008846282958984

Token 591: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011047814972698689
    2. ' range' → logprob: -4.511047840118408
    3. '(range' → logprob: -18.13604736328125
    4. ' ' → logprob: -18.51104736328125
    5. '   ' → logprob: -19.63604736328125
    6. '  ' → logprob: -21.01104736328125
    7. '
' → logprob: -21.13604736328125
    8. 'in' → logprob: -21.51104736328125
    9. ' in' → logprob: -21.63604736328125
    10. '    ' → logprob: -21.63604736328125

Token 592: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.5690089639974758e-05
    2. 's' → logprob: -11.625015258789062
    3. '(' → logprob: -12.250015258789062
    4. 'range' → logprob: -13.875015258789062
    5. ' (' → logprob: -14.625015258789062
    6. '(range' → logprob: -14.875015258789062
    7. '(p' → logprob: -16.375015258789062
    8. ' range' → logprob: -16.750015258789062
    9. '   ' → logprob: -18.625015258789062
    10. '(S' → logprob: -19.000015258789062

Token 593: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04862279072403908
    2. '):' → logprob: -3.0486228466033936
    3. ')' → logprob: -10.673623085021973
    4. '):
' → logprob: -12.798623085021973
    5. '):

' → logprob: -13.048623085021973
    6. ':' → logprob: -13.548623085021973
    7. '   ' → logprob: -13.548623085021973
    8. '           ' → logprob: -13.548623085021973
    9. '       ' → logprob: -13.548623085021973
    10. ':
' → logprob: -13.923623085021973

Token 594: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10361278802156448
    2. 'col' → logprob: -3.4786128997802734
    3. ' col' → logprob: -3.6036128997802734
    4. 'column' → logprob: -4.103612899780273
    5. '           ' → logprob: -4.478612899780273
    6. ' column' → logprob: -5.353612899780273
    7. 'row' → logprob: -5.853612899780273
    8. 'total' → logprob: -6.728612899780273
    9. ' row' → logprob: -7.228612899780273
    10. '   ' → logprob: -7.228612899780273

Token 595: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' (adapté à ' col') → logprob: -0.024652058258652687
    2. 'column' → logprob: -3.8996520042419434
    3. ' col' → logprob: -6.524652004241943
    4. '   ' → logprob: -6.649652004241943
    5. 'unknown' → logprob: -7.649652004241943
    6. 's' → logprob: -7.774652004241943
    7. 'known' → logprob: -8.899652481079102
    8. 'total' → logprob: -9.399652481079102
    9. 'vals' → logprob: -9.899652481079102
    10. '       ' → logprob: -9.899652481079102

Token 596: '_vals' (ID: 71688)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6357693076133728
    2. '=' → logprob: -0.7607693076133728
    3. '_values' → logprob: -5.885769367218018
    4. '_vals' → logprob: -8.76076889038086
    5. 'values' → logprob: -9.51076889038086
    6. '_' → logprob: -10.26076889038086
    7. '   ' → logprob: -10.38576889038086
    8. ' ' → logprob: -10.76076889038086
    9. ' values' → logprob: -11.01076889038086
    10. '=[]' → logprob: -11.51076889038086

Token 597: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741152822971344
    2. ' =' → logprob: -0.974115252494812
    3. '=[' → logprob: -10.724115371704102
    4. ' =[' → logprob: -12.224115371704102
    5. '=[]' → logprob: -12.474115371704102
    6. '   ' → logprob: -13.099115371704102
    7. '=[]
' → logprob: -13.224115371704102
    8. ' ' → logprob: -13.599115371704102
    9. '=
' → logprob: -14.474115371704102
    10. '       ' → logprob: -15.224115371704102

Token 598: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38509613275527954
    2. '[i' → logprob: -1.3850960731506348
    3. ' [' → logprob: -3.3850960731506348
    4. '[j' → logprob: -4.135096073150635
    5. '[val' → logprob: -5.760096073150635
    6. '[row' → logprob: -5.885096073150635
    7. '[value' → logprob: -5.885096073150635
    8. '[column' → logprob: -6.135096073150635
    9. '[index' → logprob: -6.385096073150635
    10. '[int' → logprob: -7.385096073150635

Token 599: 'values' (ID: 7222)
  Prédit: 'values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.00014120421838015318
    2. ' values' → logprob: -8.875141143798828
    3. '   ' → logprob: -14.125141143798828
    4. '(values' → logprob: -14.875141143798828
    5. '	values' → logprob: -15.375141143798828
    6. 'value' → logprob: -17.750141143798828
    7. '.values' → logprob: -18.250141143798828
    8. ' ' → logprob: -18.375141143798828
    9. '  ' → logprob: -19.500141143798828
    10. '
' → logprob: -19.625141143798828

Token 600: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.2729995988775045e-06
    2. 'i' → logprob: -12.000006675720215
    3. '(i' → logprob: -20.1250057220459
    4. '_i' → logprob: -20.3750057220459
    5. '[k' → logprob: -20.8750057220459
    6. '```' → logprob: -20.8750057220459
    7. ' i' → logprob: -21.6250057220459
    8. '{i' → logprob: -22.1250057220459
    9. '[j' → logprob: -22.2500057220459
    10. '[row' → logprob: -22.2500057220459

Token 601: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.10024549067020416
    2. '[j' → logprob: -2.350245475769043
    3. '[' → logprob: -11.100245475769043
    4. ' ][' → logprob: -11.600245475769043
    5. ']' → logprob: -11.975245475769043
    6. '[i' → logprob: -12.850245475769043
    7. '   ' → logprob: -13.225245475769043
    8. 'j' → logprob: -13.600245475769043
    9. ' [' → logprob: -14.100245475769043
    10. 'for' → logprob: -14.475245475769043

Token 602: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.045823566731997e-05
    2. '[j' → logprob: -11.125020027160645
    3. ' j' → logprob: -12.125020027160645
    4. '
' → logprob: -16.37502098083496
    5. '   ' → logprob: -16.75002098083496
    6. '	j' → logprob: -17.00002098083496
    7. '```' → logprob: -18.75002098083496
    8. ' ' → logprob: -19.00002098083496
    9. '$j' → logprob: -19.00002098083496
    10. ']' → logprob: -19.25002098083496

Token 603: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02079213224351406
    2. 'for' → logprob: -4.145792007446289
    3. ']' → logprob: -5.395792007446289
    4. '        ' → logprob: -9.895792007446289
    5. '           ' → logprob: -10.020792007446289
    6. '            ' → logprob: -11.020792007446289
    7. '       ' → logprob: -11.145792007446289
    8. '               ' → logprob: -11.145792007446289
    9. ' ]' → logprob: -11.270792007446289
    10. '   ' → logprob: -11.270792007446289

Token 604: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.029764382168650627
    2. 'for' → logprob: -3.529764413833618
    3. ' ' → logprob: -12.779764175415039
    4. '           ' → logprob: -13.029764175415039
    5. '        ' → logprob: -13.029764175415039
    6. '                ' → logprob: -13.654764175415039
    7. '            ' → logprob: -13.654764175415039
    8. '               ' → logprob: -13.779764175415039
    9. '       ' → logprob: -14.279764175415039
    10. '         ' → logprob: -14.404764175415039

Token 605: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00020413640595506877
    2. ' i' → logprob: -8.500204086303711
    3. 'range' → logprob: -14.500204086303711
    4. ' range' → logprob: -16.25020408630371
    5. '	i' → logprob: -17.50020408630371
    6. 'in' → logprob: -18.25020408630371
    7. '   ' → logprob: -19.00020408630371
    8. ' ' → logprob: -19.12520408630371
    9. ' in' → logprob: -19.25020408630371
    10. '
' → logprob: -19.75020408630371

Token 606: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16023437678813934
    2. 'in' → logprob: -1.9102343320846558
    3. 'i' → logprob: -12.035234451293945
    4. ' i' → logprob: -13.160234451293945
    5. ' ' → logprob: -13.410234451293945
    6. 'range' → logprob: -14.910234451293945
    7. '0' → logprob: -15.285234451293945
    8. ' range' → logprob: -16.160234451293945
    9. '<|end|>' → logprob: -16.660234451293945
    10. ']' → logprob: -17.160234451293945

Token 607: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024756586644798517
    2. ' range' → logprob: -6.002475738525391
    3. '(range' → logprob: -19.00247573852539
    4. '
' → logprob: -19.50247573852539
    5. ' ' → logprob: -20.25247573852539
    6. '   ' → logprob: -21.12747573852539
    7. 'r' → logprob: -21.25247573852539
    8. '	range' → logprob: -21.25247573852539
    9. 'ran' → logprob: -22.37747573852539
    10. '  ' → logprob: -22.62747573852539

Token 608: '(p' (ID: 2407)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011766550596803427
    2. ' range' → logprob: -6.751176834106445
    3. 'p' → logprob: -12.376176834106445
    4. '(range' → logprob: -13.126176834106445
    5. 'in' → logprob: -16.126176834106445
    6. '   ' → logprob: -17.001176834106445
    7. '
' → logprob: -17.126176834106445
    8. ' ' → logprob: -17.376176834106445
    9. '(p' → logprob: -17.626176834106445
    10. 'r' → logprob: -17.751176834106445

Token 609: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03677740320563316
    2. ' if' → logprob: -3.7867774963378906
    3. ']
' → logprob: -4.536777496337891
    4. ' ]' → logprob: -6.286777496337891
    5. 'if' → logprob: -7.411777496337891
    6. '           ' → logprob: -8.91177749633789
    7. ' ]
' → logprob: -9.53677749633789
    8. '       ' → logprob: -10.28677749633789
    9. ']

' → logprob: -11.41177749633789
    10. '               ' → logprob: -11.91177749633789

Token 610: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3929733633995056
    2. 'total' → logprob: -1.1429734230041504
    3. ' total' → logprob: -5.64297342300415
    4. 'tot' → logprob: -7.51797342300415
    5. 'unknown' → logprob: -7.51797342300415
    6. '           ' → logprob: -7.76797342300415
    7. 'col' → logprob: -7.89297342300415
    8. 'known' → logprob: -8.142972946166992
    9. 'count' → logprob: -9.392972946166992
    10. ' col' → logprob: -9.892972946166992

Token 611: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.1511293351650238
    2. 'unknown' → logprob: -2.1511292457580566
    3. 'known' → logprob: -4.526129245758057
    4. 'col' → logprob: -5.151129245758057
    5. ' total' → logprob: -5.401129245758057
    6. 'count' → logprob: -6.901129245758057
    7. ' unknown' → logprob: -7.651129245758057
    8. 'for' → logprob: -7.901129245758057
    9. '   ' → logprob: -8.401129722595215
    10. 'tot' → logprob: -8.526129722595215

Token 612: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759438276290894
    2. '=' → logprob: -0.8259438276290894
    3. 's' → logprob: -13.825943946838379
    4. '_col' → logprob: -13.950943946838379
    5. ' ' → logprob: -14.075943946838379
    6. '_' → logprob: -14.325943946838379
    7. '=sum' → logprob: -15.200943946838379
    8. 'col' → logprob: -15.325943946838379
    9. '   ' → logprob: -16.325942993164062
    10. 'for' → logprob: -16.450942993164062

Token 613: ' totals' (ID: 92279)
  Prédit: 'tot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tot' → logprob: -0.004081367049366236
    2. ' totals' → logprob: -5.5040812492370605
    3. ' tot' → logprob: -13.129081726074219
    4. '_tot' → logprob: -14.754081726074219
    5. 'Totals' → logprob: -15.254081726074219
    6. 'total' → logprob: -15.629081726074219
    7. '   ' → logprob: -16.25408172607422
    8. 't' → logprob: -17.62908172607422
    9. ' ' → logprob: -18.25408172607422
    10. 'targets' → logprob: -19.00408172607422

Token 614: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.320199877838604e-07
    2. ' [' → logprob: -15.375
    3. '[' → logprob: -16.75
    4. '   ' → logprob: -18.875
    5. '[i' → logprob: -19.0
    6. 'j' → logprob: -19.125
    7. '[
' → logprob: -19.125
    8. '[js' → logprob: -19.375
    9. '```' → logprob: -20.25
    10. '
' → logprob: -21.125

Token 615: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.28177425265312195
    2. ']
' → logprob: -1.4067742824554443
    3. ' ]' → logprob: -8.406774520874023
    4. ' ]
' → logprob: -8.781774520874023
    5. ')' → logprob: -9.281774520874023
    6. ']
' → logprob: -9.906774520874023
    7. '-' → logprob: -10.906774520874023
    8. ')
' → logprob: -10.906774520874023
    9. ' -' → logprob: -10.906774520874023
    10. '           ' → logprob: -11.156774520874023

Token 616: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12262953817844391
    2. '           ' → logprob: -3.4976296424865723
    3. 'known' → logprob: -3.6226296424865723
    4. 's' → logprob: -3.8726296424865723
    5. 'unknown' → logprob: -3.9976296424865723
    6. ' s' → logprob: -5.247629642486572
    7. ' unknown' → logprob: -5.747629642486572
    8. ' known' → logprob: -5.747629642486572
    9. 'sum' → logprob: -5.872629642486572
    10. 'col' → logprob: -6.372629642486572

Token 617: ' unknown' (ID: 17927)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' (adapté à ' unknown') → logprob: -0.0008401192026212811
    2. ' unknown' → logprob: -7.625840187072754
    3. 'known' → logprob: -8.500840187072754
    4. 'missing' → logprob: -10.375840187072754
    5. 'count' → logprob: -10.750840187072754
    6. 'unk' → logprob: -11.125840187072754
    7. 'sum' → logprob: -11.250840187072754
    8. 's' → logprob: -11.250840187072754
    9. '   ' → logprob: -11.500840187072754
    10. 'none' → logprob: -11.625840187072754

Token 618: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.0010311421938240528
    2. 's' → logprob: -7.876030921936035
    3. '_counts' → logprob: -8.376030921936035
    4. '_count' → logprob: -8.376030921936035
    5. '_positions' → logprob: -8.876030921936035
    6. 'indices' → logprob: -10.376030921936035
    7. '_inds' → logprob: -12.376030921936035
    8. '_rows' → logprob: -12.876030921936035
    9. '_idxs' → logprob: -12.876030921936035
    10. '_cnt' → logprob: -13.626030921936035

Token 619: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023245453834534
    2. ' =' → logprob: -1.910232424736023
    3. '=[' → logprob: -12.160232543945312
    4. '=[]' → logprob: -13.410232543945312
    5. '[' → logprob: -14.160232543945312
    6. ' =[' → logprob: -14.785232543945312
    7. ' ' → logprob: -16.160232543945312
    8. ',' → logprob: -16.285232543945312
    9. ' [' → logprob: -16.785232543945312
    10. '=[
' → logprob: -17.035232543945312

Token 620: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.015013597905635834
    2. ' [' → logprob: -4.265013694763184
    3. '[' → logprob: -7.140013694763184
    4. '[j' → logprob: -10.640013694763184
    5. '[k' → logprob: -10.765013694763184
    6. '[]
' → logprob: -12.640013694763184
    7. '[]' → logprob: -12.890013694763184
    8. ' ' → logprob: -13.390013694763184
    9. '[x' → logprob: -14.140013694763184
    10. '[n' → logprob: -14.765013694763184

Token 621: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.1008713702030946e-06
    2. ' i' → logprob: -13.125001907348633
    3. '(i' → logprob: -18.500001907348633
    4. '_i' → logprob: -18.625001907348633
    5. '   ' → logprob: -19.125001907348633
    6. '	i' → logprob: -19.375001907348633
    7. '```' → logprob: -19.625001907348633
    8. '
' → logprob: -19.625001907348633
    9. '[i' → logprob: -20.000001907348633
    10. 'k' → logprob: -20.375001907348633

Token 622: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0040785204619169235
    2. 'for' → logprob: -5.504078388214111
    3. ' ' → logprob: -17.004077911376953
    4. '	for' → logprob: -17.004077911376953
    5. '
' → logprob: -19.379077911376953
    6. ' in' → logprob: -20.629077911376953
    7. ' if' → logprob: -20.879077911376953
    8. ' 
' → logprob: -21.004077911376953
    9. '           ' → logprob: -21.504077911376953
    10. '        ' → logprob: -21.629077911376953

Token 623: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10034394264221191
    2. ' i' → logprob: -2.350343942642212
    3. ' in' → logprob: -8.975343704223633
    4. 'in' → logprob: -11.725343704223633
    5. ' range' → logprob: -13.600343704223633
    6. 'range' → logprob: -13.600343704223633
    7. ' ' → logprob: -15.475343704223633
    8. '	i' → logprob: -17.725343704223633
    9. '{i' → logprob: -18.475343704223633
    10. ',i' → logprob: -18.600343704223633

Token 624: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2520180344581604
    2. 'in' → logprob: -1.5020179748535156
    3. 'range' → logprob: -9.377017974853516
    4. ' ' → logprob: -13.127017974853516
    5. ' range' → logprob: -13.252017974853516
    6. 'i' → logprob: -15.502017974853516
    7. 'for' → logprob: -16.752017974853516
    8. '
' → logprob: -17.252017974853516
    9. '[' → logprob: -17.377017974853516
    10. 'import' → logprob: -17.502017974853516

Token 625: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001584850688232109
    2. ' range' → logprob: -8.750158309936523
    3. '(range' → logprob: -20.250158309936523
    4. '	range' → logprob: -22.250158309936523
    5. '   ' → logprob: -22.375158309936523
    6. ' ' → logprob: -22.625158309936523
    7. '
' → logprob: -23.375158309936523
    8. '  ' → logprob: -24.000158309936523
    9. '0' → logprob: -24.875158309936523
    10. '[' → logprob: -25.125158309936523

Token 626: '(p' (ID: 2407)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005510619375854731
    2. '(range' → logprob: -5.2555108070373535
    3. '(p' → logprob: -8.505510330200195
    4. ' range' → logprob: -9.505510330200195
    5. 'p' → logprob: -17.755510330200195
    6. '(' → logprob: -18.630510330200195
    7. '	range' → logprob: -18.755510330200195
    8. 'Range' → logprob: -19.380510330200195
    9. '(r' → logprob: -19.880510330200195
    10. '_range' → logprob: -19.880510330200195

Token 627: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.006716674659401178
    2. 'if' → logprob: -5.006716728210449
    3. ')' → logprob: -14.38171672821045
    4. '           ' → logprob: -14.88171672821045
    5. '	if' → logprob: -15.75671672821045
    6. ' ' → logprob: -16.506715774536133
    7. '               ' → logprob: -16.756715774536133
    8. '        ' → logprob: -18.006715774536133
    9. '		' → logprob: -18.006715774536133
    10. '          ' → logprob: -18.006715774536133

Token 628: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.00861468818038702
    2. 'if' → logprob: -4.758614540100098
    3. '               ' → logprob: -16.133615493774414
    4. '           ' → logprob: -16.508615493774414
    5. ' ' → logprob: -17.633615493774414
    6. '	if' → logprob: -17.883615493774414
    7. '            ' → logprob: -18.508615493774414
    8. '                ' → logprob: -18.633615493774414
    9. '        ' → logprob: -18.633615493774414
    10. '          ' → logprob: -18.883615493774414

Token 629: ' col' (ID: 996)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.44514989852905273
    2. ' values' → logprob: -1.0701498985290527
    3. 'col' → logprob: -4.695149898529053
    4. ' col' → logprob: -4.945149898529053
    5. '(values' → logprob: -10.820150375366211
    6. '    ' → logprob: -11.445150375366211
    7. '   ' → logprob: -11.695150375366211
    8. ' ' → logprob: -12.195150375366211
    9. '	values' → logprob: -12.195150375366211
    10. ' not' → logprob: -13.445150375366211

Token 630: '_vals' (ID: 71688)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005699523026123643
    2. '_vals' → logprob: -8.250570297241211
    3. 'vals' → logprob: -9.000570297241211
    4. 'values' → logprob: -9.500570297241211
    5. '[' → logprob: -9.875570297241211
    6. 'Vals' → logprob: -10.250570297241211
    7. '_values' → logprob: -11.375570297241211
    8. 's' → logprob: -12.750570297241211
    9. 'i' → logprob: -13.125570297241211
    10. '(i' → logprob: -13.500570297241211

Token 631: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. 'i' → logprob: -17.25
    3. '[' → logprob: -17.625
    4. '   ' → logprob: -18.125
    5. '[
' → logprob: -18.5
    6. '[j' → logprob: -18.5
    7. ' [' → logprob: -18.625
    8. '
' → logprob: -18.75
    9. '```' → logprob: -19.375
    10. ' ' → logprob: -19.5

Token 632: ']' (ID: 60)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.06197956204414368
    2. 'is' → logprob: -2.8119795322418213
    3. ']' → logprob: -11.561979293823242
    4. ')' → logprob: -13.811979293823242
    5. '[' → logprob: -14.811979293823242
    6. '	is' → logprob: -14.936979293823242
    7. ' ' → logprob: -15.686979293823242
    8. 'None' → logprob: -15.936979293823242
    9. '==' → logprob: -16.311979293823242
    10. ')is' → logprob: -16.936979293823242

Token 633: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.006717974785715342
    2. 'is' → logprob: -5.006718158721924
    3. 'None' → logprob: -13.881717681884766
    4. '[' → logprob: -14.506717681884766
    5. ']' → logprob: -15.131717681884766
    6. '```' → logprob: -15.881717681884766
    7. ')' → logprob: -16.006717681884766
    8. ' ' → logprob: -16.131717681884766
    9. '==' → logprob: -16.131717681884766
    10. 'Is' → logprob: -16.506717681884766

Token 634: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.004078878089785576
    2. ' None' → logprob: -5.5040788650512695
    3. ' ' → logprob: -15.87907886505127
    4. '=None' → logprob: -16.379079818725586
    5. '_None' → logprob: -16.629079818725586
    6. '(None' → logprob: -16.879079818725586
    7. 'none' → logprob: -17.254079818725586
    8. '   ' → logprob: -17.754079818725586
    9. '  ' → logprob: -18.754079818725586
    10. '0' → logprob: -18.879079818725586

Token 635: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.47413474321365356
    2. ']
' → logprob: -0.9741347432136536
    3. ']

' → logprob: -10.34913444519043
    4. ']
' → logprob: -10.84913444519043
    5. ' ]
' → logprob: -12.97413444519043
    6. '       ' → logprob: -13.47413444519043
    7. ' ]' → logprob: -13.72413444519043
    8. '               ' → logprob: -14.47413444519043
    9. '           ' → logprob: -14.72413444519043
    10. '   ' → logprob: -15.34913444519043

Token 636: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005682834889739752
    2. ' if' → logprob: -8.000568389892578
    3. 'if' → logprob: -8.625568389892578
    4. '           ' → logprob: -10.750568389892578
    5. '<|end|>' → logprob: -11.625568389892578
    6. '```' → logprob: -12.375568389892578
    7. '                   ' → logprob: -13.000568389892578
    8. '		       ' → logprob: -13.125568389892578
    9. '              ' → logprob: -13.125568389892578
    10. ',' → logprob: -13.375568389892578

Token 637: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.050962865352630615
    2. ' if' → logprob: -3.0509629249572754
    3. '               ' → logprob: -6.050962924957275
    4. '                   ' → logprob: -11.800962448120117
    5. '           ' → logprob: -12.675962448120117
    6. ' ' → logprob: -13.550962448120117
    7. '       ' → logprob: -13.675962448120117
    8. 'for' → logprob: -14.050962448120117
    9. 'If' → logprob: -14.050962448120117
    10. '                ' → logprob: -14.300962448120117

Token 638: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.16022585332393646
    2. 'len' → logprob: -1.9102258682250977
    3. '(len' → logprob: -13.410225868225098
    4. ' ' → logprob: -16.28522491455078
    5. '	len' → logprob: -16.66022491455078
    6. '1' → logprob: -16.78522491455078
    7. '=len' → logprob: -18.78522491455078
    8. '   ' → logprob: -19.28522491455078
    9. '    ' → logprob: -19.53522491455078
    10. '[len' → logprob: -19.66022491455078

Token 639: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. 'unknown' → logprob: -15.375
    3. ' (' → logprob: -17.0
    4. '(
' → logprob: -19.25
    5. '```' → logprob: -20.0
    6. '_unknown' → logprob: -20.125
    7. '==' → logprob: -20.375
    8. ' unknown' → logprob: -20.5
    9. 'Unknown' → logprob: -21.0
    10. '=' → logprob: -21.0

Token 640: 'unknown' (ID: 33936)
  Prédit: 'unknown'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.0001612267515156418
    2. '(' → logprob: -8.750161170959473
    3. ' unknown' → logprob: -13.000161170959473
    4. 'unk' → logprob: -15.500161170959473
    5. '_unknown' → logprob: -16.62516212463379
    6. 'undefined' → logprob: -17.37516212463379
    7. 'Unknown' → logprob: -17.62516212463379
    8. '[' → logprob: -17.75016212463379
    9. '```' → logprob: -18.50016212463379
    10. 'UNKNOWN' → logprob: -18.62516212463379

Token 641: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.0005228889058344066
    2. 'indices' → logprob: -8.00052261352539
    3. ')' → logprob: -9.12552261352539
    4. '(indices' → logprob: -10.87552261352539
    5. '==' → logprob: -11.25052261352539
    6. 'Indices' → logprob: -11.50052261352539
    7. '   ' → logprob: -11.87552261352539
    8. '_' → logprob: -11.87552261352539
    9. '"indices' → logprob: -12.12552261352539
    10. 's' → logprob: -12.50052261352539

Token 642: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13655710220336914
    2. ' ==' → logprob: -2.761557102203369
    3. '==' → logprob: -2.761557102203369
    4. ')==' → logprob: -6.761557102203369
    5. ' )' → logprob: -10.136556625366211
    6. '()' → logprob: -10.886556625366211
    7. '=' → logprob: -11.386556625366211
    8. ']' → logprob: -11.761556625366211
    9. ']==' → logprob: -12.011556625366211
    10. '[' → logprob: -12.636556625366211

Token 643: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22544173896312714
    2. ' ==' → logprob: -1.6004416942596436
    3. '=' → logprob: -11.975441932678223
    4. ')==' → logprob: -12.100441932678223
    5. '==
' → logprob: -12.100441932678223
    6. ']==' → logprob: -12.975441932678223
    7. ')' → logprob: -13.100441932678223
    8. '```' → logprob: -13.350441932678223
    9. '===' → logprob: -13.475441932678223
    10. ' ' → logprob: -13.600441932678223

Token 644: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002981624274980277
    2. ' ' → logprob: -8.125298500061035
    3. '   ' → logprob: -14.125298500061035
    4. '```' → logprob: -15.125298500061035
    5. '
' → logprob: -15.500298500061035
    6. 'One' → logprob: -16.18779754638672
    7. '=' → logprob: -16.25029754638672
    8. 'one' → logprob: -16.37529754638672
    9. '0' → logprob: -16.50029754638672
    10. '  ' → logprob: -16.56279754638672

Token 645: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.704065213445574e-05
    2. ' ' → logprob: -10.000046730041504
    3. '   ' → logprob: -14.687546730041504
    4. '=' → logprob: -15.562546730041504
    5. '0' → logprob: -15.875046730041504
    6. '```' → logprob: -15.937546730041504
    7. ')' → logprob: -16.75004768371582
    8. '  ' → logprob: -16.75004768371582
    9. '2' → logprob: -16.87504768371582
    10. '[' → logprob: -16.93754768371582

Token 646: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11295051127672195
    2. ':
' → logprob: -2.237950563430786
    3. '):
' → logprob: -10.112950325012207
    4. '<|end|>' → logprob: -10.862950325012207
    5. '):' → logprob: -11.112950325012207
    6. ':

' → logprob: -11.112950325012207
    7. ')' → logprob: -11.612950325012207
    8. '{' → logprob: -11.737950325012207
    9. '{
' → logprob: -11.987950325012207
    10. ',' → logprob: -12.862950325012207

Token 647: '                   ' (ID: 699)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5763240456581116
    2. 'i' → logprob: -0.8263240456581116
    3. '                   ' → logprob: -7.951323986053467
    4. '   ' → logprob: -11.826324462890625
    5. '                ' → logprob: -12.451324462890625
    6. '	i' → logprob: -12.701324462890625
    7. '               ' → logprob: -13.076324462890625
    8. 'k' → logprob: -13.076324462890625
    9. '_i' → logprob: -13.201324462890625
    10. ' k' → logprob: -13.201324462890625

Token 648: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.004625222180038691
    2. ' i' → logprob: -5.37962532043457
    3. '                   ' → logprob: -12.62962532043457
    4. 'idx' → logprob: -14.50462532043457
    5. '               ' → logprob: -14.62962532043457
    6. '   ' → logprob: -15.50462532043457
    7. 'x' → logprob: -15.75462532043457
    8. 'row' → logprob: -16.50462532043457
    9. '           ' → logprob: -16.62962532043457
    10. '	i' → logprob: -16.87962532043457

Token 649: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868733048439026
    2. '=' → logprob: -1.1368732452392578
    3. ' ' → logprob: -14.011873245239258
    4. '=
' → logprob: -15.136873245239258
    5. ',' → logprob: -15.261873245239258
    6. '=

' → logprob: -15.386873245239258
    7. '[' → logprob: -15.761873245239258
    8. ' =
' → logprob: -16.136873245239258
    9. '<|end|>' → logprob: -16.261873245239258
    10. ')' → logprob: -16.386873245239258

Token 650: ' unknown' (ID: 17927)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.12692883610725403
    2. ' unknown' → logprob: -2.1269288063049316
    3. 'unk' → logprob: -14.25192928314209
    4. '_unknown' → logprob: -16.501928329467773
    5. 'Unknown' → logprob: -17.376928329467773
    6. '   ' → logprob: -17.376928329467773
    7. '                   ' → logprob: -18.376928329467773
    8. '    ' → logprob: -19.001928329467773
    9. '	' → logprob: -19.001928329467773
    10. 'UNKNOWN' → logprob: -19.126928329467773

Token 651: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.0022739621344953775
    2. 'indices' → logprob: -6.627274036407471
    3. 'unknown' → logprob: -7.377274036407471
    4. '[' → logprob: -8.377273559570312
    5. 'Indices' → logprob: -9.877273559570312
    6. 's' → logprob: -11.252273559570312
    7. '_' → logprob: -12.252273559570312
    8. '"indices' → logprob: -12.252273559570312
    9. '\' → logprob: -12.377273559570312
    10. '
' → logprob: -12.752273559570312

Token 652: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0054272739216685295
    2. 'unknown' → logprob: -5.255427360534668
    3. ' unknown' → logprob: -9.505427360534668
    4. '
' → logprob: -10.630427360534668
    5. '_unknown' → logprob: -11.130427360534668
    6. ' [' → logprob: -11.130427360534668
    7. '   ' → logprob: -11.255427360534668
    8. '                   ' → logprob: -11.255427360534668
    9. '0' → logprob: -11.630427360534668
    10. '               ' → logprob: -12.005427360534668

Token 653: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002005961025133729
    2. 'unknown' → logprob: -6.6270060539245605
    3. '[' → logprob: -7.3770060539245605
    4. ' ' → logprob: -10.127005577087402
    5. '   ' → logprob: -12.127005577087402
    6. ' unknown' → logprob: -13.002005577087402
    7. '
' → logprob: -13.502005577087402
    8. 'Unknown' → logprob: -14.189505577087402
    9. 'known' → logprob: -14.689505577087402
    10. 'undefined' → logprob: -14.752005577087402

Token 654: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0697774589061737
    2. '
' → logprob: -3.569777488708496
    3. ']' → logprob: -4.444777488708496
    4. ']
' → logprob: -4.694777488708496
    5. '               ' → logprob: -5.319777488708496
    6. '                       ' → logprob: -5.944777488708496
    7. ')
' → logprob: -6.069777488708496
    8. ')' → logprob: -6.319777488708496
    9. '                    ' → logprob: -6.444777488708496
    10. '                    
' → logprob: -7.194777488708496

Token 655: '                   ' (ID: 699)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8656894564628601
    2. '                   ' → logprob: -0.9906894564628601
    3. ' s' → logprob: -1.7406895160675049
    4. '
' → logprob: -3.740689516067505
    5. '               ' → logprob: -5.740689277648926
    6. '                       ' → logprob: -6.365689277648926
    7. '   ' → logprob: -7.740689277648926
    8. '```' → logprob: -7.740689277648926
    9. '                    
' → logprob: -7.740689277648926
    10. '           ' → logprob: -7.865689277648926

Token 656: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.002917095785960555
    2. 'known' → logprob: -6.252917289733887
    3. 'sum' → logprob: -7.127917289733887
    4. ' s' → logprob: -9.377917289733887
    5. 'row' → logprob: -10.002917289733887
    6. 'total' → logprob: -10.502917289733887
    7. 'col' → logprob: -11.377917289733887
    8. 'r' → logprob: -12.127917289733887
    9. 'val' → logprob: -12.377917289733887
    10. '   ' → logprob: -13.127917289733887

Token 657: '_known' (ID: 183002)
  Prédit: '_known'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_known' → logprob: -2.15310683415737e-05
    2. 'known' → logprob: -10.875021934509277
    3. 'um' → logprob: -14.375021934509277
    4. 'Known' → logprob: -14.500021934509277
    5. '_vals' → logprob: -14.875021934509277
    6. '=' → logprob: -15.500021934509277
    7. '_val' → logprob: -15.500021934509277
    8. ' =' → logprob: -15.875021934509277
    9. '_' → logprob: -16.25002098083496
    10. 'nown' → logprob: -16.25002098083496

Token 658: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759541392326355
    2. '=' → logprob: -0.8259541392326355
    3. '+=' → logprob: -12.07595443725586
    4. '=sum' → logprob: -12.57595443725586
    5. ' +=' → logprob: -13.07595443725586
    6. ' ' → logprob: -13.32595443725586
    7. ' ' → logprob: -15.07595443725586
    8. '   ' → logprob: -15.20095443725586
    9. ',' → logprob: -15.32595443725586
    10. 'for' → logprob: -16.07595443725586

Token 659: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005424907896667719
    2. 'sum' → logprob: -5.380424976348877
    3. ' ' → logprob: -7.380424976348877
    4. ' sum' → logprob: -8.630424499511719
    5. '   ' → logprob: -13.630424499511719
    6. 'total' → logprob: -14.505424499511719
    7. ' ' → logprob: -15.942924499511719
    8. '  ' → logprob: -16.38042449951172
    9. 'tot' → logprob: -16.69292449951172
    10. '
' → logprob: -16.81792449951172

Token 660: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036079094279557467
    2. 'sum' → logprob: -5.628607749938965
    3. ' ' → logprob: -12.128607749938965
    4. '   ' → logprob: -13.628607749938965
    5. ' sum' → logprob: -14.128607749938965
    6. 's' → logprob: -16.50360870361328
    7. '=' → logprob: -16.62860870361328
    8. '```' → logprob: -16.62860870361328
    9. '(sum' → logprob: -17.12860870361328
    10. '
' → logprob: -17.75360870361328

Token 661: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01787293702363968
    2. 'for' → logprob: -4.2678728103637695
    3. ' for' → logprob: -5.6428728103637695
    4. '                    ' → logprob: -10.26787281036377
    5. '           ' → logprob: -10.39287281036377
    6. '               ' → logprob: -10.76787281036377
    7. '                       ' → logprob: -11.26787281036377
    8. '		           ' → logprob: -11.64287281036377
    9. '                  ' → logprob: -11.64287281036377
    10. '   ' → logprob: -12.01787281036377

Token 662: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07920217514038086
    2. 'for' → logprob: -2.704202175140381
    3. ' for' → logprob: -4.704202175140381
    4. '
' → logprob: -10.079202651977539
    5. '                       ' → logprob: -10.454202651977539
    6. '               ' → logprob: -10.579202651977539
    7. '           ' → logprob: -10.829202651977539
    8. '```' → logprob: -11.204202651977539
    9. '                    ' → logprob: -11.329202651977539
    10. '                  ' → logprob: -12.079202651977539

Token 663: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00627228943631053
    2. ' for' → logprob: -5.256272315979004
    3. '                   ' → logprob: -6.881272315979004
    4. '                       ' → logprob: -12.506272315979004
    5. '	for' → logprob: -12.881272315979004
    6. '               ' → logprob: -13.131272315979004
    7. '           ' → logprob: -13.631272315979004
    8. '   ' → logprob: -15.006272315979004
    9. '       ' → logprob: -15.131272315979004
    10. '                    ' → logprob: -15.131272315979004

Token 664: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7296404838562012
    2. 'x' → logprob: -0.9796404838562012
    3. 'ii' → logprob: -1.9796404838562012
    4. 'r' → logprob: -5.854640483856201
    5. 'idx' → logprob: -7.229640483856201
    6. 'i' → logprob: -7.979640483856201
    7. 'row' → logprob: -8.85464096069336
    8. 'm' → logprob: -9.47964096069336
    9. 'ki' → logprob: -9.60464096069336
    10. 'u' → logprob: -10.60464096069336

Token 665: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02324967086315155
    2. 'in' → logprob: -3.773249626159668
    3. '	in' → logprob: -14.023249626159668
    4. 'In' → logprob: -14.773249626159668
    5. ' ' → logprob: -14.898249626159668
    6. 'import' → logprob: -15.023249626159668
    7. 'n' → logprob: -15.148249626159668
    8. '=' → logprob: -15.148249626159668
    9. 'k' → logprob: -15.273249626159668
    10. '1' → logprob: -15.523249626159668

Token 666: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004307884373702109
    2. ' range' → logprob: -7.750430583953857
    3. '(range' → logprob: -16.625431060791016
    4. '   ' → logprob: -17.875431060791016
    5. '	range' → logprob: -19.125431060791016
    6. ' ' → logprob: -19.375431060791016
    7. '[' → logprob: -20.000431060791016
    8. '  ' → logprob: -20.000431060791016
    9. 'ran' → logprob: -20.125431060791016
    10. '    ' → logprob: -20.625431060791016

Token 667: '(p' (ID: 2407)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07998886704444885
    2. ' range' → logprob: -2.579988956451416
    3. '(range' → logprob: -6.829988956451416
    4. '(p' → logprob: -11.329988479614258
    5. 'p' → logprob: -12.954988479614258
    6. ' in' → logprob: -13.954988479614258
    7. '	range' → logprob: -13.954988479614258
    8. '[p' → logprob: -14.204988479614258
    9. 'in' → logprob: -14.954988479614258
    10. '(' → logprob: -16.079988479614258

Token 668: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1547832041978836
    2. 'k' → logprob: -3.529783248901367
    3. '):
' → logprob: -3.654783248901367
    4. ' in' → logprob: -4.029783248901367
    5. 'if' → logprob: -4.404783248901367
    6. ':' → logprob: -4.404783248901367
    7. '                       ' → logprob: -4.529783248901367
    8. ' k' → logprob: -5.154783248901367
    9. ' if' → logprob: -5.154783248901367
    10. '                   ' → logprob: -5.279783248901367

Token 669: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.004324126057326794
    2. 'if' → logprob: -6.129323959350586
    3. ' if' → logprob: -6.754323959350586
    4. '                   ' → logprob: -7.504323959350586
    5. '                        ' → logprob: -9.754323959350586
    6. '   ' → logprob: -9.879323959350586
    7. '       ' → logprob: -9.879323959350586
    8. '                     ' → logprob: -10.004323959350586
    9. '                    ' → logprob: -10.004323959350586
    10. ' ' → logprob: -10.379323959350586

Token 670: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20555096864700317
    2. '                       ' → logprob: -1.8305509090423584
    3. ' if' → logprob: -3.7055509090423584
    4. '                           ' → logprob: -8.080551147460938
    5. '   ' → logprob: -8.330551147460938
    6. ' ' → logprob: -8.580551147460938
    7. '                        ' → logprob: -10.830551147460938
    8. '       ' → logprob: -10.955551147460938
    9. '                   ' → logprob: -10.955551147460938
    10. '                               ' → logprob: -11.205551147460938

Token 671: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0003407071635592729
    2. ' k' → logprob: -8.000340461730957
    3. 'col' → logprob: -13.125340461730957
    4. 'values' → logprob: -13.125340461730957
    5. ' col' → logprob: -14.625340461730957
    6. '   ' → logprob: -15.875340461730957
    7. ' values' → logprob: -15.875340461730957
    8. '    ' → logprob: -16.000341415405273
    9. '                           ' → logprob: -16.625341415405273
    10. 'data' → logprob: -16.750341415405273

Token 672: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4740874767303467
    2. '!=' → logprob: -0.9740874767303467
    3. '                   ' → logprob: -12.849087715148926
    4. '==' → logprob: -13.349087715148926
    5. '                       ' → logprob: -13.724087715148926
    6. ']!=' → logprob: -14.099087715148926
    7. '```' → logprob: -14.224087715148926
    8. '!=(' → logprob: -14.349087715148926
    9. ')!=' → logprob: -14.724087715148926
    10. '!='' → logprob: -14.724087715148926

Token 673: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00023071514442563057
    2. ' i' → logprob: -8.37523078918457
    3. '	i' → logprob: -16.87523078918457
    4. '   ' → logprob: -18.87523078918457
    5. '=i' → logprob: -19.25023078918457
    6. ' ' → logprob: -19.37523078918457
    7. '{i' → logprob: -19.37523078918457
    8. 'k' → logprob: -19.50023078918457
    9. '```' → logprob: -19.50023078918457
    10. ')i' → logprob: -19.62523078918457

Token 674: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.31333690881729126
    2. 'and' → logprob: -1.3133368492126465
    3. '                           ' → logprob: -10.313337326049805
    4. '                       ' → logprob: -10.813337326049805
    5. ':
' → logprob: -11.563337326049805
    6. '                        ' → logprob: -13.063337326049805
    7. ' ' → logprob: -13.313337326049805
    8. ':' → logprob: -13.438337326049805
    9. '	and' → logprob: -13.813337326049805
    10. '                          ' → logprob: -13.938337326049805

Token 675: ' values' (ID: 4824)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.01824921742081642
    2. ' col' → logprob: -4.018249034881592
    3. 'values' → logprob: -9.26824951171875
    4. ' values' → logprob: -13.01824951171875
    5. '(col' → logprob: -13.64324951171875
    6. '    ' → logprob: -14.89324951171875
    7. '   ' → logprob: -15.51824951171875
    8. 'column' → logprob: -15.64324951171875
    9. '	col' → logprob: -15.76824951171875
    10. ' (' → logprob: -15.89324951171875

Token 676: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -3.531315314830863e-06
    2. '[i' → logprob: -13.250003814697266
    3. 'k' → logprob: -14.000003814697266
    4. '][' → logprob: -14.875003814697266
    5. '[' → logprob: -15.750003814697266
    6. ' [' → logprob: -16.250003814697266
    7. '```' → logprob: -16.375003814697266
    8. '[][' → logprob: -16.875003814697266
    9. '{k' → logprob: -17.250003814697266
    10. '                   ' → logprob: -17.625003814697266

Token 677: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.5759979486465454
    2. '][' → logprob: -0.8259979486465454
    3. '[' → logprob: -10.950998306274414
    4. ' ][' → logprob: -10.950998306274414
    5. ']' → logprob: -11.200998306274414
    6. 'j' → logprob: -12.825998306274414
    7. ' [' → logprob: -13.075998306274414
    8. '[i' → logprob: -14.200998306274414
    9. '[k' → logprob: -14.450998306274414
    10. '}[' → logprob: -14.575998306274414

Token 678: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.842555426876061e-06
    2. ' j' → logprob: -12.500004768371582
    3. '[j' → logprob: -13.875004768371582
    4. '_j' → logprob: -17.6250057220459
    5. '	j' → logprob: -17.6250057220459
    6. ':j' → logprob: -17.6250057220459
    7. '   ' → logprob: -17.7500057220459
    8. '```' → logprob: -18.1250057220459
    9. ',j' → logprob: -18.5000057220459
    10. '
' → logprob: -18.6250057220459

Token 679: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007266439963132143
    2. ' is' → logprob: -5.507266521453857
    3. 'is' → logprob: -5.757266521453857
    4. ' ]' → logprob: -11.3822660446167
    5. '`' → logprob: -12.6322660446167
    6. '[' → logprob: -13.1322660446167
    7. '']' → logprob: -13.7572660446167
    8. ']!=' → logprob: -13.7572660446167
    9. '```' → logprob: -13.8822660446167
    10. 'None' → logprob: -14.1322660446167

Token 680: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.6931707859039307
    2. ' is' → logprob: -0.6931707859039307
    3. ']' → logprob: -10.818170547485352
    4. '```' → logprob: -14.443170547485352
    5. '
' → logprob: -14.818170547485352
    6. '[' → logprob: -14.818170547485352
    7. ')' → logprob: -15.068170547485352
    8. ' ' → logprob: -15.193170547485352
    9. '`' → logprob: -15.443170547485352
    10. '	is' → logprob: -15.568170547485352

Token 681: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.03369307890534401
    2. ' not' → logprob: -3.4086930751800537
    3. 'None' → logprob: -12.033693313598633
    4. '
' → logprob: -12.158693313598633
    5. '   ' → logprob: -12.158693313598633
    6. 'n' → logprob: -12.408693313598633
    7. '                   ' → logprob: -13.033693313598633
    8. 'Not' → logprob: -13.033693313598633
    9. '               ' → logprob: -13.158693313598633
    10. ' ' → logprob: -13.158693313598633

Token 682: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -4.5491004129871726e-05
    2. ' None' → logprob: -10.000045776367188
    3. '=None' → logprob: -17.125045776367188
    4. 'none' → logprob: -17.750045776367188
    5. 'not' → logprob: -18.125045776367188
    6. '   ' → logprob: -18.375045776367188
    7. '(None' → logprob: -19.000045776367188
    8. '_None' → logprob: -19.000045776367188
    9. '
' → logprob: -20.250045776367188
    10. 'Not' → logprob: -20.875045776367188

Token 683: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10179799050092697
    2. ':' → logprob: -2.6017980575561523
    3. '                       ' → logprob: -4.351798057556152
    4. '                           ' → logprob: -4.726798057556152
    5. '                               ' → logprob: -8.101798057556152
    6. ':s' → logprob: -8.726798057556152
    7. '):
' → logprob: -8.976798057556152
    8. ':

' → logprob: -10.226798057556152
    9. '                   ' → logprob: -10.351798057556152
    10. 's' → logprob: -10.476798057556152

Token 684: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.046957213431596756
    2. '                       ' → logprob: -3.42195725440979
    3. '                               ' → logprob: -4.546957015991211
    4. 's' → logprob: -6.171957015991211
    5. ' s' → logprob: -8.921957015991211
    6. '                   ' → logprob: -9.421957015991211
    7. '                          ' → logprob: -9.921957015991211
    8. '   ' → logprob: -10.046957015991211
    9. '                            ' → logprob: -10.046957015991211
    10. '               ' → logprob: -10.171957015991211

Token 685: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.0002353640884393826
    2. ' s' → logprob: -8.375235557556152
    3. '                           ' → logprob: -13.375235557556152
    4. '                       ' → logprob: -13.625235557556152
    5. '```' → logprob: -13.750235557556152
    6. '                   ' → logprob: -14.750235557556152
    7. '`s' → logprob: -15.625235557556152
    8. '+' → logprob: -16.625234603881836
    9. '   ' → logprob: -16.750234603881836
    10. '
' → logprob: -17.250234603881836

Token 686: '_known' (ID: 183002)
  Prédit: '_known'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_known' → logprob: -4.8590300139039755e-05
    2. '[k' → logprob: -10.750048637390137
    3. 'Known' → logprob: -11.375048637390137
    4. 'known' → logprob: -12.000048637390137
    5. '_k' → logprob: -12.500048637390137
    6. 'nown' → logprob: -14.125048637390137
    7. '_needed' → logprob: -14.125048637390137
    8. 'KNOWN' → logprob: -14.125048637390137
    9. '_used' → logprob: -14.500048637390137
    10. '_owned' → logprob: -14.625048637390137

Token 687: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12693136930465698
    2. ' +=' → logprob: -2.1269314289093018
    3. ']+=' → logprob: -13.626931190490723
    4. '+' → logprob: -13.626931190490723
    5. '+=(' → logprob: -15.251931190490723
    6. '                           ' → logprob: -15.751931190490723
    7. '                        ' → logprob: -15.751931190490723
    8. '=' → logprob: -16.87693214416504
    9. '+="' → logprob: -17.00193214416504
    10. '                            ' → logprob: -17.00193214416504

Token 688: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.0052362410351634026
    2. ' values' → logprob: -5.2552361488342285
    3. 'col' → logprob: -13.130236625671387
    4. '	values' → logprob: -16.00523567199707
    5. ' col' → logprob: -16.38023567199707
    6. '(values' → logprob: -16.50523567199707
    7. '   ' → logprob: -17.25523567199707
    8. '.values' → logprob: -17.63023567199707
    9. ' ' → logprob: -18.13023567199707
    10. 'value' → logprob: -18.38023567199707

Token 689: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -5.512236498361744e-07
    2. 'k' → logprob: -15.000000953674316
    3. '[' → logprob: -15.750000953674316
    4. '(k' → logprob: -19.0
    5. '{k' → logprob: -19.625
    6. ' [' → logprob: -20.0
    7. '[
' → logprob: -20.875
    8. '```' → logprob: -21.0
    9. '[key' → logprob: -21.25
    10. '[i' → logprob: -21.5

Token 690: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1436702013015747
    2. '[j' → logprob: -2.018670082092285
    3. '[k' → logprob: -7.018670082092285
    4. '[' → logprob: -9.893670082092285
    5. '}[' → logprob: -11.518670082092285
    6. '>[' → logprob: -11.643670082092285
    7. ' ][' → logprob: -12.268670082092285
    8. ']' → logprob: -12.643670082092285
    9. '```' → logprob: -12.643670082092285
    10. ''][' → logprob: -12.768670082092285

Token 691: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0001310719089815393
    2. ' j' → logprob: -9.000130653381348
    3. '[j' → logprob: -13.000130653381348
    4. '   ' → logprob: -13.125130653381348
    5. '```' → logprob: -13.875130653381348
    6. ' ' → logprob: -14.125130653381348
    7. '[' → logprob: -15.625130653381348
    8. '	j' → logprob: -15.625130653381348
    9. '           ' → logprob: -15.750130653381348
    10. '  ' → logprob: -16.000131607055664

Token 692: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9363817572593689
    2. ']' → logprob: -1.9363818168640137
    3. '                       ' → logprob: -1.9363818168640137
    4. '<|end|>' → logprob: -2.4363818168640137
    5. '
' → logprob: -2.5613818168640137
    6. '                           ' → logprob: -3.1863818168640137
    7. '               ' → logprob: -3.4363818168640137
    8. '                   ' → logprob: -3.6863818168640137
    9. ')
' → logprob: -4.311381816864014
    10. ']
' → logprob: -4.686381816864014

Token 693: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10542172193527222
    2. '                           ' → logprob: -3.105421781539917
    3. '                       ' → logprob: -3.855421781539917
    4. '
' → logprob: -4.730421543121338
    5. ' 
' → logprob: -4.980421543121338
    6. '<|end|>' → logprob: -5.230421543121338
    7. '                    
' → logprob: -5.855421543121338
    8. '                        
' → logprob: -6.230421543121338
    9. '                            
' → logprob: -6.355421543121338
    10. '```' → logprob: -6.605421543121338

Token 694: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.04356815293431282
    2. ' val' → logprob: -3.1685681343078613
    3. 'values' → logprob: -7.918568134307861
    4. '                   ' → logprob: -9.91856861114502
    5. 'if' → logprob: -10.04356861114502
    6. 'v' → logprob: -10.04356861114502
    7. ' values' → logprob: -10.66856861114502
    8. 'value' → logprob: -10.91856861114502
    9. 'vals' → logprob: -11.41856861114502
    10. '                       ' → logprob: -12.16856861114502

Token 695: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931474208831787
    2. ' =' → logprob: -0.6931474208831787
    3. ' ' → logprob: -15.568147659301758
    4. '                    ' → logprob: -17.193147659301758
    5. '=

' → logprob: -17.193147659301758
    6. '                ' → logprob: -17.693147659301758
    7. '＝' → logprob: -17.818147659301758
    8. '                   ' → logprob: -17.818147659301758
    9. ' =
' → logprob: -18.443147659301758
    10. '=
' → logprob: -18.568147659301758

Token 696: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.10020806640386581
    2. ' total' → logprob: -2.350208044052124
    3. '   ' → logprob: -15.100208282470703
    4. 't' → logprob: -15.225208282470703
    5. '                   ' → logprob: -15.225208282470703
    6. '(total' → logprob: -15.725208282470703
    7. 'tot' → logprob: -15.725208282470703
    8. '	total' → logprob: -16.350208282470703
    9. 'Total' → logprob: -16.600208282470703
    10. ' ' → logprob: -17.225208282470703

Token 697: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0008072483469732106
    2. '-' → logprob: -7.125807285308838
    3. '-val' → logprob: -12.87580680847168
    4. ' ' → logprob: -15.62580680847168
    5. '-s' → logprob: -16.12580680847168
    6. ' ' → logprob: -19.37580680847168
    7. '   ' → logprob: -19.37580680847168
    8. ' -
' → logprob: -19.50080680847168
    9. '-p' → logprob: -19.75080680847168
    10. '-remove' → logprob: -19.87580680847168

Token 698: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0004306692280806601
    2. ' s' → logprob: -7.750430583953857
    3. '_s' → logprob: -22.875431060791016
    4. '                   ' → logprob: -23.000431060791016
    5. ' ' → logprob: -23.625431060791016
    6. '	s' → logprob: -23.750431060791016
    7. '`s' → logprob: -24.250431060791016
    8. '{s' → logprob: -24.375431060791016
    9. 'ss' → logprob: -24.625431060791016
    10. '   ' → logprob: -24.875431060791016

Token 699: '_known' (ID: 183002)
  Prédit: '_known'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_known' → logprob: -1.6240566083070007e-06
    2. 'known' → logprob: -13.875001907348633
    3. 'Known' → logprob: -15.250001907348633
    4. '_k' → logprob: -15.250001907348633
    5. 'KNOWN' → logprob: -17.000001907348633
    6. '-known' → logprob: -18.000001907348633
    7. '_owned' → logprob: -18.250001907348633
    8. 'nown' → logprob: -18.500001907348633
    9. '_unknown' → logprob: -18.500001907348633
    10. '_s' → logprob: -19.250001907348633

Token 700: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0019067394314333797
    2. '               ' → logprob: -7.501906871795654
    3. '           ' → logprob: -7.751906871795654
    4. '<|end|>' → logprob: -7.876906871795654
    5. '
' → logprob: -8.251906394958496
    6. '                       ' → logprob: -8.876906394958496
    7. '       ' → logprob: -9.876906394958496
    8. '                    
' → logprob: -10.376906394958496
    9. '                           ' → logprob: -12.001906394958496
    10. '                    ' → logprob: -12.126906394958496

Token 701: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0017665742198005319
    2. '               ' → logprob: -7.626766681671143
    3. '<|end|>' → logprob: -7.626766681671143
    4. '                       ' → logprob: -8.001766204833984
    5. '           ' → logprob: -8.251766204833984
    6. '       ' → logprob: -9.376766204833984
    7. '				' → logprob: -11.126766204833984
    8. '                    
' → logprob: -11.126766204833984
    9. '                    ' → logprob: -11.376766204833984
    10. '                  ' → logprob: -11.501766204833984

Token 702: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16962136328220367
    2. ' if' → logprob: -2.044621467590332
    3. 'values' → logprob: -4.169621467590332
    4. '                   ' → logprob: -4.669621467590332
    5. ' values' → logprob: -6.544621467590332
    6. '               ' → logprob: -9.169621467590332
    7. '                       ' → logprob: -9.419621467590332
    8. '           ' → logprob: -9.919621467590332
    9. '                           ' → logprob: -10.544621467590332
    10. '                    ' → logprob: -11.419621467590332

Token 703: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.06196869537234306
    2. ' values' → logprob: -2.8119688034057617
    3. '	values' → logprob: -15.061968803405762
    4. '(values' → logprob: -15.311968803405762
    5. '   ' → logprob: -15.561968803405762
    6. ' ' → logprob: -15.936968803405762
    7. '  ' → logprob: -17.061967849731445
    8. 'value' → logprob: -17.061967849731445
    9. 'not' → logprob: -17.436967849731445
    10. '    ' → logprob: -17.561967849731445

Token 704: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.869017852295656e-06
    2. '[' → logprob: -12.000006675720215
    3. 'i' → logprob: -14.875006675720215
    4. '[k' → logprob: -15.875006675720215
    5. '[j' → logprob: -16.87500762939453
    6. '[I' → logprob: -17.50000762939453
    7. '```' → logprob: -18.00000762939453
    8. ' [' → logprob: -18.12500762939453
    9. '[u' → logprob: -18.25000762939453
    10. '[
' → logprob: -18.37500762939453

Token 705: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.20814821124076843
    2. '[j' → logprob: -1.7081482410430908
    3. '[i' → logprob: -5.083148002624512
    4. '[' → logprob: -7.833148002624512
    5. '[k' → logprob: -10.583148002624512
    6. ']' → logprob: -10.583148002624512
    7. '}[' → logprob: -11.458148002624512
    8. ' ][' → logprob: -11.458148002624512
    9. '>[' → logprob: -11.708148002624512
    10. '```' → logprob: -11.708148002624512

Token 706: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.664371848164592e-05
    2. '[j' → logprob: -11.750016212463379
    3. ' j' → logprob: -11.750016212463379
    4. '   ' → logprob: -15.500016212463379
    5. '][' → logprob: -15.500016212463379
    6. '	j' → logprob: -15.625016212463379
    7. '[' → logprob: -16.750017166137695
    8. ' ' → logprob: -17.250017166137695
    9. ',j' → logprob: -17.250017166137695
    10. '```' → logprob: -17.250017166137695

Token 707: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00023846338444855064
    2. ' is' → logprob: -9.125238418579102
    3. '[' → logprob: -9.500238418579102
    4. 'is' → logprob: -10.500238418579102
    5. ' ]' → logprob: -11.125238418579102
    6. '[i' → logprob: -11.500238418579102
    7. ')' → logprob: -13.875238418579102
    8. '][' → logprob: -14.750238418579102
    9. ']==' → logprob: -14.750238418579102
    10. '```' → logprob: -16.1252384185791

Token 708: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.038048259913921356
    2. 'is' → logprob: -3.288048267364502
    3. '[' → logprob: -12.163047790527344
    4. ']' → logprob: -14.538047790527344
    5. ' ' → logprob: -15.038047790527344
    6. ')' → logprob: -15.413047790527344
    7. '	is' → logprob: -15.413047790527344
    8. '```' → logprob: -16.288047790527344
    9. ')is' → logprob: -16.413047790527344
    10. '==' → logprob: -16.788047790527344

Token 709: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0011705794604495168
    2. ' None' → logprob: -6.751170635223389
    3. '=None' → logprob: -15.75117015838623
    4. '(None' → logprob: -16.126171112060547
    5. '_None' → logprob: -16.251171112060547
    6. 'none' → logprob: -19.126171112060547
    7. '_none' → logprob: -19.126171112060547
    8. '.None' → logprob: -19.251171112060547
    9. ' ' → logprob: -19.376171112060547
    10. '   ' → logprob: -19.501171112060547

Token 710: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.2592933773994446
    2. ':' → logprob: -1.8842933177947998
    3. ':
' → logprob: -2.6342933177948
    4. '=' → logprob: -6.134293556213379
    5. '                           ' → logprob: -6.884293556213379
    6. '):
' → logprob: -8.009293556213379
    7. '                   ' → logprob: -8.009293556213379
    8. '                               ' → logprob: -8.634293556213379
    9. '                        ' → logprob: -9.259293556213379
    10. '[' → logprob: -9.509293556213379

Token 711: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0001334559783572331
    2. '                   ' → logprob: -9.625133514404297
    3. '                           ' → logprob: -10.250133514404297
    4. '                               ' → logprob: -11.000133514404297
    5. '               ' → logprob: -12.375133514404297
    6. 'values' → logprob: -12.875133514404297
    7. '   ' → logprob: -14.000133514404297
    8. '                      ' → logprob: -14.000133514404297
    9. ' values' → logprob: -14.000133514404297
    10. '                        ' → logprob: -14.250133514404297

Token 712: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' (adapté à ' values') → logprob: -0.2524423897266388
    2. ' values' → logprob: -1.5024423599243164
    3. '                           ' → logprob: -8.127442359924316
    4. '                       ' → logprob: -9.127442359924316
    5. '                               ' → logprob: -9.502442359924316
    6. '                   ' → logprob: -11.002442359924316
    7. '               ' → logprob: -12.127442359924316
    8. '           ' → logprob: -12.377442359924316
    9. '	values' → logprob: -12.502442359924316
    10. '(values' → logprob: -14.002442359924316

Token 713: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.125
    3. '```' → logprob: -16.25
    4. '   ' → logprob: -17.25
    5. '[I' → logprob: -17.5
    6. ' [' → logprob: -17.75
    7. '\[' → logprob: -18.25
    8. '][' → logprob: -18.75
    9. '                   ' → logprob: -18.75
    10. '[index' → logprob: -19.125

Token 714: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.16031968593597412
    2. '][' → logprob: -1.9103196859359741
    3. '[' → logprob: -9.785319328308105
    4. ')[' → logprob: -12.285319328308105
    5. '                       ' → logprob: -12.410319328308105
    6. '[][' → logprob: -12.410319328308105
    7. ']][' → logprob: -12.785319328308105
    8. '                           ' → logprob: -12.910319328308105
    9. ' ][' → logprob: -12.910319328308105
    10. '```' → logprob: -13.035319328308105

Token 715: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.318681188422488e-05
    2. '[j' → logprob: -11.50001335144043
    3. ' j' → logprob: -12.75001335144043
    4. '	j' → logprob: -15.75001335144043
    5. '   ' → logprob: -18.75001335144043
    6. '```' → logprob: -18.75001335144043
    7. '$j' → logprob: -19.25001335144043
    8. '][' → logprob: -19.25001335144043
    9. '_j' → logprob: -20.00001335144043
    10. ',j' → logprob: -20.12501335144043

Token 716: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.156437948346138
    2. '=' → logprob: -2.031437873840332
    3. ']=' → logprob: -4.531437873840332
    4. ' =' → logprob: -5.906437873840332
    5. ' ]' → logprob: -8.781437873840332
    6. '[' → logprob: -11.656437873840332
    7. ')' → logprob: -11.906437873840332
    8. '                           ' → logprob: -12.406437873840332
    9. '                       ' → logprob: -12.531437873840332
    10. '                        ' → logprob: -13.781437873840332

Token 717: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804149478673935
    2. ' =' → logprob: -3.288041591644287
    3. '=
' → logprob: -17.538042068481445
    4. ' ' → logprob: -18.413042068481445
    5. '=None' → logprob: -18.663042068481445
    6. '＝' → logprob: -18.788042068481445
    7. '=

' → logprob: -18.913042068481445
    8. ']=' → logprob: -19.038042068481445
    9. ')' → logprob: -19.038042068481445
    10. '                        ' → logprob: -19.163042068481445

Token 718: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -4.5491004129871726e-05
    2. ' val' → logprob: -10.000045776367188
    3. '	val' → logprob: -21.750045776367188
    4. 'v' → logprob: -22.625045776367188
    5. '[val' → logprob: -22.625045776367188
    6. '(val' → logprob: -22.750045776367188
    7. 'va' → logprob: -22.750045776367188
    8. 'int' → logprob: -23.750045776367188
    9. 'Val' → logprob: -24.750045776367188
    10. '_val' → logprob: -24.875045776367188

Token 719: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -7.302704761968926e-05
    2. '                        ' → logprob: -10.500073432922363
    3. '                        
' → logprob: -11.625073432922363
    4. '           ' → logprob: -11.875073432922363
    5. '                           ' → logprob: -12.000073432922363
    6. '               ' → logprob: -12.375073432922363
    7. '```' → logprob: -12.375073432922363
    8. '<|end|>' → logprob: -12.500073432922363
    9. '       ' → logprob: -12.625073432922363
    10. '                   ' → logprob: -12.625073432922363

Token 720: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -4.024604277219623e-05
    2. '                        ' → logprob: -11.000040054321289
    3. '                        
' → logprob: -11.500040054321289
    4. '                           ' → logprob: -12.500040054321289
    5. '                   ' → logprob: -13.000040054321289
    6. '               ' → logprob: -13.375040054321289
    7. '```' → logprob: -13.375040054321289
    8. '           ' → logprob: -13.500040054321289
    9. '       ' → logprob: -14.125040054321289
    10. '<|end|>' → logprob: -14.125040054321289

Token 721: ' changed' (ID: 9180)
  Prédit: 'changed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'changed' (adapté à ' changed') → logprob: -0.0032181181013584137
    2. ' changed' → logprob: -5.753218173980713
    3. '                       ' → logprob: -10.503217697143555
    4. '                           ' → logprob: -11.878217697143555
    5. '                               ' → logprob: -13.253217697143555
    6. '               ' → logprob: -13.628217697143555
    7. '           ' → logprob: -13.753217697143555
    8. 'Changed' → logprob: -14.378217697143555
    9. '   ' → logprob: -14.628217697143555
    10. '                   ' → logprob: -14.628217697143555

Token 722: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002274826169014
    2. '=' → logprob: -2.3502275943756104
    3. '=True' → logprob: -10.850227355957031
    4. ' ' → logprob: -14.600227355957031
    5. ' =
' → logprob: -14.600227355957031
    6. ' True' → logprob: -15.100227355957031
    7. '<|end|>' → logprob: -15.975227355957031
    8. 'True' → logprob: -16.47522735595703
    9. ' |=' → logprob: -17.10022735595703
    10. '=
' → logprob: -17.47522735595703

Token 723: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.07888978719711304
    2. 'True' → logprob: -2.578889846801758
    3. '(True' → logprob: -18.203889846801758
    4. '=True' → logprob: -19.828889846801758
    5. ' Tru' → logprob: -21.328889846801758
    6. ' ' → logprob: -22.578889846801758
    7. '.True' → logprob: -23.328889846801758
    8. ' true' → logprob: -24.078889846801758
    9. ' ' → logprob: -24.328889846801758
    10. 'Tr' → logprob: -24.453889846801758

Token 724: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 725: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039362888783216476
    2. '   ' → logprob: -3.414362907409668
    3. '
' → logprob: -5.539362907409668
    4. 'for' → logprob: -7.289362907409668
    5. '        
' → logprob: -7.539362907409668
    6. ' for' → logprob: -8.289362907409668
    7. '```' → logprob: -9.039362907409668
    8. 'if' → logprob: -9.539362907409668
    9. '    
' → logprob: -9.789362907409668
    10. ' if' → logprob: -11.289362907409668

Token 726: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7235235571861267
    2. 'for' → logprob: -0.8485235571861267
    3. ' for' → logprob: -3.2235236167907715
    4. '
' → logprob: -3.5985236167907715
    5. 'if' → logprob: -4.5985236167907715
    6. 'print' → logprob: -5.0985236167907715
    7. '        
' → logprob: -6.7235236167907715
    8. '   ' → logprob: -6.9735236167907715
    9. ' if' → logprob: -7.4735236167907715
    10. 'result' → logprob: -8.973523139953613

Token 727: ' Check' (ID: 6208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4065650701522827
    2. 'if' → logprob: -1.1565650701522827
    3. '#' → logprob: -4.406565189361572
    4. 'unknown' → logprob: -5.406565189361572
    5. 'result' → logprob: -7.031565189361572
    6. 'output' → logprob: -7.406565189361572
    7. 'results' → logprob: -7.906565189361572
    8. 'missing' → logprob: -8.156564712524414
    9. '       ' → logprob: -9.281564712524414
    10. ' for' → logprob: -9.656564712524414

Token 728: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3716733157634735
    2. 'all' → logprob: -2.246673345565796
    3. 'valid' → logprob: -2.246673345565796
    4. '       ' → logprob: -2.746673345565796
    5. 'unknown' → logprob: -4.246673107147217
    6. ' for' → logprob: -5.621673107147217
    7. 'if' → logprob: -5.871673107147217
    8. 'missing' → logprob: -6.246673107147217
    9. 'uns' → logprob: -6.371673107147217
    10. 'in' → logprob: -6.496673107147217

Token 729: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.2926468253135681
    2. 'any' → logprob: -1.417646884918213
    3. ' all' → logprob: -5.167646884918213
    4. 'None' → logprob: -5.542646884918213
    5. ' any' → logprob: -6.417646884918213
    6. 'changed' → logprob: -9.917646408081055
    7. 'none' → logprob: -10.417646408081055
    8. 'values' → logprob: -10.667646408081055
    9. ' None' → logprob: -10.792646408081055
    10. 'not' → logprob: -11.042646408081055

Token 730: ' unknown' (ID: 17927)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.3217311501502991
    2. ' values' → logprob: -2.1967310905456543
    3. 'unknown' → logprob: -2.3217310905456543
    4. 'None' → logprob: -3.0717310905456543
    5. ' unknown' → logprob: -4.571731090545654
    6. ' None' → logprob: -5.321731090545654
    7. '   ' → logprob: -6.821731090545654
    8. 'none' → logprob: -7.571731090545654
    9. 'known' → logprob: -7.696731090545654
    10. 'entries' → logprob: -8.071731567382812

Token 731: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07892438024282455
    2. 'values' → logprob: -2.9539244174957275
    3. ' values' → logprob: -4.078924179077148
    4. 'positions' → logprob: -6.203924179077148
    5. ' positions' → logprob: -6.453924179077148
    6. '_values' → logprob: -6.703924179077148
    7. ' entries' → logprob: -7.703924179077148
    8. 'entries' → logprob: -7.703924179077148
    9. '_positions' → logprob: -7.703924179077148
    10. 'cells' → logprob: -9.578924179077148

Token 732: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.9237136244773865
    2. 'are' → logprob: -1.1737136840820312
    3. ' have' → logprob: -2.0487136840820312
    4. 'have' → logprob: -2.4237136840820312
    5. '_are' → logprob: -3.5487136840820312
    6. '_have' → logprob: -4.298713684082031
    7. 'found' → logprob: -5.423713684082031
    8. 'filled' → logprob: -5.673713684082031
    9. ' were' → logprob: -5.798713684082031
    10. 'resolved' → logprob: -5.923713684082031

Token 733: ' filled' (ID: 14255)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.22150440514087677
    2. 'resolved' → logprob: -2.4715044498443604
    3. 'filled' → logprob: -2.7215044498443604
    4. 'sol' → logprob: -3.5965044498443604
    5. 'not' → logprob: -5.096504211425781
    6. ' None' → logprob: -5.221504211425781
    7. 'known' → logprob: -5.346504211425781
    8. 'now' → logprob: -5.596504211425781
    9. 'all' → logprob: -7.971504211425781
    10. 'found' → logprob: -8.846504211425781

Token 734: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10736473649740219
    2. ' for' → logprob: -3.3573646545410156
    3. 'all' → logprob: -3.4823646545410156
    4. 'for' → logprob: -3.7323646545410156
    5. ' all' → logprob: -4.607364654541016
    6. '   ' → logprob: -7.107364654541016
    7. 'if' → logprob: -8.357364654541016
    8. '	all' → logprob: -8.482364654541016
    9. '_all' → logprob: -9.107364654541016
    10. '<|end|>' → logprob: -9.232364654541016

Token 735: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25512081384658813
    2. ' for' → logprob: -1.7551207542419434
    3. 'for' → logprob: -3.6301207542419434
    4. '   ' → logprob: -4.380120754241943
    5. ' all' → logprob: -5.255120754241943
    6. 'all' → logprob: -6.005120754241943
    7. ' if' → logprob: -6.005120754241943
    8. 'if' → logprob: -6.130120754241943
    9. '           ' → logprob: -8.755121231079102
    10. '	for' → logprob: -9.005121231079102

Token 736: ' no' (ID: 860)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.6223393678665161
    2. 'if' → logprob: -1.2473393678665161
    3. 'for' → logprob: -1.8723393678665161
    4. 'complete' → logprob: -4.497339248657227
    5. 'un' → logprob: -5.747339248657227
    6. 'in' → logprob: -5.872339248657227
    7. 'missing' → logprob: -6.497339248657227
    8. 'ok' → logprob: -7.622339248657227
    9. 'unknown' → logprob: -7.622339248657227
    10. 'filled' → logprob: -7.747339248657227

Token 737: '_solution' (ID: 127649)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.3877843916416168
    2. 'w' → logprob: -1.1377843618392944
    3. '_' → logprob: -7.762784481048584
    4. 'n' → logprob: -8.387784004211426
    5. 'wn' → logprob: -9.137784004211426
    6. '=' → logprob: -10.137784004211426
    7. ' =' → logprob: -10.137784004211426
    8. 't' → logprob: -11.012784004211426
    9. '_ne' → logprob: -11.012784004211426
    10. 'one' → logprob: -11.387784004211426

Token 738: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023252001032233238
    2. ' =' → logprob: -3.773252010345459
    3. '=False' → logprob: -12.1482515335083
    4. '_found' → logprob: -14.7732515335083
    5. '=True' → logprob: -15.0232515335083
    6. '_' → logprob: -15.2732515335083
    7. 'found' → logprob: -16.273252487182617
    8. ' ' → logprob: -16.773252487182617
    9. '=

' → logprob: -17.273252487182617
    10. '=None' → logprob: -17.523252487182617

Token 739: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.007156130392104387
    2. 'any' → logprob: -5.007155895233154
    3. ' False' → logprob: -7.757155895233154
    4. '(False' → logprob: -12.257156372070312
    5. 'not' → logprob: -12.757156372070312
    6. ' any' → logprob: -12.757156372070312
    7. 'True' → logprob: -13.382156372070312
    8. 'len' → logprob: -15.007156372070312
    9. '(any' → logprob: -15.632156372070312
    10. '=False' → logprob: -15.882156372070312

Token 740: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20821994543075562
    2. 'for' → logprob: -2.4582200050354004
    3. ' for' → logprob: -2.5832200050354004
    4. '
' → logprob: -3.8332200050354004
    5. '        
' → logprob: -6.3332200050354
    6. '   ' → logprob: -7.2082200050354
    7. '<|end|>' → logprob: -7.2082200050354
    8. 'if' → logprob: -7.3332200050354
    9. ' if' → logprob: -7.5832200050354
    10. '  
' → logprob: -8.583219528198242

Token 741: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13581088185310364
    2. '       ' → logprob: -2.3858108520507812
    3. ' for' → logprob: -3.3858108520507812
    4. 'if' → logprob: -6.885810852050781
    5. '   ' → logprob: -9.760810852050781
    6. '	for' → logprob: -11.135810852050781
    7. 'all' → logprob: -11.260810852050781
    8. ' if' → logprob: -11.885810852050781
    9. '```' → logprob: -12.760810852050781
    10. '           ' → logprob: -13.010810852050781

Token 742: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.749814019713085e-06
    2. 'if' → logprob: -12.000006675720215
    3. '       ' → logprob: -15.000006675720215
    4. ' for' → logprob: -15.375006675720215
    5. '   ' → logprob: -17.87500762939453
    6. '	for' → logprob: -20.50000762939453
    7. '           ' → logprob: -21.62500762939453
    8. '```' → logprob: -21.87500762939453
    9. '        
' → logprob: -22.12500762939453
    10. '
' → logprob: -22.37500762939453

Token 743: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05596454069018364
    2. '(i' → logprob: -3.055964469909668
    3. ' i' → logprob: -5.055964469909668
    4. ' (' → logprob: -7.305964469909668
    5. '(' → logprob: -9.180964469909668
    6. '(u' → logprob: -9.305964469909668
    7. 'u' → logprob: -9.930964469909668
    8. 'x' → logprob: -11.430964469909668
    9. '   ' → logprob: -11.680964469909668
    10. ' ' → logprob: -11.930964469909668

Token 744: ',j' (ID: 22712)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6445378661155701
    2. ' in' → logprob: -0.7695378661155701
    3. ',' → logprob: -4.519537925720215
    4. 'n' → logprob: -7.269537925720215
    5. ' ' → logprob: -9.269537925720215
    6. ' ,' → logprob: -9.644537925720215
    7. ')' → logprob: -10.519537925720215
    8. '   ' → logprob: -11.394537925720215
    9. ',n' → logprob: -11.394537925720215
    10. '[' → logprob: -11.519537925720215

Token 745: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6931551098823547
    2. ' in' → logprob: -0.6931551098823547
    3. ' ' → logprob: -12.318155288696289
    4. ',' → logprob: -12.943155288696289
    5. '	in' → logprob: -15.193155288696289
    6. ')' → logprob: -15.568155288696289
    7. 'unknown' → logprob: -15.693155288696289
    8. '   ' → logprob: -16.44315528869629
    9. '  ' → logprob: -16.56815528869629
    10. '    ' → logprob: -16.69315528869629

Token 746: ' unknown' (ID: 17927)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -2.951771421066951e-05
    2. ' unknown' → logprob: -10.500029563903809
    3. 'range' → logprob: -13.375029563903809
    4. 'unk' → logprob: -15.875029563903809
    5. '   ' → logprob: -16.125028610229492
    6. '[(' → logprob: -17.750028610229492
    7. '[' → logprob: -17.875028610229492
    8. ' ' → logprob: -18.250028610229492
    9. 'undefined' → logprob: -18.625028610229492
    10. '  ' → logprob: -18.750028610229492

Token 747: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.128163257315464e-07
    2. ')' → logprob: -15.875
    3. '):
' → logprob: -17.25
    4. '```' → logprob: -17.75
    5. '_indices' → logprob: -18.125
    6. ':
' → logprob: -18.375
    7. 'с' → logprob: -18.375
    8. 'indices' → logprob: -18.625
    9. ''s' → logprob: -18.625
    10. '-' → logprob: -18.75

Token 748: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.033904433250427246
    2. ':
' → logprob: -3.408904552459717
    3. '<|end|>' → logprob: -9.533904075622559
    4. ' if' → logprob: -10.283904075622559
    5. 'if' → logprob: -10.533904075622559
    6. ' :' → logprob: -10.783904075622559
    7. ' in' → logprob: -10.783904075622559
    8. ':

' → logprob: -11.408904075622559
    9. '=' → logprob: -11.658904075622559
    10. ',' → logprob: -11.783904075622559

Token 749: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003768135793507099
    2. ' if' → logprob: -5.753767967224121
    3. '   ' → logprob: -7.753767967224121
    4. '       ' → logprob: -9.378767967224121
    5. 'if' → logprob: -10.128767967224121
    6. '          ' → logprob: -11.503767967224121
    7. '<|end|>' → logprob: -12.253767967224121
    8. '         ' → logprob: -12.378767967224121
    9. '               ' → logprob: -12.503767967224121
    10. '    ' → logprob: -13.503767967224121

Token 750: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.045971181243658066
    2. '           ' → logprob: -3.795971155166626
    3. ' if' → logprob: -3.795971155166626
    4. '       ' → logprob: -12.920970916748047
    5. '   ' → logprob: -13.045970916748047
    6. '               ' → logprob: -13.420970916748047
    7. 'If' → logprob: -13.795970916748047
    8. '	if' → logprob: -14.795970916748047
    9. '          ' → logprob: -15.420970916748047
    10. ' ' → logprob: -15.795970916748047

Token 751: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.3133043944835663
    2. ' values' → logprob: -1.3133044242858887
    3. '   ' → logprob: -10.93830394744873
    4. '	values' → logprob: -11.18830394744873
    5. '(values' → logprob: -12.06330394744873
    6. '    ' → logprob: -13.43830394744873
    7. '           ' → logprob: -13.56330394744873
    8. '.values' → logprob: -13.56330394744873
    9. '       ' → logprob: -15.31330394744873
    10. '               ' → logprob: -15.68830394744873

Token 752: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. 'i' → logprob: -16.5
    3. '[' → logprob: -18.625
    4. '```' → logprob: -18.625
    5. '[j' → logprob: -19.375
    6. ' [' → logprob: -20.25
    7. '[
' → logprob: -21.125
    8. '   ' → logprob: -21.125
    9. '[I' → logprob: -21.125
    10. '\[' → logprob: -21.375

Token 753: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011138362810015678
    2. '[j' → logprob: -4.636138439178467
    3. '][' → logprob: -6.761138439178467
    4. '[' → logprob: -8.511137962341309
    5. ')[' → logprob: -11.761137962341309
    6. ']' → logprob: -13.011137962341309
    7. ' [' → logprob: -13.261137962341309
    8. ')' → logprob: -13.386137962341309
    9. '```' → logprob: -13.636137962341309
    10. 'i' → logprob: -13.886137962341309

Token 754: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.128163257315464e-07
    2. ' j' → logprob: -15.75
    3. '[j' → logprob: -15.875
    4. '	j' → logprob: -16.875
    5. '_j' → logprob: -19.375
    6. '$j' → logprob: -19.625
    7. '   ' → logprob: -19.75
    8. ':j' → logprob: -19.75
    9. ',j' → logprob: -19.75
    10. '```' → logprob: -19.875

Token 755: ']' (ID: 60)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.20256547629833221
    2. 'is' → logprob: -1.7025654315948486
    3. ')' → logprob: -6.827565670013428
    4. ')is' → logprob: -9.82756519317627
    5. ']' → logprob: -12.07756519317627
    6. '==' → logprob: -12.32756519317627
    7. ' )' → logprob: -13.20256519317627
    8. 'Is' → logprob: -14.07756519317627
    9. '	is' → logprob: -14.70256519317627
    10. '[' → logprob: -14.82756519317627

Token 756: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.1269306242465973
    2. ' is' → logprob: -2.1269307136535645
    3. '==' → logprob: -13.501930236816406
    4. ')is' → logprob: -15.126930236816406
    5. ' ' → logprob: -15.251930236816406
    6. '	is' → logprob: -15.376930236816406
    7. ')' → logprob: -15.501930236816406
    8. '[' → logprob: -15.876930236816406
    9. 'Is' → logprob: -16.126930236816406
    10. 'None' → logprob: -17.751930236816406

Token 757: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0040785204619169235
    2. ' None' → logprob: -5.504078388214111
    3. ' ' → logprob: -17.129077911376953
    4. '_None' → logprob: -17.129077911376953
    5. '(None' → logprob: -18.254077911376953
    6. '=None' → logprob: -19.254077911376953
    7. '   ' → logprob: -19.254077911376953
    8. '_none' → logprob: -20.129077911376953
    9. 'none' → logprob: -20.379077911376953
    10. '  ' → logprob: -20.629077911376953

Token 758: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027820030227303505
    2. ':
' → logprob: -3.652820110321045
    3. '               ' → logprob: -6.902820110321045
    4. '           ' → logprob: -8.152819633483887
    5. ' or' → logprob: -9.402819633483887
    6. ':return' → logprob: -9.652819633483887
    7. ' and' → logprob: -11.277819633483887
    8. ')' → logprob: -11.527819633483887
    9. '):' → logprob: -12.027819633483887
    10. '):
' → logprob: -12.152819633483887

Token 759: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20300783216953278
    2. '           ' → logprob: -1.7030078172683716
    3. 'no' → logprob: -7.578007698059082
    4. 'break' → logprob: -8.203007698059082
    5. 'print' → logprob: -8.578007698059082
    6. 'return' → logprob: -9.453007698059082
    7. ' no' → logprob: -9.828007698059082
    8. ' break' → logprob: -9.953007698059082
    9. '```' → logprob: -9.953007698059082
    10. '   ' → logprob: -10.078007698059082

Token 760: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' (adapté à ' no') → logprob: -0.3949848711490631
    2. '           ' → logprob: -1.8949848413467407
    3. ' no' → logprob: -1.8949848413467407
    4. '               ' → logprob: -3.7699849605560303
    5. '   ' → logprob: -6.144984722137451
    6. '
' → logprob: -8.64498519897461
    7. '	no' → logprob: -9.01998519897461
    8. '                   ' → logprob: -9.64498519897461
    9. '       ' → logprob: -9.89498519897461
    10. 'break' → logprob: -11.14498519897461

Token 761: '_solution' (ID: 127649)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15291528403759003
    2. '_solution' → logprob: -2.0279152393341064
    3. ' _' → logprob: -4.7779154777526855
    4. '_s' → logprob: -7.1529154777526855
    5. '_space' → logprob: -7.5279154777526855
    6. 'Solution' → logprob: -8.527915000915527
    7. '<|end|>' → logprob: -10.277915000915527
    8. ')' → logprob: -10.527915000915527
    9. ' ' → logprob: -10.777915000915527
    10. '_possible' → logprob: -11.152915000915527

Token 762: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.201656773686409
    2. ' =' → logprob: -1.7016568183898926
    3. '=True' → logprob: -8.326656341552734
    4. '=False' → logprob: -14.451656341552734
    5. ' ' → logprob: -15.326656341552734
    6. 's' → logprob: -16.076656341552734
    7. '=
' → logprob: -16.201656341552734
    8. '_=' → logprob: -16.201656341552734
    9. '           ' → logprob: -16.451656341552734
    10. '=true' → logprob: -16.826656341552734

Token 763: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.011048289015889168
    2. ' True' → logprob: -4.511048316955566
    3. 'False' → logprob: -14.511048316955566
    4. '(True' → logprob: -18.76104736328125
    5. '=True' → logprob: -19.51104736328125
    6. 'not' → logprob: -21.01104736328125
    7. ' False' → logprob: -21.26104736328125
    8. 'Tr' → logprob: -21.88604736328125
    9. '1' → logprob: -22.76104736328125
    10. 'T' → logprob: -23.01104736328125

Token 764: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006184502970427275
    2. '                   ' → logprob: -5.8811845779418945
    3. '           ' → logprob: -6.6311845779418945
    4. '                ' → logprob: -6.8811845779418945
    5. '       ' → logprob: -8.381184577941895
    6. '                       ' → logprob: -8.506184577941895
    7. '                
' → logprob: -9.131184577941895
    8. '
' → logprob: -9.256184577941895
    9. '<|end|>' → logprob: -9.381184577941895
    10. '              ' → logprob: -9.756184577941895

Token 765: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003331233514472842
    2. '           ' → logprob: -6.253331184387207
    3. '       ' → logprob: -7.503331184387207
    4. '                   ' → logprob: -7.628331184387207
    5. '                ' → logprob: -9.503331184387207
    6. '                       ' → logprob: -9.628331184387207
    7. '<|end|>' → logprob: -10.253331184387207
    8. '
' → logprob: -10.378331184387207
    9. '                               ' → logprob: -10.753331184387207
    10. ' if' → logprob: -11.003331184387207

Token 766: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.32395073771476746
    2. 'break' (adapté à ' break') → logprob: -1.3239507675170898
    3. '               ' → logprob: -4.69895076751709
    4. '           ' → logprob: -7.07395076751709
    5. '	break' → logprob: -7.57395076751709
    6. '       ' → logprob: -9.32395076751709
    7. '
' → logprob: -11.19895076751709
    8. ' continue' → logprob: -11.82395076751709
    9. ' 
' → logprob: -11.82395076751709
    10. '                   ' → logprob: -11.94895076751709

Token 767: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04997633025050163
    2. '
' → logprob: -3.424976348876953
    3. '   ' → logprob: -5.674976348876953
    4. ' if' → logprob: -5.924976348876953
    5. 'if' → logprob: -5.924976348876953
    6. '        
' → logprob: -6.049976348876953
    7. '<|end|>' → logprob: -6.049976348876953
    8. '    
' → logprob: -6.924976348876953
    9. '           ' → logprob: -7.799976348876953
    10. '  
' → logprob: -8.924976348876953

Token 768: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05107433348894119
    2. '
' → logprob: -3.676074266433716
    3. '<|end|>' → logprob: -4.801074504852295
    4. 'if' → logprob: -5.051074504852295
    5. ' if' → logprob: -5.426074504852295
    6. '   ' → logprob: -6.051074504852295
    7. '        
' → logprob: -6.176074504852295
    8. '    
' → logprob: -7.926074504852295
    9. '```' → logprob: -8.426074028015137
    10. '           ' → logprob: -9.301074028015137

Token 769: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5814409255981445
    2. '       ' → logprob: -0.8314409255981445
    3. ' if' → logprob: -5.5814409255981445
    4. '   ' → logprob: -6.5814409255981445
    5. '
' → logprob: -8.456440925598145
    6. '```' → logprob: -9.206440925598145
    7. '        
' → logprob: -11.706440925598145
    8. '           ' → logprob: -12.581440925598145
    9. 'for' → logprob: -12.706440925598145
    10. '	if' → logprob: -13.456440925598145

Token 770: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0004895264864899218
    2. '       ' → logprob: -7.750489711761475
    3. ' if' → logprob: -9.750489234924316
    4. '   ' → logprob: -15.000489234924316
    5. 'output' → logprob: -15.875489234924316
    6. 'result' → logprob: -16.125490188598633
    7. 'for' → logprob: -17.625490188598633
    8. '```' → logprob: -18.250490188598633
    9. '           ' → logprob: -20.125490188598633
    10. '        
' → logprob: -20.125490188598633

Token 771: ' consistency' (ID: 45250)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.24624072015285492
    2. '       ' → logprob: -1.9962407350540161
    3. ' if' → logprob: -2.8712406158447266
    4. '   ' → logprob: -3.9962406158447266
    5. 'not' → logprob: -5.746240615844727
    6. 'for' → logprob: -5.996240615844727
    7. '           ' → logprob: -7.746240615844727
    8. 'sum' → logprob: -7.746240615844727
    9. ' not' → logprob: -7.871240615844727
    10. '        
' → logprob: -9.496240615844727

Token 772: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005121561698615551
    2. ' for' → logprob: -5.75512170791626
    3. 'for' → logprob: -6.63012170791626
    4. ' if' → logprob: -7.75512170791626
    5. 'if' → logprob: -9.005121231079102
    6. '        
' → logprob: -10.755121231079102
    7. '<|end|>' → logprob: -11.380121231079102
    8. ',' → logprob: -12.130121231079102
    9. ' with' → logprob: -12.380121231079102
    10. '.' → logprob: -12.630121231079102

Token 773: ' recom' (ID: 19119)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.45178839564323425
    2. 'for' → logprob: -1.2017884254455566
    3. '       ' → logprob: -3.2017884254455566
    4. ' if' → logprob: -4.451788425445557
    5. 'if' → logprob: -4.576788425445557
    6. ' correct' → logprob: -10.326787948608398
    7. ' valid' → logprob: -10.326787948608398
    8. ' consistent' → logprob: -10.451787948608398
    9. 'valid' → logprob: -10.951787948608398
    10. '   ' → logprob: -11.451787948608398

Token 774: 'pute' (ID: 13605)
  Prédit: 'pute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pute' → logprob: -5.7292167184641585e-05
    2. 'put' → logprob: -9.875057220458984
    3. 'puted' → logprob: -12.750057220458984
    4. 'bine' → logprob: -13.625057220458984
    5. 'm' → logprob: -14.000057220458984
    6. 'p' → logprob: -15.500057220458984
    7. 'plete' → logprob: -15.750057220458984
    8. 'pile' → logprob: -16.250057220458984
    9. 'putate' → logprob: -16.625057220458984
    10. '       ' → logprob: -16.625057220458984

Token 775: ' row' (ID: 5225)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25734102725982666
    2. '       ' → logprob: -2.132340908050537
    3. 'row' → logprob: -2.632340908050537
    4. 'rows' → logprob: -4.007340908050537
    5. ' for' → logprob: -4.882340908050537
    6. '#' → logprob: -4.882340908050537
    7. 'tot' → logprob: -6.507340908050537
    8. 'product' → logprob: -7.507340908050537
    9. ' row' → logprob: -8.007341384887695
    10. ' totals' → logprob: -9.132341384887695

Token 776: ' and' (ID: 326)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13376985490322113
    2. ' totals' → logprob: -2.8837697505950928
    3. 'tot' → logprob: -3.5087697505950928
    4. '_s' → logprob: -4.383769989013672
    5. ' sums' → logprob: -4.508769989013672
    6. '_tot' → logprob: -4.633769989013672
    7. '   ' → logprob: -5.883769989013672
    8. '       ' → logprob: -6.758769989013672
    9. 'for' → logprob: -7.133769989013672
    10. ' for' → logprob: -7.258769989013672

Token 777: ' column' (ID: 6000)
  Prédit: 'column'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'column' → logprob: -0.2105248123407364
    2. 'col' → logprob: -1.7105247974395752
    3. ' column' → logprob: -4.710525035858154
    4. ' col' → logprob: -9.585524559020996
    5. 'for' → logprob: -14.585524559020996
    6. 'columns' → logprob: -14.710524559020996
    7. '#' → logprob: -15.835524559020996
    8. 'total' → logprob: -16.335525512695312
    9. '   ' → logprob: -17.210525512695312
    10. '```' → logprob: -17.210525512695312

Token 778: ' sums' (ID: 73121)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07258088886737823
    2. 'tot' → logprob: -2.8225808143615723
    3. 'for' → logprob: -5.697580814361572
    4. '_s' → logprob: -5.822580814361572
    5. '_tot' → logprob: -6.322580814361572
    6. '   ' → logprob: -6.697580814361572
    7. ' sums' → logprob: -7.572580814361572
    8. ' totals' → logprob: -8.19758129119873
    9. '       ' → logprob: -8.69758129119873
    10. ' for' → logprob: -8.82258129119873

Token 779: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015291442396119237
    2. ' for' → logprob: -7.001529216766357
    3. '
' → logprob: -8.1265287399292
    4. 'for' → logprob: -8.2515287399292
    5. '        
' → logprob: -10.2515287399292
    6. '<|end|>' → logprob: -11.6265287399292
    7. ',' → logprob: -11.8765287399292
    8. '   ' → logprob: -13.2515287399292
    9. '           ' → logprob: -13.5015287399292
    10. ' and' → logprob: -13.6265287399292

Token 780: ' match' (ID: 3981)
  Prédit: 'ensure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ensure' → logprob: -0.443804532289505
    2. 'confirm' → logprob: -2.0688045024871826
    3. 'verify' → logprob: -2.8188045024871826
    4. ' ensure' → logprob: -3.1938045024871826
    5. 'validate' → logprob: -3.3188045024871826
    6. 'see' → logprob: -3.5688045024871826
    7. ' see' → logprob: -4.318804740905762
    8. '#' → logprob: -4.443804740905762
    9. 'detect' → logprob: -4.568804740905762
    10. ' confirm' → logprob: -4.693804740905762

Token 781: ' given' (ID: 4335)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.047680553048849106
    2. '       ' → logprob: -3.297680616378784
    3. ' for' → logprob: -4.672680377960205
    4. 'True' → logprob: -9.297680854797363
    5. 'consistent' → logprob: -10.297680854797363
    6. '           ' → logprob: -11.172680854797363
    7. 'if' → logprob: -11.172680854797363
    8. 'valid' → logprob: -11.297680854797363
    9. 'all' → logprob: -11.422680854797363
    10. '#' → logprob: -11.547680854797363

Token 782: ' totals' (ID: 92279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35032397508621216
    2. 'for' → logprob: -1.8503239154815674
    3. ' totals' → logprob: -2.7253239154815674
    4. 'tot' → logprob: -3.1003239154815674
    5. ' for' → logprob: -3.8503239154815674
    6. '
' → logprob: -6.2253241539001465
    7. '#' → logprob: -6.7253241539001465
    8. '        
' → logprob: -6.7253241539001465
    9. '   ' → logprob: -7.3503241539001465
    10. 'row' → logprob: -7.7253241539001465

Token 783: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01326294057071209
    2. '
' → logprob: -5.138262748718262
    3. ' for' → logprob: -5.513262748718262
    4. 'for' → logprob: -5.763262748718262
    5. '   ' → logprob: -9.513262748718262
    6. '        
' → logprob: -10.263262748718262
    7. '```' → logprob: -12.013262748718262
    8. '           ' → logprob: -12.138262748718262
    9. '	for' → logprob: -12.513262748718262
    10. '    
' → logprob: -13.138262748718262

Token 784: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002460556337609887
    2. ' for' → logprob: -6.627460479736328
    3. '
' → logprob: -7.377460479736328
    4. '   ' → logprob: -8.502460479736328
    5. 'for' → logprob: -8.877460479736328
    6. '<|end|>' → logprob: -9.627460479736328
    7. '        
' → logprob: -10.252460479736328
    8. ' if' → logprob: -10.627460479736328
    9. '           ' → logprob: -11.502460479736328
    10. '```' → logprob: -11.627460479736328

Token 785: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5171480178833008
    2. ' for' → logprob: -1.6421480178833008
    3. 'for' → logprob: -2.517148017883301
    4. ' if' → logprob: -2.642148017883301
    5. 'if' (adapté à ' if') → logprob: -2.892148017883301
    6. 'row' → logprob: -6.892148017883301
    7. '   ' → logprob: -7.767148017883301
    8. ' consistent' → logprob: -7.767148017883301
    9. 'consistent' → logprob: -8.2671480178833
    10. ' row' → logprob: -8.3921480178833

Token 786: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2019118368625641
    2. 'not' → logprob: -1.9519118070602417
    3. ' no' → logprob: -3.4519119262695312
    4. 'no' → logprob: -4.701911926269531
    5. '   ' → logprob: -10.326911926269531
    6. ' ' → logprob: -11.576911926269531
    7. ' ' → logprob: -11.576911926269531
    8. '	not' → logprob: -11.826911926269531
    9. '	no' → logprob: -12.826911926269531
    10. '(not' → logprob: -12.951911926269531

Token 787: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.03804263845086098
    2. ' no' → logprob: -3.2880425453186035
    3. '	no' → logprob: -14.038043022155762
    4. ' ' → logprob: -15.538043022155762
    5. '(no' → logprob: -16.038042068481445
    6. 'n' → logprob: -17.288042068481445
    7. '   ' → logprob: -17.663042068481445
    8. ' ' → logprob: -18.538042068481445
    9. '
' → logprob: -19.663042068481445
    10. 'not' → logprob: -19.788042068481445

Token 788: '_solution' (ID: 127649)
  Prédit: '_solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_solution' → logprob: -0.003207538742572069
    2. '_' → logprob: -5.753207683563232
    3. 'solution' → logprob: -11.128207206726074
    4. 'Solution' → logprob: -11.878207206726074
    5. ' _' → logprob: -12.378207206726074
    6. '_
' → logprob: -14.128207206726074
    7. '_solver' → logprob: -14.378207206726074
    8. '_sol' → logprob: -15.003207206726074
    9. '_s' → logprob: -15.128207206726074
    10. 'no' → logprob: -15.253207206726074

Token 789: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0754341259598732
    2. ':
' → logprob: -2.9504342079162598
    3. ' and' → logprob: -3.9504342079162598
    4. 'and' → logprob: -6.95043420791626
    5. '       ' → logprob: -9.825433731079102
    6. '           ' → logprob: -10.075433731079102
    7. ',' → logprob: -10.575433731079102
    8. '   ' → logprob: -12.075433731079102
    9. ':

' → logprob: -12.325433731079102
    10. ' :' → logprob: -13.700433731079102

Token 790: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004702338483184576
    2. '       ' → logprob: -8.125470161437988
    3. ' for' → logprob: -9.125470161437988
    4. '   ' → logprob: -10.625470161437988
    5. '	       ' → logprob: -11.875470161437988
    6. '               ' → logprob: -12.000470161437988
    7. '```' → logprob: -12.250470161437988
    8. ',' → logprob: -12.500470161437988
    9. ' and' → logprob: -12.500470161437988
    10. ':' → logprob: -12.750470161437988

Token 791: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33181101083755493
    2. '           ' → logprob: -1.4568109512329102
    3. ' for' → logprob: -3.33181095123291
    4. 'consistent' → logprob: -4.95681095123291
    5. '   ' → logprob: -5.58181095123291
    6. 'valid' → logprob: -6.95681095123291
    7. '       ' → logprob: -6.95681095123291
    8. 'cons' → logprob: -8.08181095123291
    9. ' consistent' → logprob: -8.08181095123291
    10. 'correct' → logprob: -8.33181095123291

Token 792: ' Check' (ID: 6208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02965722233057022
    2. '           ' → logprob: -4.279657363891602
    3. ' for' → logprob: -5.154657363891602
    4. 'consistent' → logprob: -5.279657363891602
    5. 'valid' → logprob: -6.154657363891602
    6. '   ' → logprob: -6.404657363891602
    7. '       ' → logprob: -7.654657363891602
    8. 'correct' → logprob: -9.404657363891602
    9. ' consistent' → logprob: -9.529657363891602
    10. 'cons' → logprob: -10.154657363891602

Token 793: ' rows' (ID: 13585)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.9019137024879456
    2. 'all' → logprob: -1.9019136428833008
    3. 'valid' → logprob: -2.401913642883301
    4. 'consistent' → logprob: -2.526913642883301
    5. ' consistent' → logprob: -3.026913642883301
    6. 'for' → logprob: -3.026913642883301
    7. '   ' → logprob: -3.151913642883301
    8. 'rows' → logprob: -3.401913642883301
    9. ' valid' → logprob: -4.026913642883301
    10. ' for' → logprob: -4.276913642883301

Token 794: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00780582707375288
    2. '       ' → logprob: -5.257805824279785
    3. ' for' → logprob: -6.007805824279785
    4. '
' → logprob: -10.382805824279785
    5. '   ' → logprob: -10.757805824279785
    6. 'for' → logprob: -10.882805824279785
    7. ' and' → logprob: -11.882805824279785
    8. ',' → logprob: -12.007805824279785
    9. '               ' → logprob: -12.132805824279785
    10. '=True' → logprob: -12.507805824279785

Token 795: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019567184150218964
    2. '       ' → logprob: -4.144567012786865
    3. '
' → logprob: -6.394567012786865
    4. ' for' → logprob: -7.019567012786865
    5. 'for' → logprob: -7.644567012786865
    6. '   ' → logprob: -8.519567489624023
    7. '               ' → logprob: -8.644567489624023
    8. '```' → logprob: -9.394567489624023
    9. '                   ' → logprob: -12.144567489624023
    10. '          ' → logprob: -12.644567489624023

Token 796: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10848645865917206
    2. ' for' → logprob: -2.8584864139556885
    3. 'for' (adapté à ' for') → logprob: -3.1084864139556885
    4. '   ' → logprob: -7.858486652374268
    5. '       ' → logprob: -7.858486652374268
    6. '               ' → logprob: -12.48348617553711
    7. 'valid' → logprob: -12.60848617553711
    8. 'all' → logprob: -13.48348617553711
    9. ' valid' → logprob: -14.23348617553711
    10. '```' → logprob: -14.73348617553711

Token 797: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0031793788075447083
    2. ' i' → logprob: -5.753179550170898
    3. '   ' → logprob: -13.503179550170898
    4. '	i' → logprob: -15.878179550170898
    5. '_i' → logprob: -17.1281795501709
    6. '       ' → logprob: -17.2531795501709
    7. '           ' → logprob: -17.3781795501709
    8. ' ' → logprob: -17.3781795501709
    9. 'row' → logprob: -18.2531795501709
    10. '0' → logprob: -18.2531795501709

Token 798: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023284032940864563
    2. 'in' → logprob: -3.7732839584350586
    3. '   ' → logprob: -11.273283958435059
    4. ' ' → logprob: -11.523283958435059
    5. '	in' → logprob: -11.898283958435059
    6. ',' → logprob: -12.898283958435059
    7. '    ' → logprob: -14.398283958435059
    8. '[' → logprob: -14.523283958435059
    9. 'n' → logprob: -14.523283958435059
    10. ')' → logprob: -14.523283958435059

Token 799: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005533903022296727
    2. ' range' → logprob: -7.500553607940674
    3. '   ' → logprob: -15.375553131103516
    4. ' ' → logprob: -16.875553131103516
    5. '(range' → logprob: -17.625553131103516
    6. '  ' → logprob: -18.250553131103516
    7. '    ' → logprob: -18.750553131103516
    8. '	range' → logprob: -19.000553131103516
    9. '0' → logprob: -19.375553131103516
    10. '
' → logprob: -19.625553131103516

Token 800: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2019553780555725
    2. '(p' → logprob: -1.7019553184509277
    3. ' p' → logprob: -7.826955318450928
    4. 'len' → logprob: -9.826955795288086
    5. '   ' → logprob: -10.326955795288086
    6. '(len' → logprob: -10.451955795288086
    7. '(' → logprob: -11.576955795288086
    8. ' (' → logprob: -11.701955795288086
    9. '       ' → logprob: -12.951955795288086
    10. ')' → logprob: -13.451955795288086

Token 801: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03551884740591049
    2. '):' → logprob: -3.4105188846588135
    3. '           ' → logprob: -6.785518646240234
    4. '       ' → logprob: -8.410518646240234
    5. '   ' → logprob: -8.785518646240234
    6. ':
' → logprob: -9.410518646240234
    7. '+' → logprob: -9.535518646240234
    8. '               ' → logprob: -9.535518646240234
    9. ')' → logprob: -9.785518646240234
    10. ':' → logprob: -10.410518646240234

Token 802: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018468426540493965
    2. '               ' → logprob: -4.268468379974365
    3. '       ' → logprob: -6.393468379974365
    4. '   ' → logprob: -6.643468379974365
    5. ' if' → logprob: -6.893468379974365
    6. '	       ' → logprob: -9.268468856811523
    7. ' for' → logprob: -9.518468856811523
    8. 'if' → logprob: -10.268468856811523
    9. '	   ' → logprob: -10.768468856811523
    10. ',' → logprob: -10.893468856811523

Token 803: ' s' (ID: 265)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43802759051322937
    2. ' if' → logprob: -1.5630276203155518
    3. '               ' → logprob: -3.0630276203155518
    4. 'if' → logprob: -3.6880276203155518
    5. ' total' → logprob: -3.9380276203155518
    6. 'total' → logprob: -4.313027381896973
    7. ' row' → logprob: -4.438027381896973
    8. ' s' → logprob: -4.813027381896973
    9. '   ' → logprob: -5.188027381896973
    10. 'sum' → logprob: -5.313027381896973

Token 804: 'sum' (ID: 12298)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -5.228561349213123e-05
    2. '_known' → logprob: -11.250052452087402
    3. 'sum' → logprob: -12.000052452087402
    4. 'ums' → logprob: -12.125052452087402
    5. '_val' → logprob: -12.500052452087402
    6. '_um' → logprob: -12.625052452087402
    7. '_' → logprob: -12.875052452087402
    8. '_sum' → logprob: -12.875052452087402
    9. '_expected' → logprob: -13.000052452087402
    10. 'umo' → logprob: -13.000052452087402

Token 805: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47668135166168213
    2. ' =' → logprob: -0.9766813516616821
    3. '_' → logprob: -6.351681232452393
    4. '(values' → logprob: -7.601681232452393
    5. '(' → logprob: -9.10168170928955
    6. '   ' → logprob: -9.85168170928955
    7. '_=' → logprob: -9.85168170928955
    8. '_val' → logprob: -10.72668170928955
    9. ' ==' → logprob: -10.97668170928955
    10. '==' → logprob: -11.22668170928955

Token 806: ' ' (ID: 220)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.28564298152923584
    2. '0' → logprob: -1.5356429815292358
    3. ' sum' → logprob: -3.4106431007385254
    4. ' ' → logprob: -9.035642623901367
    5. '   ' → logprob: -11.535642623901367
    6. '	sum' → logprob: -13.660642623901367
    7. '(sum' → logprob: -14.160642623901367
    8. ' ' → logprob: -15.160642623901367
    9. '  ' → logprob: -15.660642623901367
    10. '=sum' → logprob: -15.910642623901367

Token 807: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4742280840873718
    2. '0' → logprob: -0.9742280840873718
    3. ' sum' → logprob: -8.849227905273438
    4. ' ' → logprob: -12.474227905273438
    5. '   ' → logprob: -12.724227905273438
    6. '(sum' → logprob: -15.724227905273438
    7. 'values' → logprob: -16.099227905273438
    8. '	sum' → logprob: -16.224227905273438
    9. 's' → logprob: -16.724227905273438
    10. '  ' → logprob: -17.349227905273438

Token 808: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.303771436214447
    2. 'for' → logprob: -1.8037714958190918
    3. ' for' → logprob: -2.428771495819092
    4. '                   ' → logprob: -5.303771495819092
    5. '           ' → logprob: -6.428771495819092
    6. '=' → logprob: -7.553771495819092
    7. '       ' → logprob: -8.178771018981934
    8. '	for' → logprob: -8.303771018981934
    9. '   ' → logprob: -8.428771018981934
    10. ',' → logprob: -8.553771018981934

Token 809: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6877449154853821
    2. ' for' → logprob: -0.9377449154853821
    3. 'for' → logprob: -2.3127448558807373
    4. '                   ' → logprob: -5.687745094299316
    5. '           ' → logprob: -6.062745094299316
    6. '	for' → logprob: -8.062745094299316
    7. '   ' → logprob: -8.312745094299316
    8. '       ' → logprob: -9.187745094299316
    9. '                ' → logprob: -9.187745094299316
    10. ' ' → logprob: -9.562745094299316

Token 810: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01004870980978012
    2. ' for' → logprob: -4.635048866271973
    3. '               ' → logprob: -8.260048866271973
    4. '	for' → logprob: -11.260048866271973
    5. '                   ' → logprob: -11.760048866271973
    6. '           ' → logprob: -12.010048866271973
    7. '   ' → logprob: -13.010048866271973
    8. 'j' → logprob: -13.135048866271973
    9. '```' → logprob: -13.635048866271973
    10. ' ' → logprob: -15.010048866271973

Token 811: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00018196819291915745
    2. ' j' → logprob: -8.625182151794434
    3. 'k' → logprob: -13.875182151794434
    4. '   ' → logprob: -14.250182151794434
    5. 'v' → logprob: -15.625182151794434
    6. '	j' → logprob: -15.750182151794434
    7. 'x' → logprob: -16.125181198120117
    8. 'val' → logprob: -16.125181198120117
    9. ' ' → logprob: -16.250181198120117
    10. '_j' → logprob: -16.500181198120117

Token 812: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020544925704598427
    2. 'in' → logprob: -3.89554500579834
    3. '0' → logprob: -14.27054500579834
    4. '[' → logprob: -14.27054500579834
    5. ' ' → logprob: -14.64554500579834
    6. '=' → logprob: -15.14554500579834
    7. ',' → logprob: -15.77054500579834
    8. 's' → logprob: -15.77054500579834
    9. ')' → logprob: -16.270544052124023
    10. '	in' → logprob: -16.270544052124023

Token 813: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002188329817727208
    2. ' range' → logprob: -6.127188205718994
    3. '(range' → logprob: -12.752188682556152
    4. 's' → logprob: -15.752188682556152
    5. '   ' → logprob: -15.752188682556152
    6. '
' → logprob: -16.877187728881836
    7. ' ' → logprob: -17.252187728881836
    8. '	range' → logprob: -17.377187728881836
    9. 'in' → logprob: -18.752187728881836
    10. '```' → logprob: -18.752187728881836

Token 814: '(s' (ID: 1858)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01397649571299553
    2. ' range' → logprob: -4.888976573944092
    3. '(s' → logprob: -5.513976573944092
    4. 's' → logprob: -6.138976573944092
    5. '(range' → logprob: -8.763976097106934
    6. '[s' → logprob: -13.263976097106934
    7. '   ' → logprob: -13.638976097106934
    8. 'in' → logprob: -14.138976097106934
    9. ' s' → logprob: -14.388976097106934
    10. '	range' → logprob: -15.138976097106934

Token 815: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4398689270019531
    2. '):' → logprob: -1.6898689270019531
    3. ' in' → logprob: -2.689868927001953
    4. ':' → logprob: -2.689868927001953
    5. ')' → logprob: -4.814868927001953
    6. '                   ' → logprob: -4.939868927001953
    7. ':
' → logprob: -5.064868927001953
    8. 'in' → logprob: -5.314868927001953
    9. '               ' → logprob: -5.439868927001953
    10. '=' → logprob: -6.564868927001953

Token 816: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006430429872125387
    2. '               ' → logprob: -5.881430625915527
    3. ' ss' → logprob: -6.631430625915527
    4. ' s' → logprob: -6.756430625915527
    5. 'ss' → logprob: -8.006430625915527
    6. '           ' → logprob: -8.256430625915527
    7. '(ss' → logprob: -9.381430625915527
    8. ' if' → logprob: -9.506430625915527
    9. ' values' → logprob: -9.631430625915527
    10. '                       ' → logprob: -10.131430625915527

Token 817: ' if' (ID: 538)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.022209282964468002
    2. '                   ' → logprob: -4.772209167480469
    3. 'if' (adapté à ' if') → logprob: -4.897209167480469
    4. ' ss' → logprob: -6.022209167480469
    5. ' if' → logprob: -6.647209167480469
    6. '                       ' → logprob: -7.147209167480469
    7. ' s' → logprob: -7.272209167480469
    8. '               ' → logprob: -8.147209167480469
    9. '	ss' → logprob: -9.772209167480469
    10. '   ' → logprob: -9.772209167480469

Token 818: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.005236837547272444
    2. ' values' → logprob: -5.255236625671387
    3. '	values' → logprob: -13.505236625671387
    4. '(values' → logprob: -14.130236625671387
    5. '   ' → logprob: -14.630236625671387
    6. '                   ' → logprob: -15.880236625671387
    7. '           ' → logprob: -16.630237579345703
    8. 'not' → logprob: -16.880237579345703
    9. '               ' → logprob: -17.255237579345703
    10. 'value' → logprob: -17.505237579345703

Token 819: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.4121114822482923e-06
    2. '[j' → logprob: -13.375003814697266
    3. ' [' → logprob: -14.125003814697266
    4. '                   ' → logprob: -14.875003814697266
    5. '[' → logprob: -15.625003814697266
    6. '```' → logprob: -15.750003814697266
    7. '   ' → logprob: -16.375003814697266
    8. '               ' → logprob: -16.375003814697266
    9. '][' → logprob: -16.750003814697266
    10. '           ' → logprob: -17.750003814697266

Token 820: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.15008248388767242
    2. '][' → logprob: -2.400082588195801
    3. '[i' → logprob: -3.025082588195801
    4. '[' → logprob: -9.7750825881958
    5. '```' → logprob: -11.2750825881958
    6. '   ' → logprob: -13.2750825881958
    7. ']' → logprob: -13.4000825881958
    8. ')[' → logprob: -13.4000825881958
    9. '[js' → logprob: -13.5250825881958
    10. '           ' → logprob: -13.5250825881958

Token 821: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0007236333331093192
    2. '[j' → logprob: -7.250723838806152
    3. ' j' → logprob: -11.625723838806152
    4. 'None' → logprob: -13.125723838806152
    5. '	j' → logprob: -14.125723838806152
    6. '```' → logprob: -14.500723838806152
    7. '][' → logprob: -14.750723838806152
    8. '   ' → logprob: -15.250723838806152
    9. ']' → logprob: -15.500723838806152
    10. '
' → logprob: -15.875723838806152

Token 822: ']' (ID: 60)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.03615545481443405
    2. 'is' → logprob: -3.4111554622650146
    3. ']' → logprob: -6.0361552238464355
    4. ')' → logprob: -9.536155700683594
    5. 'None' → logprob: -10.661155700683594
    6. ' None' → logprob: -12.786155700683594
    7. ' ' → logprob: -12.911155700683594
    8. ' ]' → logprob: -12.911155700683594
    9. '==' → logprob: -13.411155700683594
    10. 's' → logprob: -13.411155700683594

Token 823: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07891634106636047
    2. 'is' → logprob: -2.578916311264038
    3. '==' → logprob: -11.203916549682617
    4. '	is' → logprob: -11.828916549682617
    5. ' ' → logprob: -12.953916549682617
    6. 'in' → logprob: -14.203916549682617
    7. '   ' → logprob: -14.703916549682617
    8. '<' → logprob: -14.703916549682617
    9. ' ==' → logprob: -14.828916549682617
    10. '>' → logprob: -14.953916549682617

Token 824: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0012236819602549076
    2. ' None' → logprob: -6.751223564147949
    3. 'not' → logprob: -9.87622356414795
    4. ' not' → logprob: -13.25122356414795
    5. '   ' → logprob: -15.50122356414795
    6. '(None' → logprob: -17.376224517822266
    7. 'Not' → logprob: -17.501224517822266
    8. '0' → logprob: -17.876224517822266
    9. 'none' → logprob: -18.126224517822266
    10. ' ' → logprob: -18.376224517822266

Token 825: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6279494166374207
    2. ':
' → logprob: -1.0029494762420654
    3. '                       ' → logprob: -2.3779494762420654
    4. '                   ' → logprob: -5.877949237823486
    5. ' or' → logprob: -6.627949237823486
    6. '                           ' → logprob: -7.377949237823486
    7. '                               ' → logprob: -8.127949714660645
    8. '==' → logprob: -8.377949714660645
    9. '               ' → logprob: -8.502949714660645
    10. ',' → logprob: -8.752949714660645

Token 826: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.014194532297551632
    2. '                   ' → logprob: -5.139194488525391
    3. ':' → logprob: -5.639194488525391
    4. ':
' → logprob: -6.764194488525391
    5. '                           ' → logprob: -7.014194488525391
    6. '+' → logprob: -7.639194488525391
    7. '               ' → logprob: -7.639194488525391
    8. '       ' → logprob: -8.38919448852539
    9. '                        ' → logprob: -8.51419448852539
    10. '           ' → logprob: -8.76419448852539

Token 827: ' no' (ID: 860)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.11378218233585358
    2. ' continue' → logprob: -2.7387821674346924
    3. 'break' → logprob: -3.9887821674346924
    4. 'continue' → logprob: -5.1137824058532715
    5. ' ss' → logprob: -5.2387824058532715
    6. ' return' → logprob: -5.9887824058532715
    7. '                   ' → logprob: -5.9887824058532715
    8. ' s' → logprob: -6.2387824058532715
    9. ' pass' → logprob: -6.3637824058532715
    10. 'ss' → logprob: -6.9887824058532715

Token 828: '_solution' (ID: 127649)
  Prédit: '_solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_solution' → logprob: -0.018081575632095337
    2. 'Solution' → logprob: -5.6430816650390625
    3. ' _' → logprob: -5.7680816650390625
    4. '_' → logprob: -6.1430816650390625
    5. '                   ' → logprob: -6.2680816650390625
    6. '_sum' → logprob: -6.5180816650390625
    7. '                       ' → logprob: -6.6430816650390625
    8. ' ' → logprob: -7.3930816650390625
    9. '   ' → logprob: -7.3930816650390625
    10. '               ' → logprob: -7.5180816650390625

Token 829: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3874358534812927
    2. '=' → logprob: -1.1374359130859375
    3. '=True' → logprob: -7.5124359130859375
    4. '                   ' → logprob: -12.012435913085938
    5. '=False' → logprob: -12.637435913085938
    6. '               ' → logprob: -13.262435913085938
    7. '           ' → logprob: -13.262435913085938
    8. '                       ' → logprob: -13.512435913085938
    9. '                           ' → logprob: -13.762435913085938
    10. '   ' → logprob: -13.887435913085938

Token 830: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.02975083328783512
    2. ' True' → logprob: -3.5297508239746094
    3. '=True' → logprob: -14.77975082397461
    4. '(True' → logprob: -17.40475082397461
    5. 'False' → logprob: -17.40475082397461
    6. '1' → logprob: -17.65475082397461
    7. '   ' → logprob: -18.90475082397461
    8. ' ' → logprob: -21.02975082397461
    9. '    ' → logprob: -21.52975082397461
    10. '.True' → logprob: -21.65475082397461

Token 831: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.16271167993545532
    2. '                           ' → logprob: -1.9127116203308105
    3. '                   ' → logprob: -6.4127116203308105
    4. '                               ' → logprob: -7.7877116203308105
    5. '                        ' → logprob: -9.162712097167969
    6. '                        
' → logprob: -9.287712097167969
    7. '                            ' → logprob: -10.037712097167969
    8. '               ' → logprob: -10.162712097167969
    9. '           ' → logprob: -10.537712097167969
    10. '                            
' → logprob: -10.912712097167969

Token 832: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4011799991130829
    2. '                           ' → logprob: -1.1511800289154053
    3. '                               ' → logprob: -4.401179790496826
    4. '                        
' → logprob: -7.526179790496826
    5. '                        ' → logprob: -7.901179790496826
    6. '                   ' → logprob: -8.026180267333984
    7. '                            ' → logprob: -8.526180267333984
    8. '                            
' → logprob: -8.901180267333984
    9. '           ' → logprob: -9.901180267333984
    10. '
' → logprob: -9.901180267333984

Token 833: ' break' (ID: 2338)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.08065254986286163
    2. '                           ' → logprob: -3.5806524753570557
    3. ' break' → logprob: -4.080652713775635
    4. 'break' (adapté à ' break') → logprob: -4.080652713775635
    5. '                               ' → logprob: -5.455652713775635
    6. '	break' → logprob: -5.455652713775635
    7. '                   ' → logprob: -5.830652713775635
    8. '                        ' → logprob: -7.205652713775635
    9. '               ' → logprob: -7.330652713775635
    10. ' ' → logprob: -7.705652713775635

Token 834: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2545028030872345
    2. '               ' → logprob: -2.004502773284912
    3. '
' → logprob: -3.879502773284912
    4. ' 
' → logprob: -4.004502773284912
    5. 'else' → logprob: -4.754502773284912
    6. '                    
' → logprob: -4.879502773284912
    7. '           ' → logprob: -5.254502773284912
    8. '    
' → logprob: -5.504502773284912
    9. ' else' → logprob: -5.629502773284912
    10. '                        
' → logprob: -5.754502773284912

Token 835: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5951642990112305
    2. '               ' → logprob: -0.8451642990112305
    3. '           ' → logprob: -5.0951642990112305
    4. ' 
' → logprob: -6.2201642990112305
    5. '                ' → logprob: -6.3451642990112305
    6. '                       ' → logprob: -6.9701642990112305
    7. ' else' → logprob: -6.9701642990112305
    8. '                    
' → logprob: -6.9701642990112305
    9. '
' → logprob: -7.0951642990112305
    10. 'else' → logprob: -7.3451642990112305

Token 836: ' s' (ID: 265)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.159916952252388
    2. 'ss' → logprob: -2.659916877746582
    3. 'else' → logprob: -3.659916877746582
    4. '               ' → logprob: -4.159916877746582
    5. '   ' → logprob: -4.284916877746582
    6. ' ss' → logprob: -5.159916877746582
    7. '
' → logprob: -5.784916877746582
    8. '       ' → logprob: -6.034916877746582
    9. '           ' → logprob: -6.034916877746582
    10. '	ss' → logprob: -6.534916877746582

Token 837: 'sum' (ID: 12298)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018372463062405586
    2. 'sum' → logprob: -4.518372535705566
    3. 'um' → logprob: -5.643372535705566
    4. ' +=' → logprob: -5.893372535705566
    5. 's' → logprob: -8.018372535705566
    6. '=' → logprob: -8.268372535705566
    7. '+' → logprob: -8.268372535705566
    8. 'u' → logprob: -9.643372535705566
    9. 'if' → logprob: -10.768372535705566
    10. '+=(' → logprob: -11.518372535705566

Token 838: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4742510914802551
    2. ' +=' → logprob: -0.9742510914802551
    3. '+' → logprob: -9.099250793457031
    4. '=' → logprob: -10.474250793457031
    5. '   ' → logprob: -11.474250793457031
    6. ']+=' → logprob: -12.099250793457031
    7. '```' → logprob: -12.224250793457031
    8. '+=(' → logprob: -13.224250793457031
    9. ' ' → logprob: -13.474250793457031
    10. ' +' → logprob: -13.474250793457031

Token 839: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.00020354038861114532
    2. ' values' → logprob: -8.500203132629395
    3. '(values' → logprob: -17.50020408630371
    4. '	values' → logprob: -18.62520408630371
    5. 'value' → logprob: -19.62520408630371
    6. '.values' → logprob: -20.87520408630371
    7. 'int' → logprob: -22.50020408630371
    8. '   ' → logprob: -22.75020408630371
    9. '           ' → logprob: -23.37520408630371
    10. 'VALUES' → logprob: -23.50020408630371

Token 840: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. ' [' → logprob: -14.375000953674316
    3. '[' → logprob: -14.500000953674316
    4. '   ' → logprob: -16.125001907348633
    5. 'i' → logprob: -16.750001907348633
    6. '```' → logprob: -16.750001907348633
    7. ' ' → logprob: -17.500001907348633
    8. '[
' → logprob: -18.250001907348633
    9. '[j' → logprob: -18.500001907348633
    10. '\[' → logprob: -19.000001907348633

Token 841: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.25233280658721924
    2. '][' → logprob: -1.5023328065872192
    3. '[j' → logprob: -8.37733268737793
    4. '[' → logprob: -9.12733268737793
    5. ']' → logprob: -11.00233268737793
    6. '                   ' → logprob: -11.62733268737793
    7. '```' → logprob: -11.75233268737793
    8. '[][' → logprob: -12.00233268737793
    9. '}[' → logprob: -12.62733268737793
    10. ' ][' → logprob: -12.62733268737793

Token 842: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.833878508885391e-05
    2. '[j' → logprob: -10.250038146972656
    3. ' j' → logprob: -12.875038146972656
    4. '	j' → logprob: -15.875038146972656
    5. '   ' → logprob: -16.625038146972656
    6. '```' → logprob: -17.125038146972656
    7. 'i' → logprob: -17.375038146972656
    8. 's' → logprob: -17.500038146972656
    9. '][' → logprob: -17.875038146972656
    10. '_j' → logprob: -18.250038146972656

Token 843: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05985242873430252
    2. '+' → logprob: -3.934852361679077
    3. '           ' → logprob: -4.184852600097656
    4. ')' → logprob: -4.434852600097656
    5. '                   ' → logprob: -5.684852600097656
    6. '
' → logprob: -6.809852600097656
    7. '<|end|>' → logprob: -6.809852600097656
    8. '                ' → logprob: -6.934852600097656
    9. '+
' → logprob: -7.684852600097656
    10. ']' → logprob: -7.934852600097656

Token 844: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17176134884357452
    2. '
' → logprob: -2.5467612743377686
    3. '<|end|>' → logprob: -3.4217612743377686
    4. '           ' → logprob: -3.7967612743377686
    5. '                   ' → logprob: -4.171761512756348
    6. '       ' → logprob: -6.421761512756348
    7. ' if' → logprob: -6.546761512756348
    8. '   ' → logprob: -7.421761512756348
    9. '                ' → logprob: -7.671761512756348
    10. ' ' → logprob: -8.171761512756348

Token 845: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3360981345176697
    2. 'if' (adapté à ' if') → logprob: -1.8360981941223145
    3. '               ' → logprob: -2.4610981941223145
    4. ' if' → logprob: -3.2110981941223145
    5. '       ' → logprob: -8.711097717285156
    6. '   ' → logprob: -9.961097717285156
    7. 'else' → logprob: -10.086097717285156
    8. ' ' → logprob: -10.461097717285156
    9. '```' → logprob: -10.586097717285156
    10. '                   ' → logprob: -11.461097717285156

Token 846: ' no' (ID: 860)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.11346647888422012
    2. 'ss' → logprob: -2.238466501235962
    3. 's' → logprob: -7.488466262817383
    4. '(ss' → logprob: -10.738466262817383
    5. 'sss' → logprob: -11.488466262817383
    6. 'ssp' → logprob: -11.738466262817383
    7. 'no' → logprob: -11.988466262817383
    8. ' no' → logprob: -12.613466262817383
    9. 'ssss' → logprob: -12.988466262817383
    10. ' ss' → logprob: -12.988466262817383

Token 847: '_solution' (ID: 127649)
  Prédit: '_solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_solution' → logprob: -0.06049210950732231
    2. 'ss' → logprob: -3.9354920387268066
    3. 'sum' → logprob: -4.060492038726807
    4. 'solution' → logprob: -4.185492038726807
    5. 'no' → logprob: -5.810492038726807
    6. 'Solution' → logprob: -6.185492038726807
    7. 'olution' → logprob: -7.060492038726807
    8. 'break' → logprob: -8.685492515563965
    9. ' no' → logprob: -9.185492515563965
    10. 'not' → logprob: -9.310492515563965

Token 848: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4981209635734558
    2. '                   ' → logprob: -1.7481210231781006
    3. ':
' → logprob: -2.2481210231781006
    4. '               ' → logprob: -2.9981210231781006
    5. '                       ' → logprob: -3.6231210231781006
    6. '=' → logprob: -4.2481207847595215
    7. ' =' → logprob: -4.9981207847595215
    8. ' or' → logprob: -5.4981207847595215
    9. '           ' → logprob: -5.4981207847595215
    10. '=True' → logprob: -5.8731207847595215

Token 849: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004443885758519173
    2. '               ' → logprob: -5.879444122314453
    3. '                       ' → logprob: -6.629444122314453
    4. '           ' → logprob: -8.629444122314453
    5. ':
' → logprob: -10.254444122314453
    6. ':' → logprob: -11.004444122314453
    7. '                           ' → logprob: -11.254444122314453
    8. '                  ' → logprob: -11.504444122314453
    9. '		           ' → logprob: -11.629444122314453
    10. '=' → logprob: -12.129444122314453

Token 850: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07698177546262741
    2. '                       ' → logprob: -2.951981782913208
    3. '               ' → logprob: -4.451981544494629
    4. 'break' (adapté à ' break') → logprob: -5.576981544494629
    5. ' break' → logprob: -5.576981544494629
    6. '       ' → logprob: -6.701981544494629
    7. '           ' → logprob: -7.201981544494629
    8. '   ' → logprob: -8.201981544494629
    9. '	break' → logprob: -8.576981544494629
    10. '                           ' → logprob: -10.201981544494629

Token 851: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03854802995920181
    2. '           ' → logprob: -3.288547992706299
    3. '       ' → logprob: -8.413548469543457
    4. 'if' → logprob: -9.413548469543457
    5. ' if' → logprob: -9.413548469543457
    6. ',' → logprob: -10.413548469543457
    7. '
' → logprob: -10.788548469543457
    8. '                   ' → logprob: -11.538548469543457
    9. 'else' → logprob: -11.788548469543457
    10. '   ' → logprob: -11.788548469543457

Token 852: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.35358327627182007
    2. '           ' → logprob: -1.2285833358764648
    3. '
' → logprob: -5.603583335876465
    4. '       ' → logprob: -7.353583335876465
    5. '```' → logprob: -7.978583335876465
    6. ' if' → logprob: -9.603583335876465
    7. '   ' → logprob: -10.103583335876465
    8. '​' → logprob: -10.228583335876465
    9. '                   ' → logprob: -10.228583335876465
    10. '    
' → logprob: -10.353583335876465

Token 853: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.007914528250694275
    2. '               ' → logprob: -5.7579145431518555
    3. '           ' → logprob: -5.8829145431518555
    4. ' if' → logprob: -6.2579145431518555
    5. '       ' → logprob: -12.132914543151855
    6. 'elif' → logprob: -12.132914543151855
    7. '```' → logprob: -12.257914543151855
    8. '   ' → logprob: -12.882914543151855
    9. 'else' → logprob: -13.382914543151855
    10. ' ' → logprob: -13.757914543151855

Token 854: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.055133890360593796
    2. 'ss' → logprob: -2.930133819580078
    3. 's' → logprob: -8.805133819580078
    4. 'abs' → logprob: -10.305133819580078
    5. '(ss' → logprob: -10.680133819580078
    6. '   ' → logprob: -11.555133819580078
    7. 'ssp' → logprob: -12.305133819580078
    8. '(' → logprob: -12.430133819580078
    9. 'sss' → logprob: -12.555133819580078
    10. 'SS' → logprob: -12.930133819580078

Token 855: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0006442877347581089
    2. 'um' → logprob: -7.375644207000732
    3. 'ss' → logprob: -11.37564468383789
    4. 'sm' → logprob: -13.37564468383789
    5. 'sys' → logprob: -14.00064468383789
    6. '[' → logprob: -14.12564468383789
    7. 'ums' → logprob: -14.50064468383789
    8. '(sum' → logprob: -14.50064468383789
    9. 's' → logprob: -14.75064468383789
    10. 'umsum' → logprob: -15.00064468383789

Token 856: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.3884027600288391
    2. '!=' → logprob: -1.1384027004241943
    3. '>' → logprob: -6.763402938842773
    4. ' >' → logprob: -8.013402938842773
    5. '<' → logprob: -10.638402938842773
    6. ' <' → logprob: -12.513402938842773
    7. '<>' → logprob: -12.763402938842773
    8. ' not' → logprob: -12.888402938842773
    9. '()!=' → logprob: -13.263402938842773
    10. ')!=' → logprob: -13.263402938842773

Token 857: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0031802060548216105
    2. ' data' → logprob: -5.753180027008057
    3. '           ' → logprob: -13.753180503845215
    4. '   ' → logprob: -14.253180503845215
    5. '               ' → logprob: -15.003180503845215
    6. 'int' → logprob: -15.003180503845215
    7. '                   ' → logprob: -16.1281795501709
    8. '       ' → logprob: -17.0031795501709
    9. '	data' → logprob: -17.5031795501709
    10. 'values' → logprob: -18.1281795501709

Token 858: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. '   ' → logprob: -13.750001907348633
    3. '```' → logprob: -14.625001907348633
    4. ' [' → logprob: -15.500001907348633
    5. '[' → logprob: -16.250001907348633
    6. 'i' → logprob: -16.500001907348633
    7. '           ' → logprob: -16.500001907348633
    8. '][' → logprob: -16.875001907348633
    9. '       ' → logprob: -16.875001907348633
    10. '[
' → logprob: -17.500001907348633

Token 859: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1452099084854126
    2. '[i' → logprob: -2.020209789276123
    3. '[s' → logprob: -6.395209789276123
    4. '[' → logprob: -8.020210266113281
    5. '   ' → logprob: -8.770210266113281
    6. ' ][' → logprob: -8.895210266113281
    7. '[j' → logprob: -10.145210266113281
    8. ' [' → logprob: -10.645210266113281
    9. '```' → logprob: -10.895210266113281
    10. '       ' → logprob: -11.020210266113281

Token 860: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3425219549390022e-05
    2. '-s' → logprob: -11.75001335144043
    3. ' s' → logprob: -12.75001335144043
    4. '-' → logprob: -13.50001335144043
    5. '   ' → logprob: -14.37501335144043
    6. ' -' → logprob: -16.25001335144043
    7. ' ' → logprob: -16.62501335144043
    8. ''s' → logprob: -16.62501335144043
    9. '	s' → logprob: -17.00001335144043
    10. '`s' → logprob: -17.00001335144043

Token 861: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.08311720937490463
    2. ']:
' → logprob: -2.5831172466278076
    3. ']' → logprob: -5.5831170082092285
    4. ']:
' → logprob: -8.958117485046387
    5. ':' → logprob: -9.083117485046387
    6. '               ' → logprob: -10.208117485046387
    7. '                   ' → logprob: -10.333117485046387
    8. '           ' → logprob: -10.708117485046387
    9. ' ]' → logprob: -10.708117485046387
    10. '):' → logprob: -10.958117485046387

Token 862: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00514386547729373
    2. '                       ' → logprob: -5.505143642425537
    3. '               ' → logprob: -7.755143642425537
    4. ':
' → logprob: -7.755143642425537
    5. '           ' → logprob: -9.130144119262695
    6. ':' → logprob: -10.755144119262695
    7. ' and' → logprob: -11.130144119262695
    8. '                    
' → logprob: -11.880144119262695
    9. '```' → logprob: -12.130144119262695
    10. '                           ' → logprob: -12.255144119262695

Token 863: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' (adapté à ' no') → logprob: -0.2030000388622284
    2. ' no' → logprob: -1.7030000686645508
    3. '                   ' → logprob: -6.703000068664551
    4. '               ' → logprob: -8.70300006866455
    5. '   ' → logprob: -9.82800006866455
    6. '           ' → logprob: -9.82800006866455
    7. '                       ' → logprob: -10.32800006866455
    8. 'break' → logprob: -10.45300006866455
    9. '
' → logprob: -11.82800006866455
    10. '	no' → logprob: -11.82800006866455

Token 864: '_solution' (ID: 127649)
  Prédit: '_solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_solution' → logprob: -0.02378145419061184
    2. ' =' → logprob: -4.8987812995910645
    3. 'Solution' → logprob: -5.0237812995910645
    4. ' no' → logprob: -6.2737812995910645
    5. '_space' → logprob: -6.3987812995910645
    6. '_' → logprob: -6.8987812995910645
    7. '=' → logprob: -7.1487812995910645
    8. ' return' → logprob: -7.2737812995910645
    9. ' _' → logprob: -7.5237812995910645
    10. ' solution' → logprob: -8.273781776428223

Token 865: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31329575181007385
    2. '=' → logprob: -1.3132957220077515
    3. '=True' → logprob: -10.313295364379883
    4. ' ' → logprob: -15.188295364379883
    5. ' |=' → logprob: -15.438295364379883
    6. '=False' → logprob: -15.688295364379883
    7. ' ' → logprob: -16.188295364379883
    8. '                   ' → logprob: -17.188295364379883
    9. ' =
' → logprob: -17.188295364379883
    10. '                ' → logprob: -17.563295364379883

Token 866: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.47407716512680054
    2. 'True' → logprob: -0.9740771651268005
    3. '=True' → logprob: -16.974077224731445
    4. ' ' → logprob: -17.349077224731445
    5. '(True' → logprob: -17.349077224731445
    6. ' not' → logprob: -18.349077224731445
    7. ' ' → logprob: -18.724077224731445
    8. 'False' → logprob: -19.974077224731445
    9. ' Tru' → logprob: -20.349077224731445
    10. 'not' → logprob: -20.474077224731445

Token 867: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000422570708906278
    2. '                       ' → logprob: -7.875422477722168
    3. '               ' → logprob: -10.875422477722168
    4. '           ' → logprob: -11.375422477722168
    5. '                    ' → logprob: -12.625422477722168
    6. '       ' → logprob: -13.250422477722168
    7. '				' → logprob: -13.375422477722168
    8. '                  ' → logprob: -13.375422477722168
    9. '<|end|>' → logprob: -13.750422477722168
    10. '   ' → logprob: -14.500422477722168

Token 868: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00013202552509028465
    2. '                       ' → logprob: -9.875131607055664
    3. '               ' → logprob: -10.250131607055664
    4. '           ' → logprob: -10.375131607055664
    5. '       ' → logprob: -12.500131607055664
    6. '                    ' → logprob: -12.750131607055664
    7. '                  ' → logprob: -13.125131607055664
    8. '                    
' → logprob: -13.500131607055664
    9. '		           ' → logprob: -14.625131607055664
    10. '   ' → logprob: -14.750131607055664

Token 869: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06529271602630615
    2. '                       ' → logprob: -2.8152928352355957
    3. 'break' (adapté à ' break') → logprob: -6.440292835235596
    4. ' break' → logprob: -7.565292835235596
    5. '               ' → logprob: -8.065292358398438
    6. '           ' → logprob: -8.565292358398438
    7. '                     ' → logprob: -9.190292358398438
    8. '
' → logprob: -9.565292358398438
    9. '                    
' → logprob: -9.940292358398438
    10. '				' → logprob: -9.940292358398438

Token 870: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.524681031703949
    2. '       ' → logprob: -0.899681031703949
    3. '               ' → logprob: -6.899681091308594
    4. '
' → logprob: -8.149681091308594
    5. 'if' → logprob: -8.899681091308594
    6. '                   ' → logprob: -10.274681091308594
    7. '   ' → logprob: -10.399681091308594
    8. '        ' → logprob: -11.649681091308594
    9. '+' → logprob: -11.774681091308594
    10. '```' → logprob: -12.149681091308594

Token 871: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32134443521499634
    2. '       ' → logprob: -1.3213443756103516
    3. '               ' → logprob: -4.946344375610352
    4. '
' → logprob: -7.946344375610352
    5. '   ' → logprob: -8.571344375610352
    6. 'if' → logprob: -8.696344375610352
    7. '                   ' → logprob: -9.446344375610352
    8. ' if' → logprob: -9.946344375610352
    9. '		' → logprob: -10.196344375610352
    10. '	' → logprob: -11.321344375610352

Token 872: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04020994156599045
    2. '           ' → logprob: -3.290210008621216
    3. 'if' → logprob: -6.165209770202637
    4. '   ' → logprob: -10.040209770202637
    5. ' if' → logprob: -11.165209770202637
    6. '               ' → logprob: -12.415209770202637
    7. '
' → logprob: -14.665209770202637
    8. '+' → logprob: -14.915209770202637
    9. '```' → logprob: -14.915209770202637
    10. '         ' → logprob: -15.040209770202637

Token 873: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00287049263715744
    2. '           ' → logprob: -6.502870559692383
    3. '       ' → logprob: -6.627870559692383
    4. ' if' → logprob: -10.627870559692383
    5. '   ' → logprob: -11.377870559692383
    6. '#' → logprob: -11.877870559692383
    7. 'If' → logprob: -14.377870559692383
    8. 'for' → logprob: -15.127870559692383
    9. '
' → logprob: -15.127870559692383
    10. '               ' → logprob: -15.377870559692383

Token 874: ' columns' (ID: 15697)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.26759520173072815
    2. 'not' → logprob: -1.6425951719284058
    3. 'if' → logprob: -3.8925952911376953
    4. ' columns' → logprob: -4.642595291137695
    5. ' if' → logprob: -5.392595291137695
    6. 'columns' → logprob: -6.017595291137695
    7. ' no' → logprob: -6.392595291137695
    8. '       ' → logprob: -7.392595291137695
    9. 'no' → logprob: -7.517595291137695
    10. '   ' → logprob: -7.517595291137695

Token 875: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05996054783463478
    2. '       ' → logprob: -2.9349606037139893
    3. ' if' → logprob: -6.30996036529541
    4. ' for' → logprob: -6.43496036529541
    5. '
' → logprob: -7.30996036529541
    6. '```' → logprob: -8.18496036529541
    7. '               ' → logprob: -8.43496036529541
    8. '   ' → logprob: -9.18496036529541
    9. 'for' → logprob: -9.30996036529541
    10. '<|end|>' → logprob: -9.55996036529541

Token 876: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14366421103477478
    2. '       ' → logprob: -2.0186641216278076
    3. ' for' → logprob: -7.643664360046387
    4. 'for' → logprob: -8.143664360046387
    5. '		' → logprob: -10.143664360046387
    6. ' if' → logprob: -10.143664360046387
    7. '               ' → logprob: -10.393664360046387
    8. '	       ' → logprob: -10.393664360046387
    9. 'if' → logprob: -10.643664360046387
    10. '   ' → logprob: -10.893664360046387

Token 877: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.2980331182479858
    2. ' for' → logprob: -1.6730331182479858
    3. '           ' → logprob: -1.7980331182479858
    4. 'if' (adapté à ' if') → logprob: -1.7980331182479858
    5. 'for' → logprob: -1.7980331182479858
    6. '       ' → logprob: -3.1730332374572754
    7. '   ' → logprob: -7.798033237457275
    8. '               ' → logprob: -10.548032760620117
    9. ' ' → logprob: -11.798032760620117
    10. '		' → logprob: -11.923032760620117

Token 878: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.31328463554382324
    2. 'not' → logprob: -1.3132846355438232
    3. '   ' → logprob: -10.938284873962402
    4. ' no' → logprob: -12.813284873962402
    5. ' ' → logprob: -14.188284873962402
    6. '(not' → logprob: -14.313284873962402
    7. '    ' → logprob: -14.813284873962402
    8. 'no' → logprob: -15.063284873962402
    9. '	not' → logprob: -15.563284873962402
    10. ' ' → logprob: -16.063283920288086

Token 879: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.061969365924596786
    2. ' no' → logprob: -2.81196928024292
    3. '	no' → logprob: -13.936969757080078
    4. '   ' → logprob: -14.686969757080078
    5. ' ' → logprob: -15.186969757080078
    6. '(no' → logprob: -16.561969757080078
    7. ' ' → logprob: -18.436969757080078
    8. 'not' → logprob: -18.436969757080078
    9. '  ' → logprob: -18.561969757080078
    10. 'n' → logprob: -19.436969757080078

Token 880: '_solution' (ID: 127649)
  Prédit: '_solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_solution' → logprob: -0.006556213367730379
    2. 'solution' → logprob: -5.506556034088135
    3. 'no' → logprob: -6.006556034088135
    4. 'Solution' → logprob: -12.131556510925293
    5. '(no' → logprob: -13.131556510925293
    6. '_no' → logprob: -13.506556510925293
    7. ' no' → logprob: -13.631556510925293
    8. ' solution' → logprob: -14.631556510925293
    9. 'olution' → logprob: -14.881556510925293
    10. 'sol' → logprob: -15.631556510925293

Token 881: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16462722420692444
    2. ':' → logprob: -1.914627194404602
    3. '           ' → logprob: -5.5396270751953125
    4. '               ' → logprob: -8.039627075195312
    5. '       ' → logprob: -9.164627075195312
    6. ':

' → logprob: -11.789627075195312
    7. '   ' → logprob: -11.789627075195312
    8. ' and' → logprob: -12.164627075195312
    9. '):
' → logprob: -12.289627075195312
    10. ',' → logprob: -12.789627075195312

Token 882: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49179065227508545
    2. '               ' → logprob: -1.1167906522750854
    3. '       ' → logprob: -2.866790771484375
    4. '	       ' → logprob: -6.616790771484375
    5. ' for' → logprob: -6.741790771484375
    6. '   ' → logprob: -7.491790771484375
    7. '<|end|>' → logprob: -7.616790771484375
    8. '	           ' → logprob: -8.866790771484375
    9. ':' → logprob: -9.116790771484375
    10. '```' → logprob: -9.491790771484375

Token 883: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3692687153816223
    2. 'for' (adapté à ' for') → logprob: -1.4942686557769775
    3. '               ' → logprob: -3.4942686557769775
    4. '           ' → logprob: -3.6192686557769775
    5. '   ' → logprob: -3.6192686557769775
    6. '       ' → logprob: -8.744268417358398
    7. ' ' → logprob: -8.869268417358398
    8. '                   ' → logprob: -10.369268417358398
    9. '	for' → logprob: -10.619268417358398
    10. ' ' → logprob: -12.494268417358398

Token 884: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006848457269370556
    2. ' j' → logprob: -5.006848335266113
    3. 'i' → logprob: -9.256848335266113
    4. '   ' → logprob: -10.256848335266113
    5. ' i' → logprob: -13.506848335266113
    6. '	j' → logprob: -14.756848335266113
    7. '       ' → logprob: -15.381848335266113
    8. '    ' → logprob: -15.631848335266113
    9. ' ' → logprob: -16.25684928894043
    10. '           ' → logprob: -16.38184928894043

Token 885: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023248042911291122
    2. 'in' → logprob: -3.7732479572296143
    3. '   ' → logprob: -14.273247718811035
    4. '(' → logprob: -14.773247718811035
    5. ' ' → logprob: -14.898247718811035
    6. '	in' → logprob: -15.398247718811035
    7. ' (' → logprob: -15.648247718811035
    8. '                   ' → logprob: -15.773247718811035
    9. '               ' → logprob: -16.27324867248535
    10. '[' → logprob: -16.52324867248535

Token 886: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008615635335445404
    2. ' range' → logprob: -4.758615493774414
    3. '   ' → logprob: -14.633615493774414
    4. ' ' → logprob: -15.633615493774414
    5. 'in' → logprob: -15.758615493774414
    6. '(range' → logprob: -15.883615493774414
    7. '    ' → logprob: -17.258615493774414
    8. ' in' → logprob: -17.508615493774414
    9. '  ' → logprob: -17.883615493774414
    10. '0' → logprob: -18.383615493774414

Token 887: '(s' (ID: 1858)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.010325181297957897
    2. '(s' → logprob: -5.260324954986572
    3. ' range' → logprob: -5.760324954986572
    4. '(range' → logprob: -6.260324954986572
    5. '(' → logprob: -11.76032543182373
    6. 's' → logprob: -12.01032543182373
    7. '   ' → logprob: -13.51032543182373
    8. 'in' → logprob: -13.88532543182373
    9. ' in' → logprob: -14.26032543182373
    10. '(p' → logprob: -14.51032543182373

Token 888: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5113154053688049
    2. '                   ' → logprob: -1.6363153457641602
    3. '               ' → logprob: -2.01131534576416
    4. '):' → logprob: -3.63631534576416
    5. ':
' → logprob: -4.13631534576416
    6. '           ' → logprob: -4.26131534576416
    7. '   ' → logprob: -5.76131534576416
    8. ':' → logprob: -5.76131534576416
    9. ' in' → logprob: -6.26131534576416
    10. ')' → logprob: -6.63631534576416

Token 889: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.15368914604187012
    2. '               ' → logprob: -2.27868914604187
    3. '   ' → logprob: -3.52868914604187
    4. '           ' → logprob: -4.903689384460449
    5. '       ' → logprob: -6.903689384460449
    6. ' for' → logprob: -7.528689384460449
    7. '```' → logprob: -7.653689384460449
    8. ' if' → logprob: -7.778689384460449
    9. '[' → logprob: -9.15368938446045
    10. '                       ' → logprob: -9.65368938446045

Token 890: ' s' (ID: 265)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.35786086320877075
    2. ' s' → logprob: -1.232860803604126
    3. ' c' → logprob: -5.107861042022705
    4. '   ' → logprob: -6.982861042022705
    5. 's' (adapté à ' s') → logprob: -7.357861042022705
    6. '                   ' → logprob: -7.607861042022705
    7. 'c' → logprob: -8.482860565185547
    8. ' col' → logprob: -8.607860565185547
    9. 'cs' → logprob: -8.857860565185547
    10. '           ' → logprob: -9.107860565185547

Token 891: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.38700783252716064
    2. 'um' → logprob: -1.1370078325271606
    3. '_sum' → logprob: -10.012007713317871
    4. 's' → logprob: -10.512007713317871
    5. '=' → logprob: -10.887007713317871
    6. 'ums' → logprob: -11.262007713317871
    7. 'sm' → logprob: -11.762007713317871
    8. 'total' → logprob: -12.012007713317871
    9. '=sum' → logprob: -12.262007713317871
    10. 'umsum' → logprob: -13.012007713317871

Token 892: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25195780396461487
    2. ' =' → logprob: -1.5019577741622925
    3. '+=' → logprob: -11.126957893371582
    4. ' +=' → logprob: -11.251957893371582
    5. '==' → logprob: -15.501957893371582
    6. ' ==' → logprob: -16.001956939697266
    7. ' ' → logprob: -16.251956939697266
    8. '   ' → logprob: -16.376956939697266
    9. '.=' → logprob: -16.501956939697266
    10. ')' → logprob: -16.876956939697266

Token 893: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019316127290949225
    2. ' ' → logprob: -6.251931667327881
    3. 'sum' → logprob: -13.001931190490723
    4. ' sum' → logprob: -15.001931190490723
    5. '   ' → logprob: -15.251931190490723
    6. ' ' → logprob: -16.75193214416504
    7. '  ' → logprob: -17.62693214416504
    8. '=' → logprob: -17.62693214416504
    9. '```' → logprob: -18.75193214416504
    10. '                   ' → logprob: -18.93943214416504

Token 894: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.084206375409849e-05
    2. ' ' → logprob: -10.125041007995605
    3. 'sum' → logprob: -14.500041007995605
    4. '   ' → logprob: -15.250041007995605
    5. 'range' → logprob: -18.62504005432129
    6. '=' → logprob: -18.62504005432129
    7. ' sum' → logprob: -18.75004005432129
    8. '  ' → logprob: -18.87504005432129
    9. '           ' → logprob: -19.12504005432129
    10. 'for' → logprob: -19.25004005432129

Token 895: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08759329468011856
    2. 'for' → logprob: -2.7125933170318604
    3. ' for' → logprob: -4.087593078613281
    4. '               ' → logprob: -7.962593078613281
    5. '           ' → logprob: -8.712593078613281
    6. '                       ' → logprob: -9.837593078613281
    7. '       ' → logprob: -9.837593078613281
    8. '   ' → logprob: -10.587593078613281
    9. '		           ' → logprob: -10.712593078613281
    10. '```' → logprob: -11.212593078613281

Token 896: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.029861561954021454
    2. 'for' → logprob: -3.6548614501953125
    3. ' for' → logprob: -6.1548614501953125
    4. '               ' → logprob: -6.9048614501953125
    5. '           ' → logprob: -8.029861450195312
    6. '   ' → logprob: -10.279861450195312
    7. '       ' → logprob: -10.529861450195312
    8. '```' → logprob: -11.279861450195312
    9. '                       ' → logprob: -11.904861450195312
    10. '		           ' → logprob: -12.154861450195312

Token 897: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004228104837238789
    2. ' for' → logprob: -5.754228115081787
    3. '                   ' → logprob: -6.879228115081787
    4. '               ' → logprob: -11.129227638244629
    5. '           ' → logprob: -12.504227638244629
    6. '   ' → logprob: -14.504227638244629
    7. '       ' → logprob: -14.504227638244629
    8. '                       ' → logprob: -14.629227638244629
    9. 'i' → logprob: -14.879227638244629
    10. '	for' → logprob: -15.004227638244629

Token 898: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.7610454708337784e-05
    2. ' i' → logprob: -10.500027656555176
    3. '   ' → logprob: -19.37502670288086
    4. '```' → logprob: -20.25002670288086
    5. '_i' → logprob: -21.50002670288086
    6. '	i' → logprob: -21.62502670288086
    7. '`' → logprob: -22.37502670288086
    8. '0' → logprob: -22.50002670288086
    9. ')' → logprob: -22.62502670288086
    10. 'for' → logprob: -22.87502670288086

Token 899: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019306590547785163
    2. 'in' → logprob: -6.2519307136535645
    3. 'range' → logprob: -13.751930236816406
    4. '[' → logprob: -15.751930236816406
    5. 'n' → logprob: -15.876930236816406
    6. ' ' → logprob: -16.001930236816406
    7. '(' → logprob: -16.001930236816406
    8. '```' → logprob: -16.376930236816406
    9. ' range' → logprob: -16.751930236816406
    10. '0' → logprob: -17.126930236816406

Token 900: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020520923135336488
    2. ' range' → logprob: -8.500205039978027
    3. '(range' → logprob: -13.375205039978027
    4. 'in' → logprob: -15.875205039978027
    5. '
' → logprob: -17.875205993652344
    6. 'ran' → logprob: -19.125205993652344
    7. '   ' → logprob: -19.375205993652344
    8. ' in' → logprob: -19.875205993652344
    9. '	range' → logprob: -20.375205993652344
    10. ' ' → logprob: -20.625205993652344

Token 901: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00018077615823131055
    2. 'range' → logprob: -9.000181198120117
    3. 'p' → logprob: -10.125181198120117
    4. '(' → logprob: -11.125181198120117
    5. '0' → logprob: -13.625181198120117
    6. '(range' → logprob: -14.625181198120117
    7. ' (' → logprob: -14.750181198120117
    8. ' range' → logprob: -15.250181198120117
    9. ' p' → logprob: -17.125181198120117
    10. '
' → logprob: -17.125181198120117

Token 902: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6501325964927673
    2. '                   ' → logprob: -1.150132656097412
    3. '):' → logprob: -2.525132656097412
    4. ':' → logprob: -3.400132656097412
    5. '                       ' → logprob: -3.400132656097412
    6. ':
' → logprob: -5.150132656097412
    7. '               ' → logprob: -6.025132656097412
    8. '       ' → logprob: -6.900132656097412
    9. '```' → logprob: -7.400132656097412
    10. ' in' → logprob: -7.400132656097412

Token 903: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00445456663146615
    2. '                   ' → logprob: -6.379454612731934
    3. ':
' → logprob: -6.504454612731934
    4. ':' → logprob: -7.004454612731934
    5. ' if' → logprob: -9.379454612731934
    6. 'if' → logprob: -9.879454612731934
    7. '```' → logprob: -9.879454612731934
    8. '       ' → logprob: -10.379454612731934
    9. '               ' → logprob: -10.879454612731934
    10. '):
' → logprob: -11.379454612731934

Token 904: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.39263975620269775
    2. 'if' (adapté à ' if') → logprob: -1.8926397562026978
    3. ' if' → logprob: -2.517639636993408
    4. 'ss' → logprob: -2.892639636993408
    5. ' s' → logprob: -3.392639636993408
    6. '                   ' → logprob: -6.642639636993408
    7. 's' → logprob: -6.892639636993408
    8. ' ss' → logprob: -7.517639636993408
    9. '                           ' → logprob: -7.642639636993408
    10. '               ' → logprob: -8.892640113830566

Token 905: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.10028344392776489
    2. ' values' → logprob: -2.35028338432312
    3. '                   ' → logprob: -9.7252836227417
    4. '(values' → logprob: -11.2252836227417
    5. '	values' → logprob: -13.3502836227417
    6. '.values' → logprob: -14.6002836227417
    7. '                       ' → logprob: -14.6002836227417
    8. '               ' → logprob: -14.6002836227417
    9. '                    ' → logprob: -14.7252836227417
    10. '           ' → logprob: -16.100282669067383

Token 906: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.375000953674316
    3. '[j' → logprob: -16.375
    4. ' [' → logprob: -16.75
    5. '   ' → logprob: -17.375
    6. '```' → logprob: -17.375
    7. '           ' → logprob: -17.625
    8. '                   ' → logprob: -17.75
    9. 'i' → logprob: -18.125
    10. '               ' → logprob: -18.375

Token 907: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.09607173502445221
    2. '][' → logprob: -2.471071720123291
    3. '[j' → logprob: -4.971071720123291
    4. '[' → logprob: -9.22107219696045
    5. '```' → logprob: -10.84607219696045
    6. '                   ' → logprob: -11.72107219696045
    7. ' [' → logprob: -11.97107219696045
    8. '
' → logprob: -12.22107219696045
    9. '               ' → logprob: -12.47107219696045
    10. '   ' → logprob: -12.59607219696045

Token 908: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00044437398901209235
    2. '[j' → logprob: -7.750444412231445
    3. 'None' → logprob: -12.000444412231445
    4. ' j' → logprob: -12.250444412231445
    5. '```' → logprob: -14.500444412231445
    6. '][' → logprob: -14.750444412231445
    7. '   ' → logprob: -14.875444412231445
    8. '[' → logprob: -15.125444412231445
    9. '                       ' → logprob: -15.250444412231445
    10. '                   ' → logprob: -15.500444412231445

Token 909: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016523292288184166
    2. ' is' → logprob: -6.626652240753174
    3. 'is' → logprob: -8.251652717590332
    4. ' ]' → logprob: -9.751652717590332
    5. '[' → logprob: -12.251652717590332
    6. 'None' → logprob: -14.126652717590332
    7. ')' → logprob: -14.876652717590332
    8. '][' → logprob: -14.876652717590332
    9. ']==' → logprob: -15.251652717590332
    10. 's' → logprob: -15.751652717590332

Token 910: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.007607458624988794
    2. 'is' → logprob: -4.882607460021973
    3. 'None' → logprob: -15.132607460021973
    4. '[' → logprob: -15.382607460021973
    5. '==' → logprob: -15.507607460021973
    6. ']' → logprob: -15.632607460021973
    7. '                       ' → logprob: -16.007606506347656
    8. ' ' → logprob: -16.382606506347656
    9. ')' → logprob: -16.507606506347656
    10. ' None' → logprob: -16.757606506347656

Token 911: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0011703446507453918
    2. ' None' → logprob: -6.7511701583862305
    3. '=None' → logprob: -16.501171112060547
    4. 'not' → logprob: -17.126171112060547
    5. '   ' → logprob: -17.501171112060547
    6. '0' → logprob: -18.376171112060547
    7. 'none' → logprob: -18.376171112060547
    8. '_None' → logprob: -18.376171112060547
    9. '(None' → logprob: -18.501171112060547
    10. ' ' → logprob: -19.501171112060547

Token 912: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.16248704493045807
    2. '                       ' → logprob: -2.162487030029297
    3. ':' → logprob: -4.037487030029297
    4. ':
' → logprob: -4.162487030029297
    5. '                               ' → logprob: -7.537487030029297
    6. ' or' → logprob: -8.037487030029297
    7. '           ' → logprob: -8.537487030029297
    8. '<|end|>' → logprob: -8.537487030029297
    9. '                            ' → logprob: -9.662487030029297
    10. '```' → logprob: -9.912487030029297

Token 913: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.00046546570956707
    2. '                       ' → logprob: -8.125465393066406
    3. '                               ' → logprob: -9.250465393066406
    4. '                            ' → logprob: -10.750465393066406
    5. '           ' → logprob: -11.000465393066406
    6. '                          ' → logprob: -11.625465393066406
    7. '                   ' → logprob: -12.625465393066406
    8. '						' → logprob: -12.625465393066406
    9. '	                       ' → logprob: -12.625465393066406
    10. '<|end|>' → logprob: -12.750465393066406

Token 914: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.18572232127189636
    2. ' True' → logprob: -2.3107223510742188
    3. 'no' (adapté à ' no') → logprob: -3.3107223510742188
    4. 'True' → logprob: -3.8107223510742188
    5. '                               ' → logprob: -5.310722351074219
    6. '                           ' → logprob: -5.310722351074219
    7. '                       ' → logprob: -7.060722351074219
    8. '                                   ' → logprob: -8.435722351074219
    9. '   ' → logprob: -8.560722351074219
    10. '                   ' → logprob: -9.310722351074219

Token 915: '_solution' (ID: 127649)
  Prédit: '_solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_solution' → logprob: -4.4418171455617994e-05
    2. 'solution' → logprob: -10.125044822692871
    3. 'Solution' → logprob: -12.500044822692871
    4. '_' → logprob: -16.250043869018555
    5. '_sol' → logprob: -16.375043869018555
    6. '_s' → logprob: -16.500043869018555
    7. 'olution' → logprob: -17.250043869018555
    8. ' solution' → logprob: -17.500043869018555
    9. '   ' → logprob: -17.875043869018555
    10. '(solution' → logprob: -18.125043869018555

Token 916: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933957934379578
    2. ' =' → logprob: -0.6933957934379578
    3. '=True' → logprob: -8.318395614624023
    4. '                       ' → logprob: -13.193395614624023
    5. '                           ' → logprob: -13.693395614624023
    6. '                   ' → logprob: -14.443395614624023
    7. ' ' → logprob: -15.318395614624023
    8. '           ' → logprob: -15.568395614624023
    9. '   ' → logprob: -15.693395614624023
    10. '               ' → logprob: -15.943395614624023

Token 917: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.2014133334159851
    2. ' True' → logprob: -1.7014133930206299
    3. '=True' → logprob: -17.326414108276367
    4. '(True' → logprob: -18.076414108276367
    5. 'False' → logprob: -19.076414108276367
    6. 'T' → logprob: -19.326414108276367
    7. 'Tr' → logprob: -20.951414108276367
    8. ' Tru' → logprob: -21.826414108276367
    9. '.True' → logprob: -22.201414108276367
    10. ' ' → logprob: -22.326414108276367

Token 918: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.007888511754572392
    2. '                               ' → logprob: -4.882888317108154
    3. '                            ' → logprob: -8.882888793945312
    4. '                       ' → logprob: -10.257888793945312
    5. '                             ' → logprob: -10.382888793945312
    6. '                                   ' → logprob: -10.757888793945312
    7. '           ' → logprob: -11.382888793945312
    8. '=' → logprob: -11.757888793945312
    9. '                   ' → logprob: -11.882888793945312
    10. '                          ' → logprob: -12.382888793945312

Token 919: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0004921489744447172
    2. '                               ' → logprob: -7.750492095947266
    3. '                            ' → logprob: -10.250492095947266
    4. '                       ' → logprob: -11.625492095947266
    5. '                                   ' → logprob: -12.250492095947266
    6. '           ' → logprob: -12.750492095947266
    7. '                             ' → logprob: -13.000492095947266
    8. '                   ' → logprob: -13.250492095947266
    9. '                            
' → logprob: -13.625492095947266
    10. '                          ' → logprob: -13.875492095947266

Token 920: ' break' (ID: 2338)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.002903897315263748
    2. 'break' (adapté à ' break') → logprob: -6.002903938293457
    3. ' break' → logprob: -8.127903938293457
    4. '                               ' → logprob: -9.377903938293457
    5. '                            ' → logprob: -11.127903938293457
    6. '                       ' → logprob: -11.377903938293457
    7. '                                   ' → logprob: -11.877903938293457
    8. '                   ' → logprob: -12.502903938293457
    9. '                             ' → logprob: -13.002903938293457
    10. '           ' → logprob: -13.127903938293457

Token 921: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.23853270709514618
    2. '                       ' → logprob: -2.113532781600952
    3. '                           ' → logprob: -2.488532781600952
    4. '               ' → logprob: -5.613532543182373
    5. '           ' → logprob: -5.988532543182373
    6. '                               ' → logprob: -7.113532543182373
    7. '       ' → logprob: -8.613533020019531
    8. '                            ' → logprob: -8.988533020019531
    9. '<|end|>' → logprob: -8.988533020019531
    10. '                        
' → logprob: -9.238533020019531

Token 922: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5810376405715942
    2. '                       ' → logprob: -0.8310376405715942
    3. '                           ' → logprob: -5.831037521362305
    4. '               ' → logprob: -6.456037521362305
    5. '           ' → logprob: -7.956037521362305
    6. '       ' → logprob: -9.331037521362305
    7. '                               ' → logprob: -9.956037521362305
    8. '                  ' → logprob: -11.331037521362305
    9. '                    ' → logprob: -11.331037521362305
    10. '                     ' → logprob: -11.456037521362305

Token 923: ' s' (ID: 265)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08672403544187546
    2. 'ss' → logprob: -2.961724042892456
    3. '                       ' → logprob: -4.336723804473877
    4. '               ' → logprob: -4.711723804473877
    5. '           ' → logprob: -5.711723804473877
    6. '   ' → logprob: -6.211723804473877
    7. ' ss' → logprob: -6.711723804473877
    8. '       ' → logprob: -6.711723804473877
    9. '                           ' → logprob: -8.086724281311035
    10. '	ss' → logprob: -8.586724281311035

Token 924: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0011748670367524028
    2. 'um' → logprob: -6.7511749267578125
    3. '+=' → logprob: -13.251174926757812
    4. 'ss' → logprob: -13.751174926757812
    5. ' +=' → logprob: -14.626174926757812
    6. '=sum' → logprob: -14.626174926757812
    7. 's' → logprob: -15.251174926757812
    8. ' sum' → logprob: -15.376174926757812
    9. '=' → logprob: -16.376174926757812
    10. '   ' → logprob: -16.626174926757812

Token 925: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931899189949036
    2. '+=' → logprob: -0.6931899189949036
    3. '                       ' → logprob: -11.31818962097168
    4. '                   ' → logprob: -11.94318962097168
    5. '                        ' → logprob: -12.06818962097168
    6. '                    ' → logprob: -12.44318962097168
    7. '+' → logprob: -12.81818962097168
    8. '                           ' → logprob: -12.81818962097168
    9. '   ' → logprob: -13.44318962097168
    10. '          ' → logprob: -13.94318962097168

Token 926: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.029752222821116447
    2. ' values' → logprob: -3.529752254486084
    3. '(values' → logprob: -14.404751777648926
    4. 'tot' → logprob: -15.154751777648926
    5. '	values' → logprob: -15.154751777648926
    6. ' totals' → logprob: -15.654751777648926
    7. '                   ' → logprob: -15.779751777648926
    8. '.values' → logprob: -16.279752731323242
    9. 'value' → logprob: -17.404752731323242
    10. '-values' → logprob: -17.904752731323242

Token 927: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. 'values' → logprob: -14.500000953674316
    3. '[' → logprob: -16.5
    4. 'i' → logprob: -17.875
    5. '[j' → logprob: -18.125
    6. '```' → logprob: -18.25
    7. ' [' → logprob: -18.875
    8. '[
' → logprob: -19.5
    9. '[I' → logprob: -20.125
    10. '   ' → logprob: -20.5

Token 928: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.20199932157993317
    2. '[j' → logprob: -1.701999306678772
    3. '][' → logprob: -7.451999187469482
    4. '[k' → logprob: -13.45199966430664
    5. '[' → logprob: -13.57699966430664
    6. '```' → logprob: -14.20199966430664
    7. ')[' → logprob: -14.82699966430664
    8. ' [' → logprob: -15.07699966430664
    9. ']' → logprob: -15.07699966430664
    10. '
' → logprob: -15.70199966430664

Token 929: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0009003812447190285
    2. 'i' → logprob: -7.1259002685546875
    3. '[j' → logprob: -9.625900268554688
    4. 'values' → logprob: -10.625900268554688
    5. '[i' → logprob: -12.375900268554688
    6. 'value' → logprob: -14.375900268554688
    7. ' j' → logprob: -14.750900268554688
    8. 'k' → logprob: -15.875900268554688
    9. '
' → logprob: -16.375900268554688
    10. '   ' → logprob: -17.750900268554688

Token 930: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1747153401374817
    2. '               ' → logprob: -1.924715280532837
    3. '           ' → logprob: -4.549715518951416
    4. ')' → logprob: -6.299715518951416
    5. ')
' → logprob: -7.549715518951416
    6. ':
' → logprob: -8.174715042114258
    7. '                ' → logprob: -8.799715042114258
    8. ']' → logprob: -8.924715042114258
    9. '```' → logprob: -8.924715042114258
    10. '
' → logprob: -9.424715042114258

Token 931: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08205131441354752
    2. '               ' → logprob: -2.5820512771606445
    3. '           ' → logprob: -5.8320512771606445
    4. '                       ' → logprob: -9.707051277160645
    5. '                  ' → logprob: -10.207051277160645
    6. '                ' → logprob: -10.332051277160645
    7. 'if' → logprob: -11.207051277160645
    8. '                 ' → logprob: -11.332051277160645
    9. '```' → logprob: -11.457051277160645
    10. '   ' → logprob: -11.707051277160645

Token 932: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.019844308495521545
    2. '               ' → logprob: -4.3948445320129395
    3. '           ' → logprob: -5.0198445320129395
    4. '       ' → logprob: -8.144844055175781
    5. '   ' → logprob: -8.769844055175781
    6. 'if' (adapté à ' if') → logprob: -9.144844055175781
    7. ' if' → logprob: -9.644844055175781
    8. '                       ' → logprob: -9.644844055175781
    9. '                  ' → logprob: -12.769844055175781
    10. '                    ' → logprob: -13.144844055175781

Token 933: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.5759397745132446
    2. 'no' → logprob: -0.8259397745132446
    3. '	no' → logprob: -15.700940132141113
    4. '(no' → logprob: -16.200939178466797
    5. 'n' → logprob: -16.575939178466797
    6. 's' → logprob: -17.950939178466797
    7. ' ' → logprob: -18.075939178466797
    8. ' s' → logprob: -18.200939178466797
    9. ' ' → logprob: -18.700939178466797
    10. '                   ' → logprob: -18.825939178466797

Token 934: '_solution' (ID: 127649)
  Prédit: '_solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_solution' → logprob: -0.0008384577231481671
    2. 'solution' → logprob: -7.125838279724121
    3. 'no' → logprob: -10.500838279724121
    4. 'Solution' → logprob: -12.125838279724121
    5. '_no' → logprob: -14.750838279724121
    6. ' solution' → logprob: -15.250838279724121
    7. '_' → logprob: -16.250839233398438
    8. ' no' → logprob: -16.375839233398438
    9. '_problem' → logprob: -16.625839233398438
    10. '_s' → logprob: -17.250839233398438

Token 935: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.9790143966674805
    2. ':' → logprob: -1.3540143966674805
    3. '                   ' → logprob: -1.6040143966674805
    4. ':
' → logprob: -1.9790143966674805
    5. '=' → logprob: -3.9790143966674805
    6. '               ' → logprob: -5.7290143966674805
    7. '=True' → logprob: -5.8540143966674805
    8. '       ' → logprob: -7.6040143966674805
    9. '           ' → logprob: -7.7290143966674805
    10. ' =' → logprob: -7.8540143966674805

Token 936: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.812920093536377
    2. '                       ' → logprob: -0.937920093536377
    3. '=' → logprob: -2.312920093536377
    4. ' =' → logprob: -3.312920093536377
    5. ':' → logprob: -4.562920093536377
    6. '=True' → logprob: -4.562920093536377
    7. '               ' → logprob: -5.062920093536377
    8. ':
' → logprob: -6.937920093536377
    9. '           ' → logprob: -7.812920093536377
    10. '==' → logprob: -8.812919616699219

Token 937: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.9890928268432617
    2. '                       ' → logprob: -1.4890928268432617
    3. '                   ' → logprob: -1.6140928268432617
    4. 'break' (adapté à ' break') → logprob: -1.8640928268432617
    5. '                           ' → logprob: -3.2390928268432617
    6. '           ' → logprob: -5.114092826843262
    7. '               ' → logprob: -6.239092826843262
    8. '   ' → logprob: -7.364092826843262
    9. '	break' → logprob: -8.114092826843262
    10. '       ' → logprob: -8.864092826843262

Token 938: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5837799906730652
    2. '           ' → logprob: -1.20878005027771
    3. '                   ' → logprob: -1.95878005027771
    4. '       ' → logprob: -6.458779811859131
    5. '   ' → logprob: -8.208780288696289
    6. 'if' → logprob: -8.333780288696289
    7. '```' → logprob: -9.333780288696289
    8. '
' → logprob: -10.083780288696289
    9. ',' → logprob: -10.083780288696289
    10. '                       ' → logprob: -10.333780288696289

Token 939: '                   ' (ID: 699)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6299154162406921
    2. '               ' → logprob: -0.8799154162406921
    3. '                   ' → logprob: -3.004915475845337
    4. '       ' → logprob: -6.754915237426758
    5. 'if' → logprob: -6.754915237426758
    6. ' if' → logprob: -8.254915237426758
    7. '
' → logprob: -9.504915237426758
    8. '```' → logprob: -9.754915237426758
    9. '   ' → logprob: -10.129915237426758
    10. ',' → logprob: -10.379915237426758

Token 940: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.153697207570076
    2. '               ' → logprob: -2.2786972522735596
    3. '                   ' → logprob: -3.5286972522735596
    4. ' if' → logprob: -4.7786970138549805
    5. '           ' → logprob: -6.4036970138549805
    6. '```' → logprob: -7.7786970138549805
    7. '   ' → logprob: -9.02869701385498
    8. '       ' → logprob: -9.52869701385498
    9. '                       ' → logprob: -10.90369701385498
    10. ' ' → logprob: -13.02869701385498

Token 941: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0024968255311250687
    2. 'ss' → logprob: -6.002496719360352
    3. ' ss' → logprob: -11.127496719360352
    4. 's' → logprob: -12.502496719360352
    5. 'sst' → logprob: -13.752496719360352
    6. '(ss' → logprob: -14.502496719360352
    7. '	ss' → logprob: -15.627496719360352
    8. 'sss' → logprob: -16.00249671936035
    9. 'ssp' → logprob: -16.12749671936035
    10. '```' → logprob: -16.12749671936035

Token 942: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0001544321421533823
    2. 'um' → logprob: -9.375154495239258
    3. 'ss' → logprob: -9.750154495239258
    4. 'sm' → logprob: -12.625154495239258
    5. 's' → logprob: -13.375154495239258
    6. '!=' → logprob: -13.500154495239258
    7. 'ums' → logprob: -14.000154495239258
    8. 'su' → logprob: -14.125154495239258
    9. 'umsum' → logprob: -14.125154495239258
    10. '[' → logprob: -15.125154495239258

Token 943: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2014152854681015
    2. '!=' → logprob: -1.7014153003692627
    3. '()!=' → logprob: -14.076415061950684
    4. ')!=' → logprob: -14.201415061950684
    5. ']!=' → logprob: -15.451415061950684
    6. '```' → logprob: -16.076416015625
    7. '!=(' → logprob: -16.451416015625
    8. ' ' → logprob: -16.451416015625
    9. ' ' → logprob: -16.701416015625
    10. '!==' → logprob: -16.951416015625

Token 944: ' totals' (ID: 92279)
  Prédit: 'tot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tot' → logprob: -0.04858918860554695
    2. ' totals' → logprob: -3.0485892295837402
    3. ' tot' → logprob: -14.298588752746582
    4. '   ' → logprob: -14.923588752746582
    5. '_tot' → logprob: -15.048588752746582
    6. 'total' → logprob: -15.173588752746582
    7. 'Totals' → logprob: -15.298588752746582
    8. 'targets' → logprob: -17.6735897064209
    9. ' ' → logprob: -18.2985897064209
    10. '       ' → logprob: -18.7985897064209

Token 945: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.128163257315464e-07
    2. ' [' → logprob: -16.375
    3. '[' → logprob: -16.625
    4. '   ' → logprob: -17.75
    5. '[i' → logprob: -18.5
    6. '[s' → logprob: -18.875
    7. '[js' → logprob: -19.25
    8. '```' → logprob: -19.375
    9. 'j' → logprob: -19.5
    10. '           ' → logprob: -20.625

Token 946: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.01642986387014389
    2. ':' → logprob: -4.516429901123047
    3. '                   ' → logprob: -5.891429901123047
    4. '                       ' → logprob: -6.391429901123047
    5. ']:
' → logprob: -7.266429901123047
    6. '):
' → logprob: -8.891429901123047
    7. '               ' → logprob: -10.516429901123047
    8. '           ' → logprob: -10.641429901123047
    9. '       ' → logprob: -11.891429901123047
    10. ']:' → logprob: -12.016429901123047

Token 947: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3130667507648468
    2. '                   ' → logprob: -1.4380667209625244
    3. ' no' → logprob: -3.6880667209625244
    4. 'no' → logprob: -5.5630669593811035
    5. '               ' → logprob: -6.8130669593811035
    6. '                           ' → logprob: -7.9380669593811035
    7. '           ' → logprob: -7.9380669593811035
    8. '(no' → logprob: -8.313066482543945
    9. ':
' → logprob: -8.813066482543945
    10. '=no' → logprob: -9.563066482543945

Token 948: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.38750848174095154
    2. 'no' (adapté à ' no') → logprob: -1.137508511543274
    3. '	no' → logprob: -8.387508392333984
    4. '                   ' → logprob: -8.887508392333984
    5. '   ' → logprob: -9.512508392333984
    6. '                           ' → logprob: -9.512508392333984
    7. '               ' → logprob: -10.637508392333984
    8. '           ' → logprob: -10.637508392333984
    9. '(no' → logprob: -10.887508392333984
    10. '                       ' → logprob: -11.012508392333984

Token 949: '_solution' (ID: 127649)
  Prédit: '_solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_solution' → logprob: -0.001907216152176261
    2. 'True' → logprob: -6.6269073486328125
    3. 'Solution' → logprob: -7.8769073486328125
    4. ' True' → logprob: -9.126907348632812
    5. 'solution' → logprob: -10.126907348632812
    6. '_s' → logprob: -10.626907348632812
    7. '_' → logprob: -11.876907348632812
    8. '_space' → logprob: -12.126907348632812
    9. '_true' → logprob: -12.501907348632812
    10. '_sol' → logprob: -12.751907348632812

Token 950: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023276345804333687
    2. ' =' → logprob: -3.7732763290405273
    3. '=True' → logprob: -10.398276329040527
    4. '                       ' → logprob: -15.148276329040527
    5. '                           ' → logprob: -16.898277282714844
    6. '=False' → logprob: -17.523277282714844
    7. '=
' → logprob: -18.148277282714844
    8. '                   ' → logprob: -18.398277282714844
    9. '=true' → logprob: -18.398277282714844
    10. 'True' → logprob: -18.523277282714844

Token 951: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0485873706638813
    2. ' True' → logprob: -3.0485873222351074
    3. '=True' → logprob: -17.048587799072266
    4. '(True' → logprob: -18.423587799072266
    5. 'T' → logprob: -20.923587799072266
    6. 'False' → logprob: -21.048587799072266
    7. 'Tr' → logprob: -21.673587799072266
    8. '.True' → logprob: -22.298587799072266
    9. '1' → logprob: -22.548587799072266
    10. ' Tru' → logprob: -22.673587799072266

Token 952: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.010180290788412094
    2. '                           ' → logprob: -4.885180473327637
    3. '                   ' → logprob: -6.635180473327637
    4. ':
' → logprob: -7.760180473327637
    5. '           ' → logprob: -7.760180473327637
    6. '               ' → logprob: -9.135180473327637
    7. '                        ' → logprob: -9.385180473327637
    8. '                        
' → logprob: -9.385180473327637
    9. '       ' → logprob: -11.135180473327637
    10. '
' → logprob: -11.135180473327637

Token 953: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.05134253203868866
    2. '                           ' → logprob: -3.051342487335205
    3. '           ' → logprob: -7.051342487335205
    4. '                   ' → logprob: -7.051342487335205
    5. '                        ' → logprob: -7.926342487335205
    6. '               ' → logprob: -8.676342964172363
    7. '                        
' → logprob: -8.801342964172363
    8. '                               ' → logprob: -10.051342964172363
    9. '       ' → logprob: -10.301342964172363
    10. ' and' → logprob: -10.426342964172363

Token 954: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5869295597076416
    2. 'break' (adapté à ' break') → logprob: -0.8369295597076416
    3. '                           ' → logprob: -4.8369293212890625
    4. '                       ' → logprob: -5.8369293212890625
    5. '           ' → logprob: -10.336929321289062
    6. '                   ' → logprob: -10.836929321289062
    7. '               ' → logprob: -11.586929321289062
    8. '                               ' → logprob: -12.211929321289062
    9. '	break' → logprob: -12.336929321289062
    10. '
' → logprob: -12.461929321289062

Token 955: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012483048252761364
    2. 'if' → logprob: -5.0124831199646
    3. '
' → logprob: -5.5124831199646
    4. ' if' → logprob: -6.7624831199646
    5. '        
' → logprob: -8.387482643127441
    6. '   ' → logprob: -8.887482643127441
    7. '<|end|>' → logprob: -9.262482643127441
    8. '```' → logprob: -11.012482643127441
    9. 'If' → logprob: -11.137482643127441
    10. 'else' → logprob: -11.387482643127441

Token 956: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005089545156806707
    2. '
' → logprob: -5.88008975982666
    3. '```' → logprob: -6.50508975982666
    4. '   ' → logprob: -8.13008975982666
    5. 'if' → logprob: -8.25508975982666
    6. ' if' → logprob: -9.25508975982666
    7. '<|end|>' → logprob: -10.00508975982666
    8. '        
' → logprob: -10.38008975982666
    9. '[' → logprob: -11.25508975982666
    10. '    
' → logprob: -11.50508975982666

Token 957: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005796189419925213
    2. '
' → logprob: -5.880795955657959
    3. '   ' → logprob: -6.505795955657959
    4. 'if' → logprob: -7.380795955657959
    5. '        
' → logprob: -7.505795955657959
    6. '    
' → logprob: -9.005796432495117
    7. '```' → logprob: -9.630796432495117
    8. '<|end|>' → logprob: -9.880796432495117
    9. ' if' → logprob: -10.255796432495117
    10. '  
' → logprob: -11.755796432495117

Token 958: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00017958412354346365
    2. '       ' → logprob: -8.750179290771484
    3. ' if' → logprob: -11.000179290771484
    4. 'output' → logprob: -12.625179290771484
    5. 'import' → logprob: -15.000179290771484
    6. '   ' → logprob: -15.250179290771484
    7. 'result' → logprob: -15.500179290771484
    8. 'print' → logprob: -16.125179290771484
    9. 'for' → logprob: -16.250179290771484
    10. '           ' → logprob: -17.000179290771484

Token 959: ' all' (ID: 722)
  Prédit: ' no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.26504769921302795
    2. ' first' → logprob: -1.5150476694107056
    3. ' not' → logprob: -4.390047550201416
    4. 'no' → logprob: -7.640047550201416
    5. 'first' → logprob: -9.140048027038574
    6. 'not' → logprob: -11.140048027038574
    7. '   ' → logprob: -11.765048027038574
    8. ' ' → logprob: -11.890048027038574
    9. ' changed' → logprob: -12.265048027038574
    10. '    ' → logprob: -12.390048027038574

Token 960: ' unknown' (ID: 17927)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -1.4839321374893188
    2. 'unknown' → logprob: -1.8589321374893188
    3. 'known' → logprob: -2.1089320182800293
    4. ' unknown' → logprob: -2.3589320182800293
    5. 'values' → logprob: -2.4839320182800293
    6. '_known' → logprob: -2.6089320182800293
    7. ' known' → logprob: -2.8589320182800293
    8. ' values' → logprob: -3.1089320182800293
    9. '_unknown' → logprob: -3.6089320182800293
    10. 'filled' → logprob: -4.108932018280029

Token 961: ' filled' (ID: 14255)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18818259239196777
    2. ':' → logprob: -2.0631825923919678
    3. '_values' → logprob: -3.4381825923919678
    4. '_' → logprob: -5.563182830810547
    5. '_s' → logprob: -5.938182830810547
    6. ' s' → logprob: -6.188182830810547
    7. 'values' → logprob: -6.938182830810547
    8. ' =' → logprob: -7.688182830810547
    9. ' values' → logprob: -7.688182830810547
    10. '_tokens' → logprob: -7.938182830810547

Token 962: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6973171830177307
    2. ':' → logprob: -0.8223171830177307
    3. ' and' → logprob: -3.072317123413086
    4. '       ' → logprob: -4.447317123413086
    5. 'and' → logprob: -6.072317123413086
    6. '           ' → logprob: -6.322317123413086
    7. ',' → logprob: -8.197317123413086
    8. '   ' → logprob: -9.572317123413086
    9. 'else' → logprob: -9.697317123413086
    10. ' else' → logprob: -10.447317123413086

Token 963: ' consistent' (ID: 20434)
  Prédit: ' no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.699738621711731
    2. ' not' → logprob: -1.199738621711731
    3. 'no' → logprob: -2.1997385025024414
    4. 'not' → logprob: -2.4497385025024414
    5. ' first' → logprob: -5.699738502502441
    6. '(no' → logprob: -7.324738502502441
    7. 'first' → logprob: -7.574738502502441
    8. '(not' → logprob: -8.199738502502441
    9. '   ' → logprob: -10.449738502502441
    10. ' (' → logprob: -10.699738502502441

Token 964: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.17947238683700562
    2. ':' → logprob: -2.3044724464416504
    3. '       ' → logprob: -2.8044724464416504
    4. '           ' → logprob: -6.30447244644165
    5. ' and' → logprob: -6.80447244644165
    6. ',' → logprob: -7.05447244644165
    7. ' if' → logprob: -10.429471969604492
    8. ',
' → logprob: -10.554471969604492
    9. ':

' → logprob: -10.929471969604492
    10. '   ' → logprob: -11.179471969604492

Token 965: ' print' (ID: 2123)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7289384603500366
    2. 'if' → logprob: -0.8539384603500366
    3. '       ' → logprob: -2.728938579559326
    4. '           ' → logprob: -3.978938579559326
    5. 'for' → logprob: -5.228938579559326
    6. ' for' → logprob: -6.103938579559326
    7. 'print' → logprob: -8.853938102722168
    8. '   ' → logprob: -10.853938102722168
    9. ' print' → logprob: -10.853938102722168
    10. ' first' → logprob: -10.978938102722168

Token 966: ' answers' (ID: 14716)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8588284254074097
    2. '(' → logprob: -1.1088284254074097
    3. 'if' → logprob: -1.7338284254074097
    4. '(
' → logprob: -3.108828544616699
    5. ' if' → logprob: -4.483828544616699
    6. '           ' → logprob: -4.733828544616699
    7. '('' → logprob: -6.483828544616699
    8. ' (' → logprob: -7.108828544616699
    9. '   ' → logprob: -7.358828544616699
    10. '()' → logprob: -7.983828544616699

Token 967: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00047952806926332414
    2. ' if' → logprob: -8.375479698181152
    3. '           ' → logprob: -9.000479698181152
    4. '
' → logprob: -10.250479698181152
    5. 'if' → logprob: -10.500479698181152
    6. ',' → logprob: -10.625479698181152
    7. '<|end|>' → logprob: -11.000479698181152
    8. '        
' → logprob: -12.625479698181152
    9. '```' → logprob: -13.000479698181152
    10. ':
' → logprob: -13.000479698181152

Token 968: ' order' (ID: 2569)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.342431902885437
    2. 'case' → logprob: -2.8424320220947266
    3. 'table' → logprob: -3.0924320220947266
    4. 'order' → logprob: -3.3424320220947266
    5. '"' → logprob: -3.8424320220947266
    6. 'p' → logprob: -4.092432022094727
    7. 'for' → logprob: -4.217432022094727
    8. 'rows' → logprob: -4.217432022094727
    9. ' the' → logprob: -4.342432022094727
    10. ''' → logprob: -4.467432022094727

Token 969: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00043460296001285315
    2. '
' → logprob: -8.875434875488281
    3. '           ' → logprob: -8.875434875488281
    4. ' for' → logprob: -9.750434875488281
    5. ' if' → logprob: -10.625434875488281
    6. '        
' → logprob: -10.875434875488281
    7. ',' → logprob: -10.875434875488281
    8. 'for' → logprob: -11.250434875488281
    9. '<|end|>' → logprob: -11.500434875488281
    10. 'if' → logprob: -12.625434875488281

Token 970: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06403223425149918
    2. '           ' → logprob: -2.8140323162078857
    3. ' if' → logprob: -6.564032077789307
    4. 'if' → logprob: -8.314032554626465
    5. ' for' → logprob: -8.314032554626465
    6. 'for' → logprob: -9.939032554626465
    7. '               ' → logprob: -10.064032554626465
    8. '
' → logprob: -10.939032554626465
    9. '   ' → logprob: -11.439032554626465
    10. ',' → logprob: -11.939032554626465

Token 971: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.621065080165863
    2. '       ' → logprob: -0.871065080165863
    3. ' if' → logprob: -3.121065139770508
    4. '           ' → logprob: -12.496065139770508
    5. '```' → logprob: -12.621065139770508
    6. '   ' → logprob: -13.246065139770508
    7. 'for' → logprob: -13.496065139770508
    8. 'else' → logprob: -14.371065139770508
    9. '
' → logprob: -14.496065139770508
    10. '        
' → logprob: -14.621065139770508

Token 972: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.06618472188711166
    2. ' not' → logprob: -2.8161847591400146
    3. 'no' → logprob: -5.5661845207214355
    4. 'not' → logprob: -8.066184997558594
    5. ' ' → logprob: -9.941184997558594
    6. '   ' → logprob: -11.816184997558594
    7. '	no' → logprob: -11.941184997558594
    8. ' n' → logprob: -13.316184997558594
    9. ' first' → logprob: -13.566184997558594
    10. '  ' → logprob: -14.066184997558594

Token 973: '_solution' (ID: 127649)
  Prédit: '_solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_solution' → logprob: -0.00015669701679144055
    2. ':' → logprob: -9.50015640258789
    3. 'solution' → logprob: -9.87515640258789
    4. ' solution' → logprob: -11.12515640258789
    5. '_sol' → logprob: -12.25015640258789
    6. '_' → logprob: -12.25015640258789
    7. '_s' → logprob: -13.00015640258789
    8. 'Solution' → logprob: -13.50015640258789
    9. ' Solution' → logprob: -14.12515640258789
    10. ':
' → logprob: -14.75015640258789

Token 974: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03857417404651642
    2. ':
' → logprob: -3.28857421875
    3. '           ' → logprob: -7.66357421875
    4. '==' → logprob: -11.03857421875
    5. '       ' → logprob: -11.16357421875
    6. ' or' → logprob: -11.41357421875
    7. ' ==' → logprob: -12.16357421875
    8. '=' → logprob: -12.66357421875
    9. '.' → logprob: -12.78857421875
    10. '   ' → logprob: -12.91357421875

Token 975: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011188744247192517
    2. 'print' → logprob: -9.50011157989502
    3. '
' → logprob: -12.00011157989502
    4. '       ' → logprob: -12.00011157989502
    5. '```' → logprob: -12.00011157989502
    6. ':' → logprob: -12.37511157989502
    7. ' print' → logprob: -12.37511157989502
    8. ':
' → logprob: -12.87511157989502
    9. '               ' → logprob: -13.12511157989502
    10. '            
' → logprob: -13.37511157989502

Token 976: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3329660892486572
    2. '           ' → logprob: -1.5829660892486572
    3. '       ' → logprob: -2.9579660892486572
    4. ' print' → logprob: -3.7079660892486572
    5. '   ' → logprob: -7.332965850830078
    6. '               ' → logprob: -7.957965850830078
    7. 'for' → logprob: -8.332965850830078
    8. '```' → logprob: -9.457965850830078
    9. ' for' → logprob: -10.707965850830078
    10. ' ' → logprob: -11.207965850830078

Token 977: ' not' (ID: 625)
  Prédit: ' first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.36724746227264404
    2. 'first' → logprob: -1.867247462272644
    3. ' not' → logprob: -1.992247462272644
    4. 'not' → logprob: -4.117247581481934
    5. '	first' → logprob: -9.492247581481934
    6. ' ' → logprob: -11.367247581481934
    7. ' ' → logprob: -11.367247581481934
    8. '   ' → logprob: -11.492247581481934
    9. ' no' → logprob: -11.992247581481934
    10. '	not' → logprob: -12.367247581481934

Token 978: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.12692883610725403
    2. ' first' → logprob: -2.1269288063049316
    3. '	first' → logprob: -14.87692928314209
    4. 'line' → logprob: -16.126928329467773
    5. '(first' → logprob: -16.126928329467773
    6. '   ' → logprob: -16.501928329467773
    7. '[first' → logprob: -16.626928329467773
    8. 'First' → logprob: -17.376928329467773
    9. 'no' → logprob: -17.876928329467773
    10. 'lines' → logprob: -18.001928329467773

Token 979: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1272067278623581
    2. ':
' → logprob: -2.127206802368164
    3. ' or' → logprob: -8.752206802368164
    4. 'print' → logprob: -9.877206802368164
    5. '   ' → logprob: -11.127206802368164
    6. ',' → logprob: -11.502206802368164
    7. ':return' → logprob: -11.752206802368164
    8. ' :' → logprob: -12.127206802368164
    9. '       ' → logprob: -12.127206802368164
    10. '           ' → logprob: -12.252206802368164

Token 980: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6362951397895813
    2. '           ' → logprob: -0.7612951397895813
    3. '   ' → logprob: -6.261295318603516
    4. '                   ' → logprob: -7.136295318603516
    5. 'print' → logprob: -8.136295318603516
    6. '       ' → logprob: -8.511295318603516
    7. ' print' → logprob: -8.761295318603516
    8. '                       ' → logprob: -9.386295318603516
    9. '```' → logprob: -9.511295318603516
    10. ',' → logprob: -9.886295318603516

Token 981: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.016733290627598763
    2. '
' → logprob: -4.641733169555664
    3. ' print' → logprob: -5.016733169555664
    4. '           ' → logprob: -9.391733169555664
    5. '   ' → logprob: -9.641733169555664
    6. '\n' → logprob: -9.766733169555664
    7. '       ' → logprob: -10.391733169555664
    8. '               ' → logprob: -10.391733169555664
    9. '
' → logprob: -10.516733169555664
    10. '    
' → logprob: -11.641733169555664

Token 982: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00021688752167392522
    2. '()
' → logprob: -8.500216484069824
    3. '("")' → logprob: -11.500216484069824
    4. '()\' → logprob: -13.625216484069824
    5. '('\' → logprob: -14.000216484069824
    6. '(' → logprob: -15.000216484069824
    7. '()

' → logprob: -15.125216484069824
    8. '("\' → logprob: -15.375216484069824
    9. '('' → logprob: -15.375216484069824
    10. ' ()' → logprob: -16.62521743774414

Token 983: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009087218204513192
    2. '
' → logprob: -7.375908851623535
    3. '            
' → logprob: -9.125908851623535
    4. '       ' → logprob: -9.250908851623535
    5. '               ' → logprob: -10.625908851623535
    6. '        
' → logprob: -11.125908851623535
    7. '    
' → logprob: -11.375908851623535
    8. 'print' → logprob: -12.000908851623535
    9. '  
' → logprob: -12.625908851623535
    10. '                
' → logprob: -12.750908851623535

Token 984: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.023774005472660065
    2. '           ' → logprob: -3.7737739086151123
    3. '       ' → logprob: -7.648774147033691
    4. ' print' → logprob: -10.023774147033691
    5. '   ' → logprob: -12.148774147033691
    6. 'first' → logprob: -13.148774147033691
    7. '	print' → logprob: -16.523773193359375
    8. '               ' → logprob: -17.148773193359375
    9. ' first' → logprob: -17.773773193359375
    10. '```' → logprob: -18.398773193359375

Token 985: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.36045074462890625
    2. '('' → logprob: -1.3604507446289062
    3. '(-' → logprob: -3.9854507446289062
    4. '(' → logprob: -4.360450744628906
    5. '(No' → logprob: -5.235450744628906
    6. 'Impossible' → logprob: -5.860450744628906
    7. '(no' → logprob: -6.610450744628906
    8. '(NO' → logprob: -6.860450744628906
    9. 'No' → logprob: -7.110450744628906
    10. '('?' → logprob: -7.610450744628906

Token 986: 'NO' (ID: 14695)
  Prédit: 'Impossible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Impossible' → logprob: -0.13520915806293488
    2. 'No' → logprob: -2.760209083557129
    3. 'im' → logprob: -3.135209083557129
    4. 'NO' → logprob: -5.260209083557129
    5. 'Cannot' → logprob: -5.385209083557129
    6. 'IMP' → logprob: -6.260209083557129
    7. '"' → logprob: -6.510209083557129
    8. 'Can't' → logprob: -7.135209083557129
    9. 'no' → logprob: -7.135209083557129
    10. ' impossible' → logprob: -7.635209083557129

Token 987: '")
' (ID: 1896)
  Prédit: ' SOL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' SOL' → logprob: -0.04855682700872421
    2. '")' → logprob: -3.1735568046569824
    3. '\n' → logprob: -6.673556804656982
    4. 'SOL' → logprob: -6.798556804656982
    5. ' S' → logprob: -7.173556804656982
    6. ' ")' → logprob: -7.298556804656982
    7. 'S' → logprob: -7.548556804656982
    8. ' ANSW' → logprob: -8.04855728149414
    9. ' solution' → logprob: -8.67355728149414
    10. 'ANSWER' → logprob: -8.92355728149414

Token 988: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10063125193119049
    2. '           ' → logprob: -2.3506312370300293
    3. '<|end|>' → logprob: -8.600631713867188
    4. 'else' → logprob: -9.350631713867188
    5. '   ' → logprob: -10.100631713867188
    6. '        
' → logprob: -10.475631713867188
    7. ' else' → logprob: -11.100631713867188
    8. '            
' → logprob: -11.850631713867188
    9. '               ' → logprob: -11.850631713867188
    10. '	' → logprob: -12.100631713867188

Token 989: ' first' (ID: 1577)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06787266582250595
    2. 'first' (adapté à ' first') → logprob: -3.5678727626800537
    3. '           ' → logprob: -3.6928727626800537
    4. ' first' → logprob: -4.442872524261475
    5. 'else' → logprob: -7.317872524261475
    6. '   ' → logprob: -9.942873001098633
    7. ' else' → logprob: -11.692873001098633
    8. '	first' → logprob: -11.942873001098633
    9. 'continue' → logprob: -12.317873001098633
    10. '
' → logprob: -12.942873001098633

Token 990: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269402801990509
    2. '=' → logprob: -2.1269402503967285
    3. '=False' → logprob: -11.376940727233887
    4. '=True' → logprob: -14.251940727233887
    5. ' ' → logprob: -16.25193977355957
    6. '=false' → logprob: -17.87693977355957
    7. '	' → logprob: -18.12693977355957
    8. '_' → logprob: -18.37693977355957
    9. '＝' → logprob: -19.00193977355957
    10. ' =)' → logprob: -19.12693977355957

Token 991: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.20146478712558746
    2. ' False' → logprob: -1.7014647722244263
    3. 'True' → logprob: -10.451464653015137
    4. ' True' → logprob: -10.701464653015137
    5. '(False' → logprob: -18.576465606689453
    6. '=False' → logprob: -20.326465606689453
    7. 'F' → logprob: -20.576465606689453
    8. '   ' → logprob: -22.326465606689453
    9. '_false' → logprob: -22.326465606689453
    10. 'false' → logprob: -22.701465606689453

Token 992: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4742783010005951
    2. '       ' → logprob: -0.9742783308029175
    3. 'else' → logprob: -9.224278450012207
    4. 'continue' → logprob: -10.474278450012207
    5. '	       ' → logprob: -10.724278450012207
    6. '   ' → logprob: -11.224278450012207
    7. '	   ' → logprob: -11.849278450012207
    8. '		' → logprob: -11.849278450012207
    9. ' else' → logprob: -12.224278450012207
    10. '	' → logprob: -12.349278450012207

Token 993: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11387516558170319
    2. '           ' → logprob: -2.238875150680542
    3. 'else' → logprob: -6.988875389099121
    4. ' else' → logprob: -10.238875389099121
    5. '   ' → logprob: -10.613875389099121
    6. 'continue' → logprob: -10.863875389099121
    7. '	       ' → logprob: -11.363875389099121
    8. '	' → logprob: -11.363875389099121
    9. '		' → logprob: -11.988875389099121
    10. '	   ' → logprob: -11.988875389099121

Token 994: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20628155767917633
    2. 'else' (adapté à ' else') → logprob: -1.7062815427780151
    3. ' else' → logprob: -5.331281661987305
    4. '   ' → logprob: -11.581281661987305
    5. '	else' → logprob: -11.831281661987305
    6. 'elif' → logprob: -14.206281661987305
    7. '	' → logprob: -14.956281661987305
    8. ' ' → logprob: -15.581281661987305
    9. '           ' → logprob: -15.706281661987305
    10. '      ' → logprob: -15.706281661987305

Token 995: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6710993647575378
    2. ':' → logprob: -0.7960993647575378
    3. '           ' → logprob: -3.2960994243621826
    4. '       ' → logprob: -8.921099662780762
    5. '<|end|>' → logprob: -9.046099662780762
    6. ' if' → logprob: -9.921099662780762
    7. '        ' → logprob: -10.046099662780762
    8. ' :
' → logprob: -10.171099662780762
    9. '[' → logprob: -10.421099662780762
    10. '		' → logprob: -10.421099662780762

Token 996: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001545810722745955
    2. 'if' → logprob: -6.8765459060668945
    3. ' if' → logprob: -7.6265459060668945
    4. '   ' → logprob: -11.626545906066895
    5. '               ' → logprob: -12.376545906066895
    6. '	       ' → logprob: -12.501545906066895
    7. '       ' → logprob: -13.126545906066895
    8. '```' → logprob: -13.626545906066895
    9. '          ' → logprob: -13.751545906066895
    10. '		' → logprob: -13.876545906066895

Token 997: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.41973555088043213
    2. ' if' → logprob: -1.4197355508804321
    3. '           ' → logprob: -2.2947354316711426
    4. '   ' → logprob: -9.5447359085083
    5. 'for' → logprob: -10.0447359085083
    6. '               ' → logprob: -10.2947359085083
    7. '       ' → logprob: -10.5447359085083
    8. ' for' → logprob: -10.7947359085083
    9. '	if' → logprob: -12.2947359085083
    10. '                   ' → logprob: -13.1697359085083

Token 998: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.004078639671206474
    2. 'not' → logprob: -5.5040788650512695
    3. ' ' → logprob: -17.004077911376953
    4. '(not' → logprob: -17.129077911376953
    5. '	not' → logprob: -17.254077911376953
    6. '   ' → logprob: -17.754077911376953
    7. ' no' → logprob: -18.629077911376953
    8. ' ' → logprob: -18.629077911376953
    9. ' first' → logprob: -19.004077911376953
    10. '    ' → logprob: -20.254077911376953

Token 999: ' first' (ID: 1577)
  Prédit: ' first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.10020667314529419
    2. 'first' → logprob: -2.3502066135406494
    3. '	first' → logprob: -17.60020637512207
    4. 'First' → logprob: -18.97520637512207
    5. '[first' → logprob: -19.85020637512207
    6. '(first' → logprob: -19.97520637512207
    7. '.first' → logprob: -21.97520637512207
    8. '_first' → logprob: -21.97520637512207
    9. ':first' → logprob: -23.47520637512207
    10. 'irst' → logprob: -24.10020637512207

Token 1000: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.034061841666698456
    2. ':
' → logprob: -3.409061908721924
    3. '           ' → logprob: -7.909061908721924
    4. 'print' → logprob: -10.909061431884766
    5. '               ' → logprob: -11.284061431884766
    6. '       ' → logprob: -12.534061431884766
    7. '   ' → logprob: -13.034061431884766
    8. ' :' → logprob: -13.034061431884766
    9. ',' → logprob: -13.284061431884766
    10. ' print' → logprob: -13.534061431884766

Token 1001: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03422059863805771
    2. '           ' → logprob: -3.4092206954956055
    3. 'print' → logprob: -8.159220695495605
    4. '   ' → logprob: -9.159220695495605
    5. ' print' → logprob: -9.784220695495605
    6. '                   ' → logprob: -10.784220695495605
    7. '                
' → logprob: -11.034220695495605
    8. '       ' → logprob: -11.159220695495605
    9. '            ' → logprob: -11.159220695495605
    10. '```' → logprob: -11.284220695495605

Token 1002: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.2519310414791107
    2. ' print' → logprob: -1.501931071281433
    3. '
' → logprob: -14.001931190490723
    4. '\n' → logprob: -14.501931190490723
    5. ' 
' → logprob: -15.251931190490723
    6. '	print' → logprob: -15.876931190490723
    7. '```' → logprob: -16.376930236816406
    8. '.print' → logprob: -17.251930236816406
    9. '_print' → logprob: -17.376930236816406
    10. '(print' → logprob: -17.501930236816406

Token 1003: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.541112427134067e-05
    2. '()
' → logprob: -9.500075340270996
    3. '()

' → logprob: -15.250075340270996
    4. '("")' → logprob: -15.750075340270996
    5. '()\' → logprob: -16.250076293945312
    6. ' ()' → logprob: -17.750076293945312
    7. '(' → logprob: -18.375076293945312
    8. '()"' → logprob: -19.375076293945312
    9. '()
' → logprob: -19.500076293945312
    10. '()<' → logprob: -20.000076293945312

Token 1004: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.868328920158092e-05
    2. '               ' → logprob: -11.375028610229492
    3. '		' → logprob: -11.750028610229492
    4. '       ' → logprob: -12.000028610229492
    5. 'print' → logprob: -13.625028610229492
    6. '	       ' → logprob: -13.750028610229492
    7. '   ' → logprob: -15.500028610229492
    8. '          ' → logprob: -15.625028610229492
    9. '                   ' → logprob: -15.750028610229492
    10. '<|end|>' → logprob: -16.750028610229492

Token 1005: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.017451759427785873
    2. 'first' → logprob: -4.892451763153076
    3. 'print' → logprob: -4.892451763153076
    4. '           ' → logprob: -6.642451763153076
    5. 'result' → logprob: -8.392451286315918
    6. ' for' → logprob: -8.517451286315918
    7. 'ans' → logprob: -8.517451286315918
    8. 'answers' → logprob: -8.767451286315918
    9. 'res' → logprob: -9.517451286315918
    10. 'answer' → logprob: -9.892451286315918

Token 1006: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01211813185364008
    2. '(i' → logprob: -4.887118339538574
    3. ' i' → logprob: -5.512118339538574
    4. ' (' → logprob: -8.012118339538574
    5. '(' → logprob: -9.512118339538574
    6. '_i' → logprob: -10.387118339538574
    7. '   ' → logprob: -11.262118339538574
    8. ' ' → logprob: -13.012118339538574
    9. '	i' → logprob: -13.012118339538574
    10. '(x' → logprob: -13.512118339538574

Token 1007: ',j' (ID: 22712)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3405156135559082
    2. ',' → logprob: -1.7155156135559082
    3. ' in' → logprob: -2.340515613555908
    4. ',j' → logprob: -4.465515613555908
    5. ',i' → logprob: -8.46551513671875
    6. ' ,' → logprob: -8.71551513671875
    7. ',in' → logprob: -8.71551513671875
    8. ',(' → logprob: -9.21551513671875
    9. 'i' → logprob: -9.46551513671875
    10. ',n' → logprob: -9.59051513671875

Token 1008: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012512595392763615
    2. 'in' → logprob: -4.387512683868408
    3. ' ' → logprob: -13.26251220703125
    4. ',' → logprob: -14.38751220703125
    5. '	in' → logprob: -14.63751220703125
    6. '   ' → logprob: -16.88751220703125
    7. '  ' → logprob: -17.01251220703125
    8. ' ,' → logprob: -17.13751220703125
    9. ' i' → logprob: -17.51251220703125
    10. '    ' → logprob: -17.51251220703125

Token 1009: ' unknown' (ID: 17927)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.0019297054968774319
    2. ' unknown' → logprob: -6.251929759979248
    3. 'unk' → logprob: -14.62692928314209
    4. '   ' → logprob: -15.12692928314209
    5. 'un' → logprob: -15.87692928314209
    6. ' ' → logprob: -17.251930236816406
    7. 'range' → logprob: -18.001930236816406
    8. '	' → logprob: -18.126930236816406
    9. '
' → logprob: -18.876930236816406
    10. '    ' → logprob: -18.876930236816406

Token 1010: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.957014556974173e-05
    2. ' in' → logprob: -9.625069618225098
    3. ')' → logprob: -14.000069618225098
    4. '_' → logprob: -14.375069618225098
    5. '):
' → logprob: -14.750069618225098
    6. '_s' → logprob: -14.750069618225098
    7. '```' → logprob: -15.125069618225098
    8. ']' → logprob: -15.500069618225098
    9. '(s' → logprob: -15.625069618225098
    10. '       ' → logprob: -16.62506866455078

Token 1011: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02269545942544937
    2. ',' → logprob: -4.522695541381836
    3. ':
' → logprob: -4.522695541381836
    4. '):' → logprob: -7.897695541381836
    5. ' :' → logprob: -9.147695541381836
    6. 'print' → logprob: -9.647695541381836
    7. ' ,' → logprob: -9.772695541381836
    8. '   ' → logprob: -10.522695541381836
    9. ' print' → logprob: -10.897695541381836
    10. '):
' → logprob: -10.897695541381836

Token 1012: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00016146517009474337
    2. '       ' → logprob: -10.500161170959473
    3. 'print' → logprob: -10.500161170959473
    4. '                   ' → logprob: -10.875161170959473
    5. '           ' → logprob: -10.875161170959473
    6. ' print' → logprob: -11.000161170959473
    7. '   ' → logprob: -11.250161170959473
    8. '	           ' → logprob: -11.250161170959473
    9. '```' → logprob: -12.250161170959473
    10. '<|end|>' → logprob: -12.250161170959473

Token 1013: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.2899084687232971
    2. ' print' → logprob: -1.6649084091186523
    3. '               ' → logprob: -2.7899084091186523
    4. '                   ' → logprob: -7.664908409118652
    5. '   ' → logprob: -8.289908409118652
    6. '           ' → logprob: -8.539908409118652
    7. '	print' → logprob: -9.664908409118652
    8. '       ' → logprob: -10.914908409118652
    9. '```' → logprob: -11.539908409118652
    10. '                       ' → logprob: -12.164908409118652

Token 1014: '(values' (ID: 40883)
  Prédit: '(values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(values' → logprob: -0.0012841640273109078
    2. 'values' → logprob: -7.251284122467041
    3. '(f' → logprob: -7.751284122467041
    4. '(' → logprob: -8.8762845993042
    5. ' values' → logprob: -12.6262845993042
    6. '(value' → logprob: -15.0012845993042
    7. '('' → logprob: -15.6262845993042
    8. '(int' → logprob: -15.8762845993042
    9. ' (' → logprob: -16.251283645629883
    10. '	values' → logprob: -16.501283645629883

Token 1015: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -14.125001907348633
    3. ')' → logprob: -15.875001907348633
    4. ')[' → logprob: -16.375001907348633
    5. '[I' → logprob: -16.500001907348633
    6. '[
' → logprob: -16.625001907348633
    7. ' [' → logprob: -16.625001907348633
    8. 'i' → logprob: -16.750001907348633
    9. '[f' → logprob: -18.500001907348633
    10. '[j' → logprob: -18.500001907348633

Token 1016: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0070878262631595135
    2. '[i' → logprob: -5.007087707519531
    3. '[j' → logprob: -8.132087707519531
    4. '[' → logprob: -10.632087707519531
    5. ']' → logprob: -10.757087707519531
    6. ' ][' → logprob: -11.757087707519531
    7. ')][' → logprob: -12.132087707519531
    8. ']][' → logprob: -12.132087707519531
    9. ')[' → logprob: -12.382087707519531
    10. '   ' → logprob: -13.757087707519531

Token 1017: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0280383548888494e-06
    2. ' j' → logprob: -14.125000953674316
    3. '	j' → logprob: -15.500000953674316
    4. '[j' → logprob: -17.125001907348633
    5. '   ' → logprob: -18.500001907348633
    6. '$j' → logprob: -18.750001907348633
    7. ',j' → logprob: -18.875001907348633
    8. ':j' → logprob: -20.250001907348633
    9. '```' → logprob: -20.250001907348633
    10. ' ' → logprob: -21.250001907348633

Token 1018: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013524403038900346
    2. ',end' → logprob: -9.62513542175293
    3. ')
' → logprob: -10.62513542175293
    4. ' )' → logprob: -10.75013542175293
    5. ',' → logprob: -10.87513542175293
    6. ',)' → logprob: -13.87513542175293
    7. 'end' → logprob: -14.00013542175293
    8. '))' → logprob: -14.00013542175293
    9. ')}' → logprob: -14.87513542175293
    10. '}' → logprob: -14.87513542175293

Token 1019: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1020: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' (adapté à ' first') → logprob: -0.2822381258010864
    2. '           ' → logprob: -1.5322381258010864
    3. ' first' → logprob: -3.782238006591797
    4. '       ' → logprob: -5.032238006591797
    5. '   ' → logprob: -8.032238006591797
    6. '	first' → logprob: -8.657238006591797
    7. '[first' → logprob: -11.032238006591797
    8. '(first' → logprob: -11.282238006591797
    9. ' ' → logprob: -11.782238006591797
    10. ':first' → logprob: -12.282238006591797

Token 1021: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04863812401890755
    2. '=' → logprob: -3.048638105392456
    3. '=True' → logprob: -10.173638343811035
    4. '=False' → logprob: -11.298638343811035
    5. ' ' → logprob: -16.29863739013672
    6. ' =)' → logprob: -17.92363739013672
    7. '＝' → logprob: -18.29863739013672
    8. ' ' → logprob: -18.29863739013672
    9. '	' → logprob: -18.67363739013672
    10. ' =
' → logprob: -18.67363739013672

Token 1022: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0010456704767420888
    2. 'True' → logprob: -7.2510457038879395
    3. ' False' → logprob: -8.001045227050781
    4. ' True' → logprob: -14.251045227050781
    5. '(False' → logprob: -20.37604522705078
    6. 'Fal' → logprob: -22.25104522705078
    7. 'F' → logprob: -22.37604522705078
    8. '=False' → logprob: -22.62604522705078
    9. 'Fa' → logprob: -23.12604522705078
    10. '_false' → logprob: -24.37604522705078

Token 1023: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1024: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1025: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.01552816666662693
    2. '_' → logprob: -5.140528202056885
    3. ' _' → logprob: -5.140528202056885
    4. '__' → logprob: -6.140528202056885
    5. ' ' → logprob: -6.890528202056885
    6. ' ' → logprob: -8.265527725219727
    7. ' main' → logprob: -9.515527725219727
    8. '  ' → logprob: -10.265527725219727
    9. ' ​' → logprob: -10.390527725219727
    10. ' ▁' → logprob: -10.390527725219727

Token 1026: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0024412893690168858
    2. '.__' → logprob: -7.50244140625
    3. ' __' → logprob: -7.50244140625
    4. ' ==' → logprob: -7.87744140625
    5. '__.' → logprob: -8.00244140625
    6. '_' → logprob: -8.37744140625
    7. '__.__' → logprob: -8.50244140625
    8. '==' → logprob: -9.87744140625
    9. '__
' → logprob: -10.37744140625
    10. '__[' → logprob: -10.87744140625

Token 1027: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0007056408794596791
    2. '__.__' → logprob: -7.500705718994141
    3. '==' → logprob: -9.37570571899414
    4. '__.' → logprob: -10.25070571899414
    5. '=="' → logprob: -11.00070571899414
    6. ' ==' → logprob: -12.12570571899414
    7. '=='' → logprob: -13.00070571899414
    8. '_' → logprob: -13.12570571899414
    9. '___' → logprob: -13.62570571899414
    10. '__":
' → logprob: -13.75070571899414

Token 1028: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0284405630081892
    2. ' ==' → logprob: -4.153440475463867
    3. '==' → logprob: -4.528440475463867
    4. '=="' → logprob: -7.028440475463867
    5. '=='' → logprob: -7.778440475463867
    6. '__.__' → logprob: -9.653440475463867
    7. '_' → logprob: -9.903440475463867
    8. '.__' → logprob: -10.153440475463867
    9. '__.' → logprob: -11.028440475463867
    10. '==
' → logprob: -11.028440475463867

Token 1029: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.31327101588249207
    2. ''' → logprob: -1.3132710456848145
    3. '__' → logprob: -12.313270568847656
    4. ' "__' → logprob: -12.813270568847656
    5. ' '__' → logprob: -14.063270568847656
    6. '"user' → logprob: -15.313270568847656
    7. ''name' → logprob: -15.938270568847656
    8. '"name' → logprob: -15.938270568847656
    9. '`' → logprob: -16.063270568847656
    10. ''"' → logprob: -16.313270568847656

Token 1030: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.01822790503501892
    2. '__' → logprob: -4.018228054046631
    3. '"' → logprob: -10.143227577209473
    4. 'name' → logprob: -10.393227577209473
    5. ''' → logprob: -12.643227577209473
    6. '___' → logprob: -13.643227577209473
    7. '__
' → logprob: -13.893227577209473
    8. '__":
' → logprob: -14.518227577209473
    9. '```' → logprob: -14.643227577209473
    10. 'built' → logprob: -14.893227577209473

Token 1031: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.3899918794631958
    2. '__' → logprob: -1.1399918794631958
    3. '__':
' → logprob: -6.264991760253906
    4. '__:' → logprob: -7.139991760253906
    5. '__.' → logprob: -8.139991760253906
    6. '__["' → logprob: -9.889991760253906
    7. '__.__' → logprob: -10.264991760253906
    8. '__
' → logprob: -11.014991760253906
    9. ':' → logprob: -11.764991760253906
    10. '__
' → logprob: -12.639991760253906

Token 1032: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.31876322627067566
    2. ' main' → logprob: -1.568763256072998
    3. '   ' → logprob: -2.943763256072998
    4. '	main' → logprob: -4.443763256072998
    5. '_main' → logprob: -9.19376277923584
    6. '(main' → logprob: -9.94376277923584
    7. '```' → logprob: -10.44376277923584
    8. '    
' → logprob: -10.56876277923584
    9. ' ' → logprob: -12.31876277923584
    10. '.main' → logprob: -12.44376277923584

Token 1033: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -2.339278580620885e-06
    2. ' main' → logprob: -13.000001907348633
    3. '	main' → logprob: -17.125001907348633
    4. '   ' → logprob: -18.250001907348633
    5. '(main' → logprob: -21.000001907348633
    6. '_main' → logprob: -21.375001907348633
    7. '.main' → logprob: -21.625001907348633
    8. 'import' → logprob: -21.875001907348633
    9. '```' → logprob: -22.125001907348633
    10. 'm' → logprob: -23.000001907348633

Token 1034: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1032
Tokens correctement prédits (1ère position, stricte): 403
Tokens correctement prédits (1ère position, avec adaptation): 447
Tokens correctement prédits (top 10): 857
Précision stricte (1ère position): 39.05%
Précision adaptée (1ère position): 43.31%
Précision (top 10): 83.04%
================================================================================
