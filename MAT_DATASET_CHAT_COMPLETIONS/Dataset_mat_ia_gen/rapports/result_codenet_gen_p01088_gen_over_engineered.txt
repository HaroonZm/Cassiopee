================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class CoinDenomination:
    def __init__(self, value, name):
        self.value = value
        self.name = name

class CoinSet:
    # immutable, sorted descending by value
    _denominations = [
        CoinDenomination(1000, "1000-yen bill"),
        CoinDenomination(500, "500-yen coin"),
        CoinDenomination(100, "100-yen coin"),
        CoinDenomination(50, "50-yen coin"),
        CoinDenomination(10, "10-yen coin"),
        CoinDenomination(5, "5-yen coin"),
        CoinDenomination(1, "1-yen coin")
    ]

    @classmethod
    def get_minimum_coins_change(cls, change):
        # returns dict {denomination_value: count} for minimal number of coins to make given change
        remain = change
        result = {}
        for denom in cls._denominations:
            count = remain // denom.value
            if count > 0:
                result[denom.value] = count
                remain -= count * denom.value
        return result

    @classmethod
    def get_coin_index(cls, value):
        for i, denom in enumerate(cls._denominations):
            if denom.value == value:
                return i
        return -1

class PaymentStrategy:
    def __init__(self, price, current_coins):
        self.price = price
        self.current_coins = tuple(current_coins)  # tuple with counts of coins in order in CoinSet._denominations excluding 1000-yen bills
        self.bill_value = 1000

    def generate_payment_options(self):
        # We have unlimited 1000-yen bills, but finite coins in hand.
        # We try to find all payment methods that after payment produce minimal change (and thus get the 500-yen coin in change if possible).
        # To obtain a 500-yen coin, the change must contain it.
        # Since change is calculated as (money given - price).
        #
        # Because handing over too many coins is useless, we limit the payment over price to at most 1000 (one bill).
        #
        # The handover can include:
        # - an arbitrary number k of 1000-yen bills (k=0 or 1; 2 unlikely beneficial since 2000 - price > 1500; too costly)
        # - some coins we have in hand
        #
        # We enumerate all feasible coin combinations to hand over (those not exceeding coins in hand), plus zero or one 1000-yen bill.
        #
        # For performance, we limit coins combinations to those coins sums ≤ price + 1000 (reasonable threshold).
        #
        # We then compute change and minimal coins for change, and count received 500-yen coins from change.

        from itertools import product

        # Only 6 coin types: excluding 1000-yen bills (index 0), coins are indices 1..6 with counts in self.current_coins
        coin_counts = self.current_coins  # length 7 but index 0 is 1000-yen bill excluded here
        # Actually self.current_coins length is 7 but we exclude 1000 bills, initial state 0 for all coins (index 1..6)
        # We build using indices 1..6
        coin_types = CoinSet._denominations[1:]  # skip 1000-yen bill
        # For performance, let's consider max coin usage per denom is min(current count, some reasonable limit, e.g. 20)
        coin_limits = [min(count, 20) for count in coin_counts]  # coin_counts corresponds to indices 0..6; but we passed coins ex-1000; here let's be consistent

        # Actually to align with our representation:
        # current_coins length is 7 with indices 0..6 as 1000,500,100,50,10,5,1?
        # No. We defined _denominations with 1000 first, then 500, then others.
        # The problem states he starts with no coins, only 1000-yen bills unlimited.
        # So current_coins counts for coins excluding 1000-yen bills: 6 coins (500,100,50,10,5,1)
        # Then coin_counts length is 6.
        # So in code: coin_counts = tuple of counts for 500,100,50,10,5,1
        # Our payment state has no count for 1000-yen bills.
        # So coin_types are denominations from 500 down to 1.
        # Hence indices 0..5 for these coins.
        # There is no unlimited 1000-yen bills count here, handled differently.
        #
        # Update: We'll have current_coins tuple of length 6 for coins (excluding 1000-yen).
        # During payment, we can add 0 or 1 1000-yen bills.
        # We'll need to store the coin counts as 6 length tuple.
        #
        # We'll enumerate all combinations of coin usage within limits coin_limits.
        # To limit search space, use a heuristic: total coin sum ≤ price + 1000

        # Modified approach:
        # Iterate coin usage from 0..limit for each, generate their total coin value sum.
        # For each, k in (0,1) number of 1000-yen bills handed over.
        # Hand over money = coin sum + k*1000
        # Only if hand over money >= price, compute change.
        # Check change includes 500-yen coin(s).
        # Yield info: total payment money, change, 500-yen coins count in change, coins used

        # To ease complexity, use recursive bounded generation with pruning.

        results = []

        def dfs(i, used_coins, total_coin_value):
            if i == len(coin_counts):
                # For k in {0,1}
                for k1000 in (0,1):
                    payment = total_coin_value + 1000 * k1000
                    if payment < self.price: # not enough money
                        continue
                    change = payment - self.price
                    if change < 0:
                        continue
                    # Get minimal coins for change
                    change_coins = CoinSet.get_minimum_coins_change(change)
                    # Number of 500-yen coins in change
                    count_500 = change_coins.get(500, 0)
                    # We want to look only if we get at least 0 coins (any #)
                    # This will generate all payment options
                    results.append((count_500, payment, tuple(used_coins), k1000))
                return
            limit = coin_counts[i]
            for c in range(limit + 1):
                used_coins.append(c)
                dfs(i+1, used_coins, total_coin_value + c * CoinSet._denominations[i+1].value)
                used_coins.pop()

        dfs(0, [], 0)
        return results

class StateManager:
    # To store states: (shop_index, coins_tuple) => (max_500coins, min_expense)
    # coins_tuple: current coin counts for (500,100,50,10,5,1)
    def __init__(self):
        self.states = {}

    def get(self, shop_index, coin_tuple):
        return self.states.get( (shop_index, coin_tuple), None)

    def set(self, shop_index, coin_tuple, c500, expense):
        key = (shop_index, coin_tuple)
        old = self.states.get(key)
        if old is None:
            self.states[key] = (c500, expense)
            return True
        else:
            old_c, old_e = old
            if c500 > old_c or (c500 == old_c and expense < old_e):
                self.states[key] = (c500, expense)
                return True
        return False

class YenSavingSolver:
    def __init__(self, prices):
        self.prices = prices
        self.n = len(prices)
        self.coin_types = CoinSet._denominations[1:]  # 500,100,50,10,5,1
        self.initial_coins = (0,0,0,0,0,0)  # no coins at start
        self.INF = 1 << 60

    def solve(self):
        # dynamic programming with memoization:
        # dp states store (max 500-yen coins obtained, min expense) for each (index, coins held)
        # coins held = tuple of counts of 6 coins (no 1000-yen bill, infinite)
        # at each shop, we can choose to buy or skip
        # buying changes coin counts based on payment and change
        #
        # We start state: 0th shop, no coins, 0 coins collected, 0 expense
        #
        # process each shop i from 0 to n-1:
        # For each state:
        #   option skip: same coin counts, c500, expense
        #   option buy: try all payment methods:
        #       subtract coins used, add coins from change,
        #       increment c500 coins by number of 500-yen coins received from change

        from collections import defaultdict, deque

        current_states = {}
        current_states[self.initial_coins] = (0,0)  # coin counts -> (c500coins collected, expense spent)
        for price in self.prices:
            next_states = {}
            for coins_held, (c500, expense) in current_states.items():
                # Option 1: skip this shop
                self.update_state(next_states, coins_held, c500, expense)
                # Option 2: buy this shop's souvenir

                strategy = PaymentStrategy(price, coins_held)
                payments = strategy.generate_payment_options()
                for (received_500coins, payment_money, used_coins, used_1000_bills) in payments:
                    # check if we have enough coins to pay used_coins
                    # used_coins corresponds to coins handed over of six coin types in order: [500,100,50,10,5,1]
                    # but we started with counts coins_held of same order, must check >= used_coins?

                    if any(used_coins[i] > coins_held[i] for i in range(6)):
                        continue  # can't pay these coins

                    # build new coins count after payment:
                    # new_coins = coins_held - used_coins + change_coins except 500-yen coins increase count is noted separately (500-yen coins are in coin set, but also counted in c500)
                    # To calculate change_coins, do change = payment_money - price again and get minimal coins except 500-yen coins count

                    change = payment_money - price
                    change_min_coins = CoinSet.get_minimum_coins_change(change)

                    # coins after transaction:

                    new_coins = [0]*6
                    for i, denom in enumerate(self.coin_types):
                        coin_val = denom.value
                        after = coins_held[i] - used_coins[i] + change_min_coins.get(coin_val, 0)
                        new_coins[i] = after

                    new_coins = tuple(new_coins)
                    new_c500 = c500 + received_500coins
                    new_expense = expense + payment_money
                    self.update_state(next_states, new_coins, new_c500, new_expense)
            current_states = next_states

        # answer: find maximum c500 coins and minimum expense
        max_c500 = -1
        min_expense = self.INF
        for (c500coins, exp) in current_states.values():
            if c500coins > max_c500 or (c500coins == max_c500 and exp < min_expense):
                max_c500 = c500coins
                min_expense = exp
        return max_c500, min_expense

    def update_state(self, state_dict, coins, c500, expense):
        if coins not in state_dict:
            state_dict[coins] = (c500, expense)
        else:
            old_c500, old_expense = state_dict[coins]
            if c500 > old_c500 or (c500 == old_c500 and expense < old_expense):
                state_dict[coins] = (c500, expense)

def main():
    import sys
    input = sys.stdin.readline
    results = []
    while True:
        n_line = input()
        if not n_line:
            break
        n = n_line.strip()
        if n == '0':
            break
        n = int(n)
        prices = []
        for _ in range(n):
            p = int(input())
            prices.append(p)
        solver = YenSavingSolver(prices)
        c, s = solver.solve()
        print(c, s)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Coin' (ID: 35089)
  → Token d'amorce (pas de prédiction)

Token 2: 'Den' (ID: 22671)
  → Token d'amorce (pas de prédiction)

Token 3: 'omination' (ID: 174139)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.22933706641197205
    2. ':' → logprob: -2.479336977005005
    3. 's' → logprob: -2.479336977005005
    4. '(' → logprob: -3.354336977005005
    5. '.' → logprob: -6.854337215423584
    6. '{s' → logprob: -8.354336738586426
    7. '(s' → logprob: -8.479336738586426
    8. '{}' → logprob: -8.854336738586426
    9. 'ect' → logprob: -9.104336738586426
    10. ' {' → logprob: -9.354336738586426

Token 4: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.521029531955719
    2. '{' → logprob: -1.3960294723510742
    3. '(' → logprob: -1.8960294723510742
    4. '.' → logprob: -5.521029472351074
    5. ' {' → logprob: -5.646029472351074
    6. ' :' → logprob: -8.271029472351074
    7. 's' → logprob: -8.646029472351074
    8. '```' → logprob: -9.271029472351074
    9. '(:' → logprob: -9.646029472351074
    10. ' ' → logprob: -9.646029472351074

Token 5: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5145935416221619
    2. ':' → logprob: -1.8895936012268066
    3. '   ' → logprob: -2.0145936012268066
    4. ' ' → logprob: -2.8895936012268066
    5. '```' → logprob: -3.5145936012268066
    6. ''' → logprob: -4.514593601226807
    7. '.' → logprob: -5.139593601226807
    8. ' (' → logprob: -5.764593601226807
    9. '()' → logprob: -6.389593601226807
    10. '(space' → logprob: -6.514593601226807

Token 6: ' def' (ID: 1056)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.0820515155792236
    2. '   ' → logprob: -1.3320515155792236
    3. ' ' → logprob: -1.4570515155792236
    4. ' def' → logprob: -2.5820515155792236
    5. '```' → logprob: -3.4570515155792236
    6. ' ```' → logprob: -3.7070515155792236
    7. '_' → logprob: -4.7070512771606445
    8. ' 
' → logprob: -5.4570512771606445
    9. ' pass' → logprob: -5.7070512771606445
    10. 'def' (adapté à ' def') → logprob: -5.9570512771606445

Token 7: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.26936644315719604
    2. ' ' → logprob: -2.144366502761841
    3. '__' → logprob: -2.144366502761841
    4. ' calculate' → logprob: -7.894366264343262
    5. '_' → logprob: -8.394366264343262
    6. ' ' → logprob: -8.644366264343262
    7. 'init' → logprob: -8.894366264343262
    8. ' init' → logprob: -9.144366264343262
    9. 'calculate' → logprob: -9.269366264343262
    10. '_init' → logprob: -9.519366264343262

Token 8: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.319370302458992e-06
    2. ' init' → logprob: -12.250005722045898
    3. '_init' → logprob: -14.875005722045898
    4. 'ini' → logprob: -16.8750057220459
    5. '	init' → logprob: -17.2500057220459
    6. '_' → logprob: -19.2500057220459
    7. 'int' → logprob: -19.2500057220459
    8. 'inite' → logprob: -19.6250057220459
    9. 'in' → logprob: -19.7500057220459
    10. '   ' → logprob: -20.2500057220459

Token 9: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.14571309089660645
    2. '__' → logprob: -2.1457130908966064
    3. '(' → logprob: -4.270712852478027
    4. '__(
' → logprob: -5.770712852478027
    5. '__((' → logprob: -7.395712852478027
    6. '(self' → logprob: -7.770712852478027
    7. '__('' → logprob: -8.645712852478027
    8. '__(*' → logprob: -9.145712852478027
    9. '_' → logprob: -9.645712852478027
    10. '<|end|>' → logprob: -10.770712852478027

Token 10: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.012519309297204018
    2. ' self' → logprob: -4.387519359588623
    3. ')' → logprob: -12.512518882751465
    4. '(self' → logprob: -13.262518882751465
    5. '	self' → logprob: -13.887518882751465
    6. 'amount' → logprob: -14.012518882751465
    7. 'coin' → logprob: -14.762518882751465
    8. ' )' → logprob: -14.762518882751465
    9. '       ' → logprob: -15.012518882751465
    10. ' ' → logprob: -15.387518882751465

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3228863477706909
    2. 'self' → logprob: -1.572886347770691
    3. ')' → logprob: -3.0728864669799805
    4. ' ,' → logprob: -4.8228864669799805
    5. ' )' → logprob: -5.6978864669799805
    6. ' self' → logprob: -5.9478864669799805
    7. '(self' → logprob: -6.0728864669799805
    8. '(' → logprob: -6.3228864669799805
    9. ' ' → logprob: -6.8228864669799805
    10. '_' → logprob: -7.4478864669799805

Token 12: ' value' (ID: 1432)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5382584929466248
    2. ' self' → logprob: -1.1632585525512695
    3. 'value' → logprob: -3.2882585525512695
    4. 'amount' → logprob: -3.6632585525512695
    5. ' amount' → logprob: -4.2882585525512695
    6. ' denomination' → logprob: -4.4132585525512695
    7. ' value' → logprob: -4.6632585525512695
    8. ' coin' → logprob: -6.0382585525512695
    9. ' denominations' → logprob: -6.5382585525512695
    10. 'coin' → logprob: -7.5382585525512695

Token 13: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11871884763240814
    2. ',' → logprob: -2.3687188625335693
    3. '=' → logprob: -4.74371862411499
    4. ':' → logprob: -4.99371862411499
    5. ')' → logprob: -5.99371862411499
    6. '):
' → logprob: -9.118719100952148
    7. '   ' → logprob: -9.618719100952148
    8. ' ):' → logprob: -10.118719100952148
    9. ' ,' → logprob: -10.618719100952148
    10. ',value' → logprob: -11.243719100952148

Token 14: ' name' (ID: 1308)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.6111850738525391
    2. ' name' → logprob: -1.111185073852539
    3. ' quantity' → logprob: -2.236185073852539
    4. ' weight' → logprob: -4.611185073852539
    5. ' max' → logprob: -5.861185073852539
    6. 'count' → logprob: -6.236185073852539
    7. 'name' → logprob: -6.486185073852539
    8. ' number' → logprob: -6.736185073852539
    9. ' amount' → logprob: -7.111185073852539
    10. 'quantity' → logprob: -7.861185073852539

Token 15: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002052120165899396
    2. ')' → logprob: -6.877052307128906
    3. '):
' → logprob: -7.627052307128906
    4. ',' → logprob: -7.877052307128906
    5. ':' → logprob: -9.002052307128906
    6. '   ' → logprob: -11.002052307128906
    7. '):

' → logprob: -13.127052307128906
    8. '```' → logprob: -13.252052307128906
    9. '=' → logprob: -13.502052307128906
    10. ' ):' → logprob: -13.627052307128906

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019297584891319275
    2. '   ' → logprob: -4.8942975997924805
    3. '    ' → logprob: -5.3942975997924805
    4. ':' → logprob: -5.8942975997924805
    5. '```' → logprob: -7.1442975997924805
    6. ' ' → logprob: -7.3942975997924805
    7. '     ' → logprob: -7.6442975997924805
    8. '        ' → logprob: -7.7692975997924805
    9. '<|end|>' → logprob: -7.8942975997924805
    10. '(' → logprob: -8.14429759979248

Token 17: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.7127618193626404
    2. '       ' → logprob: -1.7127618789672852
    3. ' self' → logprob: -1.7127618789672852
    4. ' ' → logprob: -2.837761878967285
    5. '        ' → logprob: -2.837761878967285
    6. '<|end|>' → logprob: -4.462761878967285
    7. '           ' → logprob: -5.712761878967285
    8. '```' → logprob: -5.837761878967285
    9. ' ' → logprob: -5.962761878967285
    10. '   ' → logprob: -6.337761878967285

Token 18: '.value' (ID: 4683)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11352383345365524
    2. '.value' → logprob: -2.2385237216949463
    3. ' .' → logprob: -7.613523960113525
    4. 'value' → logprob: -9.488523483276367
    5. ' value' → logprob: -10.863523483276367
    6. '.token' → logprob: -10.863523483276367
    7. '.name' → logprob: -11.363523483276367
    8. '.space' → logprob: -11.988523483276367
    9. '._' → logprob: -12.113523483276367
    10. ' ' → logprob: -12.113523483276367

Token 19: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0967186689376831
    2. ' =' → logprob: -2.5967187881469727
    3. '<|end|>' → logprob: -4.471718788146973
    4. ',' → logprob: -5.971718788146973
    5. '_' → logprob: -6.471718788146973
    6. ')' → logprob: -6.971718788146973
    7. ' ' → logprob: -7.596718788146973
    8. '<|end|>' → logprob: -8.596718788146973
    9. '.' → logprob: -8.971718788146973
    10. '   ' → logprob: -9.346718788146973

Token 20: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.008615399710834026
    2. 'value' → logprob: -4.758615493774414
    3. ' ' → logprob: -14.383615493774414
    4. '(value' → logprob: -16.133615493774414
    5. ')value' → logprob: -16.633615493774414
    6. '	value' → logprob: -16.633615493774414
    7. '"value' → logprob: -16.633615493774414
    8. '$value' → logprob: -17.758615493774414
    9. '=value' → logprob: -17.883615493774414
    10. ''value' → logprob: -18.133615493774414

Token 21: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 22: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 23: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4908246695995331
    2. 'self' (adapté à ' self') → logprob: -1.1158246994018555
    3. '<|end|>' → logprob: -3.4908246994018555
    4. ' self' → logprob: -4.3658246994018555
    5. '        ' → logprob: -4.6158246994018555
    6. ',' → logprob: -5.4908246994018555
    7. ' ' → logprob: -7.1158246994018555
    8. '```' → logprob: -7.6158246994018555
    9. ''' → logprob: -8.740824699401855
    10. '        
' → logprob: -8.865824699401855

Token 24: '.name' (ID: 4834)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.009924185462296009
    2. '.name' → logprob: -4.634924411773682
    3. '.value' → logprob: -8.759923934936523
    4. ' .' → logprob: -12.509923934936523
    5. 'name' → logprob: -13.884923934936523
    6. '<|end|>' → logprob: -14.134923934936523
    7. '_name' → logprob: -14.259923934936523
    8. '.is' → logprob: -14.384923934936523
    9. '.description' → logprob: -14.634923934936523
    10. '.Name' → logprob: -14.884923934936523

Token 25: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4742109179496765
    2. ' =' → logprob: -0.9742109179496765
    3. '<|end|>' → logprob: -9.474210739135742
    4. ')' → logprob: -10.724210739135742
    5. '   ' → logprob: -11.099210739135742
    6. ' ' → logprob: -11.474210739135742
    7. '.' → logprob: -13.349210739135742
    8. '       ' → logprob: -13.349210739135742
    9. ' =
' → logprob: -13.724210739135742
    10. ' =)' → logprob: -13.974210739135742

Token 26: ' name' (ID: 1308)
  Prédit: ' name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' name' → logprob: -0.00596647709608078
    2. 'name' → logprob: -5.130966663360596
    3. '"' → logprob: -10.880966186523438
    4. ''' → logprob: -11.880966186523438
    5. '"name' → logprob: -12.255966186523438
    6. ''name' → logprob: -12.505966186523438
    7. ' ' → logprob: -13.630966186523438
    8. ' value' → logprob: -14.005966186523438
    9. '	name' → logprob: -14.130966186523438
    10. '(name' → logprob: -15.505966186523438

Token 27: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4508630633354187
    2. '<|end|>' → logprob: -1.8258631229400635
    3. '   ' → logprob: -2.0758631229400635
    4. '    
' → logprob: -3.2008631229400635
    5. '```' → logprob: -4.950862884521484
    6. '\n' → logprob: -5.075862884521484
    7. ' ' → logprob: -5.825862884521484
    8. '\' → logprob: -5.950862884521484
    9. '  
' → logprob: -6.075862884521484
    10. ' 
' → logprob: -6.200862884521484

Token 28: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12680724263191223
    2. '   ' → logprob: -2.50180721282959
    3. '    
' → logprob: -3.62680721282959
    4. '```' → logprob: -6.00180721282959
    5. ' 
' → logprob: -6.75180721282959
    6. ',' → logprob: -6.87680721282959
    7. '  
' → logprob: -7.12680721282959
    8. '

' → logprob: -7.25180721282959
    9. ':' → logprob: -7.25180721282959
    10. '\n' → logprob: -7.37680721282959

Token 29: ' Coin' (ID: 35089)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.831794261932373
    2. ' Bank' → logprob: -1.081794261932373
    3. ' Coin' → logprob: -2.206794261932373
    4. ' Currency' → logprob: -3.206794261932373
    5. ' ' → logprob: -3.831794261932373
    6. ' Cash' → logprob: -4.331794261932373
    7. ' Money' → logprob: -4.956794261932373
    8. ' Token' → logprob: -5.331794261932373
    9. 'Coin' → logprob: -5.456794261932373
    10. ' Space' → logprob: -5.706794261932373

Token 30: 'Set' (ID: 1984)
  Prédit: 'Den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Den' → logprob: -0.06313317269086838
    2. ':' → logprob: -2.8131332397460938
    3. 'Dem' → logprob: -7.813133239746094
    4. ' Den' → logprob: -8.313133239746094
    5. '():' → logprob: -9.813133239746094
    6. ' ' → logprob: -9.813133239746094
    7. '   ' → logprob: -10.063133239746094
    8. 'Def' → logprob: -10.063133239746094
    9. ' :' → logprob: -10.063133239746094
    10. ':
' → logprob: -10.188133239746094

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006569160032086074
    2. '(' → logprob: -7.500657081604004
    3. ' :' → logprob: -9.750657081604004
    4. '<|end|>' → logprob: -11.375657081604004
    5. '():' → logprob: -11.750657081604004
    6. '):' → logprob: -12.000657081604004
    7. '(:' → logprob: -12.375657081604004
    8. ':**' → logprob: -12.750657081604004
    9. '   ' → logprob: -13.375657081604004
    10. ':
' → logprob: -13.500657081604004

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07741214334964752
    2. '    ' → logprob: -3.5774121284484863
    3. '    
' → logprob: -3.8274121284484863
    4. ' def' → logprob: -4.827412128448486
    5. '(' → logprob: -5.452412128448486
    6. '<|end|>' → logprob: -5.452412128448486
    7. 'def' → logprob: -5.952412128448486
    8. ' 
' → logprob: -6.702412128448486
    9. '
' → logprob: -6.952412128448486
    10. '     
' → logprob: -7.327412128448486

Token 33: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.940453290939331
    2. '   ' → logprob: -1.190453290939331
    3. ' def' → logprob: -1.190453290939331
    4. '    ' → logprob: -6.69045352935791
    5. '    
' → logprob: -10.06545352935791
    6. '```' → logprob: -10.44045352935791
    7. 'de' → logprob: -11.19045352935791
    8. '	def' → logprob: -11.19045352935791
    9. ' ' → logprob: -11.81545352935791
    10. ' 
' → logprob: -12.06545352935791

Token 34: ' immutable' (ID: 111711)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3031054735183716
    2. '    ' → logprob: -2.178105354309082
    3. ' def' → logprob: -2.678105354309082
    4. 'd' → logprob: -3.553105354309082
    5. 'def' → logprob: -4.178105354309082
    6. '   ' → logprob: -4.303105354309082
    7. ' d' → logprob: -4.678105354309082
    8. '_' → logprob: -4.803105354309082
    9. ' de' → logprob: -6.678105354309082
    10. 'de' → logprob: -7.303105354309082

Token 35: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46629583835601807
    2. '(' → logprob: -1.591295838356018
    3. ':' → logprob: -2.7162957191467285
    4. '    ' → logprob: -3.7162957191467285
    5. '_' → logprob: -3.8412957191467285
    6. ' ' → logprob: -4.3412957191467285
    7. ' (' → logprob: -4.7162957191467285
    8. ' :' → logprob: -5.0912957191467285
    9. '\' → logprob: -5.2162957191467285
    10. '```' → logprob: -5.7162957191467285

Token 36: ' sorted' (ID: 20099)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34430062770843506
    2. '    ' → logprob: -1.469300627708435
    3. '   ' → logprob: -3.4693007469177246
    4. ' def' → logprob: -4.094300746917725
    5. ' coins' → logprob: -6.469300746917725
    6. ' """' → logprob: -7.094300746917725
    7. ' )' → logprob: -7.219300746917725
    8. ' None' → logprob: -7.344300746917725
    9. '    
' → logprob: -7.344300746917725
    10. '     ' → logprob: -7.344300746917725

Token 37: ' descending' (ID: 89489)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8690241575241089
    2. '[' → logprob: -2.2440242767333984
    3. '   ' → logprob: -2.6190242767333984
    4. ' =' → logprob: -2.6190242767333984
    5. ' ' → logprob: -2.6190242767333984
    6. '_' → logprob: -2.8690242767333984
    7. ':' → logprob: -2.8690242767333984
    8. '_tokens' → logprob: -2.9940242767333984
    9. '_list' → logprob: -3.1190242767333984
    10. 'coins' → logprob: -3.1190242767333984

Token 38: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21286188066005707
    2. '
' → logprob: -3.5878617763519287
    3. '_' → logprob: -3.7128617763519287
    4. '_tokens' → logprob: -3.7128617763519287
    5. ' ' → logprob: -4.087862014770508
    6. '_values' → logprob: -4.212862014770508
    7. '_list' → logprob: -4.337862014770508
    8. '\' → logprob: -4.837862014770508
    9. ',' → logprob: -4.962862014770508
    10. '    ' → logprob: -5.087862014770508

Token 39: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.010119986720383167
    2. ' coin' → logprob: -5.260119915008545
    3. 'value' → logprob: -5.510119915008545
    4. ' face' → logprob: -7.635119915008545
    5. ' denomination' → logprob: -8.635120391845703
    6. ' ' → logprob: -9.510120391845703
    7. ' self' → logprob: -10.760120391845703
    8. 'coin' → logprob: -11.635120391845703
    9. ' the' → logprob: -11.760120391845703
    10. ' ' → logprob: -11.885120391845703

Token 40: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4051801860332489
    2. '
' → logprob: -1.5301802158355713
    3. ':' → logprob: -3.7801802158355713
    4. '\' → logprob: -3.9051802158355713
    5. 's' → logprob: -4.030179977416992
    6. '```' → logprob: -4.030179977416992
    7. '\n' → logprob: -4.405179977416992
    8. '    
' → logprob: -5.030179977416992
    9. ',' → logprob: -5.405179977416992
    10. '  
' → logprob: -6.405179977416992

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15576212108135223
    2. '\' → logprob: -2.780762195587158
    3. '    
' → logprob: -3.655762195587158
    4. ' 
' → logprob: -4.530762195587158
    5. '```' → logprob: -4.655762195587158
    6. '\n' → logprob: -4.905762195587158
    7. '
' → logprob: -5.030762195587158
    8. ':' → logprob: -5.155762195587158
    9. '   
' → logprob: -5.405762195587158
    10. '    ' → logprob: -6.280762195587158

Token 42: ' _' (ID: 1175)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9093335866928101
    2. 'coins' → logprob: -1.03433358669281
    3. ' coins' → logprob: -2.5343337059020996
    4. ' def' → logprob: -2.5343337059020996
    5. '    ' → logprob: -4.0343337059021
    6. 'coin' → logprob: -4.1593337059021
    7. 'def' → logprob: -4.2843337059021
    8. ' coin' → logprob: -4.5343337059021
    9. ' ' → logprob: -4.5343337059021
    10. 'co' → logprob: -6.1593337059021

Token 43: 'den' (ID: 1660)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.8044065237045288
    2. 'coin' → logprob: -1.1794065237045288
    3. 'den' → logprob: -1.6794065237045288
    4. '_coin' → logprob: -3.6794066429138184
    5. '_den' → logprob: -4.429406642913818
    6. 'values' → logprob: -4.679406642913818
    7. '_co' → logprob: -5.554406642913818
    8. 'CO' → logprob: -6.054406642913818
    9. ' denominations' → logprob: -6.804406642913818
    10. 'DEN' → logprob: -7.054406642913818

Token 44: 'ominations' (ID: 169517)
  Prédit: 'ominations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ominations' → logprob: -3.547789674485102e-05
    2. 'omination' → logprob: -10.625035285949707
    3. 'om' → logprob: -12.500035285949707
    4. 'omin' → logprob: -12.875035285949707
    5. 'ominated' → logprob: -13.250035285949707
    6. 'oms' → logprob: -13.875035285949707
    7. 'omi' → logprob: -14.625035285949707
    8. '_' → logprob: -14.750035285949707
    9. '```' → logprob: -15.250035285949707
    10. '   ' → logprob: -15.250035285949707

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004671730101108551
    2. '=' → logprob: -5.379671573638916
    3. ':' → logprob: -10.754672050476074
    4. ' ' → logprob: -11.379672050476074
    5. '  ' → logprob: -12.254672050476074
    6. '=[]' → logprob: -12.504672050476074
    7. ' :' → logprob: -13.129672050476074
    8. ')' → logprob: -13.379672050476074
    9. '[:]' → logprob: -13.504672050476074
    10. '   ' → logprob: -13.629672050476074

Token 46: ' [
' (ID: 4240)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.12278001010417938
    2. '[' → logprob: -2.2477800846099854
    3. ' [
' → logprob: -4.747779846191406
    4. '[
' → logprob: -7.622779846191406
    5. ' []' → logprob: -7.622779846191406
    6. ' ' → logprob: -8.997779846191406
    7. '[]' → logprob: -9.872779846191406
    8. ' [

' → logprob: -9.997779846191406
    9. '   ' → logprob: -10.622779846191406
    10. '  ' → logprob: -13.247779846191406

Token 47: '       ' (ID: 309)
  Prédit: 'Coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' → logprob: -0.0822019875049591
    2. '       ' → logprob: -2.5822019577026367
    3. ' Coin' → logprob: -6.207201957702637
    4. '   ' → logprob: -6.832201957702637
    5. '           ' → logprob: -8.707201957702637
    6. 'Coins' → logprob: -11.332201957702637
    7. '```' → logprob: -11.957201957702637
    8. '_coin' → logprob: -12.082201957702637
    9. '               ' → logprob: -12.707201957702637
    10. 'C' → logprob: -12.832201957702637

Token 48: ' Coin' (ID: 35089)
  Prédit: 'Coin'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' (adapté à ' Coin') → logprob: -0.00035870319698005915
    2. '       ' → logprob: -9.000358581542969
    3. ' Coin' → logprob: -9.000358581542969
    4. '   ' → logprob: -9.375358581542969
    5. '           ' → logprob: -10.750358581542969
    6. 'Coins' → logprob: -13.125358581542969
    7. ' ' → logprob: -14.375358581542969
    8. '               ' → logprob: -14.500358581542969
    9. '```' → logprob: -15.125358581542969
    10. '    ' → logprob: -15.375358581542969

Token 49: 'Den' (ID: 22671)
  Prédit: 'Den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Den' → logprob: -2.696889623621246e-06
    2. ' Den' → logprob: -13.00000286102295
    3. 'D' → logprob: -15.50000286102295
    4. '_den' → logprob: -16.625001907348633
    5. ' denomination' → logprob: -17.500001907348633
    6. '_DEN' → logprob: -18.500001907348633
    7. 'den' → logprob: -18.625001907348633
    8. 'De' → logprob: -19.125001907348633
    9. 'DEN' → logprob: -19.250001907348633
    10. '_D' → logprob: -19.500001907348633

Token 50: 'omination' (ID: 174139)
  Prédit: 'omination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omination' → logprob: -0.0009240844519808888
    2. 'omation' → logprob: -7.375924110412598
    3. 'om' → logprob: -8.375924110412598
    4. 'ominations' → logprob: -10.625924110412598
    5. 'otation' → logprob: -10.875924110412598
    6. 'onation' → logprob: -11.375924110412598
    7. 'min' → logprob: -12.250924110412598
    8. 'ation' → logprob: -13.000924110412598
    9. 'o' → logprob: -13.625924110412598
    10. '   ' → logprob: -14.875924110412598

Token 51: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.5577775128767826e-06
    2. '(.' → logprob: -13.000005722045898
    3. '(
' → logprob: -13.125005722045898
    4. ')' → logprob: -14.875005722045898
    5. '(

' → logprob: -15.500005722045898
    6. ' (' → logprob: -15.625005722045898
    7. ')(' → logprob: -15.875005722045898
    8. '(`' → logprob: -16.5000057220459
    9. '40' → logprob: -16.7500057220459
    10. '((' → logprob: -16.8750057220459

Token 52: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.03201073035597801
    2. '25' → logprob: -4.407010555267334
    3. ' ' → logprob: -4.532010555267334
    4. '50' → logprob: -5.032010555267334
    5. '500' → logprob: -6.907010555267334
    6. '1' → logprob: -7.407010555267334
    7. '200' → logprob: -8.157011032104492
    8. '10' → logprob: -9.532011032104492
    9. '5' → logprob: -10.782011032104492
    10. '   ' → logprob: -11.157011032104492

Token 53: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013544291257858276
    2. '0' → logprob: -5.138544082641602
    3. '),' → logprob: -5.388544082641602
    4. ',)' → logprob: -6.513544082641602
    5. ',),' → logprob: -6.763544082641602
    6. '00' → logprob: -8.513544082641602
    7. ')' → logprob: -9.138544082641602
    8. ' ,' → logprob: -10.888544082641602
    9. ',),
' → logprob: -11.013544082641602
    10. '000' → logprob: -11.513544082641602

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011262495070695877
    2. '),' → logprob: -4.5112624168396
    3. ',),' → logprob: -8.886262893676758
    4. ')' → logprob: -10.011262893676758
    5. ',

' → logprob: -11.636262893676758
    6. ',)' → logprob: -11.886262893676758
    7. '),

' → logprob: -12.136262893676758
    8. '0' → logprob: -12.636262893676758
    9. ',
' → logprob: -13.136262893676758
    10. '   ' → logprob: -13.886262893676758

Token 55: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5703665018081665
    2. '"' → logprob: -0.9453665018081665
    3. ' "' → logprob: -4.070366382598877
    4. ' '' → logprob: -4.445366382598877
    5. ''"' → logprob: -5.695366382598877
    6. ''D' → logprob: -5.820366382598877
    7. ''T' → logprob: -5.945366382598877
    8. '"$' → logprob: -6.570366382598877
    9. ''M' → logprob: -7.070366382598877
    10. '"D' → logprob: -7.195366382598877

Token 56: '100' (ID: 1353)
  Prédit: 'yen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yen' → logprob: -0.716026246547699
    2. 'd' → logprob: -2.0910263061523438
    3. 'Dollar' → logprob: -2.0910263061523438
    4. 'Y' → logprob: -2.5910263061523438
    5. '"' → logprob: -3.7160263061523438
    6. 'won' → logprob: -4.091026306152344
    7. 'D' → logprob: -4.341026306152344
    8. 'KR' → logprob: -4.466026306152344
    9. 'Won' → logprob: -4.653526306152344
    10. '원' → logprob: -5.028526306152344

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014541192911565304
    2. '00' → logprob: -5.139541149139404
    3. 'yen' → logprob: -5.639541149139404
    4. '000' → logprob: -6.264541149139404
    5. 'Dollar' → logprob: -8.014541625976562
    6. ' yen' → logprob: -8.264541625976562
    7. 'Y' → logprob: -8.264541625976562
    8. 'd' → logprob: -8.514541625976562
    9. '\xe2\x82' → logprob: -8.639541625976562
    10. '-dollar' → logprob: -8.764541625976562

Token 58: '-y' (ID: 18102)
  Prédit: '원'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '원' → logprob: -0.20850344002246857
    2. '円' → logprob: -2.583503484725952
    3. '-y' → logprob: -3.583503484725952
    4. ' yen' → logprob: -3.958503484725952
    5. 'yen' → logprob: -4.083503246307373
    6. '\xe2\x82' → logprob: -4.708503246307373
    7. '¥' → logprob: -5.083503246307373
    8. '-' → logprob: -5.458503246307373
    9. ' Yen' → logprob: -5.458503246307373
    10. ' 원' → logprob: -5.833503246307373

Token 59: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.000601169012952596
    2. 'e' → logprob: -8.375600814819336
    3. 'ен' → logprob: -8.375600814819336
    4. '```' → logprob: -9.750600814819336
    5. 'е' → logprob: -11.625600814819336
    6. ' ' → logprob: -11.938100814819336
    7. '円' → logprob: -12.563100814819336
    8. 'een' → logprob: -12.813100814819336
    9. 'ên' → logprob: -12.875600814819336
    10. '``' → logprob: -13.063100814819336

Token 60: ' bill' (ID: 6713)
  Prédit: '"),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"),' → logprob: -1.0635379552841187
    2. ' "),' → logprob: -1.5635379552841187
    3. '")' → logprob: -2.313538074493408
    4. ' coin' → logprob: -2.438538074493408
    5. 'coin' → logprob: -2.813538074493408
    6. '"' → logprob: -3.188538074493408
    7. ' ")' → logprob: -3.688538074493408
    8. '"),
' → logprob: -3.938538074493408
    9. '"),
' → logprob: -4.188538074493408
    10. ' "),
' → logprob: -4.188538074493408

Token 61: '"),
' (ID: 8132)
  Prédit: '"),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"),' → logprob: -0.009581838734447956
    2. '"),
' → logprob: -4.759582042694092
    3. '),' → logprob: -7.634582042694092
    4. '")' → logprob: -8.009581565856934
    5. '"),
' → logprob: -9.509581565856934
    6. 's' → logprob: -10.259581565856934
    7. ')' → logprob: -11.259581565856934
    8. '"),

' → logprob: -11.384581565856934
    9. '"' → logprob: -12.009581565856934
    10. '   ' → logprob: -12.634581565856934

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012976066500414163
    2. '   ' → logprob: -9.500129699707031
    3. 'Coin' → logprob: -10.625129699707031
    4. '        ' → logprob: -11.000129699707031
    5. '           ' → logprob: -12.500129699707031
    6. '    ' → logprob: -12.625129699707031
    7. '```' → logprob: -12.750129699707031
    8. ' Coin' → logprob: -14.000129699707031
    9. '      ' → logprob: -14.125129699707031
    10. ',' → logprob: -14.625129699707031

Token 63: ' Coin' (ID: 35089)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0929819867014885
    2. 'Coin' (adapté à ' Coin') → logprob: -2.467982053756714
    3. '   ' → logprob: -6.092981815338135
    4. ' Coin' → logprob: -6.467981815338135
    5. '           ' → logprob: -8.842982292175293
    6. ' ' → logprob: -11.092982292175293
    7. '    ' → logprob: -11.217982292175293
    8. '        ' → logprob: -11.217982292175293
    9. '```' → logprob: -11.467982292175293
    10. '      ' → logprob: -12.342982292175293

Token 64: 'Den' (ID: 22671)
  Prédit: 'Den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Den' → logprob: -3.8889261304575484e-06
    2. ' denomination' → logprob: -12.875003814697266
    3. 'den' → logprob: -14.750003814697266
    4. ' Den' → logprob: -14.875003814697266
    5. '_den' → logprob: -15.250003814697266
    6. '-den' → logprob: -15.375003814697266
    7. 'Nom' → logprob: -17.625003814697266
    8. 'ation' → logprob: -18.125003814697266
    9. '_DEN' → logprob: -18.625003814697266
    10. 'omination' → logprob: -19.125003814697266

Token 65: 'omination' (ID: 174139)
  Prédit: 'omination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omination' → logprob: -0.00019495772721711546
    2. 'Nom' → logprob: -9.250194549560547
    3. 'om' → logprob: -10.375194549560547
    4. 'onation' → logprob: -10.500194549560547
    5. 'ominations' → logprob: -10.625194549560547
    6. 'otation' → logprob: -12.250194549560547
    7. 'nom' → logprob: -12.375194549560547
    8. 'omation' → logprob: -13.125194549560547
    9. 'Den' → logprob: -13.500194549560547
    10. 'o' → logprob: -13.625194549560547

Token 66: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. ' (' → logprob: -15.375
    3. '(
' → logprob: -17.5
    4. '(

' → logprob: -20.0
    5. '(int' → logprob: -20.75
    6. ' ' → logprob: -20.75
    7. '\(' → logprob: -21.125
    8. '(None' → logprob: -21.375
    9. '()' → logprob: -21.5
    10. '100' → logprob: -21.625

Token 67: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.021093206480145454
    2. ' ' → logprob: -3.8960931301116943
    3. '5' → logprob: -7.771093368530273
    4. '  ' → logprob: -9.646093368530273
    5. '50' → logprob: -9.896093368530273
    6. '   ' → logprob: -12.146093368530273
    7. '100' → logprob: -13.021093368530273
    8. '525' → logprob: -13.396093368530273
    9. '600' → logprob: -13.896093368530273
    10. '700' → logprob: -14.521093368530273

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030078491545282304
    2. '0' → logprob: -8.375300407409668
    3. ' ,' → logprob: -9.750300407409668
    4. ')' → logprob: -12.125300407409668
    5. '00' → logprob: -12.250300407409668
    6. '),' → logprob: -14.375300407409668
    7. '000' → logprob: -14.875300407409668
    8. '   ' → logprob: -15.625300407409668
    9. ',)' → logprob: -15.750300407409668
    10. ' ' → logprob: -15.875300407409668

Token 69: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.20755557715892792
    2. '"' → logprob: -1.7075555324554443
    3. ' ' → logprob: -5.707555770874023
    4. ')' → logprob: -6.207555770874023
    5. '<|end|>' → logprob: -8.207555770874023
    6. '500' → logprob: -8.957555770874023
    7. ' coin' → logprob: -9.457555770874023
    8. ' )' → logprob: -9.582555770874023
    9. '"value' → logprob: -9.707555770874023
    10. '0' → logprob: -11.207555770874023

Token 70: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.5041714310646057
    2. 'coin' → logprob: -1.254171371459961
    3. '"' → logprob: -2.879171371459961
    4. ' ' → logprob: -3.254171371459961
    5. ' coin' → logprob: -4.379171371459961
    6. '50' → logprob: -6.379171371459961
    7. ' "' → logprob: -7.629171371459961
    8. '5' → logprob: -8.379171371459961
    9. 'yen' → logprob: -8.629171371459961
    10. 'half' → logprob: -8.879171371459961

Token 71: '-y' (ID: 18102)
  Prédit: '-y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-y' → logprob: -0.02326551079750061
    2. ' -' → logprob: -4.523265361785889
    3. '-' → logprob: -4.648265361785889
    4. 'yen' → logprob: -6.398265361785889
    5. ' ' → logprob: -7.523265361785889
    6. ' yen' → logprob: -8.148265838623047
    7. '   ' → logprob: -10.398265838623047
    8. '円' → logprob: -11.273265838623047
    9. '  ' → logprob: -12.023265838623047
    10. '0' → logprob: -12.023265838623047

Token 72: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.30223605036735535
    2. 'yen' → logprob: -2.0522360801696777
    3. '-y' → logprob: -2.3022360801696777
    4. '-en' → logprob: -3.8022360801696777
    5. ' yen' → logprob: -4.802236080169678
    6. '0' → logprob: -7.927236080169678
    7. '   ' → logprob: -7.927236080169678
    8. '-' → logprob: -8.17723560333252
    9. '円' → logprob: -8.42723560333252
    10. ' -' → logprob: -8.80223560333252

Token 73: ' coin' (ID: 22179)
  Prédit: ' coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.0003167545364703983
    2. 'coin' → logprob: -8.625316619873047
    3. ' ' → logprob: -9.000316619873047
    4. ' ' → logprob: -12.500316619873047
    5. '   ' → logprob: -12.625316619873047
    6. '　' → logprob: -13.750316619873047
    7. '  ' → logprob: -14.000316619873047
    8. '_coin' → logprob: -14.000316619873047
    9. ' coins' → logprob: -14.125316619873047
    10. ' "),' → logprob: -14.375316619873047

Token 74: '"),
' (ID: 8132)
  Prédit: '"),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"),' → logprob: -0.013335166499018669
    2. '),' → logprob: -4.888335227966309
    3. '"),
' → logprob: -5.763335227966309
    4. '")' → logprob: -6.138335227966309
    5. ')' → logprob: -7.888335227966309
    6. '   ' → logprob: -11.388335227966309
    7. '"),
' → logprob: -11.638335227966309
    8. ' "),' → logprob: -12.263335227966309
    9. '"),

' → logprob: -12.513335227966309
    10. '”),' → logprob: -12.888335227966309

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024406595912296325
    2. '   ' → logprob: -8.500244140625
    3. 'Coin' → logprob: -10.750244140625
    4. ',' → logprob: -11.750244140625
    5. ' Coin' → logprob: -12.750244140625
    6. ']' → logprob: -13.125244140625
    7. '      ' → logprob: -13.250244140625
    8. '        ' → logprob: -13.750244140625
    9. '    ' → logprob: -14.125244140625
    10. '           ' → logprob: -14.125244140625

Token 76: ' Coin' (ID: 35089)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008883172646164894
    2. 'Coin' (adapté à ' Coin') → logprob: -4.758882999420166
    3. ' Coin' → logprob: -8.758883476257324
    4. '   ' → logprob: -9.883883476257324
    5. '        ' → logprob: -10.133883476257324
    6. '```' → logprob: -12.133883476257324
    7. '           ' → logprob: -12.258883476257324
    8. ' ' → logprob: -12.758883476257324
    9. '      ' → logprob: -13.008883476257324
    10. '    ' → logprob: -14.008883476257324

Token 77: 'Den' (ID: 22671)
  Prédit: 'Den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Den' → logprob: -0.0016711341449990869
    2. 'o' → logprob: -7.126671314239502
    3. 'omination' → logprob: -7.626671314239502
    4. 'Nom' → logprob: -8.876670837402344
    5. 'ation' → logprob: -9.876670837402344
    6. ' denomination' → logprob: -10.001670837402344
    7. 'otation' → logprob: -10.751670837402344
    8. '100' → logprob: -11.376670837402344
    9. '0' → logprob: -11.501670837402344
    10. '_den' → logprob: -11.626670837402344

Token 78: 'omination' (ID: 174139)
  Prédit: 'omination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omination' → logprob: -0.0060057020746171474
    2. 'om' → logprob: -6.006005764007568
    3. 'o' → logprob: -6.631005764007568
    4. 'omin' → logprob: -7.256005764007568
    5. 'ominations' → logprob: -7.756005764007568
    6. 'ominator' → logprob: -7.756005764007568
    7. 'omi' → logprob: -8.25600528717041
    8. 'onom' → logprob: -9.00600528717041
    9. 'Nom' → logprob: -9.88100528717041
    10. 'on' → logprob: -10.00600528717041

Token 79: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.226628895296017e-06
    2. ' (' → logprob: -11.875007629394531
    3. '(
' → logprob: -16.75000762939453
    4. ')' → logprob: -18.87500762939453
    5. '<|end|>' → logprob: -19.00000762939453
    6. '(None' → logprob: -19.12500762939453
    7. '(

' → logprob: -19.25000762939453
    8. ' ' → logprob: -20.12500762939453
    9. '  ' → logprob: -20.25000762939453
    10. '(C' → logprob: -20.25000762939453

Token 80: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.007849594578146935
    2. ' ' → logprob: -4.88284969329834
    3. '50' → logprob: -9.13284969329834
    4. '200' → logprob: -9.50784969329834
    5. '1' → logprob: -10.00784969329834
    6. '250' → logprob: -12.00784969329834
    7. '   ' → logprob: -12.88284969329834
    8. '300' → logprob: -13.00784969329834
    9. '500' → logprob: -13.50784969329834
    10. '10' → logprob: -13.88284969329834

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039349604048766196
    2. ')' → logprob: -8.250393867492676
    3. '0' → logprob: -10.000393867492676
    4. '),' → logprob: -10.125393867492676
    5. '   ' → logprob: -11.125393867492676
    6. ' ,' → logprob: -11.625393867492676
    7. ',)' → logprob: -11.750393867492676
    8. '<|end|>' → logprob: -11.750393867492676
    9. ',
' → logprob: -12.250393867492676
    10. ',

' → logprob: -14.750393867492676

Token 82: ' "' (ID: 392)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19255951046943665
    2. ')' → logprob: -2.6925594806671143
    3. '<|end|>' → logprob: -2.9425594806671143
    4. ' )' → logprob: -3.6925594806671143
    5. ' "' → logprob: -3.8175594806671143
    6. '"' → logprob: -5.442559719085693
    7. ' Coin' → logprob: -7.567559719085693
    8. ' ' → logprob: -7.567559719085693
    9. '100' → logprob: -7.942559719085693
    10. '0' → logprob: -8.067559242248535

Token 83: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.4679950475692749
    2. '50' → logprob: -1.217995047569275
    3. '500' → logprob: -3.0929951667785645
    4. ' ' → logprob: -4.3429951667785645
    5. 'yen' → logprob: -4.8429951667785645
    6. 'coin' → logprob: -5.2179951667785645
    7. '"' → logprob: -5.4679951667785645
    8. '10' → logprob: -7.2179951667785645
    9. '```' → logprob: -7.7179951667785645
    10. '

' → logprob: -9.092994689941406

Token 84: '-y' (ID: 18102)
  Prédit: '-y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-y' → logprob: -0.16700536012649536
    2. '-' → logprob: -1.9170053005218506
    3. ')' → logprob: -5.91700553894043
    4. '0' → logprob: -6.41700553894043
    5. ',' → logprob: -7.29200553894043
    6. '   ' → logprob: -7.66700553894043
    7. ' -' → logprob: -8.04200553894043
    8. ' ' → logprob: -8.66700553894043
    9. 'yen' → logprob: -9.16700553894043
    10. '00' → logprob: -9.29200553894043

Token 85: 'en' (ID: 262)
  Prédit: 'yen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yen' → logprob: -0.2601006031036377
    2. '-' → logprob: -2.0101006031036377
    3. '-y' → logprob: -2.3851006031036377
    4. '   ' → logprob: -6.885100364685059
    5. ' ' → logprob: -7.760100364685059
    6. ' yen' → logprob: -7.885100364685059
    7. ' -' → logprob: -8.260100364685059
    8. '0' → logprob: -8.510100364685059
    9. 'en' → logprob: -8.510100364685059
    10. '-en' → logprob: -8.885100364685059

Token 86: ' coin' (ID: 22179)
  Prédit: ' coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.00875260028988123
    2. 'coin' → logprob: -5.258752822875977
    3. ' ' → logprob: -5.758752822875977
    4. ' ' → logprob: -8.758752822875977
    5. '"' → logprob: -9.258752822875977
    6. '-' → logprob: -10.383752822875977
    7. ')' → logprob: -10.383752822875977
    8. '_coin' → logprob: -11.258752822875977
    9. '_' → logprob: -11.883752822875977
    10. ' )' → logprob: -12.258752822875977

Token 87: '"),
' (ID: 8132)
  Prédit: '"),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"),' → logprob: -0.1340177059173584
    2. '),' → logprob: -2.1340177059173584
    3. '"),
' → logprob: -5.5090179443359375
    4. ')' → logprob: -6.5090179443359375
    5. '")' → logprob: -7.0090179443359375
    6. '   ' → logprob: -8.134017944335938
    7. '       ' → logprob: -8.759017944335938
    8. '),
' → logprob: -9.134017944335938
    9. ' "),' → logprob: -11.259017944335938
    10. '```' → logprob: -11.259017944335938

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001520695281215012
    2. '   ' → logprob: -6.62652063369751
    3. ']' → logprob: -9.126521110534668
    4. ',' → logprob: -10.501521110534668
    5. '      ' → logprob: -10.751521110534668
    6. '        ' → logprob: -11.751521110534668
    7. '```' → logprob: -12.126521110534668
    8. ' ]' → logprob: -12.376521110534668
    9. '           ' → logprob: -12.501521110534668
    10. '    ' → logprob: -12.501521110534668

Token 89: ' Coin' (ID: 35089)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031272098422050476
    2. 'Coin' (adapté à ' Coin') → logprob: -6.253127098083496
    3. '   ' → logprob: -6.753127098083496
    4. ' Coin' → logprob: -11.128127098083496
    5. '      ' → logprob: -12.378127098083496
    6. ']' → logprob: -13.128127098083496
    7. '           ' → logprob: -13.253127098083496
    8. '     ' → logprob: -13.253127098083496
    9. '```' → logprob: -13.503127098083496
    10. '    ' → logprob: -14.003127098083496

Token 90: 'Den' (ID: 22671)
  Prédit: 'Den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Den' → logprob: -2.45848218582978e-06
    2. ' Den' → logprob: -13.75000286102295
    3. ' denomination' → logprob: -14.00000286102295
    4. '_den' → logprob: -15.50000286102295
    5. 'den' → logprob: -15.62500286102295
    6. '-den' → logprob: -17.000001907348633
    7. 'Nom' → logprob: -17.500001907348633
    8. '_DEN' → logprob: -18.250001907348633
    9. ',' → logprob: -19.125001907348633
    10. 'Designation' → logprob: -19.125001907348633

Token 91: 'omination' (ID: 174139)
  Prédit: 'omination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omination' → logprob: -0.0003321281401440501
    2. 'om' → logprob: -8.62533187866211
    3. 'onation' → logprob: -10.12533187866211
    4. 'ominations' → logprob: -10.25033187866211
    5. 'omation' → logprob: -10.50033187866211
    6. 'o' → logprob: -10.87533187866211
    7. 'otation' → logprob: -11.62533187866211
    8. 'omi' → logprob: -11.87533187866211
    9. 'omin' → logprob: -12.37533187866211
    10. 'Nom' → logprob: -12.62533187866211

Token 92: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.1782583391759545e-05
    2. ' (' → logprob: -10.375031471252441
    3. '(
' → logprob: -15.125031471252441
    4. '<|end|>' → logprob: -15.875031471252441
    5. ')' → logprob: -16.750032424926758
    6. ')(' → logprob: -18.000032424926758
    7. ' ' → logprob: -18.250032424926758
    8. '(C' → logprob: -18.625032424926758
    9. '   ' → logprob: -18.625032424926758
    10. ',' → logprob: -19.000032424926758

Token 93: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.0010854477295652032
    2. ' ' → logprob: -6.87608528137207
    3. '500' → logprob: -10.37608528137207
    4. '5' → logprob: -11.25108528137207
    5. '   ' → logprob: -12.50108528137207
    6. '10' → logprob: -12.62608528137207
    7. '  ' → logprob: -14.25108528137207
    8. '５０' → logprob: -15.37608528137207
    9. '```' → logprob: -15.87608528137207
    10. '	' → logprob: -15.87608528137207

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.566264295950532e-05
    2. ')' → logprob: -9.625085830688477
    3. '),' → logprob: -12.250085830688477
    4. '   ' → logprob: -12.500085830688477
    5. '<|end|>' → logprob: -12.625085830688477
    6. '0' → logprob: -12.875085830688477
    7. ' ,' → logprob: -12.875085830688477
    8. ',
' → logprob: -13.375085830688477
    9. ',)' → logprob: -15.375085830688477
    10. '‌,' → logprob: -15.875085830688477

Token 95: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6937236189842224
    2. ' "' → logprob: -0.6937236189842224
    3. '50' → logprob: -8.193723678588867
    4. ')' → logprob: -8.693723678588867
    5. ' ' → logprob: -9.068723678588867
    6. '"C' → logprob: -12.568723678588867
    7. '")' → logprob: -13.068723678588867
    8. ''' → logprob: -13.068723678588867
    9. ' )' → logprob: -13.068723678588867
    10. ' ' → logprob: -13.318723678588867

Token 96: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.3198518753051758
    2. '"' → logprob: -1.3198518753051758
    3. ' ' → logprob: -5.069851875305176
    4. ' "' → logprob: -8.569851875305176
    5. 'coin' → logprob: -11.069851875305176
    6. '25' → logprob: -11.194851875305176
    7. ''' → logprob: -11.444851875305176
    8. '20' → logprob: -11.569851875305176
    9. '"C' → logprob: -11.694851875305176
    10. '500' → logprob: -12.194851875305176

Token 97: '-y' (ID: 18102)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09582480788230896
    2. '-y' → logprob: -2.470824718475342
    3. ')' → logprob: -6.095824718475342
    4. ',' → logprob: -6.220824718475342
    5. ' -' → logprob: -6.595824718475342
    6. '<|end|>' → logprob: -7.970824718475342
    7. ' ' → logprob: -8.4708251953125
    8. ')-' → logprob: -8.8458251953125
    9. '-,' → logprob: -9.5958251953125
    10. '-token' → logprob: -9.7208251953125

Token 98: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.01090951543301344
    2. '-en' → logprob: -4.885909557342529
    3. 'yen' → logprob: -6.385909557342529
    4. '-' → logprob: -7.010909557342529
    5. '```' → logprob: -9.010909080505371
    6. 'coin' → logprob: -9.510909080505371
    7. '   ' → logprob: -9.635909080505371
    8. '-y' → logprob: -10.010909080505371
    9. 'e' → logprob: -10.198409080505371
    10. '円' → logprob: -10.323409080505371

Token 99: ' coin' (ID: 22179)
  Prédit: ' coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.005371429491788149
    2. 'coin' → logprob: -5.255371570587158
    3. ')' → logprob: -9.88037109375
    4. '"' → logprob: -10.63037109375
    5. '_coin' → logprob: -10.88037109375
    6. '-' → logprob: -11.38037109375
    7. '")' → logprob: -11.38037109375
    8. ' ' → logprob: -12.25537109375
    9. ' ' → logprob: -12.50537109375
    10. '```' → logprob: -12.63037109375

Token 100: '"),
' (ID: 8132)
  Prédit: '"),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"),' → logprob: -0.19611282646656036
    2. '),' → logprob: -2.446112871170044
    3. '"),
' → logprob: -2.446112871170044
    4. '),
' → logprob: -6.571112632751465
    5. '       ' → logprob: -6.946112632751465
    6. '   ' → logprob: -6.946112632751465
    7. ')' → logprob: -7.071112632751465
    8. '")' → logprob: -7.446112632751465
    9. ' "),' → logprob: -11.071112632751465
    10. '"),
' → logprob: -11.196112632751465

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.9504606825648807e-05
    2. '   ' → logprob: -11.125019073486328
    3. 'Coin' → logprob: -13.000019073486328
    4. ']' → logprob: -13.750019073486328
    5. '      ' → logprob: -14.250019073486328
    6. '```' → logprob: -15.500019073486328
    7. ' Coin' → logprob: -16.125019073486328
    8. '     ' → logprob: -16.250019073486328
    9. '           ' → logprob: -16.625019073486328
    10. ' ' → logprob: -17.000019073486328

Token 102: ' Coin' (ID: 35089)
  Prédit: 'Coin'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' (adapté à ' Coin') → logprob: -0.00030841029365547
    2. '       ' → logprob: -8.7503080368042
    3. ' Coin' → logprob: -9.2503080368042
    4. '   ' → logprob: -9.8753080368042
    5. ' ' → logprob: -13.8753080368042
    6. '25' → logprob: -14.8753080368042
    7. 'Coins' → logprob: -15.1253080368042
    8. 'C' → logprob: -16.000308990478516
    9. '20' → logprob: -16.125308990478516
    10. '     ' → logprob: -16.125308990478516

Token 103: 'Den' (ID: 22671)
  Prédit: 'Den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Den' → logprob: -5.319370302458992e-06
    2. ' Den' → logprob: -12.500005722045898
    3. '_den' → logprob: -14.375005722045898
    4. ' denomination' → logprob: -15.250005722045898
    5. '   ' → logprob: -15.875005722045898
    6. 'Dem' → logprob: -16.0000057220459
    7. 'den' → logprob: -16.5000057220459
    8. ' ' → logprob: -16.8750057220459
    9. 'Coin' → logprob: -17.1250057220459
    10. 'ation' → logprob: -17.5000057220459

Token 104: 'omination' (ID: 174139)
  Prédit: 'omination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omination' → logprob: -0.0005598236457444727
    2. 'om' → logprob: -8.12555980682373
    3. 'ominations' → logprob: -8.37555980682373
    4. 'omation' → logprob: -11.12555980682373
    5. 'otation' → logprob: -11.50055980682373
    6. 'Nom' → logprob: -12.75055980682373
    7. 'onation' → logprob: -13.87555980682373
    8. 'nom' → logprob: -13.87555980682373
    9. 'o' → logprob: -14.00055980682373
    10. 'omi' → logprob: -14.00055980682373

Token 105: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.825890159234405e-05
    2. ' (' → logprob: -9.625068664550781
    3. '<|end|>' → logprob: -13.625068664550781
    4. '(
' → logprob: -15.000068664550781
    5. '(C' → logprob: -15.750068664550781
    6. '   ' → logprob: -15.875068664550781
    7. ',' → logprob: -16.50006866455078
    8. '40' → logprob: -16.75006866455078
    9. ')' → logprob: -17.00006866455078
    10. '50' → logprob: -17.50006866455078

Token 106: '10' (ID: 702)
  Prédit: '25'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '25' → logprob: -0.2594228684902191
    2. '10' → logprob: -1.5094228982925415
    3. '20' → logprob: -5.134422779083252
    4. ' ' → logprob: -6.509422779083252
    5. '5' → logprob: -10.13442325592041
    6. '   ' → logprob: -10.50942325592041
    7. '1' → logprob: -11.00942325592041
    8. '  ' → logprob: -13.63442325592041
    9. '100' → logprob: -14.63442325592041
    10. '30' → logprob: -15.63442325592041

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.251091377227567e-05
    2. ')' → logprob: -10.250042915344238
    3. '   ' → logprob: -12.750042915344238
    4. ' ,' → logprob: -13.125042915344238
    5. '<|end|>' → logprob: -14.375042915344238
    6. '),' → logprob: -14.750042915344238
    7. '0' → logprob: -14.875042915344238
    8. ',
' → logprob: -15.125042915344238
    9. '`,' → logprob: -16.125041961669922
    10. '-' → logprob: -16.250041961669922

Token 108: ' "' (ID: 392)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11367089301347733
    2. '10' → logprob: -2.238670825958252
    3. '50' → logprob: -7.863670825958252
    4. '"' → logprob: -7.988670825958252
    5. ')' → logprob: -9.23867130279541
    6. '<|end|>' → logprob: -11.48867130279541
    7. ' "' → logprob: -11.86367130279541
    8. '100' → logprob: -12.73867130279541
    9. ' )' → logprob: -13.23867130279541
    10. '0' → logprob: -14.23867130279541

Token 109: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. '１０' → logprob: -16.37502098083496
    4. '1' → logprob: -16.75002098083496
    5. '100' → logprob: -17.12502098083496
    6. '
' → logprob: -17.62502098083496
    7. '"' → logprob: -17.75002098083496
    8. '```' → logprob: -18.25002098083496
    9. '50' → logprob: -18.37502098083496
    10. '

' → logprob: -18.62502098083496

Token 110: '-y' (ID: 18102)
  Prédit: '-y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-y' → logprob: -0.23936496675014496
    2. '-' → logprob: -2.1143648624420166
    3. ' -' → logprob: -2.8643648624420166
    4. ',' → logprob: -3.8643648624420166
    5. ')' → logprob: -5.239365100860596
    6. '   ' → logprob: -5.864365100860596
    7. ' ' → logprob: -5.864365100860596
    8. ')-' → logprob: -6.739365100860596
    9. '-yard' → logprob: -7.614365100860596
    10. ',-' → logprob: -8.739364624023438

Token 111: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.10184180736541748
    2. 'yen' → logprob: -2.351841926574707
    3. 'n' → logprob: -7.476841926574707
    4. '-en' → logprob: -8.226841926574707
    5. '-y' → logprob: -8.476841926574707
    6. 'ye' → logprob: -8.851841926574707
    7. '-' → logprob: -9.101841926574707
    8. ' yen' → logprob: -9.351841926574707
    9. 'on' → logprob: -9.726841926574707
    10. 'y' → logprob: -10.351841926574707

Token 112: ' coin' (ID: 22179)
  Prédit: ' coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.007721606642007828
    2. 'coin' → logprob: -4.882721424102783
    3. ' ' → logprob: -9.757721900939941
    4. ' ' → logprob: -10.882721900939941
    5. ')' → logprob: -11.632721900939941
    6. '_coin' → logprob: -11.632721900939941
    7. '"' → logprob: -12.132721900939941
    8. '-' → logprob: -12.757721900939941
    9. '```' → logprob: -13.257721900939941
    10. '")' → logprob: -13.257721900939941

Token 113: '"),
' (ID: 8132)
  Prédit: '"),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"),' → logprob: -0.4829414486885071
    2. '"),
' → logprob: -0.9829414486885071
    3. '),' → logprob: -5.357941627502441
    4. '")' → logprob: -5.857941627502441
    5. '),
' → logprob: -7.857941627502441
    6. '   ' → logprob: -7.982941627502441
    7. ')' → logprob: -8.482941627502441
    8. 'coin' → logprob: -8.857941627502441
    9. '"),
' → logprob: -9.982941627502441
    10. '")
' → logprob: -10.732941627502441

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031294001382775605
    2. '   ' → logprob: -8.375312805175781
    3. 'Coin' → logprob: -9.625312805175781
    4. ']' → logprob: -11.375312805175781
    5. '      ' → logprob: -12.875312805175781
    6. '     ' → logprob: -14.500312805175781
    7. '```' → logprob: -14.625312805175781
    8. '        ' → logprob: -15.625312805175781
    9. '	' → logprob: -15.625312805175781
    10. '	   ' → logprob: -15.750312805175781

Token 115: ' Coin' (ID: 35089)
  Prédit: 'Coin'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' (adapté à ' Coin') → logprob: -0.00483380351215601
    2. '       ' → logprob: -5.379833698272705
    3. '   ' → logprob: -8.754834175109863
    4. ' Coin' → logprob: -10.004834175109863
    5. 'Coins' → logprob: -12.504834175109863
    6. ' ' → logprob: -13.629834175109863
    7. '

' → logprob: -13.629834175109863
    8. ']' → logprob: -14.129834175109863
    9. '	C' → logprob: -14.254834175109863
    10. '     ' → logprob: -14.254834175109863

Token 116: 'Den' (ID: 22671)
  Prédit: 'Den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Den' → logprob: -4.127333340875339e-06
    2. ' Den' → logprob: -12.875003814697266
    3. '_den' → logprob: -13.875003814697266
    4. 'Coin' → logprob: -15.125003814697266
    5. '   ' → logprob: -16.375003814697266
    6. ' denomination' → logprob: -16.375003814697266
    7. 'Dem' → logprob: -17.250003814697266
    8. '_DEN' → logprob: -17.875003814697266
    9. 'Denied' → logprob: -18.375003814697266
    10. 'den' → logprob: -18.375003814697266

Token 117: 'omination' (ID: 174139)
  Prédit: 'omination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omination' → logprob: -0.0015635426389053464
    2. 'om' → logprob: -7.251563549041748
    3. 'ominations' → logprob: -7.626563549041748
    4. 'omation' → logprob: -8.75156307220459
    5. 'otation' → logprob: -9.12656307220459
    6. 'ominator' → logprob: -10.50156307220459
    7. 'omi' → logprob: -10.75156307220459
    8. 'onation' → logprob: -10.87656307220459
    9. 'omin' → logprob: -11.62656307220459
    10. 'o' → logprob: -11.87656307220459

Token 118: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.014684110297821e-06
    2. ' (' → logprob: -11.625008583068848
    3. '(
' → logprob: -16.875009536743164
    4. '<|end|>' → logprob: -18.625009536743164
    5. '   ' → logprob: -19.000009536743164
    6. '(int' → logprob: -19.875009536743164
    7. ' ' → logprob: -20.500009536743164
    8. ')(' → logprob: -20.750009536743164
    9. '(

' → logprob: -21.375009536743164
    10. '>(' → logprob: -21.375009536743164

Token 119: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0007102862582542002
    2. '1' → logprob: -7.250710487365723
    3. ' ' → logprob: -15.375710487365723
    4. '50' → logprob: -16.875709533691406
    5. '５' → logprob: -17.375709533691406
    6. '   ' → logprob: -17.625709533691406
    7. '```' → logprob: -18.375709533691406
    8. '  ' → logprob: -18.750709533691406
    9. '

' → logprob: -18.875709533691406
    10. '25' → logprob: -19.375709533691406

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.127333340875339e-06
    2. ')' → logprob: -13.375003814697266
    3. '<|end|>' → logprob: -13.875003814697266
    4. ',
' → logprob: -14.375003814697266
    5. ' ,' → logprob: -14.750003814697266
    6. '   ' → logprob: -15.250003814697266
    7. '0' → logprob: -16.500003814697266
    8. ',

' → logprob: -16.750003814697266
    9. '‌,' → logprob: -16.875003814697266
    10. '),' → logprob: -17.000003814697266

Token 121: ' "' (ID: 392)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.7230074405670166
    2. ' ' → logprob: -0.7230074405670166
    3. ' "' → logprob: -3.8480074405670166
    4. '"' → logprob: -4.9730072021484375
    5. '50' → logprob: -7.2230072021484375
    6. '<|end|>' → logprob: -8.473007202148438
    7. ')' → logprob: -9.348007202148438
    8. ' '' → logprob: -9.973007202148438
    9. '10' → logprob: -10.973007202148438
    10. ''' → logprob: -10.973007202148438

Token 122: '5' (ID: 20)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1568196564912796
    2. '5' → logprob: -2.0318195819854736
    3. ' ' → logprob: -4.531819820404053
    4. ''' → logprob: -5.781819820404053
    5. ' "' → logprob: -8.906819343566895
    6. 'coin' → logprob: -10.656819343566895
    7. 'five' → logprob: -11.781819343566895
    8. '   ' → logprob: -12.031819343566895
    9. ')' → logprob: -12.156819343566895
    10. '```' → logprob: -12.656819343566895

Token 123: '-y' (ID: 18102)
  Prédit: '-y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-y' → logprob: -0.36742228269577026
    2. '-' → logprob: -1.242422342300415
    3. ',' → logprob: -4.242422103881836
    4. ' -' → logprob: -6.117422103881836
    5. '"-' → logprob: -7.617422103881836
    6. '   ' → logprob: -7.867422103881836
    7. '	' → logprob: -8.617422103881836
    8. ' ' → logprob: -8.742422103881836
    9. ')-' → logprob: -8.867422103881836
    10. ')' → logprob: -9.117422103881836

Token 124: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.029847560450434685
    2. 'yen' → logprob: -3.6548476219177246
    3. '-en' → logprob: -5.904847621917725
    4. '-' → logprob: -8.154847145080566
    5. '```' → logprob: -9.529847145080566
    6. ' yen' → logprob: -10.029847145080566
    7. '-y' → logprob: -10.029847145080566
    8. '   ' → logprob: -10.717347145080566
    9. 'oen' → logprob: -10.904847145080566
    10. 'ene' → logprob: -11.029847145080566

Token 125: ' coin' (ID: 22179)
  Prédit: ' coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.006991353817284107
    2. 'coin' → logprob: -5.006991386413574
    3. '-' → logprob: -9.256991386413574
    4. ' ' → logprob: -9.506991386413574
    5. ' ' → logprob: -9.756991386413574
    6. '_coin' → logprob: -11.006991386413574
    7. '"' → logprob: -11.631991386413574
    8. '```' → logprob: -12.381991386413574
    9. '.coin' → logprob: -12.506991386413574
    10. ')' → logprob: -13.131991386413574

Token 126: '"),
' (ID: 8132)
  Prédit: '"),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"),
' → logprob: -0.45184099674224854
    2. '),' → logprob: -1.5768409967422485
    3. '"),' → logprob: -2.451840877532959
    4. '),
' → logprob: -3.076840877532959
    5. ')' → logprob: -4.326840877532959
    6. '   ' → logprob: -4.826840877532959
    7. '       ' → logprob: -5.951840877532959
    8. '")' → logprob: -7.451840877532959
    9. '"),
' → logprob: -9.076841354370117
    10. ' "),
' → logprob: -10.326841354370117

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049482814967632294
    2. 'Coin' → logprob: -3.049482822418213
    3. '   ' → logprob: -7.049482822418213
    4. ' Coin' → logprob: -10.799482345581055
    5. '      ' → logprob: -13.424482345581055
    6. 'Coins' → logprob: -13.549482345581055
    7. ']' → logprob: -14.049482345581055
    8. '```' → logprob: -14.049482345581055
    9. '     ' → logprob: -14.299482345581055
    10. ' ' → logprob: -15.299482345581055

Token 128: ' Coin' (ID: 35089)
  Prédit: 'Coin'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' (adapté à ' Coin') → logprob: -0.003198273479938507
    2. '       ' → logprob: -5.878198146820068
    3. '   ' → logprob: -8.378198623657227
    4. ' Coin' → logprob: -8.753198623657227
    5. 'Coins' → logprob: -13.253198623657227
    6. ' ' → logprob: -14.378198623657227
    7. '           ' → logprob: -14.378198623657227
    8. '	C' → logprob: -14.503198623657227
    9. ']' → logprob: -14.878198623657227
    10. 'C' → logprob: -15.128198623657227

Token 129: 'Den' (ID: 22671)
  Prédit: 'Den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Den' → logprob: -4.7159857786027715e-05
    2. ' Den' → logprob: -10.500046730041504
    3. '(' → logprob: -11.750046730041504
    4. ',' → logprob: -12.250046730041504
    5. '_den' → logprob: -12.625046730041504
    6. 'Coin' → logprob: -13.500046730041504
    7. '(D' → logprob: -13.875046730041504
    8. '_D' → logprob: -15.250046730041504
    9. 'Dem' → logprob: -15.625046730041504
    10. '   ' → logprob: -16.12504768371582

Token 130: 'omination' (ID: 174139)
  Prédit: 'omination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omination' → logprob: -0.00010592726175673306
    2. 'om' → logprob: -9.625105857849121
    3. 'omation' → logprob: -11.125105857849121
    4. 'ominations' → logprob: -11.375105857849121
    5. 'Nom' → logprob: -12.375105857849121
    6. 'otation' → logprob: -12.875105857849121
    7. 'omi' → logprob: -13.125105857849121
    8. 'o' → logprob: -13.125105857849121
    9. 'onation' → logprob: -14.500105857849121
    10. 'ominator' → logprob: -14.875105857849121

Token 131: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.4121114822482923e-06
    2. ' (' → logprob: -12.750003814697266
    3. '(
' → logprob: -15.000003814697266
    4. '<|end|>' → logprob: -17.500003814697266
    5. '   ' → logprob: -19.375003814697266
    6. '(int' → logprob: -19.750003814697266
    7. '(None' → logprob: -20.000003814697266
    8. ')(' → logprob: -20.000003814697266
    9. '(

' → logprob: -20.250003814697266
    10. ')' → logprob: -20.375003814697266

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '100' → logprob: -16.125009536743164
    4. '```' → logprob: -17.000009536743164
    5. '１' → logprob: -17.000009536743164
    6. '   ' → logprob: -17.500009536743164
    7. ')' → logprob: -17.875009536743164
    8. '2' → logprob: -18.000009536743164
    9. '
' → logprob: -19.000009536743164
    10. '3' → logprob: -19.000009536743164

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.3822154111694545e-05
    2. ')' → logprob: -10.625043869018555
    3. '<|end|>' → logprob: -11.250043869018555
    4. ' ,' → logprob: -12.625043869018555
    5. ',
' → logprob: -14.000043869018555
    6. '),' → logprob: -14.375043869018555
    7. ',)' → logprob: -14.500043869018555
    8. '0' → logprob: -15.000043869018555
    9. '‌,' → logprob: -15.250043869018555
    10. ',

' → logprob: -15.625043869018555

Token 134: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.35679665207862854
    2. '"' → logprob: -1.2317966222763062
    3. '1' → logprob: -4.856796741485596
    4. ' ' → logprob: -7.981796741485596
    5. '"user' → logprob: -9.481796264648438
    6. ')' → logprob: -10.106796264648438
    7. '"value' → logprob: -10.356796264648438
    8. '```' → logprob: -11.981796264648438
    9. '"use' → logprob: -12.106796264648438
    10. ''' → logprob: -12.106796264648438

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.248469718324486e-05
    2. ' ' → logprob: -10.750022888183594
    3. 'yen' → logprob: -14.750022888183594
    4. '```' → logprob: -15.000022888183594
    5. '１' → logprob: -15.750022888183594
    6. '"' → logprob: -16.125022888183594
    7. 'coin' → logprob: -17.875022888183594
    8. 'one' → logprob: -18.125022888183594
    9. '

' → logprob: -18.500022888183594
    10. '-' → logprob: -18.625022888183594

Token 136: '-y' (ID: 18102)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6505023241043091
    2. '-y' → logprob: -0.7755023241043091
    3. ' -' → logprob: -4.1505022048950195
    4. ')-' → logprob: -7.6505022048950195
    5. ' ' → logprob: -8.15050220489502
    6. '"-' → logprob: -8.65050220489502
    7. '```' → logprob: -9.02550220489502
    8. '   ' → logprob: -9.15050220489502
    9. '-python' → logprob: -9.52550220489502
    10. ')' → logprob: -9.52550220489502

Token 137: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.00035631912760436535
    2. 'yen' → logprob: -8.500356674194336
    3. '-en' → logprob: -9.125356674194336
    4. 'e' → logprob: -11.375356674194336
    5. 'an' → logprob: -12.000356674194336
    6. 'coin' → logprob: -12.000356674194336
    7. '```' → logprob: -12.375356674194336
    8. 'on' → logprob: -13.500356674194336
    9. '-' → logprob: -13.625356674194336
    10. 'n' → logprob: -13.625356674194336

Token 138: ' coin' (ID: 22179)
  Prédit: ' coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.01866431161761284
    2. 'coin' → logprob: -4.018664360046387
    3. '_coin' → logprob: -7.893664360046387
    4. ' ' → logprob: -9.768664360046387
    5. ')' → logprob: -10.518664360046387
    6. '_' → logprob: -10.643664360046387
    7. ' ' → logprob: -11.268664360046387
    8. '-' → logprob: -12.018664360046387
    9. '"' → logprob: -12.143664360046387
    10. '.coin' → logprob: -13.268664360046387

Token 139: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4894944429397583
    2. '"),' → logprob: -1.4894944429397583
    3. '")' → logprob: -1.6144944429397583
    4. '   ' → logprob: -1.8644944429397583
    5. '),' → logprob: -2.2394943237304688
    6. '")]' → logprob: -2.9894943237304688
    7. '"),
' → logprob: -4.364494323730469
    8. ']' → logprob: -4.489494323730469
    9. ')]' → logprob: -5.114494323730469
    10. '       ' → logprob: -5.239494323730469

Token 140: '   ' (ID: 271)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12695498764514923
    2. '   ' → logprob: -2.126955032348633
    3. ' ]' → logprob: -10.626955032348633
    4. ')' → logprob: -13.876955032348633
    5. '}' → logprob: -14.001955032348633
    6. ']
' → logprob: -15.126955032348633
    7. '       ' → logprob: -15.251955032348633
    8. ' ' → logprob: -15.626955032348633
    9. ']

' → logprob: -16.376955032348633
    10. '  ' → logprob: -16.751955032348633

Token 141: ' ]

' (ID: 32229)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.313314952421933e-05
    2. '   ' → logprob: -9.875062942504883
    3. ' ]' → logprob: -11.500062942504883
    4. ']

' (adapté à ' ]

') → logprob: -13.750062942504883
    5. ']
' → logprob: -15.250062942504883
    6. ' ' → logprob: -16.250062942504883
    7. '}' → logprob: -16.625062942504883
    8. ')' → logprob: -16.750062942504883
    9. ',' → logprob: -17.375062942504883
    10. '],' → logprob: -18.000062942504883

Token 142: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16299256682395935
    2. '   ' → logprob: -2.287992477416992
    3. 'def' → logprob: -3.537992477416992
    4. '    
' → logprob: -4.412992477416992
    5. ' def' → logprob: -6.162992477416992
    6. '<|end|>' → logprob: -6.162992477416992
    7. '```' → logprob: -7.412992477416992
    8. ' 
' → logprob: -7.662992477416992
    9. ')' → logprob: -7.787992477416992
    10. ' ' → logprob: -7.912992477416992

Token 143: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08983248472213745
    2. '@' (adapté à ' @') → logprob: -2.5898325443267822
    3. ' def' → logprob: -4.714832305908203
    4. '   ' → logprob: -6.464832305908203
    5. ' @' → logprob: -7.964832305908203
    6. ' ' → logprob: -11.964832305908203
    7. ')' → logprob: -12.089832305908203
    8. '@property' → logprob: -13.839832305908203
    9. 'classmethod' → logprob: -13.839832305908203
    10. '  ' → logprob: -14.339832305908203

Token 144: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -0.554990828037262
    2. 'property' → logprob: -1.0549907684326172
    3. 'staticmethod' → logprob: -2.554990768432617
    4. 'class' → logprob: -10.804990768432617
    5. 'dat' → logprob: -11.679990768432617
    6. 'static' → logprob: -13.804990768432617
    7. 'pro' → logprob: -13.804990768432617
    8. '@property' → logprob: -14.179990768432617
    9. ' property' → logprob: -15.054990768432617
    10. 'prop' → logprob: -15.054990768432617

Token 145: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.802322268486023
    2. 'def' → logprob: -1.302322268486023
    3. ' def' → logprob: -1.802322268486023
    4. '   ' → logprob: -2.1773223876953125
    5. '    
' → logprob: -7.3023223876953125
    6. '<|end|>' → logprob: -8.552322387695312
    7. '  
' → logprob: -8.802322387695312
    8. ' 
' → logprob: -8.927322387695312
    9. ' ' → logprob: -9.177322387695312
    10. '	def' → logprob: -9.302322387695312

Token 146: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08364363759756088
    2. '
' → logprob: -3.083643674850464
    3. ' def' → logprob: -3.458643674850464
    4. '   ' → logprob: -5.833643436431885
    5. '    
' → logprob: -10.958643913269043
    6. '	def' → logprob: -11.458643913269043
    7. ' 
' → logprob: -12.083643913269043
    8. '
' → logprob: -12.458643913269043
    9. ' ' → logprob: -12.833643913269043
    10. '  
' → logprob: -12.958643913269043

Token 147: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.9385402993066236e-05
    2. ' def' → logprob: -10.875019073486328
    3. '
' → logprob: -15.500019073486328
    4. 'de' → logprob: -16.500019073486328
    5. 'd' → logprob: -17.375019073486328
    6. 'classmethod' → logprob: -18.000019073486328
    7. 'property' → logprob: -18.125019073486328
    8. 'get' → logprob: -18.125019073486328
    9. 'staticmethod' → logprob: -18.500019073486328
    10. 'define' → logprob: -19.250019073486328

Token 148: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.22837267816066742
    2. 'get' → logprob: -1.6033726930618286
    3. ' denominations' → logprob: -6.853372573852539
    4. ' calculate' → logprob: -7.728372573852539
    5. ' coins' → logprob: -8.853372573852539
    6. '_get' → logprob: -8.978372573852539
    7. ' coin' → logprob: -9.103372573852539
    8. ' list' → logprob: -9.228372573852539
    9. ' values' → logprob: -9.228372573852539
    10. ' find' → logprob: -9.353372573852539

Token 149: '_min' (ID: 15950)
  Prédit: '_den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_den' → logprob: -0.7011317014694214
    2. '_change' → logprob: -1.4511317014694214
    3. '_all' → logprob: -2.826131820678711
    4. '_best' → logprob: -3.076131820678711
    5. '_coin' → logprob: -3.451131820678711
    6. '_opt' → logprob: -3.576131820678711
    7. '_amount' → logprob: -3.701131820678711
    8. '_d' → logprob: -4.326131820678711
    9. '_co' → logprob: -4.451131820678711
    10. '_available' → logprob: -4.576131820678711

Token 150: 'imum' (ID: 4556)
  Prédit: '_coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coin' → logprob: -0.683333694934845
    2. '_co' → logprob: -1.8083336353302002
    3. '_' → logprob: -2.3083336353302
    4. 'imum' → logprob: -2.4333336353302
    5. '_change' → logprob: -2.8083336353302
    6. 'imal' → logprob: -2.9333336353302
    7. '_break' → logprob: -5.433333873748779
    8. '_d' → logprob: -5.808333873748779
    9. '_required' → logprob: -6.183333873748779
    10. '_count' → logprob: -6.183333873748779

Token 151: '_co' (ID: 21102)
  Prédit: '_change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_change' → logprob: -0.21607041358947754
    2. '_coin' → logprob: -2.3410704135894775
    3. '_co' → logprob: -2.4660704135894775
    4. '_' → logprob: -4.966070175170898
    5. '_amount' → logprob: -5.841070175170898
    6. '_count' → logprob: -6.966070175170898
    7. '_payment' → logprob: -7.341070175170898
    8. '_changes' → logprob: -7.841070175170898
    9. '_number' → logprob: -8.091070175170898
    10. '_exchange' → logprob: -8.216070175170898

Token 152: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.08410459011793137
    2. 'in' → logprob: -2.584104537963867
    3. 'unt' → logprob: -5.584104537963867
    4. 'unts' → logprob: -6.709104537963867
    5. 'i' → logprob: -9.959104537963867
    6. 'int' → logprob: -10.459104537963867
    7. 'un' → logprob: -10.834104537963867
    8. 'uns' → logprob: -10.834104537963867
    9. '

' → logprob: -11.334104537963867
    10. 'ints' → logprob: -11.459104537963867

Token 153: '_change' (ID: 36082)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.00034988581319339573
    2. '(' → logprob: -8.000349998474121
    3. '(
' → logprob: -12.375349998474121
    4. '   ' → logprob: -12.875349998474121
    5. '_amount' → logprob: -13.125349998474121
    6. 'cls' → logprob: -13.500349998474121
    7. '(self' → logprob: -13.875349998474121
    8. ' (' → logprob: -13.875349998474121
    9. 'amount' → logprob: -14.375349998474121
    10. '(clazz' → logprob: -14.875349998474121

Token 154: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.002473516622558236
    2. '(' → logprob: -6.1274733543396
    3. '_amount' → logprob: -8.627473831176758
    4. '(amount' → logprob: -9.502473831176758
    5. 'amount' → logprob: -11.377473831176758
    6. '(
' → logprob: -11.752473831176758
    7. 'cls' → logprob: -12.502473831176758
    8. '(self' → logprob: -12.627473831176758
    9. '   ' → logprob: -13.127473831176758
    10. ' (' → logprob: -13.502473831176758

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007542853709310293
    2. '(amount' → logprob: -5.007543087005615
    3. ' ,' → logprob: -7.507543087005615
    4. 'amount' → logprob: -9.257542610168457
    5. '   ' → logprob: -10.007542610168457
    6. ')' → logprob: -10.007542610168457
    7. '(' → logprob: -10.507542610168457
    8. ',value' → logprob: -10.757542610168457
    9. '(cls' → logprob: -11.257542610168457
    10. '(value' → logprob: -12.007542610168457

Token 156: ' change' (ID: 3343)
  Prédit: ' amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' amount' → logprob: -0.5774211287498474
    2. 'amount' → logprob: -0.8274211287498474
    3. 'cls' → logprob: -7.827421188354492
    4. 'change' → logprob: -8.077421188354492
    5. ' change' → logprob: -8.327421188354492
    6. ' cls' → logprob: -8.577421188354492
    7. 'total' → logprob: -9.702421188354492
    8. 'price' → logprob: -10.077421188354492
    9. 'cost' → logprob: -10.202421188354492
    10. ' cost' → logprob: -10.452421188354492

Token 157: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11310968548059464
    2. '_amount' → logprob: -2.613109588623047
    3. ',' → logprob: -3.863109588623047
    4. '):
' → logprob: -5.238109588623047
    5. '   ' → logprob: -5.738109588623047
    6. 'amount' → logprob: -6.363109588623047
    7. ':' → logprob: -7.113109588623047
    8. ')' → logprob: -7.363109588623047
    9. ' ):' → logprob: -7.488109588623047
    10. '_amt' → logprob: -9.488109588623047

Token 158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28616470098495483
    2. ':' → logprob: -1.7861647605895996
    3. '(' → logprob: -3.1611647605895996
    4. '):' → logprob: -3.6611647605895996
    5. '(cls' → logprob: -4.6611647605896
    6. ',' → logprob: -6.5361647605896
    7. '   ' → logprob: -6.7861647605896
    8. '(self' → logprob: -8.036164283752441
    9. ')' → logprob: -8.161164283752441
    10. '():' → logprob: -8.411164283752441

Token 159: ' #' (ID: 1069)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -1.1340521574020386
    2. 'result' → logprob: -1.2590521574020386
    3. '       ' → logprob: -1.3840521574020386
    4. 'count' → logprob: -2.884052276611328
    5. ' result' → logprob: -3.509052276611328
    6. ' coins' → logprob: -3.634052276611328
    7. 'counts' → logprob: -3.884052276611328
    8. 'amount' → logprob: -5.634052276611328
    9. 'change' → logprob: -6.259052276611328
    10. 'coin' → logprob: -6.634052276611328

Token 160: ' returns' (ID: 7377)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.9559817314147949
    2. 'result' → logprob: -1.455981731414795
    3. ' coins' → logprob: -1.705981731414795
    4. 'coins' → logprob: -1.705981731414795
    5. 'counts' → logprob: -5.330981731414795
    6. 'count' → logprob: -5.455981731414795
    7. 'remaining' → logprob: -5.830981731414795
    8. ' counts' → logprob: -5.830981731414795
    9. 'amount' → logprob: -6.830981731414795
    10. ' remaining' → logprob: -7.080981731414795

Token 161: ' dict' (ID: 11878)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.658737063407898
    2. '{' → logprob: -1.283737063407898
    3. ' {}' → logprob: -2.1587371826171875
    4. '{}' → logprob: -2.5337371826171875
    5. ' []' → logprob: -5.6587371826171875
    6. '[' → logprob: -5.9087371826171875
    7. '[]' → logprob: -6.5337371826171875
    8. ' [' → logprob: -7.1587371826171875
    9. ' a' → logprob: -7.5337371826171875
    10. ' None' → logprob: -7.9087371826171875

Token 162: ' {' (ID: 354)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 163: 'den' (ID: 1660)
  Prédit: 'Coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' → logprob: -0.36609405279159546
    2. 'den' → logprob: -1.7410941123962402
    3. ' denomination' → logprob: -2.6160941123962402
    4. 'coin' → logprob: -3.6160941123962402
    5. ' Coin' → logprob: -4.11609411239624
    6. 'cls' → logprob: -5.24109411239624
    7. '           ' → logprob: -5.74109411239624
    8. ' coin' → logprob: -6.11609411239624
    9. ' denom' → logprob: -6.24109411239624
    10. 'd' → logprob: -7.99109411239624

Token 164: 'omination' (ID: 174139)
  Prédit: 'omination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omination' → logprob: -0.0030908435583114624
    2. 'om' → logprob: -5.878090858459473
    3. 'ominations' → logprob: -9.003090858459473
    4. '       ' → logprob: -10.003090858459473
    5. 'ominator' → logprob: -10.378090858459473
    6. '           ' → logprob: -10.628090858459473
    7. 'omation' → logprob: -11.753090858459473
    8. '        ' → logprob: -11.753090858459473
    9. '   ' → logprob: -11.878090858459473
    10. 'Coin' → logprob: -12.003090858459473

Token 165: '_value' (ID: 6734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10396701842546463
    2. '.value' → logprob: -2.3539669513702393
    3. 'value' → logprob: -6.353967189788818
    4. ' :' → logprob: -6.728967189788818
    5. ':value' → logprob: -7.978967189788818
    6. ',' → logprob: -8.72896671295166
    7. '.' → logprob: -9.22896671295166
    8. '_value' → logprob: -9.60396671295166
    9. ' value' → logprob: -10.60396671295166
    10. '   ' → logprob: -10.72896671295166

Token 166: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012876172550022602
    2. ' :' → logprob: -7.001287460327148
    3. ':int' → logprob: -8.001287460327148
    4. ':value' → logprob: -11.376287460327148
    5. ':return' → logprob: -11.376287460327148
    6. ',' → logprob: -12.126287460327148
    7. '   ' → logprob: -12.876287460327148
    8. '       ' → logprob: -13.626287460327148
    9. ':number' → logprob: -13.751287460327148
    10. ':def' → logprob: -14.376287460327148

Token 167: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.41449761390686035
    2. ' count' → logprob: -1.1644976139068604
    3. 'quantity' → logprob: -4.789497375488281
    4. 'number' → logprob: -4.789497375488281
    5. ' number' → logprob: -5.039497375488281
    6. ' quantity' → logprob: -5.664497375488281
    7. 'coin' → logprob: -8.039497375488281
    8. ' coin' → logprob: -8.914497375488281
    9. 'num' → logprob: -9.289497375488281
    10. 'amount' → logprob: -9.789497375488281

Token 168: '}' (ID: 92)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4299326241016388
    2. '}' → logprob: -1.0549325942993164
    3. ' }' → logprob: -7.429932594299316
    4. '       ' → logprob: -8.304932594299316
    5. '}:' → logprob: -8.554932594299316
    6. '   ' → logprob: -8.929932594299316
    7. ' ,' → logprob: -10.429932594299316
    8. ')' → logprob: -11.554932594299316
    9. ',
' → logprob: -11.929932594299316
    10. '},' → logprob: -12.304932594299316

Token 169: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3157520890235901
    2. '       ' → logprob: -1.3157520294189453
    3. ':
' → logprob: -6.815752029418945
    4. ',' → logprob: -7.815752029418945
    5. '):' → logprob: -8.065752029418945
    6. '   ' → logprob: -8.315752029418945
    7. ' :' → logprob: -9.065752029418945
    8. '        
' → logprob: -9.440752029418945
    9. '<|end|>' → logprob: -9.565752029418945
    10. '
' → logprob: -10.190752029418945

Token 170: ' minimal' (ID: 19957)
  Prédit: ' change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' change' → logprob: -1.0659866333007812
    2. ' coin' → logprob: -1.5659866333007812
    3. ' making' → logprob: -1.8159866333007812
    4. ' the' → logprob: -2.0659866333007812
    5. ' given' → logprob: -2.6909866333007812
    6. ' amount' → logprob: -2.9409866333007812
    7. 'change' → logprob: -4.690986633300781
    8. ' calculating' → logprob: -5.565986633300781
    9. ' each' → logprob: -5.690986633300781
    10. ' cls' → logprob: -5.940986633300781

Token 171: ' number' (ID: 2086)
  Prédit: ' coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coins' → logprob: -0.4697902202606201
    2. 'coins' → logprob: -1.4697902202606201
    3. ' coin' → logprob: -3.09479022026062
    4. ' ' → logprob: -3.34479022026062
    5. ' change' → logprob: -3.84479022026062
    6. '_' → logprob: -4.969790458679199
    7. '   ' → logprob: -5.219790458679199
    8. 'change' → logprob: -5.344790458679199
    9. '_co' → logprob: -5.344790458679199
    10. 'coin' → logprob: -5.344790458679199

Token 172: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5580694675445557
    2. ' of' → logprob: -1.0580694675445557
    3. '   ' → logprob: -3.3080694675445557
    4. 'of' → logprob: -4.308069229125977
    5. ':' → logprob: -5.308069229125977
    6. '    ' → logprob: -5.558069229125977
    7. '<|end|>' → logprob: -5.683069229125977
    8. '        ' → logprob: -5.808069229125977
    9. '_of' → logprob: -5.808069229125977
    10. '_' → logprob: -5.808069229125977

Token 173: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.5233703851699829
    2. ' coins' → logprob: -0.8983703851699829
    3. ' ' → logprob: -9.773370742797852
    4. '   ' → logprob: -10.023370742797852
    5. '```' → logprob: -10.023370742797852
    6. 'Coins' → logprob: -10.898370742797852
    7. 'change' → logprob: -11.148370742797852
    8. ' change' → logprob: -11.523370742797852
    9. '_co' → logprob: -11.648370742797852
    10. 'coin' → logprob: -11.773370742797852

Token 174: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25433021783828735
    2. ':' → logprob: -1.5043301582336426
    3. '   ' → logprob: -7.004330158233643
    4. '):' → logprob: -7.254330158233643
    5. ',' → logprob: -7.754330158233643
    6. ':
' → logprob: -9.2543306350708
    7. ' :' → logprob: -9.6293306350708
    8. '    ' → logprob: -10.2543306350708
    9. '        
' → logprob: -10.2543306350708
    10. '      ' → logprob: -10.5043306350708

Token 175: ' make' (ID: 1520)
  Prédit: 'give'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'give' → logprob: -0.5410833954811096
    2. 'make' → logprob: -1.7910833358764648
    3. ' give' → logprob: -2.291083335876465
    4. ' make' → logprob: -3.041083335876465
    5. 'return' → logprob: -3.291083335876465
    6. 'pay' → logprob: -4.166083335876465
    7. ' pay' → logprob: -4.416083335876465
    8. ' provide' → logprob: -4.541083335876465
    9. ' return' → logprob: -4.916083335876465
    10. 'provide' → logprob: -4.916083335876465

Token 176: ' given' (ID: 4335)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.841403067111969
    2. ' change' → logprob: -0.966403067111969
    3. 'change' → logprob: -1.7164030075073242
    4. '        ' → logprob: -5.466403007507324
    5. '_change' → logprob: -5.966403007507324
    6. '    ' → logprob: -7.591403007507324
    7. ' up' → logprob: -7.716403007507324
    8. ' the' → logprob: -8.341403007507324
    9. '   ' → logprob: -8.716403007507324
    10. ' use' → logprob: -9.216403007507324

Token 177: ' change' (ID: 3343)
  Prédit: ' change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' change' → logprob: -0.25893357396125793
    2. 'change' → logprob: -1.5089335441589355
    3. ' amount' → logprob: -5.7589335441589355
    4. 'amount' → logprob: -6.3839335441589355
    5. ' ' → logprob: -6.8839335441589355
    6. '_change' → logprob: -7.1339335441589355
    7. '	change' → logprob: -9.883934020996094
    8. '   ' → logprob: -10.008934020996094
    9. '_amount' → logprob: -10.133934020996094
    10. '  ' → logprob: -10.508934020996094

Token 178: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.526190996170044
    2. '       ' → logprob: -0.901190996170044
    3. '):' → logprob: -6.276190757751465
    4. ',' → logprob: -7.651190757751465
    5. ':
' → logprob: -7.901190757751465
    6. '   ' → logprob: -8.526190757751465
    7. ')' → logprob: -10.401190757751465
    8. ' :' → logprob: -10.776190757751465
    9. '):
' → logprob: -10.901190757751465
    10. '        
' → logprob: -11.151190757751465

Token 179: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5273131132125854
    2. '       ' → logprob: -0.9023131132125854
    3. '):' → logprob: -6.402313232421875
    4. ',' → logprob: -7.027313232421875
    5. '   ' → logprob: -7.402313232421875
    6. ':
' → logprob: -7.902313232421875
    7. ')' → logprob: -8.527313232421875
    8. '        
' → logprob: -9.152313232421875
    9. ' :' → logprob: -9.277313232421875
    10. '):
' → logprob: -9.902313232421875

Token 180: ' remain' (ID: 12760)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1953953504562378
    2. 'count' → logprob: -2.6953954696655273
    3. '       ' → logprob: -3.3203954696655273
    4. 'counts' → logprob: -3.4453954696655273
    5. 'coins' → logprob: -3.4453954696655273
    6. ' result' → logprob: -4.945395469665527
    7. 'change' → logprob: -7.195395469665527
    8. 'coin' → logprob: -7.570395469665527
    9. 'remaining' → logprob: -7.820395469665527
    10. ' counts' → logprob: -8.195395469665527

Token 181: ' =' (ID: 314)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.025936786085367203
    2. '=' → logprob: -4.150936603546143
    3. ' =' → logprob: -5.275936603546143
    4. 'der' → logprob: -5.775936603546143
    5. '   ' → logprob: -7.650936603546143
    6. 'inder' → logprob: -8.0259370803833
    7. '       ' → logprob: -9.0259370803833
    8. '_' → logprob: -9.1509370803833
    9. 'd' → logprob: -9.2759370803833
    10. 's' → logprob: -9.2759370803833

Token 182: ' change' (ID: 3343)
  Prédit: ' change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' change' → logprob: -0.023247575387358665
    2. 'change' → logprob: -3.773247480392456
    3. '	change' → logprob: -13.648247718811035
    4. '(change' → logprob: -14.523247718811035
    5. ' ' → logprob: -16.64824676513672
    6. ' ' → logprob: -16.64824676513672
    7. 'int' → logprob: -17.14824676513672
    8. '_change' → logprob: -17.27324676513672
    9. '.change' → logprob: -17.77324676513672
    10. '   ' → logprob: -18.27324676513672

Token 183: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2880130410194397
    2. ',' → logprob: -1.788012981414795
    3. '       ' → logprob: -3.038012981414795
    4. ',
' → logprob: -4.288012981414795
    5. '<|end|>' → logprob: -4.913012981414795
    6. '        
' → logprob: -5.913012981414795
    7. '=' → logprob: -6.413012981414795
    8. '  
' → logprob: -6.663012981414795
    9. '        ' → logprob: -6.913012981414795
    10. ' =' → logprob: -7.038012981414795

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0042719002813100815
    2. '
' → logprob: -5.754271984100342
    3. ',' → logprob: -7.754271984100342
    4. '        
' → logprob: -8.379271507263184
    5. 'result' → logprob: -8.754271507263184
    6. '<|end|>' → logprob: -9.129271507263184
    7. 'tokens' → logprob: -10.004271507263184
    8. 'count' → logprob: -10.379271507263184
    9. 'token' → logprob: -11.379271507263184
    10. 'counts' → logprob: -11.504271507263184

Token 185: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.08850869536399841
    2. 'counts' → logprob: -2.8385086059570312
    3. 'count' → logprob: -4.338508605957031
    4. ' result' → logprob: -4.963508605957031
    5. 'coins' → logprob: -5.463508605957031
    6. 'coin' → logprob: -7.338508605957031
    7. '       ' → logprob: -7.713508605957031
    8. ' counts' → logprob: -7.713508605957031
    9. 'change' → logprob: -8.713508605957031
    10. ' coins' → logprob: -8.838508605957031

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03816795349121094
    2. '=' → logprob: -3.288167953491211
    3. '={}' → logprob: -9.038167953491211
    4. ' ={' → logprob: -13.163167953491211
    5. 's' → logprob: -13.913167953491211
    6. '=[]' → logprob: -14.413167953491211
    7. '={' → logprob: -14.413167953491211
    8. ' ' → logprob: -14.663167953491211
    9. '<|end|>' → logprob: -14.663167953491211
    10. '={}
' → logprob: -14.788167953491211

Token 187: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.018150877207517624
    2. ' {}' → logprob: -4.018150806427002
    3. '{}
' → logprob: -14.64315128326416
    4. '{' → logprob: -15.39315128326416
    5. '={}' → logprob: -15.64315128326416
    6. ' {}
' → logprob: -16.268150329589844
    7. '{}

' → logprob: -17.018150329589844
    8. '{})' → logprob: -17.268150329589844
    9. 'dict' → logprob: -17.768150329589844
    10. ' {}\' → logprob: -18.143150329589844

Token 188: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021125541999936104
    2. 'for' → logprob: -4.521125316619873
    3. ' for' → logprob: -4.771125316619873
    4. '
' → logprob: -7.271125316619873
    5. '        
' → logprob: -7.396125316619873
    6. '    
' → logprob: -9.396125793457031
    7. '   ' → logprob: -9.771125793457031
    8. '	for' → logprob: -10.896125793457031
    9. '  
' → logprob: -10.896125793457031
    10. '' → logprob: -11.271125793457031

Token 189: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.73321932554245
    2. 'for' (adapté à ' for') → logprob: -1.2332193851470947
    3. ' for' → logprob: -1.4832193851470947
    4. '
' → logprob: -7.483219146728516
    5. '        
' → logprob: -8.233219146728516
    6. '   ' → logprob: -8.858219146728516
    7. '	for' → logprob: -8.983219146728516
    8. ' 
' → logprob: -9.358219146728516
    9. '  
' → logprob: -10.108219146728516
    10. ' ' → logprob: -10.108219146728516

Token 190: ' denom' (ID: 73604)
  Prédit: ' denom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' denom' → logprob: -0.2758272588253021
    2. ' denomination' → logprob: -1.7758272886276245
    3. ' coin' → logprob: -2.775827169418335
    4. 'den' → logprob: -5.025827407836914
    5. ' d' → logprob: -7.025827407836914
    6. ' den' → logprob: -7.400827407836914
    7. 'coin' → logprob: -7.400827407836914
    8. 'd' → logprob: -7.400827407836914
    9. '   ' → logprob: -9.775827407836914
    10. ' denominator' → logprob: -11.275827407836914

Token 191: ' in' (ID: 306)
  Prédit: 'ination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ination' → logprob: -0.2560826241970062
    2. ' in' → logprob: -1.5060826539993286
    3. 'in' → logprob: -5.506082534790039
    4. 'inition' → logprob: -10.006082534790039
    5. 'INATION' → logprob: -11.131082534790039
    6. '   ' → logprob: -11.756082534790039
    7. 'inator' → logprob: -12.756082534790039
    8. 'inations' → logprob: -13.006082534790039
    9. 'ation' → logprob: -13.256082534790039
    10. '       ' → logprob: -13.506082534790039

Token 192: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.10021066665649414
    2. ' cls' → logprob: -2.350210666656494
    3. '(cls' → logprob: -12.600210189819336
    4. 'Coin' → logprob: -15.225210189819336
    5. '_cls' → logprob: -15.600210189819336
    6. 'Cls' → logprob: -16.100210189819336
    7. '.cls' → logprob: -16.475210189819336
    8. 'classmethod' → logprob: -17.475210189819336
    9. ' Coin' → logprob: -18.475210189819336
    10. '   ' → logprob: -18.725210189819336

Token 193: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -2.868328920158092e-05
    2. '.' → logprob: -10.750028610229492
    3. ' .' → logprob: -12.750028610229492
    4. '   ' → logprob: -13.500028610229492
    5. '_den' → logprob: -13.500028610229492
    6. '       ' → logprob: -15.125028610229492
    7. ']._' → logprob: -15.250028610229492
    8. ')._' → logprob: -15.500028610229492
    9. '.__' → logprob: -15.750028610229492
    10. ' ' → logprob: -15.750028610229492

Token 194: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -3.054500666621607e-06
    2. '_den' → logprob: -13.00000286102295
    3. 'd' → logprob: -15.37500286102295
    4. ' denominations' → logprob: -16.750003814697266
    5. ' den' → logprob: -17.000003814697266
    6. 'def' → logprob: -17.250003814697266
    7. '-den' → logprob: -17.250003814697266
    8. '   ' → logprob: -17.500003814697266
    9. 'dem' → logprob: -17.625003814697266
    10. 'enumer' → logprob: -17.750003814697266

Token 195: 'ominations' (ID: 169517)
  Prédit: 'ominations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ominations' → logprob: -3.4121114822482923e-06
    2. 'om' → logprob: -12.875003814697266
    3. 'omination' → logprob: -14.875003814697266
    4. 'omin' → logprob: -15.375003814697266
    5. '   ' → logprob: -16.375003814697266
    6. '_' → logprob: -16.750003814697266
    7. 'initions' → logprob: -17.375003814697266
    8. 'omi' → logprob: -17.500003814697266
    9. 'on' → logprob: -17.750003814697266
    10. 'ominated' → logprob: -17.750003814697266

Token 196: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.35837464465294e-05
    2. ' :' → logprob: -10.625043869018555
    3. ':
' → logprob: -11.250043869018555
    4. '):' → logprob: -12.500043869018555
    5. '<|end|>' → logprob: -14.125043869018555
    6. ':**' → logprob: -14.500043869018555
    7. '[:]' → logprob: -15.125043869018555
    8. ':

' → logprob: -15.875043869018555
    9. ':list' → logprob: -16.000043869018555
    10. '[' → logprob: -16.375043869018555

Token 197: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007855272851884365
    2. '       ' → logprob: -5.757855415344238
    3. ' if' → logprob: -7.007855415344238
    4. '            ' → logprob: -7.132855415344238
    5. '        ' → logprob: -7.257855415344238
    6. '<|end|>' → logprob: -7.257855415344238
    7. ':' → logprob: -7.632855415344238
    8. '[' → logprob: -8.882855415344238
    9. '            
' → logprob: -8.882855415344238
    10. '   ' → logprob: -9.257855415344238

Token 198: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.6944243907928467
    2. 'count' (adapté à ' count') → logprob: -0.6944243907928467
    3. ' if' → logprob: -6.819424629211426
    4. '           ' → logprob: -9.194424629211426
    5. 'if' → logprob: -10.069424629211426
    6. '            ' → logprob: -11.819424629211426
    7. 'cnt' → logprob: -12.194424629211426
    8. ' num' → logprob: -12.194424629211426
    9. ' cnt' → logprob: -12.569424629211426
    10. 'num' → logprob: -12.569424629211426

Token 199: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975187823176384
    2. '=' → logprob: -3.529751777648926
    3. ' ' → logprob: -14.404751777648926
    4. ',' → logprob: -14.779751777648926
    5. ' =
' → logprob: -15.529751777648926
    6. '=int' → logprob: -15.904751777648926
    7. ')' → logprob: -16.154752731323242
    8. '=count' → logprob: -17.529752731323242
    9. ' =
' → logprob: -17.904752731323242
    10. ' ' → logprob: -17.904752731323242

Token 200: ' remain' (ID: 12760)
  Prédit: ' remain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remain' → logprob: -0.003602917306125164
    2. 'remain' → logprob: -5.628602981567383
    3. ' ' → logprob: -13.003602981567383
    4. ' rem' → logprob: -15.003602981567383
    5. ' stay' → logprob: -16.128602981567383
    6. ' int' → logprob: -17.253602981567383
    7. ' remains' → logprob: -17.253602981567383
    8. ' ' → logprob: -17.378602981567383
    9. '    ' → logprob: -17.628602981567383
    10. 'rem' → logprob: -17.753602981567383

Token 201: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.00863631535321474
    2. '//' → logprob: -4.758636474609375
    3. ' ' → logprob: -11.883636474609375
    4. '//=' → logprob: -11.883636474609375
    5. ' ' → logprob: -12.383636474609375
    6. '           ' → logprob: -13.383636474609375
    7. '            ' → logprob: -14.508636474609375
    8. ')' → logprob: -15.258636474609375
    9. ' //
' → logprob: -15.383636474609375
    10. 'div' → logprob: -15.508636474609375

Token 202: ' denom' (ID: 73604)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.023262133821845055
    2. ' denom' → logprob: -3.7732620239257812
    3. ' den' → logprob: -11.023262023925781
    4. '   ' → logprob: -16.64826202392578
    5. '           ' → logprob: -16.77326202392578
    6. ' ' → logprob: -17.14826202392578
    7. 'dem' → logprob: -17.27326202392578
    8. ' denomination' → logprob: -17.64826202392578
    9. 'coin' → logprob: -17.77326202392578
    10. 'Den' → logprob: -17.77326202392578

Token 203: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.0004320996522437781
    2. 'value' → logprob: -7.750432014465332
    3. '.' → logprob: -14.125432014465332
    4. ' .' → logprob: -14.625432014465332
    5. ' value' → logprob: -15.500432014465332
    6. '"value' → logprob: -17.00043296813965
    7. ''value' → logprob: -17.12543296813965
    8. '_value' → logprob: -17.50043296813965
    9. '	value' → logprob: -18.50043296813965
    10. '```' → logprob: -18.62543296813965

Token 204: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 205: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022699201945215464
    2. '            
' → logprob: -6.627269744873047
    3. '       ' → logprob: -7.752269744873047
    4. '            ' → logprob: -8.502269744873047
    5. '<|end|>' → logprob: -8.752269744873047
    6. ' 
' → logprob: -10.377269744873047
    7. '               ' → logprob: -10.502269744873047
    8. '          ' → logprob: -11.127269744873047
    9. '
' → logprob: -11.377269744873047
    10. ' remain' → logprob: -11.752269744873047

Token 206: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.41871723532676697
    2. 'if' (adapté à ' if') → logprob: -1.1687172651290894
    3. 'remain' → logprob: -3.7937171459198
    4. ' remain' → logprob: -4.918717384338379
    5. '           ' → logprob: -6.543717384338379
    6. '            ' → logprob: -9.793717384338379
    7. '            
' → logprob: -11.668717384338379
    8. 'result' → logprob: -12.168717384338379
    9. ' 
' → logprob: -12.793717384338379
    10. ' ' → logprob: -12.918717384338379

Token 207: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.018150413408875465
    2. 'count' → logprob: -4.018150329589844
    3. '	count' → logprob: -14.768150329589844
    4. '(count' → logprob: -16.018150329589844
    5. '[count' → logprob: -18.518150329589844
    6. '$count' → logprob: -19.018150329589844
    7. ' ' → logprob: -19.018150329589844
    8. '_count' → logprob: -19.018150329589844
    9. '.count' → logprob: -19.268150329589844
    10. ' counts' → logprob: -19.393150329589844

Token 208: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.008621551096439362
    2. '>' → logprob: -4.758621692657471
    3. '<|end|>' → logprob: -12.633621215820312
    4. ' ' → logprob: -14.008621215820312
    5. ' ' → logprob: -14.133621215820312
    6. '   ' → logprob: -14.633621215820312
    7. ')>' → logprob: -14.758621215820312
    8. ':' → logprob: -14.883621215820312
    9. '<|end|>' → logprob: -15.133621215820312
    10. '           ' → logprob: -16.383621215820312

Token 209: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2014133334159851
    2. ' ' → logprob: -1.7014133930206299
    3. '```' → logprob: -17.201414108276367
    4. ' ' → logprob: -17.951414108276367
    5. '<|end|>' → logprob: -18.701414108276367
    6. '=' → logprob: -19.326414108276367
    7. '۰' → logprob: -19.826414108276367
    8. '  ' → logprob: -20.076414108276367
    9. '   ' → logprob: -20.201414108276367
    10. '
' → logprob: -20.326414108276367

Token 210: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -19.625261306762695
    4. '<|end|>' → logprob: -19.625261306762695
    5. '```' → logprob: -20.625261306762695
    6. '۰' → logprob: -20.625261306762695
    7. '  ' → logprob: -21.750261306762695
    8. 'zero' → logprob: -21.875261306762695
    9. '０' → logprob: -22.375261306762695
    10. '٠' → logprob: -22.750261306762695

Token 211: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0037680165842175484
    2. ':
' → logprob: -5.628767967224121
    3. '           ' → logprob: -9.003767967224121
    4. '               ' → logprob: -11.128767967224121
    5. ',' → logprob: -11.378767967224121
    6. '):' → logprob: -11.628767967224121
    7. '):
' → logprob: -12.753767967224121
    8. '<|end|>' → logprob: -12.878767967224121
    9. ':

' → logprob: -13.753767967224121
    10. ' :' → logprob: -13.878767967224121

Token 212: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02105877734720707
    2. '           ' → logprob: -3.8960587978363037
    3. 'result' → logprob: -8.146059036254883
    4. ' result' → logprob: -8.521059036254883
    5. '            ' → logprob: -12.146059036254883
    6. '   ' → logprob: -12.271059036254883
    7. '                
' → logprob: -12.521059036254883
    8. '            
' → logprob: -12.646059036254883
    9. '       ' → logprob: -13.021059036254883
    10. '```' → logprob: -13.271059036254883

Token 213: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.4834727644920349
    2. 'result' (adapté à ' result') → logprob: -0.9834727644920349
    3. '               ' → logprob: -4.85847282409668
    4. '           ' → logprob: -6.48347282409668
    5. '
' → logprob: -11.10847282409668
    6. '                ' → logprob: -11.23347282409668
    7. '            ' → logprob: -12.23347282409668
    8. ' 
' → logprob: -12.23347282409668
    9. ' ' → logprob: -12.35847282409668
    10. '   ' → logprob: -12.48347282409668

Token 214: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.537868779967539e-06
    2. ' [' → logprob: -13.000008583068848
    3. '[count' → logprob: -13.500008583068848
    4. '```' → logprob: -13.500008583068848
    5. '[val' → logprob: -14.000008583068848
    6. '[result' → logprob: -14.375008583068848
    7. '[col' → logprob: -15.125008583068848
    8. '[df' → logprob: -15.375008583068848
    9. 'den' → logprob: -15.500008583068848
    10. '[len' → logprob: -15.875008583068848

Token 215: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0007111206650733948
    2. ' denom' → logprob: -7.250710964202881
    3. ' den' → logprob: -14.250711441040039
    4. '```' → logprob: -16.25071144104004
    5. '   ' → logprob: -16.75071144104004
    6. 'Den' → logprob: -17.12571144104004
    7. ' ' → logprob: -17.25071144104004
    8. '[' → logprob: -17.37571144104004
    9. ']' → logprob: -17.50071144104004
    10. 'count' → logprob: -17.62571144104004

Token 216: 'om' (ID: 310)
  Prédit: 'om'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'om' → logprob: -2.3319124011322856e-05
    2. 'ом' → logprob: -11.875022888183594
    3. 'omination' → logprob: -11.875022888183594
    4. 'ominations' → logprob: -12.875022888183594
    5. '[' → logprob: -13.250022888183594
    6. 'nom' → logprob: -13.500022888183594
    7. ']' → logprob: -14.375022888183594
    8. '   ' → logprob: -14.875022888183594
    9. '```' → logprob: -15.375022888183594
    10. '.value' → logprob: -15.750022888183594

Token 217: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -6.630610641877865e-06
    2. '.' → logprob: -12.375006675720215
    3. 'value' → logprob: -13.375006675720215
    4. '].' → logprob: -14.375006675720215
    5. ']' → logprob: -16.3750057220459
    6. '.name' → logprob: -17.1250057220459
    7. '"value' → logprob: -17.8750057220459
    8. '.val' → logprob: -18.3750057220459
    9. ' .' → logprob: -18.7500057220459
    10. ').' → logprob: -18.8750057220459

Token 218: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003676324849948287
    2. ' ]' → logprob: -8.500367164611816
    3. ']=' → logprob: -8.750367164611816
    4. '=' → logprob: -12.750367164611816
    5. ' =' → logprob: -13.000367164611816
    6. ')' → logprob: -16.250368118286133
    7. '`]' → logprob: -16.375368118286133
    8. '"]' → logprob: -16.625368118286133
    9. ']+=' → logprob: -16.750368118286133
    10. '']' → logprob: -16.750368118286133

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804229199886322
    2. '=' → logprob: -3.2880423069000244
    3. ']' → logprob: -15.038042068481445
    4. '=count' → logprob: -15.788042068481445
    5. ']=' → logprob: -16.163042068481445
    6. '            ' → logprob: -16.663042068481445
    7. '        ' → logprob: -16.663042068481445
    8. ' ' → logprob: -16.788042068481445
    9. ')' → logprob: -17.038042068481445
    10. '    ' → logprob: -17.038042068481445

Token 220: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3132617771625519
    2. ' count' → logprob: -1.3132617473602295
    3. '	count' → logprob: -18.063261032104492
    4. '(count' → logprob: -19.688261032104492
    5. '=count' → logprob: -20.313261032104492
    6. '[count' → logprob: -20.438261032104492
    7. '$count' → logprob: -20.938261032104492
    8. ' ' → logprob: -21.688261032104492
    9. 'counts' → logprob: -22.063261032104492
    10. 'c' → logprob: -22.063261032104492

Token 221: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17023147642612457
    2. '           ' → logprob: -1.9202314615249634
    3. '
' → logprob: -4.670231342315674
    4. ' remain' → logprob: -8.795231819152832
    5. 'remain' → logprob: -9.045231819152832
    6. '
' → logprob: -9.170231819152832
    7. '            
' → logprob: -9.545231819152832
    8. ',' → logprob: -9.670231819152832
    9. '                
' → logprob: -10.545231819152832
    10. ',
' → logprob: -11.295231819152832

Token 222: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01222306676208973
    2. '           ' → logprob: -4.762223243713379
    3. ' remain' → logprob: -6.262223243713379
    4. 'remain' → logprob: -6.387223243713379
    5. '
' → logprob: -12.137223243713379
    6. '                   ' → logprob: -13.512223243713379
    7. '              ' → logprob: -13.637223243713379
    8. '       ' → logprob: -13.637223243713379
    9. '                
' → logprob: -13.762223243713379
    10. '   ' → logprob: -14.637223243713379

Token 223: ' remain' (ID: 12760)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remain' (adapté à ' remain') → logprob: -0.4752848744392395
    2. ' remain' → logprob: -0.9752848744392395
    3. '               ' → logprob: -6.725285053253174
    4. '           ' → logprob: -13.100284576416016
    5. 'rem' → logprob: -13.350284576416016
    6. ' ' → logprob: -13.725284576416016
    7. '                ' → logprob: -14.225284576416016
    8. '                   ' → logprob: -14.350284576416016
    9. '              ' → logprob: -15.600284576416016
    10. '   ' → logprob: -15.600284576416016

Token 224: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.018169725313782692
    2. ' %=' → logprob: -4.26816987991333
    3. '-=' → logprob: -6.26816987991333
    4. ' =' → logprob: -6.76816987991333
    5. '=' → logprob: -7.39316987991333
    6. '%=' → logprob: -8.143169403076172
    7. '-' → logprob: -10.393169403076172
    8. '%' → logprob: -11.393169403076172
    9. '    ' → logprob: -13.143169403076172
    10. ' %' → logprob: -14.018169403076172

Token 225: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3871805667877197
    2. ' count' → logprob: -1.1371805667877197
    3. 'den' → logprob: -8.38718032836914
    4. ' denom' → logprob: -9.51218032836914
    5. ' den' → logprob: -12.88718032836914
    6. '(count' → logprob: -13.13718032836914
    7. '	count' → logprob: -13.63718032836914
    8. '               ' → logprob: -14.26218032836914
    9. '                   ' → logprob: -15.13718032836914
    10. '                ' → logprob: -15.26218032836914

Token 226: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.018150178715586662
    2. '*' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.268150329589844
    4. 'den' → logprob: -16.518150329589844
    5. ' ' → logprob: -19.018150329589844
    6. '```' → logprob: -19.018150329589844
    7. '*object' → logprob: -19.268150329589844
    8. '   ' → logprob: -20.143150329589844
    9. '`' → logprob: -20.268150329589844
    10. 'token' → logprob: -20.268150329589844

Token 227: ' denom' (ID: 73604)
  Prédit: ' denom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' denom' → logprob: -0.25203055143356323
    2. 'den' → logprob: -1.502030611038208
    3. ' den' → logprob: -9.252030372619629
    4. ' ' → logprob: -13.502030372619629
    5. ' denomination' → logprob: -13.627030372619629
    6. ' coin' → logprob: -14.502030372619629
    7. 'coin' → logprob: -14.502030372619629
    8. '   ' → logprob: -14.627030372619629
    9. '    ' → logprob: -15.127030372619629
    10. '  ' → logprob: -15.502030372619629

Token 228: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -4.6087021473795176e-05
    2. 'value' → logprob: -10.000045776367188
    3. '.' → logprob: -14.875045776367188
    4. '```' → logprob: -16.000045776367188
    5. ' .' → logprob: -16.250045776367188
    6. ' value' → logprob: -17.000045776367188
    7. 'alue' → logprob: -17.125045776367188
    8. ' ' → logprob: -19.625045776367188
    9. ''value' → logprob: -19.625045776367188
    10. '"value' → logprob: -19.625045776367188

Token 229: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5506483912467957
    2. '
' → logprob: -0.9256483912467957
    3. '           ' → logprob: -4.425648212432861
    4. '\n' → logprob: -5.175648212432861
    5. 'return' → logprob: -5.550648212432861
    6. '        
' → logprob: -6.175648212432861
    7. '
' → logprob: -7.050648212432861
    8. ' return' → logprob: -7.050648212432861
    9. '    
' → logprob: -7.175648212432861
    10. '  
' → logprob: -8.05064868927002

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1314709633588791
    2. '
' → logprob: -2.3814709186553955
    3. ' return' → logprob: -4.256471157073975
    4. 'return' → logprob: -4.506471157073975
    5. '        
' → logprob: -6.256471157073975
    6. '	return' → logprob: -6.631471157073975
    7. '           ' → logprob: -7.631471157073975
    8. '    
' → logprob: -7.756471157073975
    9. '   ' → logprob: -7.881471157073975
    10. ' 
' → logprob: -8.131470680236816

Token 231: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2587110698223114
    2. 'return' (adapté à ' return') → logprob: -1.5087110996246338
    3. ' return' → logprob: -5.008710861206055
    4. '   ' → logprob: -9.508710861206055
    5. '           ' → logprob: -12.883710861206055
    6. '	return' → logprob: -13.758710861206055
    7. 'if' → logprob: -14.758710861206055
    8. ' if' → logprob: -14.883710861206055
    9. ' ' → logprob: -15.133710861206055
    10. '
' → logprob: -15.633710861206055

Token 232: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.12692810595035553
    2. ' result' → logprob: -2.1269280910491943
    3. '(result' → logprob: -17.001928329467773
    4. '	result' → logprob: -18.126928329467773
    5. 'remain' → logprob: -18.501928329467773
    6. '{' → logprob: -19.001928329467773
    7. '[result' → logprob: -19.001928329467773
    8. '{}' → logprob: -19.126928329467773
    9. ' ' → logprob: -20.626928329467773
    10. ' ' → logprob: -20.626928329467773

Token 233: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 234: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 235: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.535311758518219
    2. '   ' → logprob: -0.910311758518219
    3. 'class' → logprob: -5.660311698913574
    4. '@' (adapté à ' @') → logprob: -5.910311698913574
    5. '<|end|>' → logprob: -6.035311698913574
    6. '
' → logprob: -6.660311698913574
    7. 'classmethod' → logprob: -7.535311698913574
    8. '    
' → logprob: -7.910311698913574
    9. '#' → logprob: -8.410311698913574
    10. ' ' → logprob: -8.535311698913574

Token 236: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -0.008642109110951424
    2. 'staticmethod' → logprob: -4.758642196655273
    3. 'class' → logprob: -11.133642196655273
    4. 'property' → logprob: -11.258642196655273
    5. 'dat' → logprob: -17.258642196655273
    6. 'pytest' → logprob: -18.758642196655273
    7. '@' → logprob: -19.008642196655273
    8. 'static' → logprob: -20.383642196655273
    9. '```' → logprob: -20.758642196655273
    10. 'classname' → logprob: -21.008642196655273

Token 237: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5581114888191223
    2. '   ' → logprob: -1.3081114292144775
    3. ' def' → logprob: -1.9331114292144775
    4. '
' → logprob: -4.433111667633057
    5. ' ' → logprob: -8.183111190795898
    6. '  ' → logprob: -8.933111190795898
    7. '	def' → logprob: -9.308111190795898
    8. '_def' → logprob: -9.933111190795898
    9. '(' → logprob: -10.183111190795898
    10. '    
' → logprob: -10.308111190795898

Token 238: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007759823463857174
    2. '
' → logprob: -5.007760047912598
    3. ' def' → logprob: -7.507760047912598
    4. '   ' → logprob: -7.632760047912598
    5. 'staticmethod' → logprob: -12.632760047912598
    6. ' ' → logprob: -13.132760047912598
    7. 'classmethod' → logprob: -13.632760047912598
    8. '	def' → logprob: -14.132760047912598
    9. '
' → logprob: -14.257760047912598
    10. '    
' → logprob: -14.632760047912598

Token 239: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.006168154999613762
    2. 'get' → logprob: -5.131168365478516
    3. ' def' → logprob: -8.381168365478516
    4. '
' → logprob: -13.131168365478516
    5. '   ' → logprob: -13.256168365478516
    6. 'calculate' → logprob: -13.631168365478516
    7. 'classmethod' → logprob: -13.756168365478516
    8. 'staticmethod' → logprob: -13.881168365478516
    9. ' get' → logprob: -14.256168365478516
    10. 'validate' → logprob: -14.256168365478516

Token 240: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.36964088678359985
    2. ' get' → logprob: -1.619640827178955
    3. 'format' → logprob: -3.369640827178955
    4. 'make' → logprob: -4.119640827178955
    5. 'calculate' → logprob: -4.244640827178955
    6. ' format' → logprob: -4.494640827178955
    7. ' calculate' → logprob: -4.744640827178955
    8. 'total' → logprob: -5.119640827178955
    9. ' make' → logprob: -5.869640827178955
    10. 'can' → logprob: -5.869640827178955

Token 241: '_coin' (ID: 187802)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.7446214556694031
    2. '_total' → logprob: -1.1196215152740479
    3. '_change' → logprob: -2.244621515274048
    4. '_max' → logprob: -3.119621515274048
    5. '_coin' → logprob: -4.119621276855469
    6. '_opt' → logprob: -4.494621276855469
    7. '_possible' → logprob: -5.619621276855469
    8. '_co' → logprob: -5.869621276855469
    9. '_full' → logprob: -5.994621276855469
    10. '_name' → logprob: -6.619621276855469

Token 242: '_index' (ID: 7748)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.7494176626205444
    2. '_name' → logprob: -1.4994176626205444
    3. 's' → logprob: -2.999417781829834
    4. '_value' → logprob: -3.124417781829834
    5. '_names' → logprob: -3.124417781829834
    6. '_counts' → logprob: -3.124417781829834
    7. '_com' → logprob: -3.624417781829834
    8. '_set' → logprob: -3.749417781829834
    9. '_description' → logprob: -3.874417781829834
    10. '_list' → logprob: -4.374417781829834

Token 243: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.00026622318546287715
    2. '(' → logprob: -8.250266075134277
    3. ' (' → logprob: -13.625266075134277
    4. '_by' → logprob: -14.000266075134277
    5. '(
' → logprob: -14.125266075134277
    6. '(clazz' → logprob: -14.375266075134277
    7. '(self' → logprob: -14.875266075134277
    8. 's' → logprob: -15.250266075134277
    9. '(cl' → logprob: -15.250266075134277
    10. '(class' → logprob: -15.750266075134277

Token 244: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9356751441955566
    2. '(cls' → logprob: -1.0606751441955566
    3. ',' → logprob: -1.6856751441955566
    4. ')' → logprob: -2.6856751441955566
    5. ')(' → logprob: -6.185675144195557
    6. '   ' → logprob: -6.310675144195557
    7. '_by' → logprob: -6.560675144195557
    8. ' (' → logprob: -7.685675144195557
    9. 'for' → logprob: -7.685675144195557
    10. '(value' → logprob: -7.810675144195557

Token 245: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.04531612992286682
    2. ' value' → logprob: -3.545316219329834
    3. 'den' → logprob: -4.920316219329834
    4. 'coin' → logprob: -5.545316219329834
    5. ' denomination' → logprob: -6.295316219329834
    6. ' coin' → logprob: -7.295316219329834
    7. ' denom' → logprob: -7.670316219329834
    8. ')' → logprob: -7.795316219329834
    9. 'target' → logprob: -8.420315742492676
    10. 'self' → logprob: -8.545315742492676

Token 246: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007857046090066433
    2. ',' → logprob: -5.007856845855713
    3. '):
' → logprob: -6.882856845855713
    4. '(cls' → logprob: -10.132857322692871
    5. ')' → logprob: -10.382857322692871
    6. 'self' → logprob: -10.632857322692871
    7. '   ' → logprob: -11.757857322692871
    8. '       ' → logprob: -12.757857322692871
    9. 'cls' → logprob: -12.757857322692871
    10. ' ):' → logprob: -12.882857322692871

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006126329768449068
    2. ' for' → logprob: -5.506126403808594
    3. 'for' → logprob: -7.006126403808594
    4. '   ' → logprob: -7.131126403808594
    5. ':' → logprob: -8.256126403808594
    6. 'index' → logprob: -11.131126403808594
    7. '```' → logprob: -11.381126403808594
    8. ':
' → logprob: -11.506126403808594
    9. ',' → logprob: -12.381126403808594
    10. '
' → logprob: -12.506126403808594

Token 248: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9887793660163879
    2. 'for' (adapté à ' for') → logprob: -0.9887793660163879
    3. '       ' → logprob: -1.3637793064117432
    4. '   ' → logprob: -8.863779067993164
    5. 'left' → logprob: -9.738779067993164
    6. ' left' → logprob: -10.488779067993164
    7. '```' → logprob: -12.488779067993164
    8. 'def' → logprob: -13.113779067993164
    9. '	for' → logprob: -13.738779067993164
    10. 'try' → logprob: -13.863779067993164

Token 249: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.458207905292511
    2. 'idx' → logprob: -2.083207845687866
    3. ' denom' → logprob: -2.458207845687866
    4. ' i' → logprob: -2.583207845687866
    5. 'den' → logprob: -3.208207845687866
    6. ' idx' → logprob: -3.958207845687866
    7. 'index' → logprob: -3.958207845687866
    8. ' index' → logprob: -5.958208084106445
    9. ' den' → logprob: -7.958208084106445
    10. ' denomination' → logprob: -8.583208084106445

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05902279168367386
    2. ' in' → logprob: -2.934022903442383
    3. 'in' → logprob: -5.809022903442383
    4. ' ,' → logprob: -6.809022903442383
    5. ',value' → logprob: -11.934022903442383
    6. ',in' → logprob: -11.934022903442383
    7. ' ' → logprob: -12.309022903442383
    8. ',class' → logprob: -13.184022903442383
    9. '_,' → logprob: -13.809022903442383
    10. 'n' → logprob: -13.934022903442383

Token 251: ' denom' (ID: 73604)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.008690441958606243
    2. ' denom' → logprob: -4.758690357208252
    3. 'coin' → logprob: -10.63369083404541
    4. ' den' → logprob: -10.75869083404541
    5. ' denomination' → logprob: -10.88369083404541
    6. 'd' → logprob: -11.63369083404541
    7. ' coin' → logprob: -14.00869083404541
    8. ' ' → logprob: -15.25869083404541
    9. ' denomin' → logprob: -15.25869083404541
    10. 'dom' → logprob: -15.50869083404541

Token 252: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06993988156318665
    2. 'in' → logprob: -2.6949398517608643
    3. ',' → logprob: -13.444939613342285
    4. ' ' → logprob: -14.194939613342285
    5. '	in' → logprob: -14.694939613342285
    6. ')' → logprob: -15.444939613342285
    7. 's' → logprob: -16.0699405670166
    8. '<|end|>' → logprob: -16.1949405670166
    9. '   ' → logprob: -16.5699405670166
    10. 'import' → logprob: -16.8199405670166

Token 253: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.31326213479042053
    2. ' enumerate' → logprob: -1.3132621049880981
    3. '   ' → logprob: -15.438261985778809
    4. 'enum' → logprob: -16.188262939453125
    5. '
' → logprob: -16.188262939453125
    6. '```' → logprob: -17.063262939453125
    7. 'en' → logprob: -17.813262939453125
    8. ' ' → logprob: -17.813262939453125
    9. '  ' → logprob: -18.688262939453125
    10. '

' → logprob: -18.813262939453125

Token 254: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.3954038619995117
    2. 'cls' → logprob: -1.1454038619995117
    3. ' cls' → logprob: -4.770403861999512
    4. '_cls' → logprob: -11.770403861999512
    5. ')' → logprob: -12.020403861999512
    6. 'class' → logprob: -13.645403861999512
    7. '(' → logprob: -13.645403861999512
    8. '.cls' → logprob: -13.895403861999512
    9. '(C' → logprob: -14.145403861999512
    10. '   ' → logprob: -14.270403861999512

Token 255: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.246537173457909e-06
    2. '.' → logprob: -12.750003814697266
    3. '   ' → logprob: -14.000003814697266
    4. ' .' → logprob: -15.125003814697266
    5. '       ' → logprob: -16.250003814697266
    6. ' ' → logprob: -18.250003814697266
    7. ')._' → logprob: -18.500003814697266
    8. '.__' → logprob: -18.875003814697266
    9. ' _' → logprob: -19.375003814697266
    10. '_' → logprob: -19.875003814697266

Token 256: 'den' (ID: 1660)
  Prédit: '_den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_den' → logprob: -0.20142270624637604
    2. 'den' → logprob: -1.7014226913452148
    3. '_d' → logprob: -13.201422691345215
    4. '_DEN' → logprob: -13.451422691345215
    5. '.den' → logprob: -13.701422691345215
    6. '-den' → logprob: -13.701422691345215
    7. ' denominations' → logprob: -14.201422691345215
    8. ' ' → logprob: -14.451422691345215
    9. ' den' → logprob: -14.701422691345215
    10. '   ' → logprob: -14.951422691345215

Token 257: 'ominations' (ID: 169517)
  Prédit: 'ominations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ominations' → logprob: -0.013354094699025154
    2. 'ations' → logprob: -4.388354301452637
    3. 'urations' → logprob: -7.888354301452637
    4. 'otions' → logprob: -9.013354301452637
    5. 'om' → logprob: -9.763354301452637
    6. 'ot' → logprob: -9.888354301452637
    7. 'itations' → logprob: -9.888354301452637
    8. '   ' → logprob: -10.638354301452637
    9. 'orm' → logprob: -10.763354301452637
    10. 't' → logprob: -10.888354301452637

Token 258: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2519584596157074
    2. '):
' → logprob: -1.5019584894180298
    3. '):
' → logprob: -10.876958847045898
    4. '       ' → logprob: -12.126958847045898
    5. ':' → logprob: -13.376958847045898
    6. '   ' → logprob: -13.751958847045898
    7. ' ):' → logprob: -13.751958847045898
    8. ')' → logprob: -14.626958847045898
    9. '):

' → logprob: -14.751958847045898
    10. ' ):
' → logprob: -15.501958847045898

Token 259: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00020330198458395898
    2. ' if' → logprob: -8.750203132629395
    3. 'if' → logprob: -10.375203132629395
    4. '<|end|>' → logprob: -12.500203132629395
    5. '          ' → logprob: -13.000203132629395
    6. '   ' → logprob: -13.000203132629395
    7. '       ' → logprob: -13.125203132629395
    8. '	       ' → logprob: -13.625203132629395
    9. '```' → logprob: -14.875203132629395
    10. '<|end|>' → logprob: -15.250203132629395

Token 260: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03917296230792999
    2. ' if' → logprob: -3.289172887802124
    3. '           ' → logprob: -6.789173126220703
    4. '               ' → logprob: -12.414173126220703
    5. '   ' → logprob: -14.414173126220703
    6. 'If' → logprob: -15.789173126220703
    7. '       ' → logprob: -16.164173126220703
    8. '	if' → logprob: -16.289173126220703
    9. ' ' → logprob: -17.039173126220703
    10. '
' → logprob: -17.164173126220703

Token 261: ' denom' (ID: 73604)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.576034426689148
    2. ' denom' → logprob: -0.826034426689148
    3. ' den' → logprob: -9.451034545898438
    4. ' denomination' → logprob: -11.451034545898438
    5. 'dem' → logprob: -13.701034545898438
    6. 'value' → logprob: -13.701034545898438
    7. ' value' → logprob: -13.826034545898438
    8. 'd' → logprob: -13.826034545898438
    9. 'coin' → logprob: -15.201034545898438
    10. '    ' → logprob: -15.326034545898438

Token 262: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -3.128163257315464e-07
    2. 'value' → logprob: -15.5
    3. '.' → logprob: -16.875
    4. '.name' → logprob: -18.375
    5. '"value' → logprob: -19.375
    6. ' .' → logprob: -19.75
    7. ').' → logprob: -19.75
    8. '.type' → logprob: -20.5
    9. ''value' → logprob: -20.5

Token 263: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10020732134580612
    2. '==' → logprob: -2.3502073287963867
    3. '=' → logprob: -14.475207328796387
    4. ')==' → logprob: -16.35020637512207
    5. '===' → logprob: -17.35020637512207
    6. ']==' → logprob: -17.60020637512207
    7. '()==' → logprob: -17.97520637512207
    8. ')' → logprob: -17.97520637512207
    9. ' =' → logprob: -18.35020637512207
    10. '==
' → logprob: -18.47520637512207

Token 264: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.3868710398674011
    2. 'value' → logprob: -1.136871099472046
    3. '"value' → logprob: -18.386871337890625
    4. ''value' → logprob: -19.386871337890625
    5. ')value' → logprob: -19.511871337890625
    6. '
' → logprob: -19.886871337890625
    7. '	value' → logprob: -20.011871337890625
    8. ' ' → logprob: -20.261871337890625
    9. '$value' → logprob: -20.261871337890625
    10. '(value' → logprob: -20.386871337890625

Token 265: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.292801171541214
    2. ':
' → logprob: -1.4178011417388916
    3. ':return' → logprob: -4.792801380157471
    4. '               ' → logprob: -5.792801380157471
    5. '           ' → logprob: -8.792800903320312
    6. 'return' → logprob: -10.292800903320312
    7. '):
' → logprob: -10.542800903320312
    8. ' return' → logprob: -11.042800903320312
    9. '():
' → logprob: -12.917800903320312
    10. '<|end|>' → logprob: -12.917800903320312

Token 266: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02366247959434986
    2. 'return' → logprob: -4.148662567138672
    3. ' return' → logprob: -5.023662567138672
    4. '           ' → logprob: -7.023662567138672
    5. ':return' → logprob: -9.273662567138672
    6. '<|end|>' → logprob: -11.398662567138672
    7. '{return' → logprob: -12.148662567138672
    8. '	return' → logprob: -12.523662567138672
    9. '	           ' → logprob: -12.898662567138672
    10. '                   ' → logprob: -13.398662567138672

Token 267: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20693553984165192
    2. ' return' → logprob: -1.7069355249404907
    3. '               ' → logprob: -5.206935405731201
    4. '                   ' → logprob: -11.45693588256836
    5. '	return' → logprob: -12.20693588256836
    6. '
' → logprob: -12.45693588256836
    7. ':return' → logprob: -12.45693588256836
    8. '           ' → logprob: -12.95693588256836
    9. '   ' → logprob: -13.70693588256836
    10. '{return' → logprob: -15.08193588256836

Token 268: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.693147599697113
    2. ' i' → logprob: -0.693147599697113
    3. '	i' → logprob: -14.943147659301758
    4. ' ' → logprob: -18.068147659301758
    5. '           ' → logprob: -19.568147659301758
    6. '   ' → logprob: -20.068147659301758
    7. '
' → logprob: -20.193147659301758
    8. '```' → logprob: -20.193147659301758
    9. ',i' → logprob: -20.318147659301758
    10. ' ' → logprob: -20.818147659301758

Token 269: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022255906835198402
    2. '       ' → logprob: -4.022255897521973
    3. '<|end|>' → logprob: -5.772255897521973
    4. '\n' → logprob: -7.647255897521973
    5. 'return' → logprob: -8.647255897521973
    6. '
' → logprob: -9.647255897521973
    7. '        
' → logprob: -10.147255897521973
    8. '' → logprob: -10.272255897521973
    9. '   ' → logprob: -10.397255897521973
    10. ' return' → logprob: -10.522255897521973

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017697816947475076
    2. 'return' → logprob: -6.87677001953125
    3. '<|end|>' → logprob: -7.75177001953125
    4. ' return' → logprob: -9.37677001953125
    5. '   ' → logprob: -9.75177001953125
    6. '	' → logprob: -9.75177001953125
    7. '	return' → logprob: -10.37677001953125
    8. '
' → logprob: -10.75177001953125
    9. 'None' → logprob: -11.62677001953125
    10. '#' → logprob: -11.62677001953125

Token 271: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0004424667276907712
    2. 'None' → logprob: -8.875442504882812
    3. 'raise' → logprob: -8.875442504882812
    4. '       ' → logprob: -9.250442504882812
    5. ' return' → logprob: -9.750442504882812
    6. '
' → logprob: -12.375442504882812
    7. '   ' → logprob: -12.875442504882812
    8. 'else' → logprob: -14.500442504882812
    9. '        
' → logprob: -15.250442504882812
    10. '	return' → logprob: -15.625442504882812

Token 272: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6082660555839539
    2. 'None' → logprob: -0.8582660555839539
    3. ' None' → logprob: -3.6082661151885986
    4. ' -' → logprob: -5.3582658767700195
    5. '-none' → logprob: -13.48326587677002
    6. '_None' → logprob: -15.60826587677002
    7. '   ' → logprob: -16.233266830444336
    8. '-n' → logprob: -16.233266830444336
    9. ' ' → logprob: -16.858266830444336
    10. '-l' → logprob: -17.983266830444336

Token 273: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '１' → logprob: -20.875
    4. '2' → logprob: -21.875
    5. '0' → logprob: -22.375
    6. '۱' → logprob: -22.375
    7. '-' → logprob: -23.0
    8. '```' → logprob: -23.5
    9. '   ' → logprob: -23.5625
    10. '১' → logprob: -23.6875

Token 274: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 275: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06091278791427612
    2. '
' → logprob: -2.935912847518921
    3. '    
' → logprob: -5.935912609100342
    4. 'def' → logprob: -6.685912609100342
    5. 'class' → logprob: -6.810912609100342
    6. '<|end|>' → logprob: -7.560912609100342
    7. '@' → logprob: -8.6859130859375
    8. '        
' → logprob: -9.6859130859375
    9. 'classmethod' → logprob: -9.8109130859375
    10. '<|end|>' → logprob: -10.0609130859375

Token 276: ' Payment' (ID: 26873)
  Prédit: ' Coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Coin' → logprob: -0.2679935097694397
    2. ' Change' → logprob: -2.267993450164795
    3. ' V' → logprob: -2.892993450164795
    4. ' Wallet' → logprob: -4.267993450164795
    5. ' Exact' → logprob: -4.392993450164795
    6. ' Payment' → logprob: -4.517993450164795
    7. ' Cash' → logprob: -4.767993450164795
    8. ' Transaction' → logprob: -5.017993450164795
    9. 'Coin' → logprob: -5.642993450164795
    10. ' Product' → logprob: -6.392993450164795

Token 277: 'Strategy' (ID: 21488)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11138298362493515
    2. 'Processor' → logprob: -2.3613829612731934
    3. 'Method' → logprob: -5.361382961273193
    4. '(' → logprob: -6.611382961273193
    5. ':
' → logprob: -6.611382961273193
    6. 'Handler' → logprob: -6.736382961273193
    7. 'Amount' → logprob: -6.986382961273193
    8. 'Processing' → logprob: -7.861382961273193
    9. 'Calculator' → logprob: -8.236383438110352
    10. 'Request' → logprob: -8.361383438110352

Token 278: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00036655968870036304
    2. ':
' → logprob: -8.1253662109375
    3. '(' → logprob: -10.6253662109375
    4. '():' → logprob: -10.7503662109375
    5. '(object' → logprob: -11.6253662109375
    6. '(Abstract' → logprob: -12.6253662109375
    7. ' :' → logprob: -12.6253662109375
    8. '(P' → logprob: -12.8753662109375
    9. ':

' → logprob: -13.7503662109375
    10. '(C' → logprob: -13.7503662109375

Token 279: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18887773156166077
    2. '    
' → logprob: -2.938877820968628
    3. ' def' → logprob: -3.063877820968628
    4. '    ' → logprob: -3.188877820968628
    5. ' 
' → logprob: -3.813877820968628
    6. '     
' → logprob: -5.438877582550049
    7. '
' → logprob: -5.688877582550049
    8. 'def' → logprob: -7.188877582550049
    9. ' ' → logprob: -9.063878059387207
    10. '<|end|>' → logprob: -9.063878059387207

Token 280: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10028322786092758
    2. ' def' → logprob: -2.350283145904541
    3. '   ' → logprob: -9.7252836227417
    4. 'from' → logprob: -11.3502836227417
    5. 'pass' → logprob: -13.4752836227417
    6. 'class' → logprob: -13.4752836227417
    7. ' pass' → logprob: -13.6002836227417
    8. 'import' → logprob: -14.9752836227417
    9. '    ' → logprob: -15.1002836227417
    10. ' ' → logprob: -15.8502836227417

Token 281: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.8907644152641296
    2. ' ' → logprob: -2.0157644748687744
    3. ' get' → logprob: -2.2657644748687744
    4. '_' → logprob: -2.2657644748687744
    5. ' __' → logprob: -2.2657644748687744
    6. 'n' → logprob: -3.0157644748687744
    7. ' calculate' → logprob: -3.2657644748687744
    8. 'def' → logprob: -4.265764236450195
    9. ' _' → logprob: -4.765764236450195
    10. '   ' → logprob: -5.390764236450195

Token 282: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0006185544189065695
    2. 'new' → logprob: -8.375618934631348
    3. 'it' → logprob: -8.875618934631348
    4. 'class' → logprob: -9.250618934631348
    5. '_init' → logprob: -9.375618934631348
    6. ' init' → logprob: -11.000618934631348
    7. 'sub' → logprob: -11.000618934631348
    8. 'def' → logprob: -11.500618934631348
    9. '__' → logprob: -12.250618934631348
    10. '```' → logprob: -12.500618934631348

Token 283: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.011064562946557999
    2. '__' → logprob: -4.511064529418945
    3. '__(
' → logprob: -11.761064529418945
    4. '(self' → logprob: -12.136064529418945
    5. '__((' → logprob: -13.136064529418945
    6. '(' → logprob: -14.761064529418945
    7. '__('' → logprob: -14.761064529418945
    8. '_(' → logprob: -15.261064529418945
    9. '__(*' → logprob: -15.386064529418945
    10. '___' → logprob: -16.386064529418945

Token 284: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01012387964874506
    2. ')' → logprob: -5.1351237297058105
    3. ' self' → logprob: -5.6351237297058105
    4. 'amount' → logprob: -7.6351237297058105
    5. '):
' → logprob: -9.885124206542969
    6. '):' → logprob: -10.760124206542969
    7. ' ' → logprob: -11.635124206542969
    8. '(self' → logprob: -11.760124206542969
    9. '   ' → logprob: -12.135124206542969
    10. 'currency' → logprob: -12.135124206542969

Token 285: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004418605472892523
    2. ' ,' → logprob: -5.62941837310791
    3. 'amount' → logprob: -7.75441837310791
    4. '):' → logprob: -8.62941837310791
    5. ' amount' → logprob: -10.00441837310791
    6. '):
' → logprob: -10.00441837310791
    7. ' ):' → logprob: -10.25441837310791
    8. ',value' → logprob: -11.25441837310791
    9. ',p' → logprob: -11.25441837310791
    10. ',total' → logprob: -11.25441837310791

Token 286: ' price' (ID: 3911)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'amount' → logprob: -1.436607837677002
    2. ' amount' → logprob: -2.061607837677002
    3. 'coins' → logprob: -2.061607837677002
    4. ' coins' → logprob: -2.561607837677002
    5. 'coin' → logprob: -2.686607837677002
    6. ' coin' → logprob: -2.811607837677002
    7. 'total' → logprob: -3.061607837677002
    8. 'payment' → logprob: -3.186607837677002
    9. 'change' → logprob: -3.436607837677002
    10. 'available' → logprob: -3.561607837677002

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020675484091043472
    2. '):' → logprob: -3.8956754207611084
    3. ' ):' → logprob: -9.770675659179688
    4. ' ,' → logprob: -10.020675659179688
    5. '):
' → logprob: -10.645675659179688
    6. ':' → logprob: -12.520675659179688
    7. ')' → logprob: -13.645675659179688
    8. ',
' → logprob: -14.020675659179688
    9. '=' → logprob: -14.645675659179688
    10. ' ' → logprob: -14.645675659179688

Token 288: ' current' (ID: 2208)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -1.1538879871368408
    2. ' coins' → logprob: -1.7788879871368408
    3. ' payment' → logprob: -2.153887987136841
    4. 'payment' → logprob: -2.528887987136841
    5. 'paid' → logprob: -2.778887987136841
    6. ' coin' → logprob: -3.278887987136841
    7. ' amount' → logprob: -3.403887987136841
    8. 'coin' → logprob: -3.528887987136841
    9. 'pay' → logprob: -3.528887987136841
    10. ' paid' → logprob: -3.778887987136841

Token 289: '_co' (ID: 21102)
  Prédit: '_amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amount' → logprob: -0.7226405739784241
    2. '_payment' → logprob: -0.9726405739784241
    3. '_money' → logprob: -3.3476405143737793
    4. '_change' → logprob: -3.5976405143737793
    5. '_coin' → logprob: -3.7226405143737793
    6. '_co' → logprob: -4.472640514373779
    7. '_cash' → logprob: -4.847640514373779
    8. '_balance' → logprob: -5.097640514373779
    9. 'coins' → logprob: -5.097640514373779
    10. '_' → logprob: -5.347640514373779

Token 290: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.06439802795648575
    2. 'unt' → logprob: -3.3143980503082275
    3. 'in' → logprob: -3.8143980503082275
    4. 'unter' → logprob: -5.939397811889648
    5. 'ount' → logprob: -8.439397811889648
    6. 'inter' → logprob: -8.689397811889648
    7. 'int' → logprob: -8.689397811889648
    8. 'unts' → logprob: -8.814397811889648
    9. 'un' → logprob: -9.064397811889648
    10. '   ' → logprob: -9.189397811889648

Token 291: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23236854374408722
    2. '):
' → logprob: -2.1073684692382812
    3. ',' → logprob: -2.4823684692382812
    4. ' ):' → logprob: -6.482368469238281
    5. '={}' → logprob: -8.607368469238281
    6. '=' → logprob: -9.232368469238281
    7. '):
' → logprob: -9.357368469238281
    8. ':' → logprob: -9.482368469238281
    9. ' ):
' → logprob: -9.857368469238281
    10. ' ,' → logprob: -10.107368469238281

Token 292: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003346314188092947
    2. '<|end|>' → logprob: -8.250334739685059
    3. ',' → logprob: -10.250334739685059
    4. ':' → logprob: -11.375334739685059
    5. ' self' → logprob: -11.875334739685059
    6. 'self' → logprob: -12.000334739685059
    7. '   ' → logprob: -12.250334739685059
    8. '        
' → logprob: -13.250334739685059
    9. '<|end|>' → logprob: -13.250334739685059
    10. '(self' → logprob: -14.375334739685059

Token 293: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5549599528312683
    2. ' self' → logprob: -1.054960012435913
    3. '       ' → logprob: -2.554960012435913
    4. '#' → logprob: -14.054960250854492
    5. '   ' → logprob: -14.304960250854492
    6. '	self' → logprob: -14.304960250854492
    7. ' ' → logprob: -15.054960250854492
    8. '        ' → logprob: -15.804960250854492
    9. 'super' → logprob: -16.179960250854492
    10. '(self' → logprob: -16.179960250854492

Token 294: '.price' (ID: 31587)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5938802361488342
    2. '.price' → logprob: -0.8438802361488342
    3. ' .' → logprob: -4.0938801765441895
    4. 'price' → logprob: -7.2188801765441895
    5. ' price' → logprob: -8.468880653381348
    6. '.value' → logprob: -8.968880653381348
    7. '	price' → logprob: -11.718880653381348
    8. '_price' → logprob: -11.968880653381348
    9. ' ' → logprob: -12.468880653381348
    10. ',' → logprob: -12.718880653381348

Token 295: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002785935997963
    2. '=' → logprob: -2.350278615951538
    3. ' ' → logprob: -10.350278854370117
    4. ',' → logprob: -10.475278854370117
    5. '   ' → logprob: -12.850278854370117
    6. '    ' → logprob: -13.100278854370117
    7. ' -=' → logprob: -13.475278854370117
    8. '<|end|>' → logprob: -13.475278854370117
    9. ' ,' → logprob: -13.975278854370117
    10. ' +=' → logprob: -14.350278854370117

Token 296: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.10022111982107162
    2. 'price' → logprob: -2.3502211570739746
    3. ' current' → logprob: -11.225220680236816
    4. 'current' → logprob: -14.100220680236816
    5. '	price' → logprob: -14.975220680236816
    6. '(price' → logprob: -17.475221633911133
    7. '_price' → logprob: -18.225221633911133
    8. 'Price' → logprob: -19.600221633911133
    9. '.price' → logprob: -19.725221633911133
    10. ' precio' → logprob: -20.475221633911133

Token 297: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5474432706832886
    2. '
' → logprob: -0.9224432706832886
    3. '<|end|>' → logprob: -3.797443389892578
    4. '        
' → logprob: -7.172443389892578
    5. ',' → logprob: -8.172443389892578
    6. 'self' → logprob: -8.547443389892578
    7. ' 
' → logprob: -8.922443389892578
    8. '<|end|>' → logprob: -9.797443389892578
    9. '    
' → logprob: -10.547443389892578
    10. ' ' → logprob: -10.547443389892578

Token 298: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006953967968001962
    2. 'self' → logprob: -7.50069522857666
    3. ' self' → logprob: -9.37569522857666
    4. '
' → logprob: -9.87569522857666
    5. '<|end|>' → logprob: -13.00069522857666
    6. '        
' → logprob: -13.50069522857666
    7. '	self' → logprob: -14.12569522857666
    8. ',' → logprob: -14.25069522857666
    9. '   ' → logprob: -15.25069522857666
    10. '      ' → logprob: -15.62569522857666

Token 299: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5498051643371582
    2. 'current' → logprob: -1.2998051643371582
    3. ' self' → logprob: -2.424805164337158
    4. ' current' → logprob: -2.799805164337158
    5. 'change' → logprob: -7.049805164337158
    6. ' change' → logprob: -9.4248046875
    7. '       ' → logprob: -10.4248046875
    8. 'coins' → logprob: -11.9248046875
    9. 'total' → logprob: -12.0498046875
    10. '_current' → logprob: -12.1748046875

Token 300: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.015691766515374184
    2. '.' → logprob: -4.390691757202148
    3. '.co' → logprob: -6.640691757202148
    4. ' .' → logprob: -6.765691757202148
    5. 'current' → logprob: -7.765691757202148
    6. '.coin' → logprob: -9.890691757202148
    7. '.available' → logprob: -9.890691757202148
    8. '.user' → logprob: -10.265691757202148
    9. '.change' → logprob: -10.390691757202148
    10. '.remaining' → logprob: -10.640691757202148

Token 301: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.00027134892297908664
    2. '_' → logprob: -8.500271797180176
    3. 'coins' → logprob: -10.500271797180176
    4. '_coin' → logprob: -10.625271797180176
    5. '_tokens' → logprob: -11.500271797180176
    6. '_amount' → logprob: -13.250271797180176
    7. ' _' → logprob: -13.375271797180176
    8. 'Coins' → logprob: -13.875271797180176
    9. ' coins' → logprob: -15.250271797180176
    10. '_money' → logprob: -15.625271797180176

Token 302: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0001017551330733113
    2. 'coins' → logprob: -9.625102043151855
    3. '   ' → logprob: -12.125102043151855
    4. '_ins' → logprob: -12.125102043151855
    5. '```' → logprob: -12.250102043151855
    6. '_' → logprob: -12.875102043151855
    7. 'in' → logprob: -13.250102043151855
    8. 'is' → logprob: -13.375102043151855
    9. 'inds' → logprob: -13.625102043151855
    10. '[' → logprob: -13.875102043151855

Token 303: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10039827972650528
    2. '=' → logprob: -2.350398302078247
    3. ' ' → logprob: -8.600398063659668
    4. ',' → logprob: -13.600398063659668
    5. '   ' → logprob: -13.725398063659668
    6. '        ' → logprob: -13.725398063659668
    7. '<|end|>' → logprob: -13.850398063659668
    8. '       ' → logprob: -13.975398063659668
    9. '    ' → logprob: -14.350398063659668
    10. '.setdefault' → logprob: -15.100398063659668

Token 304: ' tuple' (ID: 31311)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.029753733426332474
    2. ' current' → logprob: -3.5297536849975586
    3. '{' → logprob: -13.279753684997559
    4. '{}' → logprob: -13.904753684997559
    5. 'dict' → logprob: -14.904753684997559
    6. ' dict' → logprob: -16.404754638671875
    7. '	current' → logprob: -16.529754638671875
    8. '[current' → logprob: -17.654754638671875
    9. ' ' → logprob: -18.279754638671875
    10. '.current' → logprob: -18.404754638671875

Token 305: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.006807022262364626
    2. '(sorted' → logprob: -5.50680685043335
    3. '(' → logprob: -6.00680685043335
    4. '()' → logprob: -9.131807327270508
    5. 'current' → logprob: -10.006807327270508
    6. '([' → logprob: -10.381807327270508
    7. '(list' → logprob: -10.506807327270508
    8. '(
' → logprob: -11.131807327270508
    9. '(map' → logprob: -11.756807327270508
    10. '(C' → logprob: -12.006807327270508

Token 306: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -2.7848862373502925e-05
    2. 'coins' → logprob: -11.875027656555176
    3. ')' → logprob: -12.125027656555176
    4. '_strategy' → logprob: -12.375027656555176
    5. ')_' → logprob: -12.500027656555176
    6. 'Coins' → logprob: -13.500027656555176
    7. '_' → logprob: -13.625027656555176
    8. '_tokens' → logprob: -13.875027656555176
    9. 's' → logprob: -14.250027656555176
    10. '._' → logprob: -14.500027656555176

Token 307: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -3.3451433409936726e-05
    2. '_ins' → logprob: -10.750033378601074
    3. '_' → logprob: -12.000033378601074
    4. 'is' → logprob: -13.250033378601074
    5. 'ns' → logprob: -14.000033378601074
    6. ')' → logprob: -14.625033378601074
    7. 'in' → logprob: -14.875033378601074
    8. '``' → logprob: -15.125033378601074
    9. '.ins' → logprob: -15.250033378601074
    10. '(ins' → logprob: -15.250033378601074

Token 308: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. '       ' → logprob: -14.250001907348633
    3. ')
' → logprob: -14.500001907348633
    4. '   ' → logprob: -15.250001907348633
    5. ' )' → logprob: -16.125001907348633
    6. '}' → logprob: -18.125001907348633
    7. ')}' → logprob: -18.375001907348633
    8. '<|end|>' → logprob: -18.625001907348633
    9. '),' → logprob: -19.125001907348633
    10. ' ' → logprob: -19.125001907348633

Token 309: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05310928821563721
    2. '<|end|>' → logprob: -3.3031091690063477
    3. '   ' → logprob: -4.303109169006348
    4. '    
' → logprob: -7.303109169006348
    5. '<|end|>' → logprob: -7.928109169006348
    6. '

' → logprob: -8.428109169006348
    7. 'def' → logprob: -9.678109169006348
    8. '```' → logprob: -11.053109169006348
    9. ' 
' → logprob: -11.178109169006348
    10. '  
' → logprob: -11.428109169006348

Token 310: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12789395451545715
    2. '<|end|>' → logprob: -2.2528939247131348
    3. '

' → logprob: -4.502893924713135
    4. '   ' → logprob: -6.627893924713135
    5. 'def' → logprob: -6.752893924713135
    6. '    
' → logprob: -7.377893924713135
    7. '<|end|>' → logprob: -7.877893924713135
    8. '
    
' → logprob: -8.627894401550293
    9. '        
' → logprob: -10.127894401550293
    10. '       ' → logprob: -10.502894401550293

Token 311: ' tuple' (ID: 31311)
  Prédit: ' immutable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' immutable' → logprob: -1.1312265396118164
    2. ' tuple' → logprob: -1.2562265396118164
    3. 'tuple' → logprob: -2.1312265396118164
    4. ' (' → logprob: -2.5062265396118164
    5. 'immutable' → logprob: -2.5062265396118164
    6. '(' → logprob: -3.5062265396118164
    7. ' sorted' → logprob: -3.8812265396118164
    8. ')' → logprob: -4.256226539611816
    9. '(tuple' → logprob: -4.381226539611816
    10. 'sorted' → logprob: -4.881226539611816

Token 312: ' with' (ID: 483)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.898554801940918
    2. '<|end|>' → logprob: -0.898554801940918
    3. ' for' → logprob: -3.148554801940918
    4. 'def' → logprob: -3.648554801940918
    5. ' to' → logprob: -4.148554801940918
    6. '   ' → logprob: -4.148554801940918
    7. '<|end|>' → logprob: -4.273554801940918
    8. 'of' → logprob: -4.273554801940918
    9. 'for' → logprob: -4.898554801940918
    10. ',' → logprob: -5.023554801940918

Token 313: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.5100744366645813
    2. 'length' → logprob: -1.7600743770599365
    3. '7' → logprob: -2.0100743770599365
    4. ' counts' → logprob: -2.6350743770599365
    5. 'len' → logprob: -4.885074615478516
    6. 'count' → logprob: -5.635074615478516
    7. 'inte' → logprob: -6.010074615478516
    8. 'the' → logprob: -6.510074615478516
    9. ' ' → logprob: -7.135074615478516
    10. 'Coin' → logprob: -7.510074615478516

Token 314: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.2802083492279053
    2. ' for' → logprob: -1.4052083492279053
    3. ' per' → logprob: -1.7802083492279053
    4. 'per' → logprob: -1.9052083492279053
    5. '   ' → logprob: -2.6552083492279053
    6. 'def' → logprob: -3.7802083492279053
    7. 'for' → logprob: -3.9052083492279053
    8. 'of' → logprob: -4.280208587646484
    9. ',' → logprob: -4.405208587646484
    10. '<|end|>' → logprob: -5.155208587646484

Token 315: ' coins' (ID: 28969)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.721183717250824
    2. 'coins' → logprob: -1.4711837768554688
    3. '(' → logprob: -1.7211837768554688
    4. 'Coin' → logprob: -2.9711837768554688
    5. '7' → logprob: -3.9711837768554688
    6. '[' → logprob: -4.471183776855469
    7. 'Coins' → logprob: -5.471183776855469
    8. ' coins' → logprob: -5.846183776855469
    9. 'all' → logprob: -5.971183776855469
    10. 'self' → logprob: -6.096183776855469

Token 316: ' in' (ID: 306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 317: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.1343103051185608
    2. 'the' → logprob: -2.884310245513916
    3. 'den' → logprob: -3.384310245513916
    4. 'Coin' → logprob: -4.259310245513916
    5. ' order' → logprob: -4.759310245513916
    6. ' the' → logprob: -6.009310245513916
    7. 'each' → logprob: -6.259310245513916
    8. '(' → logprob: -6.509310245513916
    9. '7' → logprob: -6.884310245513916
    10. ' Coin' → logprob: -7.134310245513916

Token 318: ' in' (ID: 306)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6699522733688354
    2. '   ' → logprob: -0.9199522733688354
    3. '<|end|>' → logprob: -3.419952392578125
    4. 'def' → logprob: -3.544952392578125
    5. 'of' → logprob: -5.294952392578125
    6. '       ' → logprob: -5.544952392578125
    7. ',' → logprob: -5.794952392578125
    8. ' (' → logprob: -5.919952392578125
    9. '<|end|>' → logprob: -6.544952392578125
    10. '.' → logprob: -6.544952392578125

Token 319: ' Coin' (ID: 35089)
  Prédit: 'Coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' → logprob: -3.1186566047836095e-05
    2. ' Coin' → logprob: -10.500031471252441
    3. 'class' → logprob: -13.250031471252441
    4. '_coin' → logprob: -14.000031471252441
    5. '_C' → logprob: -14.625031471252441
    6. 'Payment' → logprob: -15.000031471252441
    7. 'cls' → logprob: -16.125030517578125
    8. 'self' → logprob: -16.250030517578125
    9. 'Cash' → logprob: -18.250030517578125
    10. 'Coins' → logprob: -18.375030517578125

Token 320: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -4.723352049040841e-06
    2. 'Den' → logprob: -12.375004768371582
    3. '_set' → logprob: -14.750004768371582
    4. 'set' → logprob: -16.125003814697266
    5. '_Set' → logprob: -17.125003814697266
    6. '	Set' → logprob: -19.250003814697266
    7. '_SET' → logprob: -19.750003814697266
    8. ' Set' → logprob: -20.375003814697266
    9. ' set' → logprob: -20.500003814697266
    10. '   ' → logprob: -21.250003814697266

Token 321: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.03524614870548248
    2. ')' → logprob: -4.5352463722229
    3. '   ' → logprob: -4.7852463722229
    4. '_den' → logprob: -4.7852463722229
    5. '_' → logprob: -5.4102463722229
    6. '.' → logprob: -7.2852463722229
    7. ' _' → logprob: -7.4102463722229
    8. '       ' → logprob: -8.160245895385742
    9. ' ' → logprob: -8.410245895385742
    10. 'Den' → logprob: -8.535245895385742

Token 322: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -8.566264295950532e-05
    2. '_den' → logprob: -9.375085830688477
    3. ' denominations' → logprob: -14.500085830688477
    4. ' den' → logprob: -16.125085830688477
    5. 'enumer' → logprob: -16.250085830688477
    6. '-den' → logprob: -16.625085830688477
    7. 'value' → logprob: -18.875085830688477
    8. 'coins' → logprob: -19.000085830688477
    9. '   ' → logprob: -19.125085830688477
    10. '_' → logprob: -19.125085830688477

Token 323: 'ominations' (ID: 169517)
  Prédit: 'ominations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ominations' → logprob: -0.0002932750794570893
    2. 'om' → logprob: -8.625293731689453
    3. 'omin' → logprob: -9.500293731689453
    4. '_' → logprob: -11.125293731689453
    5. 'omination' → logprob: -11.625293731689453
    6. 'onom' → logprob: -13.250293731689453
    7. 'ominated' → logprob: -13.625293731689453
    8. '_den' → logprob: -13.750293731689453
    9. '_list' → logprob: -13.750293731689453
    10. 'on' → logprob: -13.750293731689453

Token 324: ' excluding' (ID: 76651)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1523146629333496
    2. '<|end|>' → logprob: -2.0273146629333496
    3. '   ' → logprob: -5.02731466293335
    4. '

' → logprob: -7.15231466293335
    5. '<|end|>' → logprob: -7.15231466293335
    6. 'def' → logprob: -7.27731466293335
    7. '    
' → logprob: -7.40231466293335
    8. ' def' → logprob: -9.402315139770508
    9. '  
' → logprob: -11.402315139770508
    10. '        
' → logprob: -11.527315139770508

Token 325: ' ' (ID: 220)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.965524435043335
    2. 'b' → logprob: -1.215524435043335
    3. '100' → logprob: -1.965524435043335
    4. 'Coin' → logprob: -2.590524435043335
    5. ' the' → logprob: -2.965524435043335
    6. 'class' → logprob: -4.465524673461914
    7. 'last' → logprob: -4.590524673461914
    8. '1' → logprob: -4.840524673461914
    9. ' Coin' → logprob: -5.090524673461914
    10. ' bills' → logprob: -5.840524673461914

Token 326: '100' (ID: 1353)
  Prédit: 'Coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' → logprob: -0.3072928488254547
    2. '100' → logprob: -2.432292938232422
    3. '[' → logprob: -2.807292938232422
    4. ' Coin' → logprob: -3.182292938232422
    5. 'class' → logprob: -3.807292938232422
    6. 'the' → logprob: -4.182292938232422
    7. '0' → logprob: -4.307292938232422
    8. '1' → logprob: -5.432292938232422
    9. '(' → logprob: -5.682292938232422
    10. ' ' → logprob: -6.307292938232422

Token 327: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3254808187484741
    2. '<|end|>' → logprob: -1.7004808187484741
    3. '
' → logprob: -3.7004809379577637
    4. '_' → logprob: -3.9504809379577637
    5. ')' → logprob: -4.200480937957764
    6. '   ' → logprob: -4.450480937957764
    7. ',' → logprob: -5.075480937957764
    8. '    
' → logprob: -5.200480937957764
    9. '    ' → logprob: -5.450480937957764
    10. '

' → logprob: -6.950480937957764

Token 328: '-y' (ID: 18102)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 329: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.0006877713603898883
    2. 'coin' → logprob: -7.625687599182129
    3. 'e' → logprob: -9.625687599182129
    4. 'yen' → logprob: -10.625687599182129
    5. 'an' → logprob: -11.125687599182129
    6. '
' → logprob: -11.375687599182129
    7. 'coins' → logprob: -11.500687599182129
    8. 'ean' → logprob: -11.625687599182129
    9. '_coin' → logprob: -12.125687599182129
    10. ' coin' → logprob: -12.625687599182129

Token 330: ' bills' (ID: 26846)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 331: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11761541664600372
    2. '<|end|>' → logprob: -2.7426154613494873
    3. '   ' → logprob: -3.3676154613494873
    4. '    
' → logprob: -5.242615222930908
    5. '[' → logprob: -6.742615222930908
    6. ')' → logprob: -7.117615222930908
    7. ',' → logprob: -7.117615222930908
    8. '       ' → logprob: -7.617615222930908
    9. ' ' → logprob: -7.742615222930908
    10. ' 
' → logprob: -7.867615222930908

Token 332: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40509727597236633
    2. '   ' → logprob: -1.780097246170044
    3. '    
' → logprob: -2.530097246170044
    4. '<|end|>' → logprob: -2.905097246170044
    5. ',' → logprob: -5.155097484588623
    6. ' 
' → logprob: -5.405097484588623
    7. ':' → logprob: -5.530097484588623
    8. '        
' → logprob: -5.530097484588623
    9. 'def' → logprob: -5.905097484588623
    10. '       ' → logprob: -6.155097484588623

Token 333: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5285870432853699
    2. 'def' → logprob: -1.5285871028900146
    3. '   ' → logprob: -2.2785871028900146
    4. '
' → logprob: -3.0285871028900146
    5. ' def' → logprob: -4.0285868644714355
    6. '<|end|>' → logprob: -4.9035868644714355
    7. 'self' (adapté à ' self') → logprob: -5.2785868644714355
    8. '        
' → logprob: -5.2785868644714355
    9. '    
' → logprob: -6.0285868644714355
    10. ' self' → logprob: -6.2785868644714355

Token 334: '.bill' (ID: 169083)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03492766246199608
    2. '.value' → logprob: -4.409927845001221
    3. '.price' → logprob: -4.534927845001221
    4. '.remaining' → logprob: -5.159927845001221
    5. '._' → logprob: -6.784927845001221
    6. '.current' → logprob: -6.784927845001221
    7. ' .' → logprob: -7.534927845001221
    8. '.amount' → logprob: -7.784927845001221
    9. '.coin' → logprob: -7.784927845001221
    10. '.change' → logprob: -7.909927845001221

Token 335: '_value' (ID: 6734)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2614929974079132
    2. '_counts' → logprob: -2.261492967605591
    3. '_count' → logprob: -2.636492967605591
    4. '_' → logprob: -4.13649320602417
    5. '_index' → logprob: -4.63649320602417
    6. '_value' → logprob: -5.13649320602417
    7. '_co' → logprob: -5.26149320602417
    8. ' =' → logprob: -5.51149320602417
    9. '_amount' → logprob: -5.63649320602417
    10. '=' → logprob: -6.51149320602417

Token 336: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25202062726020813
    2. '=' → logprob: -1.5020205974578857
    3. 's' → logprob: -9.877020835876465
    4. '<|end|>' → logprob: -10.377020835876465
    5. ' ' → logprob: -12.377020835876465
    6. ',' → logprob: -14.002020835876465
    7. '<|end|>' → logprob: -14.127020835876465
    8. '=None' → logprob: -14.252020835876465
    9. ' =
' → logprob: -14.502020835876465
    10. ')' → logprob: -14.627020835876465

Token 337: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.000036239624023
    4. '１００' → logprob: -17.750036239624023
    5. '1' → logprob: -18.625036239624023
    6. '  ' → logprob: -19.125036239624023
    7. 'Coin' → logprob: -19.500036239624023
    8. '```' → logprob: -20.000036239624023
    9. '0' → logprob: -20.375036239624023
    10. '`' → logprob: -21.000036239624023

Token 338: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.5048530030981055e-06
    2. 'Coin' → logprob: -14.000001907348633
    3. ' ' → logprob: -14.625001907348633
    4. '1' → logprob: -16.625001907348633
    5. '0' → logprob: -17.625001907348633
    6. '10' → logprob: -18.875001907348633
    7. '   ' → logprob: -18.875001907348633
    8. '１００' → logprob: -19.125001907348633
    9. '```' → logprob: -20.000001907348633
    10. '999' → logprob: -20.125001907348633

Token 339: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -14.125001907348633
    3. '   ' → logprob: -14.375001907348633
    4. 'def' → logprob: -15.250001907348633
    5. '00' → logprob: -15.750001907348633
    6. '000' → logprob: -16.250001907348633
    7. '       ' → logprob: -16.500001907348633
    8. '    
' → logprob: -16.750001907348633
    9. ' ' → logprob: -16.875001907348633
    10. ')' → logprob: -17.375001907348633

Token 340: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01058695837855339
    2. '<|end|>' → logprob: -5.260586738586426
    3. '   ' → logprob: -5.385586738586426
    4. '

' → logprob: -8.010586738586426
    5. 'def' → logprob: -8.510586738586426
    6. ' def' → logprob: -9.510586738586426
    7. '    
' → logprob: -9.635586738586426
    8. '<|end|>' → logprob: -9.885586738586426
    9. ' 
' → logprob: -10.885586738586426
    10. '
' → logprob: -12.760586738586426

Token 341: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11318420618772507
    2. ' def' → logprob: -2.7381842136383057
    3. 'def' → logprob: -3.2381842136383057
    4. '
' → logprob: -6.613183975219727
    5. '<|end|>' → logprob: -7.113183975219727
    6. '    
' → logprob: -7.863183975219727
    7. ' 
' → logprob: -8.863183975219727
    8. '	def' → logprob: -9.113183975219727
    9. ',' → logprob: -9.238183975219727
    10. '<|end|>' → logprob: -9.988183975219727

Token 342: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.014273280277848244
    2. ' def' → logprob: -4.264273166656494
    3. '   ' → logprob: -9.264273643493652
    4. '@property' → logprob: -11.139273643493652
    5. '@' → logprob: -15.264273643493652
    6. '	def' → logprob: -15.639273643493652
    7. 'de' → logprob: -17.139272689819336
    8. ' @' → logprob: -17.389272689819336
    9. ' ' → logprob: -17.764272689819336
    10. 'class' → logprob: -18.014272689819336

Token 343: ' generate' (ID: 10419)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -1.0881057977676392
    2. ' can' → logprob: -1.7131057977676392
    3. 'can' → logprob: -2.5881056785583496
    4. ' calculate' → logprob: -2.5881056785583496
    5. ' def' → logprob: -2.8381056785583496
    6. ' minimal' → logprob: -3.3381056785583496
    7. ' pay' → logprob: -3.5881056785583496
    8. 'get' → logprob: -3.7131056785583496
    9. 'def' → logprob: -3.8381056785583496
    10. ' minimum' → logprob: -4.08810567855835

Token 344: '_payment' (ID: 61735)
  Prédit: '_change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_change' → logprob: -0.4255315661430359
    2. '_payment' → logprob: -1.8005316257476807
    3. '_' → logprob: -2.4255316257476807
    4. '_possible' → logprob: -3.3005316257476807
    5. '_candidates' → logprob: -4.550531387329102
    6. '_co' → logprob: -4.675531387329102
    7. '_pay' → logprob: -4.925531387329102
    8. '_options' → logprob: -5.425531387329102
    9. '_next' → logprob: -5.550531387329102
    10. '_coin' → logprob: -5.550531387329102

Token 345: '_options' (ID: 19793)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3022090792655945
    2. '_options' → logprob: -1.5522091388702393
    3. '_amount' → logprob: -4.30220890045166
    4. '_method' → logprob: -4.55220890045166
    5. '_plan' → logprob: -4.55220890045166
    6. '(' → logprob: -5.55220890045166
    7. '_com' → logprob: -5.92720890045166
    8. '_pos' → logprob: -6.42720890045166
    9. '_methods' → logprob: -6.42720890045166
    10. '_co' → logprob: -7.42720890045166

Token 346: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018173707649111748
    2. '(' → logprob: -4.018173694610596
    3. ' (' → logprob: -10.768174171447754
    4. '(
' → logprob: -13.768174171447754
    5. 'self' → logprob: -14.268174171447754
    6. '   ' → logprob: -14.393174171447754
    7. '       ' → logprob: -16.143173217773438
    8. '(Self' → logprob: -16.143173217773438
    9. '(s' → logprob: -16.268173217773438
    10. ' self' → logprob: -17.893173217773438

Token 347: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008280038833618164
    2. '):' → logprob: -4.883279800415039
    3. 'self' → logprob: -7.883279800415039
    4. '(self' → logprob: -9.133279800415039
    5. ' ,' → logprob: -9.508279800415039
    6. ',self' → logprob: -9.633279800415039
    7. '):
' → logprob: -10.133279800415039
    8. ' ):' → logprob: -12.508279800415039
    9. '   ' → logprob: -13.133279800415039
    10. ' self' → logprob: -14.133279800415039

Token 348: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03157908469438553
    2. ':' → logprob: -3.90657901763916
    3. '
' → logprob: -5.78157901763916
    4. '():' → logprob: -5.78157901763916
    5. ':
' → logprob: -6.53157901763916
    6. '(' → logprob: -7.03157901763916
    7. '        
' → logprob: -7.65657901763916
    8. '<|end|>' → logprob: -8.03157901763916
    9. '(
' → logprob: -8.40657901763916
    10. ',' → logprob: -8.53157901763916

Token 349: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018389776349067688
    2. ' 
' → logprob: -5.393389701843262
    3. '        
' → logprob: -6.018389701843262
    4. '        ' → logprob: -6.393389701843262
    5. ' pass' → logprob: -6.393389701843262
    6. '[' → logprob: -6.643389701843262
    7. '[]' → logprob: -6.768389701843262
    8. 'pass' → logprob: -7.268389701843262
    9. '\' → logprob: -7.518389701843262
    10. '\n' → logprob: -7.518389701843262

Token 350: ' We' (ID: 1416)
  Prédit: ' options'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' options' → logprob: -0.5859800577163696
    2. '       ' → logprob: -1.8359800577163696
    3. 'options' → logprob: -1.8359800577163696
    4. ' payment' → logprob: -3.21097993850708
    5. 'pass' → logprob: -3.33597993850708
    6. 'payment' → logprob: -3.96097993850708
    7. ' pass' → logprob: -3.96097993850708
    8. '#' → logprob: -5.21097993850708
    9. ' #' → logprob: -5.71097993850708
    10. ' payments' → logprob: -8.335980415344238

Token 351: ' have' (ID: 679)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20916494727134705
    2. '       ' → logprob: -2.33416485786438
    3. ' ' → logprob: -2.95916485786438
    4. '    ' → logprob: -3.70916485786438
    5. '  ' → logprob: -5.459165096282959
    6. ' can' → logprob: -6.459165096282959
    7. ' continue' → logprob: -6.584165096282959
    8. '     ' → logprob: -6.834165096282959
    9. ' def' → logprob: -7.459165096282959
    10. 'n' → logprob: -7.584165096282959

Token 352: ' unlimited' (ID: 34136)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.33389610052108765
    2. ' only' → logprob: -3.0838961601257324
    3. '[]' → logprob: -3.2088961601257324
    4. 'self' → logprob: -3.7088961601257324
    5. ' ' → logprob: -3.8338961601257324
    6. 'to' → logprob: -3.9588961601257324
    7. ' coins' → logprob: -4.083896160125732
    8. ' self' → logprob: -4.208896160125732
    9. '    ' → logprob: -4.333896160125732
    10. ' a' → logprob: -4.833896160125732

Token 353: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 354: '100' (ID: 1353)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.5655391216278076
    2. '100' → logprob: -1.8155391216278076
    3. ' ' → logprob: -2.3155391216278076
    4. ' coins' → logprob: -3.0655391216278076
    5. '500' → logprob: -3.3155391216278076
    6. '10' → logprob: -4.190539360046387
    7. '1' → logprob: -4.315539360046387
    8. 'b' → logprob: -4.565539360046387
    9. ' access' → logprob: -4.815539360046387
    10. ' possibilities' → logprob: -5.065539360046387

Token 355: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.729906196298543e-06
    2. '   ' → logprob: -12.125009536743164
    3. '       ' → logprob: -13.375009536743164
    4. '
' → logprob: -14.125009536743164
    5. '-' → logprob: -15.125009536743164
    6. '_' → logprob: -15.250009536743164
    7. ' -' → logprob: -15.375009536743164
    8. '    ' → logprob: -15.500009536743164
    9. ' ' → logprob: -15.625009536743164
    10. '000' → logprob: -15.750009536743164

Token 356: '-y' (ID: 18102)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4911344647407532
    2. '-y' → logprob: -1.1161344051361084
    3. '-' → logprob: -3.1161344051361084
    4. '   ' → logprob: -4.4911346435546875
    5. '-value' → logprob: -6.2411346435546875
    6. '-valu' → logprob: -7.6161346435546875
    7. '       ' → logprob: -7.8661346435546875
    8. '```' → logprob: -7.9911346435546875
    9. ' ' → logprob: -8.241134643554688
    10. 'yen' → logprob: -8.741134643554688

Token 357: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.006350346840918064
    2. '-en' → logprob: -5.381350517272949
    3. 'n' → logprob: -6.756350517272949
    4. 'an' → logprob: -8.38135051727295
    5. 'yen' → logprob: -10.00635051727295
    6. '-n' → logprob: -10.25635051727295
    7. '   ' → logprob: -10.50635051727295
    8. '
' → logprob: -10.63135051727295
    9. '-' → logprob: -10.75635051727295
    10. '```' → logprob: -10.88135051727295

Token 358: ' bills' (ID: 26846)
  Prédit: ' bills'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bills' → logprob: -0.22371447086334229
    2. 'b' → logprob: -2.7237143516540527
    3. ' coins' → logprob: -2.9737143516540527
    4. ' coin' → logprob: -2.9737143516540527
    5. 'coin' → logprob: -4.598714351654053
    6. '-b' → logprob: -4.973714351654053
    7. ' bill' → logprob: -5.223714351654053
    8. 'coins' → logprob: -5.723714351654053
    9. '_b' → logprob: -5.848714351654053
    10. 'bill' → logprob: -6.098714351654053

Token 359: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.052137985825538635
    2. ':' → logprob: -3.552138090133667
    3. ',' → logprob: -4.427137851715088
    4. '.' → logprob: -6.177137851715088
    5. '
' → logprob: -6.427137851715088
    6. '   ' → logprob: -6.802137851715088
    7. 'def' → logprob: -6.927137851715088
    8. '<|end|>' → logprob: -7.052137851715088
    9. '        
' → logprob: -7.177137851715088
    10. ' and' → logprob: -7.427137851715088

Token 360: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009767306968569756
    2. '#' → logprob: -5.384767532348633
    3. ' but' → logprob: -6.009767532348633
    4. ' and' → logprob: -7.009767532348633
    5. 'and' → logprob: -8.009767532348633
    6. '
' → logprob: -8.134767532348633
    7. '   ' → logprob: -8.259767532348633
    8. ' so' → logprob: -8.259767532348633
    9. 'but' → logprob: -8.634767532348633
    10. '        
' → logprob: -8.884767532348633

Token 361: ' finite' (ID: 73104)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.9467334747314453
    2. 'the' → logprob: -2.0717334747314453
    3. ' we' → logprob: -2.1967334747314453
    4. ' the' → logprob: -2.3217334747314453
    5. 'limited' → logprob: -2.6967334747314453
    6. 'only' → logprob: -2.9467334747314453
    7. ' coins' → logprob: -3.5717334747314453
    8. '#' → logprob: -3.8217334747314453
    9. ' only' → logprob: -3.8217334747314453
    10. 'self' → logprob: -4.446733474731445

Token 362: ' coins' (ID: 28969)
  Prédit: ' coins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coins' → logprob: -0.8977974653244019
    2. ' current' → logprob: -1.5227974653244019
    3. 'coins' → logprob: -1.6477974653244019
    4. ' counts' → logprob: -2.3977975845336914
    5. ' amounts' → logprob: -3.3977975845336914
    6. 'current' → logprob: -3.7727975845336914
    7. 'counts' → logprob: -4.397797584533691
    8. ' coin' → logprob: -4.897797584533691
    9. ' quantities' → logprob: -5.772797584533691
    10. ' numbers' → logprob: -6.397797584533691

Token 363: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1311326026916504
    2. '
' → logprob: -2.8811326026916504
    3. ':' → logprob: -3.1311326026916504
    4. '        
' → logprob: -4.25613260269165
    5. ',' → logprob: -5.75613260269165
    6. '.' → logprob: -6.63113260269165
    7. '<|end|>' → logprob: -6.63113260269165
    8. '    
' → logprob: -7.63113260269165
    9. ':
' → logprob: -7.88113260269165
    10. '  
' → logprob: -8.006132125854492

Token 364: ' hand' (ID: 1803)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.15594491362571716
    2. 'hand' → logprob: -2.28094482421875
    3. ' hand' → logprob: -3.65594482421875
    4. 'each' → logprob: -5.53094482421875
    5. 'inventory' → logprob: -5.78094482421875
    6. 'the' → logprob: -6.15594482421875
    7. ' self' → logprob: -6.15594482421875
    8. 'current' → logprob: -6.53094482421875
    9. 'payment' → logprob: -6.65594482421875
    10. 'change' → logprob: -8.03094482421875

Token 365: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02782721444964409
    2. '
' → logprob: -4.152827262878418
    3. '        
' → logprob: -5.277827262878418
    4. '<|end|>' → logprob: -5.902827262878418
    5. ',' → logprob: -6.402827262878418
    6. ':' → logprob: -6.777827262878418
    7. '.' → logprob: -8.402827262878418
    8. '    
' → logprob: -8.527827262878418
    9. '```' → logprob: -9.027827262878418
    10. '<|end|>' → logprob: -9.152827262878418

Token 366: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001603771117515862
    2. '        
' → logprob: -6.626603603363037
    3. '   ' → logprob: -9.251604080200195
    4. '
' → logprob: -10.001604080200195
    5. '<|end|>' → logprob: -10.126604080200195
    6. '    
' → logprob: -10.626604080200195
    7. '    ' → logprob: -11.501604080200195
    8. '      ' → logprob: -11.751604080200195
    9. '        ' → logprob: -12.001604080200195
    10. ' ' → logprob: -12.126604080200195

Token 367: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34309080243110657
    2. ' options' → logprob: -1.5930907726287842
    3. 'options' → logprob: -3.218090772628784
    4. ' payment' → logprob: -3.218090772628784
    5. 'payment' → logprob: -5.218091011047363
    6. ' for' → logprob: -8.468091011047363
    7. 'yield' → logprob: -8.843091011047363
    8. ' yield' → logprob: -8.968091011047363
    9. ' payments' → logprob: -9.218091011047363
    10. ' pass' → logprob: -9.218091011047363

Token 368: ' We' (ID: 1416)
  Prédit: ' options'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' options' → logprob: -0.3798326253890991
    2. 'options' → logprob: -1.2548326253890991
    3. ' payment' → logprob: -4.504832744598389
    4. 'payment' → logprob: -4.879832744598389
    5. '       ' → logprob: -5.504832744598389
    6. '#' → logprob: -6.004832744598389
    7. 'pass' → logprob: -6.629832744598389
    8. ' pass' → logprob: -7.129832744598389
    9. ' #' → logprob: -7.504832744598389
    10. '   ' → logprob: -7.754832744598389

Token 369: ' try' (ID: 2075)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4393033981323242
    2. 'def' → logprob: -1.5643033981323242
    3. ' can' → logprob: -1.8143033981323242
    4. ' need' → logprob: -2.189303398132324
    5. ' want' → logprob: -2.814303398132324
    6. 'import' → logprob: -3.564303398132324
    7. ' will' → logprob: -3.689303398132324
    8. '    ' → logprob: -3.689303398132324
    9. ' def' → logprob: -3.814303398132324
    10. ' #' → logprob: -3.939303398132324

Token 370: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.39790230989456177
    2. '    ' → logprob: -1.772902250289917
    3. 'to' → logprob: -2.522902250289917
    4. ':' → logprob: -2.772902250289917
    5. '   ' → logprob: -5.647902488708496
    6. ' :' → logprob: -5.647902488708496
    7. '        ' → logprob: -6.147902488708496
    8. ' ' → logprob: -6.272902488708496
    9. '       ' → logprob: -6.647902488708496
    10. 'all' → logprob: -7.522902488708496

Token 371: ' find' (ID: 1646)
  Prédit: ' pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pay' → logprob: -0.5143093466758728
    2. 'pay' → logprob: -1.8893094062805176
    3. ' yield' → logprob: -2.0143094062805176
    4. 'yield' → logprob: -2.5143094062805176
    5. ' use' → logprob: -3.7643094062805176
    6. ' find' → logprob: -5.139309406280518
    7. 'generate' → logprob: -6.014309406280518
    8. ' generate' → logprob: -6.639309406280518
    9. 'find' → logprob: -7.014309406280518
    10. 'use' → logprob: -7.389309406280518

Token 372: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.39720258116722107
    2. ' payment' → logprob: -1.8972026109695435
    3. 'all' → logprob: -2.647202491760254
    4. ' the' → logprob: -3.397202491760254
    5. ' ways' → logprob: -4.022202491760254
    6. ' payments' → logprob: -4.272202491760254
    7. ' a' → logprob: -4.397202491760254
    8. ' combinations' → logprob: -4.397202491760254
    9. ' ' → logprob: -6.022202491760254
    10. ' possible' → logprob: -6.147202491760254

Token 373: ' payment' (ID: 9277)
  Prédit: ' payment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' payment' → logprob: -1.0076932907104492
    2. ' possible' → logprob: -1.6326932907104492
    3. 'possible' → logprob: -2.132693290710449
    4. ' valid' → logprob: -2.257693290710449
    5. ' combinations' → logprob: -2.507693290710449
    6. '<|end|>' → logprob: -3.382693290710449
    7. 'payment' → logprob: -3.632693290710449
    8. ' ways' → logprob: -4.257693290710449
    9. ' ' → logprob: -4.507693290710449
    10. '    ' → logprob: -4.757693290710449

Token 374: ' methods' (ID: 7933)
  Prédit: ' options'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' options' → logprob: -0.211035817861557
    2. '_options' → logprob: -2.33603572845459
    3. 'options' → logprob: -3.46103572845459
    4. ' amounts' → logprob: -3.58603572845459
    5. ' ' → logprob: -4.96103572845459
    6. ' tokens' → logprob: -5.33603572845459
    7. ' methods' → logprob: -5.33603572845459
    8. ' combinations' → logprob: -5.96103572845459
    9. '_amount' → logprob: -5.96103572845459
    10. '_tokens' → logprob: -6.21103572845459

Token 375: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4279007315635681
    2. ' that' → logprob: -1.302900791168213
    3. '(self' → logprob: -3.052900791168213
    4. ' with' → logprob: -4.427900791168213
    5. '   ' → logprob: -5.677900791168213
    6. 'that' → logprob: -5.802900791168213
    7. ' for' → logprob: -5.927900791168213
    8. '(' → logprob: -6.052900791168213
    9. ',' → logprob: -6.677900791168213
    10. 'with' → logprob: -6.802900791168213

Token 376: ' after' (ID: 1934)
  Prédit: ' pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pay' → logprob: -0.7643275260925293
    2. ' use' → logprob: -1.3893275260925293
    3. 'pay' → logprob: -2.1393275260925293
    4. ' cover' → logprob: -2.2643275260925293
    5. 'use' → logprob: -4.139327526092529
    6. ' can' → logprob: -4.514327526092529
    7. 'cover' → logprob: -4.514327526092529
    8. 'return' → logprob: -5.264327526092529
    9. ' return' → logprob: -5.264327526092529
    10. ' sum' → logprob: -5.639327526092529

Token 377: ' payment' (ID: 9277)
  Prédit: 'pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pay' → logprob: -0.615985631942749
    2. ' paying' → logprob: -0.990985631942749
    3. 'payment' → logprob: -3.115985631942749
    4. 'giving' → logprob: -4.865985870361328
    5. 'using' → logprob: -5.240985870361328
    6. 'cover' → logprob: -5.490985870361328
    7. ' subtract' → logprob: -5.490985870361328
    8. ' covering' → logprob: -5.740985870361328
    9. ' payment' → logprob: -5.740985870361328
    10. ' giving' → logprob: -5.865985870361328

Token 378: ' produce' (ID: 10635)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.090437412261963
    2. ' use' → logprob: -1.340437412261963
    3. ' return' → logprob: -1.590437412261963
    4. ' include' → logprob: -2.590437412261963
    5. ' produce' → logprob: -3.465437412261963
    6. 'return' → logprob: -4.340437412261963
    7. ' provide' → logprob: -4.465437412261963
    8. ' result' → logprob: -4.715437412261963
    9. 'use' → logprob: -4.965437412261963
    10. ' give' → logprob: -4.965437412261963

Token 379: ' minimal' (ID: 19957)
  Prédit: ' change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' change' → logprob: -0.5189981460571289
    2. ' correct' → logprob: -2.018998146057129
    3. ' a' → logprob: -2.518998146057129
    4. 'change' → logprob: -2.768998146057129
    5. ' exact' → logprob: -3.643998146057129
    6. ' minimal' → logprob: -3.893998146057129
    7. 'exact' → logprob: -4.518998146057129
    8. ' possible' → logprob: -4.768998146057129
    9. ' an' → logprob: -4.768998146057129
    10. ' the' → logprob: -4.893998146057129

Token 380: ' change' (ID: 3343)
  Prédit: ' change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' change' → logprob: -0.22499825060367584
    2. 'change' → logprob: -1.8499982357025146
    3. ' over' → logprob: -3.5999982357025146
    4. ' possible' → logprob: -5.849998474121094
    5. ' extra' → logprob: -5.849998474121094
    6. ' total' → logprob: -5.974998474121094
    7. 'over' → logprob: -6.099998474121094
    8. '_change' → logprob: -6.599998474121094
    9. ' leftover' → logprob: -6.724998474121094
    10. 'possible' → logprob: -7.349998474121094

Token 381: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10784582048654556
    2. '(self' → logprob: -3.3578457832336426
    3. '.' → logprob: -3.8578457832336426
    4. ',' → logprob: -3.8578457832336426
    5. '
' → logprob: -4.732845783233643
    6. ' (' → logprob: -6.107845783233643
    7. '.
' → logprob: -6.232845783233643
    8. '   ' → logprob: -6.357845783233643
    9. '        
' → logprob: -6.357845783233643
    10. '(' → logprob: -6.607845783233643

Token 382: 'and' (ID: 427)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12710145115852356
    2. ' )' → logprob: -2.627101421356201
    3. '   ' → logprob: -5.002101421356201
    4. ' ' → logprob: -5.752101421356201
    5. ' equal' → logprob: -5.752101421356201
    6. ' return' → logprob: -6.002101421356201
    7. ' with' → logprob: -6.002101421356201
    8. ').' → logprob: -6.002101421356201
    9. ' minimal' → logprob: -6.127101421356201
    10. ' minimizing' → logprob: -6.252101421356201

Token 383: ' thus' (ID: 13972)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.481647253036499
    2. '#' → logprob: -1.106647253036499
    3. ' minimal' → logprob: -4.731647491455078
    4. ' return' → logprob: -5.481647491455078
    5. 'return' → logprob: -5.731647491455078
    6. '       ' → logprob: -5.731647491455078
    7. ' #' → logprob: -5.856647491455078
    8. 'minimal' → logprob: -5.981647491455078
    9. 'possible' → logprob: -6.106647491455078
    10. 'maximize' → logprob: -6.106647491455078

Token 384: ' get' (ID: 717)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.554065465927124
    2. ' minimal' → logprob: -2.054065465927124
    3. 'maximize' → logprob: -2.179065465927124
    4. '       ' → logprob: -2.554065465927124
    5. '```' → logprob: -2.679065465927124
    6. ' minimize' → logprob: -2.679065465927124
    7. 'minimal' → logprob: -2.929065465927124
    8. ' maximize' → logprob: -3.179065465927124
    9. '   ' → logprob: -3.554065465927124
    10. 'min' → logprob: -3.554065465927124

Token 385: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6065977215766907
    2. ' minimal' → logprob: -2.106597661972046
    3. ' all' → logprob: -2.356597661972046
    4. '```' → logprob: -3.356597661972046
    5. 'exact' → logprob: -4.106597900390625
    6. ' exact' → logprob: -4.231597900390625
    7. 'the' → logprob: -4.231597900390625
    8. ' optimal' → logprob: -4.231597900390625
    9. '   ' → logprob: -4.356597900390625
    10. 'all' → logprob: -4.481597900390625

Token 386: ' ' (ID: 220)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' best' → logprob: -1.348754644393921
    2. ' minimal' → logprob: -1.598754644393921
    3. ' next' → logprob: -2.473754644393921
    4. ' exact' → logprob: -2.598754644393921
    5. 'best' → logprob: -2.973754644393921
    6. ' user' → logprob: -2.973754644393921
    7. ' most' → logprob: -3.598754644393921
    8. ' least' → logprob: -3.848754644393921
    9. 'minimal' → logprob: -3.973754644393921
    10. 'next' → logprob: -4.0987548828125

Token 387: '500' (ID: 3234)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -1.0094915628433228
    2. ' best' → logprob: -2.009491443634033
    3. 'next' → logprob: -3.009491443634033
    4. ' minimal' → logprob: -3.384491443634033
    5. 'full' → logprob: -3.509491443634033
    6. ' next' → logprob: -3.509491443634033
    7. 'minimal' → logprob: -3.509491443634033
    8. 'change' → logprob: -3.634491443634033
    9. 'exact' → logprob: -3.759491443634033
    10. 'most' → logprob: -3.759491443634033

Token 388: '-y' (ID: 18102)
  Prédit: '-y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-y' → logprob: -0.7143329977989197
    2. '-' → logprob: -1.2143330574035645
    3. ')' → logprob: -2.8393330574035645
    4. '-)' → logprob: -3.3393330574035645
    5. ',' → logprob: -3.9643330574035645
    6. ' -' → logprob: -4.3393330574035645
    7. '   ' → logprob: -4.5893330574035645
    8. ')-' → logprob: -4.5893330574035645
    9. '-,' → logprob: -4.7143330574035645
    10. '-value' → logprob: -4.7143330574035645

Token 389: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.020196372643113136
    2. '-en' → logprob: -4.395196437835693
    3. 'coin' → logprob: -6.020196437835693
    4. '-' → logprob: -6.770196437835693
    5. '```' → logprob: -7.395196437835693
    6. '-token' → logprob: -7.957696437835693
    7. 'an' → logprob: -8.020195960998535
    8. '-co' → logprob: -8.145195960998535
    9. '-den' → logprob: -8.645195960998535
    10. '   ' → logprob: -9.145195960998535

Token 390: ' coin' (ID: 22179)
  Prédit: ' coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.3226369619369507
    2. 'coin' → logprob: -1.8226369619369507
    3. '_coin' → logprob: -2.9476370811462402
    4. ',' → logprob: -4.19763708114624
    5. '_' → logprob: -4.32263708114624
    6. ')' → logprob: -4.32263708114624
    7. '-' → logprob: -5.69763708114624
    8. ' and' → logprob: -5.94763708114624
    9. ' )' → logprob: -6.32263708114624
    10. '
' → logprob: -6.32263708114624

Token 391: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4840811491012573
    2. '   ' → logprob: -1.6090811491012573
    3. ')' → logprob: -1.8590811491012573
    4. 's' → logprob: -1.9840811491012573
    5. '):' → logprob: -2.484081268310547
    6. ').' → logprob: -3.109081268310547
    7. '       ' → logprob: -3.234081268310547
    8. '):
' → logprob: -3.359081268310547
    9. '.' → logprob: -4.734081268310547
    10. ' ,' → logprob: -4.859081268310547

Token 392: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -1.141336441040039
    2. 'hand' → logprob: -1.141336441040039
    3. 'return' → logprob: -1.766336441040039
    4. ' hand' → logprob: -2.391336441040039
    5. 'the' → logprob: -3.141336441040039
    6. ' the' → logprob: -4.391336441040039
    7. ' return' → logprob: -4.766336441040039
    8. ' change' → logprob: -5.016336441040039
    9. '```' → logprob: -5.266336441040039
    10. 'payment' → logprob: -5.391336441040039

Token 393: ' if' (ID: 538)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.936761200428009
    2. '       ' → logprob: -1.1867611408233643
    3. ')' → logprob: -1.9367611408233643
    4. '(self' → logprob: -2.9367611408233643
    5. ').' → logprob: -3.3117611408233643
    6. '):
' → logprob: -3.4367611408233643
    7. ',' → logprob: -4.436761379241943
    8. '.' → logprob: -4.811761379241943
    9. '   ' → logprob: -5.186761379241943
    10. ':' → logprob: -5.186761379241943

Token 394: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.1958579570055008
    2. ' possible' → logprob: -2.1958580017089844
    3. 'any' → logprob: -3.6958580017089844
    4. ' any' → logprob: -3.8208580017089844
    5. 'needed' → logprob: -5.445858001708984
    6. 'self' → logprob: -5.695858001708984
    7. '```' → logprob: -6.445858001708984
    8. 'available' → logprob: -6.570858001708984
    9. 'change' → logprob: -7.070858001708984
    10. ')' → logprob: -7.195858001708984

Token 395: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8052754998207092
    2. ').' → logprob: -0.9302754998207092
    3. '       ' → logprob: -2.1802754402160645
    4. '):' → logprob: -3.3052754402160645
    5. '   ' → logprob: -5.8052754402160645
    6. '):
' → logprob: -6.0552754402160645
    7. ',' → logprob: -6.5552754402160645
    8. ').
' → logprob: -7.0552754402160645
    9. '),' → logprob: -7.8052754402160645
    10. '.' → logprob: -7.9302754402160645

Token 396: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02285837195813656
    2. '
' → logprob: -4.147858142852783
    3. '<|end|>' → logprob: -5.522858142852783
    4. '        
' → logprob: -7.022858142852783
    5. '   ' → logprob: -7.147858142852783
    6. '```' → logprob: -7.897858142852783
    7. ' ' → logprob: -8.772858619689941
    8. '<|end|>' → logprob: -9.022858619689941
    9. ',' → logprob: -9.397858619689941
    10. '    
' → logprob: -10.022858619689941

Token 397: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034882856998592615
    2. '
' → logprob: -6.253488063812256
    3. '        
' → logprob: -6.753488063812256
    4. '```' → logprob: -9.378488540649414
    5. ' 
' → logprob: -9.878488540649414
    6. 'result' → logprob: -10.128488540649414
    7. '    
' → logprob: -10.378488540649414
    8. '   ' → logprob: -10.753488540649414
    9. '<|end|>' → logprob: -11.003488540649414
    10. 'n' → logprob: -11.003488540649414

Token 398: ' To' (ID: 2514)
  Prédit: ' options'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' options' → logprob: -0.5294438004493713
    2. '       ' → logprob: -1.1544437408447266
    3. ' payment' → logprob: -2.6544437408447266
    4. 'options' → logprob: -4.404443740844727
    5. ' pass' → logprob: -5.404443740844727
    6. 'payment' → logprob: -5.654443740844727
    7. ' methods' → logprob: -6.904443740844727
    8. ' result' → logprob: -7.279443740844727
    9. 'pass' → logprob: -7.529443740844727
    10. ' max' → logprob: -7.654443740844727

Token 399: ' obtain' (ID: 9579)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.7551403045654297
    2. ' find' → logprob: -1.8801403045654297
    3. ' do' → logprob: -2.7551403045654297
    4. 'find' → logprob: -3.2551403045654297
    5. 'generate' → logprob: -3.3801403045654297
    6. 'def' → logprob: -3.5051403045654297
    7. ' achieve' → logprob: -3.6301403045654297
    8. ' def' → logprob: -4.25514030456543
    9. ' produce' → logprob: -4.25514030456543
    10. '   ' → logprob: -4.25514030456543

Token 400: ' a' (ID: 261)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.16211733222007751
    2. ' minimal' → logprob: -2.4121172428131104
    3. 'all' → logprob: -4.5371174812316895
    4. ' the' → logprob: -4.5371174812316895
    5. ' payment' → logprob: -4.6621174812316895
    6. ' ' → logprob: -5.2871174812316895
    7. ' optimal' → logprob: -5.5371174812316895
    8. ' self' → logprob: -5.6621174812316895
    9. ' payments' → logprob: -6.1621174812316895
    10. 'minimal' → logprob: -6.2871174812316895

Token 401: ' ' (ID: 220)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.008887307718396187
    2. 'v' → logprob: -6.13388729095459
    3. 'dd' → logprob: -7.00888729095459
    4. 'dv' → logprob: -7.00888729095459
    5. ' ' → logprob: -7.63388729095459
    6. 'pp' → logprob: -7.63388729095459
    7. 'void' → logprob: -7.63388729095459
    8. 'b' → logprob: -8.13388729095459
    9. ' payment' → logprob: -8.13388729095459
    10. 'def' → logprob: -8.13388729095459

Token 402: '500' (ID: 3234)
  Prédit: 'payment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'payment' → logprob: -1.077670931816101
    2. 'minimal' → logprob: -1.452670931816101
    3. 'list' → logprob: -2.4526710510253906
    4. 'minimum' → logprob: -2.5776710510253906
    5. 'valid' → logprob: -3.3276710510253906
    6. 'range' → logprob: -3.4526710510253906
    7. 'result' → logprob: -3.5776710510253906
    8. 'def' → logprob: -3.7026710510253906
    9. '
' → logprob: -4.202671051025391
    10. 'possible' → logprob: -4.202671051025391

Token 403: '-y' (ID: 18102)
  Prédit: '-y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-y' → logprob: -0.30264779925346375
    2. ' -' → logprob: -1.9276478290557861
    3. '-value' → logprob: -3.427647829055786
    4. '0' → logprob: -3.677647829055786
    5. '-' → logprob: -4.302647590637207
    6. '-return' → logprob: -4.677647590637207
    7. '
' → logprob: -5.052647590637207
    8. ' ' → logprob: -5.552647590637207
    9. '-token' → logprob: -5.677647590637207
    10. '   ' → logprob: -5.677647590637207

Token 404: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.009581838734447956
    2. '-en' → logprob: -5.009582042694092
    3. '-' → logprob: -7.009582042694092
    4. 'yen' → logprob: -7.509582042694092
    5. 'coin' → logprob: -7.509582042694092
    6. 'e' → logprob: -9.509581565856934
    7. '-m' → logprob: -9.509581565856934
    8. '   ' → logprob: -9.634581565856934
    9. '```' → logprob: -9.634581565856934
    10. ' coin' → logprob: -10.384581565856934

Token 405: ' coin' (ID: 22179)
  Prédit: ' coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.16203248500823975
    2. 'coin' → logprob: -1.9120324850082397
    3. '_coin' → logprob: -6.412032604217529
    4. '_' → logprob: -10.412032127380371
    5. '```' → logprob: -11.162032127380371
    6. ',' → logprob: -11.162032127380371
    7. ' return' → logprob: -11.349532127380371
    8. 'Coin' → logprob: -11.599532127380371
    9. ' ' → logprob: -11.662032127380371
    10. '.coin' → logprob: -11.787032127380371

Token 406: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014466643333435059
    2. ' as' → logprob: -7.501446723937988
    3. ' coin' → logprob: -8.626446723937988
    4. ' in' → logprob: -9.126446723937988
    5. '500' → logprob: -9.626446723937988
    6. 'coin' → logprob: -9.626446723937988
    7. ' ,' → logprob: -9.751446723937988
    8. 'from' → logprob: -9.751446723937988
    9. ' you' → logprob: -9.751446723937988
    10. '.' → logprob: -10.001446723937988

Token 407: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3573465049266815
    2. ' we' → logprob: -2.107346534729004
    3. 'we' → logprob: -2.732346534729004
    4. '#' → logprob: -2.982346534729004
    5. ' payment' → logprob: -4.107346534729004
    6. ' #' → logprob: -5.107346534729004
    7. 'payment' → logprob: -5.107346534729004
    8. '   ' → logprob: -5.232346534729004
    9. ' the' → logprob: -5.232346534729004
    10. 'pass' → logprob: -5.607346534729004

Token 408: ' change' (ID: 3343)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.9131013751029968
    2. ' payment' → logprob: -1.1631014347076416
    3. 'payment' → logprob: -2.6631014347076416
    4. ' code' → logprob: -3.6631014347076416
    5. 'next' → logprob: -3.7881014347076416
    6. ' user' → logprob: -3.9131014347076416
    7. ' change' → logprob: -4.0381011962890625
    8. ' method' → logprob: -4.5381011962890625
    9. ' best' → logprob: -4.5381011962890625
    10. ' price' → logprob: -4.6631011962890625

Token 409: ' must' (ID: 2804)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7516124248504639
    2. ' must' → logprob: -2.126612424850464
    3. ' amount' → logprob: -2.501612424850464
    4. 'amount' → logprob: -2.626612424850464
    5. ' should' → logprob: -2.876612424850464
    6. ',' → logprob: -2.876612424850464
    7. ' can' → logprob: -3.751612424850464
    8. '_amount' → logprob: -3.751612424850464
    9. '   ' → logprob: -4.001612663269043
    10. ' given' → logprob: -4.376612663269043

Token 410: ' contain' (ID: 10232)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.016644665971398354
    2. 'be' → logprob: -4.266644477844238
    3. ' include' → logprob: -6.766644477844238
    4. 'ex' → logprob: -8.391644477844238
    5. 'include' → logprob: -8.516644477844238
    6. ' >=' → logprob: -8.766644477844238
    7. '>=' → logprob: -8.766644477844238
    8. ' exceed' → logprob: -9.016644477844238
    9. ' not' → logprob: -9.141644477844238
    10. ' at' → logprob: -9.516644477844238

Token 411: ' it' (ID: 480)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '500' → logprob: -0.11935298144817352
    2. ' ' → logprob: -2.9943530559539795
    3. 'a' → logprob: -4.1193528175354
    4. ' a' → logprob: -4.4943528175354
    5. ' the' → logprob: -4.6193528175354
    6. ' at' → logprob: -4.6193528175354
    7. 'the' → logprob: -5.1193528175354
    8. 'at' → logprob: -5.6193528175354
    9. '50' → logprob: -7.1193528175354
    10. '   ' → logprob: -7.4943528175354

Token 412: '.
' (ID: 558)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5790276527404785
    2. '       ' → logprob: -1.7040276527404785
    3. '
' → logprob: -2.0790276527404785
    4. ':' → logprob: -2.3290276527404785
    5. '.' → logprob: -5.0790276527404785
    6. '   ' → logprob: -5.0790276527404785
    7. ',' → logprob: -5.0790276527404785
    8. ':
' → logprob: -5.2040276527404785
    9. '        
' → logprob: -5.5790276527404785
    10. '(' → logprob: -6.5790276527404785

Token 413: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004134087823331356
    2. '
' → logprob: -6.379134178161621
    3. '        
' → logprob: -7.004134178161621
    4. '<|end|>' → logprob: -7.129134178161621
    5. '   ' → logprob: -7.754134178161621
    6. '    
' → logprob: -9.129134178161621
    7. ',' → logprob: -10.254134178161621
    8. '<|end|>' → logprob: -10.379134178161621
    9. '```' → logprob: -11.254134178161621
    10. ' ' → logprob: -11.379134178161621

Token 414: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018060851842164993
    2. ' options' → logprob: -5.018060684204102
    3. ' payment' → logprob: -5.518060684204102
    4. 'options' → logprob: -5.518060684204102
    5. 'payment' → logprob: -6.268060684204102
    6. 'results' → logprob: -8.143060684204102
    7. 'result' → logprob: -8.143060684204102
    8. ' results' → logprob: -9.018060684204102
    9. '        
' → logprob: -9.393060684204102
    10. ' result' → logprob: -9.643060684204102

Token 415: ' Since' (ID: 12265)
  Prédit: ' options'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' options' → logprob: -0.37690818309783936
    2. 'options' → logprob: -1.5019081830978394
    3. ' payment' → logprob: -3.251908302307129
    4. 'payment' → logprob: -3.501908302307129
    5. '       ' → logprob: -5.126908302307129
    6. ' max' → logprob: -6.376908302307129
    7. '#' → logprob: -6.501908302307129
    8. 'def' → logprob: -6.751908302307129
    9. 'max' → logprob: -6.751908302307129
    10. ' min' → logprob: -6.876908302307129

Token 416: ' change' (ID: 3343)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7358997464179993
    2. 'the' → logprob: -1.2358996868133545
    3. ' we' → logprob: -2.7358996868133545
    4. 'we' → logprob: -2.9858996868133545
    5. 'self' → logprob: -2.9858996868133545
    6. 'change' → logprob: -4.360899925231934
    7. ' self' → logprob: -4.610899925231934
    8. ' change' → logprob: -5.235899925231934
    9. ' payment' → logprob: -5.485899925231934
    10. '500' → logprob: -5.485899925231934

Token 417: ' is' (ID: 382)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.5450515747070312
    2. ' is' → logprob: -1.5450515747070312
    3. ' can' → logprob: -3.0450515747070312
    4. ' contains' → logprob: -3.2950515747070312
    5. 'must' → logprob: -3.5450515747070312
    6. ' =' → logprob: -4.295051574707031
    7. ' may' → logprob: -4.420051574707031
    8. '_amount' → logprob: -4.545051574707031
    9. '_given' → logprob: -4.795051574707031
    10. '_required' → logprob: -5.295051574707031

Token 418: ' calculated' (ID: 25702)
  Prédit: 'always'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'always' → logprob: -0.7246913313865662
    2. ' always' → logprob: -1.849691390991211
    3. 'minimal' → logprob: -2.974691390991211
    4. 'at' → logprob: -3.349691390991211
    5. 'usually' → logprob: -3.474691390991211
    6. 'min' → logprob: -4.099691390991211
    7. 'made' → logprob: -4.224691390991211
    8. ' minimal' → logprob: -4.224691390991211
    9. '   ' → logprob: -4.224691390991211
    10. ' at' → logprob: -4.349691390991211

Token 419: ' as' (ID: 472)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.8998624086380005
    2. ' from' → logprob: -1.6498624086380005
    3. ' as' → logprob: -1.6498624086380005
    4. ' using' → logprob: -2.649862289428711
    5. ' after' → logprob: -3.024862289428711
    6. 'from' → logprob: -3.399862289428711
    7. ' based' → logprob: -4.399862289428711
    8. ' only' → logprob: -4.899862289428711
    9. ' =' → logprob: -5.024862289428711
    10. ',' → logprob: -5.149862289428711

Token 420: ' (' (ID: 350)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2270407676696777
    2. ' payment' → logprob: -1.4770407676696777
    3. 'payment' → logprob: -1.6020407676696777
    4. ' self' → logprob: -1.7270407676696777
    5. 'price' → logprob: -3.6020407676696777
    6. ' the' → logprob: -4.227040767669678
    7. 'the' → logprob: -4.352040767669678
    8. ' price' → logprob: -5.102040767669678
    9. 'paid' → logprob: -5.102040767669678
    10. '   ' → logprob: -5.227040767669678

Token 421: 'money' (ID: 52994)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.33234408497810364
    2. ' self' → logprob: -1.9573440551757812
    3. 'payment' → logprob: -2.2073440551757812
    4. ' payment' → logprob: -4.082344055175781
    5. 'price' → logprob: -4.957344055175781
    6. 'paid' → logprob: -6.082344055175781
    7. '   ' → logprob: -6.707344055175781
    8. 'pay' → logprob: -6.957344055175781
    9. 'total' → logprob: -7.457344055175781
    10. ' price' → logprob: -7.582344055175781

Token 422: ' given' (ID: 4335)
  Prédit: '_paid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_paid' → logprob: -0.630834698677063
    2. '_given' → logprob: -1.255834698677063
    3. 'paid' → logprob: -2.6308345794677734
    4. ' -' → logprob: -3.6308345794677734
    5. ' paid' → logprob: -4.130834579467773
    6. 'given' → logprob: -4.380834579467773
    7. '   ' → logprob: -4.505834579467773
    8. ' given' → logprob: -4.505834579467773
    9. '_t' → logprob: -5.005834579467773
    10. 'provided' → logprob: -5.130834579467773

Token 423: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.49262285232543945
    2. ')' → logprob: -1.2426228523254395
    3. '-' → logprob: -2.8676228523254395
    4. '+' → logprob: -4.1176228523254395
    5. ' +' → logprob: -4.2426228523254395
    6. '   ' → logprob: -4.9926228523254395
    7. ' )' → logprob: -6.6176228523254395
    8. ' ' → logprob: -6.8676228523254395
    9. ')-(' → logprob: -7.2426228523254395
    10. ')+' → logprob: -7.3676228523254395

Token 424: ' price' (ID: 3911)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9064832925796509
    2. ' price' → logprob: -1.1564832925796509
    3. ' self' → logprob: -1.6564832925796509
    4. 'price' → logprob: -2.4064831733703613
    5. ')' → logprob: -8.28148365020752
    6. '   ' → logprob: -9.03148365020752
    7. '	price' → logprob: -10.78148365020752
    8. '       ' → logprob: -11.15648365020752
    9. '
' → logprob: -11.46898365020752
    10. '    ' → logprob: -11.59398365020752

Token 425: ').
' (ID: 6294)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.4805731177330017
    2. ')' → logprob: -0.9805731177330017
    3. '+' → logprob: -6.3555731773376465
    4. ' +' → logprob: -6.8555731773376465
    5. ' ),' → logprob: -7.3555731773376465
    6. '):
' → logprob: -7.4805731773376465
    7. ')
' → logprob: -7.6055731773376465
    8. '       ' → logprob: -7.6055731773376465
    9. ' )' → logprob: -8.105572700500488
    10. '   ' → logprob: -8.355572700500488

Token 426: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018966291099786758
    2. '
' → logprob: -6.876896858215332
    3. '   ' → logprob: -7.876896858215332
    4. '        
' → logprob: -8.001896858215332
    5. '<|end|>' → logprob: -9.876896858215332
    6. '    
' → logprob: -10.376896858215332
    7. 'import' → logprob: -10.876896858215332
    8. 'def' → logprob: -11.126896858215332
    9. ',' → logprob: -12.001896858215332
    10. '<|end|>' → logprob: -12.126896858215332

Token 427: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018520120065659285
    2. '   ' → logprob: -7.376852035522461
    3. ' options' → logprob: -8.251852035522461
    4. ' payment' → logprob: -8.501852035522461
    5. 'options' → logprob: -9.126852035522461
    6. '        
' → logprob: -9.126852035522461
    7. 'payment' → logprob: -9.126852035522461
    8. '
' → logprob: -9.251852035522461
    9. 'def' → logprob: -10.376852035522461
    10. '    ' → logprob: -10.376852035522461

Token 428: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0042868610471487045
    2. '   ' → logprob: -6.879286766052246
    3. '        
' → logprob: -6.879286766052246
    4. '
' → logprob: -7.129286766052246
    5. '    ' → logprob: -7.254286766052246
    6. '        ' → logprob: -8.379286766052246
    7. '#' → logprob: -9.504286766052246
    8. '    
' → logprob: -9.754286766052246
    9. '      ' → logprob: -10.129286766052246
    10. ' ' → logprob: -10.504286766052246

Token 429: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6324125528335571
    2. ' options' → logprob: -1.5074125528335571
    3. ' max' → logprob: -2.5074124336242676
    4. '   ' → logprob: -3.5074124336242676
    5. '#' (adapté à ' #') → logprob: -3.5074124336242676
    6. 'max' → logprob: -4.382412433624268
    7. ' payment' → logprob: -4.382412433624268
    8. ' #' → logprob: -4.507412433624268
    9. ' given' → logprob: -4.507412433624268
    10. 'options' → logprob: -4.757412433624268

Token 430: ' Because' (ID: 13602)
  Prédit: ' options'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' options' → logprob: -1.1927388906478882
    2. 'options' → logprob: -1.6927388906478882
    3. '       ' → logprob: -1.8177388906478882
    4. '   ' → logprob: -2.1927390098571777
    5. ' max' → logprob: -3.3177390098571777
    6. 'max' → logprob: -3.5677390098571777
    7. 'def' → logprob: -3.8177390098571777
    8. 'payment' → logprob: -4.067739009857178
    9. ' payment' → logprob: -4.317739009857178
    10. '#' → logprob: -4.317739009857178

Token 431: ' handing' (ID: 104896)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.17598898708820343
    2. ' we' → logprob: -2.9259889125823975
    3. ' of' → logprob: -3.1759889125823975
    4. ' payment' → logprob: -3.9259889125823975
    5. 'the' → logprob: -4.175989151000977
    6. '    ' → logprob: -5.050989151000977
    7. ' money' → logprob: -5.675989151000977
    8. ' you' → logprob: -5.800989151000977
    9. ' indentation' → logprob: -6.175989151000977
    10. ' coins' → logprob: -6.300989151000977

Token 432: ' over' (ID: 1072)
  Prédit: ' over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' over' → logprob: -0.2718333899974823
    2. 'over' → logprob: -2.1468334197998047
    3. ' ' → logprob: -3.6468334197998047
    4. ' in' → logprob: -3.6468334197998047
    5. ' the' → logprob: -4.146833419799805
    6. '   ' → logprob: -4.646833419799805
    7. ' off' → logprob: -5.146833419799805
    8. '    ' → logprob: -5.396833419799805
    9. '       ' → logprob: -5.521833419799805
    10. 'in' → logprob: -5.521833419799805

Token 433: ' too' (ID: 3101)
  Prédit: 'exact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exact' → logprob: -1.7735925912857056
    2. '100' → logprob: -2.023592472076416
    3. ' coins' → logprob: -2.523592472076416
    4. ' a' → logprob: -2.773592472076416
    5. 'over' → logprob: -2.898592472076416
    6. ' money' → logprob: -3.023592472076416
    7. ' exact' → logprob: -3.023592472076416
    8. ' ' → logprob: -3.023592472076416
    9. ' cash' → logprob: -3.273592472076416
    10. ' bills' → logprob: -3.398592472076416

Token 434: ' many' (ID: 1991)
  Prédit: ' much'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' much' → logprob: -0.34469565749168396
    2. ' many' → logprob: -1.4696956872940063
    3. ' ' → logprob: -3.719695568084717
    4. ' few' → logprob: -4.469695568084717
    5. '_' → logprob: -4.719695568084717
    6. ' large' → logprob: -4.844695568084717
    7. 'much' → logprob: -5.594695568084717
    8. ' little' → logprob: -6.969695568084717
    9. ' _' → logprob: -6.969695568084717
    10. '_many' → logprob: -7.344695568084717

Token 435: ' coins' (ID: 28969)
  Prédit: ' coins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coins' → logprob: -0.2571028769016266
    2. 'coins' → logprob: -1.7571028470993042
    3. '100' → logprob: -3.8821029663085938
    4. ' ' → logprob: -4.007102966308594
    5. ' money' → logprob: -6.257102966308594
    6. ' tokens' → logprob: -6.382102966308594
    7. ' spaces' → logprob: -6.507102966308594
    8. '   ' → logprob: -6.507102966308594
    9. '    ' → logprob: -6.632102966308594
    10. '  ' → logprob: -6.757102966308594

Token 436: ' is' (ID: 382)
  Prédit: ' may'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' may' → logprob: -0.9772368669509888
    2. ' is' → logprob: -2.102236747741699
    3. ' might' → logprob: -2.477236747741699
    4. ',' → logprob: -2.852236747741699
    5. ' could' → logprob: -3.227236747741699
    6. ' will' → logprob: -3.352236747741699
    7. ' and' → logprob: -3.352236747741699
    8. ' can' → logprob: -3.477236747741699
    9. 'may' → logprob: -3.602236747741699
    10. '   ' → logprob: -3.852236747741699

Token 437: ' useless' (ID: 52837)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.8282748460769653
    2. ' tricky' → logprob: -1.9532748460769653
    3. ' costly' → logprob: -2.328274726867676
    4. ' possible' → logprob: -2.453274726867676
    5. ' often' → logprob: -2.703274726867676
    6. ' expensive' → logprob: -2.828274726867676
    7. ' easy' → logprob: -3.203274726867676
    8. ' limited' → logprob: -3.328274726867676
    9. ' likely' → logprob: -3.453274726867676
    10. ' a' → logprob: -3.828274726867676

Token 438: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004419913049787283
    2. ',
' → logprob: -6.129419803619385
    3. '.' → logprob: -6.879419803619385
    4. ' ,' → logprob: -7.629419803619385
    5. ' and' → logprob: -8.004420280456543
    6. ' for' → logprob: -9.379420280456543
    7. '...' → logprob: -9.379420280456543
    8. ' (' → logprob: -10.129420280456543
    9. ' in' → logprob: -10.379420280456543
    10. '   ' → logprob: -10.504420280456543

Token 439: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3832271695137024
    2. '#' → logprob: -1.2582271099090576
    3. 'we' → logprob: -4.008227348327637
    4. ' we' → logprob: -4.633227348327637
    5. ' #' → logprob: -6.133227348327637
    6. '   ' → logprob: -7.383227348327637
    7. 'def' → logprob: -7.758227348327637
    8. 'return' → logprob: -7.758227348327637
    9. '...' → logprob: -7.883227348327637
    10. ' the' → logprob: -8.133227348327637

Token 440: ' limit' (ID: 5967)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5819622278213501
    2. '       ' → logprob: -2.3319621086120605
    3. ' ' → logprob: -2.5819621086120605
    4. ' return' → logprob: -2.8319621086120605
    5. '   ' → logprob: -3.0819621086120605
    6. ' can' → logprob: -3.3319621086120605
    7. 'continue' → logprob: -3.9569621086120605
    8. ' will' → logprob: -4.9569621086120605
    9. '
' → logprob: -4.9569621086120605
    10. '        
' → logprob: -5.0819621086120605

Token 441: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.1450980305671692
    2. ' ourselves' → logprob: -2.8950979709625244
    3. ' to' → logprob: -3.7700979709625244
    4. ' payment' → logprob: -3.8950979709625244
    5. 'the' → logprob: -4.0200982093811035
    6. '   ' → logprob: -4.6450982093811035
    7. 'to' → logprob: -6.2700982093811035
    8. ' ' → logprob: -7.5200982093811035
    9. 'max' → logprob: -7.5200982093811035
    10. ' amount' → logprob: -7.6450982093811035

Token 442: ' payment' (ID: 9277)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.8804506063461304
    2. 'max' → logprob: -1.2554506063461304
    3. ' number' → logprob: -2.38045072555542
    4. ' search' → logprob: -2.50545072555542
    5. ' maximum' → logprob: -3.63045072555542
    6. 'coins' → logprob: -4.25545072555542
    7. 'number' → logprob: -4.50545072555542
    8. ' amount' → logprob: -4.63045072555542
    9. 'maximum' → logprob: -4.63045072555542
    10. ' payment' → logprob: -4.63045072555542

Token 443: ' over' (ID: 1072)
  Prédit: '_amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_amount' → logprob: -0.206333726644516
    2. 'amount' → logprob: -2.581333637237549
    3. '_limit' → logprob: -3.581333637237549
    4. ' amount' → logprob: -3.706333637237549
    5. '       ' → logprob: -4.206333637237549
    6. '   ' → logprob: -4.206333637237549
    7. '_options' → logprob: -5.081333637237549
    8. 'limit' → logprob: -5.206333637237549
    9. '_methods' → logprob: -5.706333637237549
    10. ' ' → logprob: -6.206333637237549

Token 444: ' price' (ID: 3911)
  Prédit: 'payment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'payment' → logprob: -0.6225672364234924
    2. 'pay' → logprob: -1.8725671768188477
    3. ' payment' → logprob: -2.2475671768188477
    4. ' the' → logprob: -2.4975671768188477
    5. '   ' → logprob: -3.8725671768188477
    6. '100' → logprob: -4.122567176818848
    7. 'price' → logprob: -4.247567176818848
    8. ' amount' → logprob: -4.372567176818848
    9. 'age' → logprob: -4.747567176818848
    10. 'amount' → logprob: -4.872567176818848

Token 445: ' to' (ID: 316)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.45568546652793884
    2. ' +' → logprob: -1.7056854963302612
    3. '+' → logprob: -1.8306854963302612
    4. '       ' → logprob: -4.580685615539551
    5. '   ' → logprob: -5.705685615539551
    6. ' to' → logprob: -6.205685615539551
    7. ',' → logprob: -6.205685615539551
    8. 'by' → logprob: -6.330685615539551
    9. '=' → logprob: -6.580685615539551
    10. ' ' → logprob: -7.705685615539551

Token 446: ' at' (ID: 540)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -1.5550888776779175
    2. '10' → logprob: -1.6800888776779175
    3. '100' → logprob: -1.6800888776779175
    4. ' ' → logprob: -2.055088996887207
    5. ' self' → logprob: -2.305088996887207
    6. 'self' → logprob: -2.430088996887207
    7. '50' → logprob: -3.055088996887207
    8. '1' → logprob: -4.430088996887207
    9. 'price' → logprob: -4.680088996887207
    10. ' price' → logprob: -4.930088996887207

Token 447: ' most' (ID: 1645)
  Prédit: 'most'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.24240270256996155
    2. ' most' → logprob: -2.2424027919769287
    3. 'least' → logprob: -2.4924027919769287
    4. '100' → logprob: -4.86740255355835
    5. ' least' → logprob: -4.86740255355835
    6. ' ' → logprob: -6.11740255355835
    7. '   ' → logprob: -6.24240255355835
    8. '       ' → logprob: -7.36740255355835
    9. '50' → logprob: -7.49240255355835
    10. 'mos' → logprob: -7.74240255355835

Token 448: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6614909768104553
    2. '100' → logprob: -1.6614909172058105
    3. 'self' → logprob: -2.2864909172058105
    4. '20' → logprob: -2.5364909172058105
    5. '50' → logprob: -3.0364909172058105
    6. '2' → logprob: -4.5364909172058105
    7. '500' → logprob: -4.5364909172058105
    8. ' ' → logprob: -4.6614909172058105
    9. '   ' → logprob: -4.9114909172058105
    10. '1' → logprob: -4.9114909172058105

Token 449: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.8662872910499573
    2. '100' → logprob: -1.4912872314453125
    3. '20' → logprob: -2.3662872314453125
    4. '50' → logprob: -2.4912872314453125
    5. '500' → logprob: -2.4912872314453125
    6. 'self' → logprob: -2.8662872314453125
    7. ' ' → logprob: -5.1162872314453125
    8. '1' → logprob: -5.3662872314453125
    9. '200' → logprob: -5.3662872314453125
    10. '2' → logprob: -5.3662872314453125

Token 450: '0' (ID: 15)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2904356718063354
    2. '.' → logprob: -1.6654356718063354
    3. '
' → logprob: -2.165435791015625
    4. '       ' → logprob: -2.540435791015625
    5. '   ' → logprob: -2.540435791015625
    6. '<|end|>' → logprob: -2.915435791015625
    7. '0' → logprob: -3.415435791015625
    8. '    
' → logprob: -3.540435791015625
    9. '    ' → logprob: -3.665435791015625
    10. ' ' → logprob: -3.665435791015625

Token 451: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.5173381567001343
    2. '.' → logprob: -1.8923381567001343
    3. '0' → logprob: -1.8923381567001343
    4. ' +' → logprob: -2.267338275909424
    5. ')' → logprob: -2.517338275909424
    6. '<|end|>' → logprob: -2.892338275909424
    7. '    
' → logprob: -3.017338275909424
    8. ',' → logprob: -3.142338275909424
    9. '+' → logprob: -3.267338275909424
    10. '   ' → logprob: -3.517338275909424

Token 452: 'one' (ID: 690)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3126605451107025
    2. ')
' → logprob: -2.0626604557037354
    3. ').' → logprob: -2.1876604557037354
    4. ').
' → logprob: -5.0626606941223145
    5. ' )' → logprob: -5.1876606941223145
    6. '   ' → logprob: -5.4376606941223145
    7. ')
' → logprob: -5.8126606941223145
    8. '),' → logprob: -6.0626606941223145
    9. ')

' → logprob: -6.4376606941223145
    10. ' )
' → logprob: -6.5626606941223145

Token 453: ' bill' (ID: 6713)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21118183434009552
    2. ' )' → logprob: -2.711181879043579
    3. '
' → logprob: -2.836181879043579
    4. ').' → logprob: -4.086181640625
    5. '   ' → logprob: -4.586181640625
    6. ')
' → logprob: -5.086181640625
    7. ' +' → logprob: -5.336181640625
    8. '0' → logprob: -5.461181640625
    9. '    
' → logprob: -5.711181640625
    10. '+' → logprob: -5.961181640625

Token 454: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05249888822436333
    2. ' )' → logprob: -3.5524988174438477
    3. ').' → logprob: -4.177498817443848
    4. '+' → logprob: -5.302498817443848
    5. ' +' → logprob: -7.802498817443848
    6. '),' → logprob: -8.052498817443848
    7. ' ).' → logprob: -8.177498817443848
    8. ' plus' → logprob: -8.302498817443848
    9. ' ' → logprob: -9.052498817443848
    10. ' or' → logprob: -9.177498817443848

Token 455: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1424759477376938
    2. '
' → logprob: -2.1424758434295654
    3. '        
' → logprob: -5.1424760818481445
    4. '<|end|>' → logprob: -5.3924760818481445
    5. '   ' → logprob: -6.8924760818481445
    6. ',' → logprob: -6.8924760818481445
    7. 'def' → logprob: -7.3924760818481445
    8. ':' → logprob: -7.6424760818481445
    9. '.' → logprob: -8.267476081848145
    10. '    
' → logprob: -8.517476081848145

Token 456: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051564350724220276
    2. '
' → logprob: -3.0515644550323486
    3. '        
' → logprob: -6.5515642166137695
    4. '   ' → logprob: -8.17656421661377
    5. '<|end|>' → logprob: -8.42656421661377
    6. '#' → logprob: -8.92656421661377
    7. 'tokens' → logprob: -8.92656421661377
    8. 'def' → logprob: -9.05156421661377
    9. '    
' → logprob: -9.30156421661377
    10. '```' → logprob: -9.80156421661377

Token 457: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012310652527958155
    2. '
' → logprob: -6.8762311935424805
    3. '        
' → logprob: -9.12623119354248
    4. '   ' → logprob: -10.00123119354248
    5. '    
' → logprob: -11.37623119354248
    6. '        ' → logprob: -11.87623119354248
    7. '           ' → logprob: -11.87623119354248
    8. '    ' → logprob: -12.25123119354248
    9. 'def' → logprob: -12.37623119354248
    10. '     ' → logprob: -13.37623119354248

Token 458: ' #' (ID: 1069)
  Prédit: ' options'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' options' → logprob: -0.34124326705932617
    2. '       ' → logprob: -2.216243267059326
    3. 'options' → logprob: -2.591243267059326
    4. ' payment' → logprob: -2.716243267059326
    5. 'payment' → logprob: -3.966243267059326
    6. ' max' → logprob: -4.466243267059326
    7. 'max' → logprob: -5.591243267059326
    8. ' result' → logprob: -7.091243267059326
    9. '   ' → logprob: -7.341243267059326
    10. 'pass' → logprob: -7.966243267059326

Token 459: ' The' (ID: 623)
  Prédit: 'options'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'options' → logprob: -0.321734756231308
    2. 'payment' → logprob: -2.071734666824341
    3. 'max' → logprob: -2.946734666824341
    4. '       ' → logprob: -3.321734666824341
    5. ' options' → logprob: -3.446734666824341
    6. '   ' → logprob: -4.82173490524292
    7. 'result' → logprob: -5.32173490524292
    8. 'results' → logprob: -5.57173490524292
    9. ' payment' → logprob: -5.94673490524292
    10. ' max' → logprob: -6.44673490524292

Token 460: ' hand' (ID: 1803)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4164271652698517
    2. 'def' → logprob: -1.7914271354675293
    3. ' max' → logprob: -3.4164271354675293
    4. '   ' → logprob: -4.166427135467529
    5. ' payment' → logprob: -4.166427135467529
    6. ' ' → logprob: -4.541427135467529
    7. 'max' → logprob: -4.541427135467529
    8. ' next' → logprob: -4.666427135467529
    9. '
' → logprob: -4.791427135467529
    10. '    ' → logprob: -5.291427135467529

Token 461: 'over' (ID: 2898)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6108601093292236
    2. '   ' → logprob: -0.9858601093292236
    3. '    ' → logprob: -3.7358601093292236
    4. 's' → logprob: -4.1108598709106445
    5. ' ' → logprob: -4.6108598709106445
    6. '        ' → logprob: -5.1108598709106445
    7. '     ' → logprob: -5.3608598709106445
    8. '  ' → logprob: -5.3608598709106445
    9. 'le' → logprob: -5.4858598709106445
    10. '        
' → logprob: -6.2358598709106445

Token 462: ' can' (ID: 665)
  Prédit: '_amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_amount' → logprob: -0.572030782699585
    2. ' =' → logprob: -1.947030782699585
    3. ' amount' → logprob: -2.572030782699585
    4. '   ' → logprob: -3.197030782699585
    5. ' ' → logprob: -3.322030782699585
    6. ' amounts' → logprob: -4.072031021118164
    7. '_limit' → logprob: -4.447031021118164
    8. '       ' → logprob: -4.447031021118164
    9. 'amount' → logprob: -4.697031021118164
    10. '_co' → logprob: -4.822031021118164

Token 463: ' include' (ID: 3931)
  Prédit: ' include'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' include' → logprob: -0.9637851119041443
    2. ' be' → logprob: -1.588785171508789
    3. ' only' → logprob: -1.713785171508789
    4. 'include' → logprob: -2.713785171508789
    5. ' contain' → logprob: -2.963785171508789
    6. ' consist' → logprob: -3.213785171508789
    7. ' pass' → logprob: -4.463785171508789
    8. 'be' → logprob: -4.588785171508789
    9. 'only' → logprob: -4.588785171508789
    10. 'contain' → logprob: -5.338785171508789

Token 464: ':
' (ID: 734)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6178224086761475
    2. 'the' → logprob: -1.6178224086761475
    3. '100' → logprob: -1.7428224086761475
    4. ' ' → logprob: -2.1178224086761475
    5. ' the' → logprob: -2.6178224086761475
    6. 'one' → logprob: -2.9928224086761475
    7. 'b' → logprob: -3.4928224086761475
    8. 'up' → logprob: -3.9928224086761475
    9. 'coins' → logprob: -3.9928224086761475
    10. 'a' → logprob: -4.367822647094727

Token 465: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9768654704093933
    2. '        ' → logprob: -1.851865530014038
    3. '100' → logprob: -2.476865530014038
    4. '<|end|>' → logprob: -2.476865530014038
    5. ' ' → logprob: -2.601865530014038
    6. '        
' → logprob: -2.976865530014038
    7. '    ' → logprob: -3.226865530014038
    8. '[' → logprob: -3.976865530014038
    9. ' 
' → logprob: -4.101865291595459
    10. '   ' → logprob: -4.476865291595459

Token 466: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10334720462560654
    2. '#' (adapté à ' #') → logprob: -3.8533473014831543
    3. 'self' → logprob: -4.353347301483154
    4. '[]' → logprob: -4.478347301483154
    5. '[
' → logprob: -4.978347301483154
    6. '100' → logprob: -4.978347301483154
    7. ' coins' → logprob: -4.978347301483154
    8. '   ' → logprob: -5.228347301483154
    9. '           ' → logprob: -5.603347301483154
    10. ' self' → logprob: -5.853347301483154

Token 467: ' -' (ID: 533)
  Prédit: ' coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coins' → logprob: -0.5691342353820801
    2. ' ' → logprob: -2.06913423538208
    3. '       ' → logprob: -2.69413423538208
    4. '    ' → logprob: -3.44413423538208
    5. '        ' → logprob: -3.44413423538208
    6. ' self' → logprob: -3.56913423538208
    7. '100' → logprob: -3.56913423538208
    8. ' bills' → logprob: -4.19413423538208
    9. 'coins' → logprob: -4.19413423538208
    10. ' [' → logprob: -4.56913423538208

Token 468: ' an' (ID: 448)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.8376679420471191
    2. ' coins' → logprob: -1.9626679420471191
    3. ' zero' → logprob: -2.087667942047119
    4. ' the' → logprob: -2.212667942047119
    5. 'coins' → logprob: -2.962667942047119
    6. ' all' → logprob: -3.087667942047119
    7. 'the' → logprob: -3.087667942047119
    8. '0' → logprob: -3.212667942047119
    9. '100' → logprob: -3.337667942047119
    10. ' any' → logprob: -3.587667942047119

Token 469: ' arbitrary' (ID: 56424)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4575154185295105
    2. ' unlimited' → logprob: -1.8325154781341553
    3. '100' → logprob: -2.9575154781341553
    4. ' optional' → logprob: -3.0825154781341553
    5. ' ' → logprob: -3.9575154781341553
    6. 'un' → logprob: -4.082515239715576
    7. ' integer' → logprob: -4.207515239715576
    8. ' y' → logprob: -4.582515239715576
    9. ' amount' → logprob: -4.707515239715576
    10. ' arbitrary' → logprob: -4.832515239715576

Token 470: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.5356343388557434
    2. 'number' → logprob: -0.9106343388557434
    3. ' combination' → logprob: -4.660634517669678
    4. 'amount' → logprob: -6.535634517669678
    5. ' amount' → logprob: -7.160634517669678
    6. '    ' → logprob: -8.53563404083252
    7. 'comb' → logprob: -8.91063404083252
    8. 'multiple' → logprob: -9.78563404083252
    9. ' ' → logprob: -9.91063404083252
    10. '100' → logprob: -10.03563404083252

Token 471: ' k' (ID: 372)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.0250997394323349
    2. 'of' → logprob: -4.025099754333496
    3. '    ' → logprob: -5.525099754333496
    4. ' ' → logprob: -7.400099754333496
    5. '   ' → logprob: -7.400099754333496
    6. '
' → logprob: -7.525099754333496
    7. '        ' → logprob: -7.900099754333496
    8. '       ' → logprob: -8.400099754333496
    9. '	of' → logprob: -9.025099754333496
    10. '  ' → logprob: -9.275099754333496

Token 472: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.584815263748169
    2. '=' → logprob: -1.209815263748169
    3. ' =' → logprob: -2.084815263748169
    4. 'of' → logprob: -4.95981502532959
    5. ' ' → logprob: -5.33481502532959
    6. '   ' → logprob: -6.20981502532959
    7. '    ' → logprob: -6.58481502532959
    8. '       ' → logprob: -6.58481502532959
    9. '_of' → logprob: -6.83481502532959
    10. '  ' → logprob: -7.83481502532959

Token 473: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.452891081571579
    2. 'b' → logprob: -1.7028911113739014
    3. 'self' → logprob: -2.7028911113739014
    4. ' self' → logprob: -2.9528911113739014
    5. ' ' → logprob: -3.8278911113739014
    6. ' bills' → logprob: -3.8278911113739014
    7. '1' → logprob: -4.327890872955322
    8. '   ' → logprob: -6.452890872955322
    9. ' coins' → logprob: -7.202890872955322
    10. '```' → logprob: -7.827890872955322

Token 474: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.27008992433547974
    2. '1' → logprob: -2.895089864730835
    3. 'self' → logprob: -2.895089864730835
    4. 'b' → logprob: -2.895089864730835
    5. ' self' → logprob: -3.520089864730835
    6. ' ' → logprob: -3.645089864730835
    7. ' bills' → logprob: -5.770090103149414
    8. '   ' → logprob: -5.895090103149414
    9. '\n' → logprob: -6.395090103149414
    10. ' \' → logprob: -6.395090103149414

Token 475: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.875001907348633
    3. '   ' → logprob: -14.250001907348633
    4. '۰' → logprob: -15.500001907348633
    5. '    ' → logprob: -16.000001907348633
    6. '_' → logprob: -16.687501907348633
    7. '０' → logprob: -16.875001907348633
    8. '000' → logprob: -17.062501907348633
    9. '٠' → logprob: -17.250001907348633
    10. '```' → logprob: -17.437501907348633

Token 476: '-y' (ID: 18102)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6277413368225098
    2. ' -' → logprob: -0.8777413368225098
    3. '<|end|>' → logprob: -3.8777413368225098
    4. 's' → logprob: -4.50274133682251
    5. '   ' → logprob: -5.00274133682251
    6. '-y' → logprob: -5.75274133682251
    7. ')' → logprob: -6.37774133682251
    8. '    ' → logprob: -6.62774133682251
    9. ',' → logprob: -6.62774133682251
    10. '<|end|>' → logprob: -6.75274133682251

Token 477: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.010981914587318897
    2. '-en' → logprob: -4.760982036590576
    3. '-' → logprob: -6.510982036590576
    4. '```' → logprob: -8.260981559753418
    5. '-b' → logprob: -9.385981559753418
    6. '-y' → logprob: -10.010981559753418
    7. '``' → logprob: -10.323481559753418
    8. 'yen' → logprob: -10.385981559753418
    9. '   ' → logprob: -10.448481559753418
    10. ' -' → logprob: -10.573481559753418

Token 478: ' bills' (ID: 26846)
  Prédit: ' bills'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bills' → logprob: -0.33771833777427673
    2. 'b' → logprob: -1.3377183675765991
    3. '_b' → logprob: -4.087718486785889
    4. 's' → logprob: -5.462718486785889
    5. '-b' → logprob: -6.337718486785889
    6. '_bill' → logprob: -7.587718486785889
    7. 'bill' → logprob: -8.58771800994873
    8. ' bill' → logprob: -8.96271800994873
    9. '_' → logprob: -9.08771800994873
    10. '	b' → logprob: -9.21271800994873

Token 479: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18795433640480042
    2. ',' → logprob: -2.4379544258117676
    3. ' (' → logprob: -2.6879544258117676
    4. '   ' → logprob: -5.937954425811768
    5. ' =' → logprob: -6.437954425811768
    6. '        
' → logprob: -6.562954425811768
    7. '.' → logprob: -6.687954425811768
    8. 's' → logprob: -6.812954425811768
    9. '(' → logprob: -7.437954425811768
    10. ' ranging' → logprob: -7.437954425811768

Token 480: 'k' (ID: 74)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.8134514093399048
    2. ' up' → logprob: -1.9384514093399048
    3. ')' → logprob: -2.3134512901306152
    4. ',' → logprob: -2.3134512901306152
    5. 'from' → logprob: -2.6884512901306152
    6. ' ranging' → logprob: -3.3134512901306152
    7. ' starting' → logprob: -3.8134512901306152
    8. ' (' → logprob: -4.063451290130615
    9. '       ' → logprob: -4.313451290130615
    10. ' =' → logprob: -4.813451290130615

Token 481: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08148526400327682
    2. ' =' → logprob: -3.2064852714538574
    3. ')' → logprob: -3.9564852714538574
    4. ' in' → logprob: -5.206485271453857
    5. ' >=' → logprob: -5.206485271453857
    6. '   ' → logprob: -6.331485271453857
    7. '>=' → logprob: -6.331485271453857
    8. ' <=' → logprob: -6.831485271453857
    9. ' )' → logprob: -7.081485271453857
    10. ',' → logprob: -7.331485271453857

Token 482: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012536965310573578
    2. ' ' → logprob: -4.637537002563477
    3. '1' → logprob: -5.887537002563477
    4. '   ' → logprob: -13.762537002563477
    5. ')' → logprob: -14.512537002563477
    6. 'range' → logprob: -14.512537002563477
    7. ' range' → logprob: -15.387537002563477
    8. '[' → logprob: -15.762537002563477
    9. '  ' → logprob: -15.950037002563477
    10. '2' → logprob: -16.262537002563477

Token 483: ' or' (ID: 503)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3358365595340729
    2. ' or' → logprob: -1.5858365297317505
    3. '..' → logprob: -3.21083664894104
    4. ' to' → logprob: -4.085836410522461
    5. ')' → logprob: -4.210836410522461
    6. 'or' → logprob: -5.835836410522461
    7. 'to' → logprob: -6.585836410522461
    8. '...' → logprob: -6.710836410522461
    9. '),' → logprob: -6.960836410522461
    10. ' up' → logprob: -7.460836410522461

Token 484: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006271334132179618
    2. ' ' → logprob: -7.375627040863037
    3. 'k' → logprob: -14.750627517700195
    4. ' k' → logprob: -16.125627517700195
    5. '   ' → logprob: -16.250627517700195
    6. ')' → logprob: -18.625627517700195
    7. '
' → logprob: -18.875627517700195
    8. ',' → logprob: -19.000627517700195
    9. ' ' → logprob: -19.000627517700195
    10. '=' → logprob: -19.375627517700195

Token 485: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. 'k' → logprob: -13.000004768371582
    3. ' ' → logprob: -13.125004768371582
    4. ' k' → logprob: -17.875003814697266
    5. '   ' → logprob: -18.125003814697266
    6. '
' → logprob: -20.000003814697266
    7. '=' → logprob: -21.000003814697266
    8. '۱' → logprob: -21.375003814697266
    9. '  ' → logprob: -21.500003814697266
    10. ')' → logprob: -21.500003814697266

Token 486: ';' (ID: 26)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003446707036346197
    2. '),' → logprob: -6.628446578979492
    3. ' or' → logprob: -7.003446578979492
    4. ')
' → logprob: -7.753446578979492
    5. ',' → logprob: -8.253446578979492
    6. ' )' → logprob: -8.253446578979492
    7. '):
' → logprob: -9.253446578979492
    8. '):' → logprob: -9.878446578979492
    9. ').' → logprob: -10.003446578979492
    10. '       ' → logprob: -10.878446578979492

Token 487: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10031870007514954
    2. ')
' → logprob: -3.475318670272827
    3. ' )' → logprob: -4.225318908691406
    4. '       ' → logprob: -4.475318908691406
    5. ' or' → logprob: -4.600318908691406
    6. ' and' → logprob: -4.600318908691406
    7. ' since' → logprob: -5.850318908691406
    8. '),' → logprob: -5.975318908691406
    9. ' because' → logprob: -5.975318908691406
    10. ' only' → logprob: -6.100318908691406

Token 488: '2' (ID: 17)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6111710071563721
    2. ' )' → logprob: -1.986171007156372
    3. ' k' → logprob: -2.236171007156372
    4. ' or' → logprob: -2.861171007156372
    5. 'k' → logprob: -3.486171007156372
    6. '       ' → logprob: -3.611171007156372
    7. ' and' → logprob: -4.236170768737793
    8. ')
' → logprob: -4.611170768737793
    9. ' because' → logprob: -4.611170768737793
    10. ' since' → logprob: -4.986170768737793

Token 489: ' unlikely' (ID: 36361)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08909999579191208
    2. ' )' → logprob: -3.089099884033203
    3. ' or' → logprob: -3.464099884033203
    4. ' is' → logprob: -5.964099884033203
    5. ' only' → logprob: -6.339099884033203
    6. ' ' → logprob: -7.214099884033203
    7. '<|end|>' → logprob: -7.339099884033203
    8. ' at' → logprob: -7.714099884033203
    9. ' possible' → logprob: -7.964099884033203
    10. ' if' → logprob: -8.089099884033203

Token 490: ' beneficial' (ID: 27102)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007735580671578646
    2. ' or' → logprob: -6.007735729217529
    3. ' )' → logprob: -6.257735729217529
    4. ' is' → logprob: -6.632735729217529
    5. '0' → logprob: -7.632735729217529
    6. ')
' → logprob: -7.757735729217529
    7. ',' → logprob: -8.007735252380371
    8. '),' → logprob: -8.507735252380371
    9. ' at' → logprob: -9.507735252380371
    10. ' and' → logprob: -9.882735252380371

Token 491: ' since' (ID: 3630)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012924972688779235
    2. ')
' → logprob: -7.126292705535889
    3. ' )' → logprob: -8.87629222869873
    4. ',' → logprob: -9.00129222869873
    5. '),' → logprob: -9.75129222869873
    6. ' to' → logprob: -10.12629222869873
    7. '   ' → logprob: -10.50129222869873
    8. ' but' → logprob: -10.87629222869873
    9. ').' → logprob: -11.25129222869873
    10. ' for' → logprob: -11.37629222869873

Token 492: ' ' (ID: 220)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1223852634429932
    2. ' k' → logprob: -1.2473852634429932
    3. ' we' → logprob: -2.872385263442993
    4. ')' → logprob: -3.122385263442993
    5. ' )' → logprob: -3.122385263442993
    6. ' payment' → logprob: -3.247385263442993
    7. ' price' → logprob: -3.372385263442993
    8. ' change' → logprob: -3.622385263442993
    9. ' only' → logprob: -3.622385263442993
    10. ' ' → logprob: -4.122385025024414

Token 493: '200' (ID: 1179)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6346082091331482
    2. 'k' → logprob: -1.134608268737793
    3. ' price' → logprob: -2.759608268737793
    4. ' change' → logprob: -3.759608268737793
    5. ' self' → logprob: -4.259608268737793
    6. ' the' → logprob: -4.384608268737793
    7. 'price' → logprob: -4.509608268737793
    8. 'self' → logprob: -5.509608268737793
    9. 'change' → logprob: -5.509608268737793
    10. ' we' → logprob: -5.884608268737793

Token 494: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014492777176201344
    2. ')' → logprob: -4.639492988586426
    3. '-' → logprob: -6.139492988586426
    4. ' ' → logprob: -7.139492988586426
    5. ' -' → logprob: -7.639492988586426
    6. '_' → logprob: -8.514492988586426
    7. '),' → logprob: -8.639492988586426
    8. ' )' → logprob: -8.764492988586426
    9. '-k' → logprob: -9.764492988586426
    10. '\' → logprob: -9.826992988586426

Token 495: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7774633765220642
    2. '-' → logprob: -1.402463436126709
    3. '-y' → logprob: -1.652463436126709
    4. ' -' → logprob: -3.652463436126709
    5. '   ' → logprob: -4.652463436126709
    6. ' )' → logprob: -5.152463436126709
    7. ' ' → logprob: -5.152463436126709
    8. ',' → logprob: -5.277463436126709
    9. 'yen' → logprob: -5.277463436126709
    10. '),' → logprob: -5.277463436126709

Token 496: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.4507160782814026
    2. 'price' → logprob: -1.0757160186767578
    3. '100' → logprob: -3.950716018676758
    4. ' ' → logprob: -6.200716018676758
    5. 'self' → logprob: -8.200716018676758
    6. ' self' → logprob: -9.200716018676758
    7. '200' → logprob: -10.700716018676758
    8. '	price' → logprob: -10.700716018676758
    9. '   ' → logprob: -11.700716018676758
    10. '150' → logprob: -11.950716018676758

Token 497: ' >' (ID: 1424)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1725338101387024
    2. ' >' → logprob: -2.6725337505340576
    3. ' <=' → logprob: -3.1725337505340576
    4. ' is' → logprob: -4.547533988952637
    5. ')>' → logprob: -4.672533988952637
    6. '>' → logprob: -4.922533988952637
    7. ' )' → logprob: -5.047533988952637
    8. '+' → logprob: -6.172533988952637
    9. '<=' → logprob: -6.172533988952637
    10. ' =' → logprob: -6.422533988952637

Token 498: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0746699720621109
    2. ' ' → logprob: -2.6996700763702393
    3. '200' → logprob: -5.57466983795166
    4. '999' → logprob: -7.69966983795166
    5. '110' → logprob: -9.44966983795166
    6. '1' → logprob: -9.69966983795166
    7. '   ' → logprob: -9.69966983795166
    8. '150' → logprob: -10.07466983795166
    9. '  ' → logprob: -10.69966983795166
    10. '0' → logprob: -10.76216983795166

Token 499: '150' (ID: 5215)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.011681916192173958
    2. ' ' → logprob: -4.636682033538818
    3. '200' → logprob: -7.011682033538818
    4. '0' → logprob: -7.261682033538818
    5. '999' → logprob: -8.63668155670166
    6. '150' → logprob: -10.63668155670166
    7. '110' → logprob: -10.69918155670166
    8. '1' → logprob: -10.94918155670166
    9. '   ' → logprob: -11.51168155670166
    10. '```' → logprob: -11.88668155670166

Token 500: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019820481538772583
    2. ')' → logprob: -4.019820690155029
    3. ' )' → logprob: -6.894820690155029
    4. '   ' → logprob: -8.769820213317871
    5. '),' → logprob: -9.144820213317871
    6. ')
' → logprob: -9.394820213317871
    7. ' ' → logprob: -10.269820213317871
    8. ',' → logprob: -10.519820213317871
    9. '00' → logprob: -10.519820213317871
    10. ' and' → logprob: -10.519820213317871

Token 501: ';' (ID: 26)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006888361647725105
    2. ' )' → logprob: -6.006888389587402
    3. ' and' → logprob: -7.256888389587402
    4. '   ' → logprob: -7.381888389587402
    5. '):' → logprob: -7.381888389587402
    6. '),' → logprob: -7.756888389587402
    7. ')
' → logprob: -7.756888389587402
    8. '       ' → logprob: -8.006888389587402
    9. ').' → logprob: -8.006888389587402
    10. ',' → logprob: -8.256888389587402

Token 502: ' too' (ID: 3101)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15677879750728607
    2. '       ' → logprob: -2.0317788124084473
    3. ')
' → logprob: -5.656778812408447
    4. '           ' → logprob: -5.906778812408447
    5. ' )' → logprob: -6.031778812408447
    6. '   ' → logprob: -6.281778812408447
    7. '):
' → logprob: -7.781778812408447
    8. '):' → logprob: -7.906778812408447
    9. ' but' → logprob: -8.031778335571289
    10. ').' → logprob: -8.031778335571289

Token 503: ' costly' (ID: 44091)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7740411162376404
    2. '>' → logprob: -1.8990411758422852
    3. ' >' → logprob: -1.8990411758422852
    4. '100' → logprob: -2.649041175842285
    5. ' ' → logprob: -3.149041175842285
    6. '1' → logprob: -3.649041175842285
    7. '
' → logprob: -4.024041175842285
    8. '   ' → logprob: -4.399041175842285
    9. ' )' → logprob: -4.399041175842285
    10. 'unlikely' → logprob: -5.149041175842285

Token 504: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020597364753484726
    2. '   ' → logprob: -5.145597457885742
    3. ',' → logprob: -5.770597457885742
    4. ' to' → logprob: -6.020597457885742
    5. ' for' → logprob: -6.270597457885742
    6. '       ' → logprob: -6.520597457885742
    7. ').' → logprob: -6.770597457885742
    8. ' )' → logprob: -7.145597457885742
    9. ')
' → logprob: -7.145597457885742
    10. '):
' → logprob: -7.145597457885742

Token 505: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01003454439342022
    2. '        
' → logprob: -5.760034561157227
    3. '
' → logprob: -6.010034561157227
    4. '<|end|>' → logprob: -6.635034561157227
    5. '#' → logprob: -6.885034561157227
    6. ',' → logprob: -7.135034561157227
    7. '   ' → logprob: -7.760034561157227
    8. ')' → logprob: -8.635034561157227
    9. '    
' → logprob: -9.010034561157227
    10. '\' → logprob: -9.510034561157227

Token 506: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01683034934103489
    2. '
' → logprob: -4.8918304443359375
    3. '        
' → logprob: -5.1418304443359375
    4. '<|end|>' → logprob: -6.8918304443359375
    5. '   ' → logprob: -7.1418304443359375
    6. '    
' → logprob: -7.2668304443359375
    7. ',' → logprob: -8.141830444335938
    8. '\' → logprob: -9.141830444335938
    9. ')' → logprob: -9.766830444335938
    10. '  
' → logprob: -10.141830444335938

Token 507: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4498031437397003
    2. '   ' → logprob: -1.449803113937378
    3. '    
' → logprob: -2.699803113937378
    4. '        
' → logprob: -3.199803113937378
    5. '
' → logprob: -4.324803352355957
    6. '    ' → logprob: -6.574803352355957
    7. ' 
' → logprob: -6.824803352355957
    8. '\' → logprob: -7.449803352355957
    9. '  
' → logprob: -7.824803352355957
    10. ',' → logprob: -7.949803352355957

Token 508: ' some' (ID: 1236)
  Prédit: ' coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coins' → logprob: -0.4558764100074768
    2. 'coins' → logprob: -2.330876350402832
    3. ' all' → logprob: -2.830876350402832
    4. ' coin' → logprob: -3.330876350402832
    5. ' the' → logprob: -4.080876350402832
    6. ' a' → logprob: -4.205876350402832
    7. '       ' → logprob: -4.330876350402832
    8. ' an' → logprob: -4.330876350402832
    9. 'all' → logprob: -4.330876350402832
    10. ' one' → logprob: -4.955876350402832

Token 509: ' coins' (ID: 28969)
  Prédit: ' subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subset' → logprob: -0.9974791407585144
    2. ' combination' → logprob: -1.2474792003631592
    3. ' coins' → logprob: -1.4974792003631592
    4. ' number' → logprob: -2.747479200363159
    5. 'coins' → logprob: -3.872479200363159
    6. ' combinations' → logprob: -4.24747896194458
    7. ' amount' → logprob: -4.99747896194458
    8. ' of' → logprob: -4.99747896194458
    9. ' counts' → logprob: -6.37247896194458
    10. ' payment' → logprob: -7.37247896194458

Token 510: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5377008318901062
    2. '<|end|>' → logprob: -1.662700891494751
    3. '
' → logprob: -2.037700891494751
    4. ',' → logprob: -3.662700891494751
    5. '<|end|>' → logprob: -3.662700891494751
    6. '        
' → logprob: -4.037700653076172
    7. 'from' → logprob: -4.787700653076172
    8. ' (' → logprob: -5.412700653076172
    9. ' from' → logprob: -5.537700653076172
    10. '        ' → logprob: -6.662700653076172

Token 511: ' have' (ID: 679)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.03277023509144783
    2. ' have' → logprob: -4.282770156860352
    3. 'can' → logprob: -4.282770156860352
    4. ' may' → logprob: -6.532770156860352
    5. '   ' → logprob: -7.532770156860352
    6. ' ' → logprob: -7.657770156860352
    7. 'have' → logprob: -7.782770156860352
    8. '       ' → logprob: -8.032770156860352
    9. ' might' → logprob: -8.032770156860352
    10. '	can' → logprob: -8.282770156860352

Token 512: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03793349117040634
    2. '<|end|>' → logprob: -4.037933349609375
    3. '        
' → logprob: -4.537933349609375
    4. '
' → logprob: -5.037933349609375
    5. '<|end|>' → logprob: -7.037933349609375
    6. ',' → logprob: -7.787933349609375
    7. '   ' → logprob: -8.412933349609375
    8. '    
' → logprob: -9.287933349609375
    9. ' (' → logprob: -9.537933349609375
    10. ')' → logprob: -9.537933349609375

Token 513: ' hand' (ID: 1803)
  Prédit: ' hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hand' → logprob: -0.1603018045425415
    2. 'hand' → logprob: -1.9103018045425415
    3. '_hand' → logprob: -9.53530216217041
    4. 'self' → logprob: -14.53530216217041
    5. 'hands' → logprob: -14.53530216217041
    6. '   ' → logprob: -14.66030216217041
    7. ' ' → logprob: -14.91030216217041
    8. ' mano' → logprob: -15.03530216217041
    9. ' possession' → logprob: -15.03530216217041
    10. 'the' → logprob: -15.16030216217041

Token 514: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4604845345020294
    2. '
' → logprob: -1.085484504699707
    3. '        
' → logprob: -3.585484504699707
    4. '<|end|>' → logprob: -7.085484504699707
    5. ',' → logprob: -7.335484504699707
    6. ':' → logprob: -7.835484504699707
    7. '    
' → logprob: -8.085484504699707
    8. '   ' → logprob: -8.710484504699707
    9. ':
' → logprob: -8.960484504699707
    10. '

' → logprob: -8.960484504699707

Token 515: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008548145182430744
    2. '
' → logprob: -5.883548259735107
    3. '<|end|>' → logprob: -5.883548259735107
    4. '        
' → logprob: -6.008548259735107
    5. '    
' → logprob: -9.13354778289795
    6. ',' → logprob: -9.25854778289795
    7. '<|end|>' → logprob: -9.63354778289795
    8. '   ' → logprob: -9.88354778289795
    9. '```' → logprob: -9.88354778289795
    10. 'import' → logprob: -10.75854778289795

Token 516: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00951287243515253
    2. '
' → logprob: -5.009512901306152
    3. '        
' → logprob: -6.134512901306152
    4. ',' → logprob: -8.884512901306152
    5. '    
' → logprob: -9.259512901306152
    6. '#' → logprob: -9.259512901306152
    7. '<|end|>' → logprob: -9.259512901306152
    8. '   ' → logprob: -9.634512901306152
    9. 'from' → logprob: -10.884512901306152
    10. 'import' → logprob: -11.009512901306152

Token 517: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04472538083791733
    2. '
' → logprob: -3.1697254180908203
    3. '        
' → logprob: -6.41972541809082
    4. '    
' → logprob: -10.16972541809082
    5. '   ' → logprob: -11.04472541809082
    6. 'import' → logprob: -11.79472541809082
    7. '<|end|>' → logprob: -12.04472541809082
    8. '```' → logprob: -12.54472541809082
    9. '

' → logprob: -12.79472541809082
    10. '           ' → logprob: -13.04472541809082

Token 518: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017458438873291016
    2. 'options' → logprob: -4.892458438873291
    3. ' options' → logprob: -5.017458438873291
    4. 'payment' → logprob: -6.892458438873291
    5. ' payment' → logprob: -7.517458438873291
    6. '   ' → logprob: -7.767458438873291
    7. 'results' → logprob: -8.392457962036133
    8. '#' (adapté à ' #') → logprob: -8.517457962036133
    9. 'max' → logprob: -9.267457962036133
    10. 'result' → logprob: -9.767457962036133

Token 519: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.550182044506073
    2. 'options' → logprob: -1.5501821041107178
    3. 'payment' → logprob: -1.9251821041107178
    4. 'max' → logprob: -3.9251821041107178
    5. 'results' → logprob: -4.425181865692139
    6. '   ' → logprob: -4.675181865692139
    7. 'result' → logprob: -4.925181865692139
    8. ' options' → logprob: -5.425181865692139
    9. 'possible' → logprob: -5.800181865692139
    10. ' payment' → logprob: -6.425181865692139

Token 520: ' enumerate' (ID: 29671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45024168491363525
    2. ' need' → logprob: -2.5752415657043457
    3. ' ' → logprob: -3.0752415657043457
    4. ' continue' → logprob: -3.0752415657043457
    5. ' try' → logprob: -3.2002415657043457
    6. ' want' → logprob: -3.3252415657043457
    7. '       ' → logprob: -3.4502415657043457
    8. '    ' → logprob: -4.200241565704346
    9. ' can' → logprob: -4.325241565704346
    10. ' def' → logprob: -4.575241565704346

Token 521: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.4314793646335602
    2. '       ' → logprob: -1.8064793348312378
    3. 'all' → logprob: -1.9314793348312378
    4. 'possible' → logprob: -5.431479454040527
    5. ' possible' → logprob: -5.556479454040527
    6. '   ' → logprob: -5.556479454040527
    7. ' coins' → logprob: -5.556479454040527
    8. 'coins' → logprob: -5.681479454040527
    9. ' coin' → logprob: -6.056479454040527
    10. ' the' → logprob: -6.056479454040527

Token 522: ' feasible' (ID: 58866)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.5257816910743713
    2. ' combinations' → logprob: -1.9007816314697266
    3. 'possible' → logprob: -2.2757816314697266
    4. ' coins' → logprob: -3.1507816314697266
    5. ' coin' → logprob: -3.1507816314697266
    6. 'coins' → logprob: -3.9007816314697266
    7. 'coin' → logprob: -4.650781631469727
    8. ' possibilities' → logprob: -4.650781631469727
    9. ' payment' → logprob: -4.900781631469727
    10. ' valid' → logprob: -5.025781631469727

Token 523: ' coin' (ID: 22179)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -1.0383713245391846
    2. ' coin' → logprob: -1.5383713245391846
    3. 'coin' → logprob: -1.9133713245391846
    4. ' coins' → logprob: -1.9133713245391846
    5. '   ' → logprob: -3.1633713245391846
    6. ' payment' → logprob: -3.7883713245391846
    7. '       ' → logprob: -4.0383710861206055
    8. ' combinations' → logprob: -4.1633710861206055
    9. '_coin' → logprob: -4.2883710861206055
    10. 'payment' → logprob: -5.5383710861206055

Token 524: ' combinations' (ID: 43835)
  Prédit: ' combinations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combinations' → logprob: -0.0343148298561573
    2. 's' → logprob: -3.9093148708343506
    3. ' counts' → logprob: -5.5343146324157715
    4. ' s' → logprob: -5.9093146324157715
    5. ' subsets' → logprob: -6.0343146324157715
    6. 'com' → logprob: -7.0343146324157715
    7. '_com' → logprob: -7.2843146324157715
    8. '   ' → logprob: -7.4093146324157715
    9. ' sets' → logprob: -7.6593146324157715
    10. '_comb' → logprob: -7.9093146324157715

Token 525: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03179389238357544
    2. ':' → logprob: -5.03179407119751
    3. ',' → logprob: -5.15679407119751
    4. ' for' → logprob: -5.90679407119751
    5. ' from' → logprob: -6.03179407119751
    6. 'from' → logprob: -6.03179407119751
    7. '.' → logprob: -6.28179407119751
    8. ' with' → logprob: -6.40679407119751
    9. 'import' → logprob: -6.53179407119751
    10. '        
' → logprob: -6.65679407119751

Token 526: ' hand' (ID: 1803)
  Prédit: ' pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pay' → logprob: -0.469299852848053
    2. 'pay' → logprob: -1.0942997932434082
    3. ' use' → logprob: -4.344299793243408
    4. 'give' → logprob: -4.594299793243408
    5. ' give' → logprob: -4.844299793243408
    6. 'use' → logprob: -6.719299793243408
    7. ' hand' → logprob: -6.969299793243408
    8. '_pay' → logprob: -6.969299793243408
    9. ' pass' → logprob: -7.094299793243408
    10. '```' → logprob: -7.219299793243408

Token 527: ' over' (ID: 1072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1717810332775116
    2. 'over' → logprob: -2.171781063079834
    3. ' over' → logprob: -3.296781063079834
    4. '           ' → logprob: -5.796781063079834
    5. '```' → logprob: -6.796781063079834
    6. '   ' → logprob: -7.171781063079834
    7. '{' → logprob: -7.296781063079834
    8. ')' → logprob: -8.796780586242676
    9. '_over' → logprob: -8.921780586242676
    10. '      ' → logprob: -9.171780586242676

Token 528: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18856826424598694
    2. ':' → logprob: -2.688568353652954
    3. ',' → logprob: -3.188568353652954
    4. ' with' → logprob: -4.438568115234375
    5. ' for' → logprob: -4.688568115234375
    6. '.' → logprob: -5.063568115234375
    7. '<|end|>' → logprob: -5.313568115234375
    8. ' (' → logprob: -5.438568115234375
    9. '        
' → logprob: -5.563568115234375
    10. ' that' → logprob: -5.688568115234375

Token 529: 'those' (ID: 104647)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04296162351965904
    2. '       ' → logprob: -4.292961597442627
    3. '):
' → logprob: -4.917961597442627
    4. ')
' → logprob: -5.167961597442627
    5. '),' → logprob: -5.667961597442627
    6. ' for' → logprob: -6.292961597442627
    7. '):' → logprob: -6.417961597442627
    8. ').' → logprob: -6.917961597442627
    9. '...' → logprob: -7.042961597442627
    10. '   ' → logprob: -7.042961597442627

Token 530: ' not' (ID: 625)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -1.4612221717834473
    2. ')' → logprob: -1.5862221717834473
    3. 'that' → logprob: -1.8362221717834473
    4. 'with' → logprob: -1.9612221717834473
    5. ' are' → logprob: -3.2112221717834473
    6. ' with' → logprob: -3.2112221717834473
    7. ' can' → logprob: -3.4612221717834473
    8. ' in' → logprob: -3.9612221717834473
    9. '   ' → logprob: -4.086222171783447
    10. '<=' → logprob: -4.336222171783447

Token 531: ' exceeding' (ID: 85205)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.07635167241096497
    2. ' exceeding' → logprob: -2.9513516426086426
    3. 'using' → logprob: -5.451351642608643
    4. '   ' → logprob: -5.576351642608643
    5. 'greater' → logprob: -5.951351642608643
    6. '       ' → logprob: -6.201351642608643
    7. 'used' → logprob: -6.451351642608643
    8. '>' → logprob: -7.201351642608643
    9. 'more' → logprob: -7.326351642608643
    10. '```' → logprob: -7.326351642608643

Token 532: ' coins' (ID: 28969)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2642620801925659
    2. 'the' → logprob: -2.1392621994018555
    3. 'self' → logprob: -2.3892621994018555
    4. ' self' → logprob: -4.8892621994018555
    5. ' current' → logprob: -5.7642621994018555
    6. ' available' → logprob: -5.8892621994018555
    7. '   ' → logprob: -6.3892621994018555
    8. 'current' → logprob: -6.8892621994018555
    9. ' coin' → logprob: -6.8892621994018555
    10. ' counts' → logprob: -6.8892621994018555

Token 533: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2893761396408081
    2. '   ' → logprob: -2.4143762588500977
    3. '_in' → logprob: -2.5393762588500977
    4. 'in' → logprob: -3.9143762588500977
    5. ' counts' → logprob: -4.289376258850098
    6. '       ' → logprob: -4.414376258850098
    7. ')' → logprob: -4.789376258850098
    8. '_count' → logprob: -4.789376258850098
    9. '_counts' → logprob: -5.539376258850098
    10. ' count' → logprob: -5.914376258850098

Token 534: ' hand' (ID: 1803)
  Prédit: 'hand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hand' → logprob: -0.0636853277683258
    2. ' hand' → logprob: -2.813685417175293
    3. 'self' → logprob: -7.188685417175293
    4. '_hand' → logprob: -7.188685417175293
    5. '   ' → logprob: -9.313685417175293
    6. 'current' → logprob: -10.313685417175293
    7. ')' → logprob: -10.563685417175293
    8. ' ' → logprob: -11.688685417175293
    9. 'the' → logprob: -11.688685417175293
    10. '    
' → logprob: -12.063685417175293

Token 535: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8266317248344421
    2. ').' → logprob: -1.576631784439087
    3. ' and' → logprob: -1.826631784439087
    4. '),' → logprob: -2.076631784439087
    5. ',' → logprob: -3.326631784439087
    6. '):' → logprob: -4.326631546020508
    7. '       ' → logprob: -4.701631546020508
    8. '):
' → logprob: -5.326631546020508
    9. 'and' → logprob: -6.076631546020508
    10. '   ' → logprob: -6.451631546020508

Token 536: ' plus' (ID: 2932)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3608308434486389
    2. ' then' → logprob: -1.9858307838439941
    3. ' and' → logprob: -2.360830783843994
    4. '#' → logprob: -3.485830783843994
    5. 'and' → logprob: -4.235830783843994
    6. '<|end|>' → logprob: -5.110830783843994
    7. ' with' → logprob: -6.110830783843994
    8. '        
' → logprob: -6.360830783843994
    9. '           ' → logprob: -6.360830783843994
    10. 'import' → logprob: -6.485830783843994

Token 537: ' zero' (ID: 12421)
  Prédit: ' one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' one' → logprob: -1.0713484287261963
    2. ' either' → logprob: -1.3213484287261963
    3. 'either' → logprob: -2.1963484287261963
    4. ' the' → logprob: -2.5713484287261963
    5. 'one' → logprob: -3.4463484287261963
    6. ' at' → logprob: -3.4463484287261963
    7. ' possibly' → logprob: -3.6963484287261963
    8. ' (' → logprob: -4.321348190307617
    9. ' ' → logprob: -4.571348190307617
    10. '   ' → logprob: -4.571348190307617

Token 538: ' or' (ID: 503)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 539: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.24814434349536896
    2. 'one' → logprob: -1.7481443881988525
    3. '1' → logprob: -3.1231443881988525
    4. ' ' → logprob: -6.498144149780273
    5. '100' → logprob: -10.248144149780273
    6. '   ' → logprob: -10.373144149780273
    7. '_one' → logprob: -10.623144149780273
    8. ' or' → logprob: -11.498144149780273
    9. '<|end|>' → logprob: -12.123144149780273
    10. 'or' → logprob: -12.498144149780273

Token 540: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006020872388035059
    2. '100' → logprob: -5.381021022796631
    3. ' \' → logprob: -8.131020545959473
    4. ' bills' → logprob: -8.131020545959473
    5. ' bill' → logprob: -8.381020545959473
    6. ' 
' → logprob: -8.756020545959473
    7. ' thousand' → logprob: -9.381020545959473
    8. '1' → logprob: -10.006020545959473
    9. ' of' → logprob: -10.381020545959473
    10. ' k' → logprob: -10.381020545959473

Token 541: '100' (ID: 1353)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02202574349939823
    2. '100' → logprob: -4.0220255851745605
    3. ' bill' → logprob: -6.5220255851745605
    4. ' bills' → logprob: -6.8970255851745605
    5. ' \' → logprob: -7.7720255851745605
    6. ' thousand' → logprob: -8.647026062011719
    7. ' or' → logprob: -8.647026062011719
    8. ' 
' → logprob: -9.522026062011719
    9. '1' → logprob: -9.647026062011719
    10. '_' → logprob: -9.772026062011719

Token 542: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011653638648567721
    2. '000' → logprob: -9.500116348266602
    3. ' ' → logprob: -10.750116348266602
    4. '_' → logprob: -11.750116348266602
    5. '    ' → logprob: -12.250116348266602
    6. '   ' → logprob: -12.750116348266602
    7. '<|end|>' → logprob: -13.250116348266602
    8. '  ' → logprob: -14.125116348266602
    9. ')' → logprob: -14.625116348266602
    10. '00' → logprob: -15.250116348266602

Token 543: '-y' (ID: 18102)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10249651223421097
    2. ' -' → logprob: -2.60249662399292
    3. '-y' → logprob: -3.85249662399292
    4. '-b' → logprob: -7.22749662399292
    5. ')' → logprob: -8.727496147155762
    6. '[-' → logprob: -8.852496147155762
    7. '```' → logprob: -9.227496147155762
    8. ' ' → logprob: -9.352496147155762
    9. '   ' → logprob: -9.352496147155762
    10. '_' → logprob: -9.477496147155762

Token 544: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.00016349162615370005
    2. '-en' → logprob: -8.750163078308105
    3. '-' → logprob: -13.500163078308105
    4. '(en' → logprob: -14.125163078308105
    5. '```' → logprob: -14.625163078308105
    6. 'e' → logprob: -15.125163078308105
    7. '-b' → logprob: -15.250163078308105
    8. '=en' → logprob: -15.375163078308105
    9. '_en' → logprob: -15.500163078308105
    10. '
' → logprob: -15.875163078308105

Token 545: ' bill' (ID: 6713)
  Prédit: ' bill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bill' → logprob: -0.7592039704322815
    2. 'bill' → logprob: -1.1342039108276367
    3. 'b' → logprob: -2.3842039108276367
    4. ' bills' → logprob: -3.2592039108276367
    5. '_bill' → logprob: -3.8842039108276367
    6. '_' → logprob: -4.509203910827637
    7. 's' → logprob: -4.509203910827637
    8. ' ' → logprob: -5.134203910827637
    9. ' coin' → logprob: -5.134203910827637
    10. '_b' → logprob: -5.259203910827637

Token 546: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22454693913459778
    2. '
' → logprob: -1.8495469093322754
    3. '        
' → logprob: -3.4745469093322754
    4. ':' → logprob: -4.599546909332275
    5. ',' → logprob: -7.349546909332275
    6. ':
' → logprob: -7.474546909332275
    7. '    
' → logprob: -7.974546909332275
    8. '<|end|>' → logprob: -8.099547386169434
    9. '```' → logprob: -8.349547386169434
    10. '  
' → logprob: -9.349547386169434

Token 547: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056337468326091766
    2. '        
' → logprob: -3.181337356567383
    3. '
' → logprob: -4.431337356567383
    4. '    
' → logprob: -8.056337356567383
    5. '```' → logprob: -8.806337356567383
    6. '<|end|>' → logprob: -8.931337356567383
    7. ',' → logprob: -9.431337356567383
    8. '  
' → logprob: -9.556337356567383
    9. '   ' → logprob: -9.556337356567383
    10. '       
' → logprob: -9.931337356567383

Token 548: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005656433291733265
    2. '
' → logprob: -5.5056562423706055
    3. '<|end|>' → logprob: -7.0056562423706055
    4. '        
' → logprob: -7.8806562423706055
    5. '```' → logprob: -9.380656242370605
    6. '   ' → logprob: -10.380656242370605
    7. '\' → logprob: -10.630656242370605
    8. '<|end|>' → logprob: -10.755656242370605
    9. 'import' → logprob: -11.005656242370605
    10. '    
' → logprob: -11.130656242370605

Token 549: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00035119339008815587
    2. '        
' → logprob: -8.375350952148438
    3. '
' → logprob: -10.375350952148438
    4. 'import' → logprob: -10.625350952148438
    5. '   ' → logprob: -10.750350952148438
    6. '```' → logprob: -11.500350952148438
    7. '<|end|>' → logprob: -12.000350952148438
    8. '    
' → logprob: -12.250350952148438
    9. '      ' → logprob: -12.625350952148438
    10. '           ' → logprob: -13.000350952148438

Token 550: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019454367458820343
    2. 'from' → logprob: -4.519454479217529
    3. 'max' → logprob: -5.769454479217529
    4. 'options' → logprob: -6.894454479217529
    5. 'coin' → logprob: -7.019454479217529
    6. 'payment' → logprob: -7.394454479217529
    7. 'import' → logprob: -7.644454479217529
    8. '   ' → logprob: -7.769454479217529
    9. 'coins' → logprob: -7.894454479217529
    10. '#' (adapté à ' #') → logprob: -7.894454479217529

Token 551: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22692997753620148
    2. 'options' → logprob: -2.1019299030303955
    3. 'from' → logprob: -3.2269299030303955
    4. 'payment' → logprob: -4.476930141448975
    5. 'results' → logprob: -4.851930141448975
    6. ' options' → logprob: -5.351930141448975
    7. 'result' → logprob: -5.351930141448975
    8. 'import' → logprob: -5.976930141448975
    9. 'max' → logprob: -6.101930141448975
    10. 'def' → logprob: -6.726930141448975

Token 552: ' performance' (ID: 6198)
  Prédit: ' coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.7186371088027954
    2. ' denom' → logprob: -1.0936371088027954
    3. 'coin' → logprob: -2.843636989593506
    4. ' i' → logprob: -2.968636989593506
    5. ' _' → logprob: -4.468636989593506
    6. ' denomination' → logprob: -4.468636989593506
    7. ' d' → logprob: -4.718636989593506
    8. ' ' → logprob: -4.718636989593506
    9. 'den' → logprob: -4.843636989593506
    10. ' value' → logprob: -5.218636989593506

Token 553: ',' (ID: 11)
  Prédit: ' reasons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reasons' → logprob: -0.043235886842012405
    2. ',' → logprob: -3.4182357788085938
    3. ' reason' → logprob: -4.918235778808594
    4. 'reason' → logprob: -7.168235778808594
    5. ' ' → logprob: -8.168235778808594
    6. ' ,' → logprob: -8.418235778808594
    7. '
' → logprob: -8.668235778808594
    8. '   ' → logprob: -9.043235778808594
    9. ',
' → logprob: -9.293235778808594
    10. ':' → logprob: -9.293235778808594

Token 554: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11956487596035004
    2. ' we' → logprob: -2.7445647716522217
    3. '        ' → logprob: -4.369565010070801
    4. ' import' → logprob: -4.494565010070801
    5. ' return' → logprob: -5.619565010070801
    6. 'we' → logprob: -5.869565010070801
    7. 'import' → logprob: -5.994565010070801
    8. ' for' → logprob: -5.994565010070801
    9. ' #' → logprob: -6.244565010070801
    10. ' pass' → logprob: -6.744565010070801

Token 555: ' limit' (ID: 5967)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2321481704711914
    2. '   ' → logprob: -1.7321481704711914
    3. 'import' → logprob: -2.2321481704711914
    4. ' use' → logprob: -2.2321481704711914
    5. 'yield' → logprob: -2.7321481704711914
    6. ' indent' → logprob: -3.2321481704711914
    7. 'indent' → logprob: -3.3571481704711914
    8. '...' → logprob: -3.7321481704711914
    9. ' yield' → logprob: -3.7321481704711914
    10. 'continue' → logprob: -3.7321481704711914

Token 556: ' coins' (ID: 28969)
  Prédit: ' coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.36825066804885864
    2. ' the' → logprob: -1.2432506084442139
    3. 'coin' → logprob: -5.368250846862793
    4. '_coin' → logprob: -5.618250846862793
    5. ' payment' → logprob: -6.118250846862793
    6. ' max' → logprob: -6.243250846862793
    7. ' ourselves' → logprob: -6.368250846862793
    8. ' coins' → logprob: -6.493250846862793
    9. 'the' → logprob: -6.743250846862793
    10. '   ' → logprob: -7.993250846862793

Token 557: ' combinations' (ID: 43835)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6296788454055786
    2. '_count' → logprob: -2.379678726196289
    3. ' to' → logprob: -2.504678726196289
    4. '_counts' → logprob: -2.504678726196289
    5. '   ' → logprob: -3.379678726196289
    6. '_limit' → logprob: -3.504678726196289
    7. ' ' → logprob: -3.754678726196289
    8. ' in' → logprob: -4.504678726196289
    9. '_usage' → logprob: -4.504678726196289
    10. '_' → logprob: -4.504678726196289

Token 558: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4141313433647156
    2. ' =' → logprob: -1.5391314029693604
    3. '       ' → logprob: -3.5391314029693604
    4. ',' → logprob: -3.6641314029693604
    5. ':' → logprob: -4.164131164550781
    6. '=' → logprob: -4.664131164550781
    7. ' in' → logprob: -5.289131164550781
    8. '[' → logprob: -5.289131164550781
    9. '   ' → logprob: -5.414131164550781
    10. ' ' → logprob: -5.539131164550781

Token 559: ' those' (ID: 2617)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.23010475933551788
    2. ' counts' → logprob: -3.230104684829712
    3. 'at' → logprob: -3.355104684829712
    4. 'counts' → logprob: -4.355104923248291
    5. ' sum' → logprob: -4.605104923248291
    6. 'sum' → logprob: -4.605104923248291
    7. 'a' → logprob: -4.605104923248291
    8. '7' → logprob: -4.730104923248291
    9. ' a' → logprob: -4.730104923248291
    10. 'count' → logprob: -4.855104923248291

Token 560: ' coins' (ID: 28969)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'with' → logprob: -1.01371431350708
    2. ' that' → logprob: -1.76371431350708
    3. ' with' → logprob: -1.88871431350708
    4. '   ' → logprob: -2.38871431350708
    5. 'that' → logprob: -2.88871431350708
    6. 'import' → logprob: -3.26371431350708
    7. 'from' → logprob: -3.38871431350708
    8. 'def' → logprob: -3.51371431350708
    9. '       ' → logprob: -4.01371431350708
    10. '#' → logprob: -4.13871431350708

Token 561: ' sums' (ID: 73121)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3821512460708618
    2. '       ' → logprob: -1.5071512460708618
    3. ' counts' → logprob: -2.8821511268615723
    4. ' in' → logprob: -3.0071511268615723
    5. 'counts' → logprob: -3.0071511268615723
    6. ' that' → logprob: -3.0071511268615723
    7. ' up' → logprob: -3.2571511268615723
    8. ' with' → logprob: -3.3821511268615723
    9. 'with' → logprob: -3.5071511268615723
    10. '[:' → logprob: -3.5071511268615723

Token 562: ' ≤' (ID: 72554)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.04636923968791962
    2. '<=' → logprob: -3.4213693141937256
    3. '   ' → logprob: -5.2963690757751465
    4. ' that' → logprob: -6.1713690757751465
    5. ' less' → logprob: -6.2963690757751465
    6. ' up' → logprob: -7.2963690757751465
    7. ' =' → logprob: -7.5463690757751465
    8. '       ' → logprob: -7.6713690757751465
    9. ' not' → logprob: -7.7963690757751465
    10. '=' → logprob: -7.9213690757751465

Token 563: ' price' (ID: 3911)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.647815465927124
    2. 'self' → logprob: -1.522815465927124
    3. '110' → logprob: -1.897815465927124
    4. '101' → logprob: -2.897815465927124
    5. 'price' → logprob: -3.897815465927124
    6. '150' → logprob: -4.897815704345703
    7. ' ' → logprob: -4.897815704345703
    8. ' self' → logprob: -5.772815704345703
    9. 'change' → logprob: -6.022815704345703
    10. '111' → logprob: -6.022815704345703

Token 564: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06814152002334595
    2. '
' → logprob: -3.193141460418701
    3. '        
' → logprob: -3.943141460418701
    4. ':' → logprob: -6.568141460418701
    5. ',' → logprob: -7.318141460418701
    6. 'from' → logprob: -7.568141460418701
    7. 'import' → logprob: -7.693141460418701
    8. ':
' → logprob: -7.693141460418701
    9. '    
' → logprob: -8.06814193725586
    10. '   ' → logprob: -8.44314193725586

Token 565: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -11.875019073486328
    3. '
' → logprob: -12.250019073486328
    4. '   ' → logprob: -13.000019073486328
    5. '101' → logprob: -13.750019073486328
    6. '999' → logprob: -14.125019073486328
    7. '110' → logprob: -14.375019073486328
    8. '10' → logprob: -14.375019073486328
    9. '1' → logprob: -14.625019073486328
    10. 'self' → logprob: -15.000019073486328

Token 566: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -3.941161776310764e-05
    2. '10' → logprob: -11.250039100646973
    3. '1' → logprob: -12.250039100646973
    4. 'self' → logprob: -12.250039100646973
    5. ' ' → logprob: -12.375039100646973
    6. '999' → logprob: -12.500039100646973
    7. '
' → logprob: -12.625039100646973
    8. '110' → logprob: -14.000039100646973
    9. '101' → logprob: -14.187539100646973
    10. '```' → logprob: -14.625039100646973

Token 567: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020866614067927003
    2. '       ' → logprob: -9.500208854675293
    3. ')' → logprob: -10.250208854675293
    4. '   ' → logprob: -10.625208854675293
    5. '           ' → logprob: -11.000208854675293
    6. ' ' → logprob: -11.250208854675293
    7. '        
' → logprob: -11.625208854675293
    8. '            
' → logprob: -12.125208854675293
    9. '
' → logprob: -12.500208854675293
    10. '00' → logprob: -12.625208854675293

Token 568: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11909215897321701
    2. ':' → logprob: -3.1190922260284424
    3. '        
' → logprob: -3.3690922260284424
    4. '
' → logprob: -3.8690922260284424
    5. ',' → logprob: -5.494091987609863
    6. '    
' → logprob: -6.244091987609863
    7. '   ' → logprob: -6.369091987609863
    8. ':
' → logprob: -6.869091987609863
    9. '.' → logprob: -7.494091987609863
    10. '  
' → logprob: -7.619091987609863

Token 569: 'reasonable' (ID: 103464)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.098456472158432
    2. '       ' → logprob: -3.348456382751465
    3. '):' → logprob: -3.723456382751465
    4. ':' → logprob: -5.098456382751465
    5. ')
' → logprob: -5.348456382751465
    6. ').' → logprob: -5.348456382751465
    7. '   ' → logprob: -5.598456382751465
    8. ' and' → logprob: -5.598456382751465
    9. '
' → logprob: -5.848456382751465
    10. '):
' → logprob: -6.098456382751465

Token 570: ' threshold' (ID: 24313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8057136535644531
    2. '):' → logprob: -0.9307136535644531
    3. '):
' → logprob: -3.180713653564453
    4. ':' → logprob: -3.305713653564453
    5. ' and' → logprob: -3.555713653564453
    6. '       ' → logprob: -4.055713653564453
    7. ').' → logprob: -4.680713653564453
    8. '   ' → logprob: -5.055713653564453
    9. '.' → logprob: -5.680713653564453
    10. '
' → logprob: -5.930713653564453

Token 571: ').
' (ID: 6294)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24714499711990356
    2. ')' → logprob: -2.247144937515259
    3. '):' → logprob: -2.372144937515259
    4. ').' → logprob: -5.122145175933838
    5. ':' → logprob: -5.497145175933838
    6. '):
' → logprob: -5.622145175933838
    7. ',' → logprob: -6.747145175933838
    8. '.' → logprob: -6.747145175933838
    9. '   ' → logprob: -6.872145175933838
    10. '```' → logprob: -7.247145175933838

Token 572: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013380328193306923
    2. '
' → logprob: -4.388380527496338
    3. '        
' → logprob: -7.763380527496338
    4. 'from' → logprob: -8.26338005065918
    5. 'import' → logprob: -9.26338005065918
    6. '    
' → logprob: -10.51338005065918
    7. '   ' → logprob: -10.63838005065918
    8. '```' → logprob: -11.38838005065918
    9. ' from' → logprob: -11.76338005065918
    10. '           ' → logprob: -12.13838005065918

Token 573: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018359452951699495
    2. '
' → logprob: -7.001835823059082
    3. '        
' → logprob: -7.251835823059082
    4. 'import' → logprob: -9.501835823059082
    5. 'from' → logprob: -10.376835823059082
    6. '```' → logprob: -10.751835823059082
    7. '   ' → logprob: -11.251835823059082
    8. '    
' → logprob: -11.251835823059082
    9. '           ' → logprob: -11.501835823059082
    10. '#' → logprob: -11.751835823059082

Token 574: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013953536108601838
    2. '        
' → logprob: -9.250139236450195
    3. '
' → logprob: -10.625139236450195
    4. 'import' → logprob: -12.250139236450195
    5. '           ' → logprob: -12.500139236450195
    6. '```' → logprob: -13.125139236450195
    7. '        ' → logprob: -13.250139236450195
    8. '    
' → logprob: -13.500139236450195
    9. '   ' → logprob: -13.625139236450195
    10. '<|end|>' → logprob: -14.000139236450195

Token 575: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011986821191385388
    2. 'max' → logprob: -7.251198768615723
    3. 'from' → logprob: -8.626198768615723
    4. '   ' → logprob: -9.001198768615723
    5. 'coin' → logprob: -10.626198768615723
    6. 'import' → logprob: -10.751198768615723
    7. 'options' → logprob: -10.876198768615723
    8. 'def' → logprob: -10.876198768615723
    9. 'limit' → logprob: -10.876198768615723
    10. 'coins' → logprob: -11.001198768615723

Token 576: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04081781208515167
    2. 'from' → logprob: -3.9158177375793457
    3. 'import' → logprob: -5.165817737579346
    4. 'max' → logprob: -5.665817737579346
    5. 'result' → logprob: -5.915817737579346
    6. 'def' → logprob: -6.165817737579346
    7. 'options' → logprob: -6.415817737579346
    8. 'results' → logprob: -6.415817737579346
    9. '   ' → logprob: -6.790817737579346
    10. 'payment' → logprob: -7.290817737579346

Token 577: ' then' (ID: 1815)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44077396392822266
    2. '   ' → logprob: -1.4407739639282227
    3. 'import' → logprob: -3.0657739639282227
    4. '    ' → logprob: -4.065773963928223
    5. ' import' → logprob: -4.065773963928223
    6. ' def' → logprob: -4.940773963928223
    7. ' continue' → logprob: -5.065773963928223
    8. 'def' → logprob: -5.190773963928223
    9. ' for' → logprob: -5.440773963928223
    10. 'continue' → logprob: -5.815773963928223

Token 578: ' compute' (ID: 23864)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8190696835517883
    2. 'yield' → logprob: -0.9440696835517883
    3. 'continue' → logprob: -2.5690696239471436
    4. 'find' → logprob: -4.194069862365723
    5. ' yield' → logprob: -4.319069862365723
    6. 'enumer' → logprob: -4.694069862365723
    7. '   ' → logprob: -4.819069862365723
    8. ' continue' → logprob: -5.194069862365723
    9. 'search' → logprob: -5.319069862365723
    10. 'try' → logprob: -5.569069862365723

Token 579: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.8178527355194092
    2. 'all' → logprob: -1.4428527355194092
    3. ' all' → logprob: -2.067852735519409
    4. '       ' → logprob: -2.942852735519409
    5. 'payment' → logprob: -3.442852735519409
    6. 'the' → logprob: -3.567852735519409
    7. 'possible' → logprob: -3.817852735519409
    8. ' change' → logprob: -3.817852735519409
    9. '   ' → logprob: -4.567852973937988
    10. ' the' → logprob: -4.692852973937988

Token 580: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06808783859014511
    2. ' =' → logprob: -3.9430878162384033
    3. '_given' → logprob: -4.443088054656982
    4. '           ' → logprob: -5.318088054656982
    5. '=' → logprob: -5.568088054656982
    6. ' given' → logprob: -5.818088054656982
    7. '_amount' → logprob: -5.943088054656982
    8. 'for' → logprob: -6.068088054656982
    9. '   ' → logprob: -6.193088054656982
    10. 'given' → logprob: -6.193088054656982

Token 581: ' minimal' (ID: 19957)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yield' → logprob: -0.046716514974832535
    2. '       ' → logprob: -3.7967164516448975
    3. ' yield' → logprob: -4.421716690063477
    4. 'check' → logprob: -5.171716690063477
    5. 'filter' → logprob: -6.046716690063477
    6. 'if' → logprob: -6.796716690063477
    7. 'keep' → logprob: -8.046716690063477
    8. ' check' → logprob: -8.046716690063477
    9. '#' → logprob: -8.171716690063477
    10. '           ' → logprob: -8.296716690063477

Token 582: ' coins' (ID: 28969)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.5168063044548035
    2. '_payment' → logprob: -2.0168063640594482
    3. 'coins' → logprob: -2.0168063640594482
    4. ' coins' → logprob: -3.2668063640594482
    5. '_' → logprob: -4.016806125640869
    6. '_coin' → logprob: -4.266806125640869
    7. '       ' → logprob: -4.391806125640869
    8. '_change' → logprob: -4.641806125640869
    9. 'payment' → logprob: -4.766806125640869
    10. 'coin' → logprob: -4.891806125640869

Token 583: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3364248275756836
    2. 'return' → logprob: -2.0864248275756836
    3. '_return' → logprob: -3.7114248275756836
    4. '   ' → logprob: -3.8364248275756836
    5. '           ' → logprob: -3.9614248275756836
    6. '_required' → logprob: -4.461424827575684
    7. 'needed' → logprob: -4.461424827575684
    8. '_needed' → logprob: -4.461424827575684
    9. 'returned' → logprob: -4.586424827575684
    10. 'for' → logprob: -4.711424827575684

Token 584: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.5717366337776184
    2. ' change' → logprob: -1.6967365741729736
    3. 'each' → logprob: -2.3217365741729736
    4. ' each' → logprob: -3.0717365741729736
    5. 'payment' → logprob: -3.9467365741729736
    6. ' payment' → logprob: -4.071736812591553
    7. '       ' → logprob: -4.321736812591553
    8. 'return' → logprob: -4.446736812591553
    9. 'the' → logprob: -4.571736812591553
    10. 'making' → logprob: -5.446736812591553

Token 585: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023250484839081764
    2. ',' → logprob: -4.773250579833984
    3. '.' → logprob: -5.023250579833984
    4. '
' → logprob: -5.648250579833984
    5. ':' → logprob: -6.648250579833984
    6. '        
' → logprob: -7.023250579833984
    7. '.
' → logprob: -7.023250579833984
    8. ' and' → logprob: -8.148250579833984
    9. ' to' → logprob: -8.648250579833984
    10. ',
' → logprob: -8.773250579833984

Token 586: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.052767835557460785
    2. ' and' → logprob: -4.052767753601074
    3. '           ' → logprob: -4.552767753601074
    4. 'and' → logprob: -4.552767753601074
    5. '#' → logprob: -4.677767753601074
    6. ' then' → logprob: -6.677767753601074
    7. '```' → logprob: -8.052767753601074
    8. '
' → logprob: -8.302767753601074
    9. '        
' → logprob: -8.302767753601074
    10. 'import' → logprob: -8.302767753601074

Token 587: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.898892879486084
    2. 'yield' → logprob: -1.148892879486084
    3. '#' → logprob: -1.648892879486084
    4. ' yield' → logprob: -3.523892879486084
    5. 'keep' → logprob: -4.148892879486084
    6. 'check' → logprob: -4.648892879486084
    7. '           ' → logprob: -4.898892879486084
    8. 'filter' → logprob: -5.148892879486084
    9. ' check' → logprob: -5.398892879486084
    10. 'return' → logprob: -5.523892879486084

Token 588: ' received' (ID: 6100)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.25729501247406
    2. ' the' → logprob: -1.38229501247406
    3. 'the' → logprob: -2.6322951316833496
    4. ' if' → logprob: -2.8822951316833496
    5. ' how' → logprob: -3.0072951316833496
    6. '   ' → logprob: -3.3822951316833496
    7. ' coins' → logprob: -3.3822951316833496
    8. ' payment' → logprob: -3.6322951316833496
    9. 'if' → logprob: -3.7572951316833496
    10. '           ' → logprob: -4.13229513168335

Token 589: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2833467423915863
    2. 's' → logprob: -2.158346652984619
    3. '500' → logprob: -2.408346652984619
    4. '_co' → logprob: -4.658346652984619
    5. 'coins' → logprob: -4.908346652984619
    6. '   ' → logprob: -5.158346652984619
    7. '_coin' → logprob: -5.658346652984619
    8. '       ' → logprob: -6.533346652984619
    9. 'return' → logprob: -6.533346652984619
    10. ' ' → logprob: -6.783346652984619

Token 590: '500' (ID: 3234)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5525746941566467
    2. ' ' → logprob: -1.802574634552002
    3. '_co' → logprob: -3.177574634552002
    4. 'coins' → logprob: -3.302574634552002
    5. '_coin' → logprob: -3.677574634552002
    6. '
' → logprob: -3.802574634552002
    7. ' coins' → logprob: -3.927574634552002
    8. '_options' → logprob: -4.427574634552002
    9. '_payment' → logprob: -4.677574634552002
    10. '   ' → logprob: -4.677574634552002

Token 591: '-y' (ID: 18102)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.40458977222442627
    2. ' -' → logprob: -2.0295896530151367
    3. '```' → logprob: -2.6545896530151367
    4. '-value' → logprob: -3.5295896530151367
    5. '-y' → logprob: -4.029589653015137
    6. '   ' → logprob: -4.029589653015137
    7. '0' → logprob: -4.404589653015137
    8. '-co' → logprob: -5.029589653015137
    9. '[-' → logprob: -5.279589653015137
    10. '-token' → logprob: -5.654589653015137

Token 592: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.006528145633637905
    2. '-' → logprob: -6.131528377532959
    3. '-en' → logprob: -6.131528377532959
    4. 'coin' → logprob: -6.631528377532959
    5. ' coin' → logprob: -7.631528377532959
    6. '-co' → logprob: -9.2565279006958
    7. ' coins' → logprob: -9.3815279006958
    8. '_coin' → logprob: -9.8815279006958
    9. '```' → logprob: -10.6315279006958
    10. 'coins' → logprob: -10.8815279006958

Token 593: ' coins' (ID: 28969)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10423161089420319
    2. '   ' → logprob: -2.479231595993042
    3. '
' → logprob: -5.479231834411621
    4. '.' → logprob: -6.354231834411621
    5. '.
' → logprob: -6.354231834411621
    6. 'coins' → logprob: -6.354231834411621
    7. ' coins' → logprob: -6.979231834411621
    8. '_' → logprob: -7.229231834411621
    9. '        
' → logprob: -7.229231834411621
    10. ',' → logprob: -7.604231834411621

Token 594: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11672988533973694
    2. ':' → logprob: -2.616729974746704
    3. '        
' → logprob: -3.866729974746704
    4. '
' → logprob: -5.491729736328125
    5. ',' → logprob: -5.866729736328125
    6. '.' → logprob: -6.241729736328125
    7. ':
' → logprob: -6.741729736328125
    8. '    
' → logprob: -6.866729736328125
    9. '   ' → logprob: -6.991729736328125
    10. '(' → logprob: -7.116729736328125

Token 595: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.09582361578941345
    2. ' change' → logprob: -2.4708235263824463
    3. 'the' → logprob: -5.595823764801025
    4. ' the' → logprob: -6.720823764801025
    5. '_change' → logprob: -7.095823764801025
    6. 'get' → logprob: -8.095823287963867
    7. '   ' → logprob: -9.095823287963867
    8. ' get' → logprob: -9.220823287963867
    9. ' ' → logprob: -9.845823287963867
    10. 'coin' → logprob: -9.845823287963867

Token 596: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48545676469802856
    2. ':' → logprob: -1.6104567050933838
    3. '       ' → logprob: -2.110456705093384
    4. '
' → logprob: -3.235456705093384
    5. '    
' → logprob: -4.985456943511963
    6. '        
' → logprob: -5.110456943511963
    7. ',' → logprob: -5.985456943511963
    8. ':
' → logprob: -6.610456943511963
    9. '  
' → logprob: -6.985456943511963
    10. '<|end|>' → logprob: -7.110456943511963

Token 597: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08111312985420227
    2. '        
' → logprob: -3.20611310005188
    3. '   ' → logprob: -4.081113338470459
    4. '    
' → logprob: -5.081113338470459
    5. ' 
' → logprob: -5.456113338470459
    6. '\' → logprob: -5.706113338470459
    7. '
' → logprob: -6.331113338470459
    8. ',' → logprob: -6.956113338470459
    9. ':' → logprob: -7.456113338470459
    10. '  
' → logprob: -7.831113338470459

Token 598: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00045045334263704717
    2. 'options' → logprob: -8.625450134277344
    3. 'from' (adapté à ' from') → logprob: -9.375450134277344
    4. 'max' → logprob: -9.875450134277344
    5. 'import' → logprob: -10.125450134277344
    6. 'results' → logprob: -10.750450134277344
    7. ' options' → logprob: -11.000450134277344
    8. 'payment' → logprob: -11.500450134277344
    9. 'result' → logprob: -11.625450134277344
    10. 'n' → logprob: -12.250450134277344

Token 599: ' itertools' (ID: 103178)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0011805851245298982
    2. 'collections' → logprob: -7.376180648803711
    3. ' itertools' → logprob: -7.751180648803711
    4. 'math' → logprob: -9.251180648803711
    5. 'copy' → logprob: -10.876180648803711
    6. 'operator' → logprob: -13.001180648803711
    7. 'heap' → logprob: -13.126180648803711
    8. 'import' → logprob: -13.876180648803711
    9. '   ' → logprob: -14.126180648803711
    10. 'typing' → logprob: -14.376180648803711

Token 600: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.16052347421646118
    2. 'import' → logprob: -1.9105234146118164
    3. '	import' → logprob: -8.785523414611816
    4. 'ertools' → logprob: -9.410523414611816
    5. '_import' → logprob: -9.910523414611816
    6. '.com' → logprob: -12.785523414611816
    7. ' imports' → logprob: -13.535523414611816
    8. ' itertools' → logprob: -13.785523414611816
    9. '```' → logprob: -13.785523414611816
    10. 'com' → logprob: -13.910523414611816

Token 601: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -3.5597102396423e-05
    2. ' product' → logprob: -10.250035285949707
    3. '.product' → logprob: -15.875035285949707
    4. '	product' → logprob: -17.125036239624023
    5. '(product' → logprob: -18.250036239624023
    6. 'com' → logprob: -18.250036239624023
    7. '
' → logprob: -19.375036239624023
    8. '$product' → logprob: -20.000036239624023
    9. '_product' → logprob: -20.500036239624023
    10. '```' → logprob: -20.625036239624023

Token 602: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41564053297042847
    2. '       ' → logprob: -1.1656405925750732
    3. '        
' → logprob: -3.7906405925750732
    4. ',' → logprob: -5.415640354156494
    5. '

' → logprob: -8.165640830993652
    6. '<|end|>' → logprob: -8.415640830993652
    7. '    
' → logprob: -9.040640830993652
    8. '<|end|>' → logprob: -9.165640830993652
    9. ',
' → logprob: -9.290640830993652
    10. '  
' → logprob: -9.540640830993652

Token 603: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011067748069763184
    2. '        
' → logprob: -4.636067867279053
    3. ',' → logprob: -8.011067390441895
    4. '<|end|>' → logprob: -8.011067390441895
    5. '
' → logprob: -8.261067390441895
    6. '        ' → logprob: -10.011067390441895
    7. '  
' → logprob: -10.136067390441895
    8. '    
' → logprob: -10.386067390441895
    9. '```' → logprob: -10.761067390441895
    10. ' 
' → logprob: -10.886067390441895

Token 604: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5664498805999756
    2. 'coin' → logprob: -1.5664498805999756
    3. '       ' → logprob: -2.8164498805999756
    4. 'counts' → logprob: -2.9414498805999756
    5. ' max' → logprob: -3.0664498805999756
    6. '#' (adapté à ' #') → logprob: -4.066450119018555
    7. 'coins' → logprob: -4.191450119018555
    8. ' coin' → logprob: -4.941450119018555
    9. ' denominations' → logprob: -5.066450119018555
    10. 'den' → logprob: -5.691450119018555

Token 605: ' Only' (ID: 12817)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.616587221622467
    2. 'coin' → logprob: -0.991587221622467
    3. 'coins' → logprob: -3.7415871620178223
    4. 'counts' → logprob: -3.9915871620178223
    5. '       ' → logprob: -4.241587162017822
    6. 'den' → logprob: -4.616587162017822
    7. '#' → logprob: -5.241587162017822
    8. ' max' → logprob: -5.241587162017822
    9. ' coin' → logprob: -5.991587162017822
    10. 'limits' → logprob: -6.116587162017822

Token 606: ' ' (ID: 220)
  Prédit: ' coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.8147017359733582
    2. 'coin' → logprob: -1.064701795578003
    3. ' coins' → logprob: -2.564701795578003
    4. 'coins' → logprob: -3.064701795578003
    5. ' denominations' → logprob: -3.314701795578003
    6. ' counts' → logprob: -4.314701557159424
    7. 'counts' → logprob: -4.689701557159424
    8. 'den' → logprob: -5.064701557159424
    9. ' denom' → logprob: -5.189701557159424
    10. ' denomination' → logprob: -5.814701557159424

Token 607: '6' (ID: 21)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -1.1163430213928223
    2. 'coin' → logprob: -1.4913430213928223
    3. 'counts' → logprob: -1.4913430213928223
    4. 'range' → logprob: -2.7413430213928223
    5. 'Coin' → logprob: -3.1163430213928223
    6. 'len' → logprob: -3.4913430213928223
    7. 'count' → logprob: -4.116343021392822
    8. 'self' → logprob: -4.241343021392822
    9. 'den' → logprob: -4.241343021392822
    10. '1' → logprob: -5.241343021392822

Token 608: ' coin' (ID: 22179)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.8546464443206787
    2. ' coins' → logprob: -1.8546464443206787
    3. ' denominations' → logprob: -1.9796464443206787
    4. 'coin' → logprob: -2.9796464443206787
    5. '_co' → logprob: -2.9796464443206787
    6. ' coin' → logprob: -3.2296464443206787
    7. 'den' → logprob: -3.4796464443206787
    8. '_coin' → logprob: -3.7296464443206787
    9. '-co' → logprob: -4.104646682739258
    10. 'tokens' → logprob: -4.479646682739258

Token 609: ' types' (ID: 6009)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.32677361369132996
    2. 's' → logprob: -1.4517736434936523
    3. '_types' → logprob: -3.2017736434936523
    4. '_values' → logprob: -6.576773643493652
    5. 'counts' → logprob: -6.701773643493652
    6. ' counts' → logprob: -7.701773643493652
    7. '_den' → logprob: -8.201773643493652
    8. '_s' → logprob: -8.701773643493652
    9. ' denominations' → logprob: -9.076773643493652
    10. 'types' → logprob: -9.451773643493652

Token 610: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5087169408798218
    2. ':' → logprob: -1.2587169408798218
    3. ',' → logprob: -2.7587170600891113
    4. '=' → logprob: -4.508717060089111
    5. ' (' → logprob: -4.508717060089111
    6. '[' → logprob: -4.883717060089111
    7. ':
' → logprob: -5.008717060089111
    8. '       ' → logprob: -5.133717060089111
    9. ' in' → logprob: -5.883717060089111
    10. ' for' → logprob: -6.758717060089111

Token 611: ' excluding' (ID: 76651)
  Prédit: ' counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' counts' → logprob: -1.4942593574523926
    2. ' for' → logprob: -1.7442593574523926
    3. ' coin' → logprob: -1.8692593574523926
    4. '       ' → logprob: -2.1192593574523926
    5. ' self' → logprob: -2.7442593574523926
    6. ' range' → logprob: -2.8692593574523926
    7. ' coins' → logprob: -3.1192593574523926
    8. 'counts' → logprob: -3.7442593574523926
    9. 'range' → logprob: -4.119259357452393
    10. 'coin' → logprob: -4.119259357452393

Token 612: ' ' (ID: 220)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.1496834754943848
    2. 'Coin' → logprob: -1.5246834754943848
    3. '100' → logprob: -1.7746834754943848
    4. 'self' → logprob: -2.1496834754943848
    5. ' the' → logprob: -2.7746834754943848
    6. '1' → logprob: -2.7746834754943848
    7. ' ' → logprob: -3.7746834754943848
    8. '0' → logprob: -4.024683475494385
    9. ' Coin' → logprob: -5.149683475494385
    10. 'class' → logprob: -5.649683475494385

Token 613: '100' (ID: 1353)
  Prédit: 'Coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' → logprob: -0.8134260177612305
    2. '100' → logprob: -1.0634260177612305
    3. '0' → logprob: -1.6884260177612305
    4. '1' → logprob: -4.1884260177612305
    5. 'self' → logprob: -4.6884260177612305
    6. 'class' → logprob: -6.6884260177612305
    7. ' Coin' → logprob: -8.06342601776123
    8. ' ' → logprob: -8.93842601776123
    9. '   ' → logprob: -9.81342601776123
    10. 'the' → logprob: -10.06342601776123

Token 614: '0' (ID: 15)
  Prédit: '-y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-y' → logprob: -0.821436882019043
    2. '-' → logprob: -1.071436882019043
    3. '0' → logprob: -2.071436882019043
    4. '   ' → logprob: -3.446436882019043
    5. ',' → logprob: -3.696436882019043
    6. '       ' → logprob: -5.196436882019043
    7. '-,' → logprob: -5.196436882019043
    8. ',-' → logprob: -5.321436882019043
    9. '[-' → logprob: -5.446436882019043
    10. '```' → logprob: -5.571436882019043

Token 615: '-y' (ID: 18102)
  Prédit: '-y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-y' → logprob: -0.019484175369143486
    2. '   ' → logprob: -4.394484043121338
    3. 'yen' → logprob: -6.769484043121338
    4. '[-' → logprob: -7.144484043121338
    5. '_y' → logprob: -7.144484043121338
    6. ' -' → logprob: -7.269484043121338
    7. '-' → logprob: -7.519484043121338
    8. '-value' → logprob: -7.644484043121338
    9. ',' → logprob: -7.769484043121338
    10. '       ' → logprob: -8.144484519958496

Token 616: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.03916677460074425
    2. '-en' → logprob: -3.2891666889190674
    3. '-' → logprob: -7.9141669273376465
    4. '-y' → logprob: -8.789166450500488
    5. '```' → logprob: -8.789166450500488
    6. 'yen' → logprob: -9.664166450500488
    7. 'e' → logprob: -10.414166450500488
    8. '``' → logprob: -10.851666450500488
    9. '   ' → logprob: -10.851666450500488
    10. '-e' → logprob: -10.914166450500488

Token 617: ' bills' (ID: 26846)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.7602620124816895
    2. '_coin' → logprob: -1.8852620124816895
    3. '_' → logprob: -2.2602620124816895
    4. 'coins' → logprob: -2.6352620124816895
    5. '-co' → logprob: -2.7602620124816895
    6. ' coins' → logprob: -3.2602620124816895
    7. '_y' → logprob: -3.8852620124816895
    8. '   ' → logprob: -4.1352620124816895
    9. 'coin' → logprob: -4.3852620124816895
    10. ',' → logprob: -4.7602620124816895

Token 618: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08635605126619339
    2. '       ' → logprob: -3.4613561630249023
    3. ',' → logprob: -3.9613561630249023
    4. ' =' → logprob: -4.586356163024902
    5. '        
' → logprob: -4.961356163024902
    6. ' (' → logprob: -5.586356163024902
    7. ':' → logprob: -6.211356163024902
    8. 'indices' → logprob: -6.461356163024902
    9. '   ' → logprob: -7.211356163024902
    10. '    
' → logprob: -7.461356163024902

Token 619: 'index' (ID: 2257)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014995861798524857
    2. '):' → logprob: -5.13999605178833
    3. ')
' → logprob: -5.38999605178833
    4. ' )' → logprob: -6.76499605178833
    5. '):
' → logprob: -6.88999605178833
    6. ':' → logprob: -7.76499605178833
    7. '0' → logprob: -8.139995574951172
    8. '       ' → logprob: -8.639995574951172
    9. ')]' → logprob: -8.639995574951172
    10. ',' → logprob: -8.639995574951172

Token 620: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07631886750459671
    2. ' =' → logprob: -3.0763189792633057
    3. '1' → logprob: -3.7013189792633057
    4. '0' → logprob: -7.076318740844727
    5. ' ' → logprob: -7.326318740844727
    6. 's' → logprob: -7.576318740844727
    7. ':' → logprob: -8.701318740844727
    8. ')' → logprob: -8.701318740844727
    9. '+' → logprob: -9.701318740844727
    10. '
' → logprob: -9.826318740844727

Token 621: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23354966938495636
    2. '=' → logprob: -1.73354971408844
    3. '0' → logprob: -3.6085495948791504
    4. ' =' → logprob: -6.10854959487915
    5. '
' → logprob: -7.23354959487915
    6. ' ' → logprob: -7.35854959487915
    7. 's' → logprob: -8.233550071716309
    8. ')' → logprob: -8.608550071716309
    9. 'range' → logprob: -9.233550071716309
    10. ':' → logprob: -9.358550071716309

Token 622: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27229002118110657
    2. ')' → logprob: -1.6472899913787842
    3. '+' → logprob: -4.022290229797363
    4. ':' → logprob: -5.397290229797363
    5. '[' → logprob: -5.522290229797363
    6. '1' → logprob: -5.897290229797363
    7. ',
' → logprob: -6.022290229797363
    8. '):
' → logprob: -6.272290229797363
    9. '):' → logprob: -6.522290229797363
    10. ' to' → logprob: -6.647290229797363

Token 623: ' coins' (ID: 28969)
  Prédit: ' coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.5513104200363159
    2. ' coins' → logprob: -1.426310420036316
    3. 'coin' → logprob: -2.6763105392456055
    4. '       ' → logprob: -2.9263105392456055
    5. 'coins' → logprob: -3.3013105392456055
    6. ' counts' → logprob: -5.1763105392456055
    7. ' indices' → logprob: -5.4263105392456055
    8. ' co' → logprob: -6.3013105392456055
    9. 'counts' → logprob: -6.6763105392456055
    10. '        ' → logprob: -6.6763105392456055

Token 624: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05476514622569084
    2. '[' → logprob: -3.554765224456787
    3. '=' → logprob: -4.179765224456787
    4. '   ' → logprob: -5.179765224456787
    5. '=[' → logprob: -6.679765224456787
    6. '_counts' → logprob: -7.429765224456787
    7. '       ' → logprob: -8.179764747619629
    8. ')' → logprob: -8.304764747619629
    9. '_indices' → logprob: -8.804764747619629
    10. ',' → logprob: -8.929764747619629

Token 625: ' indices' (ID: 30378)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5285112857818604
    2. 'self' → logprob: -1.9035112857818604
    3. '(' → logprob: -2.4035112857818604
    4. '1' → logprob: -2.9035112857818604
    5. ' [' → logprob: -3.7785112857818604
    6. 'Coin' → logprob: -3.7785112857818604
    7. 'range' → logprob: -3.9035112857818604
    8. '   ' → logprob: -4.528511047363281
    9. ' (' → logprob: -4.528511047363281
    10. ' self' → logprob: -4.653511047363281

Token 626: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.788591206073761
    2. ' =' → logprob: -1.0385911464691162
    3. '1' → logprob: -1.7885911464691162
    4. ' ' → logprob: -4.163591384887695
    5. '   ' → logprob: -5.413591384887695
    6. '[' → logprob: -6.163591384887695
    7. ' in' → logprob: -7.663591384887695
    8. 'range' → logprob: -7.788591384887695
    9. ' [' → logprob: -8.413591384887695
    10. '0' → logprob: -8.413591384887695

Token 627: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011256909929215908
    2. 'range' → logprob: -6.876125812530518
    3. ' ' → logprob: -10.25112533569336
    4. '
' → logprob: -11.12612533569336
    5. ' range' → logprob: -11.37612533569336
    6. 'from' → logprob: -11.50112533569336
    7. '=' → logprob: -11.75112533569336
    8. '   ' → logprob: -12.12612533569336
    9. '[' → logprob: -13.12612533569336
    10. '(' → logprob: -13.62612533569336

Token 628: '..' (ID: 485)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1132262572646141
    2. ',' → logprob: -2.6132261753082275
    3. ' to' → logprob: -3.7382261753082275
    4. ' through' → logprob: -5.488226413726807
    5. '   ' → logprob: -6.363226413726807
    6. 'to' → logprob: -6.738226413726807
    7. '6' → logprob: -7.113226413726807
    8. ' ,' → logprob: -7.988226413726807
    9. ' :' → logprob: -7.988226413726807
    10. '       ' → logprob: -8.113225936889648

Token 629: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.010291678830981255
    2. '7' → logprob: -4.635291576385498
    3. ' ' → logprob: -7.885291576385498
    4. ':' → logprob: -9.135292053222656
    5. 'len' → logprob: -10.760292053222656
    6. '```' → logprob: -10.885292053222656
    7. '1' → logprob: -13.385292053222656
    8. ' len' → logprob: -13.697792053222656
    9. '...' → logprob: -13.822792053222656
    10. '=' → logprob: -13.947792053222656

Token 630: ' with' (ID: 483)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22269207239151
    2. '       ' → logprob: -1.9726920127868652
    3. ':' → logprob: -3.7226920127868652
    4. ',' → logprob: -4.472692012786865
    5. '        
' → logprob: -5.222692012786865
    6. ':
' → logprob: -5.472692012786865
    7. '[' → logprob: -5.847692012786865
    8. 'indices' → logprob: -6.597692012786865
    9. '.' → logprob: -6.847692012786865
    10. '

' → logprob: -6.972692012786865

Token 631: ' counts' (ID: 28991)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.23327121138572693
    2. '1' → logprob: -2.4832711219787598
    3. '6' → logprob: -2.8582711219787598
    4. ' range' → logprob: -3.8582711219787598
    5. 'values' → logprob: -4.23327112197876
    6. '[' → logprob: -4.60827112197876
    7. 'len' → logprob: -5.10827112197876
    8. ' ' → logprob: -5.48327112197876
    9. '0' → logprob: -5.73327112197876
    10. 'value' → logprob: -6.48327112197876

Token 632: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10656983405351639
    2. '       ' → logprob: -2.481569766998291
    3. '   ' → logprob: -4.731569766998291
    4. '=' → logprob: -5.356569766998291
    5. '_in' → logprob: -6.981569766998291
    6. ' in' → logprob: -7.231569766998291
    7. '_counts' → logprob: -8.23157024383545
    8. '_ranges' → logprob: -8.73157024383545
    9. '           ' → logprob: -9.10657024383545
    10. '_co' → logprob: -9.10657024383545

Token 633: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008976875804364681
    2. ' self' → logprob: -4.883976936340332
    3. 'range' → logprob: -7.258976936340332
    4. 'current' → logprob: -8.133976936340332
    5. '[' → logprob: -9.133976936340332
    6. '   ' → logprob: -9.758976936340332
    7. ' current' → logprob: -10.133976936340332
    8. ' range' → logprob: -10.258976936340332
    9. '(self' → logprob: -10.633976936340332
    10. '
' → logprob: -11.133976936340332

Token 634: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.2821481227874756
    2. 'current' → logprob: -1.4071481227874756
    3. '_current' → logprob: -7.657148361206055
    4. '._' → logprob: -8.032148361206055
    5. '_co' → logprob: -10.282148361206055
    6. '
' → logprob: -10.657148361206055
    7. '   ' → logprob: -10.782148361206055
    8. 'coins' → logprob: -10.907148361206055
    9. '```' → logprob: -11.032148361206055
    10. ' current' → logprob: -11.282148361206055

Token 635: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -1.981667537620524e-06
    2. 'coins' → logprob: -13.625001907348633
    3. '_' → logprob: -15.250001907348633
    4. '```' → logprob: -16.000001907348633
    5. '_coin' → logprob: -16.125001907348633
    6. '\' → logprob: -16.500001907348633
    7. ' coins' → logprob: -17.125001907348633
    8. '
' → logprob: -18.000001907348633
    9. '_tokens' → logprob: -18.125001907348633
    10. '-co' → logprob: -18.125001907348633

Token 636: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0002158146962756291
    2. 'coins' → logprob: -9.250215530395508
    3. 'in' → logprob: -9.375215530395508
    4. '_' → logprob: -12.125215530395508
    5. 'ints' → logprob: -12.250215530395508
    6. 'inds' → logprob: -12.625215530395508
    7. '   ' → logprob: -12.750215530395508
    8. 'ns' → logprob: -12.875215530395508
    9. '```' → logprob: -13.000215530395508
    10. 'is' → logprob: -13.250215530395508

Token 637: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32488781213760376
    2. '       ' → logprob: -1.324887752532959
    3. '        
' → logprob: -5.199887752532959
    4. 'indices' → logprob: -6.324887752532959
    5. 'coins' → logprob: -6.824887752532959
    6. '#' → logprob: -7.324887752532959
    7. ',' → logprob: -7.824887752532959
    8. '    
' → logprob: -8.324888229370117
    9. ' (' → logprob: -8.949888229370117
    10. 'coin' → logprob: -8.949888229370117

Token 638: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01278721448034048
    2. '
' → logprob: -4.762787342071533
    3. '        
' → logprob: -6.137787342071533
    4. ',' → logprob: -7.512787342071533
    5. 'indices' → logprob: -7.637787342071533
    6. 'coins' → logprob: -9.262786865234375
    7. '```' → logprob: -9.387786865234375
    8. '#' → logprob: -9.512786865234375
    9. ':' → logprob: -9.637786865234375
    10. ' indices' → logprob: -10.012786865234375

Token 639: ' coin' (ID: 22179)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07849366962909698
    2. 'coin' (adapté à ' coin') → logprob: -3.828493595123291
    3. ' coin' → logprob: -4.078493595123291
    4. 'max' → logprob: -5.328493595123291
    5. ' max' → logprob: -5.328493595123291
    6. ' counts' → logprob: -5.578493595123291
    7. 'counts' → logprob: -5.578493595123291
    8. ' denominations' → logprob: -5.703493595123291
    9. ' coins' → logprob: -5.828493595123291
    10. 'coins' → logprob: -5.828493595123291

Token 640: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.012365076690912247
    2. 's' → logprob: -5.012364864349365
    3. '_types' → logprob: -5.887364864349365
    4. '_ranges' → logprob: -6.637364864349365
    5. '_limits' → logprob: -7.262364864349365
    6. '_max' → logprob: -8.012365341186523
    7. '_values' → logprob: -8.262365341186523
    8. '_indices' → logprob: -9.512365341186523
    9. '_options' → logprob: -10.387365341186523
    10. '_range' → logprob: -10.762365341186523

Token 641: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018156850710511208
    2. '=' → logprob: -4.018157005310059
    3. '   ' → logprob: -13.268157005310059
    4. ' ' → logprob: -13.393157005310059
    5. '    ' → logprob: -13.518157005310059
    6. ',' → logprob: -14.268157005310059
    7. '	' → logprob: -14.893157005310059
    8. '[' → logprob: -15.268157005310059
    9. 's' → logprob: -15.268157005310059
    10. ' =[' → logprob: -15.643157005310059

Token 642: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03923337161540985
    2. ' self' → logprob: -3.289233446121216
    3. 'list' → logprob: -7.414233207702637
    4. '[' → logprob: -8.539233207702637
    5. ' list' → logprob: -8.789233207702637
    6. '   ' → logprob: -9.039233207702637
    7. ' [' → logprob: -9.664233207702637
    8. '(' → logprob: -10.914233207702637
    9. '(self' → logprob: -11.289233207702637
    10. '[self' → logprob: -11.289233207702637

Token 643: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.0009314678027294576
    2. 'current' → logprob: -7.000931262969971
    3. '._' → logprob: -11.375931739807129
    4. '.' → logprob: -13.125931739807129
    5. '_current' → logprob: -13.625931739807129
    6. '
' → logprob: -13.750931739807129
    7. 'urrent' → logprob: -13.875931739807129
    8. ' .' → logprob: -14.250931739807129
    9. '	current' → logprob: -14.500931739807129
    10. ' current' → logprob: -14.875931739807129

Token 644: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -1.259079363080673e-05
    2. 'coins' → logprob: -11.375012397766113
    3. '_' → logprob: -15.250012397766113
    4. '_coin' → logprob: -15.250012397766113
    5. ' coins' → logprob: -15.500012397766113
    6. 'Coins' → logprob: -15.625012397766113
    7. '_tokens' → logprob: -16.87501335144043
    8. '-co' → logprob: -17.00001335144043
    9. 'co' → logprob: -17.62501335144043
    10. '_counts' → logprob: -17.75001335144043

Token 645: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -4.8232690460281447e-05
    2. 'coins' → logprob: -10.500048637390137
    3. '_ins' → logprob: -11.500048637390137
    4. '_co' → logprob: -13.125048637390137
    5. 'in' → logprob: -13.250048637390137
    6. 'is' → logprob: -14.125048637390137
    7. '_' → logprob: -14.250048637390137
    8. ' coins' → logprob: -14.500048637390137
    9. 'Coins' → logprob: -14.500048637390137
    10. 'ns' → logprob: -14.625048637390137

Token 646: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0148261534050107
    2. '       ' → logprob: -4.51482629776001
    3. '        
' → logprob: -5.76482629776001
    4. '    
' → logprob: -9.014825820922852
    5. '
' → logprob: -9.139825820922852
    6. '[' → logprob: -9.389825820922852
    7. ' =' → logprob: -9.889825820922852
    8. '#' → logprob: -10.014825820922852
    9. '

' → logprob: -10.264825820922852
    10. '
        
' → logprob: -10.264825820922852

Token 647: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.043799690902233124
    2. '       ' → logprob: -3.418799638748169
    3. '        
' → logprob: -4.668799877166748
    4. '    
' → logprob: -8.66879940032959
    5. '  
' → logprob: -9.04379940032959
    6. '#' → logprob: -9.54379940032959
    7. '
' → logprob: -10.04379940032959
    8. '[' → logprob: -10.04379940032959
    9. ' 
' → logprob: -10.29379940032959
    10. ',' → logprob: -10.41879940032959

Token 648: ' length' (ID: 5517)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.029859017580747604
    2. '       ' → logprob: -4.2798590660095215
    3. '        
' → logprob: -5.1548590660095215
    4. '#' → logprob: -6.4048590660095215
    5. '    
' → logprob: -6.4048590660095215
    6. '
' → logprob: -6.7798590660095215
    7. 'indices' → logprob: -7.0298590660095215
    8. '[' → logprob: -7.5298590660095215
    9. ' 
' → logprob: -7.5298590660095215
    10. ' =' → logprob: -7.7798590660095215

Token 649: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4652233421802521
    2. '6' → logprob: -1.0902233123779297
    3. ' =' → logprob: -3.5902233123779297
    4. '7' → logprob: -5.46522331237793
    5. ' ' → logprob: -6.09022331237793
    6. '==' → logprob: -6.84022331237793
    7. ':' → logprob: -7.59022331237793
    8. ' ==' → logprob: -8.96522331237793
    9. ' is' → logprob: -10.84022331237793
    10. '   ' → logprob: -11.59022331237793

Token 650: '7' (ID: 22)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.2830522060394287
    2. '=' → logprob: -1.4080522060394287
    3. ' =' → logprob: -6.908052444458008
    4. '7' → logprob: -7.283052444458008
    5. '==' → logprob: -9.158052444458008
    6. ' ' → logprob: -9.283052444458008
    7. ':' → logprob: -12.158052444458008
    8. ' ==' → logprob: -12.658052444458008
    9. '(' → logprob: -13.408052444458008
    10. '```' → logprob: -14.033052444458008

Token 651: ' but' (ID: 889)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03923016041517258
    2. '
' → logprob: -3.6642301082611084
    3. '[:-' → logprob: -5.1642303466796875
    4. ' =' → logprob: -5.6642303466796875
    5. '[:' → logprob: -6.9142303466796875
    6. '       ' → logprob: -7.2892303466796875
    7. '#' → logprob: -7.7892303466796875
    8. '   ' → logprob: -7.7892303466796875
    9. '=' → logprob: -8.039230346679688
    10. '    
' → logprob: -8.914230346679688

Token 652: ' index' (ID: 3472)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.0446152687072754
    2. 'excluding' → logprob: -1.1696152687072754
    3. '1' → logprob: -2.2946152687072754
    4. '6' → logprob: -3.0446152687072754
    5. '7' → logprob: -3.2946152687072754
    6. ' excluding' → logprob: -3.4196152687072754
    7. 'exclude' → logprob: -3.9196152687072754
    8. ' ' → logprob: -3.9196152687072754
    9. 'starting' → logprob: -4.544615268707275
    10. 'only' → logprob: -4.544615268707275

Token 653: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1338212639093399
    2. ' =' → logprob: -2.7588212490081787
    3. 's' → logprob: -3.1338212490081787
    4. '1' → logprob: -4.258821487426758
    5. ' ' → logprob: -6.008821487426758
    6. '0' → logprob: -6.633821487426758
    7. ':' → logprob: -9.258821487426758
    8. '[' → logprob: -9.383821487426758
    9. 'es' → logprob: -10.133821487426758
    10. '   ' → logprob: -10.258821487426758

Token 654: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.043616883456707
    2. '0' → logprob: -3.918616771697998
    3. '1' → logprob: -4.418616771697998
    4. ' =' → logprob: -5.043616771697998
    5. ' ' → logprob: -6.168616771697998
    6. 's' → logprob: -6.793616771697998
    7. ':' → logprob: -7.543616771697998
    8. '[' → logprob: -8.418617248535156
    9. ' is' → logprob: -9.293617248535156
    10. 'is' → logprob: -10.168617248535156

Token 655: ' is' (ID: 382)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0609319694340229
    2. '=' → logprob: -3.060931921005249
    3. ' =' → logprob: -4.560932159423828
    4. '1' → logprob: -8.060932159423828
    5. ':' → logprob: -8.060932159423828
    6. ')' → logprob: -8.185932159423828
    7. ')[' → logprob: -9.185932159423828
    8. '<|end|>' → logprob: -9.310932159423828
    9. ',' → logprob: -9.560932159423828
    10. 's' → logprob: -9.935932159423828

Token 656: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4294118881225586
    2. 'excluded' → logprob: -1.9294118881225586
    3. 'ignored' → logprob: -1.9294118881225586
    4. ' skipped' → logprob: -4.179411888122559
    5. '1' → logprob: -4.804411888122559
    6. ' ' → logprob: -5.054411888122559
    7. 'for' → logprob: -5.304411888122559
    8. 'sk' → logprob: -5.429411888122559
    9. ' excluded' → logprob: -5.554411888122559
    10. ' ignored' → logprob: -5.554411888122559

Token 657: '100' (ID: 1353)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18606075644493103
    2. 'ignored' → logprob: -2.436060667037964
    3. 'excluded' → logprob: -3.436060667037964
    4. 'None' → logprob: -3.561060667037964
    5. '1' → logprob: -4.311060905456543
    6. 'sk' → logprob: -5.936060905456543
    7. ' ' → logprob: -6.311060905456543
    8. 'not' → logprob: -6.936060905456543
    9. ' None' → logprob: -7.436060905456543
    10. 'unused' → logprob: -7.561060905456543

Token 658: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06887297332286835
    2. '<|end|>' → logprob: -3.0688729286193848
    3. ',' → logprob: -5.443872928619385
    4. '=' → logprob: -5.818872928619385
    5. '1' → logprob: -6.318872928619385
    6. ')' → logprob: -6.443872928619385
    7. '<|end|>' → logprob: -6.443872928619385
    8. ':' → logprob: -6.818872928619385
    9. ' =' → logprob: -7.068872928619385
    10. '[:-' → logprob: -7.193872928619385

Token 659: '-y' (ID: 18102)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20177924633026123
    2. ')' → logprob: -2.826779365539551
    3. '-co' → logprob: -2.826779365539551
    4. ',' → logprob: -4.451779365539551
    5. '   ' → logprob: -4.451779365539551
    6. ' -' → logprob: -5.076779365539551
    7. '0' → logprob: -5.076779365539551
    8. '_co' → logprob: -5.576779365539551
    9. ')-' → logprob: -5.951779365539551
    10. '-y' → logprob: -5.951779365539551

Token 660: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.002789899706840515
    2. 'coin' → logprob: -6.0027899742126465
    3. 'coins' → logprob: -9.252789497375488
    4. '_coin' → logprob: -9.252789497375488
    5. ' coin' → logprob: -11.127789497375488
    6. 'yen' → logprob: -11.252789497375488
    7. 'len' → logprob: -11.752789497375488
    8. '_en' → logprob: -11.877789497375488
    9. '```' → logprob: -12.127789497375488
    10. ' coins' → logprob: -12.377789497375488

Token 661: ' bill' (ID: 6713)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coin' → logprob: -1.2605656385421753
    2. ' coin' → logprob: -1.5105656385421753
    3. ')' → logprob: -2.260565757751465
    4. ' coins' → logprob: -2.260565757751465
    5. 'coins' → logprob: -2.885565757751465
    6. ',' → logprob: -3.010565757751465
    7. 's' → logprob: -3.010565757751465
    8. '_co' → logprob: -3.135565757751465
    9. '_coin' → logprob: -4.010565757751465
    10. '-co' → logprob: -4.385565757751465

Token 662: ' excluded' (ID: 52015)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009132102131843567
    2. ' =' → logprob: -5.384131908416748
    3. '=' → logprob: -5.759131908416748
    4. '[:-' → logprob: -7.384131908416748
    5. '[:' → logprob: -8.134132385253906
    6. '
' → logprob: -8.259132385253906
    7. '1' → logprob: -10.384132385253906
    8. '   ' → logprob: -10.509132385253906
    9. '       ' → logprob: -10.884132385253906
    10. '#' → logprob: -10.884132385253906

Token 663: ' here' (ID: 2105)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07774417847394943
    2. ' =' → logprob: -2.702744245529175
    3. '=' → logprob: -5.452744007110596
    4. '
' → logprob: -6.702744007110596
    5. '   ' → logprob: -7.327744007110596
    6. '[:-' → logprob: -7.702744007110596
    7. '[:' → logprob: -8.077744483947754
    8. ',' → logprob: -9.202744483947754
    9. '       ' → logprob: -9.452744483947754
    10. ' ' → logprob: -9.452744483947754

Token 664: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17685051262378693
    2. ' =' → logprob: -2.0518505573272705
    3. '
' → logprob: -4.301850318908691
    4. '       ' → logprob: -4.426850318908691
    5. '=' → logprob: -5.676850318908691
    6. '[:-' → logprob: -6.551850318908691
    7. '   ' → logprob: -6.926850318908691
    8. '[:' → logprob: -7.301850318908691
    9. '        
' → logprob: -8.301850318908691
    10. '#' → logprob: -8.426850318908691

Token 665: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4553167223930359
    2. '       ' → logprob: -1.0803167819976807
    3. '[' → logprob: -4.205316543579102
    4. '=' → logprob: -5.330316543579102
    5. '
' → logprob: -6.080316543579102
    6. '        
' → logprob: -6.330316543579102
    7. '   ' → logprob: -7.830316543579102
    8. ',' → logprob: -8.205316543579102
    9. '```' → logprob: -8.830316543579102
    10. ' (' → logprob: -8.955316543579102

Token 666: ' #' (ID: 1069)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.022206014022231102
    2. '=' → logprob: -4.522205829620361
    3. '[' → logprob: -5.272205829620361
    4. '       ' → logprob: -5.772205829620361
    5. '   ' → logprob: -7.897205829620361
    6. 's' → logprob: -8.14720630645752
    7. ' ' → logprob: -8.14720630645752
    8. ')' → logprob: -8.27220630645752
    9. '
' → logprob: -8.64720630645752
    10. ',' → logprob: -8.77220630645752

Token 667: ' Actually' (ID: 50557)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20963668823242188
    2. '=' → logprob: -1.8346366882324219
    3. '[' → logprob: -3.959636688232422
    4. '       ' → logprob: -5.584636688232422
    5. '   ' → logprob: -6.834636688232422
    6. '(' → logprob: -6.959636688232422
    7. '0' → logprob: -6.959636688232422
    8. '_' → logprob: -7.584636688232422
    9. ' ' → logprob: -7.834636688232422
    10. ')' → logprob: -7.959636688232422

Token 668: ' self' (ID: 1051)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.3095708191394806
    2. ' coin' → logprob: -1.4345707893371582
    3. '       ' → logprob: -4.059570789337158
    4. 'len' → logprob: -5.184570789337158
    5. ' =' → logprob: -6.309570789337158
    6. ' len' → logprob: -7.059570789337158
    7. 'self' → logprob: -7.684570789337158
    8. ' self' → logprob: -7.809570789337158
    9. '=' → logprob: -7.934570789337158
    10. '[' → logprob: -8.434571266174316

Token 669: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.052978940308094025
    2. '._' → logprob: -4.052978992462158
    3. 'current' → logprob: -4.052978992462158
    4. '.coin' → logprob: -5.052978992462158
    5. '_co' → logprob: -5.552978992462158
    6. '_coin' → logprob: -6.427978992462158
    7. '.' → logprob: -6.677978992462158
    8. 'coin' → logprob: -6.927978992462158
    9. '_current' → logprob: -6.927978992462158
    10. ' =' → logprob: -7.552978992462158

Token 670: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.00013965457037556916
    2. '_counts' → logprob: -9.875139236450195
    3. 'coins' → logprob: -10.000139236450195
    4. '_coin' → logprob: -10.500139236450195
    5. 'Coins' → logprob: -12.250139236450195
    6. '-co' → logprob: -13.500139236450195
    7. '_' → logprob: -13.625139236450195
    8. 'co' → logprob: -13.625139236450195
    9. ' coins' → logprob: -13.750139236450195
    10. 'coin' → logprob: -14.000139236450195

Token 671: 'ins' (ID: 1564)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.2909236252307892
    2. 'ins' → logprob: -1.4159235954284668
    3. '_' → logprob: -5.415923595428467
    4. 'coins' → logprob: -5.665923595428467
    5. '_ins' → logprob: -6.915923595428467
    6. 'in' → logprob: -7.915923595428467
    7. 'o' → logprob: -8.790924072265625
    8. '_counts' → logprob: -9.290924072265625
    9. 'co' → logprob: -10.665924072265625
    10. 'oin' → logprob: -10.915924072265625

Token 672: ' length' (ID: 5517)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22994858026504517
    2. '[' → logprob: -2.4799485206604004
    3. '=' → logprob: -2.7299485206604004
    4. '<|end|>' → logprob: -3.1049485206604004
    5. '[:-' → logprob: -5.6049485206604
    6. '<|end|>' → logprob: -6.1049485206604
    7. ')' → logprob: -6.2299485206604
    8. ' is' → logprob: -6.8549485206604
    9. ',' → logprob: -6.9799485206604
    10. ':' → logprob: -7.1049485206604

Token 673: ' is' (ID: 382)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7671024203300476
    2. ' is' → logprob: -1.6421024799346924
    3. '==' → logprob: -2.1421024799346924
    4. ' =' → logprob: -2.5171024799346924
    5. '=' → logprob: -2.6421024799346924
    6. '7' → logprob: -3.6421024799346924
    7. ' -' → logprob: -4.017102241516113
    8. '6' → logprob: -4.767102241516113
    9. '-' → logprob: -5.267102241516113
    10. ' ' → logprob: -5.392102241516113

Token 674: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.017739316448569298
    2. '7' → logprob: -4.267739295959473
    3. 'len' → logprob: -5.642739295959473
    4. ' ' → logprob: -11.142739295959473
    5. ' len' → logprob: -11.767739295959473
    6. '```' → logprob: -14.142739295959473
    7. '(len' → logprob: -14.392739295959473
    8. '5' → logprob: -14.705239295959473
    9. '
' → logprob: -14.767739295959473
    10. '   ' → logprob: -15.017739295959473

Token 675: '7' (ID: 22)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.05203568935394287
    2. '7' → logprob: -3.0520358085632324
    3. 'len' → logprob: -5.677035808563232
    4. ' len' → logprob: -11.552035331726074
    5. ' ' → logprob: -12.052035331726074
    6. '```' → logprob: -13.677035331726074
    7. '(len' → logprob: -14.427035331726074
    8. '
' → logprob: -14.739535331726074
    9. '=len' → logprob: -15.239535331726074
    10. '

' → logprob: -16.23953628540039

Token 676: ' but' (ID: 889)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12212904542684555
    2. '[' → logprob: -2.247128963470459
    3. '=' → logprob: -5.497128963470459
    4. '[:-' → logprob: -5.997128963470459
    5. '<|end|>' → logprob: -7.622128963470459
    6. ',' → logprob: -8.122129440307617
    7. ':' → logprob: -8.497129440307617
    8. '[:' → logprob: -8.497129440307617
    9. '
' → logprob: -8.622129440307617
    10. ' ' → logprob: -8.747129440307617

Token 677: ' we' (ID: 581)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.4038962423801422
    2. ' coin' → logprob: -1.6538962125778198
    3. 'self' → logprob: -2.4038963317871094
    4. ' self' → logprob: -3.5288963317871094
    5. '       ' → logprob: -5.403896331787109
    6. '1' → logprob: -5.653896331787109
    7. '#' → logprob: -5.778896331787109
    8. 'len' → logprob: -6.153896331787109
    9. '...' → logprob: -6.653896331787109
    10. ' =' → logprob: -6.653896331787109

Token 678: ' exclude' (ID: 39566)
  Prédit: 'exclude'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exclude' → logprob: -0.338268518447876
    2. ' exclude' → logprob: -2.588268518447876
    3. 'skip' → logprob: -3.213268518447876
    4. ' want' → logprob: -3.838268518447876
    5. 'ignore' → logprob: -3.838268518447876
    6. ' only' → logprob: -4.088268280029297
    7. ' =' → logprob: -4.213268280029297
    8. 'only' → logprob: -4.463268280029297
    9. ' need' → logprob: -4.713268280029297
    10. '=' → logprob: -4.838268280029297

Token 679: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22774195671081543
    2. '1' → logprob: -1.9777419567108154
    3. '[' → logprob: -3.6027419567108154
    4. ' ' → logprob: -4.1027421951293945
    5. 'the' → logprob: -4.8527421951293945
    6. 'coin' → logprob: -4.9777421951293945
    7. ' the' → logprob: -6.2277421951293945
    8. 'self' → logprob: -6.3527421951293945
    9. 'Coin' → logprob: -7.3527421951293945
    10. '(' → logprob: -7.4777421951293945

Token 680: '100' (ID: 1353)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09912637621164322
    2. '1' → logprob: -2.5991263389587402
    3. 'self' → logprob: -4.47412633895874
    4. 'coin' → logprob: -5.47412633895874
    5. '(' → logprob: -5.59912633895874
    6. '[' → logprob: -8.349126815795898
    7. 'Coin' → logprob: -8.349126815795898
    8. ' ' → logprob: -9.599126815795898
    9. '-' → logprob: -10.849126815795898
    10. '#' → logprob: -10.974126815795898

Token 681: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02876261994242668
    2. '-' → logprob: -3.6537625789642334
    3. '[' → logprob: -7.6537628173828125
    4. '1' → logprob: -8.028762817382812
    5. '[-' → logprob: -8.028762817382812
    6. ')' → logprob: -8.528762817382812
    7. ' -' → logprob: -8.528762817382812
    8. '   ' → logprob: -8.778762817382812
    9. '[:-' → logprob: -8.778762817382812
    10. ',' → logprob: -9.028762817382812

Token 682: ' bills' (ID: 26846)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3383229076862335
    2. '_' → logprob: -2.088322877883911
    3. '_co' → logprob: -2.963322877883911
    4. '-co' → logprob: -3.213322877883911
    5. ')' → logprob: -4.21332311630249
    6. '[-' → logprob: -4.46332311630249
    7. '_-' → logprob: -4.96332311630249
    8. '-y' → logprob: -5.21332311630249
    9. '_y' → logprob: -5.46332311630249
    10. '_tokens' → logprob: -5.58832311630249

Token 683: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4392207860946655
    2. '[' → logprob: -1.0642207860946655
    3. '=' → logprob: -5.314220905303955
    4. '[:-' → logprob: -5.564220905303955
    5. '[:' → logprob: -7.314220905303955
    6. ':' → logprob: -8.689220428466797
    7. '   ' → logprob: -8.689220428466797
    8. ',' → logprob: -8.939220428466797
    9. '       ' → logprob: -9.689220428466797
    10. '
' → logprob: -9.689220428466797

Token 684: ' initial' (ID: 4871)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.965833306312561
    2. '[' → logprob: -2.4658331871032715
    3. ':' → logprob: -2.5908331871032715
    4. '       ' → logprob: -2.7158331871032715
    5. '0' → logprob: -2.8408331871032715
    6. ' coin' → logprob: -3.0908331871032715
    7. 'coin' → logprob: -3.2158331871032715
    8. ' ' → logprob: -3.5908331871032715
    9. ' so' → logprob: -3.7158331871032715
    10. 'self' → logprob: -3.7158331871032715

Token 685: ' state' (ID: 2608)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2655601501464844
    2. '=' → logprob: -1.7655601501464844
    3. 'coin' → logprob: -4.015560150146484
    4. 'coins' → logprob: -4.890560150146484
    5. '_coin' → logprob: -5.015560150146484
    6. '_co' → logprob: -5.140560150146484
    7. '_counts' → logprob: -5.265560150146484
    8. 'counts' → logprob: -5.265560150146484
    9. '   ' → logprob: -6.015560150146484
    10. '       ' → logprob: -6.515560150146484

Token 686: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20862284302711487
    2. '=' → logprob: -1.9586228132247925
    3. '[' → logprob: -3.083622932434082
    4. '[:-' → logprob: -7.833622932434082
    5. ':' → logprob: -8.083622932434082
    6. ',' → logprob: -8.458622932434082
    7. '   ' → logprob: -9.083622932434082
    8. '=[' → logprob: -9.458622932434082
    9. '[:' → logprob: -9.708622932434082
    10. ' is' → logprob: -10.333622932434082

Token 687: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.019723348319530487
    2. ' =' → logprob: -4.519723415374756
    3. '[' → logprob: -4.769723415374756
    4. '[:-' → logprob: -9.394722938537598
    5. '[:' → logprob: -10.894722938537598
    6. '=[' → logprob: -11.019722938537598
    7. '   ' → logprob: -12.144722938537598
    8. '=self' → logprob: -12.144722938537598
    9. ':' → logprob: -12.394722938537598
    10. '=
' → logprob: -12.519722938537598

Token 688: ' for' (ID: 395)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05175567418336868
    2. ' =' → logprob: -3.801755666732788
    3. ',' → logprob: -4.676755905151367
    4. '<|end|>' → logprob: -5.301755905151367
    5. '[:-' → logprob: -5.551755905151367
    6. '
' → logprob: -6.176755905151367
    7. '[:' → logprob: -6.176755905151367
    8. '=' → logprob: -6.926755905151367
    9. '   ' → logprob: -7.051755905151367
    10. '<|end|>' → logprob: -7.176755905151367

Token 689: ' all' (ID: 722)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15461520850658417
    2. '0' → logprob: -3.0296151638031006
    3. 'self' → logprob: -3.6546151638031006
    4. 'the' → logprob: -4.52961540222168
    5. 'coins' → logprob: -4.52961540222168
    6. 'coin' → logprob: -4.65461540222168
    7. '[' → logprob: -4.90461540222168
    8. 'all' → logprob: -4.90461540222168
    9. 'index' → logprob: -5.15461540222168
    10. '6' → logprob: -5.27961540222168

Token 690: ' coins' (ID: 28969)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26654142141342163
    2. '[' → logprob: -1.5165414810180664
    3. '=' → logprob: -4.641541481018066
    4. '[:-' → logprob: -6.141541481018066
    5. '[:' → logprob: -6.891541481018066
    6. '   ' → logprob: -7.891541481018066
    7. '=[' → logprob: -8.516541481018066
    8. '_counts' → logprob: -9.141541481018066
    9. '_co' → logprob: -9.141541481018066
    10. '
' → logprob: -9.266541481018066

Token 691: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17051789164543152
    2. '[' → logprob: -2.045517921447754
    3. '       ' → logprob: -4.045517921447754
    4. '=' → logprob: -5.045517921447754
    5. '[:' → logprob: -6.920517921447754
    6. '[:-' → logprob: -7.045517921447754
    7. '   ' → logprob: -7.420517921447754
    8. '
' → logprob: -8.420517921447754
    9. '=[' → logprob: -8.795517921447754
    10. ',' → logprob: -8.920517921447754

Token 692: 'index' (ID: 2257)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11077908426523209
    2. ':' → logprob: -2.485779047012329
    3. ' ' → logprob: -5.360779285430908
    4. ' :' → logprob: -5.860779285430908
    5. '       ' → logprob: -5.985779285430908
    6. '[' → logprob: -6.110779285430908
    7. '   ' → logprob: -6.860779285430908
    8. ',' → logprob: -6.860779285430908
    9. ')' → logprob: -6.985779285430908
    10. '
' → logprob: -7.110779285430908

Token 693: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6396564841270447
    2. '=' → logprob: -1.1396565437316895
    3. '1' → logprob: -2.6396565437316895
    4. ' ' → logprob: -3.3896565437316895
    5. '[' → logprob: -3.7646565437316895
    6. 's' → logprob: -4.2646565437316895
    7. '0' → logprob: -5.3896565437316895
    8. ':' → logprob: -6.0146565437316895
    9. '   ' → logprob: -6.8896565437316895
    10. '
' → logprob: -7.7646565437316895

Token 694: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.035279400646686554
    2. '=' → logprob: -3.6602795124053955
    3. ':' → logprob: -5.535279273986816
    4. '0' → logprob: -5.660279273986816
    5. ' =' → logprob: -7.285279273986816
    6. ' ' → logprob: -7.535279273986816
    7. '
' → logprob: -8.910279273986816
    8. '[' → logprob: -9.910279273986816
    9. ' :' → logprob: -10.035279273986816
    10. 's' → logprob: -11.535279273986816

Token 695: '..' (ID: 485)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5788198709487915
    2. ')' → logprob: -1.7038198709487915
    3. ':)' → logprob: -2.328819751739502
    4. ':]' → logprob: -3.078819751739502
    5. '1' → logprob: -3.328819751739502
    6. '+' → logprob: -3.703819751739502
    7. ',' → logprob: -3.953819751739502
    8. ',)' → logprob: -4.453819751739502
    9. '[' → logprob: -4.578819751739502
    10. '=' → logprob: -5.828819751739502

Token 696: '6' (ID: 21)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06672515720129013
    2. ')' → logprob: -3.566725254058838
    3. '1' → logprob: -4.066725254058838
    4. ':)' → logprob: -4.066725254058838
    5. '):' → logprob: -6.941725254058838
    6. '7' → logprob: -8.31672477722168
    7. ':]' → logprob: -8.44172477722168
    8. '...' → logprob: -8.94172477722168
    9. '6' → logprob: -9.06672477722168
    10. ').' → logprob: -9.44172477722168

Token 697: ')
' (ID: 446)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19793805480003357
    2. ')' → logprob: -2.1979379653930664
    3. ')[' → logprob: -3.4479379653930664
    4. ':' → logprob: -3.9479379653930664
    5. ',' → logprob: -5.322937965393066
    6. '1' → logprob: -5.947937965393066
    7. ' =' → logprob: -6.322937965393066
    8. ').' → logprob: -6.822937965393066
    9. ']' → logprob: -7.197937965393066
    10. '
' → logprob: -7.197937965393066

Token 698: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25571408867836
    2. ' =' → logprob: -1.7557140588760376
    3. '[' → logprob: -3.005714178085327
    4. '=' → logprob: -6.630713939666748
    5. '        
' → logprob: -7.755713939666748
    6. ',' → logprob: -8.505714416503906
    7. '[:' → logprob: -8.880714416503906
    8. '[:-' → logprob: -8.880714416503906
    9. ' excluding' → logprob: -9.255714416503906
    10. 'excluded' → logprob: -9.505714416503906

Token 699: ' #' (ID: 1069)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03363451361656189
    2. '=' → logprob: -3.7836344242095947
    3. '[' → logprob: -5.033634662628174
    4. '       ' → logprob: -5.908634662628174
    5. '   ' → logprob: -8.783634185791016
    6. '=[' → logprob: -9.033634185791016
    7. '[:-' → logprob: -9.158634185791016
    8. ')' → logprob: -9.533634185791016
    9. '(' → logprob: -9.658634185791016
    10. '7' → logprob: -9.783634185791016

Token 700: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5105639100074768
    2. 'coins' → logprob: -2.135563850402832
    3. 'coin' → logprob: -2.385563850402832
    4. ' coins' → logprob: -2.510563850402832
    5. ' coin' → logprob: -3.260563850402832
    6. 'max' → logprob: -4.260563850402832
    7. 'counts' → logprob: -4.260563850402832
    8. ' counts' → logprob: -5.510563850402832
    9. ' max' → logprob: -5.510563850402832
    10. '#' → logprob: -5.760563850402832

Token 701: ' build' (ID: 3024)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2143804132938385
    2. '=' → logprob: -1.8393803834915161
    3. 'len' → logprob: -4.714380264282227
    4. '   ' → logprob: -5.589380264282227
    5. 'current' → logprob: -5.714380264282227
    6. ' are' → logprob: -5.964380264282227
    7. ' coin' → logprob: -6.464380264282227
    8. ' have' → logprob: -6.839380264282227
    9. 'coin' → logprob: -6.839380264282227
    10. ' current' → logprob: -6.839380264282227

Token 702: ' using' (ID: 2360)
  Prédit: 'ranges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ranges' → logprob: -0.16502554714679718
    2. ' ranges' → logprob: -2.165025472640991
    3. 'coin' → logprob: -4.41502571105957
    4. '[' → logprob: -5.04002571105957
    5. 'counts' → logprob: -5.41502571105957
    6. '[
' → logprob: -5.79002571105957
    7. ' coin' → logprob: -6.04002571105957
    8. '_ranges' → logprob: -6.41502571105957
    9. 'range' → logprob: -6.66502571105957
    10. '   ' → logprob: -6.91502571105957

Token 703: ' indices' (ID: 30378)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5122104287147522
    2. 'range' → logprob: -1.6372103691101074
    3. '[
' → logprob: -2.5122103691101074
    4. ' [' → logprob: -3.3872103691101074
    5. 'self' → logprob: -3.8872103691101074
    6. ' range' → logprob: -3.8872103691101074
    7. 'coin' → logprob: -4.012210369110107
    8. '(' → logprob: -4.887210369110107
    9. ' coin' → logprob: -5.012210369110107
    10. ' self' → logprob: -5.637210369110107

Token 704: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.022675886750221252
    2. '[' → logprob: -4.27267599105835
    3. '=' → logprob: -6.39767599105835
    4. '0' → logprob: -6.77267599105835
    5. ' ' → logprob: -7.14767599105835
    6. '   ' → logprob: -7.27267599105835
    7. ',' → logprob: -7.64767599105835
    8. '[:-' → logprob: -7.64767599105835
    9. '(' → logprob: -8.022675514221191
    10. '_' → logprob: -8.397675514221191

Token 705: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.210140660405159
    2. ' =' → logprob: -2.0851407051086426
    3. '=' → logprob: -3.4601407051086426
    4. '(' → logprob: -4.585140705108643
    5. ' ' → logprob: -4.710140705108643
    6. '0' → logprob: -5.210140705108643
    7. 'range' → logprob: -5.335140705108643
    8. '[' → logprob: -7.085140705108643
    9. 'coin' → logprob: -7.585140705108643
    10. 'for' → logprob: -7.835140705108643

Token 706: '..' (ID: 485)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8606440424919128
    2. '=' → logprob: -0.9856440424919128
    3. ':' → logprob: -1.7356441020965576
    4. '...' → logprob: -5.1106438636779785
    5. ',' → logprob: -5.4856438636779785
    6. '   ' → logprob: -5.9856438636779785
    7. '6' → logprob: -6.2356438636779785
    8. '.' → logprob: -6.3606438636779785
    9. '..' → logprob: -6.7356438636779785
    10. '<|end|>' → logprob: -6.7356438636779785

Token 707: '6' (ID: 21)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.019784945994615555
    2. '6' → logprob: -4.019784927368164
    3. '1' → logprob: -7.144784927368164
    4. 'len' → logprob: -8.144784927368164
    5. ')' → logprob: -8.644784927368164
    6. ' ' → logprob: -8.894784927368164
    7. '```' → logprob: -9.644784927368164
    8. ':' → logprob: -10.019784927368164
    9. ']' → logprob: -10.269784927368164
    10. '0' → logprob: -10.269784927368164

Token 708: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.056718360632658005
    2. '       ' → logprob: -3.931718349456787
    3. '=' → logprob: -4.681718349456787
    4. '
' → logprob: -5.056718349456787
    5. '[' → logprob: -5.306718349456787
    6. '   ' → logprob: -5.806718349456787
    7. '_ranges' → logprob: -6.306718349456787
    8. 'counts' → logprob: -6.681718349456787
    9. 'ranges' → logprob: -6.681718349456787
    10. 'indices' → logprob: -6.931718349456787

Token 709: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12308508902788162
    2. '
' → logprob: -2.4980850219726562
    3. '[' → logprob: -4.123085021972656
    4. '        
' → logprob: -5.248085021972656
    5. ' =' → logprob: -5.748085021972656
    6. ',' → logprob: -5.998085021972656
    7. '<|end|>' → logprob: -6.998085021972656
    8. '(' → logprob: -7.748085021972656
    9. ':' → logprob: -7.873085021972656
    10. '=' → logprob: -7.998085021972656

Token 710: ' coin' (ID: 22179)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09459171444177628
    2. '[' → logprob: -3.0945916175842285
    3. '       ' → logprob: -4.2195916175842285
    4. '
' → logprob: -4.3445916175842285
    5. '=' → logprob: -4.9695916175842285
    6. '        
' → logprob: -6.2195916175842285
    7. '   ' → logprob: -6.7195916175842285
    8. ':' → logprob: -6.8445916175842285
    9. '[:' → logprob: -7.4695916175842285
    10. 'indices' → logprob: -7.5945916175842285

Token 711: '_types' (ID: 21515)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.19725020229816437
    2. '_limits' → logprob: -2.5722501277923584
    3. '_ranges' → logprob: -2.8222501277923584
    4. '_max' → logprob: -3.5722501277923584
    5. '_options' → logprob: -5.4472503662109375
    6. '_range' → logprob: -5.9472503662109375
    7. '_types' → logprob: -6.4472503662109375
    8. '_values' → logprob: -6.6972503662109375
    9. '_available' → logprob: -6.6972503662109375
    10. '_indices' → logprob: -7.3222503662109375

Token 712: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01641332544386387
    2. '=' → logprob: -4.14141321182251
    3. '_counts' → logprob: -8.266413688659668
    4. '_count' → logprob: -10.641413688659668
    5. '   ' → logprob: -11.391413688659668
    6. 's' → logprob: -11.391413688659668
    7. 'counts' → logprob: -11.391413688659668
    8. '_indices' → logprob: -11.516413688659668
    9. ' ' → logprob: -11.641413688659668
    10. 'count' → logprob: -11.891413688659668

Token 713: ' Coin' (ID: 35089)
  Prédit: 'Coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' → logprob: -0.8325788974761963
    2. '[' → logprob: -1.8325788974761963
    3. '6' → logprob: -1.9575788974761963
    4. 'len' → logprob: -2.0825788974761963
    5. 'range' → logprob: -2.0825788974761963
    6. 'list' → logprob: -4.582578659057617
    7. '[len' → logprob: -6.832578659057617
    8. ' Coin' → logprob: -7.582578659057617
    9. '[C' → logprob: -7.582578659057617
    10. '[(' → logprob: -8.082578659057617

Token 714: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -3.643152740551159e-05
    2. 'Den' → logprob: -10.250036239624023
    3. '_set' → logprob: -14.375036239624023
    4. 'set' → logprob: -15.000036239624023
    5. 'Sets' → logprob: -16.625036239624023
    6. '_Set' → logprob: -16.875036239624023
    7. ' set' → logprob: -17.125036239624023
    8. ' Set' → logprob: -18.000036239624023
    9. '	Set' → logprob: -18.000036239624023
    10. '   ' → logprob: -19.250036239624023

Token 715: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00012403888104017824
    2. '   ' → logprob: -10.125123977661133
    3. '_den' → logprob: -10.250123977661133
    4. '.' → logprob: -11.125123977661133
    5. ' ' → logprob: -12.125123977661133
    6. 'Den' → logprob: -12.250123977661133
    7. ')._' → logprob: -12.375123977661133
    8. ' .' → logprob: -12.500123977661133
    9. ']._' → logprob: -13.375123977661133
    10. '

' → logprob: -13.500123977661133

Token 716: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -1.0280383548888494e-06
    2. '_den' → logprob: -14.375000953674316
    3. ' denominations' → logprob: -15.500000953674316
    4. 'enumer' → logprob: -17.375001907348633
    5. '   ' → logprob: -17.625001907348633
    6. 'coins' → logprob: -18.500001907348633
    7. '-den' → logprob: -18.500001907348633
    8. '```' → logprob: -18.875001907348633
    9. 'd' → logprob: -19.500001907348633
    10. 'coin' → logprob: -19.750001907348633

Token 717: 'ominations' (ID: 169517)
  Prédit: 'ominations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ominations' → logprob: -1.7432603272027336e-06
    2. 'om' → logprob: -14.250001907348633
    3. 'omination' → logprob: -14.875001907348633
    4. 'omin' → logprob: -15.250001907348633
    5. 'omi' → logprob: -15.875001907348633
    6. '_' → logprob: -15.875001907348633
    7. 'ominated' → logprob: -17.125001907348633
    8. 'nom' → logprob: -17.500001907348633
    9. '```' → logprob: -17.500001907348633
    10. '   ' → logprob: -17.875001907348633

Token 718: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001875671005109325
    2. '
' → logprob: -9.500187873840332
    3. '   ' → logprob: -11.000187873840332
    4. '1' → logprob: -11.125187873840332
    5. '[:' → logprob: -11.250187873840332
    6. ')[' → logprob: -11.500187873840332
    7. '```' → logprob: -11.500187873840332
    8. '[
' → logprob: -11.625187873840332
    9. ')' → logprob: -12.250187873840332
    10. '=' → logprob: -12.375187873840332

Token 719: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.12500286102295
    3. '   ' → logprob: -14.87500286102295
    4. '
' → logprob: -15.12500286102295
    5. ':' → logprob: -16.875001907348633
    6. '    ' → logprob: -18.437501907348633
    7. '۱' → logprob: -18.625001907348633
    8. '```' → logprob: -18.625001907348633
    9. '  ' → logprob: -18.875001907348633
    10. ']' → logprob: -19.125001907348633

Token 720: ':]' (ID: 67377)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20144042372703552
    2. ':]' → logprob: -1.701440453529358
    3. ' :' → logprob: -11.451440811157227
    4. ' :]' → logprob: -12.076440811157227
    5. ':]
' → logprob: -12.701440811157227
    6. '6' → logprob: -12.826440811157227
    7. ':].' → logprob: -13.076440811157227
    8. ']' → logprob: -13.826440811157227
    9. '1' → logprob: -14.451440811157227
    10. ':]

' → logprob: -15.076440811157227

Token 721: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47320622205734253
    2. '       ' → logprob: -1.0982062816619873
    3. '<|end|>' → logprob: -3.7232062816619873
    4. '        
' → logprob: -4.098206043243408
    5. '  
' → logprob: -7.973206043243408
    6. ',' → logprob: -7.973206043243408
    7. '[' → logprob: -8.098206520080566
    8. '<|end|>' → logprob: -8.348206520080566
    9. ':' → logprob: -8.473206520080566
    10. '    
' → logprob: -8.598206520080566

Token 722: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5216565728187561
    2. '
' → logprob: -1.0216565132141113
    3. 'counts' → logprob: -3.6466565132141113
    4. '        
' → logprob: -4.896656513214111
    5. 'max' → logprob: -5.521656513214111
    6. ' counts' → logprob: -6.146656513214111
    7. 'count' → logprob: -6.771656513214111
    8. ',' → logprob: -7.146656513214111
    9. 'indices' → logprob: -7.271656513214111
    10. 'sizes' → logprob: -7.521656513214111

Token 723: ' skip' (ID: 16677)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 724: ' ' (ID: 220)
  Prédit: 'Coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' → logprob: -0.1801273077726364
    2. '100' → logprob: -2.3051273822784424
    3. '0' → logprob: -3.6801273822784424
    4. '[' → logprob: -4.305127143859863
    5. '1' → logprob: -4.555127143859863
    6. ' Coin' → logprob: -5.055127143859863
    7. '   ' → logprob: -5.555127143859863
    8. ' ' → logprob: -5.555127143859863
    9. 'the' → logprob: -7.680127143859863
    10. 'coin' → logprob: -8.430127143859863

Token 725: '100' (ID: 1353)
  Prédit: 'Coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Coin' → logprob: -0.0011658186558634043
    2. '0' → logprob: -6.876165866851807
    3. ' Coin' → logprob: -9.126165390014648
    4. '1' → logprob: -12.126165390014648
    5. '_coin' → logprob: -12.376165390014648
    6. '_C' → logprob: -12.751165390014648
    7. 'coin' → logprob: -13.001165390014648
    8. 'Coins' → logprob: -13.126165390014648
    9. '[' → logprob: -13.501165390014648
    10. '   ' → logprob: -13.626165390014648

Token 726: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. '   ' → logprob: -13.500008583068848
    3. '000' → logprob: -13.875008583068848
    4. '-' → logprob: -13.875008583068848
    5. '[' → logprob: -14.000008583068848
    6. '...' → logprob: -14.000008583068848
    7. ']' → logprob: -14.250008583068848
    8. '<|end|>' → logprob: -14.250008583068848
    9. '       ' → logprob: -14.375008583068848
    10. ':' → logprob: -15.500008583068848

Token 727: '-y' (ID: 18102)
  Prédit: '-y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-y' → logprob: -0.009529872797429562
    2. '-' → logprob: -4.884530067443848
    3. '   ' → logprob: -7.759530067443848
    4. ')' → logprob: -8.009530067443848
    5. '[-' → logprob: -8.259530067443848
    6. '-yard' → logprob: -8.884530067443848
    7. ' -' → logprob: -9.509530067443848
    8. ',' → logprob: -9.634530067443848
    9. '-value' → logprob: -9.634530067443848
    10. ']' → logprob: -9.634530067443848

Token 728: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.00012642296496778727
    2. 'coin' → logprob: -9.875126838684082
    3. '```' → logprob: -11.250126838684082
    4. 'yen' → logprob: -12.312626838684082
    5. 'enumer' → logprob: -12.375126838684082
    6. '   ' → logprob: -12.625126838684082
    7. 'coins' → logprob: -12.750126838684082
    8. 'ен' → logprob: -12.750126838684082
    9. '
' → logprob: -12.812626838684082
    10. '-en' → logprob: -13.125126838684082

Token 729: ' bill' (ID: 6713)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.5591738820075989
    2. 'bill' → logprob: -1.434173822402954
    3. ')' → logprob: -3.059173822402954
    4. ',' → logprob: -3.184173822402954
    5. '_bill' → logprob: -3.434173822402954
    6. ']' → logprob: -3.684173822402954
    7. '_coin' → logprob: -4.184174060821533
    8. '])' → logprob: -4.934174060821533
    9. ' coin' → logprob: -5.059174060821533
    10. 'den' → logprob: -5.934174060821533

Token 730: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04793352633714676
    2. '       ' → logprob: -3.547933578491211
    3. '        
' → logprob: -5.047933578491211
    4. '<|end|>' → logprob: -5.297933578491211
    5. 'counts' → logprob: -5.922933578491211
    6. 'indices' → logprob: -7.547933578491211
    7. '```' → logprob: -7.672933578491211
    8. ' counts' → logprob: -8.047933578491211
    9. ',' → logprob: -8.047933578491211
    10. 'count' → logprob: -8.172933578491211

Token 731: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04698575660586357
    2. 'counts' → logprob: -3.7969858646392822
    3. 'max' → logprob: -4.171985626220703
    4. 'ranges' → logprob: -6.046985626220703
    5. 'count' → logprob: -6.796985626220703
    6. ' counts' → logprob: -7.046985626220703
    7. '```' → logprob: -7.546985626220703
    8. 'coin' → logprob: -7.546985626220703
    9. '        
' → logprob: -8.046985626220703
    10. 'possible' → logprob: -8.171985626220703

Token 732: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.162906676530838
    2. 'ranges' → logprob: -2.5379066467285156
    3. 'max' → logprob: -3.1629066467285156
    4. '
' → logprob: -4.537906646728516
    5. ' ranges' → logprob: -5.412906646728516
    6. 'coin' → logprob: -5.787906646728516
    7. '_ranges' → logprob: -6.287906646728516
    8. 'counts' → logprob: -6.287906646728516
    9. 'range' → logprob: -6.787906646728516
    10. '        
' → logprob: -6.787906646728516

Token 733: ' For' (ID: 2214)
  Prédit: 'ranges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ranges' → logprob: -0.461090087890625
    2. ' ranges' → logprob: -1.711090087890625
    3. '       ' → logprob: -2.461090087890625
    4. 'max' → logprob: -2.711090087890625
    5. 'coin' → logprob: -4.586090087890625
    6. '   ' → logprob: -5.336090087890625
    7. 'counts' → logprob: -5.711090087890625
    8. 'range' → logprob: -5.961090087890625
    9. ' max' → logprob: -5.961090087890625
    10. '#' → logprob: -5.961090087890625

Token 734: ' performance' (ID: 6198)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.1730371713638306
    2. 'i' → logprob: -1.2980371713638306
    3. 'counts' → logprob: -2.673037052154541
    4. ' counts' → logprob: -2.923037052154541
    5. 'count' → logprob: -3.048037052154541
    6. ' coin' → logprob: -3.048037052154541
    7. 'c' → logprob: -3.173037052154541
    8. ' c' → logprob: -3.173037052154541
    9. 'coin' → logprob: -3.423037052154541
    10. ' count' → logprob: -3.548037052154541

Token 735: ',' (ID: 11)
  Prédit: 'ranges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ranges' → logprob: -1.5369794368743896
    2. '   ' → logprob: -1.6619794368743896
    3. ',' → logprob: -1.7869794368743896
    4. 'max' → logprob: -1.9119794368743896
    5. 'limits' → logprob: -1.9119794368743896
    6. 'coin' → logprob: -3.2869794368743896
    7. '_ranges' → logprob: -4.036979675292969
    8. '
' → logprob: -4.286979675292969
    9. 'counts' → logprob: -4.411979675292969
    10. ' limits' → logprob: -4.411979675292969

Token 736: ' let's' (ID: 35717)
  Prédit: 'ranges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ranges' → logprob: -0.6709784269332886
    2. 'max' → logprob: -1.9209784269332886
    3. 'coin' → logprob: -1.9209784269332886
    4. ' ranges' → logprob: -2.170978546142578
    5. ' coin' → logprob: -3.420978546142578
    6. ' max' → logprob: -3.670978546142578
    7. 'limits' → logprob: -4.795978546142578
    8. '   ' → logprob: -5.920978546142578
    9. ' limits' → logprob: -6.170978546142578
    10. 'count' → logprob: -6.170978546142578

Token 737: ' consider' (ID: 3331)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8728031516075134
    2. ' max' → logprob: -1.6228032112121582
    3. ' coin' → logprob: -1.7478032112121582
    4. 'coin' → logprob: -1.8728032112121582
    5. ' generate' → logprob: -4.372803211212158
    6. 'limit' → logprob: -4.747803211212158
    7. ' limits' → logprob: -5.122803211212158
    8. ' ranges' → logprob: -5.372803211212158
    9. 'generate' → logprob: -5.747803211212158
    10. ' limit' → logprob: -5.872803211212158

Token 738: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7524088025093079
    2. ' max' → logprob: -1.127408742904663
    3. ' ranges' → logprob: -2.377408742904663
    4. 'ranges' → logprob: -2.752408742904663
    5. 'coin' → logprob: -4.377408981323242
    6. 'range' → logprob: -4.627408981323242
    7. ' coin' → logprob: -4.752408981323242
    8. ' range' → logprob: -5.627408981323242
    9. ' counts' → logprob: -6.002408981323242
    10. 'count' → logprob: -6.002408981323242

Token 739: ' coin' (ID: 22179)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.0030063462909311056
    2. '_coin' → logprob: -6.753006458282471
    3. '_count' → logprob: -6.878006458282471
    4. ' counts' → logprob: -8.503005981445312
    5. 'counts' → logprob: -8.753005981445312
    6. '_co' → logprob: -9.003005981445312
    7. '_values' → logprob: -9.503005981445312
    8. '_' → logprob: -10.128005981445312
    9. '_limits' → logprob: -10.253005981445312
    10. '_amount' → logprob: -10.503005981445312

Token 740: ' usage' (ID: 16622)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.03937457874417305
    2. 's' → logprob: -3.539374589920044
    3. ' counts' → logprob: -5.664374351501465
    4. '_count' → logprob: -5.789374351501465
    5. '_limits' → logprob: -7.039374351501465
    6. '_values' → logprob: -7.789374351501465
    7. '_' → logprob: -8.164374351501465
    8. '   ' → logprob: -8.539374351501465
    9. '_s' → logprob: -8.664374351501465
    10. '_usage' → logprob: -8.789374351501465

Token 741: ' per' (ID: 777)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6814310550689697
    2. ' =' → logprob: -0.9314310550689697
    3. '_per' → logprob: -2.6814310550689697
    4. '   ' → logprob: -4.806430816650391
    5. '_counts' → logprob: -4.931430816650391
    6. '=' → logprob: -5.056430816650391
    7. '_limits' → logprob: -5.431430816650391
    8. 'es' → logprob: -5.931430816650391
    9. 'per' → logprob: -7.306430816650391
    10. ' per' → logprob: -7.431430816650391

Token 742: ' denom' (ID: 73604)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.542397677898407
    2. ' coin' → logprob: -1.2923977375030518
    3. 'i' → logprob: -3.0423977375030518
    4. ' i' → logprob: -3.0423977375030518
    5. 'type' → logprob: -4.167397499084473
    6. 'c' → logprob: -4.917397499084473
    7. ' type' → logprob: -5.167397499084473
    8. ' denomination' → logprob: -5.542397499084473
    9. 'idx' → logprob: -5.917397499084473
    10. ' idx' → logprob: -6.167397499084473

Token 743: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.586319625377655
    2. 's' → logprob: -0.836319625377655
    3. '_counts' → logprob: -5.586319446563721
    4. '=' → logprob: -5.961319446563721
    5. '   ' → logprob: -6.211319446563721
    6. '_s' → logprob: -7.336319446563721
    7. '_max' → logprob: -8.336319923400879
    8. '_limits' → logprob: -8.461319923400879
    9. 'max' → logprob: -8.586319923400879
    10. ' s' → logprob: -9.336319923400879

Token 744: ' min' (ID: 1349)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.4971519112586975
    2. 'self' → logprob: -2.1221518516540527
    3. ' coin' → logprob: -2.3721518516540527
    4. '[' → logprob: -2.8721518516540527
    5. ' self' → logprob: -3.6221518516540527
    6. ' [' → logprob: -3.9971518516540527
    7. 'c' → logprob: -4.622151851654053
    8. '1' → logprob: -4.622151851654053
    9. 'count' → logprob: -4.872151851654053
    10. '[
' → logprob: -4.997151851654053

Token 745: '(current' (ID: 15023)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7372143864631653
    2. '(len' → logprob: -0.9872143864631653
    3. '(' → logprob: -1.9872143268585205
    4. '(count' → logprob: -4.9872145652771
    5. '(c' → logprob: -6.8622145652771
    6. '(max' → logprob: -7.4872145652771
    7. 'self' → logprob: -7.6122145652771
    8. 'len' → logprob: -7.8622145652771
    9. '(co' → logprob: -7.8622145652771
    10. '([' → logprob: -7.8622145652771

Token 746: ' count' (ID: 3605)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.23142656683921814
    2. '_coin' → logprob: -2.731426477432251
    3. '(' → logprob: -2.856426477432251
    4. '_counts' → logprob: -3.606426477432251
    5. 'coin' → logprob: -4.10642671585083
    6. '(self' → logprob: -4.60642671585083
    7. ')' → logprob: -5.10642671585083
    8. '_count' → logprob: -5.48142671585083
    9. '   ' → logprob: -5.48142671585083
    10. '(co' → logprob: -5.85642671585083

Token 747: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0043609291315078735
    2. ',len' → logprob: -6.129361152648926
    3. ' ,' → logprob: -6.629361152648926
    4. '   ' → logprob: -8.254361152648926
    5. '),' → logprob: -8.504361152648926
    6. ',
' → logprob: -8.879361152648926
    7. ')' → logprob: -10.004361152648926
    8. ',count' → logprob: -10.504361152648926
    9. '[' → logprob: -10.629361152648926
    10. ',self' → logprob: -10.629361152648926

Token 748: ' some' (ID: 1236)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0116218328475952
    2. ' coin' → logprob: -1.7616218328475952
    3. 'coin' → logprob: -1.8866218328475952
    4. ' ' → logprob: -2.2616219520568848
    5. '1' → logprob: -3.0116219520568848
    6. 'self' → logprob: -3.2616219520568848
    7. ')' → logprob: -3.6366219520568848
    8. ' self' → logprob: -3.8866219520568848
    9. 'price' → logprob: -4.136621952056885
    10. 'count' → logprob: -5.261621952056885

Token 749: ' reasonable' (ID: 19599)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -1.1424556970596313
    2. ' limit' → logprob: -2.517455577850342
    3. 'limit' → logprob: -2.517455577850342
    4. '100' → logprob: -2.642455577850342
    5. '20' → logprob: -2.767455577850342
    6. '(' → logprob: -2.767455577850342
    7. '_limit' → logprob: -3.017455577850342
    8. '(max' → logprob: -3.142455577850342
    9. ',' → logprob: -3.267455577850342
    10. ' ' → logprob: -3.392455577850342

Token 750: ' limit' (ID: 5967)
  Prédit: ' limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limit' → logprob: -0.3900046646595001
    2. ' count' → logprob: -2.1400046348571777
    3. '_limit' → logprob: -3.2650046348571777
    4. 'limit' → logprob: -3.6400046348571777
    5. ' ' → logprob: -3.7650046348571777
    6. ' cap' → logprob: -3.8900046348571777
    7. ' value' → logprob: -4.015004634857178
    8. ' number' → logprob: -4.015004634857178
    9. ' max' → logprob: -4.515004634857178
    10. ' coin' → logprob: -4.640004634857178

Token 751: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05879419296979904
    2. '=' → logprob: -3.9337942600250244
    3. 's' → logprob: -4.558794021606445
    4. ' )' → logprob: -4.683794021606445
    5. ' =' → logprob: -4.683794021606445
    6. ',' → logprob: -6.308794021606445
    7. '(' → logprob: -6.933794021606445
    8. ')
' → logprob: -6.933794021606445
    9. '),' → logprob: -6.933794021606445
    10. '   ' → logprob: -7.058794021606445

Token 752: ' e' (ID: 319)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8350855708122253
    2. '10' → logprob: -1.0850856304168701
    3. '1' → logprob: -3.08508563041687
    4. ')' → logprob: -3.33508563041687
    5. ' coin' → logprob: -3.33508563041687
    6. ' self' → logprob: -3.46008563041687
    7. 'self' → logprob: -3.71008563041687
    8. '7' → logprob: -4.460085391998291
    9. 'price' → logprob: -4.835085391998291
    10. 'coin' → logprob: -4.835085391998291

Token 753: '.g' (ID: 1940)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6993069648742676
    2. '100' → logprob: -1.4493069648742676
    3. '6' → logprob: -2.9493069648742676
    4. '10' → logprob: -3.0743069648742676
    5. 'x' → logprob: -3.9493069648742676
    6. '0' → logprob: -4.074306964874268
    7. 'qual' → logprob: -4.324306964874268
    8. '7' → logprob: -4.449306964874268
    9. 'ight' → logprob: -4.949306964874268
    10. '20' → logprob: -4.949306964874268

Token 754: '.' (ID: 13)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -1.2430764436721802
    2. ' ' → logprob: -1.6180764436721802
    3. '6' → logprob: -1.6180764436721802
    4. '10' → logprob: -1.9930764436721802
    5. '1' → logprob: -2.6180763244628906
    6. 'self' → logprob: -3.3680763244628906
    7. ')' → logprob: -3.8680763244628906
    8. '100' → logprob: -4.618076324462891
    9. '0' → logprob: -4.993076324462891
    10. ' self' → logprob: -5.243076324462891

Token 755: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5567044019699097
    2. ' ' → logprob: -1.5567044019699097
    3. 'self' → logprob: -2.306704521179199
    4. ' self' → logprob: -3.431704521179199
    5. 'coin' → logprob: -3.806704521179199
    6. '20' → logprob: -4.556704521179199
    7. 'price' → logprob: -4.681704521179199
    8. ' coin' → logprob: -4.931704521179199
    9. '6' → logprob: -5.056704521179199
    10. '1' → logprob: -5.056704521179199

Token 756: '20' (ID: 455)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.34566202759742737
    2. 'self' → logprob: -2.4706621170043945
    3. '20' → logprob: -2.7206621170043945
    4. 'price' → logprob: -2.9706621170043945
    5. 'coin' → logprob: -3.0956621170043945
    6. '100' → logprob: -4.4706621170043945
    7. 'change' → logprob: -4.5956621170043945
    8. '5' → logprob: -4.7206621170043945
    9. '99' → logprob: -5.7206621170043945
    10. '15' → logprob: -6.2206621170043945

Token 757: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003595376620069146
    2. ' )' → logprob: -8.375359535217285
    3. ')
' → logprob: -9.625359535217285
    4. '   ' → logprob: -11.500359535217285
    5. '):' → logprob: -11.875359535217285
    6. ')+' → logprob: -11.875359535217285
    7. '),' → logprob: -12.125359535217285
    8. '))' → logprob: -12.750359535217285
    9. ' ' → logprob: -12.750359535217285
    10. ').' → logprob: -12.875359535217285

Token 758: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19353368878364563
    2. '
' → logprob: -2.1935336589813232
    3. '        
' → logprob: -3.0685336589813232
    4. '   ' → logprob: -5.193533897399902
    5. '    
' → logprob: -5.193533897399902
    6. 'max' → logprob: -6.318533897399902
    7. ' max' → logprob: -7.068533897399902
    8. ' 
' → logprob: -7.193533897399902
    9. '  
' → logprob: -7.318533897399902
    10. ',' → logprob: -8.068533897399902

Token 759: ' coin' (ID: 22179)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39582714438438416
    2. 'max' → logprob: -1.3958271741867065
    3. ' max' → logprob: -2.770827054977417
    4. ' ranges' → logprob: -5.395827293395996
    5. '        
' → logprob: -6.020827293395996
    6. '
' → logprob: -6.145827293395996
    7. 'ranges' → logprob: -6.645827293395996
    8. 'limits' → logprob: -6.770827293395996
    9. '```' → logprob: -6.770827293395996
    10. ' limits' → logprob: -7.020827293395996

Token 760: '_limits' (ID: 80205)
  Prédit: '_limits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limits' → logprob: -0.8196285963058472
    2. '_max' → logprob: -1.3196285963058472
    3. '_counts' → logprob: -1.4446285963058472
    4. '_usage' → logprob: -3.6946287155151367
    5. '_types' → logprob: -4.069628715515137
    6. 'max' → logprob: -5.319628715515137
    7. '_ranges' → logprob: -5.569628715515137
    8. 'limits' → logprob: -6.944628715515137
    9. '_type' → logprob: -7.069628715515137
    10. '_' → logprob: -7.069628715515137

Token 761: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804849088191986
    2. '=' → logprob: -3.288048505783081
    3. ' =[' → logprob: -12.03804874420166
    4. '=[' → logprob: -14.53804874420166
    5. '   ' → logprob: -15.16304874420166
    6. 's' → logprob: -15.91304874420166
    7. ' ' → logprob: -16.413047790527344
    8. '=[]' → logprob: -16.538047790527344
    9. ' =
' → logprob: -16.788047790527344
    10. '[' → logprob: -16.788047790527344

Token 762: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2915414571762085
    2. ' [' → logprob: -1.7915414571762085
    3. 'tuple' → logprob: -3.041541576385498
    4. ' tuple' → logprob: -3.416541576385498
    5. '[
' → logprob: -6.166541576385498
    6. '[min' → logprob: -6.291541576385498
    7. '   ' → logprob: -7.541541576385498
    8. '(tuple' → logprob: -8.29154109954834
    9. '[self' → logprob: -8.41654109954834
    10. '[list' → logprob: -8.66654109954834

Token 763: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0031964892987161875
    2. ' min' → logprob: -5.753196716308594
    3. 'max' → logprob: -11.628196716308594
    4. 'count' → logprob: -12.503196716308594
    5. '(min' → logprob: -12.628196716308594
    6. 'c' → logprob: -13.878196716308594
    7. '	min' → logprob: -14.003196716308594
    8. '   ' → logprob: -14.253196716308594
    9. '[min' → logprob: -16.378196716308594
    10. 'coin' → logprob: -16.753196716308594

Token 764: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.1534382551908493
    2. '(c' → logprob: -2.5284383296966553
    3. '(self' → logprob: -3.4034383296966553
    4. '(' → logprob: -4.278438091278076
    5. '(cnt' → logprob: -4.403438091278076
    6. '(cc' → logprob: -7.028438091278076
    7. '(ct' → logprob: -7.278438091278076
    8. '(co' → logprob: -7.653438091278076
    9. 'count' → logprob: -7.903438091278076
    10. '(x' → logprob: -8.028438568115234

Token 765: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010559719055891037
    2. ' ,' → logprob: -5.260559558868408
    3. ',count' → logprob: -5.635559558868408
    4. ',len' → logprob: -7.010559558868408
    5. '(count' → logprob: -7.635559558868408
    6. '   ' → logprob: -8.760560035705566
    7. '(len' → logprob: -10.260560035705566
    8. '[count' → logprob: -10.635560035705566
    9. ',max' → logprob: -10.635560035705566
    10. ',
' → logprob: -11.135560035705566

Token 766: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.0003380846756044775
    2. ' ' → logprob: -8.500338554382324
    3. 'count' → logprob: -9.250338554382324
    4. 'self' → logprob: -11.125338554382324
    5. 'max' → logprob: -11.625338554382324
    6. 'min' → logprob: -11.750338554382324
    7. '   ' → logprob: -12.750338554382324
    8. 'coin' → logprob: -13.500338554382324
    9. '10' → logprob: -14.125338554382324
    10. '  ' → logprob: -14.750338554382324

Token 767: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -4.1318875446449965e-05
    2. 'count' → logprob: -11.250041007995605
    3. ' ' → logprob: -11.375041007995605
    4. 'self' → logprob: -12.250041007995605
    5. 'max' → logprob: -12.375041007995605
    6. '10' → logprob: -12.500041007995605
    7. 'min' → logprob: -13.125041007995605
    8. 'coin' → logprob: -14.750041007995605
    9. '   ' → logprob: -15.000041007995605
    10. '50' → logprob: -15.250041007995605

Token 768: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007222028798423707
    2. ' )' → logprob: -7.250722408294678
    3. '   ' → logprob: -12.12572193145752
    4. ')
' → logprob: -12.62572193145752
    5. '    ' → logprob: -14.37572193145752
    6. ')+' → logprob: -14.37572193145752
    7. ' ' → logprob: -14.50072193145752
    8. ' if' → logprob: -14.50072193145752
    9. '  ' → logprob: -15.37572193145752
    10. ',' → logprob: -15.75072193145752

Token 769: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02194865606725216
    2. 'for' → logprob: -3.8969485759735107
    3. ')' → logprob: -7.27194881439209
    4. '+' → logprob: -8.02194881439209
    5. ' +' → logprob: -8.64694881439209
    6. ' ' → logprob: -9.52194881439209
    7. '	for' → logprob: -10.02194881439209
    8. '   ' → logprob: -10.27194881439209
    9. '    ' → logprob: -10.89694881439209
    10. ',' → logprob: -11.52194881439209

Token 770: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0005530327325686812
    2. ' count' → logprob: -7.500553131103516
    3. ' ' → logprob: -17.125553131103516
    4. '	count' → logprob: -18.375553131103516
    5. '(count' → logprob: -18.750553131103516
    6. '  ' → logprob: -18.750553131103516
    7. '   ' → logprob: -18.750553131103516
    8. ' ' → logprob: -20.000553131103516
    9. 'c' → logprob: -20.125553131103516
    10. '    ' → logprob: -20.375553131103516

Token 771: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02638320066034794
    2. 'in' → logprob: -3.6513831615448
    3. 'count' → logprob: -9.651383399963379
    4. ',count' → logprob: -11.276383399963379
    5. ',' → logprob: -12.776383399963379
    6. '[count' → logprob: -13.276383399963379
    7. ' count' → logprob: -14.401383399963379
    8. ' ' → logprob: -15.026383399963379
    9. '(count' → logprob: -15.026383399963379
    10. ' ,' → logprob: -16.526382446289062

Token 772: ' coin' (ID: 22179)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.026828952133655548
    2. ' coin' → logprob: -3.9018290042877197
    3. 'self' → logprob: -5.151828765869141
    4. ' self' → logprob: -7.651828765869141
    5. ' ' → logprob: -13.52682876586914
    6. '   ' → logprob: -14.40182876586914
    7. 'coins' → logprob: -15.77682876586914
    8. 'c' → logprob: -15.90182876586914
    9. '
' → logprob: -16.02682876586914
    10. '(self' → logprob: -16.15182876586914

Token 773: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -7.3458322731312364e-06
    2. ')' → logprob: -13.250007629394531
    3. 'Counts' → logprob: -13.375007629394531
    4. 's' → logprob: -13.625007629394531
    5. 'counts' → logprob: -14.000007629394531
    6. '_types' → logprob: -14.250007629394531
    7. '_' → logprob: -14.875007629394531
    8. '_sets' → logprob: -15.625007629394531
    9. ' ' → logprob: -16.00000762939453
    10. ' counts' → logprob: -16.12500762939453

Token 774: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0734577476978302
    2. '[' → logprob: -2.698457717895508
    3. ' ]' → logprob: -5.698457717895508
    4. '   ' → logprob: -9.448457717895508
    5. '[:' → logprob: -10.198457717895508
    6. ']
' → logprob: -11.948457717895508
    7. '       ' → logprob: -11.948457717895508
    8. '[:-' → logprob: -12.198457717895508
    9. '()]' → logprob: -12.323457717895508
    10. '           ' → logprob: -12.823457717895508

Token 775: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 776: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 777: ' coin' (ID: 22179)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 778: '_counts' (ID: 61971)
  Prédit: '_limits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limits' → logprob: -0.010690519586205482
    2. '_counts' → logprob: -5.010690689086914
    3. 's' → logprob: -6.385690689086914
    4. '_' → logprob: -6.510690689086914
    5. ' _' → logprob: -8.760690689086914
    6. ' limits' → logprob: -8.885690689086914
    7. 'limits' → logprob: -9.010690689086914
    8. ')' → logprob: -9.260690689086914
    9. '_limit' → logprob: -9.760690689086914
    10. 'Limits' → logprob: -9.885690689086914

Token 779: ' corresponds' (ID: 66938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 780: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.33977481722831726
    2. '[' → logprob: -2.0897748470306396
    3. 'to' → logprob: -2.2147748470306396
    4. '[:-' → logprob: -3.9647748470306396
    5. '[:' → logprob: -4.4647746086120605
    6. ')' → logprob: -5.2147746086120605
    7. '<|end|>' → logprob: -5.3397746086120605
    8. '[:]' → logprob: -5.7147746086120605
    9. '    ' → logprob: -5.8397746086120605
    10. '_to' → logprob: -6.3397746086120605

Token 781: ' indices' (ID: 30378)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.11456075310707092
    2. ' coin' → logprob: -2.614560842514038
    3. '[' → logprob: -3.489560842514038
    4. '(' → logprob: -6.614560604095459
    5. '1' → logprob: -6.739560604095459
    6. ' [' → logprob: -7.489560604095459
    7. '6' → logprob: -7.989560604095459
    8. ' ' → logprob: -8.114561080932617
    9. 'Coin' → logprob: -8.364561080932617
    10. 'self' → logprob: -9.489561080932617

Token 782: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2103842794895172
    2. ' ' → logprob: -1.8353842496871948
    3. '[' → logprob: -3.7103843688964844
    4. '0' → logprob: -5.335384368896484
    5. '```' → logprob: -8.835384368896484
    6. '   ' → logprob: -8.960384368896484
    7. '
' → logprob: -9.085384368896484
    8. '=' → logprob: -9.210384368896484
    9. ':' → logprob: -9.585384368896484
    10. ' =' → logprob: -9.710384368896484

Token 783: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04572776332497597
    2. '0' → logprob: -3.5457277297973633
    3. ' ' → logprob: -4.170727729797363
    4. '[' → logprob: -8.670727729797363
    5. '   ' → logprob: -9.545727729797363
    6. '
' → logprob: -10.295727729797363
    7. 'from' → logprob: -10.295727729797363
    8. ':' → logprob: -10.420727729797363
    9. '	' → logprob: -11.170727729797363
    10. '  ' → logprob: -11.420727729797363

Token 784: '..' (ID: 485)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37537145614624023
    2. ':]' → logprob: -1.6253714561462402
    3. ']' → logprob: -2.7503714561462402
    4. '...' → logprob: -4.37537145614624
    5. '+' → logprob: -5.00037145614624
    6. '1' → logprob: -5.12537145614624
    7. ' ]' → logprob: -5.50037145614624
    8. ',' → logprob: -5.62537145614624
    9. ':],' → logprob: -6.00037145614624
    10. ' :]' → logprob: -6.12537145614624

Token 785: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0008421457023359835
    2. ' ' → logprob: -8.125842094421387
    3. 'len' → logprob: -8.500842094421387
    4. '5' → logprob: -8.625842094421387
    5. '7' → logprob: -9.250842094421387
    6. '0' → logprob: -10.625842094421387
    7. '1' → logprob: -10.875842094421387
    8. ' len' → logprob: -12.000842094421387
    9. '-' → logprob: -12.875842094421387
    10. '...' → logprob: -12.875842094421387

Token 786: ';' (ID: 26)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3386105298995972
    2. '
' → logprob: -1.3386105298995972
    3. '<|end|>' → logprob: -1.3386105298995972
    4. '       ' → logprob: -2.7136106491088867
    5. '[' → logprob: -2.8386106491088867
    6. '    
' → logprob: -4.088610649108887
    7. ']' → logprob: -4.213610649108887
    8. ',' → logprob: -4.588610649108887
    9. '   ' → logprob: -4.713610649108887
    10. '        
' → logprob: -4.838610649108887

Token 787: ' but' (ID: 889)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 788: ' we' (ID: 581)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.45551103353500366
    2. ' ' → logprob: -1.2055110931396484
    3. ' coin' → logprob: -3.4555110931396484
    4. '[' → logprob: -4.580511093139648
    5. '0' → logprob: -5.080511093139648
    6. 'coin' → logprob: -5.455511093139648
    7. ')' → logprob: -5.830511093139648
    8. '    ' → logprob: -5.830511093139648
    9. ' len' → logprob: -6.705511093139648
    10. ':' → logprob: -6.830511093139648

Token 789: ' passed' (ID: 10292)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8916193246841431
    2. '1' → logprob: -1.891619324684143
    3. ']' → logprob: -1.891619324684143
    4. ')' → logprob: -2.6416192054748535
    5. ' are' → logprob: -2.6416192054748535
    6. 'exclude' → logprob: -3.5166192054748535
    7. ' exclude' → logprob: -4.1416192054748535
    8. ':' → logprob: -4.6416192054748535
    9. '][:' → logprob: -4.7666192054748535
    10. ' only' → logprob: -5.0166192054748535

Token 790: ' coins' (ID: 28969)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.10857705026865005
    2. ' coin' → logprob: -2.358577013015747
    3. '   ' → logprob: -5.358577251434326
    4. '[' → logprob: -7.108577251434326
    5. '1' → logprob: -7.483577251434326
    6. '    ' → logprob: -7.858577251434326
    7. 'self' → logprob: -8.108576774597168
    8. ' ' → logprob: -8.483576774597168
    9. '6' → logprob: -8.608576774597168
    10. '[:-' → logprob: -8.983576774597168

Token 791: ' ex' (ID: 513)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16866257786750793
    2. ')' → logprob: -2.2936625480651855
    3. '[:-' → logprob: -3.4186625480651855
    4. '[:' → logprob: -4.4186625480651855
    5. '   ' → logprob: -5.5436625480651855
    6. '=' → logprob: -6.1686625480651855
    7. ' =' → logprob: -6.6686625480651855
    8. '[:]' → logprob: -7.1686625480651855
    9. '[::-' → logprob: -8.543663024902344
    10. ' )' → logprob: -8.543663024902344

Token 792: '-' (ID: 12)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47735005617141724
    2. 'cluding' → logprob: -1.8523499965667725
    3. 'cluded' → logprob: -1.8523499965667725
    4. 'act' → logprob: -3.9773499965667725
    5. 'c' → logprob: -4.352350234985352
    6. '[:' → logprob: -4.602350234985352
    7. 'clud' → logprob: -4.977350234985352
    8. 'cept' → logprob: -5.352350234985352
    9. 'clude' → logprob: -5.352350234985352
    10. '[:-' → logprob: -6.352350234985352

Token 793: '100' (ID: 1353)
  Prédit: 'cluding'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cluding' → logprob: -0.05019788444042206
    2. 'cluded' → logprob: -3.5501978397369385
    3. 'clude' → logprob: -4.675198078155518
    4. '1' → logprob: -5.300198078155518
    5. '[' → logprob: -5.425198078155518
    6. '0' → logprob: -7.050198078155518
    7. 'clud' → logprob: -8.05019760131836
    8. '6' → logprob: -9.42519760131836
    9. 'cl' → logprob: -9.92519760131836
    10. 'clusive' → logprob: -10.30019760131836

Token 794: '0' (ID: 15)
  Prédit: 'cluded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cluded' → logprob: -0.8585968017578125
    2. 'cluding' → logprob: -1.2335968017578125
    3. '0' → logprob: -2.1085968017578125
    4. 'clude' → logprob: -2.4835968017578125
    5. '[' → logprob: -2.9835968017578125
    6. 'clud' → logprob: -4.7335968017578125
    7. 'cl' → logprob: -5.7335968017578125
    8. '_' → logprob: -5.9835968017578125
    9. 'cept' → logprob: -5.9835968017578125
    10. '1' → logprob: -6.4835968017578125

Token 795: ';' (ID: 26)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.7487166523933411
    2. '[' → logprob: -1.6237165927886963
    3. ']' → logprob: -1.7487165927886963
    4. ')' → logprob: -2.7487165927886963
    5. '[:' → logprob: -3.6237165927886963
    6. '   ' → logprob: -3.8737165927886963
    7. '[:-' → logprob: -4.873716831207275
    8. ' ]' → logprob: -5.123716831207275
    9. ' ' → logprob: -5.373716831207275
    10. '<|end|>' → logprob: -5.498716831207275

Token 796: ' here' (ID: 2105)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26039913296699524
    2. '<|end|>' → logprob: -2.260399103164673
    3. '[' → logprob: -3.135399103164673
    4. '
' → logprob: -3.260399103164673
    5. ']' → logprob: -4.010399341583252
    6. '<|end|>' → logprob: -5.635399341583252
    7. '(' → logprob: -6.135399341583252
    8. ' ' → logprob: -6.135399341583252
    9. ')]' → logprob: -6.135399341583252
    10. '   ' → logprob: -6.260399341583252

Token 797: ' let's' (ID: 35717)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25543248653411865
    2. ']' → logprob: -2.005432605743408
    3. ')' → logprob: -3.380432605743408
    4. '[:-' → logprob: -4.505432605743408
    5. ' =' → logprob: -4.755432605743408
    6. ' ]' → logprob: -5.005432605743408
    7. '[:' → logprob: -5.005432605743408
    8. ':' → logprob: -5.255432605743408
    9. ')]' → logprob: -5.630432605743408
    10. '[:]' → logprob: -5.630432605743408

Token 798: ' be' (ID: 413)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.19344231486320496
    2. 'continue' → logprob: -2.6934423446655273
    3. ' coin' → logprob: -3.8184423446655273
    4. '[' → logprob: -3.9434423446655273
    5. 'count' → logprob: -4.443442344665527
    6. 'len' → logprob: -4.568442344665527
    7. ' continue' → logprob: -4.943442344665527
    8. ')' → logprob: -5.443442344665527
    9. '0' → logprob: -5.693442344665527
    10. 'range' → logprob: -5.818442344665527

Token 799: ' consistent' (ID: 20434)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.5678831934928894
    2. '[' → logprob: -0.9428831934928894
    3. 'count' → logprob: -3.692883253097534
    4. ' coin' → logprob: -4.942883014678955
    5. '[count' → logprob: -5.567883014678955
    6. 'len' → logprob: -5.942883014678955
    7. '0' → logprob: -6.692883014678955
    8. '[
' → logprob: -7.067883014678955
    9. ' [' → logprob: -7.442883014678955
    10. 'self' → logprob: -7.942883014678955

Token 800: '

' (ID: 279)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02408524788916111
    2. '<|end|>' → logprob: -5.14908504486084
    3. '[:-' → logprob: -5.39908504486084
    4. '
' → logprob: -5.64908504486084
    5. '[:' → logprob: -5.77408504486084
    6. '[:]' → logprob: -6.64908504486084
    7. '    
' → logprob: -6.77408504486084
    8. '<|end|>' → logprob: -6.89908504486084
    9. '    ' → logprob: -7.14908504486084
    10. ' ' → logprob: -7.52408504486084

Token 801: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08950314670801163
    2. '[:' → logprob: -3.214503049850464
    3. '[:-' → logprob: -4.589503288269043
    4. '[:]' → logprob: -4.589503288269043
    5. '   ' → logprob: -5.589503288269043
    6. '
' → logprob: -5.589503288269043
    7. '<|end|>' → logprob: -5.589503288269043
    8. ':' → logprob: -5.839503288269043
    9. ')' → logprob: -6.464503288269043
    10. ' ' → logprob: -6.714503288269043

Token 802: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7671173214912415
    2. '[' → logprob: -1.2671172618865967
    3. '        
' → logprob: -3.1421172618865967
    4. ')' → logprob: -3.1421172618865967
    5. ' =' → logprob: -3.2671172618865967
    6. '
' → logprob: -3.6421172618865967
    7. ',' → logprob: -3.7671172618865967
    8. '=' → logprob: -4.767117500305176
    9. '   ' → logprob: -4.767117500305176
    10. '<|end|>' → logprob: -4.892117500305176

Token 803: ' Actually' (ID: 50557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.320971816778183
    2. 'coin' → logprob: -2.320971727371216
    3. ' for' → logprob: -3.320971727371216
    4. 'for' → logprob: -3.820971727371216
    5. 'ranges' → logprob: -3.820971727371216
    6. '        
' → logprob: -3.945971727371216
    7. ' ranges' → logprob: -4.070971965789795
    8. ' coin' → logprob: -4.070971965789795
    9. 'range' → logprob: -4.195971965789795
    10. 'indices' → logprob: -5.320971965789795

Token 804: ' to' (ID: 316)
  Prédit: ' coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.21696148812770844
    2. 'coin' → logprob: -2.21696138381958
    3. ' =' → logprob: -3.34196138381958
    4. '[' → logprob: -3.84196138381958
    5. ' [' → logprob: -4.46696138381958
    6. ' range' → logprob: -6.09196138381958
    7. ' ' → logprob: -6.21696138381958
    8. '_coin' → logprob: -6.46696138381958
    9. '   ' → logprob: -6.59196138381958
    10. '[
' → logprob: -7.34196138381958

Token 805: ' align' (ID: 9538)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.4536057114601135
    2. ' coin' → logprob: -1.0786056518554688
    3. 'len' → logprob: -4.828605651855469
    4. ' =' → logprob: -5.203605651855469
    5. ' len' → logprob: -5.953605651855469
    6. '_coin' → logprob: -6.578605651855469
    7. 'range' → logprob: -6.953605651855469
    8. ' continue' → logprob: -7.078605651855469
    9. '_limits' → logprob: -7.328605651855469
    10. ' range' → logprob: -7.328605651855469

Token 806: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2594810724258423
    2. 'coin' → logprob: -2.1344809532165527
    3. '=' → logprob: -2.5094809532165527
    4. ' coin' → logprob: -3.6344809532165527
    5. '       ' → logprob: -7.634480953216553
    6. ' with' → logprob: -7.634480953216553
    7. '_coin' → logprob: -7.759480953216553
    8. 'with' → logprob: -8.259481430053711
    9. '   ' → logprob: -9.009481430053711
    10. '    ' → logprob: -9.009481430053711

Token 807: ' our' (ID: 1039)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.17472665011882782
    2. ' coin' → logprob: -2.049726724624634
    3. 'self' → logprob: -4.424726486206055
    4. 'len' → logprob: -5.174726486206055
    5. '6' → logprob: -5.549726486206055
    6. '[' → logprob: -5.799726486206055
    7. 'range' → logprob: -6.174726486206055
    8. ' self' → logprob: -6.549726486206055
    9. ' ' → logprob: -7.174726486206055
    10. '7' → logprob: -7.549726486206055

Token 808: ' representation' (ID: 22311)
  Prédit: ' coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.4460536539554596
    2. 'coin' → logprob: -1.6960536241531372
    3. ' current' → logprob: -2.3210537433624268
    4. 'current' → logprob: -2.8210537433624268
    5. 'len' → logprob: -4.946053504943848
    6. 'self' → logprob: -6.071053504943848
    7. ' ' → logprob: -6.571053504943848
    8. ' len' → logprob: -6.696053504943848
    9. '_coin' → logprob: -6.821053504943848
    10. '[' → logprob: -7.196053504943848

Token 809: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23085957765579224
    2. ',' → logprob: -2.7308595180511475
    3. '[' → logprob: -2.8558595180511475
    4. ':' → logprob: -3.3558595180511475
    5. '       ' → logprob: -4.105859756469727
    6. '=' → logprob: -4.855859756469727
    7. ')' → logprob: -6.105859756469727
    8. '        
' → logprob: -6.105859756469727
    9. '[:-' → logprob: -6.105859756469727
    10. '<|end|>' → logprob: -6.355859756469727

Token 810: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9259446263313293
    2. ' =' → logprob: -1.4259445667266846
    3. '       ' → logprob: -1.6759445667266846
    4. ' coin' → logprob: -2.3009445667266846
    5. 'coin' → logprob: -4.550944805145264
    6. '        
' → logprob: -4.675944805145264
    7. ' ' → logprob: -5.175944805145264
    8. ':' → logprob: -5.300944805145264
    9. ' [' → logprob: -5.300944805145264
    10. ' :' → logprob: -5.550944805145264

Token 811: ' #' (ID: 1069)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.04347775876522064
    2. ' coin' → logprob: -3.418477773666382
    3. '       ' → logprob: -4.793477535247803
    4. 'coins' → logprob: -7.418477535247803
    5. 'self' → logprob: -8.918478012084961
    6. 'payment' → logprob: -9.543478012084961
    7. '#' (adapté à ' #') → logprob: -9.543478012084961
    8. 'max' → logprob: -9.668478012084961
    9. 'for' → logprob: -10.043478012084961
    10. 'current' → logprob: -10.168478012084961

Token 812: ' current' (ID: 2208)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.04349065572023392
    2. ' coin' → logprob: -3.2934906482696533
    3. '       ' → logprob: -5.293490886688232
    4. 'coins' → logprob: -9.293490409851074
    5. 'max' → logprob: -10.293490409851074
    6. '#' → logprob: -10.543490409851074
    7. 'for' → logprob: -10.668490409851074
    8. '   ' → logprob: -10.668490409851074
    9. 'current' → logprob: -10.793490409851074
    10. 'self' → logprob: -10.793490409851074

Token 813: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.0012723775580525398
    2. '_counts' → logprob: -6.876272201538086
    3. '_coin' → logprob: -9.001272201538086
    4. 'coins' → logprob: -9.501272201538086
    5. '_' → logprob: -10.376272201538086
    6. 'coin' → logprob: -12.751272201538086
    7. ' coins' → logprob: -14.001272201538086
    8. 'co' → logprob: -14.126272201538086
    9. '\' → logprob: -14.126272201538086
    10. '_tokens' → logprob: -14.251272201538086

Token 814: 'ins' (ID: 1564)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9611307978630066
    2. 'ins' → logprob: -1.3361308574676514
    3. '_co' → logprob: -1.4611308574676514
    4. '_counts' → logprob: -2.3361308574676514
    5. 'in' → logprob: -4.836130619049072
    6. '_ins' → logprob: -5.711130619049072
    7. 'coins' → logprob: -6.211130619049072
    8. '_in' → logprob: -6.336130619049072
    9. 'o' → logprob: -6.336130619049072
    10. '_o' → logprob: -6.961130619049072

Token 815: ' length' (ID: 5517)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07309836149215698
    2. '=' → logprob: -3.3230984210968018
    3. '[' → logprob: -3.4480984210968018
    4. ')' → logprob: -6.573098182678223
    5. '<|end|>' → logprob: -8.698098182678223
    6. '[:-' → logprob: -8.823098182678223
    7. '   ' → logprob: -9.073098182678223
    8. ':' → logprob: -9.073098182678223
    9. '```' → logprob: -9.073098182678223
    10. '       ' → logprob: -9.323098182678223

Token 816: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0038292407989502
    2. '==' → logprob: -1.7538292407989502
    3. ' ==' → logprob: -2.25382924079895
    4. ' is' → logprob: -2.37882924079895
    5. ' =' → logprob: -2.50382924079895
    6. '6' → logprob: -2.87882924079895
    7. ' -' → logprob: -3.37882924079895
    8. '7' → logprob: -4.003829002380371
    9. '[' → logprob: -4.253829002380371
    10. ':' → logprob: -4.378829002380371

Token 817: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.3150171637535095
    2. '6' → logprob: -1.4400172233581543
    3. 'len' → logprob: -3.4400172233581543
    4. ' ' → logprob: -7.065017223358154
    5. ' len' → logprob: -7.940017223358154
    6. '```' → logprob: -11.565016746520996
    7. '   ' → logprob: -12.315016746520996
    8. '(len' → logprob: -12.815016746520996
    9. '  ' → logprob: -13.627516746520996
    10. '=len' → logprob: -13.690016746520996

Token 818: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.7867299914360046
    2. '6' → logprob: -1.0367300510406494
    3. 'len' → logprob: -1.6617300510406494
    4. ' len' → logprob: -8.66172981262207
    5. ' ' → logprob: -10.53672981262207
    6. '(len' → logprob: -10.66172981262207
    7. '```' → logprob: -11.53672981262207
    8. '[len' → logprob: -12.28672981262207
    9. '=len' → logprob: -13.41172981262207
    10. '
' → logprob: -14.22422981262207

Token 819: ' with' (ID: 483)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12035565078258514
    2. ':' → logprob: -3.3703556060791016
    3. '       ' → logprob: -4.120355606079102
    4. '[:-' → logprob: -4.495355606079102
    5. ' =' → logprob: -4.495355606079102
    6. '
' → logprob: -4.870355606079102
    7. '[
' → logprob: -5.120355606079102
    8. ',' → logprob: -5.120355606079102
    9. '<|end|>' → logprob: -5.495355606079102
    10. '[:' → logprob: -5.620355606079102

Token 820: ' indices' (ID: 30378)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coin' → logprob: -1.3113926649093628
    2. 'len' → logprob: -1.4363926649093628
    3. '1' → logprob: -1.8113926649093628
    4. '0' → logprob: -2.1863927841186523
    5. 'self' → logprob: -2.1863927841186523
    6. ' coin' → logprob: -3.8113927841186523
    7. 'coins' → logprob: -3.9363927841186523
    8. '6' → logprob: -4.686392784118652
    9. 'no' → logprob: -4.686392784118652
    10. ' coins' → logprob: -5.311392784118652

Token 821: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4360537528991699
    2. ' ' → logprob: -1.06105375289917
    3. ' =' → logprob: -5.81105375289917
    4. '0' → logprob: -6.56105375289917
    5. '=' → logprob: -6.68605375289917
    6. '[' → logprob: -7.31105375289917
    7. '
' → logprob: -8.186054229736328
    8. ':' → logprob: -8.186054229736328
    9. '   ' → logprob: -9.186054229736328
    10. '```' → logprob: -9.186054229736328

Token 822: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01499281357973814
    2. '0' → logprob: -5.014992713928223
    3. ' ' → logprob: -5.139992713928223
    4. '[' → logprob: -7.139992713928223
    5. ':' → logprob: -7.764992713928223
    6. '=' → logprob: -8.264992713928223
    7. 'from' → logprob: -8.264992713928223
    8. '
' → logprob: -8.639992713928223
    9. ' =' → logprob: -8.889992713928223
    10. '```' → logprob: -9.139992713928223

Token 823: '..' (ID: 485)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07311487942934036
    2. '[' → logprob: -3.8231148719787598
    3. ',' → logprob: -4.32311487197876
    4. '1' → logprob: -5.07311487197876
    5. '```' → logprob: -5.57311487197876
    6. ' :' → logprob: -5.69811487197876
    7. '
' → logprob: -5.82311487197876
    8. ':
' → logprob: -6.07311487197876
    9. '   ' → logprob: -6.07311487197876
    10. ' to' → logprob: -6.07311487197876

Token 824: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0177108533680439
    2. '1' → logprob: -4.3927106857299805
    3. '0' → logprob: -6.2677106857299805
    4. ':' → logprob: -6.5177106857299805
    5. '7' → logprob: -6.7677106857299805
    6. ' ' → logprob: -7.7677106857299805
    7. '=' → logprob: -9.76771068572998
    8. ')' → logprob: -10.51771068572998
    9. '```' → logprob: -10.51771068572998
    10. '
' → logprob: -10.89271068572998

Token 825: ' as' (ID: 472)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09609663486480713
    2. '
' → logprob: -3.9710965156555176
    3. '       ' → logprob: -4.096096515655518
    4. ':' → logprob: -4.221096515655518
    5. ' =' → logprob: -4.346096515655518
    6. '[:-' → logprob: -4.596096515655518
    7. ',' → logprob: -5.346096515655518
    8. '[:' → logprob: -5.596096515655518
    9. '[
' → logprob: -5.971096515655518
    10. '<|end|>' → logprob: -6.971096515655518

Token 826: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3505202531814575
    2. ' ' → logprob: -1.7255202531814575
    3. ' [' → logprob: -1.7255202531814575
    4. ' coins' → logprob: -2.225520133972168
    5. '1' → logprob: -2.475520133972168
    6. '0' → logprob: -2.725520133972168
    7. 'coins' → logprob: -3.350520133972168
    8. ' coin' → logprob: -3.725520133972168
    9. '   ' → logprob: -3.850520133972168
    10. 'coin' → logprob: -4.725520133972168

Token 827: '100' (ID: 1353)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8723595142364502
    2. 'self' → logprob: -1.4973595142364502
    3. '1' → logprob: -2.12235951423645
    4. '0' → logprob: -2.37235951423645
    5. 'coin' → logprob: -2.99735951423645
    6. '[
' → logprob: -4.122359275817871
    7. ' [' → logprob: -4.122359275817871
    8. ' self' → logprob: -4.497359275817871
    9. ' coin' → logprob: -4.872359275817871
    10. ' ' → logprob: -4.997359275817871

Token 828: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0032947517465800047
    2. '1' → logprob: -7.128294944763184
    3. '    ' → logprob: -7.503294944763184
    4. '   ' → logprob: -7.503294944763184
    5. '[' → logprob: -7.628294944763184
    6. '000' → logprob: -8.128294944763184
    7. '       ' → logprob: -8.753294944763184
    8. ',' → logprob: -9.128294944763184
    9. '
' → logprob: -10.003294944763184
    10. '    
' → logprob: -10.253294944763184

Token 829: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2669980525970459
    2. ',' → logprob: -2.266998052597046
    3. '   ' → logprob: -3.516998052597046
    4. ' -' → logprob: -4.141998291015625
    5. '-y' → logprob: -4.141998291015625
    6. ')' → logprob: -4.266998291015625
    7. ']' → logprob: -4.391998291015625
    8. '[-' → logprob: -5.266998291015625
    9. '```' → logprob: -5.391998291015625
    10. '[' → logprob: -5.641998291015625

Token 830: '500' (ID: 3234)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.031013431027531624
    2. ' ' → logprob: -3.9060134887695312
    3. '
' → logprob: -5.281013488769531
    4. '   ' → logprob: -6.406013488769531
    5. ':' → logprob: -7.156013488769531
    6. '    ' → logprob: -7.281013488769531
    7. '    
' → logprob: -7.656013488769531
    8. '  ' → logprob: -8.031013488769531
    9. ',' → logprob: -8.531013488769531
    10. ' but' → logprob: -9.031013488769531

Token 831: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004049194511026144
    2. ' =' → logprob: -6.129049301147461
    3. '=' → logprob: -7.504049301147461
    4. '[:' → logprob: -8.879049301147461
    5. '   ' → logprob: -9.004049301147461
    6. ',' → logprob: -9.129049301147461
    7. ':' → logprob: -9.129049301147461
    8. '```' → logprob: -9.254049301147461
    9. '[
' → logprob: -9.379049301147461
    10. '[:-' → logprob: -9.379049301147461

Token 832: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.03608336299657822
    2. '50' → logprob: -3.411083459854126
    3. ' ' → logprob: -6.161083221435547
    4. '10' → logprob: -8.161083221435547
    5. '1' → logprob: -10.786083221435547
    6. '   ' → logprob: -11.286083221435547
    7. '
' → logprob: -13.161083221435547
    8. '```' → logprob: -13.286083221435547
    9. '    ' → logprob: -13.661083221435547
    10. '  ' → logprob: -14.911083221435547

Token 833: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.015900392085313797
    2. '[:' → logprob: -5.140900611877441
    3. '[:-' → logprob: -6.515900611877441
    4. '
' → logprob: -6.640900611877441
    5. ')' → logprob: -6.765900611877441
    6. '[
' → logprob: -6.765900611877441
    7. '       ' → logprob: -7.015900611877441
    8. ',' → logprob: -7.640900611877441
    9. ':' → logprob: -7.890900611877441
    10. '(' → logprob: -8.015900611877441

Token 834: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.09459583461284637
    2. '1' → logprob: -3.3445959091186523
    3. ' ' → logprob: -3.3445959091186523
    4. '5' → logprob: -4.094595909118652
    5. '500' → logprob: -6.844595909118652
    6. '
' → logprob: -7.094595909118652
    7. '```' → logprob: -8.094595909118652
    8. '10' → logprob: -8.469595909118652
    9. '   ' → logprob: -8.594595909118652
    10. '0' → logprob: -9.219595909118652

Token 835: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06081487238407135
    2. ')' → logprob: -4.43581485748291
    3. ' =' → logprob: -4.81081485748291
    4. '[
' → logprob: -4.93581485748291
    5. ',' → logprob: -5.06081485748291
    6. '       ' → logprob: -5.43581485748291
    7. '<|end|>' → logprob: -5.81081485748291
    8. '
' → logprob: -5.93581485748291
    9. '[:-' → logprob: -6.06081485748291
    10. ':' → logprob: -6.06081485748291

Token 836: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0002366753324167803
    2. ' ' → logprob: -8.375236511230469
    3. '5' → logprob: -13.250236511230469
    4. '```' → logprob: -13.250236511230469
    5. '   ' → logprob: -13.625236511230469
    6. '20' → logprob: -14.500236511230469
    7. '25' → logprob: -14.750236511230469
    8. '    ' → logprob: -16.50023651123047
    9. '``' → logprob: -16.50023651123047
    10. '  ' → logprob: -16.62523651123047

Token 837: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7635282278060913
    2. ',' → logprob: -1.1385282278060913
    3. ')' → logprob: -2.513528347015381
    4. ']' → logprob: -3.763528347015381
    5. '   ' → logprob: -3.763528347015381
    6. '       ' → logprob: -4.263528347015381
    7. '<|end|>' → logprob: -4.263528347015381
    8. ' ,' → logprob: -4.513528347015381
    9. '[
' → logprob: -4.638528347015381
    10. ',
' → logprob: -4.888528347015381

Token 838: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0004475924652069807
    2. ' ' → logprob: -7.750447750091553
    3. '```' → logprob: -11.625447273254395
    4. '   ' → logprob: -12.625447273254395
    5. '1' → logprob: -13.500447273254395
    6. '25' → logprob: -14.000447273254395
    7. '0' → logprob: -14.250447273254395
    8. '       ' → logprob: -14.625447273254395
    9. '
' → logprob: -14.875447273254395
    10. '  ' → logprob: -15.375447273254395

Token 839: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18359635770320892
    2. ')' → logprob: -2.80859637260437
    3. ',' → logprob: -3.93359637260437
    4. '   ' → logprob: -4.433596134185791
    5. '```' → logprob: -4.433596134185791
    6. ']' → logprob: -4.683596134185791
    7. '       ' → logprob: -4.933596134185791
    8. ' =' → logprob: -4.933596134185791
    9. '<|end|>' → logprob: -4.933596134185791
    10. '
' → logprob: -5.183596134185791

Token 840: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007666255696676672
    2. ' ' → logprob: -7.250766754150391
    3. '0' → logprob: -10.00076675415039
    4. '```' → logprob: -12.12576675415039
    5. '2' → logprob: -12.75076675415039
    6. '   ' → logprob: -14.00076675415039
    7. '
' → logprob: -14.12576675415039
    8. '100' → logprob: -14.75076675415039
    9. '20' → logprob: -15.75076675415039
    10. '

' → logprob: -15.87576675415039

Token 841: '?
' (ID: 3901)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06866063922643661
    2. '
' → logprob: -4.068660736083984
    3. '[
' → logprob: -4.193660736083984
    4. '       ' → logprob: -5.193660736083984
    5. ',' → logprob: -5.568660736083984
    6. ':' → logprob: -5.568660736083984
    7. ' =' → logprob: -5.568660736083984
    8. ')' → logprob: -5.568660736083984
    9. '<|end|>' → logprob: -6.443660736083984
    10. '=' → logprob: -6.443660736083984

Token 842: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.021793648600578308
    2. ':' → logprob: -5.396793842315674
    3. ' =' → logprob: -5.771793842315674
    4. '(' → logprob: -6.521793842315674
    5. '[:-' → logprob: -6.521793842315674
    6. '   ' → logprob: -6.646793842315674
    7. '[
' → logprob: -6.646793842315674
    8. ',' → logprob: -6.896793842315674
    9. ')' → logprob: -7.021793842315674
    10. '=' → logprob: -7.021793842315674

Token 843: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026737507432699203
    2. '[
' → logprob: -5.276737689971924
    3. ' =' → logprob: -5.401737689971924
    4. '(' → logprob: -6.026737689971924
    5. ')' → logprob: -6.151737689971924
    6. '<|end|>' → logprob: -6.276737689971924
    7. '
' → logprob: -6.401737689971924
    8. ':' → logprob: -6.901737689971924
    9. '[:-' → logprob: -7.026737689971924
    10. '       ' → logprob: -7.151737689971924

Token 844: ' No' (ID: 3004)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07841816544532776
    2. ' =' → logprob: -3.578418254852295
    3. '       ' → logprob: -3.828418254852295
    4. '=' → logprob: -4.953418254852295
    5. ')' → logprob: -5.453418254852295
    6. '   ' → logprob: -6.078418254852295
    7. '(' → logprob: -6.203418254852295
    8. '<|end|>' → logprob: -6.453418254852295
    9. ':' → logprob: -6.828418254852295
    10. '0' → logprob: -7.078418254852295

Token 845: '.' (ID: 13)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.46277230978012085
    2. ' =' → logprob: -1.7127723693847656
    3. '=' → logprob: -2.3377723693847656
    4. '   ' → logprob: -3.4627723693847656
    5. ':' → logprob: -4.462772369384766
    6. '       ' → logprob: -4.712772369384766
    7. ')' → logprob: -4.837772369384766
    8. '(' → logprob: -4.962772369384766
    9. ' [' → logprob: -5.837772369384766
    10. '=[' → logprob: -5.837772369384766

Token 846: ' We' (ID: 1416)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13428227603435516
    2. '   ' → logprob: -4.134282112121582
    3. '<|end|>' → logprob: -4.259282112121582
    4. '[
' → logprob: -4.384282112121582
    5. 'The' → logprob: -4.509282112121582
    6. '0' → logprob: -4.509282112121582
    7. ')' → logprob: -4.634282112121582
    8. 'Let's' → logprob: -5.259282112121582
    9. '(' → logprob: -5.384282112121582
    10. 'Sorry' → logprob: -5.509282112121582

Token 847: ' defined' (ID: 9113)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15520137548446655
    2. ' =' → logprob: -3.6552014350891113
    3. ' ' → logprob: -3.9052014350891113
    4. '   ' → logprob: -3.9052014350891113
    5. ' have' → logprob: -3.9052014350891113
    6. ' exclude' → logprob: -4.280201435089111
    7. ' are' → logprob: -4.905201435089111
    8. 'exclude' → logprob: -5.280201435089111
    9. '0' → logprob: -5.405201435089111
    10. ' [' → logprob: -5.530201435089111

Token 848: ' _' (ID: 1175)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5027375817298889
    2. ' ' → logprob: -2.502737522125244
    3. '0' → logprob: -3.127737522125244
    4. ' =' → logprob: -3.377737522125244
    5. ' coin' → logprob: -3.627737522125244
    6. ' [' → logprob: -3.752737522125244
    7. '_' → logprob: -4.002737522125244
    8. ' current' → logprob: -4.002737522125244
    9. '7' → logprob: -4.002737522125244
    10. 'self' → logprob: -4.377737522125244

Token 849: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.45858651399612427
    2. '_den' → logprob: -1.2085864543914795
    3. '_' → logprob: -3.7085864543914795
    4. '_counts' → logprob: -4.083586692810059
    5. '_co' → logprob: -4.333586692810059
    6. ')' → logprob: -5.583586692810059
    7. '=' → logprob: -6.333586692810059
    8. '._' → logprob: -6.833586692810059
    9. 'counts' → logprob: -6.958586692810059
    10. '_lengths' → logprob: -7.333586692810059

Token 850: 'ominations' (ID: 169517)
  Prédit: 'ominations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ominations' → logprob: -0.004159837495535612
    2. 'omination' → logprob: -6.129159927368164
    3. '_' → logprob: -6.629159927368164
    4. 'om' → logprob: -8.004159927368164
    5. '_values' → logprob: -10.004159927368164
    6. '_en' → logprob: -10.254159927368164
    7. 'omin' → logprob: -10.504159927368164
    8. '_nom' → logprob: -10.504159927368164
    9. 'ominated' → logprob: -10.754159927368164
    10. '```' → logprob: -10.879159927368164

Token 851: ' with' (ID: 483)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3177224397659302
    2. ' =' → logprob: -1.4427224397659302
    3. '=' → logprob: -3.8177223205566406
    4. '   ' → logprob: -5.442722320556641
    5. '=[' → logprob: -5.817722320556641
    6. ')' → logprob: -6.567722320556641
    7. ':' → logprob: -7.192722320556641
    8. '<|end|>' → logprob: -7.192722320556641
    9. '[
' → logprob: -7.442722320556641
    10. ',' → logprob: -7.567722320556641

Token 852: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.44433239102363586
    2. '[
' → logprob: -1.9443323612213135
    3. '1' → logprob: -2.8193323612213135
    4. 'value' → logprob: -2.9443323612213135
    5. '7' → logprob: -3.0693323612213135
    6. '0' → logprob: -3.4443323612213135
    7. '100' → logprob: -4.944332599639893
    8. ' [' → logprob: -5.194332599639893
    9. ' ' → logprob: -5.819332599639893
    10. 'index' → logprob: -6.444332599639893

Token 853: '100' (ID: 1353)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5799597501754761
    2. '1' → logprob: -1.579959750175476
    3. '[
' → logprob: -2.2049598693847656
    4. '100' → logprob: -2.9549598693847656
    5. 'value' → logprob: -3.4549598693847656
    6. '7' → logprob: -3.8299598693847656
    7. '0' → logprob: -4.579959869384766
    8. '```' → logprob: -5.954959869384766
    9. 'index' → logprob: -6.954959869384766
    10. 'values' → logprob: -7.079959869384766

Token 854: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010771531378850341
    2. '1' → logprob: -10.000107765197754
    3. '[' → logprob: -11.000107765197754
    4. ')' → logprob: -11.625107765197754
    5. '
' → logprob: -11.750107765197754
    6. '000' → logprob: -11.750107765197754
    7. '%' → logprob: -12.375107765197754
    8. ' ' → logprob: -13.125107765197754
    9. '```' → logprob: -13.250107765197754
    10. '   ' → logprob: -13.625107765197754

Token 855: ' first' (ID: 1577)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08603300154209137
    2. ' =' → logprob: -2.9610331058502197
    3. '=' → logprob: -4.586032867431641
    4. '=[' → logprob: -5.211032867431641
    5. ')' → logprob: -5.461032867431641
    6. ',' → logprob: -6.211032867431641
    7. '   ' → logprob: -6.461032867431641
    8. 's' → logprob: -6.711032867431641
    9. '_counts' → logprob: -7.211032867431641
    10. '```' → logprob: -7.461032867431641

Token 856: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0564115010201931
    2. ' =' → logprob: -4.306411266326904
    3. ')' → logprob: -4.931411266326904
    4. ',' → logprob: -5.056411266326904
    5. '<|end|>' → logprob: -5.056411266326904
    6. '   ' → logprob: -5.306411266326904
    7. '[
' → logprob: -5.806411266326904
    8. ':' → logprob: -5.931411266326904
    9. '(' → logprob: -5.931411266326904
    10. '=' → logprob: -6.431411266326904

Token 857: ' then' (ID: 1815)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -1.3887730836868286
    2. ' ' → logprob: -1.8887730836868286
    3. '[' → logprob: -2.013772964477539
    4. ',' → logprob: -2.138772964477539
    5. ' then' → logprob: -3.013772964477539
    6. ' but' → logprob: -3.263772964477539
    7. ' and' → logprob: -3.513772964477539
    8. '500' → logprob: -3.638772964477539
    9. '       ' → logprob: -3.763772964477539
    10. '0' → logprob: -4.013772964477539

Token 858: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.0194918941706419
    2. ' ' → logprob: -4.644491672515869
    3. '[' → logprob: -5.269491672515869
    4. '5' → logprob: -6.269491672515869
    5. '   ' → logprob: -7.144491672515869
    6. '(' → logprob: -7.644491672515869
    7. '0' → logprob: -8.269492149353027
    8. ' [' → logprob: -8.644492149353027
    9. 'coin' → logprob: -8.644492149353027
    10. 'coins' → logprob: -8.644492149353027

Token 859: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.000740538293030113
    2. '[' → logprob: -8.375741004943848
    3. 'Coin' → logprob: -8.500741004943848
    4. ' ' → logprob: -9.250741004943848
    5. 'coins' → logprob: -9.250741004943848
    6. '(' → logprob: -10.500741004943848
    7. '5' → logprob: -10.750741004943848
    8. 'Coins' → logprob: -11.375741004943848
    9. 'coin' → logprob: -11.500741004943848
    10. '   ' → logprob: -11.625741004943848

Token 860: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2223244160413742
    2. ' =' → logprob: -2.3473243713378906
    3. ',' → logprob: -3.2223243713378906
    4. ')' → logprob: -3.4723243713378906
    5. ']' → logprob: -4.597324371337891
    6. '=' → logprob: -5.097324371337891
    7. '   ' → logprob: -5.097324371337891
    8. '<|end|>' → logprob: -6.097324371337891
    9. '=[' → logprob: -6.972324371337891
    10. '[
' → logprob: -7.097324371337891

Token 861: ' then' (ID: 1815)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.3140574097633362
    2. '10' → logprob: -1.6890573501586914
    3. ' ' → logprob: -3.0640573501586914
    4. '1' → logprob: -4.189057350158691
    5. '0' → logprob: -4.814057350158691
    6. '
' → logprob: -5.189057350158691
    7. '   ' → logprob: -5.939057350158691
    8. ',' → logprob: -6.439057350158691
    9. '50' → logprob: -6.814057350158691
    10. '#' → logprob: -6.939057350158691

Token 862: ' others' (ID: 5036)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.00018077615823131055
    2. ' ' → logprob: -8.625181198120117
    3. '   ' → logprob: -14.750181198120117
    4. '50' → logprob: -14.875181198120117
    5. '```' → logprob: -15.125181198120117
    6. '10' → logprob: -17.250181198120117
    7. '1' → logprob: -17.375181198120117
    8. '
' → logprob: -18.125181198120117
    9. '    ' → logprob: -18.250181198120117
    10. ' hundred' → logprob: -19.125181198120117

Token 863: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2103201299905777
    2. ' =' → logprob: -3.210320234298706
    3. ')' → logprob: -3.460320234298706
    4. ',' → logprob: -3.710320234298706
    5. '   ' → logprob: -4.085319995880127
    6. '       ' → logprob: -4.085319995880127
    7. '[
' → logprob: -4.460319995880127
    8. ':' → logprob: -4.585319995880127
    9. '=' → logprob: -4.835319995880127
    10. '(' → logprob: -4.960319995880127

Token 864: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16740736365318298
    2. ' =' → logprob: -3.042407274246216
    3. ')' → logprob: -3.167407274246216
    4. '   ' → logprob: -4.167407512664795
    5. '       ' → logprob: -4.167407512664795
    6. ',' → logprob: -5.167407512664795
    7. '=' → logprob: -5.417407512664795
    8. '(' → logprob: -5.417407512664795
    9. ']' → logprob: -5.417407512664795
    10. '[
' → logprob: -5.917407512664795

Token 865: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.110369086265564
    2. ')' → logprob: -1.610369086265564
    3. '       ' → logprob: -1.610369086265564
    4. '[
' → logprob: -2.4853692054748535
    5. '   ' → logprob: -2.9853692054748535
    6. ',' → logprob: -3.4853692054748535
    7. ':' → logprob: -3.7353692054748535
    8. '<|end|>' → logprob: -4.4853692054748535
    9. '
' → logprob: -4.6103692054748535
    10. '    
' → logprob: -4.6103692054748535

Token 866: ' The' (ID: 623)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4192795753479004
    2. '       ' → logprob: -1.9192795753479004
    3. ' =' → logprob: -2.5442795753479004
    4. ')' → logprob: -2.9192795753479004
    5. '(' → logprob: -4.6692795753479
    6. ',' → logprob: -4.7942795753479
    7. '=' → logprob: -5.0442795753479
    8. '   ' → logprob: -5.0442795753479
    9. '0' → logprob: -5.6692795753479
    10. '```' → logprob: -5.9192795753479

Token 867: ' problem' (ID: 4792)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.056345820426941
    2. ')' → logprob: -1.931345820426941
    3. ' ' → logprob: -2.1813459396362305
    4. ' current' → logprob: -2.5563459396362305
    5. '_' → logprob: -2.9313459396362305
    6. '[' → logprob: -3.1813459396362305
    7. 'coin' → logprob: -3.3063459396362305
    8. '0' → logprob: -3.5563459396362305
    9. ' coin' → logprob: -3.8063459396362305
    10. ' =' → logprob: -4.0563459396362305

Token 868: ' states' (ID: 9407)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4611106216907501
    2. '=' → logprob: -1.4611105918884277
    3. ' is' → logprob: -2.7111105918884277
    4. '[' → logprob: -3.3361105918884277
    5. ')' → logprob: -4.461110591888428
    6. '<|end|>' → logprob: -4.836110591888428
    7. ':' → logprob: -5.961110591888428
    8. 'is' → logprob: -5.961110591888428
    9. '<|end|>' → logprob: -6.836110591888428
    10. '[
' → logprob: -6.961110591888428

Token 869: ' he' (ID: 501)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.29671961069107056
    2. ')' → logprob: -2.296719551086426
    3. ' =' → logprob: -3.296719551086426
    4. '0' → logprob: -3.671719551086426
    5. '[
' → logprob: -4.046719551086426
    6. ' [' → logprob: -4.421719551086426
    7. '(' → logprob: -4.671719551086426
    8. '<|end|>' → logprob: -4.921719551086426
    9. ',' → logprob: -5.171719551086426
    10. '7' → logprob: -5.796719551086426

Token 870: ' starts' (ID: 13217)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36398744583129883
    2. '[' → logprob: -1.6139874458312988
    3. '=' → logprob: -2.738987445831299
    4. '   ' → logprob: -4.738987445831299
    5. ')' → logprob: -5.238987445831299
    6. '0' → logprob: -5.238987445831299
    7. 's' → logprob: -5.613987445831299
    8. ' ' → logprob: -5.613987445831299
    9. '       ' → logprob: -5.988987445831299
    10. '    ' → logprob: -6.363987445831299

Token 871: ' with' (ID: 483)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5046852827072144
    2. ' =' → logprob: -1.3796852827072144
    3. '[' → logprob: -2.129685401916504
    4. ':' → logprob: -4.254685401916504
    5. '0' → logprob: -6.004685401916504
    6. '   ' → logprob: -6.504685401916504
    7. ')' → logprob: -6.879685401916504
    8. '.' → logprob: -7.254685401916504
    9. '       ' → logprob: -7.504685401916504
    10. ',' → logprob: -7.629685401916504

Token 872: ' no' (ID: 860)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.22226141393184662
    2. '[' → logprob: -2.972261428833008
    3. ' self' → logprob: -2.972261428833008
    4. '1' → logprob: -3.472261428833008
    5. 'coin' → logprob: -3.597261428833008
    6. '(' → logprob: -4.847261428833008
    7. '0' → logprob: -4.972261428833008
    8. ' coin' → logprob: -5.222261428833008
    9. ' [' → logprob: -5.347261428833008
    10. ' ' → logprob: -6.472261428833008

Token 873: ' coins' (ID: 28969)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.6548609733581543
    2. '<|end|>' → logprob: -1.6548609733581543
    3. ',' → logprob: -1.9048609733581543
    4. ')' → logprob: -1.9048609733581543
    5. ' ' → logprob: -2.5298609733581543
    6. ' ,' → logprob: -2.7798609733581543
    7. '0' → logprob: -3.0298609733581543
    8. 'coins' → logprob: -3.1548609733581543
    9. ' coins' → logprob: -3.7798609733581543
    10. '[' → logprob: -4.529860973358154

Token 874: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.981792151927948
    2. ')' → logprob: -1.4817922115325928
    3. '<|end|>' → logprob: -1.6067922115325928
    4. ']' → logprob: -2.3567922115325928
    5. ',' → logprob: -3.4817922115325928
    6. '<|end|>' → logprob: -4.481791973114014
    7. '[
' → logprob: -4.731791973114014
    8. '
' → logprob: -4.856791973114014
    9. '   ' → logprob: -5.106791973114014
    10. '(' → logprob: -5.356791973114014

Token 875: ' only' (ID: 1606)
  Prédit: ' but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.8054613471031189
    2. '[' → logprob: -1.8054614067077637
    3. ' so' → logprob: -2.3054614067077637
    4. '<|end|>' → logprob: -2.6804614067077637
    5. ' ' → logprob: -2.8054614067077637
    6. ')' → logprob: -3.5554614067077637
    7. '0' → logprob: -3.9304614067077637
    8. ',' → logprob: -4.305461406707764
    9. ' and' → logprob: -4.430461406707764
    10. '    ' → logprob: -4.430461406707764

Token 876: ' ' (ID: 220)
  Prédit: ' coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coins' → logprob: -1.0738451480865479
    2. 'coins' → logprob: -1.9488451480865479
    3. '(' → logprob: -2.823845148086548
    4. ' current' → logprob: -2.823845148086548
    5. ' (' → logprob: -2.948845148086548
    6. '[' → logprob: -3.073845148086548
    7. 'current' → logprob: -3.073845148086548
    8. 'self' → logprob: -3.323845148086548
    9. ' ' → logprob: -3.573845148086548
    10. '1' → logprob: -3.573845148086548

Token 877: '100' (ID: 1353)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5005923509597778
    2. '100' → logprob: -1.7505923509597778
    3. 'coins' → logprob: -1.8755923509597778
    4. 'b' → logprob: -2.2505922317504883
    5. ' (' → logprob: -2.5005922317504883
    6. '[' → logprob: -2.7505922317504883
    7. ' coins' → logprob: -3.1255922317504883
    8. ' ' → logprob: -3.7505922317504883
    9. ' bills' → logprob: -4.000592231750488
    10. 'current' → logprob: -4.125592231750488

Token 878: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2021077871322632
    2. '[' → logprob: -2.0771079063415527
    3. ')' → logprob: -2.2021079063415527
    4. '   ' → logprob: -2.2021079063415527
    5. ']' → logprob: -2.3271079063415527
    6. '0' → logprob: -2.9521079063415527
    7. ':' → logprob: -3.0771079063415527
    8. ' =' → logprob: -3.3271079063415527
    9. '    
' → logprob: -3.7021079063415527
    10. '
' → logprob: -4.702107906341553

Token 879: '-y' (ID: 18102)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.539512038230896
    2. '<|end|>' → logprob: -1.664512038230896
    3. ']' → logprob: -2.5395121574401855
    4. ')' → logprob: -2.5395121574401855
    5. ',' → logprob: -4.2895121574401855
    6. '<|end|>' → logprob: -4.7895121574401855
    7. '[:-' → logprob: -4.9145121574401855
    8. '[:' → logprob: -5.0395121574401855
    9. '
' → logprob: -5.1645121574401855
    10. 's' → logprob: -5.4145121574401855

Token 880: 'en' (ID: 262)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5336064100265503
    2. 'en' → logprob: -1.6586064100265503
    3. ')' → logprob: -2.90860652923584
    4. '-en' → logprob: -3.53360652923584
    5. '[-' → logprob: -3.53360652923584
    6. ' -' → logprob: -3.65860652923584
    7. '_' → logprob: -4.15860652923584
    8. '_-' → logprob: -4.65860652923584
    9. ')-' → logprob: -5.15860652923584
    10. '-co' → logprob: -5.15860652923584

Token 881: ' bills' (ID: 26846)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6783889532089233
    2. ')' → logprob: -1.1783889532089233
    3. ']' → logprob: -3.178389072418213
    4. '<|end|>' → logprob: -3.178389072418213
    5. '_counts' → logprob: -3.803389072418213
    6. ',' → logprob: -4.053389072418213
    7. '
' → logprob: -4.553389072418213
    8. ')]' → logprob: -4.928389072418213
    9. '[:-' → logprob: -5.428389072418213
    10. 's' → logprob: -5.428389072418213

Token 882: ' unlimited' (ID: 34136)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 883: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1153507232666016
    2. ')' → logprob: -1.3653507232666016
    3. ']' → logprob: -1.4903507232666016
    4. '<|end|>' → logprob: -2.6153507232666016
    5. ',' → logprob: -3.3653507232666016
    6. '[
' → logprob: -4.240350723266602
    7. '   ' → logprob: -4.365350723266602
    8. '
' → logprob: -4.365350723266602
    9. ')]' → logprob: -4.865350723266602
    10. '       ' → logprob: -4.990350723266602

Token 884: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7594979405403137
    2. '       ' → logprob: -1.259497880935669
    3. '<|end|>' → logprob: -2.259497880935669
    4. ')' → logprob: -3.134497880935669
    5. ',' → logprob: -4.009498119354248
    6. '(' → logprob: -4.259498119354248
    7. '[
' → logprob: -4.759498119354248
    8. '   ' → logprob: -4.884498119354248
    9. ':' → logprob: -5.134498119354248
    10. '        
' → logprob: -5.134498119354248

Token 885: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12153592705726624
    2. '[' → logprob: -3.2465360164642334
    3. '
' → logprob: -3.8715360164642334
    4. ')' → logprob: -4.371535778045654
    5. '        
' → logprob: -4.371535778045654
    6. '<|end|>' → logprob: -4.746535778045654
    7. ',' → logprob: -4.996535778045654
    8. '   ' → logprob: -6.371535778045654
    9. '<|end|>' → logprob: -6.496535778045654
    10. ' =' → logprob: -6.996535778045654

Token 886: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4920887053012848
    2. '[' → logprob: -1.3670886754989624
    3. '   ' → logprob: -3.617088794708252
    4. ':' → logprob: -3.742088794708252
    5. '(' → logprob: -3.992088794708252
    6. ')' → logprob: -4.242088794708252
    7. '        
' → logprob: -4.867088794708252
    8. ',' → logprob: -5.117088794708252
    9. ' ' → logprob: -5.117088794708252
    10. '[
' → logprob: -5.367088794708252

Token 887: ' current' (ID: 2208)
  Prédit: ' coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.45848217606544495
    2. 'coin' → logprob: -1.3334821462631226
    3. ')' → logprob: -3.208482265472412
    4. '[' → logprob: -4.458482265472412
    5. '    ' → logprob: -4.708482265472412
    6. '<|end|>' → logprob: -5.458482265472412
    7. '       ' → logprob: -5.583482265472412
    8. 'range' → logprob: -5.708482265472412
    9. '<|end|>' → logprob: -5.708482265472412
    10. ' ' → logprob: -5.958482265472412

Token 888: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.027667203918099403
    2. '_counts' → logprob: -3.652667284011841
    3. '_coin' → logprob: -6.902667045593262
    4. '_' → logprob: -8.277667045593262
    5. '```' → logprob: -10.152667045593262
    6. '\' → logprob: -10.777667045593262
    7. '_tokens' → logprob: -11.027667045593262
    8. '
' → logprob: -12.027667045593262
    9. '`' → logprob: -12.152667045593262
    10. ')_' → logprob: -12.527667045593262

Token 889: 'ins' (ID: 1564)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.2697872221469879
    2. '_' → logprob: -1.8947871923446655
    3. '_counts' → logprob: -3.394787311553955
    4. '_s' → logprob: -3.394787311553955
    5. 's' → logprob: -5.144787311553955
    6. '_in' → logprob: -5.894787311553955
    7. '_
' → logprob: -6.144787311553955
    8. '_tokens' → logprob: -6.644787311553955
    9. '_o' → logprob: -6.769787311553955
    10. 'o' → logprob: -7.144787311553955

Token 890: ' counts' (ID: 28991)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.298279732465744
    2. '[' → logprob: -2.0482797622680664
    3. '<|end|>' → logprob: -2.6732797622680664
    4. '=' → logprob: -3.4232797622680664
    5. ')' → logprob: -4.173279762268066
    6. '<|end|>' → logprob: -5.048279762268066
    7. ':' → logprob: -5.923279762268066
    8. ',' → logprob: -8.048279762268066
    9. ' is' → logprob: -8.048279762268066
    10. '=[' → logprob: -8.173279762268066

Token 891: ' for' (ID: 395)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9084214568138123
    2. ' =' → logprob: -0.9084214568138123
    3. '<|end|>' → logprob: -1.908421516418457
    4. ')' → logprob: -3.908421516418457
    5. '<|end|>' → logprob: -4.533421516418457
    6. '=' → logprob: -5.158421516418457
    7. ':' → logprob: -5.533421516418457
    8. ' ' → logprob: -6.908421516418457
    9. ',' → logprob: -7.283421516418457
    10. '[:-' → logprob: -7.908421516418457

Token 892: ' coins' (ID: 28969)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.041574239730835
    2. ' ' → logprob: -1.041574239730835
    3. '500' → logprob: -2.916574239730835
    4. '0' → logprob: -3.166574239730835
    5. ' coins' → logprob: -3.166574239730835
    6. '6' → logprob: -3.291574239730835
    7. '[' → logprob: -3.291574239730835
    8. '(' → logprob: -4.291574478149414
    9. 'coins' → logprob: -4.416574478149414
    10. ')' → logprob: -4.541574478149414

Token 893: ' excluding' (ID: 76651)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4615386128425598
    2. ' =' → logprob: -1.211538553237915
    3. '<|end|>' → logprob: -3.211538553237915
    4. '<|end|>' → logprob: -4.461538791656494
    5. ')' → logprob: -5.211538791656494
    6. '[:-' → logprob: -5.961538791656494
    7. '=' → logprob: -5.961538791656494
    8. '   ' → logprob: -6.211538791656494
    9. '(' → logprob: -6.711538791656494
    10. ':' → logprob: -6.961538791656494

Token 894: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.8106585144996643
    2. ' the' → logprob: -1.6856584548950195
    3. 'the' → logprob: -1.8106584548950195
    4. ' ' → logprob: -2.1856584548950195
    5. '<|end|>' → logprob: -2.8106584548950195
    6. '0' → logprob: -4.0606584548950195
    7. '1' → logprob: -5.3106584548950195
    8. '[' → logprob: -5.5606584548950195
    9. ')' → logprob: -6.1856584548950195
    10. '   ' → logprob: -6.8106584548950195

Token 895: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.15429078042507172
    2. '0' → logprob: -2.6542906761169434
    3. '[' → logprob: -3.5292906761169434
    4. 'the' → logprob: -3.6542906761169434
    5. ' ' → logprob: -4.904290676116943
    6. '1' → logprob: -6.404290676116943
    7. '<|end|>' → logprob: -6.404290676116943
    8. ')' → logprob: -6.904290676116943
    9. ' the' → logprob: -6.904290676116943
    10. 'coins' → logprob: -7.404290676116943

Token 896: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7336644530296326
    2. '_' → logprob: -1.9836645126342773
    3. '[' → logprob: -2.4836645126342773
    4. '0' → logprob: -2.6086645126342773
    5. '-' → logprob: -3.3586645126342773
    6. ',' → logprob: -3.3586645126342773
    7. '<|end|>' → logprob: -3.3586645126342773
    8. ']' → logprob: -3.6086645126342773
    9. '[-' → logprob: -3.9836645126342773
    10. '   ' → logprob: -4.108664512634277

Token 897: '-y' (ID: 18102)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15288551151752472
    2. ')' → logprob: -3.5278854370117188
    3. ':' → logprob: -3.5278854370117188
    4. ' =' → logprob: -3.6528854370117188
    5. '<|end|>' → logprob: -3.7778854370117188
    6. ',' → logprob: -5.027885437011719
    7. '   ' → logprob: -5.152885437011719
    8. ']' → logprob: -5.277885437011719
    9. '<|end|>' → logprob: -6.027885437011719
    10. '[
' → logprob: -6.152885437011719

Token 898: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.6115303635597229
    2. '-' → logprob: -0.9865303635597229
    3. ',' → logprob: -3.736530303955078
    4. '_' → logprob: -3.986530303955078
    5. '-en' → logprob: -3.986530303955078
    6. '-,' → logprob: -5.611530303955078
    7. ')' → logprob: -6.111530303955078
    8. '[-' → logprob: -6.486530303955078
    9. '```' → logprob: -6.736530303955078
    10. '[' → logprob: -6.861530303955078

Token 899: ' bills' (ID: 26846)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09225654602050781
    2. ' =' → logprob: -2.842256546020508
    3. ')' → logprob: -4.092256546020508
    4. ':' → logprob: -5.967256546020508
    5. '=' → logprob: -6.342256546020508
    6. '   ' → logprob: -6.592256546020508
    7. '       ' → logprob: -6.717256546020508
    8. '<|end|>' → logprob: -6.967256546020508
    9. '[:-' → logprob: -6.967256546020508
    10. ',' → logprob: -7.342256546020508

Token 900: ':' (ID: 25)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06741854548454285
    2. ' =' → logprob: -3.9424185752868652
    3. '<|end|>' → logprob: -4.067418575286865
    4. ')' → logprob: -4.567418575286865
    5. ',' → logprob: -5.317418575286865
    6. ':' → logprob: -5.942418575286865
    7. '<|end|>' → logprob: -6.192418575286865
    8. '[
' → logprob: -6.317418575286865
    9. '(' → logprob: -6.692418575286865
    10. '=' → logprob: -7.067418575286865

Token 901: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1008138433098793
    2. '<|end|>' → logprob: -3.350813865661621
    3. '(' → logprob: -3.975813865661621
    4. ')' → logprob: -4.350813865661621
    5. ' [' → logprob: -4.725813865661621
    6. '[
' → logprob: -5.475813865661621
    7. ' (' → logprob: -5.475813865661621
    8. ' coin' → logprob: -5.850813865661621
    9. '<|end|>' → logprob: -6.225813865661621
    10. ' ' → logprob: -6.475813865661621

Token 902: '6' (ID: 21)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.8198409676551819
    2. '[' → logprob: -1.069840908050537
    3. 'self' → logprob: -2.319840908050537
    4. ')' → logprob: -3.319840908050537
    5. ' coin' → logprob: -3.944840908050537
    6. 'Coin' → logprob: -4.319840908050537
    7. '(' → logprob: -4.694840908050537
    8. '0' → logprob: -4.819840908050537
    9. '1' → logprob: -5.194840908050537
    10. '[:-' → logprob: -5.694840908050537

Token 903: ' coins' (ID: 28969)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6979065537452698
    2. ')' → logprob: -1.322906494140625
    3. ':' → logprob: -2.322906494140625
    4. '<|end|>' → logprob: -3.197906494140625
    5. '   ' → logprob: -3.947906494140625
    6. ']' → logprob: -4.572906494140625
    7. ',' → logprob: -4.572906494140625
    8. 's' → logprob: -4.822906494140625
    9. ' =' → logprob: -5.072906494140625
    10. '[
' → logprob: -5.072906494140625

Token 904: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.26984649896621704
    2. ')' → logprob: -2.0198464393615723
    3. ' =' → logprob: -4.019846439361572
    4. '[
' → logprob: -4.394846439361572
    5. ',' → logprob: -4.644846439361572
    6. 's' → logprob: -4.644846439361572
    7. '<|end|>' → logprob: -4.769846439361572
    8. ']' → logprob: -4.894846439361572
    9. '(' → logprob: -5.269846439361572
    10. ':' → logprob: -5.394846439361572

Token 905: '500' (ID: 3234)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11922961473464966
    2. '[' → logprob: -2.869229555130005
    3. ':' → logprob: -4.494229793548584
    4. '1' → logprob: -4.619229793548584
    5. '0' → logprob: -5.244229793548584
    6. '):' → logprob: -5.369229793548584
    7. '6' → logprob: -5.494229793548584
    8. '   ' → logprob: -5.869229793548584
    9. '<|end|>' → logprob: -5.869229793548584
    10. ' ' → logprob: -5.994229793548584

Token 906: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.130569189786911
    2. ')' → logprob: -2.2555692195892334
    3. '[' → logprob: -5.505568981170654
    4. '),' → logprob: -6.130568981170654
    5. '   ' → logprob: -6.505568981170654
    6. '-' → logprob: -6.505568981170654
    7. ']' → logprob: -7.005568981170654
    8. ',)' → logprob: -7.130568981170654
    9. '```' → logprob: -7.255568981170654
    10. ',-' → logprob: -7.380568981170654

Token 907: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.043047718703746796
    2. ' ' → logprob: -3.1680476665496826
    3. '50' → logprob: -10.293047904968262
    4. '10' → logprob: -11.543047904968262
    5. ',' → logprob: -13.043047904968262
    6. '0' → logprob: -14.043047904968262
    7. '```' → logprob: -14.793047904968262
    8. '
' → logprob: -14.793047904968262
    9. ')' → logprob: -14.918047904968262
    10. '   ' → logprob: -15.043047904968262

Token 908: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005203758832067251
    2. ')' → logprob: -5.755203723907471
    3. ',
' → logprob: -6.880203723907471
    4. ']' → logprob: -8.630204200744629
    5. '   ' → logprob: -8.880204200744629
    6. ')]' → logprob: -9.255204200744629
    7. '),' → logprob: -9.255204200744629
    8. '0' → logprob: -9.505204200744629
    9. '```' → logprob: -9.505204200744629
    10. ' ,' → logprob: -9.880204200744629

Token 909: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.002478627720847726
    2. ' ' → logprob: -6.00247859954834
    3. '   ' → logprob: -13.12747859954834
    4. '    ' → logprob: -15.00247859954834
    5. ',' → logprob: -15.75247859954834
    6. '5' → logprob: -16.002479553222656
    7. '```' → logprob: -16.002479553222656
    8. '  ' → logprob: -16.877479553222656
    9. ' ' → logprob: -17.377479553222656
    10. '	' → logprob: -17.377479553222656

Token 910: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014492794871330261
    2. '0' → logprob: -7.751449108123779
    3. '),' → logprob: -8.251449584960938
    4. ',
' → logprob: -8.501449584960938
    5. '   ' → logprob: -9.001449584960938
    6. ')' → logprob: -9.251449584960938
    7. ' ,' → logprob: -9.376449584960938
    8. '```' → logprob: -9.501449584960938
    9. ',None' → logprob: -10.376449584960938
    10. '1' → logprob: -11.001449584960938

Token 911: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0031949470285326242
    2. ' ' → logprob: -5.753194808959961
    3. '```' → logprob: -11.628194808959961
    4. '25' → logprob: -12.878194808959961
    5. '   ' → logprob: -13.378194808959961
    6. '20' → logprob: -13.503194808959961
    7. '
' → logprob: -14.128194808959961
    8. ')' → logprob: -14.503194808959961
    9. '5' → logprob: -15.378194808959961
    10. '  ' → logprob: -15.753194808959961

Token 912: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003112711710855365
    2. ',
' → logprob: -9.125310897827148
    3. ')' → logprob: -10.000310897827148
    4. '   ' → logprob: -10.250310897827148
    5. '```' → logprob: -10.625310897827148
    6. '),' → logprob: -10.750310897827148
    7. '5' → logprob: -11.000310897827148
    8. ' ,' → logprob: -11.000310897827148
    9. '0' → logprob: -11.250310897827148
    10. '
' → logprob: -11.875310897827148

Token 913: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0076973638497292995
    2. ' ' → logprob: -4.882697582244873
    3. '```' → logprob: -9.382697105407715
    4. '
' → logprob: -12.507697105407715
    5. '   ' → logprob: -13.507697105407715
    6. '``' → logprob: -14.007697105407715
    7. '0' → logprob: -15.757697105407715
    8. '1' → logprob: -15.757697105407715
    9. ',' → logprob: -15.882697105407715
    10. '       ' → logprob: -15.882697105407715

Token 914: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013011827832087874
    2. '```' → logprob: -10.000129699707031
    3. ')' → logprob: -11.000129699707031
    4. ',
' → logprob: -11.125129699707031
    5. ' ,' → logprob: -11.250129699707031
    6. '0' → logprob: -11.250129699707031
    7. '   ' → logprob: -11.625129699707031
    8. '),' → logprob: -12.625129699707031
    9. ',None' → logprob: -12.750129699707031
    10. ' ' → logprob: -13.125129699707031

Token 915: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04413929209113121
    2. ' ' → logprob: -3.1691393852233887
    3. '```' → logprob: -6.794139385223389
    4. '``' → logprob: -12.04413890838623
    5. '0' → logprob: -12.29413890838623
    6. '
' → logprob: -12.91913890838623
    7. '5' → logprob: -13.54413890838623
    8. '   ' → logprob: -13.79413890838623
    9. ' ' → logprob: -13.91913890838623
    10. '`' → logprob: -14.41913890838623

Token 916: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.041546307504177094
    2. ']' → logprob: -3.79154634475708
    3. '])' → logprob: -4.79154634475708
    4. ')]' → logprob: -5.41654634475708
    5. ')])' → logprob: -5.91654634475708
    6. ',' → logprob: -6.79154634475708
    7. ')
' → logprob: -8.166545867919922
    8. '])]' → logprob: -8.916545867919922
    9. '```' → logprob: -9.041545867919922
    10. '   ' → logprob: -9.166545867919922

Token 917: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2387834787368774
    2. '       ' → logprob: -1.7387834787368774
    3. '[' → logprob: -2.113783359527588
    4. ',' → logprob: -2.113783359527588
    5. ' =' → logprob: -2.488783359527588
    6. ')' → logprob: -2.988783359527588
    7. '<|end|>' → logprob: -2.988783359527588
    8. '
' → logprob: -3.738783359527588
    9. '[
' → logprob: -3.988783359527588
    10. ':
' → logprob: -4.363783359527588

Token 918: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3042117357254028
    2. '[' → logprob: -1.3042117357254028
    3. ')' → logprob: -2.3042116165161133
    4. ',' → logprob: -2.3042116165161133
    5. ' =' → logprob: -2.4292116165161133
    6. '       ' → logprob: -3.1792116165161133
    7. '<|end|>' → logprob: -3.5542116165161133
    8. '(' → logprob: -4.179211616516113
    9. ']' → logprob: -4.679211616516113
    10. '=' → logprob: -4.679211616516113

Token 919: ' Then' (ID: 7801)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4778936803340912
    2. ')' → logprob: -2.352893590927124
    3. '       ' → logprob: -2.727893590927124
    4. ',' → logprob: -3.602893590927124
    5. ' =' → logprob: -3.602893590927124
    6. '(' → logprob: -3.602893590927124
    7. '[
' → logprob: -3.727893590927124
    8. '<|end|>' → logprob: -3.727893590927124
    9. ':' → logprob: -3.977893590927124
    10. '   ' → logprob: -4.602893829345703

Token 920: ' coin' (ID: 22179)
  Prédit: ' coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.10055137425661087
    2. 'coin' → logprob: -2.4755513668060303
    3. ' current' → logprob: -6.225551605224609
    4. '[' → logprob: -6.350551605224609
    5. ' self' → logprob: -6.475551605224609
    6. ' [' → logprob: -6.850551605224609
    7. 'self' → logprob: -7.100551605224609
    8. 'current' → logprob: -7.475551605224609
    9. ')' → logprob: -7.475551605224609
    10. '    ' → logprob: -8.10055160522461

Token 921: '_counts' (ID: 61971)
  Prédit: '_limits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limits' → logprob: -0.09212522208690643
    2. '_counts' → logprob: -2.467125177383423
    3. '_types' → logprob: -6.217125415802002
    4. '_' → logprob: -7.592125415802002
    5. 's' → logprob: -7.592125415802002
    6. '_s' → logprob: -9.967124938964844
    7. '_limit' → logprob: -10.467124938964844
    8. '_ranges' → logprob: -10.842124938964844
    9. ' _' → logprob: -11.592124938964844
    10. '_type' → logprob: -11.717124938964844

Token 922: ' length' (ID: 5517)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05223517492413521
    2. '[' → logprob: -3.6772351264953613
    3. '=' → logprob: -3.8022351264953613
    4. ')' → logprob: -6.552235126495361
    5. ':' → logprob: -7.427235126495361
    6. '<|end|>' → logprob: -8.30223560333252
    7. '<|end|>' → logprob: -8.42723560333252
    8. '=[' → logprob: -8.92723560333252
    9. ' =[' → logprob: -9.42723560333252
    10. '[:' → logprob: -9.80223560333252

Token 923: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5582304000854492
    2. '=' → logprob: -1.6832304000854492
    3. '[' → logprob: -1.6832304000854492
    4. ')' → logprob: -4.183230400085449
    5. ':' → logprob: -4.683230400085449
    6. ' ' → logprob: -4.933230400085449
    7. '(' → logprob: -5.308230400085449
    8. ' is' → logprob: -5.308230400085449
    9. '6' → logprob: -5.683230400085449
    10. '<|end|>' → logprob: -6.433230400085449

Token 924: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.00012928384239785373
    2. ' ' → logprob: -9.125129699707031
    3. 'len' → logprob: -11.250129699707031
    4. '7' → logprob: -12.000129699707031
    5. '```' → logprob: -14.625129699707031
    6. '   ' → logprob: -15.375129699707031
    7. ' len' → logprob: -15.875129699707031
    8. '     ' → logprob: -17.37512969970703
    9. '  ' → logprob: -17.43762969970703
    10. ' six' → logprob: -17.56262969970703

Token 925: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0007107630372047424
    2. 'len' → logprob: -7.250710964202881
    3. '7' → logprob: -14.375710487365723
    4. '```' → logprob: -16.00071144104004
    5. ' len' → logprob: -16.62571144104004
    6. ' ' → logprob: -17.25071144104004
    7. '(len' → logprob: -17.93821144104004
    8. '=len' → logprob: -18.37571144104004
    9. '[len' → logprob: -18.43821144104004
    10. '۶' → logprob: -18.62571144104004

Token 926: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.701981782913208
    2. ':' → logprob: -1.701981782913208
    3. ' =' → logprob: -2.701981782913208
    4. ')' → logprob: -3.201981782913208
    5. ',' → logprob: -3.326981782913208
    6. '(' → logprob: -3.451981782913208
    7. '[
' → logprob: -3.451981782913208
    8. '<|end|>' → logprob: -3.826981782913208
    9. '       ' → logprob: -4.201981544494629
    10. '=' → logprob: -4.201981544494629

Token 927: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4702540934085846
    2. '       ' → logprob: -2.0952541828155518
    3. ')' → logprob: -2.9702541828155518
    4. ',' → logprob: -3.0952541828155518
    5. '[
' → logprob: -3.2202541828155518
    6. ':' → logprob: -3.8452541828155518
    7. '(' → logprob: -3.9702541828155518
    8. '   ' → logprob: -4.095253944396973
    9. '```' → logprob: -4.720253944396973
    10. '.' → logprob: -4.970253944396973

Token 928: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.24260675907135
    2. ':' → logprob: -1.36760675907135
    3. '[' → logprob: -1.61760675907135
    4. ' =' → logprob: -2.3676066398620605
    5. ',' → logprob: -3.1176066398620605
    6. ')' → logprob: -3.4926066398620605
    7. '=' → logprob: -3.8676066398620605
    8. '   ' → logprob: -4.3676066398620605
    9. '[
' → logprob: -5.1176066398620605
    10. ':
' → logprob: -5.3676066398620605

Token 929: ' So' (ID: 2632)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5473583936691284
    2. ' =' → logprob: -1.2973583936691284
    3. '=' → logprob: -2.797358512878418
    4. ':' → logprob: -3.422358512878418
    5. '       ' → logprob: -3.922358512878418
    6. '   ' → logprob: -4.797358512878418
    7. ')' → logprob: -4.922358512878418
    8. '(' → logprob: -5.297358512878418
    9. ',' → logprob: -5.797358512878418
    10. '6' → logprob: -6.422358512878418

Token 930: ' in' (ID: 306)
  Prédit: ' coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.5326725840568542
    2. 'coin' → logprob: -1.032672643661499
    3. '[' → logprob: -4.40767240524292
    4. 'len' → logprob: -4.78267240524292
    5. ' [' → logprob: -4.78267240524292
    6. '    ' → logprob: -4.90767240524292
    7. '       ' → logprob: -5.15767240524292
    8. '   ' → logprob: -5.65767240524292
    9. ' len' → logprob: -5.78267240524292
    10. ' =' → logprob: -7.03267240524292

Token 931: ' code' (ID: 3490)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.689207136631012
    2. 'coin' → logprob: -1.3142070770263672
    3. 'self' → logprob: -2.939207077026367
    4. ' range' → logprob: -2.939207077026367
    5. ' coin' → logprob: -2.939207077026367
    6. '[' → logprob: -3.189207077026367
    7. 'len' → logprob: -5.564207077026367
    8. '[
' → logprob: -5.564207077026367
    9. '   ' → logprob: -5.814207077026367
    10. ')' → logprob: -5.814207077026367

Token 932: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07225757092237473
    2. '=' → logprob: -2.8222575187683105
    3. ':' → logprob: -5.1972575187683105
    4. '       ' → logprob: -6.6972575187683105
    5. '   ' → logprob: -6.6972575187683105
    6. '[' → logprob: -6.8222575187683105
    7. '=[]' → logprob: -8.697257995605469
    8. ' is' → logprob: -8.822257995605469
    9. ',' → logprob: -9.197257995605469
    10. '```' → logprob: -9.697257995605469

Token 933: ' coin' (ID: 22179)
  Prédit: ' coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.659721851348877
    2. 'coin' → logprob: -1.034721851348877
    3. '       ' → logprob: -2.159721851348877
    4. '[' → logprob: -5.784721851348877
    5. '```' → logprob: -5.784721851348877
    6. ' =' → logprob: -6.409721851348877
    7. '        
' → logprob: -7.159721851348877
    8. ' [' → logprob: -7.534721851348877
    9. '   ' → logprob: -7.659721851348877
    10. 'current' → logprob: -8.159721374511719

Token 934: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.4753120541572571
    2. '_limits' → logprob: -0.9753120541572571
    3. '_types' → logprob: -6.725312232971191
    4. '_' → logprob: -10.975312232971191
    5. 'limits' → logprob: -11.475312232971191
    6. '_limit' → logprob: -13.600312232971191
    7. '_ranges' → logprob: -13.725312232971191
    8. 'Limits' → logprob: -14.225312232971191
    9. 'counts' → logprob: -14.350312232971191
    10. '_lengths' → logprob: -14.475312232971191

Token 935: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2019553780555725
    2. '=' → logprob: -1.7019553184509277
    3. '[' → logprob: -8.701955795288086
    4. ')' → logprob: -9.576955795288086
    5. ' =[' → logprob: -9.576955795288086
    6. '=[' → logprob: -10.076955795288086
    7. ':' → logprob: -10.076955795288086
    8. ' is' → logprob: -10.326955795288086
    9. '=[]' → logprob: -10.576955795288086
    10. '   ' → logprob: -10.701955795288086

Token 936: ' tuple' (ID: 31311)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002439467643853277
    2. ' self' → logprob: -9.375244140625
    3. 'list' → logprob: -9.500244140625
    4. 'coin' → logprob: -9.750244140625
    5. 'tuple' → logprob: -11.375244140625
    6. '(self' → logprob: -12.250244140625
    7. '   ' → logprob: -12.375244140625
    8. '[' → logprob: -13.250244140625
    9. '(' → logprob: -13.625244140625
    10. '[self' → logprob: -14.125244140625

Token 937: ' of' (ID: 328)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.17969511449337006
    2. '(len' → logprob: -2.0546951293945312
    3. '(' → logprob: -3.9296951293945312
    4. 'len' → logprob: -5.429695129394531
    5. '[' → logprob: -5.929695129394531
    6. '([' → logprob: -6.054695129394531
    7. 'self' → logprob: -6.179695129394531
    8. '(C' → logprob: -6.429695129394531
    9. '[len' → logprob: -6.554695129394531
    10. '[self' → logprob: -7.179695129394531

Token 938: ' counts' (ID: 28991)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.40452811121940613
    2. 'self' → logprob: -1.4045281410217285
    3. '6' → logprob: -3.5295281410217285
    4. '(len' → logprob: -4.4045281410217285
    5. 'length' → logprob: -4.4045281410217285
    6. '[' → logprob: -4.6545281410217285
    7. '(self' → logprob: -5.5295281410217285
    8. '[len' → logprob: -5.6545281410217285
    9. '[count' → logprob: -6.0295281410217285
    10. 'counts' → logprob: -6.1545281410217285

Token 939: ' for' (ID: 395)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0903420448303223
    2. ')' → logprob: -1.3403420448303223
    3. ':' → logprob: -1.4653420448303223
    4. '(' → logprob: -3.0903420448303223
    5. ',' → logprob: -3.3403420448303223
    6. '<|end|>' → logprob: -3.8403420448303223
    7. '   ' → logprob: -4.590342044830322
    8. '       ' → logprob: -4.715342044830322
    9. '.' → logprob: -4.715342044830322
    10. ' =' → logprob: -4.840342044830322

Token 940: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8019774556159973
    2. 'Coin' → logprob: -1.4269773960113525
    3. '500' → logprob: -2.1769773960113525
    4. '[' → logprob: -2.4269773960113525
    5. 'coin' → logprob: -2.8019773960113525
    6. 'the' → logprob: -4.051977634429932
    7. 'self' → logprob: -4.551977634429932
    8. '(self' → logprob: -4.926977634429932
    9. '(C' → logprob: -5.301977634429932
    10. '6' → logprob: -5.676977634429932

Token 941: '500' (ID: 3234)
  Prédit: 'Coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' → logprob: -0.5122426152229309
    2. '(' → logprob: -1.3872425556182861
    3. '[' → logprob: -3.012242555618286
    4. 'coin' → logprob: -3.387242555618286
    5. 'the' → logprob: -3.887242555618286
    6. 'self' → logprob: -4.262242794036865
    7. '500' → logprob: -4.512242794036865
    8. '6' → logprob: -4.637242794036865
    9. '(C' → logprob: -5.262242794036865
    10. '(self' → logprob: -6.012242794036865

Token 942: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7676203846931458
    2. 's' → logprob: -0.8926203846931458
    3. '[' → logprob: -2.767620325088501
    4. ',' → logprob: -3.767620325088501
    5. '<|end|>' → logprob: -4.76762056350708
    6. ']' → logprob: -5.39262056350708
    7. '_' → logprob: -5.64262056350708
    8. '   ' → logprob: -5.89262056350708
    9. '_s' → logprob: -6.01762056350708
    10. ':' → logprob: -6.26762056350708

Token 943: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0010343570029363036
    2. ' ' → logprob: -6.876034259796143
    3. '   ' → logprob: -13.6260347366333
    4. '
' → logprob: -16.376033782958984
    5. '50' → logprob: -16.501033782958984
    6. ',' → logprob: -16.751033782958984
    7. '```' → logprob: -17.001033782958984
    8. '  ' → logprob: -17.251033782958984
    9. '       ' → logprob: -17.626033782958984
    10. '    ' → logprob: -18.376033782958984

Token 944: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4337567985057831
    2. ',' → logprob: -1.5587568283081055
    3. 's' → logprob: -3.0587568283081055
    4. '[' → logprob: -3.3087568283081055
    5. '<|end|>' → logprob: -3.8087568283081055
    6. ']' → logprob: -4.6837568283081055
    7. '```' → logprob: -5.3087568283081055
    8. '_' → logprob: -5.5587568283081055
    9. '   ' → logprob: -6.0587568283081055
    10. '=' → logprob: -6.5587568283081055

Token 945: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.00038980069803074
    2. ' ' → logprob: -7.875389575958252
    3. '   ' → logprob: -11.87539005279541
    4. '```' → logprob: -13.62539005279541
    5. '
' → logprob: -14.87539005279541
    6. '`' → logprob: -15.87539005279541
    7. '    ' → logprob: -16.000389099121094
    8. '500' → logprob: -16.000389099121094
    9. '  ' → logprob: -16.125389099121094
    10. '[' → logprob: -16.312889099121094

Token 946: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29630282521247864
    2. '[' → logprob: -2.0463027954101562
    3. 's' → logprob: -2.7963027954101562
    4. ',' → logprob: -4.046302795410156
    5. '_counts' → logprob: -4.671302795410156
    6. '_' → logprob: -5.171302795410156
    7. '(' → logprob: -5.171302795410156
    8. '<|end|>' → logprob: -5.671302795410156
    9. '   ' → logprob: -5.921302795410156
    10. '```' → logprob: -5.921302795410156

Token 947: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0038110031746327877
    2. '5' → logprob: -5.628810882568359
    3. '```' → logprob: -8.87881088256836
    4. ' ' → logprob: -10.00381088256836
    5. '   ' → logprob: -11.00381088256836
    6. '``' → logprob: -12.00381088256836
    7. '
' → logprob: -13.12881088256836
    8. '20' → logprob: -15.00381088256836
    9. '    ' → logprob: -15.75381088256836
    10. '1' → logprob: -15.75381088256836

Token 948: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13535869121551514
    2. ')' → logprob: -2.5103588104248047
    3. '6' → logprob: -4.135358810424805
    4. '[' → logprob: -4.885358810424805
    5. 's' → logprob: -5.010358810424805
    6. ' ,' → logprob: -5.510358810424805
    7. '...' → logprob: -6.385358810424805
    8. ',
' → logprob: -6.635358810424805
    9. '0' → logprob: -6.760358810424805
    10. '   ' → logprob: -6.760358810424805

Token 949: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0010070850839838386
    2. ' ' → logprob: -7.001007080078125
    3. '```' → logprob: -9.501007080078125
    4. '   ' → logprob: -12.001007080078125
    5. '``' → logprob: -12.376007080078125
    6. '`' → logprob: -12.751007080078125
    7. '
' → logprob: -13.001007080078125
    8. ',' → logprob: -13.876007080078125
    9. '    ' → logprob: -14.126007080078125
    10. '       ' → logprob: -14.251007080078125

Token 950: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026552822440862656
    2. '6' → logprob: -3.77655291557312
    3. ')' → logprob: -6.776552677154541
    4. '0' → logprob: -7.026552677154541
    5. '[' → logprob: -7.901552677154541
    6. ',
' → logprob: -8.6515531539917
    7. ' ,' → logprob: -9.0265531539917
    8. '```' → logprob: -9.1515531539917
    9. '7' → logprob: -9.2765531539917
    10. ' ' → logprob: -9.9015531539917

Token 951: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027105586603283882
    2. '5' → logprob: -3.9021055698394775
    3. ' ' → logprob: -5.652105808258057
    4. 'coin' → logprob: -6.527105808258057
    5. '```' → logprob: -6.902105808258057
    6. '0' → logprob: -7.652105808258057
    7. ' coin' → logprob: -10.527105331420898
    8. '20' → logprob: -11.652105331420898
    9. '`' → logprob: -11.777105331420898
    10. '``' → logprob: -12.027105331420898

Token 952: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2329071760177612
    2. '[' → logprob: -1.3579071760177612
    3. ':' → logprob: -1.8579071760177612
    4. ')' → logprob: -2.107907295227051
    5. '=' → logprob: -2.607907295227051
    6. 's' → logprob: -3.982907295227051
    7. ',' → logprob: -4.107907295227051
    8. '       ' → logprob: -4.232907295227051
    9. '(' → logprob: -4.607907295227051
    10. '   ' → logprob: -5.107907295227051

Token 953: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3181723356246948
    2. '[' → logprob: -1.3181723356246948
    3. ')' → logprob: -1.6931723356246948
    4. ',' → logprob: -2.0681724548339844
    5. '(' → logprob: -2.8181724548339844
    6. ' =' → logprob: -4.068172454833984
    7. '       ' → logprob: -4.068172454833984
    8. '=' → logprob: -4.443172454833984
    9. '   ' → logprob: -4.818172454833984
    10. '<|end|>' → logprob: -4.818172454833984

Token 954: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3104149103164673
    2. ')' → logprob: -1.6854149103164673
    3. '[' → logprob: -1.6854149103164673
    4. '       ' → logprob: -2.4354147911071777
    5. ',' → logprob: -2.5604147911071777
    6. '(' → logprob: -2.9354147911071777
    7. '=' → logprob: -3.1854147911071777
    8. ' =' → logprob: -3.3104147911071777
    9. '   ' → logprob: -4.310414791107178
    10. '(
' → logprob: -5.185414791107178

Token 955: ' Our' (ID: 5339)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1896154880523682
    2. ':' → logprob: -1.3146154880523682
    3. ')' → logprob: -1.5646154880523682
    4. '(' → logprob: -2.564615488052368
    5. ' =' → logprob: -3.439615488052368
    6. '=' → logprob: -3.689615488052368
    7. ',' → logprob: -3.689615488052368
    8. '):' → logprob: -4.064615249633789
    9. '       ' → logprob: -4.189615249633789
    10. '   ' → logprob: -4.564615249633789

Token 956: ' payment' (ID: 9277)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.4420533180236816
    2. 'coin' → logprob: -1.5670533180236816
    3. '```' → logprob: -2.1920533180236816
    4. ' coin' → logprob: -2.3170533180236816
    5. ')' → logprob: -2.3170533180236816
    6. ' current' → logprob: -2.8170533180236816
    7. 'token' → logprob: -2.9420533180236816
    8. '_coin' → logprob: -4.192053318023682
    9. ' next' → logprob: -4.567053318023682
    10. '   ' → logprob: -4.692053318023682

Token 957: ' state' (ID: 2608)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.6729140281677246
    2. '_' → logprob: -0.7979140281677246
    3. '_strategy' → logprob: -4.297914028167725
    4. 's' → logprob: -4.547914028167725
    5. ' _' → logprob: -5.047914028167725
    6. ')' → logprob: -5.422914028167725
    7. '_types' → logprob: -7.172914028167725
    8. '_s' → logprob: -7.297914028167725
    9. '[' → logprob: -7.547914028167725
    10. ')_' → logprob: -7.797914028167725

Token 958: ' has' (ID: 853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24684599041938782
    2. '=' → logprob: -2.6218459606170654
    3. '[' → logprob: -3.1218459606170654
    4. ')' → logprob: -3.3718459606170654
    5. ':' → logprob: -3.3718459606170654
    6. 's' → logprob: -3.9968459606170654
    7. '<|end|>' → logprob: -5.7468461990356445
    8. '   ' → logprob: -5.8718461990356445
    9. ',' → logprob: -6.7468461990356445
    10. ' is' → logprob: -7.3718461990356445

Token 959: ' no' (ID: 860)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4707471430301666
    2. '6' → logprob: -1.7207471132278442
    3. 'len' → logprob: -2.595747232437134
    4. '   ' → logprob: -3.095747232437134
    5. ' self' → logprob: -3.970747232437134
    6. '       ' → logprob: -4.095746994018555
    7. '[' → logprob: -4.970746994018555
    8. 'coin' → logprob: -5.220746994018555
    9. ' ' → logprob: -5.345746994018555
    10. '           ' → logprob: -5.470746994018555

Token 960: ' count' (ID: 3605)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5755631923675537
    2. ')' → logprob: -2.7005631923675537
    3. '_co' → logprob: -2.7005631923675537
    4. 'current' → logprob: -3.3255631923675537
    5. ' ' → logprob: -3.7005631923675537
    6. '_coin' → logprob: -3.8255631923675537
    7. '<|end|>' → logprob: -3.9505631923675537
    8. '500' → logprob: -4.075563430786133
    9. '`' → logprob: -4.450563430786133
    10. ',' → logprob: -4.450563430786133

Token 961: ' for' (ID: 395)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1827249974012375
    2. ')' → logprob: -2.057724952697754
    3. '[' → logprob: -4.557724952697754
    4. '<|end|>' → logprob: -4.682724952697754
    5. ' ' → logprob: -5.932724952697754
    6. ' =' → logprob: -6.432724952697754
    7. ',' → logprob: -6.432724952697754
    8. '   ' → logprob: -6.432724952697754
    9. ' )' → logprob: -6.682724952697754
    10. '(' → logprob: -6.682724952697754

Token 962: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.2953595817089081
    2. ' ' → logprob: -1.6703596115112305
    3. 'the' → logprob: -3.2953596115112305
    4. ' the' → logprob: -4.1703596115112305
    5. '500' → logprob: -5.7953596115112305
    6. 'coins' → logprob: -5.7953596115112305
    7. '[' → logprob: -6.5453596115112305
    8. ' coins' → logprob: -6.6703596115112305
    9. '   ' → logprob: -7.0453596115112305
    10. 'coin' → logprob: -7.1703596115112305

Token 963: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.041867490857839584
    2. 'the' → logprob: -4.666867256164551
    3. 'b' → logprob: -4.916867256164551
    4. 'coins' → logprob: -5.166867256164551
    5. '500' → logprob: -5.291867256164551
    6. ' ' → logprob: -5.291867256164551
    7. '[' → logprob: -6.666867256164551
    8. '1' → logprob: -6.791867256164551
    9. 'coin' → logprob: -6.916867256164551
    10. ')' → logprob: -7.041867256164551

Token 964: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016978738829493523
    2. '_' → logprob: -4.266978740692139
    3. ')' → logprob: -6.141978740692139
    4. '1' → logprob: -9.01697826385498
    5. '%' → logprob: -9.14197826385498
    6. ',' → logprob: -9.26697826385498
    7. '),' → logprob: -9.89197826385498
    8. '_counts' → logprob: -10.26697826385498
    9. '#' → logprob: -10.64197826385498
    10. '_)' → logprob: -11.01697826385498

Token 965: '-y' (ID: 18102)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8068813681602478
    2. '[' → logprob: -1.3068814277648926
    3. ':' → logprob: -2.6818814277648926
    4. 's' → logprob: -3.0568814277648926
    5. ' =' → logprob: -3.1818814277648926
    6. ',' → logprob: -3.5568814277648926
    7. '<|end|>' → logprob: -3.8068814277648926
    8. ']' → logprob: -4.306881427764893
    9. '   ' → logprob: -4.431881427764893
    10. '(' → logprob: -4.806881427764893

Token 966: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.4871762990951538
    2. ')' → logprob: -1.4871762990951538
    3. '-en' → logprob: -2.7371764183044434
    4. ',' → logprob: -3.4871764183044434
    5. '_' → logprob: -3.7371764183044434
    6. '-' → logprob: -5.112176418304443
    7. 'tokens' → logprob: -5.237176418304443
    8. '_en' → logprob: -5.737176418304443
    9. 'coins' → logprob: -5.862176418304443
    10. ' ' → logprob: -6.237176418304443

Token 967: ' bills' (ID: 26846)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8591163158416748
    2. '[' → logprob: -1.6091163158416748
    3. ')' → logprob: -1.8591163158416748
    4. ' =' → logprob: -2.234116315841675
    5. ':' → logprob: -3.109116315841675
    6. ',' → logprob: -4.984116554260254
    7. '=' → logprob: -5.109116554260254
    8. '<|end|>' → logprob: -5.234116554260254
    9. '_counts' → logprob: -5.234116554260254
    10. ']' → logprob: -5.734116554260254

Token 968: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5175372958183289
    2. ')' → logprob: -1.5175373554229736
    3. '(' → logprob: -3.1425373554229736
    4. ' =' → logprob: -3.1425373554229736
    5. ':' → logprob: -3.6425373554229736
    6. ',' → logprob: -4.0175371170043945
    7. '=' → logprob: -4.5175371170043945
    8. '       ' → logprob: -4.6425371170043945
    9. '   ' → logprob: -4.8925371170043945
    10. 's' → logprob: -5.0175371170043945

Token 969: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30426594614982605
    2. '[' → logprob: -2.6792659759521484
    3. '<|end|>' → logprob: -3.0542659759521484
    4. ',' → logprob: -3.4292659759521484
    5. ' =' → logprob: -3.5542659759521484
    6. ')' → logprob: -4.054265975952148
    7. '        
' → logprob: -4.054265975952148
    8. ':' → logprob: -4.429265975952148
    9. '<|end|>' → logprob: -4.929265975952148
    10. '(' → logprob: -5.179265975952148

Token 970: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06974789500236511
    2. '[' → logprob: -3.8197479248046875
    3. '        
' → logprob: -4.3197479248046875
    4. ')' → logprob: -4.4447479248046875
    5. ',' → logprob: -4.8197479248046875
    6. '    
' → logprob: -6.6947479248046875
    7. '<|end|>' → logprob: -6.6947479248046875
    8. '   ' → logprob: -6.8197479248046875
    9. '
' → logprob: -6.8197479248046875
    10. '[
' → logprob: -6.9447479248046875

Token 971: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6900308728218079
    2. '[' → logprob: -1.190030813217163
    3. ' =' → logprob: -3.065030813217163
    4. ':' → logprob: -3.440030813217163
    5. ')' → logprob: -3.565030813217163
    6. ',' → logprob: -3.690030813217163
    7. '(' → logprob: -4.565031051635742
    8. '   ' → logprob: -4.565031051635742
    9. '           ' → logprob: -5.315031051635742
    10. '=' → logprob: -5.315031051635742

Token 972: ' coin' (ID: 22179)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.9806064963340759
    2. ' coin' → logprob: -1.3556065559387207
    3. '       ' → logprob: -1.4806065559387207
    4. '[' → logprob: -2.7306065559387207
    5. '   ' → logprob: -4.105606555938721
    6. 'len' → logprob: -4.480606555938721
    7. ')' → logprob: -5.230606555938721
    8. '[]' → logprob: -5.605606555938721
    9. '        ' → logprob: -5.730606555938721
    10. '           ' → logprob: -5.730606555938721

Token 973: '_types' (ID: 21515)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.0030233447905629873
    2. 's' → logprob: -6.628023147583008
    3. '_limits' → logprob: -6.878023147583008
    4. '_types' → logprob: -8.128023147583008
    5. '_' → logprob: -8.503023147583008
    6. '_s' → logprob: -9.003023147583008
    7. '_lengths' → logprob: -11.503023147583008
    8. '```' → logprob: -11.878023147583008
    9. ')_' → logprob: -12.128023147583008
    10. '_sizes' → logprob: -12.628023147583008

Token 974: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1275934875011444
    2. '=' → logprob: -2.127593517303467
    3. '<|end|>' → logprob: -8.252593040466309
    4. '[' → logprob: -8.502593040466309
    5. '<|end|>' → logprob: -9.752593040466309
    6. ' =[' → logprob: -10.627593040466309
    7. '=[' → logprob: -10.627593040466309
    8. '=[]' → logprob: -11.127593040466309
    9. ':' → logprob: -11.127593040466309
    10. ' is' → logprob: -11.127593040466309

Token 975: ' denominations' (ID: 191046)
  Prédit: 'Coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Coin' → logprob: -0.08123546093702316
    2. 'coin' → logprob: -2.581235408782959
    3. '[' → logprob: -6.456235408782959
    4. ' Coin' → logprob: -7.831235408782959
    5. ' coin' → logprob: -8.581235885620117
    6. '   ' → logprob: -9.331235885620117
    7. '[
' → logprob: -10.081235885620117
    8. '[C' → logprob: -11.331235885620117
    9. '_coin' → logprob: -11.831235885620117
    10. '       ' → logprob: -12.518735885620117

Token 976: ' from' (ID: 591)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.041639167815446854
    2. ' =' → logprob: -3.5416390895843506
    3. '=' → logprob: -5.66663932800293
    4. '<|end|>' → logprob: -5.91663932800293
    5. ':' → logprob: -6.66663932800293
    6. 's' → logprob: -6.79163932800293
    7. '<|end|>' → logprob: -7.54163932800293
    8. '   ' → logprob: -7.54163932800293
    9. '```' → logprob: -7.79163932800293
    10. ',' → logprob: -8.04163932800293

Token 977: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026705119758844376
    2. 'Coin' → logprob: -3.651705026626587
    3. 'index' → logprob: -8.651704788208008
    4. 'coin' → logprob: -10.026704788208008
    5. '[' → logprob: -10.026704788208008
    6. '`' → logprob: -10.401704788208008
    7. '500' → logprob: -10.651704788208008
    8. ' Coin' → logprob: -10.901704788208008
    9. '```' → logprob: -10.901704788208008
    10. '   ' → logprob: -11.276704788208008

Token 978: '500' (ID: 3234)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07069279253482819
    2. 'Coin' → logprob: -2.695692777633667
    3. 'index' → logprob: -8.195693016052246
    4. '500' → logprob: -8.695693016052246
    5. 'coin' → logprob: -9.070693016052246
    6. '[' → logprob: -10.070693016052246
    7. '`' → logprob: -10.695693016052246
    8. 'class' → logprob: -10.695693016052246
    9. '```' → logprob: -10.695693016052246
    10. 'Coins' → logprob: -11.445693016052246

Token 979: ' down' (ID: 1917)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4887922704219818
    2. ')' → logprob: -2.1137921810150146
    3. ':' → logprob: -2.2387921810150146
    4. ',' → logprob: -3.7387921810150146
    5. 's' → logprob: -3.9887921810150146
    6. ' =' → logprob: -4.113792419433594
    7. '<|end|>' → logprob: -4.113792419433594
    8. ']' → logprob: -4.238792419433594
    9. '_counts' → logprob: -4.488792419433594
    10. '```' → logprob: -4.613792419433594

Token 980: ' to' (ID: 316)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2648367881774902
    2. '=' → logprob: -1.3898367881774902
    3. ',' → logprob: -1.6398367881774902
    4. ')' → logprob: -2.1398367881774902
    5. '[' → logprob: -3.3898367881774902
    6. ':' → logprob: -3.5148367881774902
    7. '-' → logprob: -3.6398367881774902
    8. ' =' → logprob: -4.26483678817749
    9. '500' → logprob: -4.63983678817749
    10. '   ' → logprob: -4.88983678817749

Token 981: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008383385138586164
    2. ' ' → logprob: -7.125838279724121
    3. '500' → logprob: -11.500838279724121
    4. '   ' → logprob: -12.000838279724121
    5. '50' → logprob: -12.500838279724121
    6. '"' → logprob: -12.625838279724121
    7. 'coin' → logprob: -13.125838279724121
    8. '
' → logprob: -13.438338279724121
    9. '```' → logprob: -13.563338279724121
    10. '100' → logprob: -13.813338279724121

Token 982: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011987409379798919
    2. '500' → logprob: -9.250120162963867
    3. ' ' → logprob: -11.375120162963867
    4. '50' → logprob: -12.500120162963867
    5. '100' → logprob: -12.625120162963867
    6. '5' → logprob: -13.812620162963867
    7. 'coin' → logprob: -14.375120162963867
    8. '600' → logprob: -14.500120162963867
    9. '
' → logprob: -14.562620162963867
    10. '   ' → logprob: -14.875120162963867

Token 983: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.009843111038208
    2. ')' → logprob: -1.259843111038208
    3. ':' → logprob: -2.009843111038208
    4. ' =' → logprob: -2.759843111038208
    5. '(' → logprob: -3.759843111038208
    6. '=' → logprob: -3.884843111038208
    7. '):' → logprob: -3.884843111038208
    8. '   ' → logprob: -3.884843111038208
    9. '       ' → logprob: -4.009842872619629
    10. 's' → logprob: -4.259842872619629

Token 984: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8746882677078247
    2. '       ' → logprob: -1.3746882677078247
    3. ',' → logprob: -2.499688148498535
    4. ')' → logprob: -2.499688148498535
    5. '):' → logprob: -2.874688148498535
    6. '[' → logprob: -3.124688148498535
    7. '   ' → logprob: -4.374688148498535
    8. '<|end|>' → logprob: -4.874688148498535
    9. '        
' → logprob: -5.124688148498535
    10. '.' → logprob: -5.124688148498535

Token 985: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3173835873603821
    2. '[' → logprob: -2.6923835277557373
    3. '       ' → logprob: -3.1923835277557373
    4. ')' → logprob: -3.3173835277557373
    5. ' =' → logprob: -3.6923835277557373
    6. '):' → logprob: -3.9423835277557373
    7. '   ' → logprob: -4.067383766174316
    8. ',' → logprob: -4.067383766174316
    9. '=' → logprob: -4.817383766174316
    10. '(' → logprob: -5.067383766174316

Token 986: ' Hence' (ID: 47682)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7464178204536438
    2. ')' → logprob: -1.746417760848999
    3. ':' → logprob: -2.121417760848999
    4. '(' → logprob: -2.871417760848999
    5. ',' → logprob: -3.246417760848999
    6. ' =' → logprob: -3.496417760848999
    7. '       ' → logprob: -3.496417760848999
    8. '):' → logprob: -3.621417760848999
    9. '   ' → logprob: -3.996417760848999
    10. '=' → logprob: -4.496417999267578

Token 987: ' indices' (ID: 30378)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.6978331804275513
    2. ' coin' → logprob: -0.6978331804275513
    3. '[' → logprob: -6.697833061218262
    4. '   ' → logprob: -6.947833061218262
    5. ' [' → logprob: -7.072833061218262
    6. '    ' → logprob: -8.072833061218262
    7. 'len' → logprob: -8.197833061218262
    8. '       ' → logprob: -8.322833061218262
    9. ' len' → logprob: -8.947833061218262
    10. ' ' → logprob: -9.572833061218262

Token 988: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1484677642583847
    2. '=' → logprob: -3.273467779159546
    3. '[' → logprob: -3.398467779159546
    4. '0' → logprob: -3.398467779159546
    5. ' ' → logprob: -4.398467540740967
    6. ':' → logprob: -5.148467540740967
    7. '1' → logprob: -5.273467540740967
    8. '6' → logprob: -6.398467540740967
    9. '   ' → logprob: -6.523467540740967
    10. '```' → logprob: -6.898467540740967

Token 989: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02287141978740692
    2. ' =' → logprob: -4.522871494293213
    3. '=' → logprob: -5.022871494293213
    4. ' ' → logprob: -5.647871494293213
    5. '1' → logprob: -7.272871494293213
    6. '6' → logprob: -8.022871017456055
    7. ':' → logprob: -8.897871017456055
    8. '
' → logprob: -9.022871017456055
    9. 'from' → logprob: -9.272871017456055
    10. 'range' → logprob: -10.147871017456055

Token 990: '..' (ID: 485)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03196212276816368
    2. ',' → logprob: -4.781961917877197
    3. ' =' → logprob: -5.406961917877197
    4. '=' → logprob: -5.656961917877197
    5. ']' → logprob: -5.781961917877197
    6. ' :' → logprob: -6.156961917877197
    7. '.' → logprob: -6.281961917877197
    8. '...' → logprob: -6.281961917877197
    9. '<|end|>' → logprob: -6.406961917877197
    10. '<|end|>' → logprob: -7.281961917877197

Token 991: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -7.703443770878948e-06
    2. '6' → logprob: -12.125007629394531
    3. ' ' → logprob: -13.000007629394531
    4. '```' → logprob: -17.50000762939453
    5. 'len' → logprob: -18.25000762939453
    6. '   ' → logprob: -18.87500762939453
    7. '５' → logprob: -19.75000762939453
    8. ' five' → logprob: -19.87500762939453
    9. '0' → logprob: -20.12500762939453
    10. '۵' → logprob: -20.56250762939453

Token 992: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3068945109844208
    2. ' =' → logprob: -2.806894540786743
    3. ')' → logprob: -2.931894540786743
    4. '       ' → logprob: -3.181894540786743
    5. '[' → logprob: -3.431894540786743
    6. '):' → logprob: -3.931894540786743
    7. ',' → logprob: -4.056894302368164
    8. '   ' → logprob: -4.306894302368164
    9. '=' → logprob: -5.181894302368164
    10. ':
' → logprob: -5.306894302368164

Token 993: ' these' (ID: 1879)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.1799025684595108
    2. ' coin' → logprob: -1.8049025535583496
    3. '6' → logprob: -9.804903030395508
    4. ' ' → logprob: -10.554903030395508
    5. 'Coin' → logprob: -10.804903030395508
    6. 'coins' → logprob: -11.304903030395508
    7. '```' → logprob: -11.554903030395508
    8. 'payment' → logprob: -11.929903030395508
    9. '500' → logprob: -12.179903030395508
    10. '_coin' → logprob: -12.554903030395508

Token 994: ' coins' (ID: 28969)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7180578708648682
    2. ')' → logprob: -1.9680578708648682
    3. '[' → logprob: -2.343057870864868
    4. ',' → logprob: -2.468057870864868
    5. ' =' → logprob: -2.843057870864868
    6. '       ' → logprob: -3.218057870864868
    7. ']' → logprob: -4.093057632446289
    8. '   ' → logprob: -4.468057632446289
    9. '):' → logprob: -4.468057632446289
    10. ':
' → logprob: -4.718057632446289

Token 995: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0140944719314575
    2. ':' → logprob: -1.2640944719314575
    3. ')' → logprob: -2.139094352722168
    4. ' =' → logprob: -2.514094352722168
    5. '=' → logprob: -3.264094352722168
    6. ',' → logprob: -3.639094352722168
    7. '[
' → logprob: -4.014094352722168
    8. '       ' → logprob: -4.264094352722168
    9. '```' → logprob: -4.639094352722168
    10. '   ' → logprob: -4.889094352722168

Token 996: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05488758534193039
    2. '        
' → logprob: -3.429887533187866
    3. '
' → logprob: -5.429887771606445
    4. '<|end|>' → logprob: -5.679887771606445
    5. ',' → logprob: -5.804887771606445
    6. '    
' → logprob: -6.179887771606445
    7. ')' → logprob: -6.304887771606445
    8. '\n' → logprob: -7.304887771606445
    9. '```' → logprob: -7.304887771606445
    10. '[' → logprob: -7.429887771606445

Token 997: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37125661969184875
    2. ' =' → logprob: -2.1212565898895264
    3. ':' → logprob: -2.4962565898895264
    4. '[' → logprob: -2.6212565898895264
    5. '=' → logprob: -4.9962568283081055
    6. ',' → logprob: -4.9962568283081055
    7. '):' → logprob: -5.6212568283081055
    8. '        
' → logprob: -5.7462568283081055
    9. '```' → logprob: -5.8712568283081055
    10. ')' → logprob: -5.9962568283081055

Token 998: ' There' (ID: 3274)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8006681799888611
    2. ')' → logprob: -1.4256682395935059
    3. '       ' → logprob: -2.050668239593506
    4. ':' → logprob: -3.175668239593506
    5. '(' → logprob: -3.175668239593506
    6. '   ' → logprob: -3.675668239593506
    7. ',' → logprob: -3.800668239593506
    8. '):' → logprob: -4.050668239593506
    9. '```' → logprob: -4.425668239593506
    10. ' =' → logprob: -5.300668239593506

Token 999: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38876843452453613
    2. '=' → logprob: -1.2637684345245361
    3. '[' → logprob: -3.638768434524536
    4. ':' → logprob: -5.388768196105957
    5. ' is' → logprob: -5.388768196105957
    6. ' are' → logprob: -6.763768196105957
    7. ')' → logprob: -7.013768196105957
    8. '_' → logprob: -7.638768196105957
    9. '.' → logprob: -8.013768196105957
    10. ']' → logprob: -8.513768196105957

Token 1000: ' no' (ID: 860)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7108339667320251
    2. ' no' → logprob: -1.46083402633667
    3. ' an' → logprob: -1.96083402633667
    4. 'a' → logprob: -2.71083402633667
    5. '6' → logprob: -3.58583402633667
    6. 'no' → logprob: -4.21083402633667
    7. ')' → logprob: -5.33583402633667
    8. ' ' → logprob: -5.58583402633667
    9. '[' → logprob: -5.96083402633667
    10. ']' → logprob: -6.08583402633667

Token 1001: ' unlimited' (ID: 34136)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8618040084838867
    2. '[' → logprob: -1.6118040084838867
    3. ']' → logprob: -2.7368040084838867
    4. ')' → logprob: -2.9868040084838867
    5. '=' → logprob: -2.9868040084838867
    6. 'space' → logprob: -3.1118040084838867
    7. ' ' → logprob: -3.6118040084838867
    8. ' =' → logprob: -4.236804008483887
    9. ':' → logprob: -4.486804008483887
    10. '.' → logprob: -4.611804008483887

Token 1002: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3639632761478424
    2. ')' → logprob: -1.98896324634552
    3. '[' → logprob: -2.9889633655548096
    4. '_counts' → logprob: -3.3639633655548096
    5. ' =' → logprob: -3.7389633655548096
    6. ']' → logprob: -4.4889631271362305
    7. ':' → logprob: -4.6139631271362305
    8. '_s' → logprob: -4.7389631271362305
    9. '```' → logprob: -5.2389631271362305
    10. '=' → logprob: -5.7389631271362305

Token 1003: '100' (ID: 1353)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3817687034606934
    2. ' coin' → logprob: -1.3817687034606934
    3. '_' → logprob: -1.6317687034606934
    4. 'coin' → logprob: -2.8817687034606934
    5. '```' → logprob: -3.2567687034606934
    6. '100' → logprob: -3.3817687034606934
    7. ')' → logprob: -3.8817687034606934
    8. ' _' → logprob: -4.006768703460693
    9. '_co' → logprob: -4.131768703460693
    10. '
' → logprob: -4.381768703460693

Token 1004: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000701707205735147
    2. '%' → logprob: -8.875701904296875
    3. '<|end|>' → logprob: -9.000701904296875
    4. '[' → logprob: -9.125701904296875
    5. '-' → logprob: -9.625701904296875
    6. ')' → logprob: -9.750701904296875
    7. '#' → logprob: -10.125701904296875
    8. '.' → logprob: -11.125701904296875
    9. '00' → logprob: -11.500701904296875
    10. ')-' → logprob: -11.500701904296875

Token 1005: '-y' (ID: 18102)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5064613223075867
    2. ')' → logprob: -1.6314613819122314
    3. '_counts' → logprob: -2.0064613819122314
    4. '_s' → logprob: -3.5064613819122314
    5. '_' → logprob: -4.381461143493652
    6. ']' → logprob: -5.131461143493652
    7. '[' → logprob: -5.381461143493652
    8. ',' → logprob: -5.631461143493652
    9. '```' → logprob: -6.381461143493652
    10. '   ' → logprob: -6.631461143493652

Token 1006: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.0010605561546981335
    2. '-en' → logprob: -6.876060485839844
    3. '=en' → logprob: -11.751060485839844
    4. '```' → logprob: -12.751060485839844
    5. '-' → logprob: -13.001060485839844
    6. '_en' → logprob: -13.501060485839844
    7. '(en' → logprob: -13.626060485839844
    8. 'e' → logprob: -13.751060485839844
    9. '[' → logprob: -13.751060485839844
    10. '
' → logprob: -14.251060485839844

Token 1007: ' bills' (ID: 26846)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.34167832136154175
    2. ')' → logprob: -1.4666783809661865
    3. '_counts' → logprob: -3.2166783809661865
    4. '[' → logprob: -5.466678142547607
    5. ']' → logprob: -5.716678142547607
    6. '_s' → logprob: -5.841678142547607
    7. '   ' → logprob: -6.716678142547607
    8. '```' → logprob: -6.966678142547607
    9. '_' → logprob: -7.341678142547607
    10. '<|end|>' → logprob: -7.466678142547607

Token 1008: ' count' (ID: 3605)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4499220550060272
    2. ')' → logprob: -1.5749220848083496
    3. '(' → logprob: -3.5749220848083496
    4. '=' → logprob: -3.8249220848083496
    5. 's' → logprob: -4.07492208480835
    6. ' =' → logprob: -4.07492208480835
    7. ':' → logprob: -4.32492208480835
    8. ',' → logprob: -4.44992208480835
    9. ']' → logprob: -4.57492208480835
    10. '[
' → logprob: -4.69992208480835

Token 1009: ' here' (ID: 2105)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6217741370201111
    2. ')' → logprob: -1.2467741966247559
    3. '(' → logprob: -3.621774196624756
    4. ',' → logprob: -3.746774196624756
    5. ':' → logprob: -3.746774196624756
    6. '       ' → logprob: -3.746774196624756
    7. ' =' → logprob: -4.246774196624756
    8. '[
' → logprob: -4.496774196624756
    9. '   ' → logprob: -4.621774196624756
    10. '<|end|>' → logprob: -4.746774196624756

Token 1010: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8445029854774475
    2. ')' → logprob: -1.2195029258728027
    3. ':' → logprob: -2.0945029258728027
    4. ',' → logprob: -3.3445029258728027
    5. '   ' → logprob: -3.8445029258728027
    6. '       ' → logprob: -4.094502925872803
    7. '(' → logprob: -4.219502925872803
    8. '[
' → logprob: -4.594502925872803
    9. 's' → logprob: -4.844502925872803
    10. ']' → logprob: -4.844502925872803

Token 1011: ' handled' (ID: 29594)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44470399618148804
    2. '[' → logprob: -2.194704055786133
    3. '       ' → logprob: -2.694704055786133
    4. ' ' → logprob: -3.069704055786133
    5. '(' → logprob: -3.569704055786133
    6. ',' → logprob: -4.069704055786133
    7. '    ' → logprob: -4.194704055786133
    8. '        ' → logprob: -4.319704055786133
    9. '<|end|>' → logprob: -4.444704055786133
    10. ' )' → logprob: -4.944704055786133

Token 1012: ' differently' (ID: 36490)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2763594686985016
    2. '[' → logprob: -2.2763595581054688
    3. ')' → logprob: -2.9013595581054688
    4. ':' → logprob: -3.1513595581054688
    5. ',' → logprob: -4.526359558105469
    6. '.' → logprob: -5.026359558105469
    7. '   ' → logprob: -5.401359558105469
    8. ' =' → logprob: -5.401359558105469
    9. ']' → logprob: -6.026359558105469
    10. 'for' → logprob: -6.401359558105469

Token 1013: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3420567810535431
    2. '[' → logprob: -2.3420567512512207
    3. ' =' → logprob: -3.0920567512512207
    4. ')' → logprob: -3.0920567512512207
    5. ',' → logprob: -3.9670567512512207
    6. ':' → logprob: -4.217056751251221
    7. '<|end|>' → logprob: -4.342056751251221
    8. '=' → logprob: -4.467056751251221
    9. '[
' → logprob: -5.217056751251221
    10. ']' → logprob: -5.217056751251221

Token 1014: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08915429562330246
    2. ':' → logprob: -3.8391542434692383
    3. '[' → logprob: -3.8391542434692383
    4. ')' → logprob: -4.839154243469238
    5. '   ' → logprob: -4.964154243469238
    6. ' =' → logprob: -5.089154243469238
    7. ',' → logprob: -5.089154243469238
    8. '        
' → logprob: -6.214154243469238
    9. '[
' → logprob: -6.339154243469238
    10. '):' → logprob: -6.464154243469238

Token 1015: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25224944949150085
    2. '[' → logprob: -2.2522494792938232
    3. ':' → logprob: -2.8772494792938232
    4. ' =' → logprob: -4.002249240875244
    5. '=' → logprob: -4.752249240875244
    6. ')' → logprob: -5.252249240875244
    7. ',' → logprob: -5.252249240875244
    8. '        
' → logprob: -5.252249240875244
    9. '(' → logprob: -5.502249240875244
    10. '[
' → logprob: -5.627249240875244

Token 1016: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21641534566879272
    2. '        
' → logprob: -2.4664154052734375
    3. '
' → logprob: -3.2164154052734375
    4. '[' → logprob: -3.9664154052734375
    5. '    
' → logprob: -4.7164154052734375
    6. '<|end|>' → logprob: -5.0914154052734375
    7. '```' → logprob: -5.0914154052734375
    8. ',' → logprob: -5.4664154052734375
    9. ' =' → logprob: -5.5914154052734375
    10. '[
' → logprob: -5.7164154052734375

Token 1017: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11164999008178711
    2. '[' → logprob: -2.986649990081787
    3. '        
' → logprob: -4.361649990081787
    4. '   ' → logprob: -4.736649990081787
    5. '```' → logprob: -4.986649990081787
    6. '[
' → logprob: -5.111649990081787
    7. ' =' → logprob: -5.736649990081787
    8. ',' → logprob: -5.861649990081787
    9. ')' → logprob: -6.111649990081787
    10. '    
' → logprob: -6.236649990081787

Token 1018: ' Update' (ID: 9152)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41861245036125183
    2. '[' → logprob: -1.9186124801635742
    3. ')' → logprob: -2.668612480163574
    4. ':' → logprob: -3.168612480163574
    5. ' =' → logprob: -4.168612480163574
    6. ',' → logprob: -4.418612480163574
    7. '(' → logprob: -4.668612480163574
    8. '):' → logprob: -4.918612480163574
    9. '   ' → logprob: -5.043612480163574
    10. '           ' → logprob: -5.293612480163574

Token 1019: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.068772792816162
    2. '[' → logprob: -1.443772792816162
    3. '       ' → logprob: -2.318772792816162
    4. ':' → logprob: -2.318772792816162
    5. '=' → logprob: -2.443772792816162
    6. ')' → logprob: -3.193772792816162
    7. '   ' → logprob: -3.818772792816162
    8. '<|end|>' → logprob: -4.193772792816162
    9. '(' → logprob: -4.318772792816162
    10. ',' → logprob: -4.818772792816162

Token 1020: ' We'll' (ID: 46830)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.38311657309532166
    2. ' coin' → logprob: -1.633116602897644
    3. '       ' → logprob: -2.1331164836883545
    4. '#' → logprob: -6.008116722106934
    5. '```' → logprob: -7.633116722106934
    6. '        
' → logprob: -7.633116722106934
    7. 'pass' → logprob: -8.383116722106934
    8. 'self' → logprob: -9.133116722106934
    9. ' pass' → logprob: -9.383116722106934
    10. ' #' → logprob: -9.383116722106934

Token 1021: ' have' (ID: 679)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.874079704284668
    2. 'continue' → logprob: -1.249079704284668
    3. ' continue' → logprob: -2.249079704284668
    4. ' limit' → logprob: -3.249079704284668
    5. 'consider' → logprob: -3.499079704284668
    6. 'generate' → logprob: -3.624079704284668
    7. ' use' → logprob: -3.624079704284668
    8. 'use' → logprob: -4.249079704284668
    9. '   ' → logprob: -5.249079704284668
    10. ' consider' → logprob: -5.624079704284668

Token 1022: ' current' (ID: 2208)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.4075068235397339
    2. ' coin' → logprob: -1.2825068235397339
    3. '       ' → logprob: -3.2825069427490234
    4. '   ' → logprob: -4.907506942749023
    5. 'range' → logprob: -5.657506942749023
    6. 'self' → logprob: -6.282506942749023
    7. '6' → logprob: -6.532506942749023
    8. 'max' → logprob: -7.032506942749023
    9. '```' → logprob: -7.032506942749023
    10. ' self' → logprob: -7.532506942749023

Token 1023: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.001004943042062223
    2. '_counts' → logprob: -7.501005172729492
    3. '_coin' → logprob: -8.001005172729492
    4. '```' → logprob: -9.876005172729492
    5. '_' → logprob: -10.376005172729492
    6. '\' → logprob: -11.126005172729492
    7. '
' → logprob: -11.876005172729492
    8. '`' → logprob: -13.251005172729492
    9. '_tokens' → logprob: -13.751005172729492
    10. ')_' → logprob: -13.751005172729492

Token 1024: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.01429925300180912
    2. '_' → logprob: -4.764299392700195
    3. '_ins' → logprob: -5.514299392700195
    4. '_co' → logprob: -7.389299392700195
    5. 'in' → logprob: -7.889299392700195
    6. '_counts' → logprob: -8.514299392700195
    7. '```' → logprob: -9.764299392700195
    8. '\' → logprob: -10.139299392700195
    9. '_inches' → logprob: -10.264299392700195
    10. '
' → logprob: -10.264299392700195

Token 1025: ' tuple' (ID: 31311)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25762173533439636
    2. '[' → logprob: -2.1326217651367188
    3. '=' → logprob: -3.1326217651367188
    4. ')' → logprob: -3.1326217651367188
    5. ':' → logprob: -5.507621765136719
    6. '<|end|>' → logprob: -5.507621765136719
    7. '<|end|>' → logprob: -6.257621765136719
    8. '       ' → logprob: -6.257621765136719
    9. ',' → logprob: -6.382621765136719
    10. '   ' → logprob: -7.007621765136719

Token 1026: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3432828187942505
    2. ':' → logprob: -2.593282699584961
    3. ')' → logprob: -2.843282699584961
    4. ' =' → logprob: -3.093282699584961
    5. '       ' → logprob: -3.468282699584961
    6. ',' → logprob: -3.718282699584961
    7. '   ' → logprob: -4.093282699584961
    8. '(' → logprob: -4.593282699584961
    9. '=' → logprob: -5.343282699584961
    10. '):' → logprob: -5.968282699584961

Token 1027: ' length' (ID: 5517)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.2427409291267395
    2. 'length' → logprob: -1.7427408695220947
    3. '(' → logprob: -3.8677408695220947
    4. 'len' → logprob: -4.242741107940674
    5. '(length' → logprob: -6.367741107940674
    6. ' length' → logprob: -6.742741107940674
    7. 'counts' → logprob: -6.867741107940674
    8. '(len' → logprob: -8.242740631103516
    9. ' (' → logprob: -8.367740631103516
    10. ')' → logprob: -8.742740631103516

Token 1028: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0016907735262066126
    2. ' ' → logprob: -6.501690864562988
    3. '=' → logprob: -8.751690864562988
    4. ' =' → logprob: -10.751690864562988
    5. '```' → logprob: -12.626690864562988
    6. '7' → logprob: -13.001690864562988
    7. '   ' → logprob: -14.501690864562988
    8. '(' → logprob: -14.626690864562988
    9. ',' → logprob: -15.126690864562988
    10. '     ' → logprob: -15.376690864562988

Token 1029: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.375000953674316
    3. '(' → logprob: -15.125000953674316
    4. '```' → logprob: -15.750000953674316
    5. '7' → logprob: -16.000001907348633
    6. 'len' → logprob: -16.500001907348633
    7. '=' → logprob: -17.875001907348633
    8. '۶' → logprob: -18.000001907348633
    9. '٦' → logprob: -18.500001907348633
    10. '0' → logprob: -18.687501907348633

Token 1030: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2486257404088974
    2. '[' → logprob: -2.6236257553100586
    3. ' =' → logprob: -2.6236257553100586
    4. ':' → logprob: -3.7486257553100586
    5. ')' → logprob: -4.373625755310059
    6. '=' → logprob: -4.498625755310059
    7. '           ' → logprob: -4.998625755310059
    8. ',' → logprob: -5.373625755310059
    9. '   ' → logprob: -5.373625755310059
    10. '):' → logprob: -6.123625755310059

Token 1031: ' coins' (ID: 28969)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.46782106161117554
    2. 'coins' → logprob: -1.3428211212158203
    3. ' ' → logprob: -3.4678211212158203
    4. 'the' → logprob: -3.8428211212158203
    5. ' coins' → logprob: -3.9678211212158203
    6. 'coin' → logprob: -4.59282112121582
    7. 'payment' → logprob: -4.96782112121582
    8. ' the' → logprob: -4.96782112121582
    9. '(' → logprob: -5.21782112121582
    10. ')' → logprob: -5.96782112121582

Token 1032: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8800861835479736
    2. ' =' → logprob: -1.1300861835479736
    3. '       ' → logprob: -2.5050861835479736
    4. '=' → logprob: -2.6300861835479736
    5. ':' → logprob: -2.8800861835479736
    6. ')' → logprob: -4.2550859451293945
    7. '   ' → logprob: -5.2550859451293945
    8. '(' → logprob: -5.3800859451293945
    9. ',' → logprob: -5.6300859451293945
    10. '           ' → logprob: -5.7550859451293945

Token 1033: 'excluding' (ID: 135903)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35016191005706787
    2. '6' → logprob: -2.6001620292663574
    3. '):' → logprob: -2.9751620292663574
    4. '500' → logprob: -3.4751620292663574
    5. ':' → logprob: -3.7251620292663574
    6. '0' → logprob: -3.7251620292663574
    7. 'excluding' → logprob: -4.100162029266357
    8. '):
' → logprob: -4.225162029266357
    9. ').' → logprob: -4.725162029266357
    10. '),' → logprob: -4.975162029266357

Token 1034: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.022703034803271294
    2. 'the' → logprob: -5.022703170776367
    3. '1' → logprob: -5.772703170776367
    4. ')' → logprob: -5.897703170776367
    5. 'b' → logprob: -5.897703170776367
    6. ' ' → logprob: -5.897703170776367
    7. 'coins' → logprob: -6.272703170776367
    8. 'coin' → logprob: -7.897703170776367
    9. '500' → logprob: -8.272703170776367
    10. '
' → logprob: -8.272703170776367

Token 1035: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.004942939151078463
    2. 'the' → logprob: -6.504942893981934
    3. '1' → logprob: -6.629942893981934
    4. ')' → logprob: -7.504942893981934
    5. 'self' → logprob: -7.879942893981934
    6. 'coin' → logprob: -8.129942893981934
    7. 'coins' → logprob: -8.504942893981934
    8. '```' → logprob: -8.879942893981934
    9. '
' → logprob: -9.004942893981934
    10. ' ' → logprob: -9.254942893981934

Token 1036: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009364311583340168
    2. '-y' → logprob: -5.384364128112793
    3. ')-' → logprob: -6.759364128112793
    4. ')' → logprob: -6.884364128112793
    5. '-' → logprob: -7.259364128112793
    6. ',' → logprob: -8.009364128112793
    7. ':' → logprob: -8.634364128112793
    8. '[-' → logprob: -8.759364128112793
    9. ',y' → logprob: -8.884364128112793
    10. '   ' → logprob: -9.259364128112793

Token 1037: '-y' (ID: 18102)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2017451524734497
    2. '):' → logprob: -3.07674503326416
    3. '-y' → logprob: -3.20174503326416
    4. '-' → logprob: -4.07674503326416
    5. ')-' → logprob: -4.20174503326416
    6. '   ' → logprob: -4.20174503326416
    7. ',' → logprob: -4.32674503326416
    8. '):
' → logprob: -4.45174503326416
    9. ')
' → logprob: -5.20174503326416
    10. ']' → logprob: -5.70174503326416

Token 1038: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.011238094419240952
    2. '-en' → logprob: -4.511238098144531
    3. '=en' → logprob: -10.136238098144531
    4. '```' → logprob: -10.636238098144531
    5. '-' → logprob: -10.886238098144531
    6. '(en' → logprob: -11.261238098144531
    7. ''en' → logprob: -11.261238098144531
    8. '
' → logprob: -11.511238098144531
    9. '[' → logprob: -11.886238098144531
    10. ')' → logprob: -12.386238098144531

Token 1039: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19505545496940613
    2. 'coin' → logprob: -3.0700554847717285
    3. ' coin' → logprob: -4.1950554847717285
    4. 'b' → logprob: -4.3200554847717285
    5. ',' → logprob: -4.4450554847717285
    6. 'coins' → logprob: -4.4450554847717285
    7. '_' → logprob: -4.5700554847717285
    8. '),' → logprob: -4.6950554847717285
    9. ')_' → logprob: -4.8200554847717285
    10. 's' → logprob: -4.9450554847717285

Token 1040: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003375553758814931
    2. '        
' → logprob: -6.50337553024292
    3. '
' → logprob: -6.75337553024292
    4. ')' → logprob: -9.003376007080078
    5. '   ' → logprob: -9.003376007080078
    6. '```' → logprob: -9.003376007080078
    7. ',' → logprob: -9.628376007080078
    8. '#' → logprob: -10.253376007080078
    9. '<|end|>' → logprob: -10.253376007080078
    10. '[' → logprob: -10.628376007080078

Token 1041: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030448565259575844
    2. ':' → logprob: -4.4054484367370605
    3. '[' → logprob: -4.7804484367370605
    4. ' =' → logprob: -5.9054484367370605
    5. '        
' → logprob: -6.2804484367370605
    6. '   ' → logprob: -6.9054484367370605
    7. ',' → logprob: -7.1554484367370605
    8. '```' → logprob: -7.5304484367370605
    9. ')' → logprob: -7.7804484367370605
    10. '=' → logprob: -8.030448913574219

Token 1042: ' During' (ID: 17081)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025181584060192108
    2. ' =' → logprob: -4.525181770324707
    3. '[' → logprob: -6.025181770324707
    4. '
' → logprob: -6.150181770324707
    5. ':' → logprob: -6.400181770324707
    6. '        
' → logprob: -6.650181770324707
    7. ')' → logprob: -6.775181770324707
    8. '   ' → logprob: -6.775181770324707
    9. ',' → logprob: -6.775181770324707
    10. '```' → logprob: -7.275181770324707

Token 1043: ' payment' (ID: 9277)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.44836434721946716
    2. ' the' → logprob: -3.0733642578125
    3. ' generate' → logprob: -3.1983642578125
    4. 'def' → logprob: -3.4483642578125
    5. '   ' → logprob: -3.4483642578125
    6. 'range' → logprob: -3.5733642578125
    7. 'the' → logprob: -3.5733642578125
    8. '       ' → logprob: -3.8233642578125
    9. 'enumer' → logprob: -3.8233642578125
    10. 'coin' → logprob: -4.0733642578125

Token 1044: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8026086688041687
    2. '_counts' → logprob: -1.4276087284088135
    3. ':' → logprob: -2.3026087284088135
    4. 's' → logprob: -2.4276087284088135
    5. '       ' → logprob: -3.8026087284088135
    6. ',' → logprob: -4.052608489990234
    7. '   ' → logprob: -4.052608489990234
    8. '=' → logprob: -4.427608489990234
    9. '_lengths' → logprob: -4.427608489990234
    10. '):' → logprob: -4.552608489990234

Token 1045: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6043931245803833
    2. 'coin' → logprob: -1.7293931245803833
    3. ' coin' → logprob: -2.2293930053710938
    4. ' we' → logprob: -3.1043930053710938
    5. ' for' → logprob: -3.4793930053710938
    6. '           ' → logprob: -3.4793930053710938
    7. 'we' → logprob: -4.854393005371094
    8. ' ranges' → logprob: -5.354393005371094
    9. ':' → logprob: -5.479393005371094
    10. '        
' → logprob: -5.604393005371094

Token 1046: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1141999959945679
    2. '   ' → logprob: -1.9891999959945679
    3. ' can' → logprob: -2.3642001152038574
    4. ' continue' → logprob: -2.6142001152038574
    5. '       ' → logprob: -3.1142001152038574
    6. 'continue' → logprob: -3.1142001152038574
    7. 'generate' → logprob: -3.1142001152038574
    8. ' have' → logprob: -3.3642001152038574
    9. ' will' → logprob: -3.7392001152038574
    10. ' generate' → logprob: -4.364200115203857

Token 1047: ' add' (ID: 1147)
  Prédit: 'include'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'include' → logprob: -0.8950211405754089
    2. ' use' → logprob: -1.7700212001800537
    3. ' include' → logprob: -2.6450212001800537
    4. 'add' → logprob: -2.7700212001800537
    5. ' add' → logprob: -2.7700212001800537
    6. 'use' → logprob: -2.7700212001800537
    7. 'consider' → logprob: -3.5200212001800537
    8. 'generate' → logprob: -4.145020961761475
    9. 'pay' → logprob: -4.645020961761475
    10. 'append' → logprob: -4.770020961761475

Token 1048: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6920754909515381
    2. '(' → logprob: -1.692075490951538
    3. ' one' → logprob: -2.192075490951538
    4. ' ' → logprob: -2.942075490951538
    5. '[' → logprob: -3.567075490951538
    6. '1' → logprob: -3.567075490951538
    7. ' [' → logprob: -4.067075729370117
    8. 'one' → logprob: -4.317075729370117
    9. ' either' → logprob: -4.442075729370117
    10. ' a' → logprob: -4.567075729370117

Token 1049: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9244092106819153
    2. '0' → logprob: -1.4244091510772705
    3. 'one' → logprob: -2.1744091510772705
    4. '1' → logprob: -2.5494091510772705
    5. 'either' → logprob: -2.9244091510772705
    6. '[' → logprob: -3.1744091510772705
    7. ' (' → logprob: -4.17440938949585
    8. '100' → logprob: -4.42440938949585
    9. '[(' → logprob: -4.79940938949585
    10. 'a' → logprob: -4.92440938949585

Token 1050: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.47458115220069885
    2. 'or' → logprob: -0.9745811223983765
    3. '	or' → logprob: -8.349580764770508
    4. ' ' → logprob: -9.224580764770508
    5. ')' → logprob: -10.224580764770508
    6. '   ' → logprob: -10.349580764770508
    7. '
' → logprob: -10.599580764770508
    8. ',' → logprob: -10.849580764770508
    9. '```' → logprob: -11.599580764770508
    10. '_or' → logprob: -11.724580764770508

Token 1051: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006715728435665369
    2. ' ' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.006715774536133
    4. '
' → logprob: -18.381715774536133
    5. '```' → logprob: -18.756715774536133
    6. ' ' → logprob: -19.006715774536133
    7. '  ' → logprob: -19.256715774536133
    8. '100' → logprob: -19.631715774536133
    9. ' one' → logprob: -19.756715774536133
    10. 'or' → logprob: -20.381715774536133

Token 1052: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -18.625
    4. '```' → logprob: -19.625
    5. '
' → logprob: -20.75
    6. '۱' → logprob: -21.75
    7. '<|end|>' → logprob: -22.0
    8. '100' → logprob: -22.125
    9. '  ' → logprob: -22.375
    10. '`' → logprob: -22.5

Token 1053: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1054: '100' (ID: 1353)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08085191994905472
    2. '100' → logprob: -3.0808520317077637
    3. '0' → logprob: -4.705852031707764
    4. '000' → logprob: -5.330852031707764
    5. '_' → logprob: -5.580852031707764
    6. '```' → logprob: -6.330852031707764
    7. ')' → logprob: -6.455852031707764
    8. ',' → logprob: -6.580852031707764
    9. '1' → logprob: -6.705852031707764
    10. '   ' → logprob: -6.830852031707764

Token 1055: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. '000' → logprob: -13.12500286102295
    3. '   ' → logprob: -15.75000286102295
    4. ' ' → logprob: -16.000001907348633
    5. '00' → logprob: -16.500001907348633
    6. '_' → logprob: -16.500001907348633
    7. '
' → logprob: -17.500001907348633
    8. '۰' → logprob: -17.875001907348633
    9. '```' → logprob: -18.375001907348633
    10. '٠' → logprob: -18.625001907348633

Token 1056: '-y' (ID: 18102)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1993160843849182
    2. '-' → logprob: -3.0743160247802734
    3. '_' → logprob: -3.6993160247802734
    4. ')-' → logprob: -4.074316024780273
    5. '   ' → logprob: -4.199316024780273
    6. ',' → logprob: -5.074316024780273
    7. '
' → logprob: -5.199316024780273
    8. ']' → logprob: -5.199316024780273
    9. '-co' → logprob: -5.324316024780273
    10. '0' → logprob: -5.449316024780273

Token 1057: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -3.857719275401905e-05
    2. '-en' → logprob: -11.000038146972656
    3. 'e' → logprob: -12.125038146972656
    4. '```' → logprob: -12.125038146972656
    5. '
' → logprob: -13.500038146972656
    6. 'ен' → logprob: -13.875038146972656
    7. '=en' → logprob: -13.875038146972656
    8. '(en' → logprob: -14.125038146972656
    9. '-' → logprob: -14.375038146972656
    10. '   ' → logprob: -14.375038146972656

Token 1058: ' bills' (ID: 26846)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1511188745498657
    2. '       ' → logprob: -1.7761188745498657
    3. ' =' → logprob: -2.026118755340576
    4. ':' → logprob: -2.026118755340576
    5. 's' → logprob: -2.401118755340576
    6. ')' → logprob: -2.776118755340576
    7. '   ' → logprob: -3.776118755340576
    8. '):' → logprob: -4.151118755340576
    9. ',' → logprob: -4.401118755340576
    10. '=' → logprob: -4.526118755340576

Token 1059: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7014173269271851
    2. ':' → logprob: -1.951417326927185
    3. ')' → logprob: -2.0764174461364746
    4. '(' → logprob: -2.8264174461364746
    5. ',' → logprob: -3.3264174461364746
    6. '       ' → logprob: -3.3264174461364746
    7. '   ' → logprob: -3.8264174461364746
    8. '<|end|>' → logprob: -4.201417446136475
    9. ' =' → logprob: -4.326417446136475
    10. 's' → logprob: -4.576417446136475

Token 1060: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011092498898506165
    2. '        
' → logprob: -5.011092662811279
    3. '
' → logprob: -6.761092662811279
    4. ',' → logprob: -7.136092662811279
    5. '[' → logprob: -7.261092662811279
    6. '<|end|>' → logprob: -7.511092662811279
    7. ' =' → logprob: -8.511092185974121
    8. ')' → logprob: -8.761092185974121
    9. '    
' → logprob: -9.261092185974121
    10. ' for' → logprob: -9.761092185974121

Token 1061: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05943669378757477
    2. '        
' → logprob: -4.059436798095703
    3. '
' → logprob: -4.434436798095703
    4. '[' → logprob: -4.559436798095703
    5. ',' → logprob: -5.809436798095703
    6. ' =' → logprob: -5.934436798095703
    7. ':
' → logprob: -6.184436798095703
    8. ':' → logprob: -6.559436798095703
    9. '   ' → logprob: -6.684436798095703
    10. '    
' → logprob: -6.809436798095703

Token 1062: ' We'll' (ID: 46830)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11486984044313431
    2. '[' → logprob: -3.2398698329925537
    3. ' =' → logprob: -3.6148698329925537
    4. ':' → logprob: -3.8648698329925537
    5. '   ' → logprob: -4.989870071411133
    6. ',' → logprob: -5.989870071411133
    7. '(' → logprob: -5.989870071411133
    8. '        
' → logprob: -6.614870071411133
    9. ')' → logprob: -6.864870071411133
    10. '=' → logprob: -7.114870071411133

Token 1063: ' need' (ID: 1309)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.5319775342941284
    2. 'continue' → logprob: -1.5319775342941284
    3. ' generate' → logprob: -2.781977653503418
    4. ' continue' → logprob: -3.281977653503418
    5. 'consider' → logprob: -4.031977653503418
    6. '   ' → logprob: -4.156977653503418
    7. 'indent' → logprob: -4.156977653503418
    8. ' add' → logprob: -5.031977653503418
    9. 'add' → logprob: -5.031977653503418
    10. ' use' → logprob: -5.156977653503418

Token 1064: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.10082203149795532
    2. 'to' → logprob: -2.7258219718933105
    3. '   ' → logprob: -4.1008219718933105
    4. '       ' → logprob: -4.8508219718933105
    5. '    ' → logprob: -6.2258219718933105
    6. 'range' → logprob: -7.2258219718933105
    7. '           ' → logprob: -7.6008219718933105
    8. '
' → logprob: -7.7258219718933105
    9. '     ' → logprob: -8.100822448730469
    10. '      ' → logprob: -8.225822448730469

Token 1065: ' store' (ID: 4897)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.38916683197021484
    2. 'continue' → logprob: -2.014166831970215
    3. 'consider' → logprob: -2.764166831970215
    4. 'enumer' → logprob: -3.139166831970215
    5. 'iterate' → logprob: -3.889166831970215
    6. 'range' → logprob: -4.389166831970215
    7. 'import' → logprob: -5.389166831970215
    8. ' generate' → logprob: -5.639166831970215
    9. 'handle' → logprob: -5.764166831970215
    10. 'calculate' → logprob: -6.014166831970215

Token 1066: ' the' (ID: 290)
  Prédit: ' payment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' payment' → logprob: -0.8374462723731995
    2. 'payment' → logprob: -1.5874462127685547
    3. ' the' → logprob: -2.5874462127685547
    4. ' current' → logprob: -2.5874462127685547
    5. 'current' → logprob: -2.7124462127685547
    6. ' (' → logprob: -4.337446212768555
    7. 'self' → logprob: -4.462446212768555
    8. 'the' → logprob: -4.587446212768555
    9. '```' → logprob: -4.587446212768555
    10. ' ' → logprob: -4.712446212768555

Token 1067: ' coin' (ID: 22179)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.8755289316177368
    2. ' payment' → logprob: -1.8755289316177368
    3. ')' → logprob: -2.0005288124084473
    4. ' )' → logprob: -2.5005288124084473
    5. 'payment' → logprob: -2.8755288124084473
    6. 'space' → logprob: -3.3755288124084473
    7. ' coin' → logprob: -3.3755288124084473
    8. '```' → logprob: -3.3755288124084473
    9. 'coin' → logprob: -3.8755288124084473
    10. ' current' → logprob: -4.000528812408447

Token 1068: ' counts' (ID: 28991)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.7532148957252502
    2. 's' → logprob: -0.8782148957252502
    3. '_' → logprob: -2.5032148361206055
    4. '_s' → logprob: -4.3782148361206055
    5. ' s' → logprob: -4.8782148361206055
    6. '_limits' → logprob: -5.2532148361206055
    7. '_types' → logprob: -5.8782148361206055
    8. ' _' → logprob: -6.6282148361206055
    9. ' counts' → logprob: -7.8782148361206055
    10. ')' → logprob: -8.253214836120605

Token 1069: ' as' (ID: 472)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9213840365409851
    2. ')' → logprob: -1.2963840961456299
    3. '<|end|>' → logprob: -1.9213840961456299
    4. '(' → logprob: -3.67138409614563
    5. '       ' → logprob: -3.67138409614563
    6. ',' → logprob: -3.92138409614563
    7. '   ' → logprob: -4.171383857727051
    8. ':' → logprob: -4.296383857727051
    9. '<|end|>' → logprob: -4.296383857727051
    10. '[
' → logprob: -4.421383857727051

Token 1070: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0225927829742432
    2. 'a' → logprob: -1.6475927829742432
    3. '[' → logprob: -2.647592782974243
    4. 'tuple' → logprob: -2.897592782974243
    5. ' a' → logprob: -3.272592782974243
    6. 'coin' → logprob: -3.272592782974243
    7. ' tuple' → logprob: -3.272592782974243
    8. 'list' → logprob: -3.272592782974243
    9. ' (' → logprob: -3.397592782974243
    10. 'self' → logprob: -3.772592782974243

Token 1071: '6' (ID: 21)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2926099300384521
    2. 'self' → logprob: -1.5426099300384521
    3. 'current' → logprob: -1.5426099300384521
    4. 'list' → logprob: -2.292609930038452
    5. 'tuple' → logprob: -2.417609930038452
    6. 'coin' → logprob: -3.792609930038452
    7. '(current' → logprob: -4.417610168457031
    8. 'len' → logprob: -4.542610168457031
    9. '(tuple' → logprob: -4.542610168457031
    10. '[' → logprob: -4.917610168457031

Token 1072: ' length' (ID: 5517)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07420313358306885
    2. ']' → logprob: -3.4492030143737793
    3. ',' → logprob: -4.949203014373779
    4. '[' → logprob: -5.074203014373779
    5. 's' → logprob: -5.074203014373779
    6. '   ' → logprob: -5.074203014373779
    7. ':' → logprob: -5.199203014373779
    8. '```' → logprob: -5.949203014373779
    9. '_counts' → logprob: -6.949203014373779
    10. '<|end|>' → logprob: -7.074203014373779

Token 1073: ' tuple' (ID: 31311)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9646801948547363
    2. ':' → logprob: -1.2146801948547363
    3. '[' → logprob: -1.8396801948547363
    4. ',' → logprob: -2.9646801948547363
    5. '(' → logprob: -3.3396801948547363
    6. ']' → logprob: -4.464680194854736
    7. '   ' → logprob: -4.464680194854736
    8. 's' → logprob: -4.714680194854736
    9. '):' → logprob: -4.839680194854736
    10. '<|end|>' → logprob: -4.839680194854736

Token 1074: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6988474726676941
    2. ':' → logprob: -1.9488475322723389
    3. ' =' → logprob: -1.9488475322723389
    4. '[' → logprob: -2.198847532272339
    5. ')' → logprob: -3.823847532272339
    6. '   ' → logprob: -3.823847532272339
    7. ',' → logprob: -4.32384729385376
    8. '=' → logprob: -4.44884729385376
    9. '):' → logprob: -4.44884729385376
    10. '(' → logprob: -5.32384729385376

Token 1075: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07853036373853683
    2. '        
' → logprob: -3.2035303115844727
    3. '
' → logprob: -4.453530311584473
    4. '<|end|>' → logprob: -4.703530311584473
    5. '[' → logprob: -5.328530311584473
    6. ',' → logprob: -5.828530311584473
    7. '<|end|>' → logprob: -6.828530311584473
    8. ')' → logprob: -7.328530311584473
    9. '[
' → logprob: -7.578530311584473
    10. '    
' → logprob: -7.578530311584473

Token 1076: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12712307274341583
    2. '
' → logprob: -3.0021231174468994
    3. '        
' → logprob: -3.2521231174468994
    4. '[' → logprob: -4.87712287902832
    5. '    
' → logprob: -5.25212287902832
    6. '   ' → logprob: -5.62712287902832
    7. ' =' → logprob: -6.12712287902832
    8. ',' → logprob: -6.25212287902832
    9. '  
' → logprob: -6.62712287902832
    10. ')' → logprob: -6.75212287902832

Token 1077: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13995890319347382
    2. '        
' → logprob: -3.0149588584899902
    3. '[' → logprob: -3.7649588584899902
    4. '
' → logprob: -4.01495885848999
    5. ' =' → logprob: -4.51495885848999
    6. '    
' → logprob: -5.26495885848999
    7. ')' → logprob: -5.76495885848999
    8. ',' → logprob: -5.88995885848999
    9. '<|end|>' → logprob: -6.01495885848999
    10. ':' → logprob: -6.13995885848999

Token 1078: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07263632118701935
    2. '        
' → logprob: -3.072636365890503
    3. '
' → logprob: -4.447636127471924
    4. '    
' → logprob: -6.322636127471924
    5. '<|end|>' → logprob: -6.572636127471924
    6. '  
' → logprob: -6.822636127471924
    7. '        ' → logprob: -6.822636127471924
    8. '[' → logprob: -7.072636127471924
    9. '```' → logprob: -7.322636127471924
    10. '   ' → logprob: -7.322636127471924

Token 1079: ' We'll' (ID: 46830)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15005694329738617
    2. '[' → logprob: -3.025056838989258
    3. ' =' → logprob: -3.900056838989258
    4. '        
' → logprob: -4.025056838989258
    5. '   ' → logprob: -4.150056838989258
    6. ':' → logprob: -4.650056838989258
    7. '
' → logprob: -5.775056838989258
    8. '    
' → logprob: -6.025056838989258
    9. ' ' → logprob: -6.150056838989258
    10. '(' → logprob: -6.150056838989258

Token 1080: ' enumerate' (ID: 29671)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5850416421890259
    2. '       ' → logprob: -1.8350416421890259
    3. 'generate' → logprob: -2.2100415229797363
    4. ' continue' → logprob: -2.7100415229797363
    5. '   ' → logprob: -2.8350415229797363
    6. 'def' → logprob: -4.710041522979736
    7. 'for' → logprob: -5.085041522979736
    8. ' generate' → logprob: -5.710041522979736
    9. '    ' → logprob: -6.085041522979736
    10. '...' → logprob: -6.210041522979736

Token 1081: ' all' (ID: 722)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10319045931100845
    2. 'range' → logprob: -3.2281904220581055
    3. '(
' → logprob: -3.9781904220581055
    4. '[' → logprob: -4.3531904220581055
    5. '(range' → logprob: -4.9781904220581055
    6. 'for' → logprob: -5.9781904220581055
    7. 'from' → logprob: -5.9781904220581055
    8. 'count' → logprob: -6.4781904220581055
    9. '   ' → logprob: -6.7281904220581055
    10. '       ' → logprob: -6.8531904220581055

Token 1082: ' combinations' (ID: 43835)
  Prédit: ' combinations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combinations' → logprob: -1.1931921243667603
    2. '(' → logprob: -2.5681920051574707
    3. ' possible' → logprob: -2.8181920051574707
    4. ' (' → logprob: -2.9431920051574707
    5. ' counts' → logprob: -2.9431920051574707
    6. 'counts' → logprob: -2.9431920051574707
    7. ' coin' → logprob: -3.1931920051574707
    8. 'com' → logprob: -3.3181920051574707
    9. 'count' → logprob: -3.4431920051574707
    10. '(count' → logprob: -3.5681920051574707

Token 1083: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2193911075592041
    2. ' =' → logprob: -3.469391107559204
    3. ':' → logprob: -3.594391107559204
    4. ',' → logprob: -3.969391107559204
    5. ' of' → logprob: -3.969391107559204
    6. '[' → logprob: -4.219390869140625
    7. '(range' → logprob: -4.219390869140625
    8. ' for' → logprob: -4.344390869140625
    9. '(' → logprob: -4.344390869140625
    10. ' in' → logprob: -4.594390869140625

Token 1084: ' coin' (ID: 22179)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.9674474000930786
    2. 'range' → logprob: -1.3424474000930786
    3. 'count' → logprob: -1.5924474000930786
    4. 'coin' → logprob: -2.842447280883789
    5. 'c' → logprob: -4.217447280883789
    6. '(' → logprob: -4.342447280883789
    7. 'i' → logprob: -4.717447280883789
    8. '(count' → logprob: -4.842447280883789
    9. '[i' → logprob: -5.092447280883789
    10. 'usage' → logprob: -5.092447280883789

Token 1085: ' usage' (ID: 16622)
  Prédit: '_limits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_limits' → logprob: -0.4823389947414398
    2. '_counts' → logprob: -0.9823390245437622
    3. '_' → logprob: -5.982338905334473
    4. '_ranges' → logprob: -6.357338905334473
    5. 's' → logprob: -7.107338905334473
    6. ')' → logprob: -7.232338905334473
    7. 'limits' → logprob: -7.732338905334473
    8. '_limit' → logprob: -8.732338905334473
    9. '_range' → logprob: -8.732338905334473
    10. '   ' → logprob: -8.732338905334473

Token 1086: ' within' (ID: 3518)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1342387199401855
    2. '[' → logprob: -2.0092387199401855
    3. ',' → logprob: -2.5092387199401855
    4. '(' → logprob: -2.6342387199401855
    5. ' =' → logprob: -2.6342387199401855
    6. '=' → logprob: -3.1342387199401855
    7. '   ' → logprob: -3.3842387199401855
    8. '(
' → logprob: -3.5092387199401855
    9. '       ' → logprob: -3.7592387199401855
    10. ')' → logprob: -3.8842387199401855

Token 1087: ' limits' (ID: 22406)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.1513911783695221
    2. '[count' → logprob: -2.4013912677764893
    3. '[' → logprob: -3.9013912677764893
    4. 'count' → logprob: -4.40139102935791
    5. '[i' → logprob: -5.40139102935791
    6. '[c' → logprob: -5.77639102935791
    7. ' coin' → logprob: -6.15139102935791
    8. 'limit' → logprob: -6.65139102935791
    9. 'range' → logprob: -6.90139102935791
    10. ' [' → logprob: -7.15139102935791

Token 1088: ' coin' (ID: 22179)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28631699085235596
    2. '       ' → logprob: -2.9113168716430664
    3. '[' → logprob: -3.0363168716430664
    4. ',' → logprob: -3.1613168716430664
    5. '(' → logprob: -4.161316871643066
    6. '):' → logprob: -4.286316871643066
    7. ':
' → logprob: -4.411316871643066
    8. ')' → logprob: -4.786316871643066
    9. '(
' → logprob: -4.786316871643066
    10. '   ' → logprob: -4.911316871643066

Token 1089: '_limits' (ID: 80205)
  Prédit: '_limits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limits' → logprob: -0.009840729646384716
    2. '_counts' → logprob: -4.634840965270996
    3. 'limits' → logprob: -9.884840965270996
    4. '_limit' → logprob: -11.634840965270996
    5. '_' → logprob: -11.884840965270996
    6. '   ' → logprob: -12.634840965270996
    7. 'Limits' → logprob: -12.884840965270996
    8. '
' → logprob: -13.009840965270996
    9. '_ranges' → logprob: -13.009840965270996
    10. '```' → logprob: -13.634840965270996

Token 1090: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3368847072124481
    2. '[' → logprob: -2.0868847370147705
    3. ')' → logprob: -3.0868847370147705
    4. ' =' → logprob: -3.3368847370147705
    5. ',' → logprob: -4.211884498596191
    6. '(' → logprob: -4.461884498596191
    7. '):' → logprob: -4.461884498596191
    8. '=' → logprob: -4.586884498596191
    9. '   ' → logprob: -5.211884498596191
    10. '       ' → logprob: -5.336884498596191

Token 1091: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13881465792655945
    2. ':' → logprob: -2.513814687728882
    3. ',' → logprob: -4.638814449310303
    4. '.' → logprob: -4.763814449310303
    5. ' =' → logprob: -5.263814449310303
    6. '[' → logprob: -5.388814449310303
    7. '        
' → logprob: -5.513814449310303
    8. ')' → logprob: -5.638814449310303
    9. '(' → logprob: -6.013814449310303
    10. '=' → logprob: -6.138814449310303

Token 1092: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.276673287153244
    2. '
' → logprob: -2.6516733169555664
    3. '        
' → logprob: -3.0266733169555664
    4. ' =' → logprob: -4.026673316955566
    5. '[' → logprob: -4.026673316955566
    6. ':' → logprob: -4.651673316955566
    7. '```' → logprob: -5.026673316955566
    8. ':
' → logprob: -5.151673316955566
    9. ' for' → logprob: -5.151673316955566
    10. ',' → logprob: -5.151673316955566

Token 1093: ' To' (ID: 2514)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5108836889266968
    2. ' =' → logprob: -2.0108838081359863
    3. '[' → logprob: -2.6358838081359863
    4. '(' → logprob: -3.0108838081359863
    5. ':' → logprob: -3.3858838081359863
    6. '   ' → logprob: -3.5108838081359863
    7. '=' → logprob: -4.510883808135986
    8. '(
' → logprob: -4.885883808135986
    9. '
' → logprob: -5.010883808135986
    10. 'for' → logprob: -5.010883808135986

Token 1094: ' limit' (ID: 5967)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.14993371069431305
    2. 'generate' → logprob: -2.2749338150024414
    3. 'continue' → logprob: -4.274933815002441
    4. 'product' → logprob: -4.774933815002441
    5. '   ' → logprob: -6.274933815002441
    6. 'range' → logprob: -6.774933815002441
    7. 'avoid' → logprob: -6.774933815002441
    8. '_continue' → logprob: -7.024933815002441
    9. 'build' → logprob: -7.149933815002441
    10. 'complete' → logprob: -7.149933815002441

Token 1095: ' search' (ID: 3684)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9807102680206299
    2. '_ranges' → logprob: -1.8557102680206299
    3. '   ' → logprob: -2.85571026802063
    4. ',' → logprob: -3.23071026802063
    5. '_counts' → logprob: -3.23071026802063
    6. ' ' → logprob: -3.60571026802063
    7. 'coin' → logprob: -3.98071026802063
    8. ' ,' → logprob: -3.98071026802063
    9. 'range' → logprob: -3.98071026802063
    10. '_' → logprob: -4.105710029602051

Token 1096: ' space' (ID: 4918)
  Prédit: '_ranges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ranges' → logprob: -0.5245488286018372
    2. '_' → logprob: -1.6495487689971924
    3. '_limits' → logprob: -3.1495487689971924
    4. '_range' → logprob: -3.2745487689971924
    5. '       ' → logprob: -3.5245487689971924
    6. '   ' → logprob: -4.2745490074157715
    7. '_space' → logprob: -4.5245490074157715
    8. '_limit' → logprob: -4.5245490074157715
    9. ')' → logprob: -4.6495490074157715
    10. 'space' → logprob: -4.8995490074157715

Token 1097: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.734844982624054
    2. ',' → logprob: -1.2348449230194092
    3. ':' → logprob: -2.109844923019409
    4. ' =' → logprob: -3.859844923019409
    5. '   ' → logprob: -4.234845161437988
    6. ' for' → logprob: -4.859845161437988
    7. '=' → logprob: -4.859845161437988
    8. ':
' → logprob: -4.984845161437988
    9. 'for' → logprob: -5.109845161437988
    10. '[' → logprob: -5.234845161437988

Token 1098: ' use' (ID: 1199)
  Prédit: ' ranges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ranges' → logprob: -0.8392264246940613
    2. ' for' → logprob: -1.214226484298706
    3. 'ranges' → logprob: -1.964226484298706
    4. '       ' → logprob: -2.839226484298706
    5. 'for' → logprob: -3.214226484298706
    6. 'max' → logprob: -5.089226245880127
    7. ' max' → logprob: -5.339226245880127
    8. 'range' → logprob: -5.589226245880127
    9. ' coin' → logprob: -6.214226245880127
    10. ' range' → logprob: -6.214226245880127

Token 1099: ' a' (ID: 261)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5767788887023926
    2. '[' → logprob: -2.2017788887023926
    3. ' range' → logprob: -2.4517788887023926
    4. 'product' → logprob: -2.5767788887023926
    5. 'ranges' → logprob: -3.0767788887023926
    6. ' product' → logprob: -3.9517788887023926
    7. ' [' → logprob: -4.201778888702393
    8. 'coin' → logprob: -4.201778888702393
    9. ' itertools' → logprob: -4.451778888702393
    10. ' ranges' → logprob: -4.701778888702393

Token 1100: ' heuristic' (ID: 146226)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2813626229763031
    2. 'range' → logprob: -2.656362533569336
    3. 'product' → logprob: -3.031362533569336
    4. ' max' → logprob: -3.906362533569336
    5. 'generator' → logprob: -3.906362533569336
    6. 'limit' → logprob: -4.531362533569336
    7. 'threshold' → logprob: -4.656362533569336
    8. ' product' → logprob: -4.781362533569336
    9. '   ' → logprob: -4.906362533569336
    10. 'maximum' → logprob: -5.031362533569336

Token 1101: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2425634115934372
    2. ' =' → logprob: -2.742563486099243
    3. ':' → logprob: -2.992563486099243
    4. '[' → logprob: -2.992563486099243
    5. '   ' → logprob: -4.367563247680664
    6. ':
' → logprob: -5.367563247680664
    7. '        
' → logprob: -5.492563247680664
    8. ')' → logprob: -5.617563247680664
    9. '=' → logprob: -5.742563247680664
    10. ',' → logprob: -5.867563247680664

Token 1102: ' total' (ID: 3609)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.781475305557251
    2. ' ranges' → logprob: -2.031475305557251
    3. 'ranges' → logprob: -2.156475305557251
    4. ' range' → logprob: -2.156475305557251
    5. ' max' → logprob: -2.406475305557251
    6. 'max' → logprob: -2.656475305557251
    7. ' for' → logprob: -2.781475305557251
    8. '[' → logprob: -3.031475305557251
    9. 'for' → logprob: -3.156475305557251
    10. '   ' → logprob: -3.656475305557251

Token 1103: ' coin' (ID: 22179)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -1.3533302545547485
    2. '_limits' → logprob: -1.7283302545547485
    3. '_' → logprob: -1.9783302545547485
    4. '_sum' → logprob: -2.228330135345459
    5. 'sum' → logprob: -2.353330135345459
    6. '_usage' → logprob: -2.728330135345459
    7. '_limit' → logprob: -3.603330135345459
    8. '_s' → logprob: -3.603330135345459
    9. ' _' → logprob: -4.103330135345459
    10. '_count' → logprob: -4.353330135345459

Token 1104: ' sum' (ID: 4215)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7108950018882751
    2. '_counts' → logprob: -1.71089506149292
    3. '_usage' → logprob: -2.46089506149292
    4. ' _' → logprob: -2.58589506149292
    5. '_limits' → logprob: -2.58589506149292
    6. 's' → logprob: -2.71089506149292
    7. '_s' → logprob: -4.33589506149292
    8. '_limit' → logprob: -5.58589506149292
    9. '_count' → logprob: -6.21089506149292
    10. '_use' → logprob: -7.21089506149292

Token 1105: ' ≤' (ID: 72554)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8381859660148621
    2. ')' → logprob: -1.5881860256195068
    3. ' =' → logprob: -2.963186025619507
    4. '   ' → logprob: -3.088186025619507
    5. '       ' → logprob: -3.213186025619507
    6. '[
' → logprob: -3.338186025619507
    7. '=' → logprob: -3.338186025619507
    8. '_' → logprob: -3.338186025619507
    9. ':' → logprob: -4.213185787200928
    10. ',' → logprob: -4.338185787200928

Token 1106: ' price' (ID: 3911)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.31701189279556274
    2. 'self' → logprob: -1.317011833190918
    3. ' price' → logprob: -5.942011833190918
    4. 'price' → logprob: -7.317011833190918
    5. '   ' → logprob: -7.942011833190918
    6. ' ' → logprob: -10.567011833190918
    7. '    ' → logprob: -11.192011833190918
    8. '
' → logprob: -11.442011833190918
    9. ' ' → logprob: -11.567011833190918
    10. '       ' → logprob: -11.567011833190918

Token 1107: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1349663734436035
    2. ':' → logprob: -2.0099663734436035
    3. '       ' → logprob: -2.0099663734436035
    4. '[' → logprob: -2.1349663734436035
    5. ',' → logprob: -2.7599663734436035
    6. 's' → logprob: -3.0099663734436035
    7. '<|end|>' → logprob: -3.6349663734436035
    8. '   ' → logprob: -3.7599663734436035
    9. '(' → logprob: -4.0099663734436035
    10. ']' → logprob: -4.5099663734436035

Token 1108: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0012226090766489506
    2. ' ' → logprob: -6.751222610473633
    3. '
' → logprob: -10.501222610473633
    4. '```' → logprob: -12.001222610473633
    5. '1' → logprob: -12.876222610473633
    6. '

' → logprob: -13.001222610473633
    7. '`' → logprob: -13.001222610473633
    8. '10' → logprob: -13.001222610473633
    9. '   ' → logprob: -13.376222610473633
    10. '110' → logprob: -13.501222610473633

Token 1109: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.00040755473310127854
    2. ' ' → logprob: -7.875407695770264
    3. '
' → logprob: -10.625407218933105
    4. '   ' → logprob: -14.500407218933105
    5. '```' → logprob: -14.750407218933105
    6. '

' → logprob: -14.875407218933105
    7. '10' → logprob: -15.125407218933105
    8. '1' → logprob: -15.250407218933105
    9. ' 
' → logprob: -15.375407218933105
    10. '    
' → logprob: -15.750407218933105

Token 1110: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000510856625624001
    2. ')' → logprob: -8.625511169433594
    3. '+' → logprob: -10.000511169433594
    4. ' )' → logprob: -10.125511169433594
    5. ',' → logprob: -10.250511169433594
    6. '3' → logprob: -10.375511169433594
    7. '000' → logprob: -10.750511169433594
    8. '1' → logprob: -10.875511169433594
    9. ' 
' → logprob: -11.000511169433594
    10. '```' → logprob: -11.250511169433594

Token 1111: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49744144082069397
    2. ':' → logprob: -1.8724414110183716
    3. '[' → logprob: -2.122441530227661
    4. ')' → logprob: -3.747441530227661
    5. '):' → logprob: -3.872441530227661
    6. ',' → logprob: -4.122441291809082
    7. '   ' → logprob: -4.497441291809082
    8. ' =' → logprob: -4.747441291809082
    9. '           ' → logprob: -5.122441291809082
    10. ']' → logprob: -5.497441291809082

Token 1112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004754664842039347
    2. '        
' → logprob: -6.004754543304443
    3. '
' → logprob: -6.379754543304443
    4. ',' → logprob: -8.879755020141602
    5. '<|end|>' → logprob: -9.254755020141602
    6. '```' → logprob: -9.754755020141602
    7. 'for' → logprob: -10.129755020141602
    8. '#' → logprob: -10.629755020141602
    9. ' for' → logprob: -10.879755020141602
    10. '           ' → logprob: -11.004755020141602

Token 1113: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3041345477104187
    2. '
' → logprob: -1.5541346073150635
    3. '        
' → logprob: -3.6791346073150635
    4. 'coin' → logprob: -5.304134368896484
    5. 'max' → logprob: -5.679134368896484
    6. '    
' → logprob: -6.304134368896484
    7. '   ' → logprob: -6.304134368896484
    8. ' 
' → logprob: -6.429134368896484
    9. '\n' → logprob: -6.429134368896484
    10. '```' → logprob: -6.679134368896484

Token 1114: ' Modified' (ID: 61654)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32320868968963623
    2. ' =' → logprob: -2.073208808898926
    3. '[' → logprob: -2.948208808898926
    4. '   ' → logprob: -4.073208808898926
    5. '
' → logprob: -4.073208808898926
    6. '        
' → logprob: -4.198208808898926
    7. ')' → logprob: -5.198208808898926
    8. 'coin' → logprob: -5.198208808898926
    9. 'range' → logprob: -5.573208808898926
    10. ' coin' → logprob: -5.698208808898926

Token 1115: ' approach' (ID: 7139)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7045701146125793
    2. '       ' → logprob: -0.8295701146125793
    3. '=' → logprob: -4.329570293426514
    4. '   ' → logprob: -4.579570293426514
    5. '[' → logprob: -4.704570293426514
    6. ':' → logprob: -5.204570293426514
    7. '        
' → logprob: -5.329570293426514
    8. 'coin' → logprob: -5.579570293426514
    9. 'def' → logprob: -5.704570293426514
    10. '
' → logprob: -5.704570293426514

Token 1116: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11024314910173416
    2. '
' → logprob: -3.235243082046509
    3. ' =' → logprob: -3.985243082046509
    4. '        
' → logprob: -4.235243320465088
    5. ':' → logprob: -4.985243320465088
    6. '   ' → logprob: -5.235243320465088
    7. '```' → logprob: -6.110243320465088
    8. 'def' → logprob: -6.235243320465088
    9. '[' → logprob: -6.610243320465088
    10. '=' → logprob: -6.735243320465088

Token 1117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006030469201505184
    2. '
' → logprob: -6.131030559539795
    3. '        
' → logprob: -6.256030559539795
    4. ' coin' → logprob: -7.381030559539795
    5. '```' → logprob: -7.506030559539795
    6. 'coin' → logprob: -8.131030082702637
    7. 'import' → logprob: -9.381030082702637
    8. 'max' → logprob: -9.756030082702637
    9. ' max' → logprob: -9.756030082702637
    10. '   ' → logprob: -10.506030082702637

Token 1118: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13736189901828766
    2. 'coin' → logprob: -2.387362003326416
    3. 'max' → logprob: -3.512362003326416
    4. ' coin' → logprob: -6.137362003326416
    5. '
' → logprob: -6.887362003326416
    6. '#' (adapté à ' #') → logprob: -6.887362003326416
    7. ' max' → logprob: -6.887362003326416
    8. '        
' → logprob: -8.012361526489258
    9. '```' → logprob: -8.512361526489258
    10. 'limit' → logprob: -9.012361526489258

Token 1119: ' Iterate' (ID: 129410)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.8628872036933899
    2. 'max' → logprob: -0.9878872036933899
    3. '       ' → logprob: -1.7378871440887451
    4. ' max' → logprob: -4.737887382507324
    5. '#' → logprob: -4.987887382507324
    6. ' coin' → logprob: -5.237887382507324
    7. 'ranges' → logprob: -6.112887382507324
    8. 'coins' → logprob: -6.737887382507324
    9. 'limits' → logprob: -6.737887382507324
    10. 'possible' → logprob: -7.362887382507324

Token 1120: ' coin' (ID: 22179)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.32594019174575806
    2. ' over' → logprob: -2.3259401321411133
    3. 'for' → logprob: -2.8259401321411133
    4. 'from' → logprob: -2.9509401321411133
    5. '       ' → logprob: -4.075940132141113
    6. '(
' → logprob: -4.450940132141113
    7. 'range' → logprob: -4.825940132141113
    8. '   ' → logprob: -4.950940132141113
    9. ' for' → logprob: -5.075940132141113
    10. '(' → logprob: -5.200940132141113

Token 1121: ' usage' (ID: 16622)
  Prédit: '_limits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_limits' → logprob: -0.4618569314479828
    2. '_counts' → logprob: -1.2118569612503052
    3. '_ranges' → logprob: -2.8368568420410156
    4. '_usage' → logprob: -4.961856842041016
    5. '_range' → logprob: -6.086856842041016
    6. '   ' → logprob: -6.711856842041016
    7. '_types' → logprob: -7.336856842041016
    8. '_count' → logprob: -7.711856842041016
    9. '_values' → logprob: -8.086856842041016
    10. '_com' → logprob: -8.336856842041016

Token 1122: ' from' (ID: 591)
  Prédit: '_ranges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ranges' → logprob: -0.5547417998313904
    2. '_counts' → logprob: -1.5547418594360352
    3. ' =' → logprob: -2.304741859436035
    4. 's' → logprob: -2.804741859436035
    5. '       ' → logprob: -4.554741859436035
    6. '_limits' → logprob: -4.679741859436035
    7. '_range' → logprob: -4.804741859436035
    8. '=' → logprob: -5.054741859436035
    9. '   ' → logprob: -5.054741859436035
    10. 'ranges' → logprob: -6.429741859436035

Token 1123: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8051177859306335
    2. '0' → logprob: -1.0551178455352783
    3. '(' → logprob: -1.6801178455352783
    4. ' (' → logprob: -5.180117607116699
    5. ' [' → logprob: -5.555117607116699
    6. ' ' → logprob: -6.305117607116699
    7. '(count' → logprob: -6.805117607116699
    8. '[i' → logprob: -7.055117607116699
    9. '[count' → logprob: -7.180117607116699
    10. '[(' → logprob: -7.430117607116699

Token 1124: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8898189663887024
    2. '[' → logprob: -0.8898189663887024
    3. '0' → logprob: -1.7648189067840576
    4. '[(' → logprob: -6.639819145202637
    5. '[
' → logprob: -6.639819145202637
    6. '
' → logprob: -6.764819145202637
    7. 'range' → logprob: -6.889819145202637
    8. 'product' → logprob: -7.639819145202637
    9. '(
' → logprob: -7.764819145202637
    10. '(product' → logprob: -7.889819145202637

Token 1125: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04819824919104576
    2. 'for' → logprob: -3.9231982231140137
    3. ' ,' → logprob: -4.173198223114014
    4. 'to' → logprob: -5.548198223114014
    5. ',
' → logprob: -6.048198223114014
    6. ')' → logprob: -7.048198223114014
    7. '       ' → logprob: -7.173198223114014
    8. ']' → logprob: -7.423198223114014
    9. ' for' → logprob: -7.423198223114014
    10. '   ' → logprob: -7.798198223114014

Token 1126: 'limit' (ID: 19698)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.13214384019374847
    2. 'count' → logprob: -2.63214373588562
    3. 'limit' → logprob: -3.88214373588562
    4. '[' → logprob: -4.257143974304199
    5. '[count' → logprob: -5.882143974304199
    6. 'c' → logprob: -6.007143974304199
    7. 'limits' → logprob: -6.132143974304199
    8. 'counts' → logprob: -6.382143974304199
    9. ' coin' → logprob: -6.632143974304199
    10. '[c' → logprob: -6.757143974304199

Token 1127: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.638049304485321
    2. 'for' → logprob: -2.013049364089966
    3. '_range' → logprob: -3.013049364089966
    4. '_ranges' → logprob: -3.513049364089966
    5. '_counts' → logprob: -3.638049364089966
    6. '   ' → logprob: -3.638049364089966
    7. '[' → logprob: -3.763049364089966
    8. 'range' → logprob: -3.888049364089966
    9. ',' → logprob: -4.013049125671387
    10. ' for' → logprob: -4.013049125671387

Token 1128: ' each' (ID: 2454)
  Prédit: ' coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.8964230418205261
    2. ' each' → logprob: -1.646423101425171
    3. 'coin' → logprob: -2.146423101425171
    4. 'each' → logprob: -2.146423101425171
    5. ' i' → logprob: -2.396423101425171
    6. 'i' → logprob: -2.896423101425171
    7. ' range' → logprob: -5.896422863006592
    8. ' c' → logprob: -6.146422863006592
    9. ' _' → logprob: -6.271422863006592
    10. 'count' → logprob: -6.396422863006592

Token 1129: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.943336009979248
    2. 'coin' → logprob: -1.693336009979248
    3. ')' → logprob: -2.318336009979248
    4. '(' → logprob: -2.818336009979248
    5. ' coin' → logprob: -3.068336009979248
    6. 'count' → logprob: -3.193336009979248
    7. 'token' → logprob: -3.943336009979248
    8. ' (' → logprob: -4.193336009979248
    9. 'for' → logprob: -4.318336009979248
    10. ' ' → logprob: -4.318336009979248

Token 1130: ' generate' (ID: 10419)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5546947717666626
    2. ' ranges' → logprob: -2.679694652557373
    3. 'ranges' → logprob: -2.804694652557373
    4. 'range' → logprob: -3.179694652557373
    5. ')' → logprob: -3.554694652557373
    6. '           ' → logprob: -3.679694652557373
    7. '[' → logprob: -4.054694652557373
    8. 'counts' → logprob: -4.054694652557373
    9. ' counts' → logprob: -4.179694652557373
    10. ':' → logprob: -4.179694652557373

Token 1131: ' their' (ID: 1043)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -1.8387434482574463
    2. 'coin' → logprob: -2.0887434482574463
    3. '(' → logprob: -2.2137434482574463
    4. ' (' → logprob: -2.2137434482574463
    5. ' coin' → logprob: -2.3387434482574463
    6. 'range' → logprob: -2.3387434482574463
    7. '...' → logprob: -3.0887434482574463
    8. ' product' → logprob: -3.3387434482574463
    9. 'count' → logprob: -3.8387434482574463
    10. ' range' → logprob: -3.8387434482574463

Token 1132: ' total' (ID: 3609)
  Prédit: ' ranges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ranges' → logprob: -1.3931804895401
    2. '_ranges' → logprob: -1.7681804895401
    3. 'ranges' → logprob: -2.2681803703308105
    4. ' product' → logprob: -2.3931803703308105
    5. 'product' → logprob: -2.6431803703308105
    6. '_counts' → logprob: -3.6431803703308105
    7. ')' → logprob: -3.7681803703308105
    8. ' combinations' → logprob: -3.8931803703308105
    9. '_tokens' → logprob: -3.8931803703308105
    10. ' counts' → logprob: -4.0181803703308105

Token 1133: ' coin' (ID: 22179)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.2971722483634949
    2. '_' → logprob: -2.6721723079681396
    3. '_usage' → logprob: -3.2971723079681396
    4. '_values' → logprob: -3.2971723079681396
    5. '_s' → logprob: -3.6721723079681396
    6. '_sum' → logprob: -4.1721720695495605
    7. 's' → logprob: -4.1721720695495605
    8. ')' → logprob: -4.1721720695495605
    9. '   ' → logprob: -4.6721720695495605
    10. '_amount' → logprob: -5.4221720695495605

Token 1134: ' value' (ID: 1432)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.36934980750083923
    2. '_usage' → logprob: -1.4943498373031616
    3. '_' → logprob: -3.119349718093872
    4. ' _' → logprob: -4.744349956512451
    5. '_values' → logprob: -5.244349956512451
    6. 's' → logprob: -5.619349956512451
    7. '_s' → logprob: -5.744349956512451
    8. '   ' → logprob: -5.869349956512451
    9. '_limits' → logprob: -5.869349956512451
    10. ' ' → logprob: -6.119349956512451

Token 1135: ' sum' (ID: 4215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21554212272167206
    2. ':' → logprob: -2.3405420780181885
    3. ' =' → logprob: -3.5905420780181885
    4. '   ' → logprob: -3.9655420780181885
    5. ',' → logprob: -4.465542316436768
    6. '=' → logprob: -4.590542316436768
    7. '
' → logprob: -5.090542316436768
    8. 'for' → logprob: -5.590542316436768
    9. ':
' → logprob: -5.715542316436768
    10. '[' → logprob: -5.840542316436768

Token 1136: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.033743143081665
    2. '       ' → logprob: -1.283743143081665
    3. '   ' → logprob: -2.408743143081665
    4. '[' → logprob: -2.783743143081665
    5. ' =' → logprob: -2.908743143081665
    6. ',' → logprob: -3.033743143081665
    7. '(' → logprob: -3.408743143081665
    8. '(
' → logprob: -3.908743143081665
    9. '=' → logprob: -4.408742904663086
    10. ' (' → logprob: -5.283742904663086

Token 1137: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025928965769708157
    2. '        
' → logprob: -6.627593040466309
    3. ',' → logprob: -8.002593040466309
    4. '           ' → logprob: -8.377593040466309
    5. ' for' → logprob: -8.752593040466309
    6. 'for' → logprob: -9.002593040466309
    7. '
' → logprob: -9.127593040466309
    8. '```' → logprob: -9.127593040466309
    9. '   ' → logprob: -10.502593040466309
    10. '    
' → logprob: -10.627593040466309

Token 1138: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051137879490852356
    2. 'for' → logprob: -4.551137924194336
    3. '(' → logprob: -5.176137924194336
    4. ' for' → logprob: -5.176137924194336
    5. '(
' → logprob: -5.301137924194336
    6. '[' → logprob: -5.426137924194336
    7. ',' → logprob: -5.801137924194336
    8. '[
' → logprob: -5.801137924194336
    9. '```' → logprob: -6.676137924194336
    10. '        
' → logprob: -6.801137924194336

Token 1139: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6294590830802917
    2. 'for' → logprob: -1.7544591426849365
    3. ':' → logprob: -2.8794591426849365
    4. '   ' → logprob: -3.0044591426849365
    5. '(
' → logprob: -3.5044591426849365
    6. '(' → logprob: -3.5044591426849365
    7. '\n' → logprob: -4.004458904266357
    8. ' for' → logprob: -4.004458904266357
    9. '[' → logprob: -4.379458904266357
    10. '\' → logprob: -4.504458904266357

Token 1140: ' each' (ID: 2454)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -1.475022554397583
    2. 'usage' → logprob: -1.850022554397583
    3. ' usage' → logprob: -1.975022554397583
    4. 'coin' → logprob: -2.350022554397583
    5. ' counts' → logprob: -2.350022554397583
    6. ' coin' → logprob: -2.600022554397583
    7. 'comb' → logprob: -2.725022554397583
    8. 'combo' → logprob: -3.350022554397583
    9. ' combo' → logprob: -3.850022554397583
    10. ' coins' → logprob: -3.975022554397583

Token 1141: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6572691202163696
    2. ' coin' → logprob: -1.7822691202163696
    3. ' combination' → logprob: -2.78226900100708
    4. ' _' → logprob: -2.78226900100708
    5. 'coin' → logprob: -3.15726900100708
    6. '   ' → logprob: -4.03226900100708
    7. ')' → logprob: -4.03226900100708
    8. ' usage' → logprob: -4.03226900100708
    9. '.' → logprob: -4.53226900100708
    10. ' ' → logprob: -4.78226900100708

Token 1142: ' k' (ID: 372)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5531290173530579
    2. 'if' → logprob: -0.9281290173530579
    3. '       ' → logprob: -4.303129196166992
    4. 'for' → logprob: -5.803129196166992
    5. '           ' → logprob: -5.928129196166992
    6. 'continue' → logprob: -6.178129196166992
    7. '
' → logprob: -6.553129196166992
    8. ' for' → logprob: -6.803129196166992
    9. ' continue' → logprob: -6.803129196166992
    10. '   ' → logprob: -6.928129196166992

Token 1143: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12400294840335846
    2. ' =' → logprob: -2.8740029335021973
    3. 'in' → logprob: -3.6240029335021973
    4. '=' → logprob: -3.8740029335021973
    5. ')' → logprob: -5.624002933502197
    6. ',' → logprob: -5.999002933502197
    7. ' ' → logprob: -6.499002933502197
    8. '    ' → logprob: -6.874002933502197
    9. ' ,' → logprob: -6.874002933502197
    10. '_in' → logprob: -7.374002933502197

Token 1144: ' (' (ID: 350)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005094053223729134
    2. '[' → logprob: -5.880094051361084
    3. ' range' → logprob: -6.130094051361084
    4. '0' → logprob: -10.255094528198242
    5. 'product' → logprob: -10.630094528198242
    6. 'coin' → logprob: -10.755094528198242
    7. '(' → logprob: -11.755094528198242
    8. '
' → logprob: -12.005094528198242
    9. '(range' → logprob: -12.005094528198242
    10. '[
' → logprob: -12.630094528198242

Token 1145: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.416892409324646
    2. '0' → logprob: -1.291892409324646
    3. 'range' → logprob: -3.0418925285339355
    4. '(' → logprob: -4.0418925285339355
    5. ' range' → logprob: -8.291892051696777
    6. '1' → logprob: -8.291892051696777
    7. '[
' → logprob: -9.291892051696777
    8. ' [' → logprob: -9.541892051696777
    9. '(range' → logprob: -9.666892051696777
    10. '   ' → logprob: -9.916892051696777

Token 1146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002161325654014945
    2. ' ,' → logprob: -6.252161502838135
    3. ',
' → logprob: -8.752161026000977
    4. '..' → logprob: -10.252161026000977
    5. '
' → logprob: -11.252161026000977
    6. ' ' → logprob: -12.752161026000977
    7. '...' → logprob: -12.877161026000977
    8. ')' → logprob: -12.877161026000977
    9. '   ' → logprob: -13.252161026000977
    10. '1' → logprob: -13.377161026000977

Token 1147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023369524569716305
    2. ' ' → logprob: -8.37523365020752
    3. '   ' → logprob: -12.87523365020752
    4. '
' → logprob: -14.87523365020752
    5. '  ' → logprob: -16.875234603881836
    6. '```' → logprob: -17.125234603881836
    7. ')' → logprob: -17.250234603881836
    8. '    ' → logprob: -18.250234603881836
    9. '       ' → logprob: -18.375234603881836
    10. '

' → logprob: -18.875234603881836

Token 1148: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6829990148544312
    2. '):' → logprob: -1.0579990148544312
    3. '):
' → logprob: -1.9329990148544312
    4. ')
' → logprob: -6.682999134063721
    5. ',' → logprob: -6.932999134063721
    6. '       ' → logprob: -8.432998657226562
    7. '),' → logprob: -8.432998657226562
    8. '   ' → logprob: -9.057998657226562
    9. ',
' → logprob: -10.182998657226562
    10. '100' → logprob: -10.432998657226562

Token 1149: ' number' (ID: 2086)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33764979243278503
    2. '       ' → logprob: -2.3376498222351074
    3. '):' → logprob: -2.4626498222351074
    4. 'for' → logprob: -3.9626498222351074
    5. ',' → logprob: -4.087649822235107
    6. ')' → logprob: -4.087649822235107
    7. '   ' → logprob: -4.462649822235107
    8. ':
' → logprob: -4.712649822235107
    9. ' for' → logprob: -4.962649822235107
    10. '
' → logprob: -5.462649822235107

Token 1150: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.6318298578262329
    2. ' of' → logprob: -1.756829857826233
    3. '_of' → logprob: -2.2568297386169434
    4. '_' → logprob: -2.8818297386169434
    5. '       ' → logprob: -3.0068297386169434
    6. ')' → logprob: -3.2568297386169434
    7. '=' → logprob: -3.7568297386169434
    8. '[' → logprob: -5.131829738616943
    9. '        ' → logprob: -5.381829738616943
    10. ' =' → logprob: -6.131829738616943

Token 1151: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.03134932741522789
    2. ' ' → logprob: -3.7813494205474854
    3. 'b' → logprob: -5.031349182128906
    4. '_' → logprob: -7.656349182128906
    5. ' thousand' → logprob: -7.906349182128906
    6. ' bills' → logprob: -8.156349182128906
    7. '`' → logprob: -9.531349182128906
    8. '   ' → logprob: -9.531349182128906
    9. '```' → logprob: -9.781349182128906
    10. '000' → logprob: -9.906349182128906

Token 1152: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.06660827994346619
    2. 'b' → logprob: -2.941608190536499
    3. ' ' → logprob: -4.941608428955078
    4. '_' → logprob: -5.941608428955078
    5. ')' → logprob: -7.566608428955078
    6. ' bills' → logprob: -7.566608428955078
    7. '1' → logprob: -8.566608428955078
    8. '000' → logprob: -8.691608428955078
    9. ' thousand' → logprob: -9.191608428955078
    10. '   ' → logprob: -9.566608428955078

Token 1153: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.4849443838757e-06
    2. '000' → logprob: -13.250004768371582
    3. '_' → logprob: -13.500004768371582
    4. ' ' → logprob: -14.375004768371582
    5. '   ' → logprob: -15.875004768371582
    6. '۰' → logprob: -16.000003814697266
    7. ')' → logprob: -16.000003814697266
    8. '[' → logprob: -16.625003814697266
    9. '
' → logprob: -16.750003814697266
    10. '```' → logprob: -17.125003814697266

Token 1154: '-y' (ID: 18102)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09647320210933685
    2. ')' → logprob: -3.471473217010498
    3. '_' → logprob: -4.596473217010498
    4. '-
' → logprob: -4.846473217010498
    5. ',' → logprob: -4.971473217010498
    6. ')-' → logprob: -5.221473217010498
    7. '-y' → logprob: -5.346473217010498
    8. '[-' → logprob: -5.471473217010498
    9. '_-' → logprob: -5.471473217010498
    10. '```' → logprob: -5.971473217010498

Token 1155: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -1.7120533811976202e-05
    2. '-en' → logprob: -11.125017166137695
    3. '(en' → logprob: -13.875017166137695
    4. '=en' → logprob: -14.875017166137695
    5. ' bills' → logprob: -15.000017166137695
    6. '
' → logprob: -15.250017166137695
    7. '```' → logprob: -16.000017166137695
    8. '_en' → logprob: -17.125017166137695
    9. ''en' → logprob: -17.250017166137695
    10. '{
' → logprob: -17.250017166137695

Token 1156: ' bills' (ID: 26846)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6028974652290344
    2. '_b' → logprob: -1.6028974056243896
    3. ' bills' → logprob: -1.8528974056243896
    4. '_bill' → logprob: -2.9778974056243896
    5. 's' → logprob: -4.477897644042969
    6. 'bill' → logprob: -4.727897644042969
    7. ')' → logprob: -4.852897644042969
    8. '_' → logprob: -5.477897644042969
    9. ' bill' → logprob: -5.977897644042969
    10. ' _' → logprob: -6.102897644042969

Token 1157: ' handed' (ID: 42324)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07941789925098419
    2. '
' → logprob: -3.7044179439544678
    3. ' =' → logprob: -3.9544179439544678
    4. ':' → logprob: -4.329417705535889
    5. '   ' → logprob: -5.329417705535889
    6. '        
' → logprob: -5.579417705535889
    7. '):
' → logprob: -6.204417705535889
    8. ':
' → logprob: -6.329417705535889
    9. '=' → logprob: -6.579417705535889
    10. ')' → logprob: -6.954417705535889

Token 1158: ' over' (ID: 1072)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.18041031062602997
    2. ')' → logprob: -2.055410385131836
    3. '_' → logprob: -3.805410385131836
    4. ',' → logprob: -5.305410385131836
    5. '_over' → logprob: -6.555410385131836
    6. ' over' → logprob: -6.805410385131836
    7. '   ' → logprob: -7.305410385131836
    8. '       ' → logprob: -7.305410385131836
    9. '=' → logprob: -7.430410385131836
    10. '-' → logprob: -7.555410385131836

Token 1159: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5864339470863342
    2. ':' → logprob: -1.4614338874816895
    3. '   ' → logprob: -2.7114338874816895
    4. ' =' → logprob: -3.5864338874816895
    5. ',' → logprob: -3.8364338874816895
    6. ')' → logprob: -4.0864338874816895
    7. '[' → logprob: -4.3364338874816895
    8. '
' → logprob: -4.7114338874816895
    9. '=' → logprob: -4.9614338874816895
    10. '<|end|>' → logprob: -4.9614338874816895

Token 1160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00035333906998857856
    2. '        
' → logprob: -8.750353813171387
    3. '
' → logprob: -9.625353813171387
    4. 'for' → logprob: -9.750353813171387
    5. '           ' → logprob: -10.625353813171387
    6. ' for' → logprob: -10.875353813171387
    7. '```' → logprob: -11.500353813171387
    8. '   ' → logprob: -12.500353813171387
    9. '    
' → logprob: -12.750353813171387
    10. ',' → logprob: -12.750353813171387

Token 1161: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019181927666068077
    2. '
' → logprob: -5.019181728363037
    3. 'for' → logprob: -5.144181728363037
    4. '        
' → logprob: -5.894181728363037
    5. ' for' → logprob: -6.394181728363037
    6. '```' → logprob: -7.394181728363037
    7. 'coin' → logprob: -7.894181728363037
    8. '           ' → logprob: -8.894182205200195
    9. '   ' → logprob: -9.144182205200195
    10. '    
' → logprob: -9.269182205200195

Token 1162: ' Hand' (ID: 7110)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2430848330259323
    2. 'for' → logprob: -2.4930849075317383
    3. '
' → logprob: -2.7430849075317383
    4. ' for' → logprob: -3.6180849075317383
    5. '        
' → logprob: -4.118084907531738
    6. '   ' → logprob: -5.618084907531738
    7. '\n' → logprob: -5.993084907531738
    8. '(
' → logprob: -5.993084907531738
    9. '    
' → logprob: -6.243084907531738
    10. ':
' → logprob: -6.368084907531738

Token 1163: ' over' (ID: 1072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3013102114200592
    2. 'over' → logprob: -2.0513103008270264
    3. '   ' → logprob: -3.1763103008270264
    4. '           ' → logprob: -3.6763103008270264
    5. ' over' → logprob: -3.8013103008270264
    6. ' ' → logprob: -4.676310062408447
    7. '    ' → logprob: -5.176310062408447
    8. '      ' → logprob: -5.301310062408447
    9. '     ' → logprob: -5.301310062408447
    10. '        ' → logprob: -5.551310062408447

Token 1164: ' money' (ID: 3905)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0800347328186035
    2. '_amount' → logprob: -1.4550347328186035
    3. '_co' → logprob: -1.5800347328186035
    4. '_values' → logprob: -3.0800347328186035
    5. '_coin' → logprob: -3.5800347328186035
    6. '_options' → logprob: -3.7050347328186035
    7. '_value' → logprob: -3.7050347328186035
    8. '_' → logprob: -4.3300347328186035
    9. 'coins' → logprob: -4.4550347328186035
    10. '_counts' → logprob: -4.8300347328186035

Token 1165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03029164858162403
    2. '       ' → logprob: -4.655291557312012
    3. '=' → logprob: -4.780291557312012
    4. '<|end|>' → logprob: -5.530291557312012
    5. '<|end|>' → logprob: -6.655291557312012
    6. '        ' → logprob: -6.780291557312012
    7. '   ' → logprob: -7.155291557312012
    8. ' ' → logprob: -7.405291557312012
    9. ',' → logprob: -7.905291557312012
    10. ')' → logprob: -7.905291557312012

Token 1166: ' coin' (ID: 22179)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.5803781747817993
    2. 'coin' → logprob: -1.7053781747817993
    3. '0' → logprob: -1.8303781747817993
    4. ' coin' → logprob: -1.9553781747817993
    5. ' k' → logprob: -2.0803780555725098
    6. ' sum' → logprob: -2.7053780555725098
    7. 'sum' → logprob: -2.8303780555725098
    8. 'value' → logprob: -4.58037805557251
    9. ' (' → logprob: -4.58037805557251
    10. ' ' → logprob: -4.83037805557251

Token 1167: ' sum' (ID: 4215)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.6673569679260254
    2. 's' → logprob: -1.1673569679260254
    3. '_' → logprob: -2.7923569679260254
    4. '_usage' → logprob: -3.1673569679260254
    5. '_s' → logprob: -3.5423569679260254
    6. '_values' → logprob: -3.7923569679260254
    7. '_value' → logprob: -5.292356967926025
    8. '_set' → logprob: -5.792356967926025
    9. '_amount' → logprob: -6.042356967926025
    10. '_used' → logprob: -6.667356967926025

Token 1168: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.3359076976776123
    2. ')' → logprob: -1.7109076976776123
    3. '+' → logprob: -1.9609076976776123
    4. '_' → logprob: -2.0859076976776123
    5. '[' → logprob: -2.5859076976776123
    6. ',' → logprob: -2.9609076976776123
    7. '       ' → logprob: -3.3359076976776123
    8. 's' → logprob: -3.4609076976776123
    9. '   ' → logprob: -4.085907936096191
    10. '=' → logprob: -4.835907936096191

Token 1169: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4934399127960205
    2. ' k' → logprob: -1.4934399127960205
    3. ' (' → logprob: -2.8684399127960205
    4. '(k' → logprob: -2.8684399127960205
    5. '(' → logprob: -2.9934399127960205
    6. '100' → logprob: -6.993439674377441
    7. ' ' → logprob: -9.243439674377441
    8. '1' → logprob: -10.493439674377441
    9. '(
' → logprob: -10.493439674377441
    10. '(b' → logprob: -10.868439674377441

Token 1170: '*' (ID: 9)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.34542912244796753
    2. ')' → logprob: -1.5954291820526123
    3. ',' → logprob: -4.595428943634033
    4. '(' → logprob: -4.595428943634033
    5. '   ' → logprob: -4.720428943634033
    6. ' =' → logprob: -5.095428943634033
    7. '_value' → logprob: -5.220428943634033
    8. '       ' → logprob: -5.470428943634033
    9. '=' → logprob: -5.595428943634033
    10. '_values' → logprob: -5.595428943634033

Token 1171: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.004157702904194593
    2. ' ' → logprob: -5.629157543182373
    3. 'Coin' → logprob: -7.629157543182373
    4. 'self' → logprob: -10.504158020019531
    5. ' Coin' → logprob: -10.754158020019531
    6. 'Bill' → logprob: -12.629158020019531
    7. 'coin' → logprob: -12.754158020019531
    8. '1' → logprob: -13.004158020019531
    9. 'bill' → logprob: -13.254158020019531
    10. '10' → logprob: -13.504158020019531

Token 1172: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4126138687133789
    2. '0' → logprob: -2.037613868713379
    3. ',' → logprob: -3.162613868713379
    4. '_' → logprob: -3.162613868713379
    5. '[' → logprob: -3.412613868713379
    6. '       ' → logprob: -4.037613868713379
    7. '   ' → logprob: -4.537613868713379
    8. '<|end|>' → logprob: -4.662613868713379
    9. '
' → logprob: -4.787613868713379
    10. ':' → logprob: -5.787613868713379

Token 1173: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17149527370929718
    2. ':' → logprob: -2.421495199203491
    3. '[' → logprob: -4.42149543762207
    4. '):' → logprob: -4.42149543762207
    5. ' =' → logprob: -4.54649543762207
    6. '   ' → logprob: -4.92149543762207
    7. ')' → logprob: -5.29649543762207
    8. ',' → logprob: -5.67149543762207
    9. '           ' → logprob: -5.92149543762207
    10. '```' → logprob: -5.92149543762207

Token 1174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1641833335161209
    2. '
' → logprob: -1.9141833782196045
    3. '        
' → logprob: -5.664183139801025
    4. '    
' → logprob: -9.039183616638184
    5. 'for' → logprob: -9.539183616638184
    6. '           ' → logprob: -10.039183616638184
    7. '```' → logprob: -10.039183616638184
    8. ',' → logprob: -10.164183616638184
    9. '\n' → logprob: -10.914183616638184
    10. '
' → logprob: -11.289183616638184

Token 1175: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015871882438659668
    2. '        
' → logprob: -5.015872001647949
    3. '\n' → logprob: -6.265872001647949
    4. '\' → logprob: -6.640872001647949
    5. '(' → logprob: -6.765872001647949
    6. '
' → logprob: -7.265872001647949
    7. ',' → logprob: -7.390872001647949
    8. '    
' → logprob: -7.515872001647949
    9. '           ' → logprob: -7.765872001647949
    10. '   ' → logprob: -7.765872001647949

Token 1176: ' Only' (ID: 12817)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008236292749643326
    2. 'for' → logprob: -6.008236408233643
    3. '
' → logprob: -6.133236408233643
    4. 'coin' → logprob: -6.633236408233643
    5. '           ' → logprob: -8.008235931396484
    6. 'range' → logprob: -8.008235931396484
    7. '   ' → logprob: -8.258235931396484
    8. 'ranges' → logprob: -8.383235931396484
    9. '```' → logprob: -8.758235931396484
    10. '        
' → logprob: -8.758235931396484

Token 1177: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7385563254356384
    2. 'if' → logprob: -1.1135563850402832
    3. 'coin' → logprob: -3.113556385040283
    4. '           ' → logprob: -3.738556385040283
    5. '
' → logprob: -3.863556385040283
    6. 'for' → logprob: -4.238556385040283
    7. 'yield' → logprob: -4.238556385040283
    8. ' for' → logprob: -4.363556385040283
    9. ' coin' → logprob: -4.738556385040283
    10. ' continue' → logprob: -4.863556385040283

Token 1178: ' hand' (ID: 1803)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coin' → logprob: -1.173592448234558
    2. 'hand' → logprob: -1.298592448234558
    3. ' coin' → logprob: -1.798592448234558
    4. ' hand' → logprob: -1.923592448234558
    5. 'money' → logprob: -2.9235925674438477
    6. ' money' → logprob: -3.1735925674438477
    7. 'hando' → logprob: -5.798592567443848
    8. ' total' → logprob: -7.048592567443848
    9. ' <=' → logprob: -7.298592567443848
    10. '<=' → logprob: -7.423592567443848

Token 1179: ' over' (ID: 1072)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09389890730381012
    2. ' _' → logprob: -3.3438990116119385
    3. '       ' → logprob: -3.5938990116119385
    4. 'over' → logprob: -4.718898773193359
    5. ' ' → logprob: -6.218898773193359
    6. '_over' → logprob: -6.218898773193359
    7. '   ' → logprob: -6.718898773193359
    8. '    ' → logprob: -6.843898773193359
    9. 'space' → logprob: -7.093898773193359
    10. '_given' → logprob: -7.093898773193359

Token 1180: ' money' (ID: 3905)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.04401358589529991
    2. '<=' → logprob: -4.294013500213623
    3. ' >' → logprob: -4.669013500213623
    4. ' <' → logprob: -5.419013500213623
    5. '_sum' → logprob: -5.794013500213623
    6. '_' → logprob: -6.044013500213623
    7. ' ' → logprob: -6.294013500213623
    8. '_money' → logprob: -6.294013500213623
    9. ' _' → logprob: -6.919013500213623
    10. ' ≤' → logprob: -7.294013500213623

Token 1181: ' >=' (ID: 5064)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.014558205381035805
    2. '<=' → logprob: -4.2645583152771
    3. ' <' → logprob: -8.389557838439941
    4. ' ≤' → logprob: -9.639557838439941
    5. ' >' → logprob: -10.889557838439941
    6. ' ' → logprob: -11.014557838439941
    7. ' >=' → logprob: -11.389557838439941
    8. ')' → logprob: -11.389557838439941
    9. '=' → logprob: -11.639557838439941
    10. '<' → logprob: -11.764557838439941

Token 1182: ' price' (ID: 3911)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4741038978099823
    2. ' self' → logprob: -0.9741039276123047
    3. '       ' → logprob: -11.849103927612305
    4. ' price' → logprob: -12.224103927612305
    5. '```' → logprob: -12.474103927612305
    6. 'price' → logprob: -12.599103927612305
    7. '   ' → logprob: -12.724103927612305
    8. '
' → logprob: -13.474103927612305
    9. '           ' → logprob: -14.099103927612305
    10. ' ' → logprob: -14.474103927612305

Token 1183: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6638041138648987
    2. ':' → logprob: -1.038804054260254
    3. '):' → logprob: -3.288804054260254
    4. ',' → logprob: -4.163804054260254
    5. '[' → logprob: -4.163804054260254
    6. '```' → logprob: -4.288804054260254
    7. ' =' → logprob: -4.538804054260254
    8. '   ' → logprob: -5.038804054260254
    9. ':
' → logprob: -5.538804054260254
    10. '=' → logprob: -5.538804054260254

Token 1184: ' compute' (ID: 23864)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7369128465652466
    2. ' continue' → logprob: -0.9869128465652466
    3. 'continue' → logprob: -2.611912727355957
    4. '               ' → logprob: -3.111912727355957
    5. ' and' → logprob: -4.236912727355957
    6. '                   ' → logprob: -5.111912727355957
    7. ':' → logprob: -5.986912727355957
    8. '                       ' → logprob: -6.361912727355957
    9. '            ' → logprob: -6.736912727355957
    10. 'and' → logprob: -6.861912727355957

Token 1185: ' change' (ID: 3343)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6771960854530334
    2. 'for' → logprob: -1.3021960258483887
    3. ' for' → logprob: -2.1771960258483887
    4. 'coin' → logprob: -3.5521960258483887
    5. ' coin' → logprob: -4.052196025848389
    6. '           ' → logprob: -4.427196025848389
    7. '```' → logprob: -4.677196025848389
    8. '   ' → logprob: -4.802196025848389
    9. '
' → logprob: -5.552196025848389
    10. ')' → logprob: -5.677196025848389

Token 1186: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5578715205192566
    2. ':' → logprob: -1.1828715801239014
    3. '   ' → logprob: -3.8078715801239014
    4. ',' → logprob: -4.057871341705322
    5. '[' → logprob: -4.057871341705322
    6. ':
' → logprob: -4.307871341705322
    7. '(' → logprob: -4.932871341705322
    8. '
' → logprob: -5.057871341705322
    9. '        
' → logprob: -5.307871341705322
    10. ' =' → logprob: -5.432871341705322

Token 1187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015459483489394188
    2. '        
' → logprob: -5.3904595375061035
    3. '
' → logprob: -5.8904595375061035
    4. '           ' → logprob: -6.7654595375061035
    5. '\' → logprob: -7.1404595375061035
    6. '(' → logprob: -7.3904595375061035
    7. '\n' → logprob: -7.3904595375061035
    8. '```' → logprob: -7.3904595375061035
    9. ',' → logprob: -7.6404595375061035
    10. 'for' → logprob: -7.8904595375061035

Token 1188: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026124132797122
    2. '        
' → logprob: -4.776124000549316
    3. '
' → logprob: -5.026124000549316
    4. ',' → logprob: -6.276124000549316
    5. '           ' → logprob: -6.776124000549316
    6. ' for' → logprob: -6.901124000549316
    7. '```' → logprob: -7.151124000549316
    8. '\' → logprob: -7.151124000549316
    9. '\n' → logprob: -7.401124000549316
    10. 'for' → logprob: -7.526124000549316

Token 1189: ' Check' (ID: 6208)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03209789842367172
    2. 'for' → logprob: -4.907097816467285
    3. '
' → logprob: -5.157097816467285
    4. '```' → logprob: -5.407097816467285
    5. ' for' → logprob: -6.157097816467285
    6. '           ' → logprob: -6.532097816467285
    7. '        
' → logprob: -6.782097816467285
    8. '   ' → logprob: -6.782097816467285
    9. '(' → logprob: -7.032097816467285
    10. ',' → logprob: -7.407097816467285

Token 1190: ' change' (ID: 3343)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6702044010162354
    2. 'if' → logprob: -2.1702044010162354
    3. 'coin' → logprob: -2.5452044010162354
    4. ' for' → logprob: -2.6702044010162354
    5. 'for' → logprob: -3.0452044010162354
    6. ' coin' → logprob: -3.0452044010162354
    7. '   ' → logprob: -3.6702044010162354
    8. 'sum' → logprob: -4.045204162597656
    9. '    ' → logprob: -4.170204162597656
    10. '       ' → logprob: -4.295204162597656

Token 1191: ' includes' (ID: 6664)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.435136079788208
    2. ' =' → logprob: -1.685136079788208
    3. '=' → logprob: -1.810136079788208
    4. ':' → logprob: -2.310136079788208
    5. '   ' → logprob: -2.560136079788208
    6. '```' → logprob: -3.185136079788208
    7. ')' → logprob: -3.310136079788208
    8. '):' → logprob: -3.435136079788208
    9. '[' → logprob: -3.560136079788208
    10. ',' → logprob: -3.935136079788208

Token 1192: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.007929430343210697
    2. ' ' → logprob: -4.88292932510376
    3. '```' → logprob: -9.007929801940918
    4. '   ' → logprob: -10.132929801940918
    5. 'Coin' → logprob: -10.507929801940918
    6. '(' → logprob: -10.632929801940918
    7. 'value' → logprob: -10.882929801940918
    8. '`' → logprob: -11.382929801940918
    9. '50' → logprob: -11.507929801940918
    10. 'the' → logprob: -11.632929801940918

Token 1193: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.00012487331696320325
    2. 'Coin' → logprob: -9.50012493133545
    3. ' ' → logprob: -11.37512493133545
    4. '5' → logprob: -11.75012493133545
    5. 'value' → logprob: -12.00012493133545
    6. '```' → logprob: -12.12512493133545
    7. '50' → logprob: -12.50012493133545
    8. 'Coins' → logprob: -12.87512493133545
    9. '{' → logprob: -13.00012493133545
    10. '
' → logprob: -13.50012493133545

Token 1194: '-y' (ID: 18102)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9004380106925964
    2. '   ' → logprob: -2.025438070297241
    3. ')' → logprob: -2.275438070297241
    4. '       ' → logprob: -2.275438070297241
    5. '):' → logprob: -2.775438070297241
    6. '_' → logprob: -2.900438070297241
    7. ',
' → logprob: -3.650438070297241
    8. ':' → logprob: -3.775438070297241
    9. '```' → logprob: -3.900438070297241
    10. '):
' → logprob: -4.025437831878662

Token 1195: 'en' (ID: 262)
  Prédit: '-en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-en' → logprob: -0.9468163847923279
    2. '-' → logprob: -1.1968164443969727
    3. 'en' → logprob: -1.1968164443969727
    4. '-token' → logprob: -5.821816444396973
    5. '-den' → logprob: -6.946816444396973
    6. '-co' → logprob: -7.196816444396973
    7. '-e' → logprob: -8.071816444396973
    8. '[-' → logprob: -8.446816444396973
    9. '```' → logprob: -8.446816444396973
    10. 'e' → logprob: -8.571816444396973

Token 1196: ' coin' (ID: 22179)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6420704126358032
    2. '):' → logprob: -1.7670704126358032
    3. '   ' → logprob: -1.7670704126358032
    4. '_counts' → logprob: -2.2670702934265137
    5. '       ' → logprob: -2.3920702934265137
    6. ':' → logprob: -2.3920702934265137
    7. ',' → logprob: -2.7670702934265137
    8. '```' → logprob: -3.1420702934265137
    9. '_' → logprob: -4.392070293426514
    10. '):
' → logprob: -4.642070293426514

Token 1197: '(s' (ID: 1858)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6563836932182312
    2. ':' → logprob: -1.156383752822876
    3. '[' → logprob: -3.406383752822876
    4. ',' → logprob: -3.406383752822876
    5. '):' → logprob: -3.656383752822876
    6. '   ' → logprob: -3.781383752822876
    7. ':
' → logprob: -4.906383514404297
    8. ')' → logprob: -5.031383514404297
    9. '):
' → logprob: -5.031383514404297
    10. ' =' → logprob: -5.156383514404297

Token 1198: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0941905751824379
    2. '):' → logprob: -3.4691905975341797
    3. '):
' → logprob: -3.4691905975341797
    4. '           ' → logprob: -5.09419059753418
    5. ').' → logprob: -5.21919059753418
    6. '       ' → logprob: -5.59419059753418
    7. ' and' → logprob: -5.59419059753418
    8. ')
' → logprob: -6.34419059753418
    9. ',' → logprob: -7.09419059753418
    10. '   ' → logprob: -7.21919059753418

Token 1199: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013853551354259253
    2. '        
' → logprob: -6.75138521194458
    3. '           ' → logprob: -9.501385688781738
    4. '```' → logprob: -10.501385688781738
    5. '    
' → logprob: -10.751385688781738
    6. '[' → logprob: -11.251385688781738
    7. '   ' → logprob: -11.376385688781738
    8. ',' → logprob: -11.751385688781738
    9. '               ' → logprob: -12.001385688781738
    10. '
' → logprob: -12.126385688781738

Token 1200: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011322376318275928
    2. '        
' → logprob: -5.386322498321533
    3. '
' → logprob: -6.261322498321533
    4. '```' → logprob: -6.886322498321533
    5. ',' → logprob: -7.636322498321533
    6. '   ' → logprob: -7.636322498321533
    7. '           ' → logprob: -8.136322021484375
    8. '    
' → logprob: -8.136322021484375
    9. '\' → logprob: -8.636322021484375
    10. 'def' → logprob: -8.886322021484375

Token 1201: ' Yield' (ID: 131275)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37806111574172974
    2. '   ' → logprob: -2.628061056137085
    3. ':' → logprob: -2.753061056137085
    4. 'for' → logprob: -3.878061056137085
    5. '
' → logprob: -4.128061294555664
    6. 'def' → logprob: -4.253061294555664
    7. '[' → logprob: -4.253061294555664
    8. '(' → logprob: -4.503061294555664
    9. 'range' → logprob: -4.503061294555664
    10. ',' → logprob: -4.753061294555664

Token 1202: ' info' (ID: 5377)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.34535595774650574
    2. ' from' → logprob: -1.3453559875488281
    3. ' (' → logprob: -4.720355987548828
    4. '(' → logprob: -5.845355987548828
    5. ' ' → logprob: -5.970355987548828
    6. ' {' → logprob: -6.095355987548828
    7. '       ' → logprob: -6.095355987548828
    8. '    ' → logprob: -6.345355987548828
    9. '        ' → logprob: -6.845355987548828
    10. ')' → logprob: -7.095355987548828

Token 1203: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5049074292182922
    2. ',' → logprob: -2.2549073696136475
    3. '       ' → logprob: -2.2549073696136475
    4. '(' → logprob: -2.8799073696136475
    5. '   ' → logprob: -3.2549073696136475
    6. '):' → logprob: -3.6299073696136475
    7. '(
' → logprob: -4.379907608032227
    8. '[' → logprob: -4.629907608032227
    9. ')' → logprob: -4.879907608032227
    10. '.' → logprob: -4.879907608032227

Token 1204: ' total' (ID: 3609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7236753702163696
    2. ' for' → logprob: -1.5986753702163696
    3. '           ' → logprob: -2.34867525100708
    4. ' (' → logprob: -2.59867525100708
    5. 'for' → logprob: -3.47367525100708
    6. '```' → logprob: -3.72367525100708
    7. '(' → logprob: -3.84867525100708
    8. '               ' → logprob: -4.72367525100708
    9. '[
' → logprob: -4.84867525100708
    10. ' return' → logprob: -5.22367525100708

Token 1205: ' payment' (ID: 9277)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.10132896900177
    2. '_money' → logprob: -1.72632896900177
    3. '_coin' → logprob: -1.97632896900177
    4. '_amount' → logprob: -2.1013288497924805
    5. '_co' → logprob: -2.2263288497924805
    6. '_value' → logprob: -3.1013288497924805
    7. '_hand' → logprob: -3.8513288497924805
    8. '_payment' → logprob: -3.8513288497924805
    9. '_sum' → logprob: -5.2263288497924805
    10. ' _' → logprob: -5.3513288497924805

Token 1206: ' money' (ID: 3905)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9661062955856323
    2. ',' → logprob: -2.091106414794922
    3. ':' → logprob: -2.091106414794922
    4. '       ' → logprob: -2.091106414794922
    5. '[' → logprob: -2.341106414794922
    6. '(' → logprob: -2.591106414794922
    7. '_' → logprob: -2.716106414794922
    8. '   ' → logprob: -2.841106414794922
    9. ' =' → logprob: -3.091106414794922
    10. '=' → logprob: -3.216106414794922

Token 1207: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6100558042526245
    2. ':' → logprob: -1.4850558042526245
    3. ',' → logprob: -2.485055923461914
    4. '   ' → logprob: -3.235055923461914
    5. '):' → logprob: -3.485055923461914
    6. ')' → logprob: -4.360055923461914
    7. '[' → logprob: -4.360055923461914
    8. ' =' → logprob: -4.610055923461914
    9. '(
' → logprob: -5.110055923461914
    10. '(' → logprob: -5.110055923461914

Token 1208: ' change' (ID: 3343)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.8534708619117737
    2. 'coins' → logprob: -1.228470802307129
    3. ' coin' → logprob: -1.853470802307129
    4. ' coins' → logprob: -2.353470802307129
    5. '{
' → logprob: -5.353470802307129
    6. '       ' → logprob: -5.478470802307129
    7. 'counts' → logprob: -5.978470802307129
    8. '"' → logprob: -6.228470802307129
    9. 'used' → logprob: -6.353470802307129
    10. ' used' → logprob: -6.353470802307129

Token 1209: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4456344842910767
    2. '[' → logprob: -1.6956344842910767
    3. ',' → logprob: -1.8206344842910767
    4. '       ' → logprob: -2.070634365081787
    5. '(' → logprob: -2.445634365081787
    6. '   ' → logprob: -2.820634365081787
    7. ')' → logprob: -3.320634365081787
    8. '):' → logprob: -3.570634365081787
    9. ' =' → logprob: -4.195634365081787
    10. '(
' → logprob: -4.195634365081787

Token 1210: ' ' (ID: 220)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.17669416964054108
    2. 'coin' → logprob: -2.17669415473938
    3. ' coins' → logprob: -4.051694393157959
    4. 'payment' → logprob: -4.926694393157959
    5. 'used' → logprob: -5.051694393157959
    6. 'hand' → logprob: -5.176694393157959
    7. ' coin' → logprob: -6.051694393157959
    8. '       ' → logprob: -6.926694393157959
    9. 'change' → logprob: -7.051694393157959
    10. '   ' → logprob: -7.301694393157959

Token 1211: '500' (ID: 3234)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.11888493597507477
    2. 'coin' → logprob: -2.618885040283203
    3. 'payment' → logprob: -4.118885040283203
    4. 'used' → logprob: -4.368885040283203
    5. 'counts' → logprob: -6.118885040283203
    6. 'hand' → logprob: -6.368885040283203
    7. 'count' → logprob: -6.868885040283203
    8. 'change' → logprob: -6.868885040283203
    9. 'minimal' → logprob: -7.493885040283203
    10. '
' → logprob: -7.868885040283203

Token 1212: '-y' (ID: 18102)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7256603240966797
    2. '-' → logprob: -1.3506603240966797
    3. ',' → logprob: -2.3506603240966797
    4. ')' → logprob: -2.4756603240966797
    5. '_-' → logprob: -3.6006603240966797
    6. '500' → logprob: -4.97566032409668
    7. '```' → logprob: -5.22566032409668
    8. ',-' → logprob: -5.47566032409668
    9. '   ' → logprob: -5.60066032409668
    10. '0' → logprob: -5.85066032409668

Token 1213: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.21559908986091614
    2. '-en' → logprob: -2.2155990600585938
    3. '-' → logprob: -3.7155990600585938
    4. '_' → logprob: -4.590599060058594
    5. '-den' → logprob: -4.965599060058594
    6. 'yen' → logprob: -5.090599060058594
    7. 'al' → logprob: -5.715599060058594
    8. '-co' → logprob: -5.840599060058594
    9. '-m' → logprob: -5.965599060058594
    10. '_-' → logprob: -6.215599060058594

Token 1214: ' coins' (ID: 28969)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2579816579818726
    2. '[' → logprob: -1.6329816579818726
    3. ':' → logprob: -2.007981777191162
    4. '   ' → logprob: -2.382981777191162
    5. '(' → logprob: -2.757981777191162
    6. ',' → logprob: -3.257981777191162
    7. ' ' → logprob: -3.632981777191162
    8. '_' → logprob: -4.007981777191162
    9. '(
' → logprob: -4.132981777191162
    10. '[
' → logprob: -4.132981777191162

Token 1215: ' count' (ID: 3605)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0914198160171509
    2. '(' → logprob: -1.5914198160171509
    3. '[' → logprob: -2.0914196968078613
    4. ',' → logprob: -2.0914196968078613
    5. '(
' → logprob: -2.9664196968078613
    6. ')' → logprob: -3.5914196968078613
    7. '   ' → logprob: -3.5914196968078613
    8. '       ' → logprob: -3.8414196968078613
    9. '):' → logprob: -3.9664196968078613
    10. '=' → logprob: -4.091419696807861

Token 1216: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5719326734542847
    2. ' =' → logprob: -1.6969326734542847
    3. ':' → logprob: -2.196932792663574
    4. '[' → logprob: -3.071932792663574
    5. '   ' → logprob: -3.446932792663574
    6. '=' → logprob: -4.321932792663574
    7. ',' → logprob: -4.946932792663574
    8. '):' → logprob: -5.196932792663574
    9. ':
' → logprob: -5.321932792663574
    10. '        
' → logprob: -5.446932792663574

Token 1217: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.00227431976236403
    2. ' change' → logprob: -6.127274513244629
    3. 'payment' → logprob: -10.752274513244629
    4. '   ' → logprob: -11.752274513244629
    5. 'coin' → logprob: -11.752274513244629
    6. 'return' → logprob: -11.877274513244629
    7. 'the' → logprob: -11.877274513244629
    8. '
' → logprob: -12.127274513244629
    9. 'coins' → logprob: -12.377274513244629
    10. '_change' → logprob: -12.502274513244629

Token 1218: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6679120063781738
    2. ':' → logprob: -2.167912006378174
    3. '[' → logprob: -2.417912006378174
    4. ',' → logprob: -2.667912006378174
    5. '   ' → logprob: -2.917912006378174
    6. ' =' → logprob: -3.292912006378174
    7. '(' → logprob: -3.417912006378174
    8. ')' → logprob: -3.917912006378174
    9. '(
' → logprob: -4.792912006378174
    10. '_' → logprob: -4.917912006378174

Token 1219: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.6831014156341553
    2. ' coins' → logprob: -1.5581014156341553
    3. 'coin' → logprob: -2.5581014156341553
    4. ' payment' → logprob: -2.8081014156341553
    5. 'payment' → logprob: -3.0581014156341553
    6. 'used' → logprob: -4.058101654052734
    7. ' coin' → logprob: -4.058101654052734
    8. '       ' → logprob: -4.058101654052734
    9. ' used' → logprob: -4.433101654052734
    10. 'hand' → logprob: -5.183101654052734

Token 1220: ' used' (ID: 2061)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5922210216522217
    2. '_counts' → logprob: -1.7172210216522217
    3. ' =' → logprob: -2.3422210216522217
    4. '   ' → logprob: -2.4672210216522217
    5. '_' → logprob: -2.4672210216522217
    6. '       ' → logprob: -2.7172210216522217
    7. ',' → logprob: -2.8422210216522217
    8. '[' → logprob: -2.8422210216522217
    9. '```' → logprob: -3.0922210216522217
    10. '=' → logprob: -3.4672210216522217

Token 1221: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6816169619560242
    2. ':' → logprob: -1.431617021560669
    3. ' =' → logprob: -2.306617021560669
    4. ',' → logprob: -3.306617021560669
    5. '   ' → logprob: -3.431617021560669
    6. '(' → logprob: -4.05661678314209
    7. '(
' → logprob: -4.55661678314209
    8. '=' → logprob: -4.55661678314209
    9. '[' → logprob: -5.05661678314209
    10. '):' → logprob: -5.18161678314209

Token 1222: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7503361105918884
    2. '       ' → logprob: -0.8753361105918884
    3. '(' → logprob: -3.375336170196533
    4. ',' → logprob: -4.000336170196533
    5. '   ' → logprob: -4.000336170196533
    6. '[' → logprob: -4.375336170196533
    7. '):' → logprob: -5.000336170196533
    8. ' :' → logprob: -5.375336170196533
    9. ' =' → logprob: -5.750336170196533
    10. '(
' → logprob: -6.000336170196533

Token 1223: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06578820943832397
    2. '
' → logprob: -4.065788269042969
    3. ':' → logprob: -4.315788269042969
    4. '        
' → logprob: -4.440788269042969
    5. ' =' → logprob: -5.190788269042969
    6. '[' → logprob: -5.440788269042969
    7. ',' → logprob: -6.315788269042969
    8. '   ' → logprob: -6.815788269042969
    9. ':
' → logprob: -6.815788269042969
    10. '=' → logprob: -7.190788269042969

Token 1224: ' To' (ID: 2514)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04780295863747597
    2. 'def' → logprob: -4.172802925109863
    3. '   ' → logprob: -4.422802925109863
    4. '[' → logprob: -5.172802925109863
    5. '        
' → logprob: -6.297802925109863
    6. ')' → logprob: -6.422802925109863
    7. ':' → logprob: -6.672802925109863
    8. '(' → logprob: -6.672802925109863
    9. '
' → logprob: -6.672802925109863
    10. ' =' → logprob: -6.797802925109863

Token 1225: ' ease' (ID: 18380)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'generate' → logprob: -1.1798467636108398
    2. 'continue' → logprob: -1.6798467636108398
    3. 'enumer' → logprob: -1.9298467636108398
    4. 'def' → logprob: -2.17984676361084
    5. 'import' → logprob: -2.80484676361084
    6. '   ' → logprob: -3.30484676361084
    7. 'yield' → logprob: -3.30484676361084
    8. 'range' → logprob: -4.17984676361084
    9. 'expl' → logprob: -4.67984676361084
    10. '_generate' → logprob: -4.92984676361084

Token 1226: ' complexity' (ID: 37588)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21278171241283417
    2. '       ' → logprob: -2.2127816677093506
    3. 'enumer' → logprob: -3.8377816677093506
    4. 'generate' → logprob: -4.46278190612793
    5. 'def' → logprob: -4.71278190612793
    6. 'coin' → logprob: -4.83778190612793
    7. 'continue' → logprob: -5.08778190612793
    8. 'product' → logprob: -5.33778190612793
    9. '```' → logprob: -5.96278190612793
    10. '    ' → logprob: -6.33778190612793

Token 1227: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3490523099899292
    2. ':' → logprob: -2.4740524291992188
    3. ' =' → logprob: -3.0990524291992188
    4. ',' → logprob: -3.2240524291992188
    5. '   ' → logprob: -3.2240524291992188
    6. '_' → logprob: -4.849052429199219
    7. 'def' → logprob: -4.974052429199219
    8. '```' → logprob: -4.974052429199219
    9. '[' → logprob: -5.224052429199219
    10. '):' → logprob: -5.474052429199219

Token 1228: ' use' (ID: 1199)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7278386354446411
    2. 'coin' → logprob: -1.3528386354446411
    3. ' coin' → logprob: -2.3528385162353516
    4. 'max' → logprob: -3.1028385162353516
    5. 'return' → logprob: -3.3528385162353516
    6. ' for' → logprob: -4.227838516235352
    7. ' return' → logprob: -4.477838516235352
    8. ' max' → logprob: -4.852838516235352
    9. 'import' → logprob: -5.227838516235352
    10. 'for' → logprob: -5.227838516235352

Token 1229: ' recursive' (ID: 66711)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2989521026611328
    2. 'ranges' → logprob: -2.423952102661133
    3. 'def' → logprob: -2.548952102661133
    4. 'product' → logprob: -3.048952102661133
    5. '   ' → logprob: -4.048952102661133
    6. 'import' → logprob: -5.173952102661133
    7. '```' → logprob: -5.423952102661133
    8. '
' → logprob: -5.423952102661133
    9. 'yield' → logprob: -5.798952102661133
    10. 'count' → logprob: -6.548952102661133

Token 1230: ' bounded' (ID: 136812)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6995106339454651
    2. ' def' → logprob: -1.5745105743408203
    3. '_generator' → logprob: -1.8245105743408203
    4. ' _' → logprob: -2.6995105743408203
    5. 'def' → logprob: -3.8245105743408203
    6. ' generator' → logprob: -4.32451057434082
    7. '_generate' → logprob: -4.82451057434082
    8. ' function' → logprob: -4.94951057434082
    9. ' ' → logprob: -5.69951057434082
    10. ' approach' → logprob: -6.44951057434082

Token 1231: ' generation' (ID: 13986)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.24187831580638885
    2. '_range' → logprob: -2.6168782711029053
    3. 'for' → logprob: -3.4918782711029053
    4. ' range' → logprob: -4.366878509521484
    5. '_iterator' → logprob: -4.366878509521484
    6. '_generate' → logprob: -4.491878509521484
    7. '_generator' → logprob: -4.616878509521484
    8. '_' → logprob: -4.741878509521484
    9. '_ranges' → logprob: -4.741878509521484
    10. '_search' → logprob: -4.866878509521484

Token 1232: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.276132196187973
    2. 'def' → logprob: -1.9011322259902954
    3. '
' → logprob: -2.776132106781006
    4. '        
' → logprob: -4.401132106781006
    5. '   ' → logprob: -4.526132106781006
    6. ' def' → logprob: -6.151132106781006
    7. ',' → logprob: -7.026132106781006
    8. '<|end|>' → logprob: -7.401132106781006
    9. '    
' → logprob: -7.526132106781006
    10. ':' → logprob: -7.776132106781006

Token 1233: ' pruning' (ID: 135775)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2904757857322693
    2. 'yield' → logprob: -1.790475845336914
    3. 'memo' → logprob: -3.540475845336914
    4. 'limit' → logprob: -4.290475845336914
    5. 'limits' → logprob: -4.415475845336914
    6. 'depth' → logprob: -4.790475845336914
    7. 'cache' → logprob: -4.915475845336914
    8. '[]' → logprob: -5.790475845336914
    9. 'acc' → logprob: -6.290475845336914
    10. 'a' → logprob: -6.790475845336914

Token 1234: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20845524966716766
    2. 'def' → logprob: -2.0834553241729736
    3. '
' → logprob: -3.0834553241729736
    4. '   ' → logprob: -4.4584550857543945
    5. '        
' → logprob: -5.7084550857543945
    6. ',' → logprob: -7.0834550857543945
    7. ' def' → logprob: -7.3334550857543945
    8. ':' → logprob: -8.333455085754395
    9. 'import' → logprob: -8.458455085754395
    10. '    
' → logprob: -8.708455085754395

Token 1235: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1555454134941101
    2. '
' → logprob: -2.905545473098755
    3. 'def' → logprob: -2.905545473098755
    4. '        
' → logprob: -3.655545473098755
    5. '   ' → logprob: -5.155545234680176
    6. ' def' → logprob: -7.030545234680176
    7. '    
' → logprob: -7.530545234680176
    8. '```' → logprob: -7.780545234680176
    9. '<|end|>' → logprob: -8.280545234680176
    10. 'import' → logprob: -8.780545234680176

Token 1236: ' results' (ID: 4376)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6323556900024414
    2. 'def' → logprob: -1.5073556900024414
    3. '
' → logprob: -1.8823556900024414
    4. '        
' → logprob: -2.7573556900024414
    5. ' def' → logprob: -4.132355690002441
    6. '   ' → logprob: -4.757355690002441
    7. '    
' → logprob: -5.632355690002441
    8. '```' → logprob: -7.007355690002441
    9. ' 
' → logprob: -7.382355690002441
    10. 'import' → logprob: -8.507355690002441

Token 1237: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010138279758393764
    2. '=' → logprob: -4.635138511657715
    3. ',' → logprob: -8.760138511657715
    4. '   ' → logprob: -9.760138511657715
    5. ' ' → logprob: -10.135138511657715
    6. '=[]' → logprob: -10.135138511657715
    7. ':' → logprob: -10.760138511657715
    8. ')' → logprob: -11.260138511657715
    9. ' =
' → logprob: -11.635138511657715
    10. '<|end|>' → logprob: -11.760138511657715

Token 1238: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0037789319176226854
    2. 'set' → logprob: -5.87877893447876
    3. ' []' → logprob: -7.00377893447876
    4. '[]
' → logprob: -10.003778457641602
    5. '{}' → logprob: -11.878778457641602
    6. '[]

' → logprob: -12.378778457641602
    7. ' set' → logprob: -12.753778457641602
    8. '[]}' → logprob: -12.753778457641602
    9. '   ' → logprob: -14.003778457641602
    10. '[' → logprob: -14.128778457641602

Token 1239: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029500862583518028
    2. '
' → logprob: -3.779500961303711
    3. 'def' → logprob: -5.654500961303711
    4. '   ' → logprob: -6.154500961303711
    5. '```' → logprob: -8.029500961303711
    6. '        
' → logprob: -8.529500961303711
    7. '    
' → logprob: -10.029500961303711
    8. ' def' → logprob: -10.904500961303711
    9. '           ' → logprob: -12.029500961303711
    10. '	' → logprob: -12.529500961303711

Token 1240: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00035488870344124734
    2. '       ' → logprob: -8.500354766845703
    3. '   ' → logprob: -9.625354766845703
    4. '
' → logprob: -10.000354766845703
    5. 'max' → logprob: -11.000354766845703
    6. ' def' → logprob: -11.375354766845703
    7. 'coin' → logprob: -12.250354766845703
    8. 'from' → logprob: -13.000354766845703
    9. '#' → logprob: -13.500354766845703
    10. 'import' → logprob: -13.750354766845703

Token 1241: ' dfs' (ID: 51252)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.6784330606460571
    2. ' generate' → logprob: -1.8034330606460571
    3. 'gen' → logprob: -2.5534329414367676
    4. 'dfs' → logprob: -2.5534329414367676
    5. 'search' → logprob: -2.8034329414367676
    6. ' gen' → logprob: -3.4284329414367676
    7. ' back' → logprob: -3.5534329414367676
    8. ' search' → logprob: -4.178432941436768
    9. ' dfs' → logprob: -4.428432941436768
    10. 'back' → logprob: -5.053432941436768

Token 1242: '(i' (ID: 3649)
  Prédit: '(index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(index' → logprob: -0.691325843334198
    2. '(i' → logprob: -1.5663259029388428
    3. '(' → logprob: -2.3163259029388428
    4. '(idx' → logprob: -2.3163259029388428
    5. '(depth' → logprob: -2.6913259029388428
    6. ' (' → logprob: -4.816325664520264
    7. '(count' → logprob: -5.316325664520264
    8. '(self' → logprob: -5.441325664520264
    9. '(level' → logprob: -6.191325664520264
    10. '(token' → logprob: -6.566325664520264

Token 1243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001669485354796052
    2. ' ,' → logprob: -8.875166893005371
    3. '):' → logprob: -11.750166893005371
    4. ',
' → logprob: -11.875166893005371
    5. '<|end|>' → logprob: -12.875166893005371
    6. '   ' → logprob: -13.625166893005371
    7. ')' → logprob: -13.875166893005371
    8. '):
' → logprob: -14.000166893005371
    9. '‌,' → logprob: -14.125166893005371
    10. '       ' → logprob: -14.125166893005371

Token 1244: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.4972945749759674
    2. 'current' → logprob: -0.997294545173645
    3. ' current' → logprob: -4.3722944259643555
    4. ' used' → logprob: -5.2472944259643555
    5. 'curr' → logprob: -6.3722944259643555
    6. 'coins' → logprob: -6.8722944259643555
    7. 'coin' → logprob: -6.8722944259643555
    8. 'path' → logprob: -7.4972944259643555
    9. 'cur' → logprob: -8.247294425964355
    10. 'usage' → logprob: -9.622294425964355

Token 1245: '_co' (ID: 21102)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005891698878258467
    2. '_counts' → logprob: -5.255891799926758
    3. 'coins' → logprob: -8.755891799926758
    4. '_co' → logprob: -8.880891799926758
    5. '_coin' → logprob: -9.130891799926758
    6. '_tokens' → logprob: -9.255891799926758
    7. ' ,' → logprob: -9.380891799926758
    8. '_,' → logprob: -11.130891799926758
    9. 'coin' → logprob: -11.380891799926758
    10. 's' → logprob: -11.880891799926758

Token 1246: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.7213507294654846
    2. 'unts' → logprob: -0.8463507294654846
    3. 'unt' → logprob: -2.72135066986084
    4. '   ' → logprob: -5.59635066986084
    5. 'ints' → logprob: -5.72135066986084
    6. ')' → logprob: -6.22135066986084
    7. 'in' → logprob: -6.84635066986084
    8. '```' → logprob: -6.97135066986084
    9. '[' → logprob: -7.09635066986084
    10. '       ' → logprob: -7.47135066986084

Token 1247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00042864278657361865
    2. ' ,' → logprob: -8.250428199768066
    3. '):' → logprob: -9.250428199768066
    4. '<|end|>' → logprob: -11.500428199768066
    5. '):
' → logprob: -11.625428199768066
    6. ',
' → logprob: -11.625428199768066
    7. '=[],' → logprob: -12.250428199768066
    8. '[],' → logprob: -12.500428199768066
    9. '[' → logprob: -12.500428199768066
    10. '=' → logprob: -12.750428199768066

Token 1248: ' total' (ID: 3609)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.5041953325271606
    2. 'current' → logprob: -1.5041953325271606
    3. 'used' → logprob: -2.254195213317871
    4. ' used' → logprob: -3.629195213317871
    5. 'total' → logprob: -3.879195213317871
    6. ' total' → logprob: -4.004195213317871
    7. 'curr' → logprob: -6.879195213317871
    8. 'sum' → logprob: -8.004195213317871
    9. ' coin' → logprob: -8.004195213317871
    10. 'coin' → logprob: -8.004195213317871

Token 1249: '_coin' (ID: 187802)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.06547629833221436
    2. ')' → logprob: -3.940476417541504
    3. 'value' → logprob: -4.690476417541504
    4. '+' → logprob: -4.690476417541504
    5. '_sum' → logprob: -5.065476417541504
    6. '_amount' → logprob: -5.065476417541504
    7. '_tokens' → logprob: -5.690476417541504
    8. '_coin' → logprob: -6.565476417541504
    9. '_money' → logprob: -6.815476417541504
    10. '_' → logprob: -7.190476417541504

Token 1250: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.01744941808283329
    2. '_sum' → logprob: -4.892449378967285
    3. 'value' → logprob: -5.017449378967285
    4. ')' → logprob: -7.517449378967285
    5. 'sum' → logprob: -7.642449378967285
    6. ' ' → logprob: -7.642449378967285
    7. 's' → logprob: -8.392449378967285
    8. 'Value' → logprob: -8.517449378967285
    9. '_count' → logprob: -8.892449378967285
    10. '   ' → logprob: -8.892449378967285

Token 1251: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23912671208381653
    2. '):
' → logprob: -1.8641266822814941
    3. '):' → logprob: -2.864126682281494
    4. ' ,' → logprob: -8.239127159118652
    5. '=' → logprob: -8.739127159118652
    6. '):
' → logprob: -9.614127159118652
    7. ',
' → logprob: -10.489127159118652
    8. ')' → logprob: -10.739127159118652
    9. '):

' → logprob: -10.864127159118652
    10. '   ' → logprob: -11.114127159118652

Token 1252: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.202079176902771
    2. ':' → logprob: -1.952079176902771
    3. ':
' → logprob: -4.3270792961120605
    4. ',' → logprob: -4.9520792961120605
    5. '           ' → logprob: -5.3270792961120605
    6. '   ' → logprob: -5.7020792961120605
    7. '        
' → logprob: -5.9520792961120605
    8. '(' → logprob: -6.0770792961120605
    9. '):
' → logprob: -6.4520792961120605
    10. '):' → logprob: -6.9520792961120605

Token 1253: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3407154679298401
    2. 'if' (adapté à ' if') → logprob: -1.3407154083251953
    3. '       ' → logprob: -3.7157154083251953
    4. '   ' → logprob: -6.715715408325195
    5. '
' → logprob: -7.590715408325195
    6. ' 
' → logprob: -7.840715408325195
    7. '           ' → logprob: -8.465715408325195
    8. '               ' → logprob: -9.215715408325195
    9. '        
' → logprob: -9.215715408325195
    10. '	if' → logprob: -9.965715408325195

Token 1254: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004103573504835367
    2. 'i' → logprob: -5.504103660583496
    3. ' ' → logprob: -10.629103660583496
    4. ' ' → logprob: -14.754103660583496
    5. '	i' → logprob: -15.629103660583496
    6. ' 
' → logprob: -16.37910270690918
    7. ' (' → logprob: -17.00410270690918
    8. ' =' → logprob: -17.00410270690918
    9. ')' → logprob: -17.37910270690918
    10. ' True' → logprob: -17.62910270690918

Token 1255: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3917725086212158
    2. '==' → logprob: -1.1417725086212158
    3. '>=' → logprob: -6.141772270202637
    4. ' >=' → logprob: -6.266772270202637
    5. '<len' → logprob: -7.891772270202637
    6. ')' → logprob: -9.516772270202637
    7. ' <' → logprob: -9.641772270202637
    8. '=' → logprob: -9.891772270202637
    9. '>' → logprob: -10.391772270202637
    10. '<' → logprob: -10.516772270202637

Token 1256: ' len' (ID: 4631)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.043001823127269745
    2. 'len' → logprob: -3.168001890182495
    3. ' len' → logprob: -13.168002128601074
    4. ' ' → logprob: -14.793002128601074
    5. '(len' → logprob: -16.418001174926758
    6. '7' → logprob: -16.543001174926758
    7. '   ' → logprob: -17.418001174926758
    8. 'six' → logprob: -17.418001174926758
    9. '```' → logprob: -17.543001174926758
    10. 'length' → logprob: -17.793001174926758

Token 1257: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04978284239768982
    2. 'coin' → logprob: -3.0497827529907227
    3. 'used' → logprob: -6.799782752990723
    4. ' coin' → logprob: -10.674782752990723
    5. 'Coin' → logprob: -10.924782752990723
    6. '(co' → logprob: -11.299782752990723
    7. '(C' → logprob: -11.674782752990723
    8. '(payment' → logprob: -12.174782752990723
    9. '(
' → logprob: -12.424782752990723
    10. '(c' → logprob: -13.424782752990723

Token 1258: 'coin' (ID: 10126)
  Prédit: 'coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.00525616854429245
    2. 'used' → logprob: -5.255256175994873
    3. 'Coin' → logprob: -11.255255699157715
    4. ' coin' → logprob: -11.755255699157715
    5. 'self' → logprob: -14.255255699157715
    6. ' used' → logprob: -15.380255699157715
    7. 'Used' → logprob: -16.38025665283203
    8. '_coin' → logprob: -16.38025665283203
    9. '
' → logprob: -16.63025665283203
    10. ')' → logprob: -17.13025665283203

Token 1259: '_counts' (ID: 61971)
  Prédit: '_limits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limits' → logprob: -0.13363167643547058
    2. '_counts' → logprob: -2.508631706237793
    3. '_types' → logprob: -3.133631706237793
    4. 'limits' → logprob: -9.258631706237793
    5. 'Limits' → logprob: -10.758631706237793
    6. 'counts' → logprob: -11.633631706237793
    7. 'types' → logprob: -12.008631706237793
    8. '_used' → logprob: -12.133631706237793
    9. '
' → logprob: -13.508631706237793
    10. '_ranges' → logprob: -13.508631706237793

Token 1260: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005009598098695278
    2. '):
' → logprob: -5.505009651184082
    3. ')' → logprob: -7.255009651184082
    4. ':' → logprob: -8.755009651184082
    5. '<|end|>' → logprob: -10.130009651184082
    6. ' ):' → logprob: -12.380009651184082
    7. '       ' → logprob: -12.755009651184082
    8. ''):' → logprob: -12.880009651184082
    9. '<|end|>' → logprob: -12.880009651184082
    10. '[]):' → logprob: -13.130009651184082

Token 1261: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2577461004257202
    2. ':' → logprob: -1.6327461004257202
    3. ':
' → logprob: -4.38274621963501
    4. '       ' → logprob: -5.00774621963501
    5. '<|end|>' → logprob: -5.38274621963501
    6. '           ' → logprob: -5.50774621963501
    7. ':return' → logprob: -7.13274621963501
    8. '):' → logprob: -7.38274621963501
    9. '                               ' → logprob: -7.38274621963501
    10. ',' → logprob: -8.007745742797852

Token 1262: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.33867347240448
    2. '           ' → logprob: -1.58867347240448
    3. '<|end|>' → logprob: -1.71367347240448
    4. '
' → logprob: -2.3386735916137695
    5. 'for' → logprob: -2.9636735916137695
    6. '       ' → logprob: -2.9636735916137695
    7. ' for' → logprob: -3.4636735916137695
    8. ' if' → logprob: -3.5886735916137695
    9. 'if' → logprob: -4.0886735916137695
    10. 'return' → logprob: -4.3386735916137695

Token 1263: ' For' (ID: 2214)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08496157079935074
    2. 'hand' → logprob: -3.9599616527557373
    3. 'k' → logprob: -4.334961414337158
    4. '           ' → logprob: -4.709961414337158
    5. 'payment' → logprob: -4.834961414337158
    6. 'pay' → logprob: -4.834961414337158
    7. ' if' → logprob: -4.834961414337158
    8. 'non' → logprob: -4.959961414337158
    9. 'for' → logprob: -5.584961414337158
    10. '                   ' → logprob: -6.709961414337158

Token 1264: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.4341598451137543
    2. 'k' → logprob: -1.0591598749160767
    3. ' coin' → logprob: -6.809159755706787
    4. 'coin' → logprob: -7.309159755706787
    5. ' ' → logprob: -7.559159755706787
    6. '0' → logprob: -7.684159755706787
    7. 'used' → logprob: -7.809159755706787
    8. '
' → logprob: -7.934159755706787
    9. ' used' → logprob: -8.309160232543945
    10. ' payment' → logprob: -8.434160232543945

Token 1265: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4289807081222534
    2. 'in' → logprob: -1.0539807081222534
    3. '=' → logprob: -8.803980827331543
    4. '_in' → logprob: -10.303980827331543
    5. ' ' → logprob: -10.928980827331543
    6. '0' → logprob: -11.053980827331543
    7. '
' → logprob: -11.303980827331543
    8. ',' → logprob: -11.428980827331543
    9. ' =' → logprob: -11.678980827331543
    10. 'k' → logprob: -12.178980827331543

Token 1266: ' {' (ID: 354)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7156081199645996
    2. '0' → logprob: -0.9656081199645996
    3. '[' → logprob: -2.5906081199645996
    4. 'range' → logprob: -2.9656081199645996
    5. ' range' → logprob: -6.4656081199646
    6. ' (' → logprob: -6.8406081199646
    7. '2' → logprob: -7.2156081199646
    8. ' ' → logprob: -8.590608596801758
    9. ' [' → logprob: -9.090608596801758
    10. '1' → logprob: -9.590608596801758

Token 1267: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001628956088097766
    2. ' ' → logprob: -8.750163078308105
    3. '   ' → logprob: -12.625163078308105
    4. '}' → logprob: -14.750163078308105
    5. '1' → logprob: -15.375163078308105
    6. '       ' → logprob: -15.875163078308105
    7. ',' → logprob: -16.00016212463379
    8. '[' → logprob: -16.75016212463379
    9. '
' → logprob: -17.12516212463379
    10. '           ' → logprob: -17.25016212463379

Token 1268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010950337309623137
    2. ' ,' → logprob: -9.125109672546387
    3. ',
' → logprob: -14.750109672546387
    4. '```' → logprob: -17.12510871887207
    5. '
' → logprob: -17.25010871887207
    6. '   ' → logprob: -17.25010871887207
    7. '}' → logprob: -17.62510871887207
    8. ' ' → logprob: -17.75010871887207
    9. ',None' → logprob: -17.75010871887207
    10. '1' → logprob: -18.37510871887207

Token 1269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.875036239624023
    4. '
' → logprob: -17.750036239624023
    5. '```' → logprob: -20.000036239624023
    6. '  ' → logprob: -21.000036239624023
    7. '       ' → logprob: -21.125036239624023
    8. '           ' → logprob: -22.000036239624023
    9. '0' → logprob: -22.125036239624023
    10. ' ' → logprob: -22.375036239624023

Token 1270: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0076917982660233974
    2. '}:' → logprob: -4.882691860198975
    3. ' }' → logprob: -10.257691383361816
    4. '}
' → logprob: -10.757691383361816
    5. '           ' → logprob: -11.507691383361816
    6. '       ' → logprob: -11.757691383361816
    7. '               ' → logprob: -12.007691383361816
    8. ' }:' → logprob: -13.757691383361816
    9. ',' → logprob: -13.882691383361816
    10. '):
' → logprob: -14.132691383361816

Token 1271: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8765122890472412
    2. ':
' → logprob: -1.0015122890472412
    3. ':' → logprob: -2.251512289047241
    4. '               ' → logprob: -2.251512289047241
    5. '           ' → logprob: -6.00151252746582
    6. ',' → logprob: -6.62651252746582
    7. '
' → logprob: -6.87651252746582
    8. '):
' → logprob: -7.50151252746582
    9. '```' → logprob: -9.12651252746582
    10. '   ' → logprob: -9.37651252746582

Token 1272: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3086497485637665
    2. ' for' → logprob: -1.6836497783660889
    3. 'for' (adapté à ' for') → logprob: -2.933649778366089
    4. '                   ' → logprob: -4.43364953994751
    5. '           ' → logprob: -4.93364953994751
    6. '   ' → logprob: -6.18364953994751
    7. '                ' → logprob: -6.30864953994751
    8. '
' → logprob: -6.30864953994751
    9. '                
' → logprob: -7.18364953994751
    10. '       ' → logprob: -8.558650016784668

Token 1273: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3133154809474945
    2. ' k' → logprob: -1.313315510749817
    3. ' ' → logprob: -10.438315391540527
    4. '   ' → logprob: -12.063315391540527
    5. '```' → logprob: -13.188315391540527
    6. ' payment' → logprob: -13.313315391540527
    7. '	k' → logprob: -13.313315391540527
    8. '`' → logprob: -13.438315391540527
    9. 'payment' → logprob: -13.688315391540527
    10. '
' → logprob: -13.813315391540527

Token 1274: '100' (ID: 1353)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1269676834344864
    2. 'in' → logprob: -2.126967668533325
    3. '	in' → logprob: -10.751967430114746
    4. ' ' → logprob: -12.001967430114746
    5. '_in' → logprob: -12.876967430114746
    6. ')' → logprob: -13.751967430114746
    7. '<|end|>' → logprob: -13.876967430114746
    8. '<|end|>' → logprob: -14.126967430114746
    9. 'k' → logprob: -14.376967430114746
    10. ',' → logprob: -14.376967430114746

Token 1275: '0' (ID: 15)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19166892766952515
    2. 'in' → logprob: -2.06666898727417
    3. '0' → logprob: -3.06666898727417
    4. '   ' → logprob: -8.441668510437012
    5. '
' → logprob: -8.691668510437012
    6. '_in' → logprob: -8.816668510437012
    7. '_' → logprob: -9.066668510437012
    8. '00' → logprob: -9.191668510437012
    9. '100' → logprob: -9.441668510437012
    10. '```' → logprob: -9.941668510437012

Token 1276: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2520744502544403
    2. ' in' → logprob: -1.5020744800567627
    3. '_in' → logprob: -9.627074241638184
    4. '   ' → logprob: -10.877074241638184
    5. '```' → logprob: -11.377074241638184
    6. '	in' → logprob: -12.127074241638184
    7. ')' → logprob: -12.127074241638184
    8. '    ' → logprob: -12.252074241638184
    9. 'In' → logprob: -12.377074241638184
    10. '
' → logprob: -12.627074241638184

Token 1277: ' (' (ID: 350)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14386771619319916
    2. '0' → logprob: -2.6438677310943604
    3. '[' → logprob: -3.3938677310943604
    4. ' range' → logprob: -3.6438677310943604
    5. '(' → logprob: -5.893867492675781
    6. ' ' → logprob: -8.143867492675781
    7. ' [' → logprob: -9.518867492675781
    8. '{' → logprob: -10.768867492675781
    9. ' (' → logprob: -10.893867492675781
    10. '(range' → logprob: -11.018867492675781

Token 1278: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. ')' → logprob: -17.875024795532227
    4. '   ' → logprob: -18.250024795532227
    5. '               ' → logprob: -20.875024795532227
    6. '
' → logprob: -20.875024795532227
    7. ',' → logprob: -21.000024795532227
    8. '           ' → logprob: -21.000024795532227
    9. '1' → logprob: -21.625024795532227
    10. ')
' → logprob: -21.875024795532227

Token 1279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.392824874026701e-05
    2. ' ,' → logprob: -10.37503433227539
    3. ',
' → logprob: -12.87503433227539
    4. '‌,' → logprob: -16.50003433227539
    5. '1' → logprob: -17.62503433227539
    6. ',None' → logprob: -18.50003433227539
    7. '   ' → logprob: -18.87503433227539
    8. ',k' → logprob: -19.12503433227539
    9. ',

' → logprob: -19.25003433227539
    10. '<|end|>' → logprob: -19.37503433227539

Token 1280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. '
' → logprob: -16.50000762939453
    4. '   ' → logprob: -16.62500762939453
    5. '0' → logprob: -16.75000762939453
    6. '```' → logprob: -19.12500762939453
    7. '

' → logprob: -19.37500762939453
    8. ')' → logprob: -19.62500762939453
    9. '  ' → logprob: -19.62500762939453
    10. '       ' → logprob: -20.12500762939453

Token 1281: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.003672517603263259
    2. '):' → logprob: -5.6286725997924805
    3. '               ' → logprob: -10.00367259979248
    4. '                   ' → logprob: -11.62867259979248
    5. '           ' → logprob: -11.75367259979248
    6. '):
' → logprob: -12.50367259979248
    7. '):

' → logprob: -13.00367259979248
    8. '                       ' → logprob: -13.50367259979248
    9. ',' → logprob: -13.87867259979248
    10. ':
' → logprob: -14.37867259979248

Token 1282: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.037523671984672546
    2. ':
' → logprob: -3.7875237464904785
    3. '):
' → logprob: -4.7875237464904785
    4. ':' → logprob: -5.9125237464904785
    5. '                       ' → logprob: -6.9125237464904785
    6. '               ' → logprob: -7.5375237464904785
    7. '                    
' → logprob: -7.5375237464904785
    8. '):' → logprob: -8.28752326965332
    9. ',' → logprob: -8.66252326965332
    10. '():
' → logprob: -9.03752326965332

Token 1283: ' payment' (ID: 9277)
  Prédit: 'hand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hand' → logprob: -0.24942028522491455
    2. 'if' → logprob: -2.624420166015625
    3. 'hando' → logprob: -2.749420166015625
    4. 'total' → logprob: -3.749420166015625
    5. 'payment' (adapté à ' payment') → logprob: -3.874420166015625
    6. 'pay' → logprob: -4.374420166015625
    7. '                   ' → logprob: -4.999420166015625
    8. ' hand' → logprob: -4.999420166015625
    9. '                       ' → logprob: -5.374420166015625
    10. 'money' → logprob: -5.499420166015625

Token 1284: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9467108249664307
    2. '_money' → logprob: -1.0717108249664307
    3. '_amount' → logprob: -1.6967108249664307
    4. '=' → logprob: -2.8217108249664307
    5. '_value' → logprob: -3.8217108249664307
    6. '   ' → logprob: -6.946710586547852
    7. '                   ' → logprob: -6.946710586547852
    8. '           ' → logprob: -7.321710586547852
    9. 'money' → logprob: -7.696710586547852
    10. '               ' → logprob: -8.196710586547852

Token 1285: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.3486637473106384
    2. ' total' → logprob: -1.2236638069152832
    3. 'payment' → logprob: -9.098663330078125
    4. ' payment' → logprob: -9.723663330078125
    5. '                   ' → logprob: -10.723663330078125
    6. ' used' → logprob: -12.223663330078125
    7. 'used' → logprob: -12.723663330078125
    8. '   ' → logprob: -12.848663330078125
    9. '(total' → logprob: -13.098663330078125
    10. 'k' → logprob: -13.098663330078125

Token 1286: '_coin' (ID: 187802)
  Prédit: '_coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coin' → logprob: -0.00013131031300872564
    2. 'coin' → logprob: -9.500131607055664
    3. '_' → logprob: -10.250131607055664
    4. '_co' → logprob: -12.000131607055664
    5. '   ' → logprob: -12.500131607055664
    6. '           ' → logprob: -13.000131607055664
    7. '       ' → logprob: -13.375131607055664
    8. 'Coin' → logprob: -13.750131607055664
    9. ' coin' → logprob: -14.000131607055664
    10. '
' → logprob: -14.250131607055664

Token 1287: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0009174126898869872
    2. 'value' → logprob: -7.000917434692383
    3. '   ' → logprob: -13.375917434692383
    4. '           ' → logprob: -13.500917434692383
    5. '_VALUE' → logprob: -13.625917434692383
    6. ' value' → logprob: -14.875917434692383
    7. '_values' → logprob: -15.500917434692383
    8. '                   ' → logprob: -15.500917434692383
    9. 'Value' → logprob: -15.875917434692383
    10. '       ' → logprob: -16.000917434692383

Token 1288: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4344664216041565
    2. '+' → logprob: -1.0594663619995117
    3. '+k' → logprob: -5.184466361999512
    4. '<|end|>' → logprob: -9.059466361999512
    5. ' +
' → logprob: -11.684466361999512
    6. '+
' → logprob: -12.059466361999512
    7. ' ' → logprob: -13.184466361999512
    8. ')' → logprob: -13.434466361999512
    9. '    ' → logprob: -14.059466361999512
    10. '                    ' → logprob: -14.184466361999512

Token 1289: ' ' (ID: 220)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.005547370761632919
    2. ' k' → logprob: -5.255547523498535
    3. '(k' → logprob: -8.380547523498535
    4. '100' → logprob: -10.005547523498535
    5. '   ' → logprob: -11.005547523498535
    6. ' (' → logprob: -11.505547523498535
    7. '(' → logprob: -11.630547523498535
    8. ' ' → logprob: -13.380547523498535
    9. '           ' → logprob: -15.005547523498535
    10. '    ' → logprob: -15.255547523498535

Token 1290: '100' (ID: 1353)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00017815368482843041
    2. '(k' → logprob: -9.000178337097168
    3. ' k' → logprob: -10.375178337097168
    4. '100' → logprob: -11.250178337097168
    5. '   ' → logprob: -11.625178337097168
    6. '(' → logprob: -13.625178337097168
    7. ' ' → logprob: -15.875178337097168
    8. ' (' → logprob: -16.25017738342285
    9. '       ' → logprob: -17.75017738342285
    10. '  ' → logprob: -17.87517738342285

Token 1291: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.3199920178740285e-05
    2. 'k' → logprob: -10.875022888183594
    3. ' ' → logprob: -13.875022888183594
    4. '   ' → logprob: -14.000022888183594
    5. '000' → logprob: -14.000022888183594
    6. '*k' → logprob: -14.625022888183594
    7. '               ' → logprob: -15.875022888183594
    8. '       ' → logprob: -16.000022888183594
    9. ' k' → logprob: -16.000022888183594
    10. '00' → logprob: -16.000022888183594

Token 1292: ' *' (ID: 425)
  Prédit: '*k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*k' → logprob: -0.8328310251235962
    2. ' *' → logprob: -0.9578310251235962
    3. '*' → logprob: -1.7078310251235962
    4. ' if' → logprob: -9.707831382751465
    5. 'if' → logprob: -9.832831382751465
    6. '*K' → logprob: -11.332831382751465
    7. ')' → logprob: -11.832831382751465
    8. '*j' → logprob: -12.082831382751465
    9. '*i' → logprob: -12.082831382751465
    10. '*(' → logprob: -12.082831382751465

Token 1293: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: 0.0
    2. ' k' → logprob: -18.25
    3. '	k' → logprob: -23.125
    4. '   ' → logprob: -23.5
    5. 'kx' → logprob: -24.0
    6. '```' → logprob: -24.125
    7. '`' → logprob: -24.375
    8. '{k' → logprob: -24.625
    9. '*k' → logprob: -25.0
    10. '
' → logprob: -25.375

Token 1294: '100' (ID: 1353)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06881667673587799
    2. 'k' → logprob: -3.193816661834717
    3. '100' → logprob: -4.943816661834717
    4. '
' → logprob: -5.443816661834717
    5. '```' → logprob: -5.443816661834717
    6. 'if' → logprob: -6.693816661834717
    7. '*k' → logprob: -7.193816661834717
    8. '{k' → logprob: -7.193816661834717
    9. '00' → logprob: -7.318816661834717
    10. '       ' → logprob: -7.318816661834717

Token 1295: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018887832993641496
    2. ')' → logprob: -8.625188827514648
    3. '<|end|>' → logprob: -12.250188827514648
    4. '1' → logprob: -14.000188827514648
    5. '{
' → logprob: -14.250188827514648
    6. '[' → logprob: -14.750188827514648
    7. ']' → logprob: -15.125188827514648
    8. '{' → logprob: -15.250188827514648
    9. '```' → logprob: -15.375188827514648
    10. '   ' → logprob: -15.625188827514648

Token 1296: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6588525772094727
    2. '
' → logprob: -0.7838525772094727
    3. ':
' → logprob: -4.908852577209473
    4. '<|end|>' → logprob: -5.408852577209473
    5. '               ' → logprob: -5.658852577209473
    6. ':' → logprob: -5.783852577209473
    7. '                    
' → logprob: -6.408852577209473
    8. '<|end|>' → logprob: -6.783852577209473
    9. '           ' → logprob: -6.908852577209473
    10. '):
' → logprob: -7.658852577209473

Token 1297: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00036084887688048184
    2. '                       ' → logprob: -8.375360488891602
    3. '               ' → logprob: -9.500360488891602
    4. ':' → logprob: -11.375360488891602
    5. '           ' → logprob: -11.375360488891602
    6. '       ' → logprob: -11.875360488891602
    7. '```' → logprob: -12.250360488891602
    8. '                  ' → logprob: -12.625360488891602
    9. '		           ' → logprob: -13.375360488891602
    10. 'if' → logprob: -13.375360488891602

Token 1298: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.018688997253775597
    2. '                       ' → logprob: -4.893689155578613
    3. ' if' → logprob: -5.143689155578613
    4. '                   ' → logprob: -5.268689155578613
    5. '
' → logprob: -11.268689155578613
    6. '                           ' → logprob: -11.893689155578613
    7. '```' → logprob: -12.518689155578613
    8. '                        
' → logprob: -13.393689155578613
    9. '                               ' → logprob: -13.518689155578613
    10. '	                   ' → logprob: -13.643689155578613

Token 1299: ' payment' (ID: 9277)
  Prédit: 'payment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'payment' → logprob: -0.029755352064967155
    2. ' payment' → logprob: -3.5297553539276123
    3. '(payment' → logprob: -12.529755592346191
    4. '                   ' → logprob: -14.529755592346191
    5. '   ' → logprob: -14.779755592346191
    6. '.payment' → logprob: -16.654754638671875
    7. '                       ' → logprob: -17.029754638671875
    8. '                           ' → logprob: -17.279754638671875
    9. '_payment' → logprob: -17.404754638671875
    10. '>=' → logprob: -17.529754638671875

Token 1300: ' <' (ID: 464)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.1128542423248291
    2. ' >=' → logprob: -2.237854242324829
    3. ')>=' → logprob: -11.48785400390625
    4. ']>=' → logprob: -11.73785400390625
    5. '>' → logprob: -12.73785400390625
    6. '                   ' → logprob: -13.48785400390625
    7. '==' → logprob: -13.61285400390625
    8. '                           ' → logprob: -13.61285400390625
    9. '≥' → logprob: -13.73785400390625
    10. '   ' → logprob: -13.86285400390625

Token 1301: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023281820118427277
    2. ' self' → logprob: -3.7732818126678467
    3. '                   ' → logprob: -10.898282051086426
    4. '
' → logprob: -12.273282051086426
    5. '                       ' → logprob: -12.398282051086426
    6. '               ' → logprob: -13.023282051086426
    7. '           ' → logprob: -13.148282051086426
    8. '   ' → logprob: -13.648282051086426
    9. '                           ' → logprob: -14.023282051086426
    10. '=self' → logprob: -14.773282051086426

Token 1302: '.price' (ID: 31587)
  Prédit: '.price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.price' → logprob: -0.0003218766360078007
    2. '.' → logprob: -8.250322341918945
    3. 'price' → logprob: -9.875322341918945
    4. ' .' → logprob: -12.250322341918945
    5. ' price' → logprob: -12.875322341918945
    6. '.
' → logprob: -14.000322341918945
    7. '	price' → logprob: -14.625322341918945
    8. '.payment' → logprob: -16.625322341918945
    9. '.Price' → logprob: -16.875322341918945
    10. '(price' → logprob: -16.875322341918945

Token 1303: ':' (ID: 25)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.26757749915122986
    2. ':' → logprob: -1.7675775289535522
    3. ':
' → logprob: -2.7675774097442627
    4. '                   ' → logprob: -7.642577648162842
    5. ' or' → logprob: -7.642577648162842
    6. '                           ' → logprob: -9.517577171325684
    7. '                      ' → logprob: -10.392577171325684
    8. ':return' → logprob: -10.517577171325684
    9. 'continue' → logprob: -10.892577171325684
    10. '               ' → logprob: -11.017577171325684

Token 1304: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0022574295289814472
    2. '                           ' → logprob: -6.502257347106934
    3. '                   ' → logprob: -8.627257347106934
    4. '                        
' → logprob: -8.752257347106934
    5. '                        ' → logprob: -8.877257347106934
    6. '                               ' → logprob: -9.502257347106934
    7. ' continue' → logprob: -10.002257347106934
    8. '               ' → logprob: -10.252257347106934
    9. ' return' → logprob: -10.627257347106934
    10. '                    ' → logprob: -10.877257347106934

Token 1305: ' not' (ID: 625)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.015589318238198757
    2. 'continue' → logprob: -4.765589237213135
    3. ' continue' → logprob: -5.765589237213135
    4. 'return' → logprob: -6.140589237213135
    5. ' return' → logprob: -6.515589237213135
    6. '                   ' → logprob: -9.640589714050293
    7. '               ' → logprob: -10.640589714050293
    8. '       ' → logprob: -10.890589714050293
    9. '                           ' → logprob: -11.015589714050293
    10. '                        ' → logprob: -11.265589714050293

Token 1306: ' enough' (ID: 4951)
  Prédit: ' payment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' payment' → logprob: -0.5781585574150085
    2. 'payment' → logprob: -0.9531585574150085
    3. ' >=' → logprob: -3.5781586170196533
    4. '>=' → logprob: -4.453158378601074
    5. '=' → logprob: -5.953158378601074
    6. ':' → logprob: -6.078158378601074
    7. '   ' → logprob: -6.453158378601074
    8. '_payment' → logprob: -6.953158378601074
    9. '<' → logprob: -7.078158378601074
    10. ' enough' → logprob: -7.328158378601074

Token 1307: ' money' (ID: 3905)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.238053560256958
    2. 'continue' → logprob: -2.738053560256958
    3. ':
' → logprob: -3.238053560256958
    4. ':' → logprob: -3.238053560256958
    5. '                   ' → logprob: -3.738053560256958
    6. ' continue' → logprob: -3.863053560256958
    7. '                           ' → logprob: -4.738053321838379
    8. '                               ' → logprob: -5.363053321838379
    9. '                        
' → logprob: -5.613053321838379
    10. '
' → logprob: -6.488053321838379

Token 1308: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.007196604739874601
    2. ':' → logprob: -5.507196426391602
    3. ':
' → logprob: -5.882196426391602
    4. 'continue' → logprob: -8.882196426391602
    5. '                           ' → logprob: -9.882196426391602
    6. '                   ' → logprob: -9.882196426391602
    7. ' continue' → logprob: -10.257196426391602
    8. '                      ' → logprob: -11.757196426391602
    9. '                               ' → logprob: -12.007196426391602
    10. '               ' → logprob: -12.007196426391602

Token 1309: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.001990970689803362
    2. 'continue' → logprob: -6.876990795135498
    3. ':
' → logprob: -7.376990795135498
    4. ' continue' → logprob: -8.876991271972656
    5. ':' → logprob: -9.001991271972656
    6. '                           ' → logprob: -10.376991271972656
    7. '                   ' → logprob: -11.251991271972656
    8. '                        
' → logprob: -12.001991271972656
    9. '                               ' → logprob: -12.501991271972656
    10. '                      ' → logprob: -13.126991271972656

Token 1310: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.09342019259929657
    2. '                       ' → logprob: -2.5934202671051025
    3. 'return' → logprob: -4.968420028686523
    4. ' continue' → logprob: -5.593420028686523
    5. '                           ' → logprob: -5.718420028686523
    6. '                               ' → logprob: -7.968420028686523
    7. '
' → logprob: -10.218420028686523
    8. '                   ' → logprob: -10.468420028686523
    9. ' return' → logprob: -11.093420028686523
    10. '	continue' → logprob: -11.718420028686523

Token 1311: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0060805995017290115
    2. '
' → logprob: -5.631080627441406
    3. '                    
' → logprob: -6.506080627441406
    4. '               ' → logprob: -8.506080627441406
    5. '                        
' → logprob: -8.506080627441406
    6. '           ' → logprob: -9.006080627441406
    7. '<|end|>' → logprob: -9.006080627441406
    8. '                       ' → logprob: -9.381080627441406
    9. '```' → logprob: -9.881080627441406
    10. '    
' → logprob: -10.381080627441406

Token 1312: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0010205440921708941
    2. '
' → logprob: -7.376020431518555
    3. '                    
' → logprob: -8.001020431518555
    4. '                        
' → logprob: -10.751020431518555
    5. '               ' → logprob: -11.126020431518555
    6. '           ' → logprob: -11.251020431518555
    7. '                       ' → logprob: -12.126020431518555
    8. '    
' → logprob: -14.251020431518555
    9. '```' → logprob: -14.626020431518555
    10. '                
' → logprob: -14.751020431518555

Token 1313: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' (adapté à ' change') → logprob: -0.5870150327682495
    2. '                   ' → logprob: -0.8370150327682495
    3. '
' → logprob: -5.212015151977539
    4. '               ' → logprob: -6.837015151977539
    5. 'coin' → logprob: -6.962015151977539
    6. 'if' → logprob: -7.212015151977539
    7. 'coins' → logprob: -7.587015151977539
    8. '                       ' → logprob: -7.837015151977539
    9. '                    
' → logprob: -7.962015151977539
    10. 'result' → logprob: -8.087015151977539

Token 1314: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6342670321464539
    2. ' =' → logprob: -0.7592670321464539
    3. '_tokens' → logprob: -6.7592668533325195
    4. 'tokens' → logprob: -9.00926685333252
    5. '_amount' → logprob: -9.38426685333252
    6. ')' → logprob: -9.63426685333252
    7. '           ' → logprob: -10.00926685333252
    8. '                   ' → logprob: -10.88426685333252
    9. ' -=' → logprob: -11.50926685333252
    10. '<|end|>' → logprob: -11.63426685333252

Token 1315: ' payment' (ID: 9277)
  Prédit: 'payment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'payment' → logprob: -0.0002644351334311068
    2. ' payment' → logprob: -8.250264167785645
    3. 'pay' → logprob: -13.625264167785645
    4. '(payment' → logprob: -13.875264167785645
    5. '   ' → logprob: -15.500264167785645
    6. '{}' → logprob: -16.25026512145996
    7. '
' → logprob: -16.25026512145996
    8. '{' → logprob: -16.37526512145996
    9. '{
' → logprob: -16.75026512145996
    10. 'Payment' → logprob: -16.87526512145996

Token 1316: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14270450174808502
    2. '-' → logprob: -2.017704486846924
    3. '-self' → logprob: -11.892704963684082
    4. ')' → logprob: -12.142704963684082
    5. '<|end|>' → logprob: -13.017704963684082
    6. '-value' → logprob: -13.017704963684082
    7. '   ' → logprob: -13.142704963684082
    8. '<|end|>' → logprob: -13.392704963684082
    9. ' ' → logprob: -13.642704963684082
    10. ' ' → logprob: -13.767704963684082

Token 1317: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.47495681833243e-05
    2. ' self' → logprob: -10.625024795532227
    3. '                   ' → logprob: -15.625024795532227
    4. '
' → logprob: -15.875024795532227
    5. '       ' → logprob: -16.875024795532227
    6. '(self' → logprob: -17.000024795532227
    7. '[self' → logprob: -17.500024795532227
    8. '           ' → logprob: -17.750024795532227
    9. '```' → logprob: -18.250024795532227
    10. '               ' → logprob: -18.750024795532227

Token 1318: '.price' (ID: 31587)
  Prédit: '.price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.price' → logprob: -0.00016074994346126914
    2. 'price' → logprob: -8.750161170959473
    3. '.' → logprob: -13.250161170959473
    4. ' .' → logprob: -15.750161170959473
    5. '.
' → logprob: -15.875161170959473
    6. '	price' → logprob: -16.000160217285156
    7. ' price' → logprob: -17.250160217285156
    8. '   ' → logprob: -17.875160217285156
    9. '
' → logprob: -18.625160217285156
    10. '.user' → logprob: -19.000160217285156

Token 1319: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.16181369125843048
    2. '
' → logprob: -1.911813735961914
    3. '                    
' → logprob: -7.411813735961914
    4. '<|end|>' → logprob: -7.661813735961914
    5. '           ' → logprob: -8.661813735961914
    6. '               ' → logprob: -9.661813735961914
    7. '<|end|>' → logprob: -9.661813735961914
    8. ',' → logprob: -9.911813735961914
    9. ')' → logprob: -10.161813735961914
    10. ',
' → logprob: -10.786813735961914

Token 1320: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003229494614060968
    2. '
' → logprob: -8.750323295593262
    3. '                    
' → logprob: -9.625323295593262
    4. '               ' → logprob: -10.375323295593262
    5. '<|end|>' → logprob: -10.750323295593262
    6. '           ' → logprob: -11.000323295593262
    7. '```' → logprob: -11.375323295593262
    8. '                       ' → logprob: -12.375323295593262
    9. ',' → logprob: -12.625323295593262
    10. '                        
' → logprob: -13.125323295593262

Token 1321: ' if' (ID: 538)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.392002671957016
    2. 'if' (adapté à ' if') → logprob: -1.3920027017593384
    3. '                   ' → logprob: -4.017002582550049
    4. 'minimal' → logprob: -4.017002582550049
    5. 'min' → logprob: -4.267002582550049
    6. 'coins' → logprob: -4.517002582550049
    7. 'coin' → logprob: -4.642002582550049
    8. '#' → logprob: -6.267002582550049
    9. 'minimum' → logprob: -6.642002582550049
    10. 'result' → logprob: -7.767002582550049

Token 1322: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.013472664169967175
    2. ' change' → logprob: -4.388472557067871
    3. '(change' → logprob: -7.513472557067871
    4. 'k' → logprob: -8.888472557067871
    5. 'payment' → logprob: -10.138472557067871
    6. '   ' → logprob: -10.263472557067871
    7. '500' → logprob: -10.388472557067871
    8. '100' → logprob: -10.638472557067871
    9. 'Coin' → logprob: -10.888472557067871
    10. '(' → logprob: -11.138472557067871

Token 1323: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2821825444698334
    2. '==' → logprob: -1.6571825742721558
    3. '>' → logprob: -3.532182455062866
    4. ' >' → logprob: -3.907182455062866
    5. ' in' → logprob: -6.157182693481445
    6. ' not' → logprob: -6.782182693481445
    7. ' &' → logprob: -7.407182693481445
    8. ' <' → logprob: -7.657182693481445
    9. 'in' → logprob: -7.782182693481445
    10. ' >=' → logprob: -8.157182693481445

Token 1324: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.050699543207883835
    2. '500' → logprob: -3.175699472427368
    3. '100' → logprob: -5.925699710845947
    4. '
' → logprob: -6.425699710845947
    5. '1' → logprob: -6.925699710845947
    6. '5' → logprob: -7.800699710845947
    7. '=' → logprob: -7.800699710845947
    8. 'Coin' → logprob: -7.800699710845947
    9. '50' → logprob: -7.925699710845947
    10. 'self' → logprob: -8.800699234008789

Token 1325: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39117079973220825
    2. '500' → logprob: -1.2661707401275635
    3. '100' → logprob: -3.3911707401275635
    4. '
' → logprob: -6.266170978546143
    5. '50' → logprob: -6.516170978546143
    6. 'Coin' → logprob: -6.766170978546143
    7. '1' → logprob: -7.016170978546143
    8. '5' → logprob: -7.391170978546143
    9. 'coin' → logprob: -7.641170978546143
    10. '10' → logprob: -8.391170501708984

Token 1326: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.14393119513988495
    2. ':' → logprob: -2.2689311504364014
    3. ':
' → logprob: -3.6439311504364014
    4. '                   ' → logprob: -5.7689313888549805
    5. '                           ' → logprob: -7.5189313888549805
    6. ' or' → logprob: -8.14393138885498
    7. '       ' → logprob: -9.39393138885498
    8. '                      ' → logprob: -9.51893138885498
    9. '                        ' → logprob: -9.51893138885498
    10. '               ' → logprob: -9.64393138885498

Token 1327: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00015467056073248386
    2. '                   ' → logprob: -9.000154495239258
    3. ':
' → logprob: -11.250154495239258
    4. 'continue' → logprob: -12.375154495239258
    5. ':' → logprob: -12.750154495239258
    6. '                           ' → logprob: -13.000154495239258
    7. '                      ' → logprob: -13.500154495239258
    8. ' continue' → logprob: -13.500154495239258
    9. '               ' → logprob: -13.625154495239258
    10. '       ' → logprob: -13.750154495239258

Token 1328: ' continue' (ID: 4901)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.36335545778274536
    2. 'continue' (adapté à ' continue') → logprob: -1.4883553981781006
    3. ' continue' → logprob: -3.1133553981781006
    4. '                           ' → logprob: -3.4883553981781006
    5. '                               ' → logprob: -7.11335563659668
    6. '0' → logprob: -7.23835563659668
    7. 'return' → logprob: -7.23835563659668
    8. '           ' → logprob: -7.61335563659668
    9. '                   ' → logprob: -7.61335563659668
    10. '
' → logprob: -8.48835563659668

Token 1329: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0009728021104820073
    2. '
' → logprob: -7.125972747802734
    3. '                       ' → logprob: -9.750972747802734
    4. '                    
' → logprob: -10.250972747802734
    5. '           ' → logprob: -10.500972747802734
    6. '<|end|>' → logprob: -10.750972747802734
    7. '               ' → logprob: -11.625972747802734
    8. '                        
' → logprob: -12.125972747802734
    9. ',' → logprob: -13.000972747802734
    10. ',
' → logprob: -13.250972747802734

Token 1330: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0019437457667663693
    2. '
' → logprob: -6.501943588256836
    3. '           ' → logprob: -8.126943588256836
    4. '               ' → logprob: -9.876943588256836
    5. '                       ' → logprob: -10.126943588256836
    6. '                    
' → logprob: -10.751943588256836
    7. '```' → logprob: -10.876943588256836
    8. '                        
' → logprob: -12.751943588256836
    9. 'continue' → logprob: -13.126943588256836
    10. 'import' → logprob: -13.376943588256836

Token 1331: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5691706538200378
    2. '                   ' → logprob: -1.3191707134246826
    3. 'change' → logprob: -2.6941707134246826
    4. 'coin' → logprob: -3.6941707134246826
    5. 'coins' → logprob: -3.8191707134246826
    6. 'den' → logprob: -3.9441707134246826
    7. 'min' → logprob: -4.5691704750061035
    8. 'minimal' → logprob: -4.8191704750061035
    9. '#' (adapté à ' #') → logprob: -5.5691704750061035
    10. 'minimum' → logprob: -5.5691704750061035

Token 1332: ' Get' (ID: 2942)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.6012904644012451
    2. 'if' → logprob: -1.3512904644012451
    3. 'min' → logprob: -2.351290464401245
    4. 'minimal' → logprob: -3.476290464401245
    5. 'coin' → logprob: -3.726290464401245
    6. 'coins' → logprob: -3.976290464401245
    7. '#' → logprob: -4.601290702819824
    8. 'payment' → logprob: -5.851290702819824
    9. 'minimum' → logprob: -5.851290702819824
    10. 'den' → logprob: -6.226290702819824

Token 1333: ' minimal' (ID: 19957)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.005619446747004986
    2. 'minimum' → logprob: -6.630619525909424
    3. '_change' → logprob: -6.755619525909424
    4. 'minimal' → logprob: -6.880619525909424
    5. 'change' → logprob: -7.255619525909424
    6. ' minimal' → logprob: -7.880619525909424
    7. 'min' → logprob: -8.130619049072266
    8. '_co' → logprob: -8.630619049072266
    9. '_coin' → logprob: -8.630619049072266
    10. ' minimum' → logprob: -8.755619049072266

Token 1334: ' coins' (ID: 28969)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.006870475597679615
    2. 'coins' → logprob: -5.006870269775391
    3. '_coin' → logprob: -9.13187026977539
    4. '_change' → logprob: -11.00687026977539
    5. ' coins' → logprob: -11.25687026977539
    6. '_' → logprob: -12.13187026977539
    7. 'co' → logprob: -12.50687026977539
    8. 'coin' → logprob: -12.50687026977539
    9. 'change' → logprob: -13.25687026977539
    10. '   ' → logprob: -13.75687026977539

Token 1335: ' for' (ID: 395)
  Prédit: '_change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_change' → logprob: -0.010474776849150658
    2. 'for' → logprob: -5.260474681854248
    3. '_for' → logprob: -5.885474681854248
    4. 'change' → logprob: -6.260474681854248
    5. ' for' → logprob: -8.135475158691406
    6. ' =' → logprob: -9.385475158691406
    7. '       ' → logprob: -10.260475158691406
    8. ' change' → logprob: -10.885475158691406
    9. '_set' → logprob: -11.010475158691406
    10. '   ' → logprob: -11.010475158691406

Token 1336: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -9.126521035796031e-05
    2. '_change' → logprob: -9.750091552734375
    3. ' change' → logprob: -10.375091552734375
    4. 'coin' → logprob: -14.750091552734375
    5. 'return' → logprob: -15.375091552734375
    6. 'Coin' → logprob: -15.500091552734375
    7. '```' → logprob: -15.500091552734375
    8. '_coin' → logprob: -15.875091552734375
    9. '(change' → logprob: -16.125091552734375
    10. '	change' → logprob: -16.125091552734375

Token 1337: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.023684130981564522
    2. ' =' → logprob: -4.398684024810791
    3. ' change' → logprob: -5.773684024810791
    4. 'change' → logprob: -5.898684024810791
    5. ',' → logprob: -6.273684024810791
    6. '
' → logprob: -7.148684024810791
    7. 'result' → logprob: -8.02368450164795
    8. '           ' → logprob: -8.39868450164795
    9. '               ' → logprob: -8.52368450164795
    10. ':' → logprob: -8.77368450164795

Token 1338: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004135153256356716
    2. '           ' → logprob: -6.1291351318359375
    3. '       ' → logprob: -7.2541351318359375
    4. '               ' → logprob: -7.6291351318359375
    5. 'change' → logprob: -7.6291351318359375
    6. ',' → logprob: -10.129135131835938
    7. '
' → logprob: -10.254135131835938
    8. '                       ' → logprob: -10.629135131835938
    9. '```' → logprob: -10.629135131835938
    10. ' =' → logprob: -10.754135131835938

Token 1339: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' (adapté à ' change') → logprob: -0.0005501718260347843
    2. ' change' → logprob: -8.000550270080566
    3. 'minimal' → logprob: -9.375550270080566
    4. '                   ' → logprob: -10.375550270080566
    5. '   ' → logprob: -10.750550270080566
    6. 'coins' → logprob: -11.000550270080566
    7. '       ' → logprob: -11.125550270080566
    8. 'min' → logprob: -11.250550270080566
    9. 'coin' → logprob: -11.625550270080566
    10. 'result' → logprob: -12.000550270080566

Token 1340: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.015507510863244534
    2. '_min' → logprob: -4.640507698059082
    3. '_change' → logprob: -5.515507698059082
    4. '_dict' → logprob: -7.140507698059082
    5. '_tokens' → logprob: -8.015507698059082
    6. '_counts' → logprob: -8.765507698059082
    7. '_map' → logprob: -9.265507698059082
    8. 'coins' → logprob: -9.515507698059082
    9. '_result' → logprob: -9.890507698059082
    10. '_den' → logprob: -10.140507698059082

Token 1341: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.12483716756105423
    2. 'unt' → logprob: -2.9998371601104736
    3. 'unts' → logprob: -3.1248371601104736
    4. 'in' → logprob: -3.8748371601104736
    5. 'uns' → logprob: -7.499837398529053
    6. 'ns' → logprob: -7.999837398529053
    7. 'un' → logprob: -7.999837398529053
    8. 'unter' → logprob: -8.249836921691895
    9. '   ' → logprob: -9.124836921691895
    10. 'unting' → logprob: -9.374836921691895

Token 1342: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2520056366920471
    2. '=' → logprob: -1.5020055770874023
    3. '_dict' → logprob: -11.002005577087402
    4. '   ' → logprob: -11.252005577087402
    5. '_co' → logprob: -11.377005577087402
    6. '_tokens' → logprob: -11.877005577087402
    7. '_counts' → logprob: -12.127005577087402
    8. 's' → logprob: -12.252005577087402
    9. '=_' → logprob: -12.377005577087402
    10. ' ' → logprob: -12.752005577087402

Token 1343: ' Coin' (ID: 35089)
  Prédit: 'Coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' → logprob: -0.0004309076175559312
    2. ' Coin' → logprob: -7.750431060791016
    3. 'Payment' → logprob: -17.250431060791016
    4. '           ' → logprob: -17.875431060791016
    5. '{' → logprob: -18.000431060791016
    6. '{}' → logprob: -18.250431060791016
    7. 'Coins' → logprob: -18.250431060791016
    8. 'coin' → logprob: -18.375431060791016
    9. '   ' → logprob: -18.500431060791016
    10. 'Cash' → logprob: -18.625431060791016

Token 1344: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.0028908250387758017
    2. 'Den' → logprob: -5.877890586853027
    3. '_set' → logprob: -9.877890586853027
    4. 'set' → logprob: -10.502890586853027
    5. '_Set' → logprob: -13.377890586853027
    6. 'Sets' → logprob: -14.002890586853027
    7. 'Change' → logprob: -14.252890586853027
    8. '
' → logprob: -14.252890586853027
    9. '   ' → logprob: -14.752890586853027
    10. '.set' → logprob: -14.752890586853027

Token 1345: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.00776243070140481
    2. 'get' → logprob: -4.882762432098389
    3. '.' → logprob: -9.00776195526123
    4. '_get' → logprob: -10.75776195526123
    5. '```' → logprob: -12.38276195526123
    6. '._' → logprob: -13.25776195526123
    7. ' .' → logprob: -13.50776195526123
    8. ' get' → logprob: -14.13276195526123
    9. ' ' → logprob: -14.63276195526123
    10. '
' → logprob: -14.88276195526123

Token 1346: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -1.1472419600977446e-06
    2. 'min' → logprob: -14.500000953674316
    3. 'minimum' → logprob: -14.625000953674316
    4. 'minimal' → logprob: -17.875001907348633
    5. '_coin' → logprob: -18.875001907348633
    6. '_change' → logprob: -19.000001907348633
    7. '_co' → logprob: -19.125001907348633
    8. '(min' → logprob: -19.125001907348633
    9. '_' → logprob: -19.250001907348633
    10. '_max' → logprob: -19.500001907348633

Token 1347: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.007726110517978668
    2. 'um' → logprob: -4.882726192474365
    3. 'imal' → logprob: -10.007725715637207
    4. 'inum' → logprob: -10.757725715637207
    5. '_' → logprob: -10.882725715637207
    6. 'ium' → logprob: -11.257725715637207
    7. 'im' → logprob: -12.007725715637207
    8. '```' → logprob: -12.382725715637207
    9. 'mum' → logprob: -12.507725715637207
    10. '__' → logprob: -13.382725715637207

Token 1348: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -9.102680633077398e-05
    2. 'coins' → logprob: -9.375090599060059
    3. 'co' → logprob: -13.125090599060059
    4. 'Coins' → logprob: -13.250090599060059
    5. '_' → logprob: -13.500090599060059
    6. '_coin' → logprob: -14.750090599060059
    7. '_change' → logprob: -16.125091552734375
    8. '\' → logprob: -16.250091552734375
    9. '```' → logprob: -16.375091552734375
    10. ' coins' → logprob: -16.500091552734375

Token 1349: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0688304752111435
    2. 'coins' → logprob: -2.9438304901123047
    3. 'o' → logprob: -4.943830490112305
    4. '_co' → logprob: -6.068830490112305
    5. 'in' → logprob: -6.443830490112305
    6. 'change' → logprob: -6.818830490112305
    7. 'oin' → logprob: -7.818830490112305
    8. '_' → logprob: -8.068830490112305
    9. '
' → logprob: -8.693830490112305
    10. '_change' → logprob: -9.193830490112305

Token 1350: '_change' (ID: 36082)
  Prédit: '_change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_change' → logprob: -0.0001514557225164026
    2. 'Change' → logprob: -8.875151634216309
    3. '_co' → logprob: -11.750151634216309
    4. 'change' → logprob: -12.875151634216309
    5. '_' → logprob: -14.625151634216309
    6. '_count' → logprob: -14.750151634216309
    7. '```' → logprob: -16.750150680541992
    8. '_ch' → logprob: -17.250150680541992
    9. '_changes' → logprob: -17.250150680541992
    10. '_CHANGE' → logprob: -17.375150680541992

Token 1351: '(change' (ID: 95178)
  Prédit: '(change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(change' → logprob: -0.0002931558701675385
    2. '(' → logprob: -8.250292778015137
    3. 'change' → logprob: -10.625292778015137
    4. '(
' → logprob: -12.250292778015137
    5. '(ch' → logprob: -14.125292778015137
    6. ' (' → logprob: -14.250292778015137
    7. '(co' → logprob: -14.750292778015137
    8. ' change' → logprob: -15.250292778015137
    9. '(choice' → logprob: -16.125293731689453
    10. ')' → logprob: -16.250293731689453

Token 1352: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.400893896818161
    2. ')
' → logprob: -1.1508939266204834
    3. '                   ' → logprob: -4.275893688201904
    4. '           ' → logprob: -12.025894165039062
    5. '               ' → logprob: -12.025894165039062
    6. ')
' → logprob: -12.025894165039062
    7. '                       ' → logprob: -12.775894165039062
    8. '):
' → logprob: -13.775894165039062
    9. ')

' → logprob: -14.525894165039062
    10. '                  ' → logprob: -14.775894165039062

Token 1353: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002312976634129882
    2. '           ' → logprob: -7.127313137054443
    3. '                       ' → logprob: -7.502313137054443
    4. '               ' → logprob: -8.127312660217285
    5. '```' → logprob: -8.627312660217285
    6. '       ' → logprob: -8.877312660217285
    7. '                    
' → logprob: -8.877312660217285
    8. '                    ' → logprob: -10.002312660217285
    9. '                        
' → logprob: -10.502312660217285
    10. '
' → logprob: -10.877312660217285

Token 1354: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.33550915122032166
    2. 'if' → logprob: -1.960509181022644
    3. 'count' → logprob: -2.5855090618133545
    4. 'five' → logprob: -3.2105090618133545
    5. 'has' → logprob: -4.085509300231934
    6. 'num' → logprob: -5.960509300231934
    7. '```' → logprob: -6.210509300231934
    8. '500' → logprob: -6.960509300231934
    9. '           ' → logprob: -7.085509300231934
    10. '               ' → logprob: -7.210509300231934

Token 1355: ' Number' (ID: 9184)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31123000383377075
    2. 'count' → logprob: -2.186229944229126
    3. 'five' → logprob: -2.311229944229126
    4. '#' → logprob: -3.686229944229126
    5. 'has' → logprob: -4.561230182647705
    6. 'num' → logprob: -4.561230182647705
    7. '                   ' → logprob: -5.561230182647705
    8. 'cnt' → logprob: -6.561230182647705
    9. 'received' → logprob: -7.061230182647705
    10. 'change' → logprob: -7.686230182647705

Token 1356: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.6910269260406494
    2. 'of' → logprob: -1.1910269260406494
    3. '                   ' → logprob: -2.6910269260406494
    4. '       ' → logprob: -3.4410269260406494
    5. '           ' → logprob: -3.6910269260406494
    6. '500' → logprob: -3.8160269260406494
    7. ' of' → logprob: -4.06602668762207
    8. '_tokens' → logprob: -5.19102668762207
    9. '               ' → logprob: -5.56602668762207
    10. '   ' → logprob: -5.56602668762207

Token 1357: ' ' (ID: 220)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.02042357809841633
    2. 'five' → logprob: -4.895423412322998
    3. 'coins' → logprob: -5.395423412322998
    4. '500' → logprob: -5.770423412322998
    5. '```' → logprob: -6.520423412322998
    6. ' change' → logprob: -6.895423412322998
    7. 'den' → logprob: -6.895423412322998
    8. 'count' → logprob: -8.145423889160156
    9. '
' → logprob: -8.520423889160156
    10. 'received' → logprob: -8.895423889160156

Token 1358: '500' (ID: 3234)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.006894512567669153
    2. '500' → logprob: -5.506894588470459
    3. 'den' → logprob: -6.131894588470459
    4. ' change' → logprob: -8.5068941116333
    5. 'changes' → logprob: -9.5068941116333
    6. 'coins' → logprob: -9.7568941116333
    7. '```' → logprob: -9.7568941116333
    8. 'changed' → logprob: -9.8818941116333
    9. '(change' → logprob: -10.0068941116333
    10. 'chang' → logprob: -10.1318941116333

Token 1359: '-y' (ID: 18102)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.37737181782722473
    2. '-den' → logprob: -1.7523717880249023
    3. ' -' → logprob: -3.3773717880249023
    4. ')' → logprob: -3.6273717880249023
    5. '-co' → logprob: -3.6273717880249023
    6. '-token' → logprob: -4.377371788024902
    7. '-value' → logprob: -5.002371788024902
    8. '```' → logprob: -5.127371788024902
    9. '
' → logprob: -5.502371788024902
    10. '<|end|>' → logprob: -5.627371788024902

Token 1360: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.0007928356644697487
    2. 'coin' → logprob: -8.875792503356934
    3. 'yen' → logprob: -9.500792503356934
    4. '-en' → logprob: -9.750792503356934
    5. 'coins' → logprob: -10.000792503356934
    6. '```' → logprob: -10.000792503356934
    7. 'tokens' → logprob: -10.125792503356934
    8. '-den' → logprob: -10.813292503356934
    9. 'ield' → logprob: -10.875792503356934
    10. 'token' → logprob: -10.875792503356934

Token 1361: ' coins' (ID: 28969)
  Prédit: '_coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_coin' → logprob: -0.2854766845703125
    2. '_co' → logprob: -1.7854766845703125
    3. 'coin' → logprob: -2.7854766845703125
    4. '_' → logprob: -4.9104766845703125
    5. ')' → logprob: -5.4104766845703125
    6. 'coins' → logprob: -5.6604766845703125
    7. ')_' → logprob: -7.0354766845703125
    8. '_token' → logprob: -7.7854766845703125
    9. ' coin' → logprob: -7.9104766845703125
    10. '_value' → logprob: -7.9104766845703125

Token 1362: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19788046181201935
    2. ' =' → logprob: -1.822880506515503
    3. 'in' → logprob: -4.447880268096924
    4. '_in' → logprob: -6.072880268096924
    5. '500' → logprob: -6.197880268096924
    6. 'count' → logprob: -7.697880268096924
    7. '_' → logprob: -8.072880744934082
    8. '```' → logprob: -8.197880744934082
    9. '_count' → logprob: -8.322880744934082
    10. '=count' → logprob: -8.697880744934082

Token 1363: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -1.306760805164231e-05
    2. ' change' → logprob: -11.62501335144043
    3. '```' → logprob: -13.37501335144043
    4. '500' → logprob: -14.50001335144043
    5. 'coin' → logprob: -14.62501335144043
    6. '`' → logprob: -14.75001335144043
    7. '(change' → logprob: -15.25001335144043
    8. 'changed' → logprob: -15.87501335144043
    9. 'the' → logprob: -16.00001335144043
    10. '
' → logprob: -16.12501335144043

Token 1364: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08787151426076889
    2. '=' → logprob: -2.712871551513672
    3. 'count' → logprob: -4.962871551513672
    4. ')' → logprob: -5.337871551513672
    5. '_count' → logprob: -6.087871551513672
    6. '.get' → logprob: -6.837871551513672
    7. '```' → logprob: -7.712871551513672
    8. ':' → logprob: -8.212871551513672
    9. '.count' → logprob: -8.587871551513672
    10. '500' → logprob: -8.587871551513672

Token 1365: '                   ' (ID: 699)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.6013234257698059
    2. '                   ' → logprob: -2.101323366165161
    3. ' =' → logprob: -2.476323366165161
    4. 'count' → logprob: -3.226323366165161
    5. '```' → logprob: -3.226323366165161
    6. ')' → logprob: -3.351323366165161
    7. '=' → logprob: -3.476323366165161
    8. 'in' → logprob: -3.976323366165161
    9. 'value' → logprob: -4.22632360458374
    10. '           ' → logprob: -4.35132360458374

Token 1366: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.7784764170646667
    2. 'change' → logprob: -0.9034764170646667
    3. '500' → logprob: -2.6534764766693115
    4. 'num' → logprob: -3.2784764766693115
    5. 'five' → logprob: -4.028476238250732
    6. 'cnt' → logprob: -5.153476238250732
    7. 'coin' → logprob: -6.903476238250732
    8. 'coins' → logprob: -7.403476238250732
    9. '                   ' → logprob: -7.528476238250732
    10. '   ' → logprob: -7.778476238250732

Token 1367: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18251752853393555
    2. ' =' → logprob: -2.5575175285339355
    3. '500' → logprob: -2.6825175285339355
    4. '=' → logprob: -4.3075175285339355
    5. 'of' → logprob: -5.4325175285339355
    6. '_of' → logprob: -6.4325175285339355
    7. '```' → logprob: -8.307518005371094
    8. '[' → logprob: -8.557518005371094
    9. 'five' → logprob: -8.807518005371094
    10. 's' → logprob: -8.932518005371094

Token 1368: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.2912469804286957
    2. '_' → logprob: -1.416247010231018
    3. ' =' → logprob: -5.1662468910217285
    4. '5' → logprob: -6.4162468910217285
    5. '_in' → logprob: -7.5412468910217285
    6. '=' → logprob: -7.6662468910217285
    7. 'five' → logprob: -7.9162468910217285
    8. '_of' → logprob: -8.166247367858887
    9. 'of' → logprob: -8.416247367858887
    10. 'change' → logprob: -8.666247367858887

Token 1369: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5793956518173218
    2. ' =' → logprob: -0.8293956518173218
    3. '_' → logprob: -5.829395771026611
    4. ')' → logprob: -8.704395294189453
    5. 's' → logprob: -9.829395294189453
    6. ']' → logprob: -9.829395294189453
    7. '500' → logprob: -9.954395294189453
    8. '_=' → logprob: -10.329395294189453
    9. '```' → logprob: -10.454395294189453
    10. '[' → logprob: -11.079395294189453

Token 1370: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.1602470725774765
    2. ' change' → logprob: -1.9102470874786377
    3. '(change' → logprob: -10.785246849060059
    4. '0' → logprob: -13.785246849060059
    5. '	change' → logprob: -14.035246849060059
    6. '.change' → logprob: -15.785246849060059
    7. '1' → logprob: -17.035247802734375
    8. '   ' → logprob: -17.035247802734375
    9. ' ' → logprob: -17.285247802734375
    10. 'changes' → logprob: -17.785247802734375

Token 1371: '_co' (ID: 21102)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.029645999893546104
    2. ' //' → logprob: -4.279645919799805
    3. '_co' → logprob: -4.779645919799805
    4. '//' → logprob: -5.279645919799805
    5. 'get' → logprob: -7.279645919799805
    6. '.co' → logprob: -8.529645919799805
    7. '```' → logprob: -8.779645919799805
    8. '.setdefault' → logprob: -8.904645919799805
    9. '.' → logprob: -9.029645919799805
    10. '   ' → logprob: -9.529645919799805

Token 1372: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.10060571134090424
    2. 'oints' → logprob: -2.8506057262420654
    3. 'in' → logprob: -3.8506057262420654
    4. 'oin' → logprob: -4.975605487823486
    5. 'ons' → logprob: -5.475605487823486
    6. 'coins' → logprob: -6.100605487823486
    7. 'Coins' → logprob: -7.725605487823486
    8. 'ints' → logprob: -7.850605487823486
    9. 'o' → logprob: -8.350605964660645
    10. 'os' → logprob: -8.350605964660645

Token 1373: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.001553428708575666
    2. '.' → logprob: -6.501553535461426
    3. 'get' → logprob: -10.501553535461426
    4. '[' → logprob: -11.001553535461426
    5. ' .' → logprob: -12.626553535461426
    6. '   ' → logprob: -13.751553535461426
    7. '500' → logprob: -13.876553535461426
    8. '=' → logprob: -14.626553535461426
    9. '.setdefault' → logprob: -14.751553535461426
    10. ' =' → logprob: -15.501553535461426

Token 1374: '(' (ID: 7)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.14268289506435394
    2. '(' → logprob: -2.0176827907562256
    3. '(
' → logprob: -12.642683029174805
    4. '```' → logprob: -13.267683029174805
    5. ' ' → logprob: -13.642683029174805
    6. '5' → logprob: -14.767683029174805
    7. '
' → logprob: -14.892683029174805
    8. '   ' → logprob: -15.142683029174805
    9. '50' → logprob: -15.642683029174805
    10. '501' → logprob: -16.267683029174805

Token 1375: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -1.3856492842023727e-06
    2. '   ' → logprob: -13.875000953674316
    3. '
' → logprob: -15.625000953674316
    4. ' ' → logprob: -16.500001907348633
    5. '```' → logprob: -17.250001907348633
    6. '(' → logprob: -17.875001907348633
    7. '5' → logprob: -18.000001907348633
    8. '    ' → logprob: -18.000001907348633
    9. '`' → logprob: -18.125001907348633
    10. '       ' → logprob: -18.375001907348633

Token 1376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1756367712223437e-05
    2. ' ,' → logprob: -11.500011444091797
    3. ')' → logprob: -14.000011444091797
    4. '   ' → logprob: -15.250011444091797
    5. '```' → logprob: -16.125011444091797
    6. '`,' → logprob: -16.375011444091797
    7. '(),' → logprob: -16.750011444091797
    8. ',
' → logprob: -17.000011444091797
    9. ',None' → logprob: -17.125011444091797
    10. '           ' → logprob: -17.500011444091797

Token 1377: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '   ' → logprob: -17.12520408630371
    4. ')' → logprob: -17.87520408630371
    5. '
' → logprob: -19.00020408630371
    6. '۰' → logprob: -19.12520408630371
    7. '    
' → logprob: -20.00020408630371
    8. ' 
' → logprob: -20.12520408630371
    9. '    ' → logprob: -20.12520408630371
    10. '  ' → logprob: -20.25020408630371

Token 1378: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -19.875001907348633
    4. '۰' → logprob: -20.625001907348633
    5. ')' → logprob: -21.750001907348633
    6. '０' → logprob: -22.125001907348633
    7. '00' → logprob: -23.000001907348633
    8. '    ' → logprob: -23.687501907348633
    9. '1' → logprob: -23.750001907348633
    10. '  ' → logprob: -23.812501907348633

Token 1379: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04355229064822197
    2. ')
' → logprob: -3.1685523986816406
    3. '                   ' → logprob: -7.668552398681641
    4. '           ' → logprob: -10.29355239868164
    5. '               ' → logprob: -10.66855239868164
    6. '                       ' → logprob: -11.41855239868164
    7. ')
' → logprob: -12.29355239868164
    8. '):
' → logprob: -13.04355239868164
    9. '                           ' → logprob: -13.41855239868164
    10. ' )' → logprob: -13.54355239868164

Token 1380: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0014901040121912956
    2. ')' → logprob: -7.501490116119385
    3. '               ' → logprob: -8.251489639282227
    4. '                    
' → logprob: -8.751489639282227
    5. '           ' → logprob: -9.001489639282227
    6. '                       ' → logprob: -9.501489639282227
    7. '
' → logprob: -9.626489639282227
    8. '<|end|>' → logprob: -9.751489639282227
    9. '```' → logprob: -9.876489639282227
    10. '       ' → logprob: -10.626489639282227

Token 1381: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005884233396500349
    2. 'if' → logprob: -5.255884170532227
    3. ' if' → logprob: -8.130884170532227
    4. '           ' → logprob: -8.880884170532227
    5. '               ' → logprob: -9.380884170532227
    6. '                       ' → logprob: -9.630884170532227
    7. ')' → logprob: -10.880884170532227
    8. '                    
' → logprob: -10.880884170532227
    9. '
' → logprob: -11.880884170532227
    10. '                           ' → logprob: -12.255884170532227

Token 1382: ' We' (ID: 1416)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007250337861478329
    2. '                   ' → logprob: -5.0072503089904785
    3. ' if' → logprob: -8.882250785827637
    4. '#' → logprob: -9.132250785827637
    5. '           ' → logprob: -9.507250785827637
    6. '                       ' → logprob: -9.632250785827637
    7. 'result' → logprob: -9.757250785827637
    8. 'results' → logprob: -10.007250785827637
    9. '               ' → logprob: -10.757250785827637
    10. '
' → logprob: -11.757250785827637

Token 1383: ' want' (ID: 1682)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.15358169376850128
    2. '           ' → logprob: -3.0285816192626953
    3. 'continue' → logprob: -3.7785816192626953
    4. '                   ' → logprob: -4.028581619262695
    5. 'append' → logprob: -4.278581619262695
    6. '               ' → logprob: -4.528581619262695
    7. 'if' → logprob: -5.028581619262695
    8. '       ' → logprob: -5.653581619262695
    9. '                       ' → logprob: -5.778581619262695
    10. ' continue' → logprob: -6.153581619262695

Token 1384: ' to' (ID: 316)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6565800309181213
    2. ' to' → logprob: -1.9065799713134766
    3. ' count' → logprob: -2.2815799713134766
    4. '                   ' → logprob: -2.5315799713134766
    5. ' if' → logprob: -3.2815799713134766
    6. ' used' → logprob: -3.6565799713134766
    7. 'to' → logprob: -3.7815799713134766
    8. 'if' → logprob: -4.281579971313477
    9. '[count' → logprob: -4.906579971313477
    10. '
' → logprob: -5.031579971313477

Token 1385: ' look' (ID: 1631)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yield' → logprob: -0.21383515000343323
    2. 'maximize' → logprob: -2.7138352394104004
    3. 'if' → logprob: -2.9638352394104004
    4. ' yield' → logprob: -3.4638352394104004
    5. 'find' → logprob: -4.5888352394104
    6. 'collect' → logprob: -4.8388352394104
    7. 'append' → logprob: -4.9638352394104
    8. 'keep' → logprob: -5.0888352394104
    9. ' if' → logprob: -5.9638352394104
    10. 'accept' → logprob: -6.7138352394104

Token 1386: ' only' (ID: 1606)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3310873508453369
    2. ' for' → logprob: -2.706087350845337
    3. '                   ' → logprob: -2.831087350845337
    4. 'for' → logprob: -3.206087350845337
    5. '           ' → logprob: -3.456087350845337
    6. 'up' → logprob: -4.206087112426758
    7. '               ' → logprob: -4.206087112426758
    8. '       ' → logprob: -4.956087112426758
    9. ')' → logprob: -5.581087112426758
    10. '_for' → logprob: -5.706087112426758

Token 1387: ' if' (ID: 538)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.3154469728469849
    2. ' for' → logprob: -1.5654469728469849
    3. ' if' → logprob: -1.6904469728469849
    4. 'if' → logprob: -2.1904468536376953
    5. 'for' → logprob: -2.3154468536376953
    6. 'at' → logprob: -2.5654468536376953
    7. '                   ' → logprob: -3.9404468536376953
    8. ' to' → logprob: -5.065446853637695
    9. '
' → logprob: -5.190446853637695
    10. 'to' → logprob: -5.940446853637695

Token 1388: ' we' (ID: 581)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.05497809499502182
    2. ' count' → logprob: -2.929978132247925
    3. '(count' → logprob: -9.429978370666504
    4. '500' → logprob: -11.554978370666504
    5. 'change' → logprob: -13.554978370666504
    6. '[count' → logprob: -13.929978370666504
    7. '	count' → logprob: -14.429978370666504
    8. ' ' → logprob: -14.554978370666504
    9. '<count' → logprob: -14.554978370666504
    10. '   ' → logprob: -14.929978370666504

Token 1389: ' get' (ID: 717)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.809760332107544
    2. 'have' → logprob: -1.559760332107544
    3. ' want' → logprob: -1.684760332107544
    4. ' get' → logprob: -2.684760332107544
    5. ' can' → logprob: -3.434760332107544
    6. 'want' → logprob: -3.434760332107544
    7. 'get' → logprob: -4.934760093688965
    8. ' are' → logprob: -5.059760093688965
    9. ' got' → logprob: -6.059760093688965
    10. 'can' → logprob: -6.309760093688965

Token 1390: ' at' (ID: 540)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.5894651412963867
    2. 'count' → logprob: -1.2144651412963867
    3. ' ' → logprob: -2.0894651412963867
    4. '_' → logprob: -4.464465141296387
    5. '500' → logprob: -5.339465141296387
    6. ' at' → logprob: -6.839465141296387
    7. '=count' → logprob: -7.214465141296387
    8. '[count' → logprob: -7.339465141296387
    9. '```' → logprob: -7.464465141296387
    10. '<count' → logprob: -7.714465141296387

Token 1391: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.0015423574950546026
    2. ' least' → logprob: -6.876542568206787
    3. 'count' → logprob: -8.251542091369629
    4. '```' → logprob: -9.001542091369629
    5. '500' → logprob: -9.876542091369629
    6. 'lease' → logprob: -10.876542091369629
    7. 'Least' → logprob: -11.126542091369629
    8. '#' → logprob: -12.376542091369629
    9. 'most' → logprob: -12.501542091369629
    10. 'le' → logprob: -12.751542091369629

Token 1392: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20434948801994324
    2. ' ' → logprob: -1.8293495178222656
    3. ' one' → logprob: -3.8293495178222656
    4. ' count' → logprob: -7.079349517822266
    5. 'count' → logprob: -7.079349517822266
    6. '500' → logprob: -7.704349517822266
    7. '```' → logprob: -9.079349517822266
    8. '   ' → logprob: -9.204349517822266
    9. 'one' → logprob: -9.579349517822266
    10. '
' → logprob: -10.079349517822266

Token 1393: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000636308453977108
    2. ' ' → logprob: -7.375636100769043
    3. '
' → logprob: -12.750636100769043
    4. ' one' → logprob: -12.750636100769043
    5. '```' → logprob: -13.500636100769043
    6. 'one' → logprob: -13.875636100769043
    7. '500' → logprob: -14.375636100769043
    8. '   ' → logprob: -14.750636100769043
    9. '`' → logprob: -15.875636100769043
    10. 'count' → logprob: -16.62563705444336

Token 1394: ' coins' (ID: 28969)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24476538598537445
    2. ' :' → logprob: -2.119765281677246
    3. ':
' → logprob: -3.744765281677246
    4. ' :
' → logprob: -4.119765281677246
    5. ' <' → logprob: -4.494765281677246
    6. ' and' → logprob: -4.619765281677246
    7. ' or' → logprob: -4.994765281677246
    8. ' >' → logprob: -5.494765281677246
    9. ' ' → logprob: -5.494765281677246
    10. ' <=' → logprob: -5.869765281677246

Token 1395: ' (' (ID: 350)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.1363508701324463
    2. 'or' → logprob: -1.7613508701324463
    3. 'in' → logprob: -1.8863508701324463
    4. ' in' → logprob: -2.6363508701324463
    5. ' and' → logprob: -2.8863508701324463
    6. '
' → logprob: -3.2613508701324463
    7. ':' → logprob: -3.3863508701324463
    8. '>' → logprob: -3.6363508701324463
    9. '<|end|>' → logprob: -3.7613508701324463
    10. 'and' → logprob: -3.8863508701324463

Token 1396: 'any' (ID: 1252)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30368179082870483
    2. '>' → logprob: -1.8036818504333496
    3. 'and' → logprob: -3.6786818504333496
    4. ' and' → logprob: -3.8036818504333496
    5. '):' → logprob: -4.55368185043335
    6. ')>' → logprob: -4.80368185043335
    7. '>=' → logprob: -5.05368185043335
    8. 'or' → logprob: -5.42868185043335
    9. '):
' → logprob: -5.42868185043335
    10. ' or' → logprob: -5.67868185043335

Token 1397: ' #' (ID: 1069)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8539285659790039
    2. ')' → logprob: -0.9789285659790039
    3. '):' → logprob: -2.228928565979004
    4. ' or' → logprob: -3.103928565979004
    5. ')
' → logprob: -4.728928565979004
    6. '):

' → logprob: -4.978928565979004
    7. '
' → logprob: -5.103928565979004
    8. '),' → logprob: -5.228928565979004
    9. ' )' → logprob: -5.603928565979004
    10. ' ):
' → logprob: -5.978928565979004

Token 1398: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6269480586051941
    2. '>' → logprob: -2.126948118209839
    3. ' >' → logprob: -2.501948118209839
    4. '
' → logprob: -3.376948118209839
    5. '):
' → logprob: -3.376948118209839
    6. '500' → logprob: -3.501948118209839
    7. ' or' → logprob: -3.501948118209839
    8. '):' → logprob: -3.626948118209839
    9. ' of' → logprob: -3.751948118209839
    10. 'of' → logprob: -4.50194787979126

Token 1399: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0408480279147625
    2. '                       ' → logprob: -4.040848255157471
    3. ' and' → logprob: -4.415848255157471
    4. '               ' → logprob: -6.165848255157471
    5. ':' → logprob: -6.290848255157471
    6. ' or' → logprob: -6.665848255157471
    7. '           ' → logprob: -7.415848255157471
    8. '
' → logprob: -7.415848255157471
    9. ':
' → logprob: -7.415848255157471
    10. 'and' → logprob: -7.915848255157471

Token 1400: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007372469175606966
    2. 'if' → logprob: -5.1323723793029785
    3. ' if' → logprob: -6.8823723793029785
    4. '               ' → logprob: -8.757372856140137
    5. '           ' → logprob: -9.132372856140137
    6. '                       ' → logprob: -9.132372856140137
    7. '                    
' → logprob: -11.257372856140137
    8. '                    ' → logprob: -12.632372856140137
    9. '```' → logprob: -12.632372856140137
    10. ')' → logprob: -12.882372856140137

Token 1401: ' This' (ID: 1328)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.038739562034606934
    2. 'if' → logprob: -3.2887396812438965
    3. ' if' → logprob: -7.6637396812438965
    4. '               ' → logprob: -9.038739204406738
    5. '           ' → logprob: -9.538739204406738
    6. '                       ' → logprob: -10.663739204406738
    7. '                    
' → logprob: -12.663739204406738
    8. '   ' → logprob: -12.788739204406738
    9. '
' → logprob: -13.663739204406738
    10. '                    ' → logprob: -13.788739204406738

Token 1402: ' will' (ID: 738)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.4257972240447998
    2. '
' → logprob: -2.0507972240448
    3. ' if' → logprob: -2.4257972240448
    4. '               ' → logprob: -2.6757972240448
    5. '           ' → logprob: -2.8007972240448
    6. 'if' → logprob: -2.8007972240448
    7. ':' → logprob: -3.1757972240448
    8. '       ' → logprob: -3.4257972240448
    9. '   ' → logprob: -3.5507972240448
    10. '                       ' → logprob: -3.6757972240448

Token 1403: ' generate' (ID: 10419)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5372053980827332
    2. 'yield' → logprob: -1.912205457687378
    3. ' be' → logprob: -2.537205457687378
    4. ' continue' → logprob: -3.162205457687378
    5. ' yield' → logprob: -3.412205457687378
    6. 'allow' → logprob: -4.412205219268799
    7. 'only' → logprob: -4.787205219268799
    8. 'be' → logprob: -4.912205219268799
    9. 'not' → logprob: -4.912205219268799
    10. '                   ' → logprob: -5.037205219268799

Token 1404: ' all' (ID: 722)
  Prédit: ' payment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' payment' → logprob: -1.5879935026168823
    2. 'payment' → logprob: -1.5879935026168823
    3. 'results' → logprob: -1.9629935026168823
    4. '                   ' → logprob: -2.462993621826172
    5. '           ' → logprob: -3.087993621826172
    6. '               ' → logprob: -3.212993621826172
    7. ' valid' → logprob: -3.337993621826172
    8. ' all' → logprob: -3.587993621826172
    9. 'possible' → logprob: -3.837993621826172
    10. ' results' → logprob: -3.837993621826172

Token 1405: ' payment' (ID: 9277)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1406: ' options' (ID: 3880)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9478229880332947
    2. 's' → logprob: -0.9478229880332947
    3. '_methods' → logprob: -2.1978230476379395
    4. '_' → logprob: -2.8228230476379395
    5. '_options' → logprob: -4.3228230476379395
    6. '_method' → logprob: -4.9478230476379395
    7. ' methods' → logprob: -5.1978230476379395
    8. '   ' → logprob: -5.5728230476379395
    9. '
' → logprob: -5.8228230476379395
    10. '<|end|>' → logprob: -5.9478230476379395

Token 1407: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.039993491023778915
    2. '           ' → logprob: -4.2899932861328125
    3. '               ' → logprob: -4.2899932861328125
    4. ':' → logprob: -5.6649932861328125
    5. '                       ' → logprob: -5.7899932861328125
    6. ':
' → logprob: -6.0399932861328125
    7. ')' → logprob: -7.2899932861328125
    8. '):
' → logprob: -7.7899932861328125
    9. ',' → logprob: -8.164993286132812
    10. '                    
' → logprob: -8.164993286132812

Token 1408: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005872295005246997
    2. '               ' → logprob: -8.250587463378906
    3. '                    
' → logprob: -9.125587463378906
    4. '           ' → logprob: -9.625587463378906
    5. '<|end|>' → logprob: -10.125587463378906
    6. '                       ' → logprob: -10.250587463378906
    7. '   ' → logprob: -11.500587463378906
    8. '<|end|>' → logprob: -11.625587463378906
    9. '                        
' → logprob: -12.375587463378906
    10. '    
' → logprob: -12.375587463378906

Token 1409: ' results' (ID: 4376)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2304048389196396
    2. '
' → logprob: -2.230404853820801
    3. '                       ' → logprob: -3.105404853820801
    4. 'if' → logprob: -4.355404853820801
    5. '               ' → logprob: -4.355404853820801
    6. '           ' → logprob: -4.605404853820801
    7. '       ' → logprob: -5.605404853820801
    8. ' if' → logprob: -5.855404853820801
    9. ')' → logprob: -6.105404853820801
    10. '                    
' → logprob: -6.730404853820801

Token 1410: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.01816398836672306
    2. '.' → logprob: -4.018164157867432
    3. '.extend' → logprob: -11.768163681030273
    4. '.app' → logprob: -12.893163681030273
    5. 'append' → logprob: -13.768163681030273
    6. '.Append' → logprob: -14.393163681030273
    7. '.push' → logprob: -14.893163681030273
    8. '.setdefault' → logprob: -14.893163681030273
    9. '.add' → logprob: -15.018163681030273
    10. ').' → logprob: -15.268163681030273

Token 1411: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22518594563007355
    2. '((' → logprob: -1.8501859903335571
    3. '({' → logprob: -4.225185871124268
    4. '({
' → logprob: -4.225185871124268
    5. '(
' → logprob: -4.850185871124268
    6. '({'' → logprob: -4.975185871124268
    7. '(('' → logprob: -8.725186347961426
    8. ' (' → logprob: -9.350186347961426
    9. '({"' → logprob: -9.475186347961426
    10. '(({' → logprob: -10.225186347961426

Token 1412: 'count' (ID: 5420)
  Prédit: 'payment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'payment' → logprob: -0.010118920356035233
    2. ' payment' → logprob: -5.2601189613342285
    3. 'k' → logprob: -5.6351189613342285
    4. 'total' → logprob: -7.2601189613342285
    5. '(payment' → logprob: -8.26011848449707
    6. 'used' → logprob: -8.88511848449707
    7. '   ' → logprob: -9.38511848449707
    8. ' k' → logprob: -10.76011848449707
    9. '(' → logprob: -11.13511848449707
    10. '(k' → logprob: -11.51011848449707

Token 1413: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00027813989436253905
    2. '_
' → logprob: -9.25027847290039
    3. '_,' → logprob: -9.75027847290039
    4. ')' → logprob: -10.00027847290039
    5. ',' → logprob: -11.00027847290039
    6. ')_' → logprob: -11.12527847290039
    7. '<|end|>' → logprob: -11.50027847290039
    8. '_)' → logprob: -11.75027847290039
    9. '
' → logprob: -12.37527847290039
    10. '_

' → logprob: -12.75027847290039

Token 1414: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.004346210043877363
    2. '_' → logprob: -5.5043463706970215
    3. ')' → logprob: -9.254345893859863
    4. '5' → logprob: -9.879345893859863
    5. ' ' → logprob: -10.379345893859863
    6. ',' → logprob: -10.504345893859863
    7. '0' → logprob: -10.879345893859863
    8. '
' → logprob: -12.129345893859863
    9. '1' → logprob: -12.629345893859863
    10. '_used' → logprob: -12.754345893859863

Token 1415: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004125575942452997
    2. ',
' → logprob: -8.125412940979004
    3. ',)' → logprob: -9.875412940979004
    4. ')' → logprob: -10.625412940979004
    5. ' ,' → logprob: -10.875412940979004
    6. '           ' → logprob: -11.875412940979004
    7. '),' → logprob: -12.375412940979004
    8. ',),' → logprob: -13.500412940979004
    9. ',

' → logprob: -13.875412940979004
    10. '   ' → logprob: -14.000412940979004

Token 1416: ' payment' (ID: 9277)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.6393510103225708
    2. ' used' → logprob: -0.8893510103225708
    3. 'tuple' → logprob: -3.3893508911132812
    4. ' tuple' → logprob: -3.7643508911132812
    5. 'i' → logprob: -7.014350891113281
    6. ' payment' → logprob: -7.139350891113281
    7. 'payment' → logprob: -7.264350891113281
    8. 'total' → logprob: -7.264350891113281
    9. ' i' → logprob: -8.014350891113281
    10. '(' → logprob: -8.389350891113281

Token 1417: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006042646709829569
    2. ',
' → logprob: -8.125604629516602
    3. '           ' → logprob: -8.750604629516602
    4. ')' → logprob: -10.125604629516602
    5. ' ,' → logprob: -10.625604629516602
    6. ',)' → logprob: -11.000604629516602
    7. '               ' → logprob: -11.625604629516602
    8. '          ' → logprob: -11.875604629516602
    9. '<|end|>' → logprob: -11.875604629516602
    10. '),' → logprob: -11.875604629516602

Token 1418: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.6360894441604614
    2. 'used' → logprob: -0.7610894441604614
    3. ' tuple' → logprob: -6.136089324951172
    4. ' used' → logprob: -7.136089324951172
    5. '
' → logprob: -7.886089324951172
    6. '   ' → logprob: -10.386089324951172
    7. 'i' → logprob: -10.761089324951172
    8. '```' → logprob: -10.886089324951172
    9. '(tuple' → logprob: -11.386089324951172
    10. '    
' → logprob: -11.511089324951172

Token 1419: '(' (ID: 7)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.0017631208756938577
    2. '(' → logprob: -6.376763343811035
    3. 'list' → logprob: -9.876763343811035
    4. '(list' → logprob: -12.876763343811035
    5. '(
' → logprob: -13.001763343811035
    6. ' used' → logprob: -13.126763343811035
    7. '(*' → logprob: -13.876763343811035
    8. '([' → logprob: -14.376763343811035
    9. '[' → logprob: -14.626763343811035
    10. '(i' → logprob: -15.376763343811035

Token 1420: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.00039015832589939237
    2. 'list' → logprob: -7.87539005279541
    3. '[' → logprob: -12.87539005279541
    4. '(' → logprob: -13.00039005279541
    5. ' used' → logprob: -13.62539005279541
    6. '[i' → logprob: -13.75039005279541
    7. '
' → logprob: -14.37539005279541
    8. '[*' → logprob: -14.37539005279541
    9. 'i' → logprob: -14.75039005279541
    10. '*' → logprob: -15.50039005279541

Token 1421: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -1.676292231422849e-05
    2. '
' → logprob: -12.375017166137695
    3. '_' → logprob: -13.000017166137695
    4. '_coin' → logprob: -13.000017166137695
    5. ')_' → logprob: -13.500017166137695
    6. '(_' → logprob: -13.625017166137695
    7. '```' → logprob: -13.625017166137695
    8. 'coins' → logprob: -14.000017166137695
    9. ',_' → logprob: -14.375017166137695
    10. '_used' → logprob: -14.750017166137695

Token 1422: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0005885370774194598
    2. '_' → logprob: -8.000588417053223
    3. '_ins' → logprob: -8.875588417053223
    4. 'coins' → logprob: -10.625588417053223
    5. 'in' → logprob: -11.250588417053223
    6. '[' → logprob: -11.500588417053223
    7. '_co' → logprob: -11.500588417053223
    8. 'i' → logprob: -11.625588417053223
    9. '           ' → logprob: -11.875588417053223
    10. '               ' → logprob: -12.500588417053223

Token 1423: '),' (ID: 936)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3696747124195099
    2. '),' → logprob: -1.9946746826171875
    3. ',' → logprob: -2.4946746826171875
    4. '           ' → logprob: -2.9946746826171875
    5. '+' → logprob: -4.4946746826171875
    6. ')' → logprob: -4.6196746826171875
    7. '               ' → logprob: -5.4946746826171875
    8. ')))' → logprob: -5.4946746826171875
    9. ' +' → logprob: -6.3696746826171875
    10. '[' → logprob: -6.4946746826171875

Token 1424: ' k' (ID: 372)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.9341806769371033
    2. 'k' → logprob: -1.559180736541748
    3. '))' → logprob: -2.059180736541748
    4. 'coin' → logprob: -2.309180736541748
    5. 'tuple' → logprob: -3.059180736541748
    6. '0' → logprob: -3.434180736541748
    7. '))
' → logprob: -3.809180736541748
    8. ')' → logprob: -4.559180736541748
    9. 'False' → logprob: -5.184180736541748
    10. 'coins' → logprob: -5.309180736541748

Token 1425: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.00019269285257905722
    2. ')' → logprob: -8.750192642211914
    3. '1' → logprob: -10.750192642211914
    4. ',' → logprob: -12.125192642211914
    5. '))' → logprob: -13.375192642211914
    6. '
' → logprob: -13.875192642211914
    7. '```' → logprob: -14.000192642211914
    8. '10' → logprob: -14.000192642211914
    9. ' ' → logprob: -14.375192642211914
    10. '_' → logprob: -14.500192642211914

Token 1426: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00034988581319339573
    2. ')' → logprob: -8.000349998474121
    3. '))' → logprob: -12.375349998474121
    4. ')]' → logprob: -12.750349998474121
    5. '])' → logprob: -13.375349998474121
    6. ')}' → logprob: -13.875349998474121
    7. '_' → logprob: -14.250349998474121
    8. '   ' → logprob: -14.250349998474121
    9. ')])' → logprob: -14.500349998474121
    10. '100' → logprob: -15.125349998474121

Token 1427: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2018197774887085
    2. ')' → logprob: -1.7018197774887085
    3. '           ' → logprob: -8.82681941986084
    4. '))
' → logprob: -9.20181941986084
    5. ')
' → logprob: -10.20181941986084
    6. ',' → logprob: -10.20181941986084
    7. '               ' → logprob: -10.45181941986084
    8. ')))' → logprob: -10.82681941986084
    9. '       ' → logprob: -11.32681941986084
    10. '                   ' → logprob: -11.82681941986084

Token 1428: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4292641580104828
    2. ')' → logprob: -1.4292641878128052
    3. '       ' → logprob: -2.6792640686035156
    4. '\n' → logprob: -4.054264068603516
    5. '               ' → logprob: -4.554264068603516
    6. '   ' → logprob: -5.054264068603516
    7. '
' → logprob: -6.304264068603516
    8. ')
' → logprob: -6.929264068603516
    9. '    
' → logprob: -7.179264068603516
    10. '                   ' → logprob: -8.054264068603516

Token 1429: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016051966696977615
    2. '               ' → logprob: -4.516051769256592
    3. '
' → logprob: -5.766051769256592
    4. '       ' → logprob: -7.016051769256592
    5. '\n' → logprob: -7.766051769256592
    6. '   ' → logprob: -8.39105224609375
    7. '    
' → logprob: -9.01605224609375
    8. 'return' (adapté à ' return') → logprob: -9.39105224609375
    9. '            
' → logprob: -10.51605224609375
    10. '	       ' → logprob: -10.89105224609375

Token 1430: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.698481559753418
    2. '\n' → logprob: -1.448481559753418
    3. '        
' → logprob: -2.573481559753418
    4. '    
' → logprob: -2.698481559753418
    5. '       ' → logprob: -3.323481559753418
    6. '  
' → logprob: -4.323481559753418
    7. '
' → logprob: -4.573481559753418
    8. '   ' → logprob: -4.698481559753418
    9. ' ' → logprob: -4.948481559753418
    10. '           ' → logprob: -5.198481559753418

Token 1431: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1088159084320068
    2. '   ' → logprob: -1.6088159084320068
    3. '        
' → logprob: -1.9838159084320068
    4. '    
' → logprob: -2.108815908432007
    5. '           ' → logprob: -2.608815908432007
    6. ' 
' → logprob: -3.108815908432007
    7. '\n' → logprob: -3.108815908432007
    8. '```' → logprob: -4.483816146850586
    9. '            
' → logprob: -4.608816146850586
    10. '    ' → logprob: -4.733816146850586

Token 1432: ' limit' (ID: 5967)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22429637610912323
    2. '   ' → logprob: -2.3492963314056396
    3. '
' → logprob: -3.5992963314056396
    4. '           ' → logprob: -3.5992963314056396
    5. '    
' → logprob: -3.8492963314056396
    6. '        
' → logprob: -3.8492963314056396
    7. '            
' → logprob: -5.474296569824219
    8. ' for' → logprob: -7.599296569824219
    9. ' used' → logprob: -7.599296569824219
    10. '  
' → logprob: -7.724296569824219

Token 1433: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4559297263622284
    2. ' =' → logprob: -1.3309297561645508
    3. ' +' → logprob: -2.580929756164551
    4. '+' → logprob: -3.705929756164551
    5. '            ' → logprob: -7.830929756164551
    6. '           ' → logprob: -8.33092975616455
    7. '<|end|>' → logprob: -8.45592975616455
    8. '[' → logprob: -8.58092975616455
    9. ')' → logprob: -9.20592975616455
    10. '<|end|>' → logprob: -9.58092975616455

Token 1434: ' coin' (ID: 22179)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.0028224699199199677
    2. ' coin' → logprob: -5.877822399139404
    3. '   ' → logprob: -11.002822875976562
    4. ' ' → logprob: -15.002822875976562
    5. '20' → logprob: -15.752822875976562
    6. '       ' → logprob: -16.252822875976562
    7. '.coin' → logprob: -16.377822875976562
    8. '     ' → logprob: -16.877822875976562
    9. '    ' → logprob: -17.252822875976562
    10. 'coal' → logprob: -17.377822875976562

Token 1435: '_counts' (ID: 61971)
  Prédit: '_limits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limits' → logprob: -0.00862320140004158
    2. '_counts' → logprob: -4.758623123168945
    3. 'limits' → logprob: -11.758623123168945
    4. 'Limits' → logprob: -14.883623123168945
    5. '_limit' → logprob: -15.758623123168945
    6. 's' → logprob: -16.883623123168945
    7. '
' → logprob: -16.883623123168945
    8. ' limits' → logprob: -17.008623123168945
    9. 'counts' → logprob: -17.258623123168945
    10. '[' → logprob: -17.758623123168945

Token 1436: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004136222414672375
    2. '[' → logprob: -5.504136085510254
    3. '[
' → logprob: -11.379136085510254
    4. '[level' → logprob: -12.004136085510254
    5. '[in' → logprob: -12.129136085510254
    6. '[index' → logprob: -12.129136085510254
    7. '[token' → logprob: -12.254136085510254
    8. '[min' → logprob: -12.379136085510254
    9. '[item' → logprob: -12.629136085510254
    10. '[ind' → logprob: -12.754136085510254

Token 1437: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8045321702957153
    2. ']+' → logprob: -1.0545321702957153
    3. ')' → logprob: -1.8045321702957153
    4. '])' → logprob: -3.804532051086426
    5. ')+' → logprob: -4.429532051086426
    6. '+' → logprob: -5.679532051086426
    7. '           ' → logprob: -7.054532051086426
    8. '[i' → logprob: -8.304532051086426
    9. ' +' → logprob: -8.679532051086426
    10. 'if' → logprob: -8.929532051086426

Token 1438: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3732133209705353
    2. '           ' → logprob: -1.373213291168213
    3. '```' → logprob: -4.248213291168213
    4. '        
' → logprob: -4.373213291168213
    5. '   ' → logprob: -4.498213291168213
    6. ':' → logprob: -5.498213291168213
    7. '    
' → logprob: -5.498213291168213
    8. '               ' → logprob: -5.873213291168213
    9. ' 
' → logprob: -6.748213291168213
    10. '            
' → logprob: -6.748213291168213

Token 1439: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1093609631061554
    2. ' for' → logprob: -2.359360933303833
    3. '           ' → logprob: -4.734361171722412
    4. '       ' → logprob: -8.109360694885254
    5. '   ' → logprob: -11.484360694885254
    6. '```' → logprob: -12.234360694885254
    7. '	for' → logprob: -12.734360694885254
    8. '
' → logprob: -13.234360694885254
    9. ',' → logprob: -13.984360694885254
    10. 'range' → logprob: -14.234360694885254

Token 1440: ' c' (ID: 274)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.9324315190315247
    2. 'count' → logprob: -0.9324315190315247
    3. 'usage' → logprob: -2.68243145942688
    4. 'cnt' → logprob: -2.68243145942688
    5. ' count' → logprob: -3.18243145942688
    6. ' usage' → logprob: -4.182431697845459
    7. ' used' → logprob: -4.807431697845459
    8. ' cnt' → logprob: -5.307431697845459
    9. 'num' → logprob: -5.807431697845459
    10. 'x' → logprob: -6.932431697845459

Token 1441: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007628399878740311
    2. 'in' → logprob: -4.882628440856934
    3. 'c' → logprob: -11.257628440856934
    4. '0' → logprob: -12.882628440856934
    5. ' ' → logprob: -13.007628440856934
    6. 'n' → logprob: -13.632628440856934
    7. 'i' → logprob: -13.757628440856934
    8. '_' → logprob: -14.632628440856934
    9. '_in' → logprob: -14.632628440856934
    10. 'inthe' → logprob: -14.757628440856934

Token 1442: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.213407963514328
    2. ' range' → logprob: -1.9634079933166504
    3. '0' → logprob: -2.9634079933166504
    4. 'c' → logprob: -9.338407516479492
    5. ' ' → logprob: -9.963407516479492
    6. ' c' → logprob: -11.088407516479492
    7. '(range' → logprob: -14.088407516479492
    8. 'count' → logprob: -15.713407516479492
    9. '	range' → logprob: -15.838407516479492
    10. '   ' → logprob: -15.838407516479492

Token 1443: '(limit' (ID: 112473)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.04318073391914368
    2. '0' → logprob: -3.5431807041168213
    3. ' limit' → logprob: -4.4181809425354
    4. '(limit' → logprob: -6.6681809425354
    5. ' ' → logprob: -12.043180465698242
    6. '(' → logprob: -12.418180465698242
    7. '   ' → logprob: -13.418180465698242
    8. '_limit' → logprob: -14.168180465698242
    9. ' (' → logprob: -14.918180465698242
    10. '1' → logprob: -15.418180465698242

Token 1444: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009768485091626644
    2. ' +' → logprob: -4.634768486022949
    3. '           ' → logprob: -13.13476848602295
    4. '+
' → logprob: -13.25976848602295
    5. '<|end|>' → logprob: -13.38476848602295
    6. '[' → logprob: -13.63476848602295
    7. ')' → logprob: -14.00976848602295
    8. '       ' → logprob: -14.50976848602295
    9. '):
' → logprob: -14.75976848602295
    10. '):' → logprob: -14.75976848602295

Token 1445: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -20.25
    4. '   ' → logprob: -20.875
    5. '
' → logprob: -22.375
    6. ')' → logprob: -23.5
    7. '۱' → logprob: -23.875
    8. '{
' → logprob: -24.25
    9. '１' → logprob: -24.625
    10. '           ' → logprob: -24.75

Token 1446: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '
' → logprob: -19.625
    4. '```' → logprob: -19.625
    5. '   ' → logprob: -20.75
    6. '0' → logprob: -21.5
    7. ')' → logprob: -22.375
    8. '۱' → logprob: -22.5
    9. '``' → logprob: -22.5
    10. '' → logprob: -22.6875

Token 1447: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020558703690767288
    2. '):
' → logprob: -4.020558834075928
    3. '<|end|>' → logprob: -6.770558834075928
    4. ':' → logprob: -7.770558834075928
    5. ')' → logprob: -8.27055835723877
    6. '       ' → logprob: -8.77055835723877
    7. '<|end|>' → logprob: -9.14555835723877
    8. '           ' → logprob: -9.27055835723877
    9. ',' → logprob: -9.89555835723877
    10. '   ' → logprob: -10.14555835723877

Token 1448: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0030705220997333527
    2. '                
' → logprob: -6.50307035446167
    3. ' used' → logprob: -7.37807035446167
    4. '           ' → logprob: -8.503070831298828
    5. '                ' → logprob: -8.628070831298828
    6. '            
' → logprob: -9.378070831298828
    7. ' 
' → logprob: -9.628070831298828
    8. '            ' → logprob: -9.753070831298828
    9. '<|end|>' → logprob: -9.878070831298828
    10. ' ' → logprob: -10.378070831298828

Token 1449: ' used' (ID: 2061)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7063593864440918
    2. ' used' → logprob: -1.2063593864440918
    3. 'used' (adapté à ' used') → logprob: -1.5813593864440918
    4. '   ' → logprob: -6.831359386444092
    5. '           ' → logprob: -8.33135986328125
    6. ' if' → logprob: -8.95635986328125
    7. 'if' → logprob: -9.95635986328125
    8. '                   ' → logprob: -10.33135986328125
    9. ' ' → logprob: -11.83135986328125
    10. '                ' → logprob: -12.08135986328125

Token 1450: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -6.749814019713085e-06
    2. '_tokens' → logprob: -13.250006675720215
    3. 'coins' → logprob: -13.500006675720215
    4. '```' → logprob: -13.875006675720215
    5. '_coin' → logprob: -14.625006675720215
    6. '_' → logprob: -14.750006675720215
    7. '[_' → logprob: -14.875006675720215
    8. '[' → logprob: -15.000006675720215
    9. 'Coins' → logprob: -15.500006675720215
    10. '
' → logprob: -15.875006675720215

Token 1451: 'ins' (ID: 1564)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.0020665181800723076
    2. 'coins' → logprob: -6.502066612243652
    3. 'ins' → logprob: -8.002066612243652
    4. '_' → logprob: -8.627066612243652
    5. 'n' → logprob: -11.627066612243652
    6. '[' → logprob: -11.877066612243652
    7. 'co' → logprob: -11.877066612243652
    8. 'in' → logprob: -12.127066612243652
    9. 'Coins' → logprob: -12.252066612243652
    10. 's' → logprob: -13.127066612243652

Token 1452: '.append' (ID: 3709)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05222431197762489
    2. '.append' → logprob: -3.1772243976593018
    3. '[' → logprob: -5.052224159240723
    4. '[c' → logprob: -6.302224159240723
    5. '[
' → logprob: -7.427224159240723
    6. '=' → logprob: -9.302224159240723
    7. ' =' → logprob: -10.302224159240723
    8. ' +=' → logprob: -10.552224159240723
    9. 'append' → logprob: -10.552224159240723
    10. ' [' → logprob: -10.677224159240723

Token 1453: '(c' (ID: 2410)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04858759790658951
    2. ' c' → logprob: -3.0485875606536865
    3. '	c' → logprob: -16.423587799072266
    4. '(c' → logprob: -16.923587799072266
    5. ' ' → logprob: -17.798587799072266
    6. ' ' → logprob: -18.423587799072266
    7. '
' → logprob: -18.423587799072266
    8. '   ' → logprob: -18.548587799072266
    9. ' 
' → logprob: -18.798587799072266
    10. ')c' → logprob: -19.048587799072266

Token 1454: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017040544480551034
    2. '<|end|>' → logprob: -9.250170707702637
    3. ' )' → logprob: -10.000170707702637
    4. ')return' → logprob: -11.625170707702637
    5. ')
' → logprob: -12.125170707702637
    6. '<|end|>' → logprob: -12.500170707702637
    7. '),' → logprob: -12.625170707702637
    8. '               ' → logprob: -12.750170707702637
    9. ')\
' → logprob: -14.375170707702637
    10. ')#' → logprob: -14.375170707702637

Token 1455: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.360495388507843
    2. '                
' → logprob: -1.4854953289031982
    3. '```' → logprob: -3.7354953289031982
    4. '            
' → logprob: -4.485495567321777
    5. '                 
' → logprob: -4.860495567321777
    6. ' 
' → logprob: -5.235495567321777
    7. '                    
' → logprob: -5.235495567321777
    8. '                   ' → logprob: -5.485495567321777
    9. '<|end|>' → logprob: -5.485495567321777
    10. '                ' → logprob: -5.735495567321777

Token 1456: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.00010688089241739362
    2. ' dfs' → logprob: -9.500106811523438
    3. '               ' → logprob: -10.750106811523438
    4. 'if' → logprob: -11.625106811523438
    5. 'df' → logprob: -14.125106811523438
    6. '           ' → logprob: -14.875106811523438
    7. '                   ' → logprob: -15.750106811523438
    8. '                
' → logprob: -15.875106811523438
    9. '
' → logprob: -15.875106811523438
    10. ' if' → logprob: -17.875106811523438

Token 1457: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.438573680294212e-06
    2. '(' → logprob: -12.500005722045898
    3. '(
' → logprob: -13.375005722045898
    4. 'i' → logprob: -17.0000057220459
    5. ' (' → logprob: -18.3750057220459
    6. '(I' → logprob: -19.6250057220459
    7. '(ii' → logprob: -19.8750057220459
    8. '   ' → logprob: -20.0000057220459
    9. '((' → logprob: -20.2500057220459
    10. '[i' → logprob: -21.0000057220459

Token 1458: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029777804389595985
    2. ' +' → logprob: -3.529777765274048
    3. '1' → logprob: -10.779777526855469
    4. '+
' → logprob: -12.529777526855469
    5. '+i' → logprob: -13.654777526855469
    6. ' +
' → logprob: -14.404777526855469
    7. 'i' → logprob: -14.529777526855469
    8. '   ' → logprob: -15.529777526855469
    9. '＋' → logprob: -16.02977752685547
    10. '+c' → logprob: -16.52977752685547

Token 1459: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.875008583068848
    4. '```' → logprob: -15.875008583068848
    5. '
' → logprob: -17.62500762939453
    6. '+' → logprob: -17.62500762939453
    7. ')' → logprob: -17.75000762939453
    8. '0' → logprob: -18.75000762939453
    9. '           ' → logprob: -18.81250762939453
    10. '``' → logprob: -18.87500762939453

Token 1460: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005358144640922546
    2. ')' → logprob: -5.2553582191467285
    3. ',
' → logprob: -9.75535774230957
    4. '               ' → logprob: -10.75535774230957
    5. '```' → logprob: -11.75535774230957
    6. '   ' → logprob: -12.13035774230957
    7. ',)' → logprob: -12.13035774230957
    8. ' ,' → logprob: -12.25535774230957
    9. 'used' → logprob: -12.63035774230957
    10. '),' → logprob: -12.75535774230957

Token 1461: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.0005530327325686812
    2. ' used' → logprob: -7.500553131103516
    3. '[]' → logprob: -16.750553131103516
    4. '   ' → logprob: -17.875553131103516
    5. '[' → logprob: -18.000553131103516
    6. '.used' → logprob: -19.125553131103516
    7. '    ' → logprob: -19.500553131103516
    8. 'Used' → logprob: -19.750553131103516
    9. '_used' → logprob: -20.125553131103516
    10. ' ' → logprob: -20.125553131103516

Token 1462: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -4.320199877838604e-07
    2. 'coins' → logprob: -16.0
    3. 'co' → logprob: -16.5
    4. '\' → logprob: -16.625
    5. '```' → logprob: -17.375
    6. '_' → logprob: -17.75
    7. '_tokens' → logprob: -18.25
    8. '-co' → logprob: -18.5
    9. '
' → logprob: -18.625
    10. '_coin' → logprob: -19.0

Token 1463: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0010559145594015718
    2. 'coins' → logprob: -7.001055717468262
    3. '_co' → logprob: -10.001055717468262
    4. '[' → logprob: -11.001055717468262
    5. '_' → logprob: -11.126055717468262
    6. 'o' → logprob: -11.251055717468262
    7. 'in' → logprob: -11.376055717468262
    8. 'Coins' → logprob: -12.001055717468262
    9. 'ed' → logprob: -12.251055717468262
    10. '_ins' → logprob: -12.251055717468262

Token 1464: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01413094811141491
    2. ',' → logprob: -4.38913106918335
    3. ')
' → logprob: -6.63913106918335
    4. '),' → logprob: -9.014130592346191
    5. '<|end|>' → logprob: -9.139130592346191
    6. '               ' → logprob: -10.514130592346191
    7. ',)' → logprob: -11.264130592346191
    8. '.pop' → logprob: -11.764130592346191
    9. '```' → logprob: -12.014130592346191
    10. ')c' → logprob: -12.389130592346191

Token 1465: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.002475777640938759
    2. ' total' → logprob: -6.002475738525391
    3. '                   ' → logprob: -16.50247573852539
    4. '               ' → logprob: -17.75247573852539
    5. '(total' → logprob: -18.87747573852539
    6. '                       ' → logprob: -19.50247573852539
    7. '	total' → logprob: -19.75247573852539
    8. '                ' → logprob: -20.00247573852539
    9. '
' → logprob: -20.25247573852539
    10. '                  ' → logprob: -20.87747573852539

Token 1466: '_coin' (ID: 187802)
  Prédit: '_coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coin' → logprob: -7.64839569455944e-05
    2. 'coin' → logprob: -9.500076293945312
    3. '```' → logprob: -14.500076293945312
    4. '_' → logprob: -15.000076293945312
    5. 'Coin' → logprob: -15.250076293945312
    6. '
' → logprob: -15.625076293945312
    7. '+' → logprob: -16.250076293945312
    8. ' coin' → logprob: -16.500076293945312
    9. '_coupon' → logprob: -17.000076293945312
    10. '.coin' → logprob: -17.625076293945312

Token 1467: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.2961512513575144e-05
    2. 'value' → logprob: -10.750022888183594
    3. '+' → logprob: -13.750022888183594
    4. 'Value' → logprob: -15.875022888183594
    5. '           ' → logprob: -16.375022888183594
    6. '_' → logprob: -17.000022888183594
    7. 'alue' → logprob: -17.375022888183594
    8. '_VALUE' → logprob: -17.500022888183594
    9. '   ' → logprob: -18.125022888183594
    10. ')' → logprob: -18.375022888183594

Token 1468: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31487613916397095
    2. ' +' → logprob: -1.3148760795593262
    3. '+c' → logprob: -6.439876079559326
    4. ')' → logprob: -12.439876556396484
    5. '+
' → logprob: -12.814876556396484
    6. ' +
' → logprob: -13.189876556396484
    7. '```' → logprob: -13.314876556396484
    8. '+t' → logprob: -14.064876556396484
    9. '+C' → logprob: -14.064876556396484
    10. '+b' → logprob: -14.564876556396484

Token 1469: ' c' (ID: 274)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.32346415519714355
    2. 'c' → logprob: -1.3234641551971436
    3. 'Coin' → logprob: -5.073464393615723
    4. ' coin' → logprob: -6.198464393615723
    5. ' c' → logprob: -6.573464393615723
    6. '   ' → logprob: -9.198464393615723
    7. '(' → logprob: -9.323464393615723
    8. 'co' → logprob: -10.198464393615723
    9. '(c' → logprob: -10.573464393615723
    10. ' Coin' → logprob: -10.698464393615723

Token 1470: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3868789076805115
    2. ' *' → logprob: -1.1368789672851562
    3. '*(' → logprob: -13.261878967285156
    4. '   ' → logprob: -13.386878967285156
    5. '*object' → logprob: -13.511878967285156
    6. '           ' → logprob: -14.011878967285156
    7. '       ' → logprob: -14.386878967285156
    8. '**' → logprob: -15.261878967285156
    9. '               ' → logprob: -15.261878967285156
    10. '*self' → logprob: -15.261878967285156

Token 1471: ' Coin' (ID: 35089)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.0006455989787355065
    2. 'Coin' → logprob: -7.375645637512207
    3. ' coin' → logprob: -11.250645637512207
    4. '           ' → logprob: -12.750645637512207
    5. '       ' → logprob: -13.625645637512207
    6. '   ' → logprob: -14.500645637512207
    7. 'co' → logprob: -15.500645637512207
    8. '               ' → logprob: -15.625645637512207
    9. '
' → logprob: -15.750645637512207
    10. 'chip' → logprob: -16.25064468383789

Token 1472: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.6971056461334229
    2. '_types' → logprob: -0.6971056461334229
    3. 'Types' → logprob: -5.947105407714844
    4. '_set' → logprob: -6.697105407714844
    5. 'Den' → logprob: -10.447105407714844
    6. '_type' → logprob: -10.697105407714844
    7. 'types' → logprob: -11.322105407714844
    8. '_Set' → logprob: -11.447105407714844
    9. '_TYPES' → logprob: -12.072105407714844
    10. 'Type' → logprob: -12.447105407714844

Token 1473: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00016146517009474337
    2. '_den' → logprob: -9.000161170959473
    3. '```' → logprob: -12.000161170959473
    4. '[' → logprob: -12.125161170959473
    5. '[i' → logprob: -12.250161170959473
    6. '   ' → logprob: -12.500161170959473
    7. '.den' → logprob: -12.500161170959473
    8. '.' → logprob: -12.500161170959473
    9. '_types' → logprob: -13.000161170959473
    10. ' .' → logprob: -13.000161170959473

Token 1474: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.00012475410767365247
    2. '_den' → logprob: -9.00012493133545
    3. '500' → logprob: -15.12512493133545
    4. '-den' → logprob: -15.12512493133545
    5. ' denominations' → logprob: -15.25012493133545
    6. '   ' → logprob: -16.125123977661133
    7. 'coins' → logprob: -16.125123977661133
    8. '.den' → logprob: -16.375123977661133
    9. '
' → logprob: -16.625123977661133
    10. '100' → logprob: -17.000123977661133

Token 1475: 'ominations' (ID: 169517)
  Prédit: 'ominations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ominations' → logprob: -0.00013619766104966402
    2. 'om' → logprob: -9.375136375427246
    3. 'omination' → logprob: -10.625136375427246
    4. 'omin' → logprob: -11.000136375427246
    5. '_' → logprob: -12.875136375427246
    6. '   ' → logprob: -13.125136375427246
    7. ' denominations' → logprob: -14.375136375427246
    8. '```' → logprob: -14.500136375427246
    9. 'omi' → logprob: -14.625136375427246
    10. '           ' → logprob: -14.875136375427246

Token 1476: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.709308167453855e-05
    2. '[' → logprob: -9.375086784362793
    3. 'i' → logprob: -13.750086784362793
    4. '[
' → logprob: -15.125086784362793
    5. '   ' → logprob: -15.250086784362793
    6. ' [' → logprob: -15.625086784362793
    7. '
' → logprob: -15.875086784362793
    8. '```' → logprob: -16.25008773803711
    9. '[I' → logprob: -16.50008773803711
    10. '[in' → logprob: -17.75008773803711

Token 1477: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005876887124031782
    2. '[i' → logprob: -6.2558770179748535
    3. '+i' → logprob: -7.0058770179748535
    4. ' +' → logprob: -7.2558770179748535
    5. '.index' → logprob: -7.2558770179748535
    6. '[' → logprob: -7.3808770179748535
    7. '.i' → logprob: -7.6308770179748535
    8. '.idx' → logprob: -8.630876541137695
    9. '1' → logprob: -9.130876541137695
    10. '.' → logprob: -9.630876541137695

Token 1478: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -17.625
    4. '+' → logprob: -17.875
    5. '
' → logprob: -18.25
    6. '```' → logprob: -18.8125
    7. '2' → logprob: -18.875
    8. '۱' → logprob: -19.5
    9. 'i' → logprob: -19.5625
    10. '１' → logprob: -19.9375

Token 1479: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.033845316618680954
    2. '.value' → logprob: -3.4088454246520996
    3. '[' → logprob: -9.783844947814941
    4. '[i' → logprob: -9.908844947814941
    5. '.' → logprob: -10.408844947814941
    6. '           ' → logprob: -11.533844947814941
    7. ']' → logprob: -11.658844947814941
    8. '   ' → logprob: -11.908844947814941
    9. '.i' → logprob: -12.033844947814941
    10. '```' → logprob: -12.033844947814941

Token 1480: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -4.961759259458631e-06
    2. '.value' → logprob: -12.500004768371582
    3. ' value' → logprob: -14.250004768371582
    4. '
' → logprob: -15.625004768371582
    5. ''value' → logprob: -16.6250057220459
    6. '"value' → logprob: -16.6250057220459
    7. '```' → logprob: -16.6250057220459
    8. '   ' → logprob: -16.8750057220459
    9. '_value' → logprob: -17.6250057220459
    10. '	value' → logprob: -18.3750057220459

Token 1481: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14749445021152496
    2. ')
' → logprob: -2.1474945545196533
    3. '               ' → logprob: -3.8974945545196533
    4. '           ' → logprob: -10.147494316101074
    5. ')
' → logprob: -11.272494316101074
    6. ')`
' → logprob: -12.647494316101074
    7. '                   ' → logprob: -13.022494316101074
    8. '```' → logprob: -13.397494316101074
    9. ')`' → logprob: -13.522494316101074
    10. ')

' → logprob: -14.272494316101074

Token 1482: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0036753711756318808
    2. '```' → logprob: -5.87867546081543
    3. '                
' → logprob: -7.25367546081543
    4. '``' → logprob: -9.75367546081543
    5. '<|end|>' → logprob: -10.50367546081543
    6. '                ' → logprob: -11.00367546081543
    7. '                   ' → logprob: -11.25367546081543
    8. '           ' → logprob: -11.75367546081543
    9. '              ' → logprob: -11.87867546081543
    10. '
' → logprob: -12.12867546081543

Token 1483: ' used' (ID: 2061)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.121308833360672
    2. ' used' → logprob: -2.3713088035583496
    3. 'used' (adapté à ' used') → logprob: -3.8713088035583496
    4. '```' → logprob: -9.996309280395508
    5. '           ' → logprob: -13.746309280395508
    6. '``' → logprob: -13.871309280395508
    7. '   ' → logprob: -14.371309280395508
    8. '              ' → logprob: -14.996309280395508
    9. 'Used' → logprob: -15.371309280395508
    10. '                ' → logprob: -15.371309280395508

Token 1484: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -7.896309739408025e-07
    2. '\' → logprob: -14.875000953674316
    3. '-co' → logprob: -16.375
    4. 'co' → logprob: -16.375
    5. '```' → logprob: -17.25
    6. 's' → logprob: -17.375
    7. '__' → logprob: -17.5
    8. '               ' → logprob: -17.625
    9. 'Co' → logprob: -18.625
    10. '          ' → logprob: -18.625

Token 1485: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.006788312457501888
    2. 'in' → logprob: -5.88178825378418
    3. '_co' → logprob: -6.13178825378418
    4. '               ' → logprob: -7.50678825378418
    5. 'Coins' → logprob: -8.13178825378418
    6. 'coins' → logprob: -9.00678825378418
    7. '           ' → logprob: -9.38178825378418
    8. 'i' → logprob: -9.50678825378418
    9. '                   ' → logprob: -9.63178825378418
    10. '_' → logprob: -9.63178825378418

Token 1486: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -8.77627644513268e-06
    2. 'pop' → logprob: -11.875008583068848
    3. '.' → logprob: -13.500008583068848
    4. '	pop' → logprob: -16.000009536743164
    5. '.remove' → logprob: -16.375009536743164
    6. '_pop' → logprob: -16.500009536743164
    7. '.Pop' → logprob: -16.750009536743164
    8. 'Pop' → logprob: -17.500009536743164
    9. '.append' → logprob: -18.125009536743164
    10. '(pop' → logprob: -18.750009536743164

Token 1487: '()

' (ID: 5874)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1488: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005137138650752604
    2. 'dfs' → logprob: -7.750513553619385
    3. '```' → logprob: -10.250514030456543
    4. '           ' → logprob: -10.500514030456543
    5. '   ' → logprob: -11.500514030456543
    6. 'return' → logprob: -13.125514030456543
    7. '
' → logprob: -13.125514030456543
    8. '<|end|>' → logprob: -13.375514030456543
    9. '        
' → logprob: -13.625514030456543
    10. ')' → logprob: -13.875514030456543

Token 1489: ' dfs' (ID: 51252)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03809874504804611
    2. 'dfs' (adapté à ' dfs') → logprob: -3.2880988121032715
    3. ' dfs' → logprob: -10.538098335266113
    4. '
' → logprob: -11.413098335266113
    5. '   ' → logprob: -12.038098335266113
    6. '```' → logprob: -12.163098335266113
    7. 'return' → logprob: -12.538098335266113
    8. '        
' → logprob: -13.038098335266113
    9. '           ' → logprob: -14.038098335266113
    10. 'DFS' → logprob: -14.538098335266113

Token 1490: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014164102263748646
    2. '(' → logprob: -4.264163970947266
    3. ' ' → logprob: -15.639163970947266
    4. '       ' → logprob: -15.889163970947266
    5. 'def' → logprob: -16.139163970947266
    6. '   ' → logprob: -16.139163970947266
    7. '(
' → logprob: -16.514163970947266
    8. '(len' → logprob: -16.764163970947266
    9. 'len' → logprob: -17.014163970947266
    10. '           ' → logprob: -18.389163970947266

Token 1491: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '   ' → logprob: -20.125
    3. ' ' → logprob: -20.125
    4. '6' → logprob: -20.875
    5. '۰' → logprob: -21.125
    6. ')' → logprob: -21.375
    7. '       ' → logprob: -21.875
    8. 'len' → logprob: -22.125
    9. '           ' → logprob: -23.25
    10. '(' → logprob: -23.25

Token 1492: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004387750814203173
    2. ')' → logprob: -8.250438690185547
    3. ',)' → logprob: -9.750438690185547
    4. '   ' → logprob: -10.000438690185547
    5. '       ' → logprob: -11.125438690185547
    6. '```' → logprob: -11.375438690185547
    7. ',
' → logprob: -11.500438690185547
    8. '[' → logprob: -11.625438690185547
    9. '<|end|>' → logprob: -12.375438690185547
    10. ',[' → logprob: -12.625438690185547

Token 1493: ' [],' (ID: 22188)
  Prédit: '[])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[])' → logprob: -0.2523839771747589
    2. '[]' → logprob: -1.5023839473724365
    3. '[],' → logprob: -7.752384185791016
    4. ' [])' → logprob: -11.127384185791016
    5. '[]}' → logprob: -12.752384185791016
    6. ')' → logprob: -12.877384185791016
    7. '[]>' → logprob: -13.502384185791016
    8. '[' → logprob: -13.627384185791016
    9. '[]
' → logprob: -14.002384185791016
    10. '[])
' → logprob: -14.127384185791016

Token 1494: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.32245564460754395
    2. ')' → logprob: -1.322455644607544
    3. '[])' → logprob: -5.197455406188965
    4. '[]' → logprob: -6.072455406188965
    5. '<|end|>' → logprob: -6.822455406188965
    6. ' ' → logprob: -9.447455406188965
    7. ' [])' → logprob: -10.697455406188965
    8. '<|end|>' → logprob: -11.072455406188965
    9. '[' → logprob: -11.447455406188965
    10. ' )' → logprob: -11.447455406188965

Token 1495: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. ')' → logprob: -20.125
    4. '   ' → logprob: -21.5
    5. '       ' → logprob: -22.125
    6. 'self' → logprob: -22.375
    7. '           ' → logprob: -22.375
    8. '        ' → logprob: -22.375
    9. '۰' → logprob: -22.5
    10. '     ' → logprob: -22.75

Token 1496: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012714238837361336
    2. '       ' → logprob: -6.7512712478637695
    3. ')
' → logprob: -9.25127124786377
    4. ')return' → logprob: -12.87627124786377
    5. '   ' → logprob: -13.37627124786377
    6. ' )' → logprob: -14.75127124786377
    7. '<|end|>' → logprob: -15.62627124786377
    8. ')#' → logprob: -16.501272201538086
    9. '),' → logprob: -16.751272201538086
    10. '
' → logprob: -17.001272201538086

Token 1497: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004926919937133789
    2. '<|end|>' → logprob: -6.379926681518555
    3. 'return' → logprob: -7.004926681518555
    4. '        
' → logprob: -7.379926681518555
    5. '```' → logprob: -7.379926681518555
    6. '
' → logprob: -8.004926681518555
    7. 'results' → logprob: -8.379926681518555
    8. '   ' → logprob: -8.879926681518555
    9. ')' → logprob: -9.629926681518555
    10. '#' → logprob: -9.629926681518555

Token 1498: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09124107658863068
    2. 'results' → logprob: -3.0912411212921143
    3. 'return' (adapté à ' return') → logprob: -3.2162411212921143
    4. '
' → logprob: -6.841240882873535
    5. '        
' → logprob: -7.841240882873535
    6. '```' → logprob: -9.716240882873535
    7. ' return' → logprob: -10.091240882873535
    8. ' results' → logprob: -10.091240882873535
    9. '   ' → logprob: -10.841240882873535
    10. '    
' → logprob: -12.216240882873535

Token 1499: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.13456885516643524
    2. 'sorted' → logprob: -2.134568929672241
    3. '[' → logprob: -5.259568691253662
    4. '[(' → logprob: -6.509568691253662
    5. ' results' → logprob: -7.509568691253662
    6. ' sorted' → logprob: -8.50956916809082
    7. ' [' → logprob: -9.63456916809082
    8. '(sorted' → logprob: -10.38456916809082
    9. '(results' → logprob: -10.50956916809082
    10. '[s' → logprob: -11.50956916809082

Token 1500: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1501: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1502: ' State' (ID: 5388)
  Prédit: ' Payment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Payment' → logprob: -0.015150386840105057
    2. ' ' → logprob: -5.265150547027588
    3. 'Payment' → logprob: -5.765150547027588
    4. ' Transaction' → logprob: -6.890150547027588
    5. ' ' → logprob: -7.390150547027588
    6. ' Buyer' → logprob: -7.390150547027588
    7. ' User' → logprob: -7.515150547027588
    8. '_' → logprob: -7.515150547027588
    9. ' Purchase' → logprob: -7.765150547027588
    10. ' 
' → logprob: -7.890150547027588

Token 1503: 'Manager' (ID: 2774)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014267169870436192
    2. '(' → logprob: -4.7642669677734375
    3. ':
' → logprob: -6.2642669677734375
    4. '_:' → logprob: -6.3892669677734375
    5. '(
' → logprob: -7.3892669677734375
    6. ',' → logprob: -8.014266967773438
    7. '):' → logprob: -8.139266967773438
    8. '_' → logprob: -8.264266967773438
    9. '(State' → logprob: -9.389266967773438
    10. '.' → logprob: -9.764266967773438

Token 1504: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00507009495049715
    2. ':
' → logprob: -5.380070209503174
    3. '<|end|>' → logprob: -9.005069732666016
    4. '.' → logprob: -9.130069732666016
    5. '(' → logprob: -9.130069732666016
    6. '(
' → logprob: -10.505069732666016
    7. '   ' → logprob: -11.005069732666016
    8. ',' → logprob: -11.255069732666016
    9. '):' → logprob: -11.630069732666016
    10. '():' → logprob: -11.880069732666016

Token 1505: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010548516176640987
    2. ':' → logprob: -4.6355485916137695
    3. '```' → logprob: -7.6355485916137695
    4. 'class' → logprob: -8.51054859161377
    5. '    
' → logprob: -11.13554859161377
    6. '(' → logprob: -11.13554859161377
    7. ':
' → logprob: -11.38554859161377
    8. 'def' → logprob: -11.38554859161377
    9. ' def' → logprob: -11.51054859161377
    10. '       ' → logprob: -11.63554859161377

Token 1506: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6730780005455017
    2. '   ' → logprob: -0.9230780005455017
    3. 'class' → logprob: -2.4230780601501465
    4. ' def' → logprob: -5.6730780601501465
    5. '```' → logprob: -7.6730780601501465
    6. '    ' → logprob: -11.673077583312988
    7. '	def' → logprob: -13.173077583312988
    8. '
' → logprob: -13.298077583312988
    9. ' class' → logprob: -13.298077583312988
    10. '  ' → logprob: -13.423077583312988

Token 1507: ' To' (ID: 2514)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5824020504951477
    2. 'def' → logprob: -1.082401990890503
    3. 'class' → logprob: -2.457401990890503
    4. ' def' → logprob: -4.082402229309082
    5. '    ' → logprob: -9.707402229309082
    6. '```' → logprob: -10.082402229309082
    7. ' class' → logprob: -11.332402229309082
    8. '
' → logprob: -12.332402229309082
    9. '	def' → logprob: -12.707402229309082
    10. '  ' → logprob: -12.832402229309082

Token 1508: ' store' (ID: 4897)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5705946087837219
    2. 'handle' → logprob: -2.070594549179077
    3. 'complete' → logprob: -2.195594549179077
    4. 'manage' → logprob: -2.945594549179077
    5. 'continue' → logprob: -3.070594549179077
    6. 'save' → logprob: -3.570594549179077
    7. 'classmethod' → logprob: -4.195594787597656
    8. 'implement' → logprob: -4.445594787597656
    9. 'store' → logprob: -4.695594787597656
    10. 'maint' → logprob: -4.820594787597656

Token 1509: ' states' (ID: 9407)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6858457326889038
    2. '   ' → logprob: -0.9358457326889038
    3. 'def' → logprob: -3.3108458518981934
    4. 'the' → logprob: -4.060845851898193
    5. 'payment' → logprob: -4.185845851898193
    6. 'current' → logprob: -4.560845851898193
    7. 'previous' → logprob: -5.810845851898193
    8. 'state' → logprob: -5.935845851898193
    9. 'payments' → logprob: -6.435845851898193
    10. 'coins' → logprob: -6.685845851898193

Token 1510: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48495927453041077
    2. ':' → logprob: -1.1099592447280884
    3. ':
' → logprob: -2.984959363937378
    4. '(' → logprob: -6.609959125518799
    5. 'class' → logprob: -7.484959125518799
    6. ' and' → logprob: -7.609959125518799
    7. '<|end|>' → logprob: -8.109959602355957
    8. '```' → logprob: -8.234959602355957
    9. ',' → logprob: -8.609959602355957
    10. '
' → logprob: -8.859959602355957

Token 1511: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01755976490676403
    2. 'class' → logprob: -4.26755952835083
    3. '
' → logprob: -6.39255952835083
    4. ' def' → logprob: -7.51755952835083
    5. 'def' → logprob: -7.76755952835083
    6. '    
' → logprob: -8.142560005187988
    7. ' class' → logprob: -8.392560005187988
    8. '```' → logprob: -8.892560005187988
    9. '    ' → logprob: -9.767560005187988
    10. ' states' → logprob: -11.892560005187988

Token 1512: 'shop' (ID: 10595)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5977870225906372
    2. 'price' → logprob: -1.4727870225906372
    3. ')' → logprob: -2.4727869033813477
    4. '   ' → logprob: -2.8477869033813477
    5. 'coins' → logprob: -3.4727869033813477
    6. 'payment' → logprob: -4.347786903381348
    7. 'coin' → logprob: -4.597786903381348
    8. ' current' → logprob: -5.097786903381348
    9. 'state' → logprob: -5.472786903381348
    10. 'def' → logprob: -5.597786903381348

Token 1513: '_index' (ID: 7748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6394907236099243
    2. '_,' → logprob: -1.2644907236099243
    3. ')' → logprob: -2.3894906044006348
    4. '   ' → logprob: -3.7644906044006348
    5. '_co' → logprob: -4.264490604400635
    6. '_state' → logprob: -4.389490604400635
    7. 'coins' → logprob: -4.889490604400635
    8. '_' → logprob: -5.014490604400635
    9. '
' → logprob: -5.639490604400635
    10. '_coin' → logprob: -5.764490604400635

Token 1514: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004681576509028673
    2. ')' → logprob: -5.504681587219238
    3. '=' → logprob: -9.129681587219238
    4. '   ' → logprob: -9.129681587219238
    5. ' ,' → logprob: -9.254681587219238
    6. ',
' → logprob: -9.379681587219238
    7. '_,' → logprob: -10.004681587219238
    8. '):
' → logprob: -10.129681587219238
    9. ':' → logprob: -10.629681587219238
    10. '),' → logprob: -10.629681587219238

Token 1515: ' coins' (ID: 28969)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -1.1334902048110962
    2. 'current' → logprob: -1.5084902048110962
    3. ' coin' → logprob: -2.2584900856018066
    4. ' price' → logprob: -2.7584900856018066
    5. 'coin' → logprob: -2.7584900856018066
    6. 'coins' → logprob: -2.7584900856018066
    7. ' coins' → logprob: -3.1334900856018066
    8. ' payment' → logprob: -3.1334900856018066
    9. 'price' → logprob: -3.2584900856018066
    10. 'payment' → logprob: -3.8834900856018066

Token 1516: '_tuple' (ID: 53371)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.4185922145843506
    2. ')' → logprob: -2.1685922145843506
    3. '_counts' → logprob: -2.1685922145843506
    4. '_count' → logprob: -3.0435922145843506
    5. ',' → logprob: -3.4185922145843506
    6. '_' → logprob: -4.41859245300293
    7. '_owned' → logprob: -5.16859245300293
    8. '_used' → logprob: -5.41859245300293
    9. '_tuple' → logprob: -5.54359245300293
    10. '_on' → logprob: -5.66859245300293

Token 1517: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024184645153582096
    2. ',' → logprob: -7.002418518066406
    3. ')
' → logprob: -7.627418518066406
    4. '):
' → logprob: -7.627418518066406
    5. '):' → logprob: -7.752418518066406
    6. '),' → logprob: -10.377418518066406
    7. '   ' → logprob: -10.627418518066406
    8. ')=' → logprob: -11.752418518066406
    9. '<|end|>' → logprob: -11.752418518066406
    10. ')`' → logprob: -12.377418518066406

Token 1518: ' =>' (ID: 871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0535341277718544
    2. ':' → logprob: -3.4285340309143066
    3. ':
' → logprob: -4.053534030914307
    4. '):
' → logprob: -7.303534030914307
    5. ' =' → logprob: -7.678534030914307
    6. 'class' → logprob: -8.053534507751465
    7. '=' → logprob: -8.178534507751465
    8. ',' → logprob: -8.178534507751465
    9. '
' → logprob: -9.053534507751465
    10. 'def' → logprob: -10.553534507751465

Token 1519: ' (' (ID: 350)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.43049782514572144
    2. ' dict' → logprob: -2.680497884750366
    3. '{}' → logprob: -2.805497884750366
    4. 'payment' → logprob: -3.055497884750366
    5. '{' → logprob: -3.180497884750366
    6. 'count' → logprob: -3.305497884750366
    7. 'state' → logprob: -3.555497884750366
    8. 'set' → logprob: -4.430497646331787
    9. ' payment' → logprob: -4.555497646331787
    10. 'int' → logprob: -4.680497646331787

Token 1520: 'max' (ID: 3228)
  Prédit: 'payment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'payment' → logprob: -0.5876064896583557
    2. 'dict' → logprob: -1.712606430053711
    3. '{' → logprob: -2.962606430053711
    4. 'change' → logprob: -3.212606430053711
    5. 'coins' → logprob: -3.462606430053711
    6. 'best' → logprob: -3.837606430053711
    7. 'count' → logprob: -3.962606430053711
    8. '(payment' → logprob: -4.337606430053711
    9. 'cost' → logprob: -4.462606430053711
    10. 'purchase' → logprob: -4.712606430053711

Token 1521: '_' (ID: 62)
  Prédit: '_received'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_received' → logprob: -0.927020788192749
    2. '_payment' → logprob: -2.052020788192749
    3. '_co' → logprob: -2.177020788192749
    4. '_count' → logprob: -2.927020788192749
    5. '_change' → logprob: -3.052020788192749
    6. '_p' → logprob: -3.177020788192749
    7. '_reward' → logprob: -3.302020788192749
    8. '_profit' → logprob: -3.302020788192749
    9. '_pay' → logprob: -3.802020788192749
    10. 'coins' → logprob: -4.052021026611328

Token 1522: '500' (ID: 3234)
  Prédit: 'received'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'received' → logprob: -0.9454970359802246
    2. '500' → logprob: -1.4454970359802246
    3. 'coins' → logprob: -1.5704970359802246
    4. 'count' → logprob: -2.3204970359802246
    5. 'receive' → logprob: -3.8204970359802246
    6. 'change' → logprob: -4.570497035980225
    7. 'profit' → logprob: -4.945497035980225
    8. 'coin' → logprob: -5.320497035980225
    9. 'payment' → logprob: -5.320497035980225
    10. 'reward' → logprob: -5.695497035980225

Token 1523: 'coins' (ID: 48264)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.24604928493499756
    2. '_coin' → logprob: -1.6210492849349976
    3. '_' → logprob: -5.121049404144287
    4. ')_' → logprob: -5.246049404144287
    5. ',' → logprob: -6.121049404144287
    6. ')' → logprob: -6.496049404144287
    7. '_count' → logprob: -6.496049404144287
    8. '```' → logprob: -7.371049404144287
    9. 'coins' → logprob: -7.496049404144287
    10. '_received' → logprob: -7.871049404144287

Token 1524: ',' (ID: 11)
  Prédit: '_received'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_received' → logprob: -0.2816898822784424
    2. '_count' → logprob: -2.0316898822784424
    3. ',' → logprob: -2.4066898822784424
    4. '_co' → logprob: -4.031689643859863
    5. ')' → logprob: -6.281689643859863
    6. '_return' → logprob: -6.531689643859863
    7. 'received' → logprob: -7.406689643859863
    8. 'count' → logprob: -7.656689643859863
    9. '_rewards' → logprob: -8.031689643859863
    10. '_change' → logprob: -8.031689643859863

Token 1525: ' min' (ID: 1349)
  Prédit: 'payment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'payment' → logprob: -1.2949165105819702
    2. 'coins' → logprob: -1.4199165105819702
    3. ' payment' → logprob: -2.1699166297912598
    4. 'prev' → logprob: -2.6699166297912598
    5. 'max' → logprob: -2.7949166297912598
    6. ' coins' → logprob: -3.5449166297912598
    7. 'used' → logprob: -3.7949166297912598
    8. 'best' → logprob: -4.04491662979126
    9. 'count' → logprob: -4.41991662979126
    10. 'previous' → logprob: -4.41991662979126

Token 1526: '_exp' (ID: 30306)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.24526789784431458
    2. '_payment' → logprob: -1.8702678680419922
    3. '_change' → logprob: -3.370267868041992
    4. '_coin' → logprob: -4.870267868041992
    5. 'coins' → logprob: -5.245267868041992
    6. '_changes' → logprob: -5.620267868041992
    7. '_pay' → logprob: -5.995267868041992
    8. '_cost' → logprob: -6.495267868041992
    9. '_' → logprob: -6.995267868041992
    10. '_number' → logprob: -6.995267868041992

Token 1527: 'ense' (ID: 1603)
  Prédit: 'enses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enses' → logprob: -0.8218522667884827
    2. 'ended' → logprob: -1.446852207183838
    3. 'ense' → logprob: -1.696852207183838
    4. 'end' → logprob: -2.946852207183838
    5. 'ected' → logprob: -3.196852207183838
    6. 'coins' → logprob: -4.696852207183838
    7. 'ensed' → logprob: -5.321852207183838
    8. 'anded' → logprob: -5.571852207183838
    9. 'ends' → logprob: -5.946852207183838
    10. 'ans' → logprob: -5.946852207183838

Token 1528: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005454786121845245
    2. ',' → logprob: -6.255455017089844
    3. '_count' → logprob: -6.255455017089844
    4. 's' → logprob: -7.005455017089844
    5. '_counts' → logprob: -9.380455017089844
    6. ')_' → logprob: -9.755455017089844
    7. ')
' → logprob: -9.755455017089844
    8. '_states' → logprob: -9.755455017089844
    9. '_)' → logprob: -10.130455017089844
    10. 'count' → logprob: -10.130455017089844

Token 1529: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010960459476336837
    2. 'class' → logprob: -7.001096248626709
    3. '```' → logprob: -9.62609577178955
    4. '
' → logprob: -9.62609577178955
    5. 'def' → logprob: -10.50109577178955
    6. ':' → logprob: -11.62609577178955
    7. ')' → logprob: -12.75109577178955
    8. '):
' → logprob: -13.00109577178955
    9. '    
' → logprob: -13.00109577178955
    10. ' def' → logprob: -13.12609577178955

Token 1530: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003841636935248971
    2. 'def' → logprob: -6.003841400146484
    3. 'class' → logprob: -6.628841400146484
    4. '
' → logprob: -11.003841400146484
    5. '```' → logprob: -11.628841400146484
    6. '    
' → logprob: -12.128841400146484
    7. ' def' → logprob: -12.253841400146484
    8. '_' → logprob: -12.878841400146484
    9. '       ' → logprob: -14.128841400146484
    10. ')' → logprob: -14.753841400146484

Token 1531: ' coins' (ID: 28969)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22715626657009125
    2. 'def' → logprob: -1.7271562814712524
    3. 'class' → logprob: -4.727156162261963
    4. ' def' → logprob: -5.102156162261963
    5. '_states' → logprob: -5.727156162261963
    6. '_' → logprob: -6.227156162261963
    7. '_store' → logprob: -6.977156162261963
    8. '
' → logprob: -7.352156162261963
    9. '_storage' → logprob: -7.352156162261963
    10. '_state' → logprob: -7.352156162261963

Token 1532: '_tuple' (ID: 53371)
  Prédit: '_tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -0.4446973502635956
    2. '_counts' → logprob: -1.069697380065918
    3. ' =' → logprob: -5.569697380065918
    4. '   ' → logprob: -6.194697380065918
    5. '_count' → logprob: -6.194697380065918
    6. '_t' → logprob: -6.319697380065918
    7. '_state' → logprob: -6.444697380065918
    8. '=' → logprob: -6.569697380065918
    9. '_states' → logprob: -6.569697380065918
    10. ')' → logprob: -7.944697380065918

Token 1533: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1679544448852539
    2. '=' → logprob: -2.042954444885254
    3. ':' → logprob: -4.542954444885254
    4. '   ' → logprob: -4.917954444885254
    5. ')' → logprob: -5.667954444885254
    6. '):
' → logprob: -6.417954444885254
    7. ',' → logprob: -7.667954444885254
    8. '):' → logprob: -8.042954444885254
    9. '<|end|>' → logprob: -8.167954444885254
    10. ' is' → logprob: -8.917954444885254

Token 1534: ' current' (ID: 2208)
  Prédit: ' tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.3905141055583954
    2. 'tuple' → logprob: -1.5155141353607178
    3. ' (' → logprob: -2.7655141353607178
    4. '(' → logprob: -4.140513896942139
    5. '(tuple' → logprob: -4.515513896942139
    6. 'Tuple' → logprob: -5.765513896942139
    7. '   ' → logprob: -5.890513896942139
    8. 'A' → logprob: -6.390513896942139
    9. ' Tuple' → logprob: -6.390513896942139
    10. ' #' → logprob: -7.015513896942139

Token 1535: ' coin' (ID: 22179)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.012789210304617882
    2. '_counts' → logprob: -4.762789249420166
    3. '_coin' → logprob: -5.887789249420166
    4. '_' → logprob: -8.137788772583008
    5. '_count' → logprob: -8.262788772583008
    6. ')_' → logprob: -8.637788772583008
    7. 'coins' → logprob: -8.637788772583008
    8. '```' → logprob: -9.012788772583008
    9. ')' → logprob: -9.262788772583008
    10. '_tokens' → logprob: -9.887788772583008

Token 1536: ' counts' (ID: 28991)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.5020322799682617
    2. 's' → logprob: -1.0020322799682617
    3. '_s' → logprob: -3.6270322799682617
    4. ' s' → logprob: -7.627032279968262
    5. 'counts' → logprob: -8.752032279968262
    6. '_count' → logprob: -9.252032279968262
    7. '```' → logprob: -9.627032279968262
    8. ')' → logprob: -10.002032279968262
    9. ' counts' → logprob: -10.252032279968262
    10. '_tuple' → logprob: -11.002032279968262

Token 1537: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010635441169142723
    2. '):
' → logprob: -5.2606353759765625
    3. ':' → logprob: -6.8856353759765625
    4. '
' → logprob: -6.8856353759765625
    5. ':
' → logprob: -7.1356353759765625
    6. ' =' → logprob: -7.3856353759765625
    7. ')' → logprob: -7.7606353759765625
    8. 'class' → logprob: -8.385635375976562
    9. 'def' → logprob: -8.385635375976562
    10. '):' → logprob: -8.385635375976562

Token 1538: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2684142291545868
    2. '500' → logprob: -1.8934142589569092
    3. 'all' → logprob: -3.268414258956909
    4. 'each' → logprob: -4.14341402053833
    5. 'coins' → logprob: -4.14341402053833
    6. 'Coin' → logprob: -5.01841402053833
    7. 'the' → logprob: -5.64341402053833
    8. ' (' → logprob: -7.14341402053833
    9. '6' → logprob: -7.14341402053833
    10. '[' → logprob: -7.39341402053833

Token 1539: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.11537472903728485
    2. '100' → logprob: -2.240374803543091
    3. '1' → logprob: -6.865374565124512
    4. ')' → logprob: -7.990374565124512
    5. '0' → logprob: -7.990374565124512
    6. '7' → logprob: -8.490374565124512
    7. '(' → logprob: -8.865374565124512
    8. '#' → logprob: -9.365374565124512
    9. ' ' → logprob: -9.490374565124512
    10. '
' → logprob: -9.740374565124512

Token 1540: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016905253753066063
    2. ',-' → logprob: -4.641905307769775
    3. '-,' → logprob: -5.891905307769775
    4. '-y' → logprob: -6.141905307769775
    5. ',
' → logprob: -7.641905307769775
    6. '   ' → logprob: -7.766905307769775
    7. ',y' → logprob: -7.766905307769775
    8. ' ,' → logprob: -8.766904830932617
    9. '```' → logprob: -8.766904830932617
    10. '-' → logprob: -9.141904830932617

Token 1541: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.25000286102295
    3. '```' → logprob: -14.50000286102295
    4. '
' → logprob: -15.25000286102295
    5. '   ' → logprob: -16.875001907348633
    6. '500' → logprob: -17.125001907348633
    7. '

' → logprob: -17.625001907348633
    8. '50' → logprob: -17.625001907348633
    9. '10' → logprob: -17.625001907348633
    10. ')' → logprob: -18.000001907348633

Token 1542: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019734179659280926
    2. '),' → logprob: -10.125197410583496
    3. ',
' → logprob: -10.125197410583496
    4. '50' → logprob: -10.250197410583496
    5. ')' → logprob: -10.375197410583496
    6. '```' → logprob: -10.625197410583496
    7. '   ' → logprob: -11.250197410583496
    8. '
' → logprob: -13.500197410583496
    9. ' ' → logprob: -13.500197410583496
    10. '),
' → logprob: -13.750197410583496

Token 1543: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.0001242772996192798
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -14.250123977661133
    4. '
' → logprob: -16.750123977661133
    5. '```' → logprob: -16.750123977661133
    6. '  ' → logprob: -17.500123977661133
    7. '500' → logprob: -17.500123977661133
    8. '#' → logprob: -17.500123977661133
    9. '    ' → logprob: -18.125123977661133
    10. '５０' → logprob: -19.125123977661133

Token 1544: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.248469718324486e-05
    2. '   ' → logprob: -11.625022888183594
    3. '```' → logprob: -12.500022888183594
    4. ')' → logprob: -13.000022888183594
    5. ',
' → logprob: -13.125022888183594
    6. '),' → logprob: -13.375022888183594
    7. '0' → logprob: -14.250022888183594
    8. ',,' → logprob: -14.375022888183594
    9. ' ,' → logprob: -14.500022888183594
    10. ' ' → logprob: -15.250022888183594

Token 1545: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.558399319241289e-05
    2. ' ' → logprob: -10.625025749206543
    3. '   ' → logprob: -14.750025749206543
    4. '```' → logprob: -15.250025749206543
    5. '30' → logprob: -16.125024795532227
    6. '40' → logprob: -16.250024795532227
    7. '20' → logprob: -16.375024795532227
    8. '25' → logprob: -16.500024795532227
    9. '``' → logprob: -17.500024795532227
    10. '    ' → logprob: -17.750024795532227

Token 1546: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0206720617134124e-05
    2. '```' → logprob: -12.75001049041748
    3. ',
' → logprob: -13.37501049041748
    4. '   ' → logprob: -13.62501049041748
    5. ' ,' → logprob: -14.12501049041748
    6. '),' → logprob: -14.25001049041748
    7. ',,' → logprob: -14.62501049041748
    8. '5' → logprob: -14.75001049041748
    9. ')' → logprob: -14.75001049041748
    10. '0' → logprob: -14.87501049041748

Token 1547: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0001882823125924915
    2. ' ' → logprob: -8.625187873840332
    3. '```' → logprob: -12.125187873840332
    4. '
' → logprob: -13.500187873840332
    5. '   ' → logprob: -13.875187873840332
    6. '``' → logprob: -15.125187873840332
    7. '  ' → logprob: -15.875187873840332
    8. '

' → logprob: -16.87518882751465
    9. '    ' → logprob: -17.00018882751465
    10. '     ' → logprob: -17.12518882751465

Token 1548: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.253090865968261e-06
    2. ',
' → logprob: -12.750009536743164
    3. '```' → logprob: -13.125009536743164
    4. '   ' → logprob: -13.625009536743164
    5. ')' → logprob: -14.375009536743164
    6. ' ,' → logprob: -14.875009536743164
    7. ',)' → logprob: -15.000009536743164
    8. '0' → logprob: -15.000009536743164
    9. '6' → logprob: -15.250009536743164
    10. '`,' → logprob: -15.750009536743164

Token 1549: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.750436007976532e-05
    2. ' ' → logprob: -10.37503719329834
    3. '```' → logprob: -12.75003719329834
    4. '   ' → logprob: -13.12503719329834
    5. '
' → logprob: -13.75003719329834
    6. '``' → logprob: -16.625038146972656
    7. ')' → logprob: -17.000038146972656
    8. '  ' → logprob: -17.125038146972656
    9. '       ' → logprob: -17.250038146972656
    10. '0' → logprob: -17.375038146972656

Token 1550: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.158350151963532e-05
    2. ')
' → logprob: -10.000061988830566
    3. '   ' → logprob: -12.750061988830566
    4. ',' → logprob: -12.750061988830566
    5. ')`' → logprob: -13.125061988830566
    6. '),' → logprob: -13.250061988830566
    7. '```' → logprob: -13.875061988830566
    8. ')_' → logprob: -14.250061988830566
    9. ')>' → logprob: -14.625061988830566
    10. ' ' → logprob: -15.000061988830566

Token 1551: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024994369596242905
    2. '
' → logprob: -7.002499580383301
    3. 'class' → logprob: -7.502499580383301
    4. ':' → logprob: -7.877499580383301
    5. '```' → logprob: -7.877499580383301
    6. 'def' → logprob: -9.0024995803833
    7. ')' → logprob: -9.6274995803833
    8. ' def' → logprob: -11.0024995803833
    9. '    
' → logprob: -11.3774995803833
    10. '):
' → logprob: -11.5024995803833

Token 1552: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010114919859915972
    2. '
' → logprob: -8.251011848449707
    3. ':' → logprob: -8.501011848449707
    4. ')' → logprob: -8.876011848449707
    5. 'def' (adapté à ' def') → logprob: -8.876011848449707
    6. '```' → logprob: -9.626011848449707
    7. 'class' → logprob: -9.751011848449707
    8. ' def' → logprob: -10.126011848449707
    9. '):
' → logprob: -10.126011848449707
    10. ':
' → logprob: -11.626011848449707

Token 1553: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5395767688751221
    2. ' __' → logprob: -0.9145767688751221
    3. '_init' → logprob: -4.789576530456543
    4. 'init' → logprob: -5.039576530456543
    5. 'def' → logprob: -7.914576530456543
    6. ' init' → logprob: -8.414576530456543
    7. '_storage' → logprob: -8.539576530456543
    8. '_store' → logprob: -8.914576530456543
    9. ' def' → logprob: -9.539576530456543
    10. '_' → logprob: -9.914576530456543

Token 1554: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0005664954078383744
    2. 'nit' → logprob: -7.500566482543945
    3. 'it' → logprob: -12.250566482543945
    4. 'int' → logprob: -12.500566482543945
    5. '_init' → logprob: -13.000566482543945
    6. 'new' → logprob: -14.500566482543945
    7. '{' → logprob: -14.750566482543945
    8. '`' → logprob: -15.000566482543945
    9. '```' → logprob: -15.000566482543945
    10. 'dict' → logprob: -15.375566482543945

Token 1555: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.03564757853746414
    2. '(self' → logprob: -3.9106476306915283
    3. '__' → logprob: -4.660647392272949
    4. '__(
' → logprob: -5.285647392272949
    5. '(' → logprob: -8.78564739227295
    6. '__((' → logprob: -8.91064739227295
    7. '   ' → logprob: -9.78564739227295
    8. 'self' → logprob: -10.16064739227295
    9. '_(' → logprob: -11.28564739227295
    10. '__()
' → logprob: -11.28564739227295

Token 1556: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000768413650803268
    2. ')' → logprob: -7.250768184661865
    3. '   ' → logprob: -10.500768661499023
    4. ' self' → logprob: -11.625768661499023
    5. '):
' → logprob: -11.875768661499023
    6. '0' → logprob: -12.250768661499023
    7. '
' → logprob: -12.500768661499023
    8. '       ' → logprob: -13.625768661499023
    9. '(self' → logprob: -13.625768661499023
    10. '[]' → logprob: -14.750768661499023

Token 1557: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08040553331375122
    2. '(self' → logprob: -3.2054054737091064
    3. 'self' → logprob: -3.4554054737091064
    4. '   ' → logprob: -6.0804057121276855
    5. '__(' → logprob: -6.8304057121276855
    6. '(' → logprob: -7.7054057121276855
    7. ')' → logprob: -8.205405235290527
    8. '):' → logprob: -8.330405235290527
    9. ',self' → logprob: -8.705405235290527
    10. ' (' → logprob: -8.955405235290527

Token 1558: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0748973935842514
    2. '       ' → logprob: -3.074897289276123
    3. '   ' → logprob: -3.824897289276123
    4. '```' → logprob: -6.199897289276123
    5. ' self' → logprob: -7.074897289276123
    6. '
' → logprob: -7.699897289276123
    7. 'def' → logprob: -7.949897289276123
    8. '(self' → logprob: -8.449897766113281
    9. '0' → logprob: -9.574897766113281
    10. '	self' → logprob: -11.074897766113281

Token 1559: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0013682155404239893
    2. '       ' → logprob: -6.626368045806885
    3. ' self' → logprob: -10.751368522644043
    4. 'def' → logprob: -11.626368522644043
    5. 'from' → logprob: -11.876368522644043
    6. '   ' → logprob: -13.376368522644043
    7. '```' → logprob: -13.376368522644043
    8. '(self' → logprob: -14.376368522644043
    9. '
' → logprob: -14.751368522644043
    10. 'class' → logprob: -15.626368522644043

Token 1560: '.states' (ID: 122737)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.5280869007110596
    2. '_states' → logprob: -1.5280869007110596
    3. '.states' → logprob: -1.6530869007110596
    4. 'states' → logprob: -7.6530866622924805
    5. '.data' → logprob: -8.15308666229248
    6. '_data' → logprob: -8.40308666229248
    7. '.state' → logprob: -8.65308666229248
    8. '_state' → logprob: -9.27808666229248
    9. '.storage' → logprob: -9.27808666229248
    10. '.st' → logprob: -9.65308666229248

Token 1561: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18666960299015045
    2. ' =' → logprob: -1.8116695880889893
    3. '={}' → logprob: -5.936669826507568
    4. '.setdefault' → logprob: -6.436669826507568
    5. '   ' → logprob: -7.061669826507568
    6. '{' → logprob: -7.936669826507568
    7. '={}
' → logprob: -8.18666934967041
    8. '={
' → logprob: -8.81166934967041
    9. ')' → logprob: -8.93666934967041
    10. '```' → logprob: -8.93666934967041

Token 1562: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -2.975612187583465e-05
    2. 'dict' → logprob: -10.500029563903809
    3. 'default' → logprob: -13.625029563903809
    4. ' {}' → logprob: -14.375029563903809
    5. '={}' → logprob: -15.625029563903809
    6. '{})' → logprob: -17.000030517578125
    7. '{}
' → logprob: -17.125030517578125
    8. 'set' → logprob: -17.250030517578125
    9. '   ' → logprob: -17.500030517578125
    10. '{},' → logprob: -17.750030517578125

Token 1563: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012438016710802913
    2. '
' → logprob: -6.751243591308594
    3. '    
' → logprob: -9.876243591308594
    4. 'def' → logprob: -11.001243591308594
    5. '```' → logprob: -13.001243591308594
    6. '        
' → logprob: -13.376243591308594
    7. '       ' → logprob: -13.751243591308594
    8. ' def' → logprob: -15.251243591308594
    9. '<|end|>' → logprob: -15.501243591308594
    10. '`' → logprob: -17.251243591308594

Token 1564: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009664601646363735
    2. '
' → logprob: -5.134664535522461
    3. 'def' (adapté à ' def') → logprob: -5.634664535522461
    4. '```' → logprob: -9.134664535522461
    5. '    
' → logprob: -10.259664535522461
    6. ' def' → logprob: -11.384664535522461
    7. '        
' → logprob: -13.259664535522461
    8. '``' → logprob: -15.134664535522461
    9. '       ' → logprob: -15.259664535522461
    10. '`' → logprob: -15.634664535522461

Token 1565: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.10565149784088135
    2. 'set' → logprob: -2.730651378631592
    3. 'update' → logprob: -4.480651378631592
    4. 'store' → logprob: -4.480651378631592
    5. 'save' → logprob: -5.355651378631592
    6. ' get' → logprob: -5.605651378631592
    7. 'add' → logprob: -6.355651378631592
    8. 'has' → logprob: -7.105651378631592
    9. 'put' → logprob: -7.730651378631592
    10. ' store' → logprob: -8.35565185546875

Token 1566: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4011080861091614
    2. '_state' → logprob: -1.6511080265045166
    3. '_states' → logprob: -3.1511080265045166
    4. '(self' → logprob: -3.2761080265045166
    5. 'state' → logprob: -4.151108264923096
    6. '_max' → logprob: -4.276108264923096
    7. 'max' → logprob: -4.776108264923096
    8. '((' → logprob: -4.901108264923096
    9. '(state' → logprob: -5.026108264923096
    10. '(
' → logprob: -6.401108264923096

Token 1567: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30417272448539734
    2. ',' → logprob: -1.9291727542877197
    3. '_state' → logprob: -2.9291727542877197
    4. '(' → logprob: -3.8041727542877197
    5. '_states' → logprob: -3.9291727542877197
    6. ',state' → logprob: -5.929172515869141
    7. 'state' → logprob: -6.054172515869141
    8. '_key' → logprob: -6.179172515869141
    9. '(
' → logprob: -6.179172515869141
    10. '<|end|>' → logprob: -6.429172515869141

Token 1568: ' shop' (ID: 9100)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.8899521827697754
    2. ' key' → logprob: -0.8899521827697754
    3. 'shop' → logprob: -1.8899521827697754
    4. ' shop' → logprob: -3.6399521827697754
    5. '(shop' → logprob: -7.264952182769775
    6. 'state' → logprob: -8.139951705932617
    7. '   ' → logprob: -9.014951705932617
    8. '(key' → logprob: -9.264951705932617
    9. '       ' → logprob: -10.639951705932617
    10. ')' → logprob: -11.139951705932617

Token 1569: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00029685118352063
    2. ')_' → logprob: -9.125296592712402
    3. ',' → logprob: -9.750296592712402
    4. 'index' → logprob: -10.250296592712402
    5. '_' → logprob: -10.875296592712402
    6. '_id' → logprob: -11.125296592712402
    7. ')' → logprob: -11.375296592712402
    8. ',_' → logprob: -11.750296592712402
    9. '   ' → logprob: -11.875296592712402
    10. ',index' → logprob: -12.000296592712402

Token 1570: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018113377154804766
    2. '):' → logprob: -9.625181198120117
    3. '       ' → logprob: -10.250181198120117
    4. ' ,' → logprob: -10.750181198120117
    5. ',self' → logprob: -11.250181198120117
    6. '   ' → logprob: -11.250181198120117
    7. ')' → logprob: -11.875181198120117
    8. ',
' → logprob: -12.000181198120117
    9. '):
' → logprob: -12.375181198120117
    10. ',key' → logprob: -12.750181198120117

Token 1571: ' coin' (ID: 22179)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.011139428243041039
    2. ' coins' → logprob: -4.511139392852783
    3. 'coin' → logprob: -9.511139869689941
    4. '   ' → logprob: -12.136139869689941
    5. 'co' → logprob: -12.386139869689941
    6. '       ' → logprob: -12.511139869689941
    7. '           ' → logprob: -13.886139869689941
    8. '    ' → logprob: -14.136139869689941
    9. ' ' → logprob: -14.636139869689941
    10. ' coin' → logprob: -14.636139869689941

Token 1572: '_tuple' (ID: 53371)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13687589764595032
    2. '_counts' → logprob: -2.136875867843628
    3. '_s' → logprob: -4.636876106262207
    4. '_tuple' → logprob: -9.011876106262207
    5. '_' → logprob: -10.386876106262207
    6. '_t' → logprob: -11.636876106262207
    7. ' s' → logprob: -11.761876106262207
    8. 'counts' → logprob: -11.886876106262207
    9. '   ' → logprob: -12.261876106262207
    10. ')' → logprob: -12.511876106262207

Token 1573: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04869751259684563
    2. '):' → logprob: -3.0486974716186523
    3. '       ' → logprob: -10.048697471618652
    4. '   ' → logprob: -10.298697471618652
    5. '):
' → logprob: -10.548697471618652
    6. ')' → logprob: -12.798697471618652
    7. ',' → logprob: -13.548697471618652
    8. '):

' → logprob: -13.923697471618652
    9. ' ' → logprob: -15.048697471618652
    10. ' ):
' → logprob: -15.298697471618652

Token 1574: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.4391956685576588e-05
    2. '```' → logprob: -11.250024795532227
    3. 'return' → logprob: -13.000024795532227
    4. '           ' → logprob: -13.125024795532227
    5. ',' → logprob: -13.500024795532227
    6. '   ' → logprob: -13.625024795532227
    7. '        
' → logprob: -13.750024795532227
    8. ':' → logprob: -14.250024795532227
    9. '`' → logprob: -14.750024795532227
    10. 'self' → logprob: -14.875024795532227

Token 1575: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03949994593858719
    2. 'return' (adapté à ' return') → logprob: -3.2894999980926514
    3. ' return' → logprob: -6.539499759674072
    4. '```' → logprob: -11.53950023651123
    5. '{return' → logprob: -13.78950023651123
    6. '	return' → logprob: -14.41450023651123
    7. '           ' → logprob: -15.53950023651123
    8. '   ' → logprob: -15.66450023651123
    9. ':return' → logprob: -15.78950023651123
    10. '_return' → logprob: -15.78950023651123

Token 1576: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009120595059357584
    2. ' self' → logprob: -7.000912189483643
    3. 'None' → logprob: -14.375911712646484
    4. '   ' → logprob: -17.000911712646484
    5. '       ' → logprob: -18.125911712646484
    6. '(self' → logprob: -18.625911712646484
    7. ' None' → logprob: -19.000911712646484
    8. '
' → logprob: -19.500911712646484
    9. '	self' → logprob: -19.500911712646484
    10. '0' → logprob: -20.750911712646484

Token 1577: '.states' (ID: 122737)
  Prédit: '.states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.states' → logprob: -0.0012203442165628076
    2. '.get' → logprob: -6.876220226287842
    3. '.' → logprob: -8.751220703125
    4. ' .' → logprob: -11.251220703125
    5. '.st' → logprob: -12.251220703125
    6. '[' → logprob: -12.626220703125
    7. 'states' → logprob: -13.251220703125
    8. '._' → logprob: -13.751220703125
    9. '_states' → logprob: -13.876220703125
    10. '
' → logprob: -14.376220703125

Token 1578: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0003091254911851138
    2. '.' → logprob: -8.625308990478516
    3. '.setdefault' → logprob: -9.000308990478516
    4. '[' → logprob: -13.000308990478516
    5. '       ' → logprob: -13.500308990478516
    6. 'get' → logprob: -14.000308990478516
    7. '   ' → logprob: -14.000308990478516
    8. ' .' → logprob: -15.375308990478516
    9. '[get' → logprob: -15.625308990478516
    10. '[(' → logprob: -16.375308990478516

Token 1579: '(' (ID: 7)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0007129086880013347
    2. '(' → logprob: -7.250712871551514
    3. '(
' → logprob: -13.250713348388672
    4. '   ' → logprob: -14.500713348388672
    5. ' ((' → logprob: -15.000713348388672
    6. ' (' → logprob: -15.250713348388672
    7. '(shop' → logprob: -17.000713348388672
    8. '(("' → logprob: -17.500713348388672
    9. '(((' → logprob: -17.500713348388672
    10. '(key' → logprob: -17.625713348388672

Token 1580: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25210216641426086
    2. '(shop' → logprob: -1.5021021366119385
    3. ' (' → logprob: -9.12710189819336
    4. '(sh' → logprob: -9.87710189819336
    5. '   ' → logprob: -12.00210189819336
    6. '(ship' → logprob: -12.62710189819336
    7. '(key' → logprob: -13.62710189819336
    8. '(s' → logprob: -13.62710189819336
    9. '       ' → logprob: -15.50210189819336
    10. '/shop' → logprob: -15.50210189819336

Token 1581: 'shop' (ID: 10595)
  Prédit: 'shop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -3.128163257315464e-07
    2. ' shop' → logprob: -15.625
    3. '(shop' → logprob: -16.0
    4. '   ' → logprob: -17.5
    5. ')' → logprob: -19.0
    6. '
' → logprob: -19.25
    7. '       ' → logprob: -20.5
    8. '.shop' → logprob: -20.5
    9. 'ship' → logprob: -20.625
    10. 'shops' → logprob: -20.625

Token 1582: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -2.8206473871250637e-05
    2. 'index' → logprob: -10.625028610229492
    3. ',' → logprob: -13.875028610229492
    4. '_,' → logprob: -14.625028610229492
    5. ')_' → logprob: -14.875028610229492
    6. '_INDEX' → logprob: -15.375028610229492
    7. '_indices' → logprob: -15.625028610229492
    8. '\' → logprob: -15.625028610229492
    9. 'shop' → logprob: -15.750028610229492
    10. ',_' → logprob: -16.000028610229492

Token 1583: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2961512513575144e-05
    2. '       ' → logprob: -11.875022888183594
    3. ',
' → logprob: -12.250022888183594
    4. ' ,' → logprob: -12.250022888183594
    5. '   ' → logprob: -13.250022888183594
    6. '           ' → logprob: -14.000022888183594
    7. '```' → logprob: -14.875022888183594
    8. ',",' → logprob: -15.000022888183594
    9. ',None' → logprob: -15.000022888183594
    10. ',),' → logprob: -15.125022888183594

Token 1584: ' coin' (ID: 22179)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coin' → logprob: -7.505351095460355e-05
    2. ' coin' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.25007438659668
    4. 'coins' → logprob: -18.12507438659668
    5. '
' → logprob: -18.62507438659668
    6. ' ' → logprob: -19.12507438659668
    7. '     ' → logprob: -19.25007438659668
    8. '    ' → logprob: -19.37507438659668
    9. '       ' → logprob: -19.62507438659668
    10. '.coin' → logprob: -20.25007438659668

Token 1585: '_tuple' (ID: 53371)
  Prédit: '_tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -0.07825404405593872
    2. ',' → logprob: -2.828253984451294
    3. ',_' → logprob: -4.953254222869873
    4. '),' → logprob: -6.203254222869873
    5. '_t' → logprob: -6.203254222869873
    6. '_index' → logprob: -6.453254222869873
    7. ')' → logprob: -7.203254222869873
    8. '_,' → logprob: -7.578254222869873
    9. ')_' → logprob: -7.828254222869873
    10. '_coin' → logprob: -7.828254222869873

Token 1586: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.47470977902412415
    2. ')' → logprob: -0.9747097492218018
    3. ',' → logprob: -8.099709510803223
    4. '))' → logprob: -8.349709510803223
    5. '       ' → logprob: -9.599709510803223
    6. '   ' → logprob: -11.599709510803223
    7. ' ),' → logprob: -12.474709510803223
    8. '},' → logprob: -13.099709510803223
    9. ' )' → logprob: -13.349709510803223
    10. ',),' → logprob: -13.349709510803223

Token 1587: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.2725364863872528
    2. '(None' → logprob: -2.022536516189575
    3. ' None' → logprob: -2.647536516189575
    4. '(' → logprob: -3.647536516189575
    5. ' (' → logprob: -5.272536277770996
    6. '(-' → logprob: -5.522536277770996
    7. ' (-' → logprob: -9.272536277770996
    8. '   ' → logprob: -9.397536277770996
    9. ')' → logprob: -11.022536277770996
    10. '       ' → logprob: -12.022536277770996

Token 1588: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004552234895527363
    2. '       ' → logprob: -5.754552364349365
    3. '   ' → logprob: -6.754552364349365
    4. ' )' → logprob: -8.504551887512207
    5. ')
' → logprob: -13.254551887512207
    6. '()' → logprob: -13.879551887512207
    7. ' ' → logprob: -14.754551887512207
    8. ')return' → logprob: -14.879551887512207
    9. '}' → logprob: -15.004551887512207
    10. ')}' → logprob: -15.379551887512207

Token 1589: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09303227812051773
    2. 'def' → logprob: -2.8430323600769043
    3. '```' → logprob: -3.8430323600769043
    4. '
' → logprob: -5.093032360076904
    5. '    
' → logprob: -6.093032360076904
    6. '<|end|>' → logprob: -7.843032360076904
    7. ' def' → logprob: -9.218031883239746
    8. '  
' → logprob: -9.343031883239746
    9. '``' → logprob: -10.093031883239746
    10. '        
' → logprob: -10.343031883239746

Token 1590: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.024953613057732582
    2. '   ' → logprob: -3.774953603744507
    3. '
' → logprob: -7.024953842163086
    4. '```' → logprob: -7.149953842163086
    5. ' def' → logprob: -10.899953842163086
    6. '    
' → logprob: -11.399953842163086
    7. '``' → logprob: -13.399953842163086
    8. '        
' → logprob: -14.899953842163086
    9. '  ' → logprob: -16.024953842163086
    10. '	def' → logprob: -16.024953842163086

Token 1591: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -2.6895233531831764e-05
    2. 'put' → logprob: -11.75002670288086
    3. 'def' → logprob: -12.25002670288086
    4. 'update' → logprob: -12.25002670288086
    5. 'store' → logprob: -12.37502670288086
    6. ' set' → logprob: -12.87502670288086
    7. '_set' → logprob: -13.50002670288086
    8. 'save' → logprob: -14.25002670288086
    9. '__' → logprob: -14.75002670288086
    10. '   ' → logprob: -15.62502670288086

Token 1592: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5761985778808594
    2. '(' → logprob: -0.8261985778808594
    3. '((' → logprob: -8.95119857788086
    4. 'self' → logprob: -10.20119857788086
    5. '(
' → logprob: -10.70119857788086
    6. ' (' → logprob: -10.82619857788086
    7. '<|end|>' → logprob: -10.82619857788086
    8. '   ' → logprob: -11.32619857788086
    9. '```' → logprob: -12.70119857788086
    10. '_' → logprob: -13.07619857788086

Token 1593: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31994926929473877
    2. '(self' → logprob: -1.5699492692947388
    3. ',' → logprob: -2.819949150085449
    4. ')' → logprob: -6.069949150085449
    5. ' (' → logprob: -6.444949150085449
    6. '((' → logprob: -7.319949150085449
    7. 'self' → logprob: -7.694949150085449
    8. ',(' → logprob: -7.944949150085449
    9. ')(' → logprob: -8.56994915008545
    10. ' ,' → logprob: -9.19494915008545

Token 1594: ' shop' (ID: 9100)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.05728228762745857
    2. ' shop' → logprob: -2.9322822093963623
    3. '(shop' → logprob: -6.057282447814941
    4. '   ' → logprob: -10.807282447814941
    5. '(' → logprob: -11.307282447814941
    6. ' (' → logprob: -11.932282447814941
    7. ')' → logprob: -12.182282447814941
    8. '       ' → logprob: -13.307282447814941
    9. '/shop' → logprob: -13.557282447814941
    10. '.shop' → logprob: -13.682282447814941

Token 1595: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0003884894831571728
    2. 'ex' → logprob: -8.375388145446777
    3. 'index' → logprob: -9.000388145446777
    4. '```' → logprob: -11.625388145446777
    5. '   ' → logprob: -12.000388145446777
    6. ')' → logprob: -12.250388145446777
    7. 'x' → logprob: -12.625388145446777
    8. ',' → logprob: -13.375388145446777
    9. ')_' → logprob: -13.750388145446777
    10. '_idx' → logprob: -13.750388145446777

Token 1596: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.610702363715973e-06
    2. ' ,' → logprob: -12.500009536743164
    3. ',
' → logprob: -12.750009536743164
    4. '       ' → logprob: -13.750009536743164
    5. '   ' → logprob: -14.250009536743164
    6. '‌,' → logprob: -14.625009536743164
    7. '<|end|>' → logprob: -15.750009536743164
    8. '           ' → logprob: -16.375009536743164
    9. '‍,' → logprob: -16.875009536743164
    10. '    ' → logprob: -17.250009536743164

Token 1597: ' coin' (ID: 22179)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.005233882926404476
    2. ' coin' → logprob: -5.2552337646484375
    3. 'coins' → logprob: -17.755233764648438
    4. 'co' → logprob: -18.630233764648438
    5. '    ' → logprob: -18.755233764648438
    6. '.coin' → logprob: -18.755233764648438
    7. '_coin' → logprob: -18.880233764648438
    8. '   ' → logprob: -19.005233764648438
    9. ' ' → logprob: -19.255233764648438
    10. 'Coin' → logprob: -20.130233764648438

Token 1598: '_tuple' (ID: 53371)
  Prédit: '_tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -7.016616291366518e-05
    2. ',' → logprob: -10.250070571899414
    3. '_t' → logprob: -11.250070571899414
    4. '_,' → logprob: -11.875070571899414
    5. '_' → logprob: -12.500070571899414
    6. ',_' → logprob: -12.750070571899414
    7. 'tuple' → logprob: -13.000070571899414
    8. '<Tuple' → logprob: -13.875070571899414
    9. '```' → logprob: -14.000070571899414
    10. ')' → logprob: -14.750070571899414

Token 1599: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.723973582556937e-05
    2. '       ' → logprob: -11.750017166137695
    3. ' ,' → logprob: -11.875017166137695
    4. '           ' → logprob: -14.250017166137695
    5. ',
' → logprob: -14.625017166137695
    6. '   ' → logprob: -14.625017166137695
    7. ',(' → logprob: -15.250017166137695
    8. '‌,' → logprob: -16.375017166137695
    9. ',value' → logprob: -16.375017166137695
    10. '      ' → logprob: -16.750017166137695

Token 1600: ' c' (ID: 274)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.023928938433527946
    2. ' value' → logprob: -3.7739288806915283
    3. 'state' → logprob: -7.648929119110107
    4. 'val' → logprob: -9.64892864227295
    5. '(value' → logprob: -10.27392864227295
    6. '           ' → logprob: -10.27392864227295
    7. '   ' → logprob: -10.52392864227295
    8. ' state' → logprob: -11.52392864227295
    9. '       ' → logprob: -11.77392864227295
    10. 'data' → logprob: -12.02392864227295

Token 1601: '500' (ID: 3234)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.002294778823852539
    2. 'o' → logprob: -6.252294540405273
    3. 'ont' → logprob: -8.877294540405273
    4. 'max' → logprob: -9.377294540405273
    5. '(' → logprob: -10.002294540405273
    6. 'count' → logprob: -10.877294540405273
    7. 'ounted' → logprob: -11.252294540405273
    8. '(max' → logprob: -11.627294540405273
    9. '_' → logprob: -12.127294540405273
    10. '   ' → logprob: -12.252294540405273

Token 1602: ',' (ID: 11)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.00019936825265176594
    2. ',' → logprob: -9.500199317932129
    3. '_count' → logprob: -9.875199317932129
    4. 'OUNT' → logprob: -11.125199317932129
    5. '_' → logprob: -11.625199317932129
    6. 'o' → logprob: -12.000199317932129
    7. 'count' → logprob: -12.125199317932129
    8. 'oin' → logprob: -12.125199317932129
    9. '   ' → logprob: -12.375199317932129
    10. 'ounter' → logprob: -12.625199317932129

Token 1603: ' expense' (ID: 29361)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.03021647408604622
    2. ' min' → logprob: -4.405216693878174
    3. 'expense' → logprob: -4.405216693878174
    4. 'm' → logprob: -5.530216693878174
    5. 'exp' → logprob: -7.405216693878174
    6. ' expense' → logprob: -7.405216693878174
    7. '   ' → logprob: -10.280216217041016
    8. 'c' → logprob: -11.155216217041016
    9. ' m' → logprob: -11.655216217041016
    10. 'mint' → logprob: -11.780216217041016

Token 1604: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0012664210516959429
    2. '):' → logprob: -6.7512664794921875
    3. '   ' → logprob: -9.876266479492188
    4. '       ' → logprob: -10.751266479492188
    5. '):
' → logprob: -10.751266479492188
    6. ' ):
' → logprob: -14.251266479492188
    7. '    ' → logprob: -15.001266479492188
    8. '):

' → logprob: -15.126266479492188
    9. '           ' → logprob: -16.001266479492188
    10. '"):
' → logprob: -16.126266479492188

Token 1605: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014089244650676847
    2. ',' → logprob: -7.25140905380249
    3. '```' → logprob: -7.75140905380249
    4. '   ' → logprob: -9.126408576965332
    5. '<|end|>' → logprob: -11.001408576965332
    6. 'self' → logprob: -11.251408576965332
    7. '           ' → logprob: -11.251408576965332
    8. '(' → logprob: -11.376408576965332
    9. '(self' → logprob: -11.501408576965332
    10. '        
' → logprob: -11.626408576965332

Token 1606: ' key' (ID: 2140)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008637377060949802
    2. '       ' → logprob: -4.758637428283691
    3. ' self' → logprob: -10.758637428283691
    4. '   ' → logprob: -13.633637428283691
    5. 'if' → logprob: -15.258637428283691
    6. '	self' → logprob: -16.258636474609375
    7. '```' → logprob: -17.258636474609375
    8. '(self' → logprob: -17.758636474609375
    9. '{
' → logprob: -19.633636474609375
    10. '
' → logprob: -19.883636474609375

Token 1607: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1799815446138382
    2. ' =' → logprob: -1.8049815893173218
    3. '=(' → logprob: -9.929981231689453
    4. '       ' → logprob: -9.929981231689453
    5. '   ' → logprob: -10.179981231689453
    6. ')' → logprob: -10.554981231689453
    7. '=
' → logprob: -10.804981231689453
    8. '[' → logprob: -10.929981231689453
    9. '```' → logprob: -11.429981231689453
    10. '           ' → logprob: -12.304981231689453

Token 1608: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.01919560693204403
    2. '(shop' → logprob: -4.519195556640625
    3. '(' → logprob: -5.019195556640625
    4. '(sh' → logprob: -6.519195556640625
    5. '(s' → logprob: -11.269195556640625
    6. '   ' → logprob: -11.769195556640625
    7. '(ship' → logprob: -11.894195556640625
    8. '       ' → logprob: -13.519195556640625
    9. '(sp' → logprob: -14.644195556640625
    10. '(site' → logprob: -16.394195556640625

Token 1609: 'shop' (ID: 10595)
  Prédit: 'shop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -1.2664456789934775e-06
    2. ' shop' → logprob: -13.625000953674316
    3. '(shop' → logprob: -17.000001907348633
    4. '
' → logprob: -20.000001907348633
    5. 'shops' → logprob: -20.375001907348633
    6. '/shop' → logprob: -20.875001907348633
    7. 'store' → logprob: -21.250001907348633
    8. '   ' → logprob: -21.375001907348633
    9. '-shop' → logprob: -21.375001907348633
    10. '.shop' → logprob: -21.375001907348633

Token 1610: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -5.9795445849886164e-05
    2. 'index' → logprob: -9.750060081481934
    3. 'shop' → logprob: -13.875060081481934
    4. 'Index' → logprob: -15.500060081481934
    5. '_indices' → logprob: -16.875059127807617
    6. '_INDEX' → logprob: -16.875059127807617
    7. '   ' → logprob: -17.125059127807617
    8. ',index' → logprob: -17.625059127807617
    9. '_ind' → logprob: -17.625059127807617
    10. '[index' → logprob: -17.875059127807617

Token 1611: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.372294698550832e-06
    2. ',
' → logprob: -12.250009536743164
    3. ' ,' → logprob: -12.875009536743164
    4. '   ' → logprob: -14.750009536743164
    5. '[' → logprob: -15.125009536743164
    6. ',user' → logprob: -15.625009536743164
    7. '',' → logprob: -15.875009536743164
    8. '```' → logprob: -15.875009536743164
    9. '       ' → logprob: -16.000009536743164
    10. '‌,' → logprob: -16.250009536743164

Token 1612: ' coin' (ID: 22179)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.005258183926343918
    2. ' coin' → logprob: -5.255258083343506
    3. 'shop' → logprob: -10.630258560180664
    4. ' shop' → logprob: -15.880258560180664
    5. 'coins' → logprob: -17.630258560180664
    6. 'Coin' → logprob: -19.630258560180664
    7. 'chip' → logprob: -19.755258560180664
    8. 'co' → logprob: -19.755258560180664
    9. 'coil' → logprob: -20.505258560180664
    10. '_coin' → logprob: -20.755258560180664

Token 1613: '_tuple' (ID: 53371)
  Prédit: '_tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -0.6347282528877258
    2. '_index' → logprob: -0.7597282528877258
    3. ',' → logprob: -6.75972843170166
    4. '_,' → logprob: -7.88472843170166
    5. ',_' → logprob: -7.88472843170166
    6. 'index' → logprob: -10.00972843170166
    7. '```' → logprob: -10.13472843170166
    8. '_t' → logprob: -10.75972843170166
    9. 'tuple' → logprob: -10.75972843170166
    10. '_idx' → logprob: -10.88472843170166

Token 1614: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008804962271824479
    2. ')' → logprob: -7.125880718231201
    3. ',)' → logprob: -10.375880241394043
    4. ',key' → logprob: -10.875880241394043
    5. '       ' → logprob: -11.500880241394043
    6. ',
' → logprob: -12.125880241394043
    7. ' ,' → logprob: -12.500880241394043
    8. '   ' → logprob: -13.000880241394043
    9. ')
' → logprob: -13.625880241394043
    10. ',)
' → logprob: -14.500880241394043

Token 1615: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27142056822776794
    2. '=' → logprob: -2.146420478820801
    3. '       ' → logprob: -2.146420478820801
    4. ',' → logprob: -5.896420478820801
    5. '           ' → logprob: -7.646420478820801
    6. ':' → logprob: -8.0214204788208
    7. ')' → logprob: -9.5214204788208
    8. ':
' → logprob: -9.7714204788208
    9. '        ' → logprob: -10.1464204788208
    10. '   ' → logprob: -10.2714204788208

Token 1616: ' old' (ID: 2890)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007641532924026251
    2. 'self' → logprob: -4.882641315460205
    3. ' self' → logprob: -10.632641792297363
    4. '   ' → logprob: -11.632641792297363
    5. '```' → logprob: -14.257641792297363
    6. '           ' → logprob: -14.382641792297363
    7. ' =' → logprob: -15.007641792297363
    8. '	self' → logprob: -15.507641792297363
    9. '	' → logprob: -15.632641792297363
    10. '=self' → logprob: -15.757641792297363

Token 1617: ' =' (ID: 314)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.16926443576812744
    2. ' =' → logprob: -2.294264316558838
    3. '_val' → logprob: -3.544264316558838
    4. '_c' → logprob: -4.669264316558838
    5. '=' → logprob: -5.419264316558838
    6. '_key' → logprob: -6.044264316558838
    7. ')' → logprob: -6.044264316558838
    8. 'value' → logprob: -6.544264316558838
    9. '_state' → logprob: -6.794264316558838
    10. '_cost' → logprob: -6.794264316558838

Token 1618: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008620012551546097
    2. ' self' → logprob: -4.758619785308838
    3. '       ' → logprob: -12.133620262145996
    4. '   ' → logprob: -17.00861930847168
    5. '(self' → logprob: -17.63361930847168
    6. '           ' → logprob: -17.88361930847168
    7. '
' → logprob: -19.88361930847168
    8. '=self' → logprob: -19.88361930847168
    9. '	self' → logprob: -20.13361930847168
    10. '    ' → logprob: -20.25861930847168

Token 1619: '.states' (ID: 122737)
  Prédit: '.states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.states' → logprob: -1.6240566083070007e-06
    2. '.' → logprob: -14.625001907348633
    3. 'states' → logprob: -14.750001907348633
    4. ' .' → logprob: -15.125001907348633
    5. '.set' → logprob: -15.625001907348633
    6. '.keys' → logprob: -16.875001907348633
    7. '.state' → logprob: -17.000001907348633
    8. '.st' → logprob: -17.125001907348633
    9. '.stats' → logprob: -17.625001907348633
    10. '.key' → logprob: -17.625001907348633

Token 1620: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0005268189124763012
    2. 'key' → logprob: -8.375526428222656
    3. 'get' → logprob: -8.500526428222656
    4. '.setdefault' → logprob: -9.875526428222656
    5. '.' → logprob: -11.250526428222656
    6. '       ' → logprob: -11.625526428222656
    7. '[key' → logprob: -11.875526428222656
    8. '=' → logprob: -12.625526428222656
    9. '   ' → logprob: -12.750526428222656
    10. '_key' → logprob: -13.750526428222656

Token 1621: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.4755892753601074
    2. 'key' → logprob: -0.9755892753601074
    3. ' key' → logprob: -6.725589275360107
    4. '(' → logprob: -8.475589752197266
    5. ' (' → logprob: -9.225589752197266
    6. '   ' → logprob: -13.600589752197266
    7. ',key' → logprob: -13.725589752197266
    8. '((' → logprob: -14.350589752197266
    9. '(
' → logprob: -14.475589752197266
    10. '[key' → logprob: -14.975589752197266

Token 1622: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3604099154472351
    2. ')' → logprob: -1.4854099750518799
    3. ')
' → logprob: -2.61040997505188
    4. ',key' → logprob: -6.110409736633301
    5. '(key' → logprob: -8.6104097366333
    6. '   ' → logprob: -9.3604097366333
    7. '       ' → logprob: -9.6104097366333
    8. ' ,' → logprob: -10.4854097366333
    9. 'key' → logprob: -10.6104097366333
    10. ',None' → logprob: -10.6104097366333

Token 1623: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004745060577988625
    2. '           ' → logprob: -6.004745006561279
    3. ' if' → logprob: -6.629745006561279
    4. ',' → logprob: -8.379745483398438
    5. '```' → logprob: -8.754745483398438
    6. ' =' → logprob: -9.129745483398438
    7. 'if' → logprob: -9.254745483398438
    8. '   ' → logprob: -10.004745483398438
    9. '=' → logprob: -10.254745483398438
    10. ')' → logprob: -10.379745483398438

Token 1624: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5012668371200562
    2. '       ' → logprob: -1.0012668371200562
    3. ' if' → logprob: -3.6262669563293457
    4. '```' → logprob: -8.876266479492188
    5. '           ' → logprob: -10.251266479492188
    6. '   ' → logprob: -10.626266479492188
    7. '	if' → logprob: -12.626266479492188
    8. '               ' → logprob: -13.001266479492188
    9. 'If' → logprob: -14.126266479492188
    10. '``' → logprob: -14.626266479492188

Token 1625: ' old' (ID: 2890)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.04859680309891701
    2. ' old' → logprob: -3.0485968589782715
    3. '(old' → logprob: -11.798596382141113
    4. 'not' → logprob: -13.298596382141113
    5. '	old' → logprob: -15.673596382141113
    6. ' not' → logprob: -16.04859733581543
    7. '_old' → logprob: -17.42359733581543
    8. '   ' → logprob: -18.17359733581543
    9. 'None' → logprob: -18.67359733581543
    10. '.old' → logprob: -18.92359733581543

Token 1626: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.47428596019744873
    2. ' is' → logprob: -0.9742859601974487
    3. '==' → logprob: -9.724286079406738
    4. '<|end|>' → logprob: -10.099286079406738
    5. ')' → logprob: -10.349286079406738
    6. ':
' → logprob: -11.724286079406738
    7. '=None' → logprob: -11.849286079406738
    8. 'and' → logprob: -11.849286079406738
    9. '):
' → logprob: -11.974286079406738
    10. ':' → logprob: -11.974286079406738

Token 1627: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0007687712204642594
    2. ' None' → logprob: -7.250768661499023
    3. 'not' → logprob: -9.750768661499023
    4. ' not' → logprob: -14.750768661499023
    5. '   ' → logprob: -15.875768661499023
    6. 'none' → logprob: -18.000768661499023
    7. '(None' → logprob: -19.375768661499023
    8. 'Not' → logprob: -19.500768661499023
    9. '_None' → logprob: -20.125768661499023
    10. '       ' → logprob: -21.500768661499023

Token 1628: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.1612551212310791
    2. 'or' → logprob: -1.911255121231079
    3. '           ' → logprob: -6.9112548828125
    4. '	or' → logprob: -10.9112548828125
    5. '       ' → logprob: -12.0362548828125
    6. '               ' → logprob: -12.5362548828125
    7. '   ' → logprob: -13.4112548828125
    8. ':' → logprob: -13.5362548828125
    9. '          ' → logprob: -13.9112548828125
    10. ',' → logprob: -14.4112548828125

Token 1629: '           ' (ID: 352)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5782520771026611
    2. 'or' → logprob: -0.8282520771026611
    3. '           ' → logprob: -6.078251838684082
    4. '	or' → logprob: -11.828251838684082
    5. '               ' → logprob: -12.078251838684082
    6. '       ' → logprob: -13.328251838684082
    7. '```' → logprob: -13.953251838684082
    8. ''or' → logprob: -14.578251838684082
    9. '   ' → logprob: -14.703251838684082
    10. ':
' → logprob: -14.703251838684082

Token 1630: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02994256280362606
    2. '           ' → logprob: -3.529942512512207
    3. ' self' → logprob: -8.904942512512207
    4. '   ' → logprob: -10.529942512512207
    5. '               ' → logprob: -10.904942512512207
    6. '       ' → logprob: -11.654942512512207
    7. 'if' → logprob: -13.279942512512207
    8. '(self' → logprob: -14.904942512512207
    9. '```' → logprob: -15.654942512512207
    10. '                   ' → logprob: -16.029943466186523

Token 1631: '.states' (ID: 122737)
  Prédit: '.states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.states' → logprob: -0.00041220002458430827
    2. 'states' → logprob: -8.125411987304688
    3. '=' → logprob: -9.250411987304688
    4. '_states' → logprob: -11.875411987304688
    5. ' =' → logprob: -12.625411987304688
    6. '           ' → logprob: -12.750411987304688
    7. '   ' → logprob: -13.125411987304688
    8. '       ' → logprob: -13.875411987304688
    9. '=.' → logprob: -14.125411987304688
    10. '=
' → logprob: -14.625411987304688

Token 1632: '[key' (ID: 16401)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004200674593448639
    2. '[key' → logprob: -8.125419616699219
    3. ' =' → logprob: -9.375419616699219
    4. '=
' → logprob: -10.250419616699219
    5. '           ' → logprob: -13.125419616699219
    6. '[' → logprob: -15.250419616699219
    7. '=None' → logprob: -15.500419616699219
    8. '                   ' → logprob: -15.625419616699219
    9. 'key' → logprob: -15.625419616699219
    10. '               ' → logprob: -16.00041961669922

Token 1633: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004158295225352049
    2. ' =' → logprob: -5.5041584968566895
    3. ')' → logprob: -9.879158020019531
    4. ')=' → logprob: -11.504158020019531
    5. '=
' → logprob: -11.754158020019531
    6. '=None' → logprob: -12.379158020019531
    7. '           ' → logprob: -13.254158020019531
    8. ']=' → logprob: -13.379158020019531
    9. '=(' → logprob: -13.754158020019531
    10. ']' → logprob: -14.254158020019531

Token 1634: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002966127940453589
    2. ' =' → logprob: -8.125296592712402
    3. '=
' → logprob: -15.125296592712402
    4. '=True' → logprob: -16.12529754638672
    5. '=None' → logprob: -17.12529754638672
    6. '=(' → logprob: -17.62529754638672
    7. '=[' → logprob: -17.75029754638672
    8. '={
' → logprob: -18.00029754638672
    9. '={'' → logprob: -18.00029754638672
    10. '           ' → logprob: -18.12529754638672

Token 1635: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.001643165247514844
    2. ' (' → logprob: -6.501643180847168
    3. '(' → logprob: -8.876643180847168
    4. '   ' → logprob: -13.751643180847168
    5. '(C' → logprob: -17.37664222717285
    6. '[c' → logprob: -17.75164222717285
    7. 'c' → logprob: -17.87664222717285
    8. '(ci' → logprob: -18.00164222717285
    9. '       ' → logprob: -18.25164222717285
    10. '(
' → logprob: -18.37664222717285

Token 1636: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.128163257315464e-07
    2. ' c' → logprob: -15.125
    3. '   ' → logprob: -18.875
    4. ')c' → logprob: -21.25
    5. '           ' → logprob: -21.625
    6. '0' → logprob: -21.625
    7. '	c' → logprob: -22.5
    8. '$c' → logprob: -22.625
    9. 'cation' → logprob: -22.75
    10. '       ' → logprob: -22.875

Token 1637: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -7.672236824873835e-05
    2. '_' → logprob: -9.625076293945312
    3. '5' → logprob: -11.750076293945312
    4. '50' → logprob: -13.000076293945312
    5. '505' → logprob: -16.750076293945312
    6. 'five' → logprob: -17.000076293945312
    7. 'max' → logprob: -17.125076293945312
    8. 'c' → logprob: -17.250076293945312
    9. ' ' → logprob: -17.500076293945312
    10. '   ' → logprob: -17.500076293945312

Token 1638: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.982165698194876e-05
    2. ' ,' → logprob: -10.000080108642578
    3. ',
' → logprob: -10.625080108642578
    4. '           ' → logprob: -12.500080108642578
    5. ')' → logprob: -13.750080108642578
    6. '
' → logprob: -13.875080108642578
    7. '```' → logprob: -14.250080108642578
    8. '       ' → logprob: -14.500080108642578
    9. '               ' → logprob: -14.750080108642578
    10. '),' → logprob: -14.750080108642578

Token 1639: ' expense' (ID: 29361)
  Prédit: 'expense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expense' → logprob: -0.005234832875430584
    2. ' expense' → logprob: -5.255234718322754
    3. 'exp' → logprob: -13.880234718322754
    4. 'expenses' → logprob: -15.880234718322754
    5. 'expire' → logprob: -17.38023567199707
    6. 'expiration' → logprob: -18.63023567199707
    7. 'Expense' → logprob: -18.75523567199707
    8. 'exercise' → logprob: -19.38023567199707
    9. 'expiry' → logprob: -19.38023567199707
    10. '```' → logprob: -19.50523567199707

Token 1640: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.055972665548324585
    2. ')
' → logprob: -2.9309725761413574
    3. '       ' → logprob: -6.930972576141357
    4. '           ' → logprob: -9.430973052978516
    5. '               ' → logprob: -11.430973052978516
    6. ',' → logprob: -11.805973052978516
    7. ')\
' → logprob: -13.055973052978516
    8. ' )' → logprob: -13.305973052978516
    9. ')return' → logprob: -13.430973052978516
    10. ')
' → logprob: -13.555973052978516

Token 1641: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006382156861945987
    2. 'else' → logprob: -7.875638008117676
    3. 'elif' → logprob: -8.875638008117676
    4. '           ' → logprob: -9.500638008117676
    5. '```' → logprob: -11.250638008117676
    6. '<|end|>' → logprob: -11.375638008117676
    7. '               ' → logprob: -11.375638008117676
    8. '   ' → logprob: -12.875638008117676
    9. ' else' → logprob: -13.250638008117676
    10. ' elif' → logprob: -14.375638008117676

Token 1642: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07967519015073776
    2. '           ' → logprob: -2.5796751976013184
    3. 'elif' → logprob: -7.204675197601318
    4. 'else' → logprob: -10.82967472076416
    5. 'return' (adapté à ' return') → logprob: -11.20467472076416
    6. ' elif' → logprob: -12.07967472076416
    7. '   ' → logprob: -14.32967472076416
    8. '
' → logprob: -14.82967472076416
    9. '```' → logprob: -14.82967472076416
    10. 'import' → logprob: -15.07967472076416

Token 1643: ' True' (ID: 6432)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.3933159410953522
    2. 'True' → logprob: -1.1433159112930298
    3. '(old' → logprob: -6.39331579208374
    4. '
' → logprob: -6.51831579208374
    5. 'c' → logprob: -6.89331579208374
    6. 'False' → logprob: -7.14331579208374
    7. 'if' → logprob: -7.26831579208374
    8. '       ' → logprob: -8.393316268920898
    9. '(True' → logprob: -8.768316268920898
    10. ' True' → logprob: -9.143316268920898

Token 1644: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.65707261255011e-06
    2. '           ' → logprob: -13.250008583068848
    3. '        
' → logprob: -13.500008583068848
    4. '```' → logprob: -13.500008583068848
    5. '
' → logprob: -13.875008583068848
    6. '<|end|>' → logprob: -14.375008583068848
    7. '   ' → logprob: -14.375008583068848
    8. '	' → logprob: -14.375008583068848
    9. '               ' → logprob: -14.875008583068848
    10. 'else' → logprob: -14.875008583068848

Token 1645: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017588881019037217
    2. '
' → logprob: -9.000175476074219
    3. '<|end|>' → logprob: -10.875175476074219
    4. '```' → logprob: -11.625175476074219
    5. 'else' → logprob: -11.750175476074219
    6. '        
' → logprob: -12.000175476074219
    7. '   ' → logprob: -12.500175476074219
    8. '           ' → logprob: -13.875175476074219
    9. '               ' → logprob: -14.000175476074219
    10. ',' → logprob: -14.125175476074219

Token 1646: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01106221228837967
    2. '
' → logprob: -5.261062145233154
    3. 'if' → logprob: -5.261062145233154
    4. 'elif' → logprob: -8.261062622070312
    5. ' if' → logprob: -8.761062622070312
    6. '   ' → logprob: -8.886062622070312
    7. '           ' → logprob: -10.761062622070312
    8. '```' → logprob: -10.886062622070312
    9. 'else' (adapté à ' else') → logprob: -11.511062622070312
    10. '        
' → logprob: -11.886062622070312

Token 1647: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05872192606329918
    2. ' if' → logprob: -3.3087220191955566
    3. '       ' → logprob: -4.308722019195557
    4. 'if' → logprob: -5.308722019195557
    5. ':
' → logprob: -6.808722019195557
    6. '               ' → logprob: -7.558722019195557
    7. '
' → logprob: -8.808721542358398
    8. '   ' → logprob: -9.183721542358398
    9. ',' → logprob: -9.808721542358398
    10. ':' → logprob: -10.433721542358398

Token 1648: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7401382327079773
    2. 'if' → logprob: -1.115138292312622
    3. '           ' → logprob: -1.740138292312622
    4. 'c' → logprob: -4.490138053894043
    5. ' if' → logprob: -5.490138053894043
    6. '(c' → logprob: -5.865138053894043
    7. '   ' → logprob: -7.490138053894043
    8. '               ' → logprob: -7.990138053894043
    9. ' c' → logprob: -8.865138053894043
    10. '
' → logprob: -8.865138053894043

Token 1649: ' old' (ID: 2890)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4985290765762329
    2. 'if' → logprob: -1.623529076576233
    3. 'old' (adapté à ' old') → logprob: -1.748529076576233
    4. '           ' → logprob: -4.873528957366943
    5. '(old' → logprob: -4.873528957366943
    6. '(c' → logprob: -5.248528957366943
    7. 'new' → logprob: -8.248529434204102
    8. 'existing' → logprob: -9.248529434204102
    9. '       ' → logprob: -9.373529434204102
    10. 'prev' → logprob: -9.498529434204102

Token 1650: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.06405460089445114
    2. 'c' → logprob: -3.189054489135742
    3. '[' → logprob: -4.064054489135742
    4. '_value' → logprob: -6.689054489135742
    5. '=' → logprob: -7.439054489135742
    6. '_token' → logprob: -8.564054489135742
    7. '_tokens' → logprob: -8.564054489135742
    8. '```' → logprob: -8.564054489135742
    9. '<=' → logprob: -9.064054489135742
    10. '           ' → logprob: -9.064054489135742

Token 1651: ',' (ID: 11)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.0046819341368973255
    2. '_' → logprob: -5.3796820640563965
    3. '5' → logprob: -10.504681587219238
    4. 'ount' → logprob: -12.254681587219238
    5. '_max' → logprob: -12.254681587219238
    6. '50' → logprob: -12.504681587219238
    7. ',' → logprob: -12.504681587219238
    8. 'max' → logprob: -13.379681587219238
    9. '505' → logprob: -13.692181587219238
    10. 'c' → logprob: -13.942181587219238

Token 1652: ' old' (ID: 2890)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.0009220616775564849
    2. ' old' → logprob: -7.000922203063965
    3. '	old' → logprob: -12.125922203063965
    4. 'o' → logprob: -12.500922203063965
    5. 'oldt' → logprob: -14.750922203063965
    6. '_old' → logprob: -15.375922203063965
    7. '
' → logprob: -15.500922203063965
    8. '(old' → logprob: -15.875922203063965
    9. 'olde' → logprob: -16.00092124938965
    10. 'olds' → logprob: -16.12592124938965

Token 1653: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.010458849370479584
    2. '_exp' → logprob: -4.635458946228027
    3. 'e' → logprob: -7.635458946228027
    4. '_c' → logprob: -8.885458946228027
    5. 'exp' → logprob: -10.510458946228027
    6. '_cost' → logprob: -11.260458946228027
    7. 'expense' → logprob: -11.885458946228027
    8. '_s' → logprob: -12.260458946228027
    9. '_' → logprob: -12.260458946228027
    10. ',' → logprob: -12.385458946228027

Token 1654: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5286704897880554
    2. ' =' → logprob: -0.9036704897880554
    3. ',' → logprob: -5.278670310974121
    4. ')' → logprob: -9.153670310974121
    5. 'xp' → logprob: -9.528670310974121
    6. 'x' → logprob: -10.278670310974121
    7. '           ' → logprob: -10.653670310974121
    8. '_' → logprob: -10.653670310974121
    9. '        ' → logprob: -10.903670310974121
    10. '       ' → logprob: -11.278670310974121

Token 1655: ' old' (ID: 2890)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.003186743939295411
    2. ' old' → logprob: -5.7531867027282715
    3. '(old' → logprob: -11.87818717956543
    4. 'c' → logprob: -13.37818717956543
    5. '           ' → logprob: -15.62818717956543
    6. '	old' → logprob: -15.62818717956543
    7. '_old' → logprob: -16.50318717956543
    8. '
' → logprob: -16.87818717956543
    9. '       ' → logprob: -17.37818717956543
    10. 'oldt' → logprob: -18.37818717956543

Token 1656: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08722715824842453
    2. ',' → logprob: -3.2122271060943604
    3. ' <=' → logprob: -3.8372271060943604
    4. '
' → logprob: -5.2122273445129395
    5. '<=' → logprob: -5.8372273445129395
    6. '<|end|>' → logprob: -5.8372273445129395
    7. '               ' → logprob: -5.9622273445129395
    8. ',c' → logprob: -6.2122273445129395
    9. ' >=' → logprob: -6.9622273445129395
    10. ' <' → logprob: -7.0872273445129395

Token 1657: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0028700195252895355
    2. '               ' → logprob: -6.752870082855225
    3. ' if' → logprob: -7.502870082855225
    4. '```' → logprob: -7.752870082855225
    5. ',' → logprob: -8.127869606018066
    6. '<|end|>' → logprob: -8.877869606018066
    7. '       ' → logprob: -10.252869606018066
    8. ' and' → logprob: -10.252869606018066
    9. '                   ' → logprob: -11.127869606018066
    10. '>' → logprob: -11.127869606018066

Token 1658: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030267592519521713
    2. 'if' (adapté à ' if') → logprob: -3.5302674770355225
    3. 'c' → logprob: -8.405267715454102
    4. ' if' → logprob: -8.655267715454102
    5. '       ' → logprob: -9.655267715454102
    6. '               ' → logprob: -11.280267715454102
    7. '   ' → logprob: -11.405267715454102
    8. '
' → logprob: -11.655267715454102
    9. '(c' → logprob: -11.905267715454102
    10. ' c' → logprob: -12.030267715454102

Token 1659: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.2157334089279175
    2. ' (' → logprob: -1.3407334089279175
    3. ' c' → logprob: -1.4657334089279175
    4. '(c' → logprob: -1.5907334089279175
    5. '           ' → logprob: -5.215733528137207
    6. '   ' → logprob: -7.215733528137207
    7. '(' → logprob: -7.340733528137207
    8. '(
' → logprob: -9.215733528137207
    9. ' ' → logprob: -9.715733528137207
    10. '    ' → logprob: -10.340733528137207

Token 1660: '500' (ID: 3234)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11337388306856155
    2. '500' → logprob: -2.3633739948272705
    3. '_c' → logprob: -4.363373756408691
    4. '[' → logprob: -9.238373756408691
    5. ' ' → logprob: -9.738373756408691
    6. ' _' → logprob: -10.488373756408691
    7. '5' → logprob: -10.613373756408691
    8. '>' → logprob: -10.863373756408691
    9. '   ' → logprob: -10.863373756408691
    10. '_
' → logprob: -10.863373756408691

Token 1661: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2816474437713623
    2. '>' → logprob: -1.4066474437713623
    3. ' <' → logprob: -8.656647682189941
    4. '           ' → logprob: -9.281647682189941
    5. ',' → logprob: -9.781647682189941
    6. '_c' → logprob: -10.656647682189941
    7. '<' → logprob: -11.031647682189941
    8. '<|end|>' → logprob: -11.281647682189941
    9. ')' → logprob: -11.406647682189941
    10. '>
' → logprob: -11.531647682189941

Token 1662: ' old' (ID: 2890)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.0005533903022296727
    2. ' old' → logprob: -7.500553607940674
    3. '           ' → logprob: -15.000553131103516
    4. '	old' → logprob: -16.375553131103516
    5. '(old' → logprob: -16.875553131103516
    6. '_old' → logprob: -17.750553131103516
    7. '   ' → logprob: -18.000553131103516
    8. '
' → logprob: -18.125553131103516
    9. '       ' → logprob: -18.125553131103516
    10. '               ' → logprob: -18.875553131103516

Token 1663: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.875
    3. '_' → logprob: -17.875
    4. '   ' → logprob: -18.75
    5. '```' → logprob: -19.0
    6. '           ' → logprob: -19.5
    7. '
' → logprob: -20.125
    8. 'c' → logprob: -20.125
    9. '500' → logprob: -20.25
    10. ' _' → logprob: -20.25

Token 1664: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.039669185876846313
    2. 'or' → logprob: -3.2896692752838135
    3. '               ' → logprob: -6.539669036865234
    4. '           ' → logprob: -8.664669036865234
    5. '	or' → logprob: -12.289669036865234
    6. '              ' → logprob: -13.914669036865234
    7. '            ' → logprob: -14.164669036865234
    8. '```' → logprob: -14.539669036865234
    9. '       ' → logprob: -14.914669036865234
    10. '                   ' → logprob: -15.164669036865234

Token 1665: ' (' (ID: 350)
  Prédit: 'expense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expense' → logprob: -0.738084614276886
    2. ' (' → logprob: -1.8630845546722412
    3. '(c' → logprob: -2.113084554672241
    4. '(exp' → logprob: -2.363084554672241
    5. '(' → logprob: -2.488084554672241
    6. ' expense' → logprob: -2.988084554672241
    7. '(e' → logprob: -4.36308479309082
    8. 'c' → logprob: -5.86308479309082
    9. '(cost' → logprob: -6.73808479309082
    10. ' c' → logprob: -8.11308479309082

Token 1666: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04189058765769005
    2. 'expense' → logprob: -3.5418906211853027
    3. ' c' → logprob: -4.916890621185303
    4. '(c' → logprob: -6.166890621185303
    5. ' expense' → logprob: -6.916890621185303
    6. ' (' → logprob: -7.916890621185303
    7. '(' → logprob: -7.916890621185303
    8. '   ' → logprob: -8.416890144348145
    9. 'e' → logprob: -9.166890144348145
    10. 'exp' → logprob: -9.291890144348145

Token 1667: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.03923371806740761
    2. 'e' → logprob: -3.914233684539795
    3. '_e' → logprob: -4.539233684539795
    4. '_' → logprob: -5.664233684539795
    5. '_c' → logprob: -5.664233684539795
    6. 'c' → logprob: -7.789233684539795
    7. '5' → logprob: -9.039234161376953
    8. ' ' → logprob: -9.914234161376953
    9. '_s' → logprob: -10.164234161376953
    10. '50' → logprob: -10.414234161376953

Token 1668: ' ==' (ID: 951)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19995921850204468
    2. ' ==' → logprob: -2.6999592781066895
    3. ' <' → logprob: -3.3249592781066895
    4. '==' → logprob: -3.4499592781066895
    5. ' >' → logprob: -3.8249592781066895
    6. ',e' → logprob: -4.0749592781066895
    7. ' ,' → logprob: -5.4499592781066895
    8. '>' → logprob: -6.6999592781066895
    9. '<' → logprob: -7.4499592781066895
    10. 'e' → logprob: -7.9499592781066895

Token 1669: ' old' (ID: 2890)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -7.941850526549388e-06
    2. ' old' → logprob: -11.750007629394531
    3. '_old' → logprob: -19.12500762939453
    4. '	old' → logprob: -19.12500762939453
    5. '
' → logprob: -19.37500762939453
    6. '(old' → logprob: -19.75000762939453
    7. '
' → logprob: -22.00000762939453
    8. '   ' → logprob: -22.37500762939453
    9. 'older' → logprob: -22.62500762939453
    10. '           ' → logprob: -22.87500762939453

Token 1670: '_c' (ID: 1303)
  Prédit: '_e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.00015014449309092015
    2. '_c' → logprob: -8.875149726867676
    3. 'e' → logprob: -11.625149726867676
    4. '
' → logprob: -14.250149726867676
    5. '   ' → logprob: -15.750149726867676
    6. '_s' → logprob: -16.125150680541992
    7. 's' → logprob: -16.875150680541992
    8. '_' → logprob: -17.000150680541992
    9. '
' → logprob: -17.375150680541992
    10. '	e' → logprob: -17.625150680541992

Token 1671: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5759422183036804
    2. 'and' → logprob: -0.8259422183036804
    3. '           ' → logprob: -13.700942039489746
    4. '	and' → logprob: -14.325942039489746
    5. '               ' → logprob: -15.200942039489746
    6. '            ' → logprob: -15.575942039489746
    7. '    ' → logprob: -15.700942039489746
    8. ' ' → logprob: -16.200942993164062
    9. '   ' → logprob: -16.325942993164062
    10. '       ' → logprob: -16.700942993164062

Token 1672: ' expense' (ID: 29361)
  Prédit: 'expense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expense' → logprob: -0.02631342224776745
    2. ' expense' → logprob: -3.651313304901123
    3. 'exp' → logprob: -11.776313781738281
    4. '   ' → logprob: -13.026313781738281
    5. 'expenses' → logprob: -13.901313781738281
    6. '(exp' → logprob: -14.901313781738281
    7. '
' → logprob: -15.026313781738281
    8. '  ' → logprob: -15.151313781738281
    9. ' ' → logprob: -15.401313781738281
    10. '       ' → logprob: -15.651313781738281

Token 1673: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.18054944276809692
    2. '<' → logprob: -1.8055493831634521
    3. ' <=' → logprob: -7.305549621582031
    4. '<=' → logprob: -9.055549621582031
    5. '[' → logprob: -12.680549621582031
    6. '<|end|>' → logprob: -13.430549621582031
    7. ' <
' → logprob: -13.680549621582031
    8. '<int' → logprob: -13.805549621582031
    9. '<size' → logprob: -13.930549621582031
    10. '<class' → logprob: -14.055549621582031

Token 1674: ' old' (ID: 2890)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.0004309076175559312
    2. ' old' → logprob: -7.750431060791016
    3. '           ' → logprob: -16.375431060791016
    4. '	old' → logprob: -17.125431060791016
    5. '(old' → logprob: -18.125431060791016
    6. '
' → logprob: -18.125431060791016
    7. '   ' → logprob: -18.250431060791016
    8. '               ' → logprob: -19.000431060791016
    9. '_old' → logprob: -19.250431060791016
    10. '       ' → logprob: -19.375431060791016

Token 1675: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -8.2994620242971e-06
    2. 'e' → logprob: -11.750008583068848
    3. '
' → logprob: -16.12500762939453
    4. '   ' → logprob: -16.62500762939453
    5. 'cost' → logprob: -17.00000762939453
    6. 'state' → logprob: -17.12500762939453
    7. 'expense' → logprob: -17.37500762939453
    8. '	e' → logprob: -17.87500762939453
    9. '[' → logprob: -18.00000762939453
    10. '_' → logprob: -18.31250762939453

Token 1676: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.008811685256659985
    2. '):' → logprob: -4.7588114738464355
    3. '           ' → logprob: -9.508811950683594
    4. '               ' → logprob: -9.758811950683594
    5. ' ):
' → logprob: -10.133811950683594
    6. '):
' → logprob: -10.883811950683594
    7. ')' → logprob: -13.383811950683594
    8. ':
' → logprob: -13.383811950683594
    9. ' ):' → logprob: -14.258811950683594
    10. '       ' → logprob: -14.383811950683594

Token 1677: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002559753193054348
    2. '           ' → logprob: -9.375255584716797
    3. ':
' → logprob: -9.875255584716797
    4. '                   ' → logprob: -10.750255584716797
    5. 'self' → logprob: -10.875255584716797
    6. ' self' → logprob: -11.250255584716797
    7. '):
' → logprob: -11.250255584716797
    8. ':' → logprob: -11.375255584716797
    9. '                       ' → logprob: -11.500255584716797
    10. '```' → logprob: -12.250255584716797

Token 1678: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.27276456356048584
    2. ' self' → logprob: -1.5227645635604858
    3. '               ' → logprob: -4.022764682769775
    4. '                   ' → logprob: -6.022764682769775
    5. '           ' → logprob: -8.397764205932617
    6. '   ' → logprob: -10.397764205932617
    7. '
' → logprob: -11.397764205932617
    8. '[self' → logprob: -11.647764205932617
    9. '                       ' → logprob: -12.522764205932617
    10. '(self' → logprob: -12.897764205932617

Token 1679: '.states' (ID: 122737)
  Prédit: '.states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.states' → logprob: -8.375538163818419e-05
    2. 'states' → logprob: -9.500083923339844
    3. '           ' → logprob: -12.125083923339844
    4. '               ' → logprob: -13.250083923339844
    5. '_states' → logprob: -14.375083923339844
    6. '                   ' → logprob: -14.875083923339844
    7. ' states' → logprob: -15.250083923339844
    8. '(states' → logprob: -16.000083923339844
    9. '.state' → logprob: -16.625083923339844
    10. '```' → logprob: -17.000083923339844

Token 1680: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -8.65707261255011e-06
    2. 'key' → logprob: -12.500008583068848
    3. '               ' → logprob: -13.125008583068848
    4. '[' → logprob: -13.375008583068848
    5. '                   ' → logprob: -14.125008583068848
    6. '           ' → logprob: -15.250008583068848
    7. '.__' → logprob: -17.125009536743164
    8. ',key' → logprob: -17.125009536743164
    9. '   ' → logprob: -17.250009536743164
    10. '[token' → logprob: -17.500009536743164

Token 1681: ']' (ID: 60)
  Prédit: '[key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.002810344099998474
    2. ']' → logprob: -6.002810478210449
    3. ']=' → logprob: -9.00281047821045
    4. '[' → logprob: -9.62781047821045
    5. '[
' → logprob: -9.62781047821045
    6. '][' → logprob: -10.75281047821045
    7. '=' → logprob: -11.00281047821045
    8. ')' → logprob: -11.12781047821045
    9. '                   ' → logprob: -12.25281047821045
    10. '           ' → logprob: -12.75281047821045

Token 1682: ' =' (ID: 314)
  Prédit: '[key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[key' → logprob: -5.288163083605468e-05
    2. '                   ' → logprob: -10.375052452087402
    3. '[' → logprob: -11.250052452087402
    4. '               ' → logprob: -12.625052452087402
    5. '=' → logprob: -13.250052452087402
    6. '                       ' → logprob: -14.000052452087402
    7. '           ' → logprob: -14.375052452087402
    8. 'key' → logprob: -14.500052452087402
    9. '[
' → logprob: -14.875052452087402
    10. '```' → logprob: -15.250052452087402

Token 1683: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.004079828038811684
    2. ' (' → logprob: -5.504079818725586
    3. '           ' → logprob: -14.254079818725586
    4. '   ' → logprob: -14.629079818725586
    5. '(old' → logprob: -16.629079818725586
    6. '(ci' → logprob: -17.379079818725586
    7. '               ' → logprob: -17.504079818725586
    8. '(' → logprob: -17.629079818725586
    9. '(ct' → logprob: -17.879079818725586
    10. '(co' → logprob: -18.004079818725586

Token 1684: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.320199877838604e-07
    2. ' c' → logprob: -15.25
    3. '           ' → logprob: -17.375
    4. '               ' → logprob: -18.125
    5. '(c' → logprob: -18.25
    6. '
' → logprob: -18.625
    7. ')c' → logprob: -19.5
    8. '   ' → logprob: -19.875
    9. '                   ' → logprob: -19.875
    10. '_c' → logprob: -20.5

Token 1685: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -3.531315314830863e-06
    2. '5' → logprob: -13.500003814697266
    3. '50' → logprob: -14.000003814697266
    4. '_' → logprob: -14.125003814697266
    5. '
' → logprob: -16.250003814697266
    6. '```' → logprob: -16.625003814697266
    7. ',' → logprob: -17.062503814697266
    8. 'u' → logprob: -17.250003814697266
    9. 'c' → logprob: -17.312503814697266
    10. '   ' → logprob: -17.500003814697266

Token 1686: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.150362166110426e-05
    2. ' ,' → logprob: -9.750091552734375
    3. '               ' → logprob: -11.000091552734375
    4. ',e' → logprob: -11.500091552734375
    5. ',
' → logprob: -12.625091552734375
    6. '                   ' → logprob: -13.625091552734375
    7. '           ' → logprob: -14.625091552734375
    8. ',v' → logprob: -16.000091552734375
    9. ',n' → logprob: -16.125091552734375
    10. ',p' → logprob: -16.250091552734375

Token 1687: ' expense' (ID: 29361)
  Prédit: 'expense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expense' → logprob: -0.04861098527908325
    2. ' expense' → logprob: -3.0486109256744385
    3. 'exp' → logprob: -10.92361068725586
    4. 'expenses' → logprob: -13.04861068725586
    5. '               ' → logprob: -14.17361068725586
    6. 'expire' → logprob: -14.79861068725586
    7. 'expiration' → logprob: -15.67361068725586
    8. '           ' → logprob: -15.67361068725586
    9. '                ' → logprob: -15.79861068725586
    10. 'expiry' → logprob: -15.79861068725586

Token 1688: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5519246459007263
    2. ')' → logprob: -0.9269246459007263
    3. '               ' → logprob: -3.801924705505371
    4. '           ' → logprob: -6.176924705505371
    5. ')
' → logprob: -6.301924705505371
    6. '                   ' → logprob: -6.426924705505371
    7. ',)' → logprob: -8.801924705505371
    8. '       ' → logprob: -9.301924705505371
    9. ',
' → logprob: -9.676924705505371
    10. '):
' → logprob: -10.051924705505371

Token 1689: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003381260670721531
    2. ',' → logprob: -6.003381252288818
    3. '                   ' → logprob: -8.003381729125977
    4. '           ' → logprob: -8.378381729125977
    5. '       ' → logprob: -9.253381729125977
    6. '                       ' → logprob: -9.753381729125977
    7. '```' → logprob: -9.753381729125977
    8. '(True' → logprob: -10.753381729125977
    9. 'return' → logprob: -11.003381729125977
    10. '              ' → logprob: -11.128381729125977

Token 1690: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009209888521581888
    2. 'return' (adapté à ' return') → logprob: -7.12592077255249
    3. ' return' → logprob: -9.125921249389648
    4. '           ' → logprob: -12.625921249389648
    5. '                   ' → logprob: -13.500921249389648
    6. '
' → logprob: -14.250921249389648
    7. 'True' → logprob: -14.250921249389648
    8. '              ' → logprob: -14.625921249389648
    9. '       ' → logprob: -14.875921249389648
    10. '{return' → logprob: -15.250921249389648

Token 1691: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -8.180258191714529e-06
    2. ' True' → logprob: -11.750008583068848
    3. '               ' → logprob: -15.750008583068848
    4. '                   ' → logprob: -18.00000762939453
    5. '           ' → logprob: -18.50000762939453
    6. 'False' → logprob: -19.12500762939453
    7. '(True' → logprob: -20.50000762939453
    8. '   ' → logprob: -20.75000762939453
    9. '                       ' → logprob: -22.37500762939453
    10. '
' → logprob: -22.50000762939453

Token 1692: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002913678181357682
    2. '               ' → logprob: -8.87529182434082
    3. '       ' → logprob: -9.25029182434082
    4. '
' → logprob: -10.00029182434082
    5. '          ' → logprob: -12.50029182434082
    6. '            
' → logprob: -13.12529182434082
    7. 'return' → logprob: -14.25029182434082
    8. '		' → logprob: -14.37529182434082
    9. '            ' → logprob: -14.62529182434082
    10. '```' → logprob: -14.87529182434082

Token 1693: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.40998875699006e-05
    2. '```' → logprob: -10.25007438659668
    3. '
' → logprob: -10.62507438659668
    4. '               ' → logprob: -11.87507438659668
    5. '       ' → logprob: -12.00007438659668
    6. '		' → logprob: -15.37507438659668
    7. 'return' → logprob: -15.37507438659668
    8. 'else' → logprob: -15.87507438659668
    9. '          ' → logprob: -16.00007438659668
    10. '{
' → logprob: -16.25007438659668

Token 1694: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5902227163314819
    2. '       ' → logprob: -0.8402227163314819
    3. '```' → logprob: -4.4652228355407715
    4. '               ' → logprob: -6.0902228355407715
    5. '
' → logprob: -8.715222358703613
    6. 'else' → logprob: -8.965222358703613
    7. '   ' → logprob: -9.465222358703613
    8. '``' → logprob: -11.465222358703613
    9. ' else' → logprob: -11.715222358703613
    10. '                   ' → logprob: -11.840222358703613

Token 1695: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -7.941850526549388e-06
    2. ' False' → logprob: -11.750007629394531
    3. 'True' → logprob: -17.75000762939453
    4. '(False' → logprob: -20.75000762939453
    5. 'false' → logprob: -24.00000762939453
    6. '_false' → logprob: -24.12500762939453
    7. '
' → logprob: -24.25000762939453
    8. '=False' → logprob: -25.37500762939453
    9. '```' → logprob: -26.25000762939453
    10. '.False' → logprob: -26.75000762939453

Token 1696: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12761151790618896
    2. '
' → logprob: -2.5026116371154785
    3. '<|end|>' → logprob: -4.1276116371154785
    4. '    
' → logprob: -4.2526116371154785
    5. 'def' → logprob: -6.1276116371154785
    6. '```' → logprob: -6.2526116371154785
    7. '        
' → logprob: -6.6276116371154785
    8. 'class' → logprob: -7.2526116371154785
    9. '<|end|>' → logprob: -7.5026116371154785
    10. '       ' → logprob: -8.62761116027832

Token 1697: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03019334003329277
    2. '<|end|>' → logprob: -3.655193328857422
    3. 'def' → logprob: -6.530193328857422
    4. 'class' → logprob: -7.155193328857422
    5. '```' → logprob: -7.280193328857422
    6. '<|end|>' → logprob: -7.405193328857422
    7. '       ' → logprob: -9.280193328857422
    8. '#' → logprob: -9.530193328857422
    9. '    
' → logprob: -10.280193328857422
    10. '    ' → logprob: -10.530193328857422

Token 1698: ' Yen' (ID: 99889)
  Prédit: 'Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -0.7849083542823792
    2. 'Solution' → logprob: -0.9099083542823792
    3. 'Shop' → logprob: -2.7849082946777344
    4. 'Payment' → logprob: -3.1599082946777344
    5. 'Transaction' → logprob: -4.659908294677734
    6. 'Shopping' → logprob: -4.659908294677734
    7. 'Coin' → logprob: -5.284908294677734
    8. 'Simulator' → logprob: -5.409908294677734
    9. 'Simulation' → logprob: -6.784908294677734
    10. 'Problem' → logprob: -6.784908294677734

Token 1699: 'Saving' (ID: 72060)
  Prédit: 'Shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Shop' → logprob: -1.0333389043807983
    2. 'Exchange' → logprob: -1.9083389043807983
    3. 'Calculator' → logprob: -2.033339023590088
    4. 'Ex' → logprob: -2.408339023590088
    5. 'Game' → logprob: -2.783339023590088
    6. 'Trader' → logprob: -2.908339023590088
    7. 'Traveler' → logprob: -3.533339023590088
    8. 'Payment' → logprob: -3.908339023590088
    9. 'Optimizer' → logprob: -4.158339023590088
    10. 'Purchase' → logprob: -4.408339023590088

Token 1700: 'Solver' (ID: 70484)
  Prédit: 'Optimizer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optimizer' → logprob: -1.2486376762390137
    2. 'Strategy' → logprob: -1.3736376762390137
    3. 'Calculator' → logprob: -1.6236376762390137
    4. 'Solver' → logprob: -2.8736376762390137
    5. 'Plan' → logprob: -2.9986376762390137
    6. 'Game' → logprob: -3.3736376762390137
    7. ':
' → logprob: -3.7486376762390137
    8. ':' → logprob: -3.7486376762390137
    9. 'Payment' → logprob: -4.498637676239014
    10. 'Planner' → logprob: -4.623637676239014

Token 1701: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009853952564299107
    2. ':
' → logprob: -4.634853839874268
    3. '```' → logprob: -10.634854316711426
    4. '<|end|>' → logprob: -10.759854316711426
    5. '(' → logprob: -10.884854316711426
    6. '(
' → logprob: -12.509854316711426
    7. ':

' → logprob: -12.759854316711426
    8. '):' → logprob: -12.884854316711426
    9. '>:' → logprob: -13.009854316711426
    10. '():' → logprob: -13.009854316711426

Token 1702: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01611202582716942
    2. 'class' → logprob: -4.141111850738525
    3. 'def' → logprob: -10.141112327575684
    4. '```' → logprob: -10.391112327575684
    5. ' class' → logprob: -12.141112327575684
    6. ' def' → logprob: -13.516112327575684
    7. '	def' → logprob: -15.516112327575684
    8. '    
' → logprob: -15.766112327575684
    9. '    ' → logprob: -16.016111373901367
    10. '@dat' → logprob: -16.141111373901367

Token 1703: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.4176727533340454
    2. '   ' → logprob: -1.1676727533340454
    3. 'class' → logprob: -3.542672634124756
    4. ' def' → logprob: -6.667672634124756
    5. '```' → logprob: -9.042673110961914
    6. '	def' → logprob: -12.792673110961914
    7. '
' → logprob: -13.667673110961914
    8. '``' → logprob: -14.292673110961914
    9. '__' → logprob: -15.042673110961914
    10. '    
' → logprob: -15.167673110961914

Token 1704: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02621135301887989
    2. 'def' → logprob: -3.7762112617492676
    3. '```' → logprob: -7.026211261749268
    4. 'init' → logprob: -7.276211261749268
    5. ' __' → logprob: -7.401211261749268
    6. 'solve' → logprob: -7.651211261749268
    7. '_init' → logprob: -9.651211738586426
    8. ' def' → logprob: -10.151211738586426
    9. '____' → logprob: -10.401211738586426
    10. '___' → logprob: -10.776211738586426

Token 1705: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -17.125
    3. '_init' → logprob: -20.375
    4. '(init' → logprob: -21.25
    5. '	init' → logprob: -21.375
    6. '```' → logprob: -22.0
    7. '__' → logprob: -22.5
    8. 'def' → logprob: -22.5
    9. 'inite' → logprob: -22.5
    10. 'call' → logprob: -22.5

Token 1706: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.24808350205421448
    2. '(self' → logprob: -1.623083472251892
    3. '__(
' → logprob: -4.248083591461182
    4. '(' → logprob: -5.623083591461182
    5. '__' → logprob: -6.498083591461182
    6. 'class' → logprob: -6.623083591461182
    7. ' (' → logprob: -7.748083591461182
    8. '(
' → logprob: -7.998083591461182
    9. 'self' → logprob: -8.123083114624023
    10. '   ' → logprob: -8.873083114624023

Token 1707: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.000763510703109e-05
    2. ' self' → logprob: -11.250040054321289
    3. '   ' → logprob: -11.375040054321289
    4. '
' → logprob: -12.500040054321289
    5. '       ' → logprob: -12.625040054321289
    6. 'class' → logprob: -12.625040054321289
    7. 'price' → logprob: -12.750040054321289
    8. ',' → logprob: -14.125040054321289
    9. 'def' → logprob: -14.375040054321289
    10. '(self' → logprob: -14.750040054321289

Token 1708: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001925182994455099
    2. '(self' → logprob: -6.751924991607666
    3. 'self' → logprob: -7.501924991607666
    4. 'class' → logprob: -9.376925468444824
    5. '   ' → logprob: -10.501925468444824
    6. ',
' → logprob: -10.751925468444824
    7. '(' → logprob: -11.126925468444824
    8. ' (' → logprob: -11.126925468444824
    9. '       ' → logprob: -11.626925468444824
    10. ',self' → logprob: -12.001925468444824

Token 1709: ' prices' (ID: 8451)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.27613094449043274
    2. 'prices' → logprob: -1.5261309146881104
    3. 'shops' → logprob: -3.9011309146881104
    4. 'shop' → logprob: -6.2761311531066895
    5. '   ' → logprob: -6.7761311531066895
    6. 'price' → logprob: -7.9011311531066895
    7. '       ' → logprob: -9.401130676269531
    8. 'num' → logprob: -10.026130676269531
    9. ' self' → logprob: -10.026130676269531
    10. ' prices' → logprob: -10.276130676269531

Token 1710: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5205872654914856
    2. '):
' → logprob: -1.0205872058868408
    3. '):' → logprob: -3.520587205886841
    4. '   ' → logprob: -5.02058744430542
    5. ':' → logprob: -5.52058744430542
    6. '       ' → logprob: -5.64558744430542
    7. '=' → logprob: -7.39558744430542
    8. '=[]' → logprob: -7.52058744430542
    9. '```' → logprob: -9.020586967468262
    10. ',
' → logprob: -9.395586967468262

Token 1711: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39369893074035645
    2. '   ' → logprob: -1.1436989307403564
    3. 'def' → logprob: -5.018698692321777
    4. 'self' → logprob: -9.018698692321777
    5. ' def' → logprob: -9.768698692321777
    6. '```' → logprob: -11.518698692321777
    7. ' self' → logprob: -13.643698692321777
    8. ',' → logprob: -13.893698692321777
    9. '(self' → logprob: -15.018698692321777
    10. '           ' → logprob: -15.018698692321777

Token 1712: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16035187244415283
    2. 'self' (adapté à ' self') → logprob: -1.9103518724441528
    3. ' self' → logprob: -9.160351753234863
    4. '   ' → logprob: -11.035351753234863
    5. 'def' → logprob: -12.160351753234863
    6. 'class' → logprob: -14.660351753234863
    7. '(self' → logprob: -15.660351753234863
    8. '```' → logprob: -15.660351753234863
    9. '	self' → logprob: -15.660351753234863
    10. '           ' → logprob: -16.53535270690918

Token 1713: '.pr' (ID: 27292)
  Prédit: '.pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pr' → logprob: -0.003748060204088688
    2. 'prices' → logprob: -6.003747940063477
    3. '   ' → logprob: -6.878747940063477
    4. '.' → logprob: -9.378747940063477
    5. ' .' → logprob: -9.753747940063477
    6. '_prices' → logprob: -10.628747940063477
    7. '.price' → logprob: -11.003747940063477
    8. '```' → logprob: -11.128747940063477
    9. '	pr' → logprob: -11.378747940063477
    10. '._' → logprob: -12.253747940063477

Token 1714: 'ices' (ID: 1386)
  Prédit: 'ices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ices' → logprob: -5.5577775128767826e-06
    2. 'ces' → logprob: -12.500005722045898
    3. 'ice' → logprob: -14.250005722045898
    4. '   ' → logprob: -14.500005722045898
    5. '```' → logprob: -15.625005722045898
    6. 'oces' → logprob: -16.2500057220459
    7. 'rices' → logprob: -16.5000057220459
    8. '_prices' → logprob: -17.3750057220459
    9. 'ic' → logprob: -17.5000057220459
    10. '_' → logprob: -17.5000057220459

Token 1715: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10030792653560638
    2. ' =' → logprob: -2.3503079414367676
    3. '   ' → logprob: -9.35030746459961
    4. '       ' → logprob: -11.35030746459961
    5. '=self' → logprob: -14.35030746459961
    6. '.append' → logprob: -14.97530746459961
    7. ':' → logprob: -15.35030746459961
    8. ',' → logprob: -15.47530746459961
    9. ')' → logprob: -15.47530746459961
    10. '[' → logprob: -15.60030746459961

Token 1716: ' prices' (ID: 8451)
  Prédit: 'prices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prices' → logprob: -0.00018697108316700906
    2. ' prices' → logprob: -8.625186920166016
    3. 'list' → logprob: -12.125186920166016
    4. '   ' → logprob: -14.000186920166016
    5. 'price' → logprob: -14.625186920166016
    6. '[' → logprob: -15.125186920166016
    7. 'pr' → logprob: -15.500186920166016
    8. '[]' → logprob: -16.000186920166016
    9. '[]
' → logprob: -17.375186920166016
    10. 'tuple' → logprob: -17.500186920166016

Token 1717: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012720244936645031
    2. '       ' → logprob: -5.137720108032227
    3. '
' → logprob: -5.387720108032227
    4. 'def' → logprob: -7.512720108032227
    5. '<|end|>' → logprob: -7.762720108032227
    6. '    
' → logprob: -8.137720108032227
    7. ',' → logprob: -8.262720108032227
    8. ':' → logprob: -8.512720108032227
    9. 'class' → logprob: -8.887720108032227
    10. '        
' → logprob: -9.512720108032227

Token 1718: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004108924185857177
    2. 'def' → logprob: -7.875411033630371
    3. '       ' → logprob: -10.875411033630371
    4. '
' → logprob: -12.250411033630371
    5. '```' → logprob: -13.000411033630371
    6. ' def' → logprob: -13.125411033630371
    7. 'class' → logprob: -13.375411033630371
    8. '    
' → logprob: -14.000411033630371
    9. '        
' → logprob: -16.125410079956055
    10. 'from' → logprob: -16.625410079956055

Token 1719: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06279435008764267
    2. '   ' → logprob: -3.5627944469451904
    3. 'def' → logprob: -3.6877944469451904
    4. 'self' (adapté à ' self') → logprob: -4.937794208526611
    5. ' def' → logprob: -9.06279468536377
    6. '
' → logprob: -9.31279468536377
    7. ' self' → logprob: -9.43779468536377
    8. '           ' → logprob: -11.93779468536377
    9. '```' → logprob: -12.68779468536377
    10. 'class' → logprob: -13.31279468536377

Token 1720: '.n' (ID: 1835)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.2588028013706207
    2. '_current' → logprob: -2.633802890777588
    3. '_shop' → logprob: -3.008802890777588
    4. '   ' → logprob: -3.258802890777588
    5. 'num' → logprob: -4.133802890777588
    6. 'shop' → logprob: -4.633802890777588
    7. 'state' → logprob: -4.758802890777588
    8. '_state' → logprob: -4.883802890777588
    9. 'prices' → logprob: -5.008802890777588
    10. '_states' → logprob: -5.633802890777588

Token 1721: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.019227294251322746
    2. ' =' → logprob: -4.019227504730225
    3. '   ' → logprob: -7.394227504730225
    4. '_sh' → logprob: -7.894227504730225
    5. '_' → logprob: -10.269227027893066
    6. 'shops' → logprob: -10.769227027893066
    7. '=int' → logprob: -11.519227027893066
    8. '=
' → logprob: -12.269227027893066
    9. 'um' → logprob: -12.644227027893066
    10. '_=' → logprob: -12.644227027893066

Token 1722: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.8624639324116288e-06
    2. ' len' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.250001907348633
    4. '(len' → logprob: -19.375001907348633
    5. '
' → logprob: -19.875001907348633
    6. '       ' → logprob: -20.625001907348633
    7. '=len' → logprob: -20.875001907348633
    8. '[len' → logprob: -21.125001907348633
    9. '	len' → logprob: -22.000001907348633
    10. '```' → logprob: -22.125001907348633

Token 1723: '(pr' (ID: 38401)
  Prédit: '(pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -0.008657949976623058
    2. '(self' → logprob: -4.758657932281494
    3. 'self' → logprob: -10.758658409118652
    4. 'prices' → logprob: -10.758658409118652
    5. 'pr' → logprob: -15.258658409118652
    6. '(price' → logprob: -15.508658409118652
    7. '(' → logprob: -15.883658409118652
    8. '   ' → logprob: -16.008657455444336
    9. '(
' → logprob: -16.258657455444336
    10. '
' → logprob: -17.133657455444336

Token 1724: 'ices' (ID: 1386)
  Prédit: 'ices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ices' → logprob: -0.05989094823598862
    2. 'rices' → logprob: -2.9348909854888916
    3. '```' → logprob: -6.5598907470703125
    4. 'prices' → logprob: -6.6848907470703125
    5. '   ' → logprob: -7.3098907470703125
    6. '(self' → logprob: -7.5598907470703125
    7. '_r' → logprob: -8.309890747070312
    8. 'ice' → logprob: -8.684890747070312
    9. 'r' → logprob: -8.809890747070312
    10. 'self' → logprob: -9.059890747070312

Token 1725: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20411178469657898
    2. '   ' → logprob: -1.8291118144989014
    3. '       ' → logprob: -3.8291118144989014
    4. ')
' → logprob: -6.204111576080322
    5. '
' → logprob: -8.82911205291748
    6. '```' → logprob: -9.95411205291748
    7. ',' → logprob: -10.32911205291748
    8. '):
' → logprob: -10.70411205291748
    9. '+' → logprob: -10.70411205291748
    10. ' +' → logprob: -11.45411205291748

Token 1726: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002854447579011321
    2. '       ' → logprob: -6.127854347229004
    3. '
' → logprob: -7.877854347229004
    4. 'def' → logprob: -8.752854347229004
    5. '```' → logprob: -9.502854347229004
    6. 'class' → logprob: -10.877854347229004
    7. '<|end|>' → logprob: -11.127854347229004
    8. '    
' → logprob: -11.377854347229004
    9. ' def' → logprob: -12.002854347229004
    10. '        
' → logprob: -12.877854347229004

Token 1727: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01823984831571579
    2. 'self' (adapté à ' self') → logprob: -4.018239974975586
    3. '   ' → logprob: -9.768239974975586
    4. 'def' → logprob: -10.643239974975586
    5. '
' → logprob: -12.268239974975586
    6. ' self' → logprob: -12.643239974975586
    7. '```' → logprob: -14.893239974975586
    8. 'from' → logprob: -15.768239974975586
    9. '           ' → logprob: -16.268239974975586
    10. '	self' → logprob: -16.643239974975586

Token 1728: '.coin' (ID: 151855)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.45029428601264954
    2. 'def' → logprob: -2.075294256210327
    3. '   ' → logprob: -2.825294256210327
    4. 'coins' → logprob: -2.950294256210327
    5. 'coin' → logprob: -3.200294256210327
    6. 'states' → logprob: -4.325294494628906
    7. '_states' → logprob: -4.575294494628906
    8. '_coin' → logprob: -4.700294494628906
    9. '_current' → logprob: -4.825294494628906
    10. 'best' → logprob: -5.200294494628906

Token 1729: '_types' (ID: 21515)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.05456379055976868
    2. '_types' → logprob: -3.1795637607574463
    3. 's' → logprob: -4.804563999176025
    4. '_limits' → logprob: -6.304563999176025
    5. '_set' → logprob: -7.804563999176025
    6. '_indices' → logprob: -8.304563522338867
    7. '_values' → logprob: -8.429563522338867
    8. '_index' → logprob: -8.554563522338867
    9. '_inventory' → logprob: -9.929563522338867
    10. '_type' → logprob: -10.179563522338867

Token 1730: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760225057601929
    2. ' =' → logprob: -0.8260225057601929
    3. '   ' → logprob: -9.451022148132324
    4. '       ' → logprob: -14.076022148132324
    5. '=[' → logprob: -14.326022148132324
    6. ':' → logprob: -14.576022148132324
    7. '```' → logprob: -14.576022148132324
    8. '=
' → logprob: -14.826022148132324
    9. ',' → logprob: -15.451022148132324
    10. '=[]' → logprob: -15.701022148132324

Token 1731: ' Coin' (ID: 35089)
  Prédit: 'Coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' → logprob: -0.0036585067864507437
    2. '[' → logprob: -5.878658294677734
    3. '[
' → logprob: -7.628658294677734
    4. ' Coin' → logprob: -8.003658294677734
    5. '   ' → logprob: -11.003658294677734
    6. ' [' → logprob: -12.003658294677734
    7. '[C' → logprob: -12.753658294677734
    8. '[(' → logprob: -13.128658294677734
    9. 'Coins' → logprob: -14.128658294677734
    10. '(C' → logprob: -14.253658294677734

Token 1732: 'Set' (ID: 1984)
  Prédit: 'Den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Den' → logprob: -0.04302717000246048
    2. 'Set' → logprob: -3.16802716255188
    3. '_set' → logprob: -11.2930269241333
    4. 'set' → logprob: -12.1680269241333
    5. '[' → logprob: -12.6680269241333
    6. ' denomination' → logprob: -13.1680269241333
    7. '_den' → logprob: -13.6680269241333
    8. ' Den' → logprob: -13.9180269241333
    9. '
' → logprob: -14.0430269241333
    10. 'Type' → logprob: -14.7930269241333

Token 1733: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.3193785548210144
    2. '_' → logprob: -1.5693786144256592
    3. '   ' → logprob: -3.069378614425659
    4. '_
' → logprob: -5.06937837600708
    5. '```' → logprob: -5.94437837600708
    6. 'Set' → logprob: -6.19437837600708
    7. '
' → logprob: -6.81937837600708
    8. ' ' → logprob: -7.31937837600708
    9. '       ' → logprob: -7.56937837600708
    10. '`' → logprob: -7.56937837600708

Token 1734: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -4.4849443838757e-06
    2. '_den' → logprob: -12.375004768371582
    3. ' denominations' → logprob: -16.375003814697266
    4. '[' → logprob: -18.250003814697266
    5. ' den' → logprob: -18.625003814697266
    6. '```' → logprob: -18.625003814697266
    7. 'enumer' → logprob: -18.750003814697266
    8. 'def' → logprob: -18.750003814697266
    9. '   ' → logprob: -19.000003814697266
    10. '
' → logprob: -19.500003814697266

Token 1735: 'ominations' (ID: 169517)
  Prédit: 'ominations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ominations' → logprob: -2.2961512513575144e-05
    2. 'n' → logprob: -12.125022888183594
    3. 'om' → logprob: -12.250022888183594
    4. 'nom' → logprob: -12.625022888183594
    5. 'on' → logprob: -12.750022888183594
    6. 'notations' → logprob: -13.250022888183594
    7. 'omin' → logprob: -14.125022888183594
    8. 'inations' → logprob: -14.250022888183594
    9. 'initions' → logprob: -14.375022888183594
    10. '_' → logprob: -14.625022888183594

Token 1736: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6968926191329956
    2. '   ' → logprob: -0.6968926191329956
    3. '
' → logprob: -6.196892738342285
    4. '```' → logprob: -7.946892738342285
    5. '[
' → logprob: -8.446892738342285
    6. '    
' → logprob: -8.446892738342285
    7. 'def' → logprob: -8.571892738342285
    8. '       ' → logprob: -8.696892738342285
    9. '(' → logprob: -8.946892738342285
    10. ':' → logprob: -9.696892738342285

Token 1737: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3782830137643032e-05
    2. '
' → logprob: -11.62501335144043
    3. ':' → logprob: -13.12501335144043
    4. ']' → logprob: -14.37501335144043
    5. '[' → logprob: -14.37501335144043
    6. ')' → logprob: -14.50001335144043
    7. ' ' → logprob: -15.25001335144043
    8. ':]' → logprob: -15.37501335144043
    9. '0' → logprob: -15.75001335144043
    10. '   ' → logprob: -16.25001335144043

Token 1738: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.02077544294297695
    2. ':' → logprob: -3.895775556564331
    3. ':]
' → logprob: -8.64577579498291
    4. ']' → logprob: -10.14577579498291
    5. ':],' → logprob: -12.14577579498291
    6. ' :]' → logprob: -12.39577579498291
    7. ':]

' → logprob: -12.77077579498291
    8. ':].' → logprob: -13.14577579498291
    9. ':
' → logprob: -13.39577579498291
    10. ':-' → logprob: -14.52077579498291

Token 1739: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12366149574518204
    2. '<|end|>' → logprob: -2.373661518096924
    3. '       ' → logprob: -5.123661518096924
    4. '```' → logprob: -5.248661518096924
    5. 'def' → logprob: -5.373661518096924
    6. '
' → logprob: -5.748661518096924
    7. ' ' → logprob: -6.748661518096924
    8. ')' → logprob: -7.498661518096924
    9. '[' → logprob: -7.873661518096924
    10. '    
' → logprob: -8.123661041259766

Token 1740: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2852463722229004
    2. 'def' → logprob: -1.9102463722229004
    3. '
' → logprob: -2.4102463722229004
    4. '       ' → logprob: -5.5352463722229
    5. '<|end|>' → logprob: -5.9102463722229
    6. ' def' → logprob: -6.4102463722229
    7. '#' → logprob: -7.2852463722229
    8. 'self' → logprob: -7.7852463722229
    9. '```' → logprob: -8.285245895385742
    10. '    
' → logprob: -8.660245895385742

Token 1741: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6178041696548462
    2. 'self' → logprob: -1.6178041696548462
    3. '       ' → logprob: -1.7428041696548462
    4. '
' → logprob: -3.6178040504455566
    5. '[' → logprob: -3.7428040504455566
    6. '   ' → logprob: -3.7428040504455566
    7. '6' → logprob: -5.242804050445557
    8. 'def' → logprob: -6.117804050445557
    9. 'class' → logprob: -6.242804050445557
    10. '[
' → logprob: -6.992804050445557

Token 1742: '500' (ID: 3234)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.40905365347862244
    2. 'Coin' → logprob: -1.4090536832809448
    3. '[' → logprob: -3.1590535640716553
    4. 'self' → logprob: -4.159053802490234
    5. '       ' → logprob: -4.534053802490234
    6. '6' → logprob: -4.909053802490234
    7. '[
' → logprob: -5.909053802490234
    8. '   ' → logprob: -6.034053802490234
    9. ')' → logprob: -6.409053802490234
    10. '7' → logprob: -6.409053802490234

Token 1743: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6919419765472412
    2. '   ' → logprob: -0.9419419765472412
    3. ',-' → logprob: -3.566941976547241
    4. '-y' → logprob: -3.816941976547241
    5. '       ' → logprob: -4.44194221496582
    6. '_' → logprob: -4.81694221496582
    7. ',y' → logprob: -4.81694221496582
    8. '_y' → logprob: -5.44194221496582
    9. ':' → logprob: -5.69194221496582
    10. 'def' → logprob: -6.06694221496582

Token 1744: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.5048530030981055e-06
    2. '0' → logprob: -13.875001907348633
    3. '
' → logprob: -15.375001907348633
    4. ' ' → logprob: -16.000001907348633
    5. '2' → logprob: -16.500001907348633
    6. '   ' → logprob: -17.000001907348633
    7. '1' → logprob: -17.125001907348633
    8. '500' → logprob: -17.500001907348633
    9. '```' → logprob: -18.375001907348633
    10. 'class' → logprob: -19.000001907348633

Token 1745: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010680265724658966
    2. '   ' → logprob: -4.760680198669434
    3. '       ' → logprob: -6.635680198669434
    4. ',
' → logprob: -8.135680198669434
    5. '```' → logprob: -8.135680198669434
    6. ',[' → logprob: -9.635680198669434
    7. '[' → logprob: -10.385680198669434
    8. 'class' → logprob: -11.010680198669434
    9. '
' → logprob: -11.385680198669434
    10. ' ,' → logprob: -11.885680198669434

Token 1746: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '   ' → logprob: -17.875
    4. '
' → logprob: -18.5
    5. '#' → logprob: -20.375
    6. '```' → logprob: -20.875
    7. '500' → logprob: -21.375
    8. 'class' → logprob: -21.75
    9. '５０' → logprob: -22.0
    10. '       ' → logprob: -22.75

Token 1747: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013578285463154316
    2. '```' → logprob: -5.013578414916992
    3. '   ' → logprob: -5.138578414916992
    4. ',
' → logprob: -8.263578414916992
    5. '[' → logprob: -8.263578414916992
    6. '``' → logprob: -8.888578414916992
    7. '(' → logprob: -9.013578414916992
    8. ')' → logprob: -9.513578414916992
    9. '`,' → logprob: -10.763578414916992
    10. ' ' → logprob: -11.013578414916992

Token 1748: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.75
    3. '```' → logprob: -18.125
    4. '20' → logprob: -18.25
    5. '
' → logprob: -18.25
    6. '   ' → logprob: -19.125
    7. '30' → logprob: -19.375
    8. '40' → logprob: -19.5
    9. '#' → logprob: -21.125
    10. '...' → logprob: -21.5

Token 1749: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003637726651504636
    2. '```' → logprob: -6.628637790679932
    3. '5' → logprob: -6.753637790679932
    4. '   ' → logprob: -6.878637790679932
    5. ',
' → logprob: -9.878637313842773
    6. '       ' → logprob: -10.628637313842773
    7. '`,' → logprob: -11.628637313842773
    8. '``' → logprob: -12.003637313842773
    9. '0' → logprob: -12.253637313842773
    10. ' ,' → logprob: -12.503637313842773

Token 1750: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -16.875001907348633
    4. '   ' → logprob: -17.750001907348633
    5. '       ' → logprob: -20.250001907348633
    6. '
' → logprob: -20.375001907348633
    7. '05' → logprob: -22.000001907348633
    8. '25' → logprob: -22.125001907348633
    9. '  ' → logprob: -22.125001907348633
    10. '50' → logprob: -22.500001907348633

Token 1751: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026419671485200524
    2. '```' → logprob: -9.000264167785645
    3. '   ' → logprob: -9.375264167785645
    4. ',
' → logprob: -10.375264167785645
    5. '       ' → logprob: -11.750264167785645
    6. ',[' → logprob: -12.000264167785645
    7. ' ,' → logprob: -13.000264167785645
    8. '``' → logprob: -13.500264167785645
    9. ' ' → logprob: -13.750264167785645
    10. '0' → logprob: -14.125264167785645

Token 1752: '1' (ID: 16)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0005206239875406027
    2. '1' → logprob: -7.625520706176758
    3. ' ' → logprob: -10.625520706176758
    4. '```' → logprob: -12.250520706176758
    5. '   ' → logprob: -12.875520706176758
    6. '
' → logprob: -14.375520706176758
    7. '       ' → logprob: -16.125520706176758
    8. '0' → logprob: -16.375520706176758
    9. '     ' → logprob: -17.875520706176758
    10. '2' → logprob: -18.000520706176758

Token 1753: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05738438293337822
    2. 'def' → logprob: -3.432384490966797
    3. '
' → logprob: -3.807384490966797
    4. ' def' → logprob: -7.432384490966797
    5. '       ' → logprob: -7.807384490966797
    6. '    
' → logprob: -9.182384490966797
    7. '```' → logprob: -9.932384490966797
    8. ')' → logprob: -10.807384490966797
    9. '        
' → logprob: -11.307384490966797
    10. 'class' → logprob: -11.307384490966797

Token 1754: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032573307398706675
    2. 'def' → logprob: -6.2532572746276855
    3. '
' → logprob: -6.8782572746276855
    4. '       ' → logprob: -8.628257751464844
    5. '```' → logprob: -9.378257751464844
    6. ' def' → logprob: -10.753257751464844
    7. '    
' → logprob: -11.753257751464844
    8. ' ' → logprob: -13.878257751464844
    9. '        
' → logprob: -14.128257751464844
    10. '  ' → logprob: -14.128257751464844

Token 1755: ' self' (ID: 1051)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13399028778076172
    2. 'def' → logprob: -2.2589902877807617
    3. '       ' → logprob: -4.133990287780762
    4. '
' → logprob: -5.383990287780762
    5. ' def' → logprob: -8.633990287780762
    6. '```' → logprob: -9.633990287780762
    7. 'self' (adapté à ' self') → logprob: -10.008990287780762
    8. '    
' → logprob: -10.633990287780762
    9. 'class' → logprob: -11.383990287780762
    10. '        
' → logprob: -11.758990287780762

Token 1756: '.initial' (ID: 58290)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.16092705726623535
    2. 'coin' → logprob: -3.0359270572662354
    3. 'def' → logprob: -3.4109270572662354
    4. 'initial' → logprob: -3.4109270572662354
    5. 'max' → logprob: -3.6609270572662354
    6. 'coins' → logprob: -6.035926818847656
    7. '#' → logprob: -6.785926818847656
    8. 'num' → logprob: -6.910926818847656
    9. 'from' → logprob: -7.160926818847656
    10. 'state' → logprob: -7.660926818847656

Token 1757: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.003052811836823821
    2. '_coin' → logprob: -6.753052711486816
    3. '_current' → logprob: -7.253052711486816
    4. 'coins' → logprob: -7.378052711486816
    5. 'current' → logprob: -8.003052711486816
    6. 'coin' → logprob: -8.628052711486816
    7. '_counts' → logprob: -11.878052711486816
    8. '_state' → logprob: -12.003052711486816
    9. 'state' → logprob: -12.128052711486816
    10. 'co' → logprob: -12.503052711486816

Token 1758: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.006886815652251244
    2. 'in' → logprob: -5.131886959075928
    3. '_counts' → logprob: -8.63188648223877
    4. 'coins' → logprob: -8.88188648223877
    5. '_co' → logprob: -9.00688648223877
    6. 'unts' → logprob: -9.13188648223877
    7. '_' → logprob: -9.13188648223877
    8. 'ints' → logprob: -9.25688648223877
    9. 'unt' → logprob: -9.75688648223877
    10. '_ins' → logprob: -9.88188648223877

Token 1759: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5231941938400269
    2. ' =' → logprob: -0.8981941938400269
    3. '   ' → logprob: -10.398194313049316
    4. '=(' → logprob: -11.148194313049316
    5. '=[]' → logprob: -11.648194313049316
    6. '=[' → logprob: -12.523194313049316
    7. '[' → logprob: -12.523194313049316
    8. '<|end|>' → logprob: -12.898194313049316
    9. ')' → logprob: -13.648194313049316
    10. ' =(' → logprob: -13.773194313049316

Token 1760: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003218230325728655
    2. ' (' → logprob: -5.753218173980713
    3. 'tuple' → logprob: -10.628218650817871
    4. '[' → logprob: -11.503218650817871
    5. '(tuple' → logprob: -12.878218650817871
    6. '   ' → logprob: -13.253218650817871
    7. ' tuple' → logprob: -14.253218650817871
    8. '()' → logprob: -14.378218650817871
    9. ' ' → logprob: -15.378218650817871
    10. ' [' → logprob: -15.878218650817871

Token 1761: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.750000953674316
    3. ')' → logprob: -17.0
    4. '6' → logprob: -17.375
    5. '[' → logprob: -17.625
    6. ' ' → logprob: -17.75
    7. '000' → logprob: -18.75
    8. '#' → logprob: -19.0
    9. '```' → logprob: -19.125
    10. '
' → logprob: -19.25

Token 1762: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.790129555156454e-05
    2. ',
' → logprob: -10.250067710876465
    3. ' ,' → logprob: -10.500067710876465
    4. '   ' → logprob: -13.250067710876465
    5. ',)' → logprob: -13.875067710876465
    6. '6' → logprob: -14.375067710876465
    7. ')' → logprob: -14.375067710876465
    8. '0' → logprob: -15.125067710876465
    9. '     ' → logprob: -15.250067710876465
    10. '
' → logprob: -16.50006866455078

Token 1763: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. ')' → logprob: -15.750003814697266
    4. '6' → logprob: -16.750003814697266
    5. '   ' → logprob: -18.125003814697266
    6. '
' → logprob: -19.250003814697266
    7. '     ' → logprob: -19.750003814697266
    8. ')*' → logprob: -19.875003814697266
    9. '  ' → logprob: -20.250003814697266
    10. '       ' → logprob: -20.875003814697266

Token 1764: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003874166286550462
    2. '0' → logprob: -7.875387191772461
    3. ' ,' → logprob: -12.000387191772461
    4. ',
' → logprob: -15.000387191772461
    5. '6' → logprob: -15.125387191772461
    6. '   ' → logprob: -16.00038719177246
    7. '```' → logprob: -16.25038719177246
    8. '000' → logprob: -16.50038719177246
    9. '     ' → logprob: -16.62538719177246
    10. ')' → logprob: -16.87538719177246

Token 1765: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -16.500001907348633
    4. '  ' → logprob: -18.125001907348633
    5. '     ' → logprob: -18.125001907348633
    6. '    ' → logprob: -18.500001907348633
    7. '```' → logprob: -18.750001907348633
    8. '
' → logprob: -19.125001907348633
    9. ',' → logprob: -19.500001907348633
    10. '1' → logprob: -19.500001907348633

Token 1766: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004023097571916878
    2. '0' → logprob: -7.875402450561523
    3. ' ,' → logprob: -10.875402450561523
    4. ')' → logprob: -13.125402450561523
    5. ',
' → logprob: -14.875402450561523
    6. '   ' → logprob: -15.250402450561523
    7. '000' → logprob: -15.625402450561523
    8. ',None' → logprob: -16.125402450561523
    9. ' ' → logprob: -16.500402450561523
    10. '     ' → logprob: -16.750402450561523

Token 1767: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -15.000000953674316
    3. '   ' → logprob: -15.125000953674316
    4. '1' → logprob: -15.500000953674316
    5. '```' → logprob: -16.250001907348633
    6. '6' → logprob: -16.375001907348633
    7. '10' → logprob: -16.750001907348633
    8. '       ' → logprob: -17.250001907348633
    9. '20' → logprob: -17.625001907348633
    10. '     ' → logprob: -17.625001907348633

Token 1768: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011067868210375309
    2. '0' → logprob: -4.511067867279053
    3. '000' → logprob: -11.886068344116211
    4. ' ,' → logprob: -12.011068344116211
    5. '   ' → logprob: -12.511068344116211
    6. ',
' → logprob: -14.261068344116211
    7. '```' → logprob: -14.511068344116211
    8. '6' → logprob: -14.636068344116211
    9. '00' → logprob: -14.636068344116211
    10. '
' → logprob: -15.261068344116211

Token 1769: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -16.5
    4. '6' → logprob: -17.875
    5. '1' → logprob: -17.875
    6. '```' → logprob: -18.375
    7. '۰' → logprob: -19.8125
    8. '     ' → logprob: -19.8125
    9. '000' → logprob: -19.875
    10. '    ' → logprob: -20.25

Token 1770: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030288100242614746
    2. '0' → logprob: -6.378028869628906
    3. ')' → logprob: -6.628028869628906
    4. ')
' → logprob: -13.753028869628906
    5. ' ,' → logprob: -14.253028869628906
    6. ',
' → logprob: -15.003028869628906
    7. '```' → logprob: -15.753028869628906
    8. '   ' → logprob: -15.878028869628906
    9. '<|end|>' → logprob: -16.128028869628906
    10. '),' → logprob: -16.128028869628906

Token 1771: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -16.250001907348633
    4. '
' → logprob: -16.625001907348633
    5. '1' → logprob: -17.000001907348633
    6. '```' → logprob: -17.125001907348633
    7. ')' → logprob: -17.937501907348633
    8. '     ' → logprob: -18.187501907348633
    9. '#' → logprob: -18.375001907348633
    10. '00' → logprob: -18.500001907348633

Token 1772: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001295222609769553
    2. ')
' → logprob: -9.000129699707031
    3. '0' → logprob: -12.625129699707031
    4. '   ' → logprob: -14.000129699707031
    5. ')`' → logprob: -14.625129699707031
    6. ',' → logprob: -15.375129699707031
    7. ' )' → logprob: -15.500129699707031
    8. '       ' → logprob: -15.750129699707031
    9. ')
' → logprob: -15.750129699707031
    10. '),' → logprob: -16.00012969970703

Token 1773: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47740763425827026
    2. '
' → logprob: -0.9774076342582703
    3. '    
' → logprob: -6.352407455444336
    4. 'def' → logprob: -6.727407455444336
    5. '<|end|>' → logprob: -8.852407455444336
    6. '

' → logprob: -9.352407455444336
    7. '        
' → logprob: -9.602407455444336
    8. ' def' → logprob: -10.352407455444336
    9. '       ' → logprob: -11.727407455444336
    10. 'class' → logprob: -11.852407455444336

Token 1774: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4086035490036011
    2. '   ' → logprob: -1.158603549003601
    3. 'def' → logprob: -3.9086036682128906
    4. '

' → logprob: -7.783603668212891
    5. ' def' → logprob: -7.783603668212891
    6. '    
' → logprob: -8.53360366821289
    7. '       ' → logprob: -9.65860366821289
    8. ',' → logprob: -10.03360366821289
    9. '        
' → logprob: -10.15860366821289
    10. 'import' → logprob: -10.15860366821289

Token 1775: ' no' (ID: 860)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06806111335754395
    2. '0' → logprob: -3.693061113357544
    3. '<|end|>' → logprob: -4.318060874938965
    4. '
' → logprob: -4.693060874938965
    5. '#' → logprob: -5.068060874938965
    6. '()' → logprob: -5.443060874938965
    7. '   ' → logprob: -6.068060874938965
    8. '(' → logprob: -6.568060874938965
    9. ')
' → logprob: -6.818060874938965
    10. '       ' → logprob: -7.568060874938965

Token 1776: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.06745477020740509
    2. '100' → logprob: -2.9424548149108887
    3. 'b' → logprob: -4.817454814910889
    4. 'initial' → logprob: -7.192454814910889
    5. ' coins' → logprob: -7.192454814910889
    6. '0' → logprob: -7.442454814910889
    7. 'change' → logprob: -7.692454814910889
    8. '   ' → logprob: -7.817454814910889
    9. 'self' → logprob: -7.817454814910889
    10. ' ' → logprob: -8.81745433807373

Token 1777: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010626000352203846
    2. '
' → logprob: -4.885625839233398
    3. 'def' → logprob: -5.885625839233398
    4. ' def' → logprob: -9.885625839233398
    5. '       ' → logprob: -10.135625839233398
    6. '    
' → logprob: -10.135625839233398
    7. 'class' → logprob: -10.260625839233398
    8. ',' → logprob: -11.010625839233398
    9. 'import' → logprob: -11.260625839233398
    10. 'from' → logprob: -11.510625839233398

Token 1778: ' start' (ID: 1604)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.034517306834459305
    2. 'start' → logprob: -3.409517288208008
    3. 'purchase' → logprob: -7.659517288208008
    4. 'payment' → logprob: -8.159517288208008
    5. ' all' → logprob: -9.784517288208008
    6. 'the' → logprob: -10.784517288208008
    7. 'hand' → logprob: -11.159517288208008
    8. 'def' → logprob: -12.534517288208008
    9. 'this' → logprob: -13.034517288208008
    10. '0' → logprob: -13.034517288208008

Token 1779: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014921268448233604
    2. 'def' → logprob: -7.251492023468018
    3. '
' → logprob: -7.376492023468018
    4. '       ' → logprob: -9.501492500305176
    5. '    
' → logprob: -10.876492500305176
    6. ' def' → logprob: -11.001492500305176
    7. 'class' → logprob: -11.251492500305176
    8. '<|end|>' → logprob: -11.376492500305176
    9. '<|end|>' → logprob: -12.001492500305176
    10. '        
' → logprob: -12.501492500305176

Token 1780: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002091496018692851
    2. 'def' → logprob: -6.502091407775879
    3. '
' → logprob: -8.127091407775879
    4. ' def' → logprob: -8.502091407775879
    5. '    
' → logprob: -10.252091407775879
    6. '<|end|>' → logprob: -10.752091407775879
    7. '       ' → logprob: -11.502091407775879
    8. '        
' → logprob: -12.502091407775879
    9. '```' → logprob: -12.627091407775879
    10. ' ' → logprob: -12.752091407775879

Token 1781: ' self' (ID: 1051)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04661855846643448
    2. 'def' → logprob: -3.4216184616088867
    3. '
' → logprob: -4.796618461608887
    4. ' def' → logprob: -5.921618461608887
    5. '       ' → logprob: -6.421618461608887
    6. '    
' → logprob: -8.921618461608887
    7. 'class' → logprob: -9.921618461608887
    8. '        
' → logprob: -10.046618461608887
    9. '```' → logprob: -11.046618461608887
    10. '	def' → logprob: -11.171618461608887

Token 1782: '.IN' (ID: 20931)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5505850911140442
    2. 'current' → logprob: -1.5505850315093994
    3. 'state' → logprob: -2.9255850315093994
    4. 'price' → logprob: -3.4255850315093994
    5. 'states' → logprob: -3.8005850315093994
    6. 'queue' → logprob: -4.0505852699279785
    7. 'dp' → logprob: -4.0505852699279785
    8. 'max' → logprob: -4.3005852699279785
    9. 'prices' → logprob: -4.5505852699279785
    10. 'visited' → logprob: -4.6755852699279785

Token 1783: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.002441170159727335
    2. 'FINITY' → logprob: -6.25244140625
    3. 'T' → logprob: -8.37744140625
    4. 'FT' → logprob: -8.50244140625
    5. 'FINITE' → logprob: -10.25244140625
    6. '
' → logprob: -10.75244140625
    7. '   ' → logprob: -11.62744140625
    8. '```' → logprob: -13.25244140625
    9. 'FIN' → logprob: -13.62744140625
    10. 'FF' → logprob: -13.87744140625

Token 1784: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04301106184720993
    2. '=' → logprob: -3.168010950088501
    3. '_' → logprob: -12.668010711669922
    4. '   ' → logprob: -13.043010711669922
    5. '    ' → logprob: -13.168010711669922
    6. ')' → logprob: -13.293010711669922
    7. ' =
' → logprob: -13.793010711669922
    8. '```' → logprob: -14.168010711669922
    9. ',' → logprob: -15.043010711669922
    10. 'import' → logprob: -15.168010711669922

Token 1785: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00021045419271104038
    2. 'float' → logprob: -8.625210762023926
    3. '1' → logprob: -10.750210762023926
    4. 'int' → logprob: -12.125210762023926
    5. '999' → logprob: -13.375210762023926
    6. '100' → logprob: -13.750210762023926
    7. ' ' → logprob: -13.875210762023926
    8. '(' → logprob: -15.500210762023926
    9. '   ' → logprob: -17.00020980834961
    10. ' float' → logprob: -17.25020980834961

Token 1786: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0033586816862225533
    2. 'float' → logprob: -5.753358840942383
    3. '1' → logprob: -8.878358840942383
    4. 'int' → logprob: -10.378358840942383
    5. '999' → logprob: -12.003358840942383
    6. '100' → logprob: -12.878358840942383
    7. ' ' → logprob: -14.253358840942383
    8. '(' → logprob: -14.878358840942383
    9. ' float' → logprob: -15.128358840942383
    10. '2' → logprob: -16.003358840942383

Token 1787: ' <<' (ID: 2256)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.005096426233649254
    2. '0' → logprob: -5.880096435546875
    3. '00' → logprob: -6.380096435546875
    4. '_' → logprob: -7.630096435546875
    5. '<<' → logprob: -9.255096435546875
    6. '```' → logprob: -12.505096435546875
    7. '       ' → logprob: -12.630096435546875
    8. '   ' → logprob: -13.255096435546875
    9. 'e' → logprob: -13.880096435546875
    10. '           ' → logprob: -14.005096435546875

Token 1788: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '60' → logprob: -0.024004239588975906
    2. '30' → logprob: -3.8990042209625244
    3. '50' → logprob: -5.7740044593811035
    4. '40' → logprob: -8.024003982543945
    5. '29' → logprob: -11.774003982543945
    6. '61' → logprob: -12.524003982543945
    7. '20' → logprob: -12.774003982543945
    8. '55' → logprob: -13.024003982543945
    9. '31' → logprob: -13.149003982543945
    10. '59' → logprob: -13.399003982543945

Token 1789: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.04970719292759895
    2. '30' → logprob: -3.0497071743011475
    3. '50' → logprob: -6.924707412719727
    4. '40' → logprob: -9.299707412719727
    5. '61' → logprob: -11.174707412719727
    6. '20' → logprob: -11.424707412719727
    7. '29' → logprob: -11.799707412719727
    8. '55' → logprob: -12.549707412719727
    9. '31' → logprob: -12.799707412719727
    10. '59' → logprob: -12.924707412719727

Token 1790: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003991611767560244
    2. '
' → logprob: -5.753991603851318
    3. '    
' → logprob: -7.503991603851318
    4. 'def' → logprob: -8.378992080688477
    5. '        
' → logprob: -10.878992080688477
    6. ' def' → logprob: -12.378992080688477
    7. '

' → logprob: -12.878992080688477
    8. '<|end|>' → logprob: -12.878992080688477
    9. '  
' → logprob: -14.253992080688477
    10. 'import' → logprob: -14.253992080688477

Token 1791: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016498923301696777
    2. 'def' → logprob: -4.141499042510986
    3. ' def' → logprob: -8.016498565673828
    4. '
' → logprob: -9.266498565673828
    5. '    
' → logprob: -10.641498565673828
    6. 'import' → logprob: -12.766498565673828
    7. '```' → logprob: -12.766498565673828
    8. '<|end|>' → logprob: -13.141498565673828
    9. '        
' → logprob: -13.516498565673828
    10. '	def' → logprob: -13.516498565673828

Token 1792: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01818155124783516
    2. '   ' → logprob: -4.018181324005127
    3. ' def' → logprob: -10.393181800842285
    4. '```' → logprob: -14.643181800842285
    5. '
' → logprob: -15.393181800842285
    6. 'async' → logprob: -15.518181800842285
    7. '	def' → logprob: -15.518181800842285
    8. '    
' → logprob: -16.76818084716797
    9. 'class' → logprob: -17.14318084716797
    10. 'import' → logprob: -18.26818084716797

Token 1793: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.0035202486906200647
    2. 'dp' → logprob: -5.8785200119018555
    3. 'run' → logprob: -7.8785200119018555
    4. '_dp' → logprob: -9.253520011901855
    5. 'dfs' → logprob: -9.378520011901855
    6. 'def' → logprob: -10.128520011901855
    7. ' solve' → logprob: -10.253520011901855
    8. 'compute' → logprob: -10.503520011901855
    9. 'process' → logprob: -10.878520011901855
    10. '   ' → logprob: -12.128520011901855

Token 1794: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007106438861228526
    2. '(' → logprob: -8.125710487365723
    3. '       ' → logprob: -8.375710487365723
    4. '   ' → logprob: -8.875710487365723
    5. '(
' → logprob: -11.000710487365723
    6. '_(' → logprob: -11.125710487365723
    7. '__(' → logprob: -12.000710487365723
    8. '_' → logprob: -12.750710487365723
    9. '```' → logprob: -13.875710487365723
    10. 'self' → logprob: -13.875710487365723

Token 1795: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.336475670337677
    2. ',' → logprob: -2.4614756107330322
    3. '   ' → logprob: -2.4614756107330322
    4. '       ' → logprob: -2.4614756107330322
    5. '):
' → logprob: -4.586475849151611
    6. '_' → logprob: -5.086475849151611
    7. 'self' → logprob: -5.461475849151611
    8. ')(' → logprob: -6.336475849151611
    9. '):' → logprob: -6.836475849151611
    10. ')' → logprob: -7.086475849151611

Token 1796: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.457669562427327e-05
    2. '   ' → logprob: -10.12507438659668
    3. '```' → logprob: -10.37507438659668
    4. 'def' → logprob: -13.37507438659668
    5. '
' → logprob: -14.62507438659668
    6. 'result' → logprob: -15.12507438659668
    7. '	' → logprob: -16.00007438659668
    8. 'state' → logprob: -16.50007438659668
    9. '``' → logprob: -16.50007438659668
    10. '        
' → logprob: -16.50007438659668

Token 1797: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7407592535018921
    2. '       ' → logprob: -1.490759253501892
    3. 'state' → logprob: -1.740759253501892
    4. 'dp' → logprob: -2.4907593727111816
    5. 'import' → logprob: -3.7407593727111816
    6. 'sm' → logprob: -4.240759372711182
    7. 'dm' → logprob: -7.240759372711182
    8. 'current' → logprob: -8.115758895874023
    9. '   ' → logprob: -8.365758895874023
    10. 'states' → logprob: -8.365758895874023

Token 1798: ' dynamic' (ID: 14012)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.26752039790153503
    2. 'dp' → logprob: -1.7675204277038574
    3. 'import' → logprob: -2.7675204277038574
    4. '   ' → logprob: -7.017520427703857
    5. '       ' → logprob: -9.7675199508667
    6. '#' → logprob: -9.8925199508667
    7. 'states' → logprob: -10.0175199508667
    8. 'DP' → logprob: -10.3925199508667
    9. 'state' → logprob: -10.5175199508667
    10. 'results' → logprob: -10.8925199508667

Token 1799: ' programming' (ID: 23238)
  Prédit: 'program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'program' → logprob: -0.02671021968126297
    2. ' programming' → logprob: -4.651710033416748
    3. '_program' → logprob: -4.776710033416748
    4. 'def' → logprob: -5.026710033416748
    5. 'Programming' → logprob: -6.651710033416748
    6. '   ' → logprob: -8.401710510253906
    7. '
' → logprob: -8.526710510253906
    8. 'prog' → logprob: -10.151710510253906
    9. '       ' → logprob: -10.776710510253906
    10. '```' → logprob: -11.526710510253906

Token 1800: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018825886771082878
    2. '
' → logprob: -4.393826007843018
    3. ',' → logprob: -6.018826007843018
    4. 'dp' → logprob: -7.143826007843018
    5. 'states' → logprob: -7.518826007843018
    6. ':' → logprob: -7.768826007843018
    7. 'state' → logprob: -8.01882553100586
    8. '```' → logprob: -8.14382553100586
    9. ' states' → logprob: -8.39382553100586
    10. '   ' → logprob: -8.51882553100586

Token 1801: ' memo' (ID: 46393)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7497763633728027
    2. 'from' → logprob: -0.9997763633728027
    3. 'queue' → logprob: -2.6247763633728027
    4. '
' → logprob: -3.2497763633728027
    5. 'self' → logprob: -4.249776363372803
    6. 'collections' → logprob: -4.874776363372803
    7. 'states' → logprob: -5.499776363372803
    8. 'def' → logprob: -5.499776363372803
    9. 'shop' → logprob: -5.749776363372803
    10. '   ' → logprob: -5.874776363372803

Token 1802: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.006389087997376919
    2. '   ' → logprob: -6.006389141082764
    3. '       ' → logprob: -6.506389141082764
    4. '
' → logprob: -7.006389141082764
    5. ' =' → logprob: -7.131389141082764
    6. '```' → logprob: -8.756388664245605
    7. '    ' → logprob: -9.006388664245605
    8. '=' → logprob: -9.256388664245605
    9. 'def' → logprob: -10.006388664245605
    10. '        ' → logprob: -10.256388664245605

Token 1803: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.106282077729702
    2. 'dp' → logprob: -2.3562819957733154
    3. 'from' → logprob: -5.6062822341918945
    4. 'memo' → logprob: -7.7312822341918945
    5. 'states' → logprob: -8.106282234191895
    6. 'visited' → logprob: -8.106282234191895
    7. 'def' → logprob: -8.231282234191895
    8. 'import' → logprob: -8.231282234191895
    9. '
' → logprob: -8.481282234191895
    10. '   ' → logprob: -8.606282234191895

Token 1804: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034191510640084743
    2. 'dp' → logprob: -6.128418922424316
    3. '```' → logprob: -7.503418922424316
    4. 'state' → logprob: -8.503418922424316
    5. 'states' → logprob: -8.753418922424316
    6. ' dp' → logprob: -10.003418922424316
    7. '   ' → logprob: -10.128418922424316
    8. ' states' → logprob: -10.253418922424316
    9. 'current' → logprob: -10.378418922424316
    10. '
' → logprob: -10.378418922424316

Token 1805: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04518670588731766
    2. '       ' → logprob: -3.295186758041382
    3. 'from' → logprob: -6.170186519622803
    4. 'states' → logprob: -6.295186519622803
    5. 'memo' → logprob: -6.545186519622803
    6. 'results' → logprob: -7.670186519622803
    7. 'state' → logprob: -8.045186996459961
    8. '   ' → logprob: -8.920186996459961
    9. 'coins' → logprob: -8.920186996459961
    10. 'visited' → logprob: -8.920186996459961

Token 1806: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14460855722427368
    2. '       ' → logprob: -2.519608497619629
    3. 'from' → logprob: -3.394608497619629
    4. 'visited' → logprob: -4.644608497619629
    5. 'states' → logprob: -6.019608497619629
    6. 'memo' → logprob: -6.394608497619629
    7. 'stack' → logprob: -6.394608497619629
    8. '   ' → logprob: -6.519608497619629
    9. ' dp' → logprob: -7.019608497619629
    10. 'state' → logprob: -7.269608497619629

Token 1807: ' states' (ID: 9407)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03991182520985603
    2. '=' → logprob: -4.03991174697876
    3. '       ' → logprob: -4.78991174697876
    4. '   ' → logprob: -4.91491174697876
    5. ':' → logprob: -6.28991174697876
    6. 'def' → logprob: -6.53991174697876
    7. '[' → logprob: -7.41491174697876
    8. '_states' → logprob: -8.414912223815918
    9. ' ' → logprob: -8.539912223815918
    10. '_' → logprob: -8.789912223815918

Token 1808: ' store' (ID: 4897)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09154776483774185
    2. '       ' → logprob: -2.716547727584839
    3. '=' → logprob: -3.966547727584839
    4. '   ' → logprob: -7.341547966003418
    5. ':' → logprob: -7.466547966003418
    6. '```' → logprob: -7.841547966003418
    7. 'def' → logprob: -8.216547966003418
    8. ',' → logprob: -8.966547966003418
    9. '           ' → logprob: -9.716547966003418
    10. ':
' → logprob: -10.216547966003418

Token 1809: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7355641722679138
    2. '{
' → logprob: -1.8605642318725586
    3. 'max' → logprob: -2.2355642318725586
    4. '{' → logprob: -2.7355642318725586
    5. 'current' → logprob: -3.6105642318725586
    6. 'self' → logprob: -3.7355642318725586
    7. 'best' → logprob: -3.7355642318725586
    8. 'results' → logprob: -3.9855642318725586
    9. '#' → logprob: -3.9855642318725586
    10. '   ' → logprob: -4.235564231872559

Token 1810: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3385895788669586
    2. 'shop' → logprob: -1.3385895490646362
    3. 'self' → logprob: -5.213589668273926
    4. 'def' → logprob: -5.338589668273926
    5. 'current' → logprob: -5.338589668273926
    6. 'c' → logprob: -5.838589668273926
    7. 'best' → logprob: -6.838589668273926
    8. '(shop' → logprob: -6.838589668273926
    9. '       ' → logprob: -6.963589668273926
    10. 'coin' → logprob: -7.338589668273926

Token 1811: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0011139007983729243
    2. '500' → logprob: -7.0011138916015625
    3. '       ' → logprob: -9.501113891601562
    4. '   ' → logprob: -9.751113891601562
    5. '_received' → logprob: -11.376113891601562
    6. '_coin' → logprob: -11.501113891601562
    7. 'coins' → logprob: -11.626113891601562
    8. ' ' → logprob: -12.001113891601562
    9. ',' → logprob: -12.501113891601562
    10. '
' → logprob: -12.751113891601562

Token 1812: '500' (ID: 3234)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10144466906785965
    2. '500' → logprob: -2.351444721221924
    3. 'coins' → logprob: -7.726444721221924
    4. 'received' → logprob: -8.226444244384766
    5. 'coin' → logprob: -9.226444244384766
    6. '_received' → logprob: -9.226444244384766
    7. 'five' → logprob: -9.726444244384766
    8. '
' → logprob: -10.226444244384766
    9. '```' → logprob: -10.226444244384766
    10. 'c' → logprob: -10.351444244384766

Token 1813: '-y' (ID: 18102)
  Prédit: '_y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -1.0538619756698608
    2. '-co' → logprob: -1.3038619756698608
    3. '_co' → logprob: -2.3038620948791504
    4. 'coins' → logprob: -2.9288620948791504
    5. '_' → logprob: -3.0538620948791504
    6. '```' → logprob: -3.0538620948791504
    7. '-y' → logprob: -3.1788620948791504
    8. '_coin' → logprob: -3.3038620948791504
    9. '_-' → logprob: -4.80386209487915
    10. '
' → logprob: -5.05386209487915

Token 1814: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.24059173464775085
    2. 'coins' → logprob: -2.2405917644500732
    3. '_' → logprob: -2.6155917644500732
    4. '_co' → logprob: -4.990591526031494
    5. '_coin' → logprob: -5.115591526031494
    6. '```' → logprob: -5.365591526031494
    7. '_en' → logprob: -5.615591526031494
    8. 'coin' → logprob: -6.490591526031494
    9. '
' → logprob: -6.490591526031494
    10. ' coins' → logprob: -6.865591526031494

Token 1815: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.7911214828491211
    2. '_co' → logprob: -1.041121482849121
    3. 'coin' → logprob: -2.416121482849121
    4. '_coin' → logprob: -2.416121482849121
    5. '```' → logprob: -5.166121482849121
    6. ')_' → logprob: -5.916121482849121
    7. ')' → logprob: -6.166121482849121
    8. '_' → logprob: -6.666121482849121
    9. ' coins' → logprob: -6.791121482849121
    10. ',' → logprob: -7.166121482849121

Token 1816: ' obtained' (ID: 17747)
  Prédit: '_received'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_received' → logprob: -0.5618849396705627
    2. ',' → logprob: -1.436884880065918
    3. 'received' → logprob: -2.561884880065918
    4. '_col' → logprob: -2.936884880065918
    5. 'col' → logprob: -4.186884880065918
    6. '_return' → logprob: -4.436884880065918
    7. '_used' → logprob: -4.811884880065918
    8. '_ob' → logprob: -4.936884880065918
    9. 'returned' → logprob: -5.186884880065918
    10. '_reward' → logprob: -5.936884880065918

Token 1817: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029169095680117607
    2. '_so' → logprob: -4.029169082641602
    3. '_col' → logprob: -5.904169082641602
    4. '_received' → logprob: -6.654169082641602
    5. '_in' → logprob: -6.904169082641602
    6. ')' → logprob: -6.904169082641602
    7. 'from' → logprob: -6.904169082641602
    8. 'so' → logprob: -7.654169082641602
    9. '```' → logprob: -7.654169082641602
    10. ',
' → logprob: -7.779169082641602

Token 1818: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.11544981598854065
    2. ' min' → logprob: -2.240449905395508
    3. '#' → logprob: -6.490449905395508
    4. 'expense' → logprob: -7.740449905395508
    5. '       ' → logprob: -8.490449905395508
    6. ' minimal' → logprob: -9.365449905395508
    7. 'max' → logprob: -9.740449905395508
    8. ' expense' → logprob: -9.740449905395508
    9. 'minimal' → logprob: -10.240449905395508
    10. ' #' → logprob: -10.365449905395508

Token 1819: ' expense' (ID: 29361)
  Prédit: 'expense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expense' → logprob: -0.11330800503492355
    2. ' expense' → logprob: -2.7383079528808594
    3. '_exp' → logprob: -3.3633079528808594
    4. 'exp' → logprob: -6.113307952880859
    5. '   ' → logprob: -6.613307952880859
    6. 'cost' → logprob: -6.863307952880859
    7. 'expenses' → logprob: -7.238307952880859
    8. ' ' → logprob: -7.613307952880859
    9. '_' → logprob: -7.863307952880859
    10. '       ' → logprob: -8.36330795288086

Token 1820: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14289796352386475
    2. ',' → logprob: -2.5178980827331543
    3. ')
' → logprob: -3.3928980827331543
    4. '       ' → logprob: -4.767898082733154
    5. '):
' → logprob: -5.517898082733154
    6. '_so' → logprob: -5.642898082733154
    7. '),' → logprob: -7.642898082733154
    8. 'spent' → logprob: -7.892898082733154
    9. '   ' → logprob: -8.392897605895996
    10. '```' → logprob: -8.517897605895996

Token 1821: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05933469906449318
    2. '
' → logprob: -3.0593347549438477
    3. ',' → logprob: -5.434334754943848
    4. ')' → logprob: -7.059334754943848
    5. '        
' → logprob: -7.059334754943848
    6. '```' → logprob: -7.434334754943848
    7. ':' → logprob: -7.559334754943848
    8. ' =' → logprob: -7.559334754943848
    9. 'from' → logprob: -7.559334754943848
    10. '   ' → logprob: -7.809334754943848

Token 1822: ' each' (ID: 2454)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.5706720352172852
    2. 'each' → logprob: -1.0706720352172852
    3. 'i' → logprob: -2.945672035217285
    4. 'self' → logprob: -4.070672035217285
    5. ' shop' → logprob: -5.570672035217285
    6. '   ' → logprob: -5.570672035217285
    7. ' each' → logprob: -5.570672035217285
    8. '       ' → logprob: -6.320672035217285
    9. 'all' → logprob: -6.320672035217285
    10. 'current' → logprob: -6.570672035217285

Token 1823: ' (' (ID: 350)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.00510413758456707
    2. 'i' → logprob: -5.755104064941406
    3. ' shop' → logprob: -6.755104064941406
    4. 'index' → logprob: -8.255104064941406
    5. '       ' → logprob: -9.380104064941406
    6. 'self' → logprob: -9.380104064941406
    7. '   ' → logprob: -9.755104064941406
    8. '_shop' → logprob: -10.130104064941406
    9. 'store' → logprob: -10.380104064941406
    10. 'idx' → logprob: -10.380104064941406

Token 1824: 'index' (ID: 2257)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.05242117494344711
    2. 'i' → logprob: -3.4274210929870605
    3. 'self' → logprob: -4.3024210929870605
    4. ' shop' → logprob: -6.0524210929870605
    5. 'index' → logprob: -7.0524210929870605
    6. '_shop' → logprob: -7.6774210929870605
    7. ')' → logprob: -8.177421569824219
    8. '       ' → logprob: -8.802421569824219
    9. '   ' → logprob: -9.052421569824219
    10. 's' → logprob: -9.052421569824219

Token 1825: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.45734384655952454
    2. ' +' → logprob: -1.2073438167572021
    3. ',' → logprob: -2.707343816757202
    4. '       ' → logprob: -7.707344055175781
    5. ' ,' → logprob: -8.332344055175781
    6. ')' → logprob: -8.582344055175781
    7. '+,' → logprob: -8.832344055175781
    8. '```' → logprob: -9.582344055175781
    9. '):
' → logprob: -10.457344055175781
    10. '   ' → logprob: -10.582344055175781

Token 1826: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.5322512984275818
    2. 'coin' → logprob: -0.9072512984275818
    3. ' coins' → logprob: -5.407251358032227
    4. ' coin' → logprob: -6.157251358032227
    5. 'tuple' → logprob: -6.282251358032227
    6. '       ' → logprob: -8.657251358032227
    7. ' tuple' → logprob: -9.032251358032227
    8. 'current' → logprob: -9.157251358032227
    9. '   ' → logprob: -9.407251358032227
    10. '           ' → logprob: -9.782251358032227

Token 1827: ' held' (ID: 7504)
  Prédit: '_tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -0.23697532713413239
    2. ')' → logprob: -2.6119754314422607
    3. '_t' → logprob: -2.9869754314422607
    4. ')_' → logprob: -3.2369754314422607
    5. '       ' → logprob: -3.7369754314422607
    6. '_count' → logprob: -5.236975193023682
    7. '):
' → logprob: -5.361975193023682
    8. '_counts' → logprob: -5.486975193023682
    9. '           ' → logprob: -6.236975193023682
    10. '_' → logprob: -6.611975193023682

Token 1828: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6321397423744202
    2. '):
' → logprob: -0.8821397423744202
    3. '):' → logprob: -3.1321396827697754
    4. '       ' → logprob: -5.007139682769775
    5. ')
' → logprob: -5.882139682769775
    6. ')_' → logprob: -8.132140159606934
    7. '):
' → logprob: -8.382140159606934
    8. ')`' → logprob: -8.507140159606934
    9. ',' → logprob: -8.882140159606934
    10. '   ' → logprob: -9.007140159606934

Token 1829: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.052377623040229e-05
    2. '
' → logprob: -10.375070571899414
    3. '```' → logprob: -10.750070571899414
    4. ',' → logprob: -11.875070571899414
    5. '   ' → logprob: -12.125070571899414
    6. 'dp' → logprob: -13.000070571899414
    7. '           ' → logprob: -14.250070571899414
    8. 'def' → logprob: -14.375070571899414
    9. ')' → logprob: -15.000070571899414
    10. '`' → logprob: -15.125070571899414

Token 1830: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003047186473850161
    2. '
' → logprob: -8.50030517578125
    3. 'from' → logprob: -10.00030517578125
    4. 'dp' → logprob: -10.25030517578125
    5. 'import' → logprob: -11.37530517578125
    6. '   ' → logprob: -12.12530517578125
    7. 'stack' → logprob: -13.75030517578125
    8. 'queue' → logprob: -14.62530517578125
    9. 'state' → logprob: -14.75030517578125
    10. '        
' → logprob: -14.87530517578125

Token 1831: ' coins' (ID: 28969)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4087503254413605
    2. '       ' → logprob: -1.158750295639038
    3. 'from' → logprob: -5.033750534057617
    4. 'def' → logprob: -5.908750534057617
    5. 'stack' → logprob: -5.908750534057617
    6. '```' → logprob: -5.908750534057617
    7. 'visited' → logprob: -6.283750534057617
    8. 'current' → logprob: -7.033750534057617
    9. 'import' → logprob: -7.158750534057617
    10. 'state' → logprob: -7.408750534057617

Token 1832: ' held' (ID: 7504)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.4490393102169037
    2. '_' → logprob: -1.574039340019226
    3. ' =' → logprob: -2.3240392208099365
    4. '   ' → logprob: -4.324039459228516
    5. '       ' → logprob: -4.324039459228516
    6. '_states' → logprob: -4.824039459228516
    7. '_tuple' → logprob: -4.949039459228516
    8. '=' → logprob: -5.699039459228516
    9. '_t' → logprob: -6.324039459228516
    10. ')' → logprob: -6.574039459228516

Token 1833: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2765238583087921
    2. '=' → logprob: -2.1515238285064697
    3. '):
' → logprob: -3.4015238285064697
    4. ')' → logprob: -3.5265238285064697
    5. '       ' → logprob: -3.5265238285064697
    6. ':' → logprob: -4.276524066925049
    7. ' are' → logprob: -5.026524066925049
    8. '```' → logprob: -5.401524066925049
    9. ' is' → logprob: -7.026524066925049
    10. ',' → logprob: -7.026524066925049

Token 1834: ' tuple' (ID: 31311)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17330855131149292
    2. 'self' → logprob: -1.9233086109161377
    3. 'tuple' → logprob: -4.923308372497559
    4. '(self' → logprob: -6.173308372497559
    5. ' (' → logprob: -6.673308372497559
    6. '()' → logprob: -7.423308372497559
    7. '6' → logprob: -7.423308372497559
    8. 'len' → logprob: -8.673308372497559
    9. '{}' → logprob: -8.673308372497559
    10. '{' → logprob: -8.798308372497559

Token 1835: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9817017316818237
    2. ' of' → logprob: -1.4817017316818237
    3. ')' → logprob: -2.1067018508911133
    4. ',' → logprob: -2.2317018508911133
    5. ' (' → logprob: -3.1067018508911133
    6. ' =' → logprob: -3.3567018508911133
    7. '(' → logprob: -3.9817018508911133
    8. ':' → logprob: -4.231701850891113
    9. '):
' → logprob: -4.356701850891113
    10. 'of' → logprob: -4.856701850891113

Token 1836: ' counts' (ID: 28991)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.08662741631269455
    2. 'length' → logprob: -2.96162748336792
    3. 'counts' → logprob: -4.08662748336792
    4. 'int' → logprob: -5.71162748336792
    5. '(int' → logprob: -5.71162748336792
    6. 'inte' → logprob: -6.08662748336792
    7. '(' → logprob: -6.21162748336792
    8. 'ints' → logprob: -6.33662748336792
    9. 'current' → logprob: -7.33662748336792
    10. 'count' → logprob: -8.336627006530762

Token 1837: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5412192940711975
    2. ')' → logprob: -2.4162192344665527
    3. ' for' → logprob: -2.7912192344665527
    4. ',' → logprob: -2.9162192344665527
    5. ' of' → logprob: -3.0412192344665527
    6. '   ' → logprob: -3.5412192344665527
    7. 'for' → logprob: -3.5412192344665527
    8. '(' → logprob: -3.9162192344665527
    9. '```' → logprob: -4.416219234466553
    10. ' at' → logprob: -4.416219234466553

Token 1838: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3232884407043457
    2. '500' → logprob: -1.5732884407043457
    3. 'coins' → logprob: -3.1982884407043457
    4. 'self' → logprob: -4.448288440704346
    5. '6' → logprob: -4.948288440704346
    6. 'the' → logprob: -5.323288440704346
    7. 'each' → logprob: -6.073288440704346
    8. 'six' → logprob: -7.573288440704346
    9. '(self' → logprob: -8.073287963867188
    10. '   ' → logprob: -8.448287963867188

Token 1839: '6' (ID: 21)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31238365173339844
    2. '(' → logprob: -1.6873836517333984
    3. '500' → logprob: -2.9373836517333984
    4. '(self' → logprob: -4.187383651733398
    5. 'coins' → logprob: -4.437383651733398
    6. 'coin' → logprob: -6.437383651733398
    7. 'six' → logprob: -7.937383651733398
    8. 'Coin' → logprob: -8.062383651733398
    9. 'each' → logprob: -8.187383651733398
    10. 'the' → logprob: -8.812383651733398

Token 1840: ' coins' (ID: 28969)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09274156391620636
    2. '```' → logprob: -3.3427414894104004
    3. ',' → logprob: -3.7177414894104004
    4. 'coins' → logprob: -4.9677414894104
    5. '500' → logprob: -5.0927414894104
    6. '       ' → logprob: -5.9677414894104
    7. '0' → logprob: -6.2177414894104
    8. '_' → logprob: -6.2177414894104
    9. ']' → logprob: -6.5927414894104
    10. '),' → logprob: -6.5927414894104

Token 1841: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06557969003915787
    2. '
' → logprob: -3.315579652786255
    3. ',' → logprob: -4.940579891204834
    4. '```' → logprob: -5.065579891204834
    5. '(' → logprob: -5.940579891204834
    6. ')' → logprob: -6.065579891204834
    7. '   ' → logprob: -6.315579891204834
    8. '        
' → logprob: -6.440579891204834
    9. ':' → logprob: -7.065579891204834
    10. '_' → logprob: -7.440579891204834

Token 1842: 'no' (ID: 1750)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39823678135871887
    2. '500' → logprob: -1.1482367515563965
    3. '0' → logprob: -5.0232367515563965
    4. ')
' → logprob: -7.3982367515563965
    5. ',' → logprob: -7.5232367515563965
    6. '(' → logprob: -7.5232367515563965
    7. ' ' → logprob: -7.7732367515563965
    8. '...' → logprob: -7.7732367515563965
    9. '[' → logprob: -7.8982367515563965
    10. ' (' → logprob: -8.023237228393555

Token 1843: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.19473250210285187
    2. ' ' → logprob: -2.944732427597046
    3. '   ' → logprob: -2.944732427597046
    4. '0' → logprob: -3.819732427597046
    5. '       ' → logprob: -4.819732666015625
    6. '
' → logprob: -5.069732666015625
    7. ',' → logprob: -5.194732666015625
    8. '1' → logprob: -5.444732666015625
    9. ')' → logprob: -5.944732666015625
    10. '    ' → logprob: -5.944732666015625

Token 1844: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.014937371015548706
    2. 'yen' → logprob: -5.639937400817871
    3. 'coins' → logprob: -6.139937400817871
    4. '1' → logprob: -6.264937400817871
    5. '0' → logprob: -6.514937400817871
    6. 'hund' → logprob: -6.889937400817871
    7. 'th' → logprob: -7.264937400817871
    8. '
' → logprob: -7.514937400817871
    9. '```' → logprob: -7.514937400817871
    10. '   ' → logprob: -7.639937400817871

Token 1845: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009425500174984336
    2. '-y' → logprob: -7.500942707061768
    3. '```' → logprob: -9.00094223022461
    4. ')-' → logprob: -10.00094223022461
    5. '000' → logprob: -10.25094223022461
    6. ')' → logprob: -10.25094223022461
    7. '_' → logprob: -10.62594223022461
    8. ',y' → logprob: -10.87594223022461
    9. '),' → logprob: -11.12594223022461
    10. '_y' → logprob: -11.37594223022461

Token 1846: '-y' (ID: 18102)
  Prédit: '-y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-y' → logprob: -0.1966666430234909
    2. ')' → logprob: -2.571666717529297
    3. ')-' → logprob: -2.821666717529297
    4. '-' → logprob: -3.946666717529297
    5. '-)' → logprob: -4.696666717529297
    6. ',' → logprob: -5.196666717529297
    7. '   ' → logprob: -6.571666717529297
    8. '-
' → logprob: -6.821666717529297
    9. ',-' → logprob: -6.946666717529297
    10. '),' → logprob: -7.196666717529297

Token 1847: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.16088129580020905
    2. '-en' → logprob: -1.9108812808990479
    3. '-' → logprob: -8.785881042480469
    4. 'yen' → logprob: -8.910881042480469
    5. '```' → logprob: -10.035881042480469
    6. ')' → logprob: -10.535881042480469
    7. '-y' → logprob: -10.535881042480469
    8. '   ' → logprob: -10.535881042480469
    9. ')-' → logprob: -11.160881042480469
    10. '
' → logprob: -11.285881042480469

Token 1848: ' bill' (ID: 6713)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.455230176448822
    2. 'b' → logprob: -1.5802302360534668
    3. ',' → logprob: -2.705230236053467
    4. ')' → logprob: -3.080230236053467
    5. 'coin' → logprob: -4.580230236053467
    6. ')_' → logprob: -4.830230236053467
    7. '_bill' → logprob: -4.830230236053467
    8. '_co' → logprob: -5.080230236053467
    9. '_coin' → logprob: -5.705230236053467
    10. '```' → logprob: -6.330230236053467

Token 1849: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09127763658761978
    2. ')' → logprob: -2.841277599334717
    3. ')s' → logprob: -3.716277599334717
    4. '),' → logprob: -6.216277599334717
    5. ',' → logprob: -6.466277599334717
    6. ')
' → logprob: -8.216278076171875
    7. ' s' → logprob: -8.466278076171875
    8. '_s' → logprob: -8.716278076171875
    9. '       ' → logprob: -9.341278076171875
    10. '   ' → logprob: -9.466278076171875

Token 1850: ' infinite' (ID: 48413)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1783974170684814
    2. ' no' → logprob: -2.1783974170684814
    3. 'because' → logprob: -2.3033974170684814
    4. 'price' → logprob: -2.5533974170684814
    5. ' because' → logprob: -2.5533974170684814
    6. '#' → logprob: -2.5533974170684814
    7. 'since' → logprob: -2.8033974170684814
    8. 'no' → logprob: -2.9283974170684814
    9. '       ' → logprob: -3.6783974170684814
    10. ' #' → logprob: -3.6783974170684814

Token 1851: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.266862154006958
    2. ',' → logprob: -2.891862154006958
    3. '_' → logprob: -3.016862154006958
    4. 'coins' → logprob: -3.266862154006958
    5. '```' → logprob: -3.891862154006958
    6. 'b' → logprob: -4.266861915588379
    7. '_b' → logprob: -4.391861915588379
    8. 's' → logprob: -4.641861915588379
    9. ' ' → logprob: -5.391861915588379
    10. ')_' → logprob: -5.516861915588379

Token 1852: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005637463182210922
    2. '
' → logprob: -5.2556376457214355
    3. ',' → logprob: -9.255637168884277
    4. '```' → logprob: -9.380637168884277
    5. '   ' → logprob: -9.630637168884277
    6. '        
' → logprob: -9.755637168884277
    7. ')' → logprob: -10.255637168884277
    8. '<|end|>' → logprob: -11.630637168884277
    9. '_' → logprob: -12.255637168884277
    10. ' for' → logprob: -12.380637168884277

Token 1853: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006900362786836922
    2. '
' → logprob: -7.75068998336792
    3. 'dp' → logprob: -8.750690460205078
    4. 'from' → logprob: -9.750690460205078
    5. '   ' → logprob: -11.000690460205078
    6. 'import' → logprob: -11.125690460205078
    7. '```' → logprob: -12.375690460205078
    8. '        
' → logprob: -13.375690460205078
    9. 'visited' → logprob: -13.875690460205078
    10. 'stack' → logprob: -13.875690460205078

Token 1854: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07650130987167358
    2. 'from' → logprob: -3.0765013694763184
    3. 'dp' → logprob: -3.8265013694763184
    4. 'import' → logprob: -5.326501369476318
    5. 'visited' → logprob: -8.20150089263916
    6. '
' → logprob: -8.32650089263916
    7. '   ' → logprob: -8.45150089263916
    8. 'stack' → logprob: -10.32650089263916
    9. 'state' → logprob: -10.82650089263916
    10. 'queue' → logprob: -10.95150089263916

Token 1855: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.16695894300937653
    2. ' each' → logprob: -2.416959047317505
    3. 'shop' → logprob: -3.291959047317505
    4. 'i' → logprob: -5.041958808898926
    5. 'least' → logprob: -5.166958808898926
    6. '   ' → logprob: -5.791958808898926
    7. 'index' → logprob: -5.916958808898926
    8. 'the' → logprob: -6.291958808898926
    9. '0' → logprob: -6.541958808898926
    10. 'def' → logprob: -6.666958808898926

Token 1856: ' shop' (ID: 9100)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.09786050021648407
    2. ' shop' → logprob: -2.72286057472229
    3. ' step' → logprob: -4.097860336303711
    4. 'step' → logprob: -4.597860336303711
    5. '_shop' → logprob: -8.097860336303711
    6. '       ' → logprob: -8.222860336303711
    7. 'store' → logprob: -9.347860336303711
    8. '   ' → logprob: -9.972860336303711
    9. '           ' → logprob: -10.097860336303711
    10. 'price' → logprob: -10.222860336303711

Token 1857: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025205299258232117
    2. ',' → logprob: -4.400205135345459
    3. 'for' → logprob: -5.775205135345459
    4. '   ' → logprob: -6.150205135345459
    5. ':' → logprob: -6.650205135345459
    6. 'index' → logprob: -7.150205135345459
    7. '
' → logprob: -7.400205135345459
    8. '(shop' → logprob: -7.525205135345459
    9. '```' → logprob: -7.650205135345459
    10. 'shop' → logprob: -7.650205135345459

Token 1858: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08548779785633087
    2. 'for' → logprob: -3.4604878425598145
    3. '#' → logprob: -3.7104878425598145
    4. ' for' → logprob: -5.0854878425598145
    5. '   ' → logprob: -5.3354878425598145
    6. '           ' → logprob: -5.4604878425598145
    7. 'coins' → logprob: -5.8354878425598145
    8. '
' → logprob: -6.7104878425598145
    9. 'we' → logprob: -7.0854878425598145
    10. 'def' → logprob: -7.3354878425598145

Token 1859: ' can' (ID: 665)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9350500702857971
    2. 'def' → logprob: -1.6850500106811523
    3. '   ' → logprob: -1.8100500106811523
    4. 'try' → logprob: -2.1850500106811523
    5. 'consider' → logprob: -3.3100500106811523
    6. '
' → logprob: -3.4350500106811523
    7. 'choose' → logprob: -4.685050010681152
    8. 'expl' → logprob: -4.685050010681152
    9. 'iterate' → logprob: -4.685050010681152
    10. 'enumer' → logprob: -5.060050010681152

Token 1860: ' choose' (ID: 5655)
  Prédit: 'pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pay' → logprob: -0.4588277339935303
    2. 'buy' → logprob: -1.4588277339935303
    3. 'choose' → logprob: -2.9588277339935303
    4. 'try' → logprob: -3.5838277339935303
    5. '       ' → logprob: -3.9588277339935303
    6. 'purchase' → logprob: -4.583827972412109
    7. '   ' → logprob: -5.333827972412109
    8. 'go' → logprob: -5.458827972412109
    9. 'use' → logprob: -5.583827972412109
    10. 'for' → logprob: -5.958827972412109

Token 1861: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.13968564569950104
    2. 'how' → logprob: -3.51468563079834
    3. '       ' → logprob: -3.76468563079834
    4. 'either' → logprob: -4.26468563079834
    5. 'payment' → logprob: -4.63968563079834
    6. 'next' → logprob: -4.63968563079834
    7. 'from' → logprob: -4.76468563079834
    8. 'pay' → logprob: -5.26468563079834
    9. ' to' → logprob: -5.26468563079834
    10. 'any' → logprob: -5.26468563079834

Token 1862: ' buy' (ID: 3877)
  Prédit: 'pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pay' → logprob: -0.17136070132255554
    2. 'buy' → logprob: -1.921360731124878
    3. 'purchase' → logprob: -5.546360492706299
    4. 'go' → logprob: -5.796360492706299
    5. 'use' → logprob: -6.171360492706299
    6. ' pay' → logprob: -7.546360492706299
    7. 'give' → logprob: -7.796360492706299
    8. 'for' → logprob: -8.296360969543457
    9. '   ' → logprob: -8.421360969543457
    10. 'visit' → logprob: -8.671360969543457

Token 1863: ' or' (ID: 503)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7018849849700928
    2. '       ' → logprob: -1.8268849849700928
    3. '
' → logprob: -2.5768849849700928
    4. '_
' → logprob: -2.8268849849700928
    5. '_' → logprob: -3.0768849849700928
    6. '``' → logprob: -3.3268849849700928
    7. ' or' → logprob: -3.5768849849700928
    8. ',' → logprob: -4.201885223388672
    9. '(self' → logprob: -4.451885223388672
    10. '`' → logprob: -4.576885223388672

Token 1864: ' skip' (ID: 16677)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.12384971231222153
    2. 'pass' → logprob: -2.498849630355835
    3. 'skip' → logprob: -3.498849630355835
    4. 'pay' → logprob: -6.373849868774414
    5. 'continue' → logprob: -6.873849868774414
    6. ' not' → logprob: -7.873849868774414
    7. 'wait' → logprob: -8.248849868774414
    8. 'sell' → logprob: -8.248849868774414
    9. ' pass' → logprob: -8.623849868774414
    10. '   ' → logprob: -8.998849868774414

Token 1865: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008845718577504158
    2. 'def' → logprob: -5.133845806121826
    3. '
' → logprob: -6.883845806121826
    4. '   ' → logprob: -7.133845806121826
    5. ',' → logprob: -7.633845806121826
    6. '```' → logprob: -8.383845329284668
    7. ')' → logprob: -9.258845329284668
    8. '        
' → logprob: -9.758845329284668
    9. '           ' → logprob: -9.883845329284668
    10. '#' → logprob: -10.758845329284668

Token 1866: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016957100888248533
    2. '```' → logprob: -9.12516975402832
    3. '
' → logprob: -10.00016975402832
    4. ',' → logprob: -12.00016975402832
    5. '           ' → logprob: -12.50016975402832
    6. '   ' → logprob: -13.00016975402832
    7. '        
' → logprob: -13.75016975402832
    8. '`' → logprob: -14.62516975402832
    9. '``' → logprob: -15.25016975402832
    10. ')' → logprob: -15.75016975402832

Token 1867: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015288250870071352
    2. '
' → logprob: -9.000152587890625
    3. '   ' → logprob: -10.750152587890625
    4. 'dp' → logprob: -12.250152587890625
    5. '```' → logprob: -13.375152587890625
    6. 'for' → logprob: -15.125152587890625
    7. '           ' → logprob: -15.375152587890625
    8. 'state' → logprob: -15.750152587890625
    9. '#' (adapté à ' #') → logprob: -15.875152587890625
    10. 'def' → logprob: -16.000152587890625

Token 1868: ' buying' (ID: 12398)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12030606716871262
    2. 'dp' → logprob: -2.3703060150146484
    3. 'for' → logprob: -4.370306015014648
    4. 'visited' → logprob: -6.370306015014648
    5. '
' → logprob: -6.995306015014648
    6. 'coins' → logprob: -7.120306015014648
    7. 'from' → logprob: -7.620306015014648
    8. 'coin' → logprob: -7.745306015014648
    9. '#' → logprob: -7.995306015014648
    10. 'state' → logprob: -7.995306015014648

Token 1869: ' changes' (ID: 6629)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9914427995681763
    2. '=' → logprob: -1.7414427995681763
    3. ':' → logprob: -2.3664426803588867
    4. '(self' → logprob: -2.9914426803588867
    5. ' or' → logprob: -3.3664426803588867
    6. '=True' → logprob: -3.7414426803588867
    7. ',' → logprob: -3.7414426803588867
    8. '<|end|>' → logprob: -3.8664426803588867
    9. '<|end|>' → logprob: -3.9914426803588867
    10. '(' → logprob: -4.116442680358887

Token 1870: ' coin' (ID: 22179)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5648645758628845
    2. 'coins' → logprob: -1.1898646354675293
    3. 'self' → logprob: -3.3148646354675293
    4. ' the' → logprob: -3.6898646354675293
    5. 'state' → logprob: -4.064864635467529
    6. 'coin' → logprob: -4.314864635467529
    7. ' coins' → logprob: -4.689864635467529
    8. '       ' → logprob: -4.814864635467529
    9. 'current' → logprob: -4.939864635467529
    10. '(self' → logprob: -6.439864635467529

Token 1871: ' counts' (ID: 28991)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.23038353025913239
    2. 'counts' → logprob: -2.1053836345672607
    3. '   ' → logprob: -3.4803836345672607
    4. '           ' → logprob: -4.230383396148682
    5. '       ' → logprob: -4.355383396148682
    6. ' counts' → logprob: -4.605383396148682
    7. '```' → logprob: -4.980383396148682
    8. 's' → logprob: -5.730383396148682
    9. 'count' → logprob: -6.480383396148682
    10. '_' → logprob: -7.230383396148682

Token 1872: ' based' (ID: 4122)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018515000119805336
    2. '```' → logprob: -5.018515110015869
    3. '   ' → logprob: -5.768515110015869
    4. '
' → logprob: -5.893515110015869
    5. ',' → logprob: -6.393515110015869
    6. 'def' → logprob: -6.518515110015869
    7. ')' → logprob: -7.393515110015869
    8. '           ' → logprob: -7.518515110015869
    9. ':' → logprob: -8.018514633178711
    10. '#' → logprob: -8.393514633178711

Token 1873: ' on' (ID: 402)
  Prédit: 'ased'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ased' → logprob: -0.5527908205986023
    2. '       ' → logprob: -1.802790880203247
    3. '           ' → logprob: -1.802790880203247
    4. '               ' → logprob: -3.802790880203247
    5. '```' → logprob: -4.302790641784668
    6. 'd' → logprob: -4.677790641784668
    7. 'on' → logprob: -4.802790641784668
    8. 'to' → logprob: -5.052790641784668
    9. ')' → logprob: -5.552790641784668
    10. '   ' → logprob: -5.677790641784668

Token 1874: ' payment' (ID: 9277)
  Prédit: 'payment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'payment' → logprob: -0.1772395819425583
    2. 'change' → logprob: -3.1772396564483643
    3. 'coins' → logprob: -3.1772396564483643
    4. 'the' → logprob: -3.9272396564483643
    5. 'coin' → logprob: -4.177239418029785
    6. ' payment' → logprob: -4.302239418029785
    7. '#' → logprob: -4.677239418029785
    8. 'price' → logprob: -5.552239418029785
    9. 'received' → logprob: -5.802239418029785
    10. 'purchase' → logprob: -6.427239418029785

Token 1875: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008141233585774899
    2. '
' → logprob: -6.383141040802002
    3. '   ' → logprob: -6.508141040802002
    4. '```' → logprob: -6.633141040802002
    5. '           ' → logprob: -7.008141040802002
    6. ',' → logprob: -7.133141040802002
    7. 'def' → logprob: -7.258141040802002
    8. ')' → logprob: -7.508141040802002
    9. '               ' → logprob: -9.38314151763916
    10. '#' → logprob: -9.38314151763916

Token 1876: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.03003532625734806
    2. ' change' → logprob: -3.5300352573394775
    3. '#' → logprob: -9.405035018920898
    4. '
' → logprob: -9.655035018920898
    5. 'received' → logprob: -10.030035018920898
    6. '   ' → logprob: -10.530035018920898
    7. 'receive' → logprob: -11.530035018920898
    8. ' #' → logprob: -11.530035018920898
    9. 'coin' → logprob: -11.905035018920898
    10. 'return' → logprob: -12.030035018920898

Token 1877: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03136157616972923
    2. '           ' → logprob: -4.6563615798950195
    3. '```' → logprob: -5.0313615798950195
    4. '   ' → logprob: -5.2813615798950195
    5. '
' → logprob: -5.6563615798950195
    6. '               ' → logprob: -6.4063615798950195
    7. ')' → logprob: -6.7813615798950195
    8. '        
' → logprob: -6.9063615798950195
    9. 'def' → logprob: -7.2813615798950195
    10. ',' → logprob: -7.6563615798950195

Token 1878: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00841398537158966
    2. '
' → logprob: -4.883413791656494
    3. '        
' → logprob: -7.633413791656494
    4. ',' → logprob: -8.758414268493652
    5. '   ' → logprob: -9.758414268493652
    6. '           ' → logprob: -10.883414268493652
    7. '```' → logprob: -10.883414268493652
    8. '    
' → logprob: -11.508414268493652
    9. ')' → logprob: -11.633414268493652
    10. ':' → logprob: -11.883414268493652

Token 1879: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001940040965564549
    2. '
' → logprob: -9.50019359588623
    3. '   ' → logprob: -10.37519359588623
    4. 'dp' → logprob: -10.37519359588623
    5. 'for' → logprob: -10.50019359588623
    6. 'from' → logprob: -11.37519359588623
    7. '```' → logprob: -12.50019359588623
    8. 'def' → logprob: -12.75019359588623
    9. 'import' → logprob: -12.75019359588623
    10. '#' → logprob: -12.87519359588623

Token 1880: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000206401280593127
    2. '   ' → logprob: -9.625205993652344
    3. '
' → logprob: -9.625205993652344
    4. '```' → logprob: -9.875205993652344
    5. '           ' → logprob: -12.000205993652344
    6. 'def' → logprob: -12.750205993652344
    7. 'from' → logprob: -13.000205993652344
    8. 'payment' → logprob: -13.375205993652344
    9. '        
' → logprob: -13.625205993652344
    10. '`' → logprob: -13.625205993652344

Token 1881: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4309651553630829
    2. 'for' → logprob: -1.3059651851654053
    3. 'index' → logprob: -4.305964946746826
    4. 'dp' → logprob: -4.430964946746826
    5. '#' (adapté à ' #') → logprob: -4.555964946746826
    6. 'coins' → logprob: -4.805964946746826
    7. 'shop' → logprob: -5.430964946746826
    8. 'current' → logprob: -5.555964946746826
    9. 'coin' → logprob: -5.680964946746826
    10. '   ' → logprob: -5.805964946746826

Token 1882: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11919195204973221
    2. 'def' → logprob: -2.494191884994507
    3. '
' → logprob: -4.244192123413086
    4. '   ' → logprob: -5.119192123413086
    5. 'dp' → logprob: -5.744192123413086
    6. 'visited' → logprob: -6.744192123413086
    7. 'if' → logprob: -6.994192123413086
    8. '#' → logprob: -7.369192123413086
    9. 'import' → logprob: -7.369192123413086
    10. 'coins' → logprob: -7.619192123413086

Token 1883: ' start' (ID: 1604)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4714360237121582
    2. '   ' → logprob: -1.3464360237121582
    3. '       ' → logprob: -2.971436023712158
    4. ' def' → logprob: -3.096436023712158
    5. 'continue' → logprob: -4.846436023712158
    6. '
' → logprob: -5.596436023712158
    7. ' continue' → logprob: -5.971436023712158
    8. 'import' → logprob: -6.846436023712158
    9. '```' → logprob: -7.346436023712158
    10. ' can' → logprob: -7.471436023712158

Token 1884: ' state' (ID: 2608)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.1501346081495285
    2. '       ' → logprob: -2.275134563446045
    3. 'with' → logprob: -3.900134563446045
    4. '=' → logprob: -5.275134563446045
    5. 'index' → logprob: -5.525134563446045
    6. ' from' → logprob: -5.900134563446045
    7. '   ' → logprob: -6.900134563446045
    8. ' with' → logprob: -7.275134563446045
    9. 'def' → logprob: -7.525134563446045
    10. 'at' → logprob: -8.150135040283203

Token 1885: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6315076947212219
    2. '=' → logprob: -1.3815076351165771
    3. '       ' → logprob: -1.8815076351165771
    4. 's' → logprob: -3.506507635116577
    5. 'from' → logprob: -4.881507873535156
    6. 'states' → logprob: -5.256507873535156
    7. '_queue' → logprob: -5.506507873535156
    8. '0' → logprob: -5.631507873535156
    9. '   ' → logprob: -5.881507873535156
    10. 'queue' → logprob: -6.006507873535156

Token 1886: ' ' (ID: 220)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.1734826564788818
    2. 'state' → logprob: -1.9234826564788818
    3. 'coins' → logprob: -1.9234826564788818
    4. 'states' → logprob: -1.9234826564788818
    5. 'dp' → logprob: -2.923482656478882
    6. 'from' → logprob: -3.048482656478882
    7. '       ' → logprob: -3.298482656478882
    8. 'coin' → logprob: -3.548482656478882
    9. 'shop' → logprob: -4.298482894897461
    10. 'curr' → logprob: -4.548482894897461

Token 1887: '0' (ID: 15)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.20223462581634521
    2. 'import' → logprob: -2.3272347450256348
    3. '0' → logprob: -2.9522347450256348
    4. '(' → logprob: -4.327234745025635
    5. 'states' → logprob: -5.452234745025635
    6. 'queue' → logprob: -5.827234745025635
    7. 'shop' → logprob: -5.952234745025635
    8. 'self' → logprob: -6.077234745025635
    9. 'state' → logprob: -6.202234745025635
    10. 'initial' → logprob: -6.327234745025635

Token 1888: 'th' (ID: 404)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32657188177108765
    2. ',' → logprob: -1.9515719413757324
    3. ' =' → logprob: -3.0765719413757324
    4. 'def' → logprob: -3.7015719413757324
    5. '       ' → logprob: -3.7015719413757324
    6. ':' → logprob: -5.201571941375732
    7. 'state' → logprob: -5.201571941375732
    8. '_state' → logprob: -5.326571941375732
    9. '```' → logprob: -5.326571941375732
    10. '.' → logprob: -5.576571941375732

Token 1889: ' shop' (ID: 9100)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7264052629470825
    2. 'shop' → logprob: -0.9764052629470825
    3. '_shop' → logprob: -2.476405143737793
    4. ' shop' → logprob: -3.226405143737793
    5. '(shop' → logprob: -5.851405143737793
    6. ')' → logprob: -5.976405143737793
    7. ' ,' → logprob: -5.976405143737793
    8. 'index' → logprob: -6.351405143737793
    9. '       ' → logprob: -6.476405143737793
    10. '_,' → logprob: -6.726405143737793

Token 1890: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004513550084084272
    2. '```' → logprob: -6.504513740539551
    3. '
' → logprob: -7.004513740539551
    4. '   ' → logprob: -7.004513740539551
    5. 'def' → logprob: -7.754513740539551
    6. '           ' → logprob: -8.12951374053955
    7. ',' → logprob: -8.75451374053955
    8. ')' → logprob: -9.62951374053955
    9. ':' → logprob: -10.25451374053955
    10. 'from' → logprob: -10.62951374053955

Token 1891: ' no' (ID: 860)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7567123174667358
    2. '(' → logprob: -1.0067123174667358
    3. 'coins' → logprob: -2.6317124366760254
    4. ' (' → logprob: -3.7567124366760254
    5. 'initial' → logprob: -3.8817124366760254
    6. 'current' → logprob: -4.131712436676025
    7. '(self' → logprob: -4.506712436676025
    8. '       ' → logprob: -4.756712436676025
    9. ' self' → logprob: -5.506712436676025
    10. ' coins' → logprob: -5.756712436676025

Token 1892: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.002622385509312153
    2. ' coins' → logprob: -6.252622604370117
    3. '_co' → logprob: -7.377622604370117
    4. 'co' → logprob: -10.752622604370117
    5. '   ' → logprob: -11.252622604370117
    6. '       ' → logprob: -11.502622604370117
    7. 'coin' → logprob: -11.627622604370117
    8. '-co' → logprob: -12.377622604370117
    9. 'Coins' → logprob: -13.252622604370117
    10. ' ' → logprob: -13.252622604370117

Token 1893: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025094160810112953
    2. '
' → logprob: -4.025094032287598
    3. ',' → logprob: -5.150094032287598
    4. '        
' → logprob: -8.650094032287598
    5. '```' → logprob: -8.650094032287598
    6. '   ' → logprob: -8.900094032287598
    7. ')' → logprob: -8.900094032287598
    8. 'def' → logprob: -9.150094032287598
    9. 'state' → logprob: -9.775094032287598
    10. 'dp' → logprob: -9.775094032287598

Token 1894: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5327956676483154
    2. 'visited' → logprob: -1.6577956676483154
    3. 'queue' → logprob: -2.9077956676483154
    4. '0' → logprob: -3.2827956676483154
    5. 'initial' → logprob: -3.4077956676483154
    6. '#' → logprob: -4.5327959060668945
    7. 'self' → logprob: -4.5327959060668945
    8. ' queue' → logprob: -5.0327959060668945
    9. 'stack' → logprob: -5.0327959060668945
    10. ',' → logprob: -5.1577959060668945

Token 1895: '0' (ID: 15)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.4955487251281738
    2. 'from' → logprob: -1.6205487251281738
    3. 'queue' → logprob: -1.8705487251281738
    4. 'states' → logprob: -2.245548725128174
    5. 'stack' → logprob: -2.495548725128174
    6. 'front' → logprob: -2.620548725128174
    7. 'visited' → logprob: -3.245548725128174
    8. '{' → logprob: -3.620548725128174
    9. 'to' → logprob: -4.120548725128174
    10. 'state' → logprob: -4.120548725128174

Token 1896: ' coins' (ID: 28969)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1170111894607544
    2. '       ' → logprob: -1.1170111894607544
    3. '
' → logprob: -1.3670111894607544
    4. '   ' → logprob: -4.367011070251465
    5. ',
' → logprob: -4.617011070251465
    6. ')' → logprob: -4.742011070251465
    7. ':
' → logprob: -4.867011070251465
    8. ':' → logprob: -4.867011070251465
    9. ' =' → logprob: -4.992011070251465
    10. '=' → logprob: -5.117011070251465

Token 1897: ' collected' (ID: 20480)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1437738686800003
    2. '
' → logprob: -2.6437737941741943
    3. ',' → logprob: -3.2687737941741943
    4. ' =' → logprob: -4.518774032592773
    5. '=' → logprob: -6.143774032592773
    6. 'state' → logprob: -6.643774032592773
    7. '   ' → logprob: -6.768774032592773
    8. '```' → logprob: -7.018774032592773
    9. ')' → logprob: -7.268774032592773
    10. ',
' → logprob: -7.518774032592773

Token 1898: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03642377629876137
    2. '
' → logprob: -4.286423683166504
    3. '```' → logprob: -4.661423683166504
    4. 'def' → logprob: -5.036423683166504
    5. 'dp' → logprob: -6.161423683166504
    6. '   ' → logprob: -6.161423683166504
    7. 'state' → logprob: -7.786423683166504
    8. 'from' → logprob: -8.286423683166504
    9. '``' → logprob: -8.536423683166504
    10. 'states' → logprob: -8.661423683166504

Token 1899: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001955990679562092
    2. '#' → logprob: -7.251955986022949
    3. ' ' → logprob: -7.626955986022949
    4. '       ' → logprob: -7.751955986022949
    5. 'expense' → logprob: -8.87695598602295
    6. '           ' → logprob: -9.75195598602295
    7. 'min' → logprob: -10.12695598602295
    8. 'and' → logprob: -10.87695598602295
    9. 'self' → logprob: -11.00195598602295
    10. '   ' → logprob: -11.62695598602295

Token 1900: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001014706795103848
    2. ' ' → logprob: -7.001014709472656
    3. 'expense' → logprob: -10.001014709472656
    4. 'min' → logprob: -10.876014709472656
    5. 'inf' → logprob: -11.376014709472656
    6. '#' → logprob: -12.376014709472656
    7. '   ' → logprob: -12.376014709472656
    8. '
' → logprob: -12.876014709472656
    9. ' expense' → logprob: -13.001014709472656
    10. 'INF' → logprob: -13.251014709472656

Token 1901: ' expense' (ID: 29361)
  Prédit: 'expense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expense' → logprob: -0.010262644849717617
    2. 'cost' → logprob: -5.635262489318848
    3. 'spent' → logprob: -5.760262489318848
    4. ' expense' → logprob: -6.635262489318848
    5. 'exp' → logprob: -7.010262489318848
    6. 'expenses' → logprob: -7.385262489318848
    7. '
' → logprob: -8.260262489318848
    8. 'coins' → logprob: -8.635262489318848
    9. 'paid' → logprob: -9.760262489318848
    10. '```' → logprob: -10.135262489318848

Token 1902: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03426505625247955
    2. '
' → logprob: -4.284265041351318
    3. 'def' → logprob: -4.409265041351318
    4. '```' → logprob: -5.409265041351318
    5. '   ' → logprob: -6.534265041351318
    6. 'dp' → logprob: -7.034265041351318
    7. 'from' → logprob: -8.034265518188477
    8. 'import' → logprob: -8.659265518188477
    9. ',' → logprob: -9.534265518188477
    10. '           ' → logprob: -9.659265518188477

Token 1903: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0042632464319467545
    2. '
' → logprob: -5.504263401031494
    3. '   ' → logprob: -9.254262924194336
    4. ',' → logprob: -10.379262924194336
    5. '        
' → logprob: -10.754262924194336
    6. '```' → logprob: -11.379262924194336
    7. 'def' → logprob: -12.004262924194336
    8. 'import' → logprob: -12.254262924194336
    9. '           ' → logprob: -12.504262924194336
    10. 'from' → logprob: -12.879262924194336

Token 1904: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04754984378814697
    2. 'dp' → logprob: -3.4225497245788574
    3. 'from' → logprob: -4.547549724578857
    4. 'import' → logprob: -6.797549724578857
    5. 'visited' → logprob: -7.172549724578857
    6. '
' → logprob: -7.797549724578857
    7. 'stack' → logprob: -8.047550201416016
    8. '   ' → logprob: -8.297550201416016
    9. 'memo' → logprob: -9.547550201416016
    10. 'def' → logprob: -9.547550201416016

Token 1905: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014561474381480366
    2. '
' → logprob: -9.37514591217041
    3. 'from' → logprob: -11.00014591217041
    4. 'def' → logprob: -11.50014591217041
    5. 'dp' → logprob: -11.50014591217041
    6. '   ' → logprob: -11.50014591217041
    7. '```' → logprob: -11.62514591217041
    8. 'import' → logprob: -13.50014591217041
    9. 'state' → logprob: -13.62514591217041
    10. '        
' → logprob: -14.75014591217041

Token 1906: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.301967591047287
    2. 'from' → logprob: -1.8019676208496094
    3. '       ' → logprob: -2.8019676208496094
    4. 'import' → logprob: -3.9269676208496094
    5. 'visited' → logprob: -4.551967620849609
    6. 'states' → logprob: -6.426967620849609
    7. 'queue' → logprob: -7.051967620849609
    8. 'memo' → logprob: -7.426967620849609
    9. 'state' → logprob: -7.551967620849609
    10. 'front' → logprob: -8.30196762084961

Token 1907: ' process' (ID: 2273)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.18784436583518982
    2. 'from' → logprob: -2.5628442764282227
    3. '       ' → logprob: -3.0628442764282227
    4. 'visited' → logprob: -3.6878442764282227
    5. 'stack' → logprob: -4.687844276428223
    6. 'queue' → logprob: -5.687844276428223
    7. 'memo' → logprob: -5.937844276428223
    8. 'def' → logprob: -6.062844276428223
    9. 'import' → logprob: -6.187844276428223
    10. 'states' → logprob: -6.937844276428223

Token 1908: ' each' (ID: 2454)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3431320786476135
    2. 'from' → logprob: -2.0931320190429688
    3. 'states' → logprob: -2.7181320190429688
    4. 'stack' → logprob: -3.3431320190429688
    5. '       ' → logprob: -3.7181320190429688
    6. 'queue' → logprob: -4.718132019042969
    7. 'state' → logprob: -4.843132019042969
    8. 'def' → logprob: -4.968132019042969
    9. 'current' → logprob: -5.343132019042969
    10. 'visited' → logprob: -5.593132019042969

Token 1909: ' shop' (ID: 9100)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.014421109110116959
    2. 'i' → logprob: -4.514420986175537
    3. 'index' → logprob: -6.014420986175537
    4. 'idx' → logprob: -8.389421463012695
    5. ' shop' → logprob: -8.764421463012695
    6. 'def' → logprob: -8.889421463012695
    7. 'price' → logprob: -9.264421463012695
    8. '   ' → logprob: -9.639421463012695
    9. '```' → logprob: -10.264421463012695
    10. 'for' → logprob: -10.514421463012695

Token 1910: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3165280222892761
    2. 'for' → logprob: -1.566528081893921
    3. 'i' → logprob: -3.566528081893921
    4. 'index' → logprob: -4.441527843475342
    5. '```' → logprob: -4.566527843475342
    6. ' for' → logprob: -5.941527843475342
    7. 'shop' → logprob: -5.941527843475342
    8. 'def' → logprob: -6.066527843475342
    9. 'idx' → logprob: -6.441527843475342
    10. '
' → logprob: -6.691527843475342

Token 1911: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009763598791323602
    2. ',' → logprob: -8.0009765625
    3. 'for' → logprob: -8.3759765625
    4. '   ' → logprob: -9.1259765625
    5. ' for' → logprob: -9.3759765625
    6. '```' → logprob: -9.3759765625
    7. '
' → logprob: -10.0009765625
    8. 'i' → logprob: -10.3759765625
    9. 'def' → logprob: -11.2509765625
    10. ' i' → logprob: -11.6259765625

Token 1912: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.183501293184236e-05
    2. 'i' → logprob: -10.00007152557373
    3. 'range' → logprob: -11.12507152557373
    4. ' ' → logprob: -11.62507152557373
    5. '   ' → logprob: -14.00007152557373
    6. 'def' → logprob: -14.25007152557373
    7. ' i' → logprob: -15.50007152557373
    8. 'index' → logprob: -16.000072479248047
    9. ' range' → logprob: -16.000072479248047
    10. '
' → logprob: -16.000072479248047

Token 1913: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.314625690924004e-05
    2. 'i' → logprob: -9.750073432922363
    3. ' ' → logprob: -12.000073432922363
    4. 'range' → logprob: -12.125073432922363
    5. '   ' → logprob: -14.000073432922363
    6. 'def' → logprob: -14.375073432922363
    7. 'self' → logprob: -14.500073432922363
    8. '
' → logprob: -14.750073432922363
    9. ' i' → logprob: -15.375073432922363
    10. '#' → logprob: -15.500073432922363

Token 1914: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.43019410967826843
    2. ' to' → logprob: -1.0551941394805908
    3. '
' → logprob: -7.305193901062012
    4. '       ' → logprob: -8.430193901062012
    5. '```' → logprob: -8.805193901062012
    6. ',' → logprob: -9.305193901062012
    7. '   ' → logprob: -9.430193901062012
    8. '=' → logprob: -9.555193901062012
    9. 't' → logprob: -10.305193901062012
    10. 'for' → logprob: -10.555193901062012

Token 1915: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2352385965641588e-05
    2. '
' → logprob: -11.625012397766113
    3. 'i' → logprob: -13.750012397766113
    4. ' self' → logprob: -14.000012397766113
    5. '```' → logprob: -14.375012397766113
    6. '       ' → logprob: -14.875012397766113
    7. 'n' → logprob: -15.250012397766113
    8. '   ' → logprob: -15.875012397766113
    9. '           ' → logprob: -16.875011444091797
    10. '(self' → logprob: -17.000011444091797

Token 1916: '-' (ID: 12)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20238672196865082
    2. ':
' → logprob: -2.3273866176605225
    3. ':' → logprob: -2.8273866176605225
    4. '   ' → logprob: -4.077386856079102
    5. '
' → logprob: -5.827386856079102
    6. '):
' → logprob: -6.202386856079102
    7. ',' → logprob: -6.702386856079102
    8. ' for' → logprob: -6.952386856079102
    9. 'for' → logprob: -7.077386856079102
    10. '        
' → logprob: -7.702386856079102

Token 1917: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000651197915431112
    2. 'i' → logprob: -8.000651359558105
    3. '```' → logprob: -9.125651359558105
    4. 'n' → logprob: -10.000651359558105
    5. 'class' → logprob: -10.125651359558105
    6. '=' → logprob: -10.375651359558105
    7. ':' → logprob: -10.875651359558105
    8. '
' → logprob: -11.125651359558105
    9. '-' → logprob: -11.250651359558105
    10. '>' → logprob: -11.875651359558105

Token 1918: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035597313195466995
    2. 'dp' → logprob: -4.410597324371338
    3. 'for' → logprob: -4.410597324371338
    4. '
' → logprob: -5.535597324371338
    5. '```' → logprob: -5.785597324371338
    6. 'state' → logprob: -7.035597324371338
    7. 'i' → logprob: -7.535597324371338
    8. ',' → logprob: -7.660597324371338
    9. 'current' → logprob: -8.41059684753418
    10. 'from' → logprob: -8.53559684753418

Token 1919: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020568605395965278
    2. 'for' → logprob: -9.375205993652344
    3. '   ' → logprob: -10.000205993652344
    4. '
' → logprob: -10.125205993652344
    5. ' for' → logprob: -11.125205993652344
    6. '           ' → logprob: -12.000205993652344
    7. ',' → logprob: -12.500205993652344
    8. '```' → logprob: -12.500205993652344
    9. 'dp' → logprob: -12.750205993652344
    10. 'import' → logprob: -13.375205993652344

Token 1920: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00030972150852903724
    2. 'dp' → logprob: -8.750309944152832
    3. '
' → logprob: -9.500309944152832
    4. '   ' → logprob: -10.500309944152832
    5. 'from' → logprob: -11.125309944152832
    6. 'state' → logprob: -11.250309944152832
    7. 'import' → logprob: -12.000309944152832
    8. 'for' → logprob: -12.125309944152832
    9. 'states' → logprob: -12.750309944152832
    10. '```' → logprob: -13.250309944152832

Token 1921: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3851700723171234
    2. 'for' → logprob: -1.6351701021194458
    3. 'dp' → logprob: -2.1351699829101562
    4. 'current' → logprob: -6.635169982910156
    5. ' for' → logprob: -7.010169982910156
    6. 'prev' → logprob: -7.135169982910156
    7. 'visited' → logprob: -7.135169982910156
    8. 'state' → logprob: -7.510169982910156
    9. '   ' → logprob: -7.635169982910156
    10. 'curr' → logprob: -8.010169982910156

Token 1922: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1791224330663681
    2. 'shop' → logprob: -2.1791224479675293
    3. ' i' → logprob: -3.4291224479675293
    4. ' shop' → logprob: -4.304122447967529
    5. 'each' → logprob: -6.429122447967529
    6. 'price' → logprob: -7.554122447967529
    7. '   ' → logprob: -7.679122447967529
    8. 'current' → logprob: -8.179121971130371
    9. '_i' → logprob: -8.179121971130371
    10. 'state' → logprob: -8.179121971130371

Token 1923: ' state' (ID: 2608)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.1072540283203125
    2. ' shop' → logprob: -3.1072540283203125
    3. 'i' → logprob: -3.2322540283203125
    4. ' i' → logprob: -5.3572540283203125
    5. 'state' → logprob: -5.4822540283203125
    6. '(shop' → logprob: -5.7322540283203125
    7. '   ' → logprob: -6.3572540283203125
    8. '       ' → logprob: -6.8572540283203125
    9. 'coin' → logprob: -7.2322540283203125
    10. ' (' → logprob: -7.6072540283203125

Token 1924: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5326479077339172
    2. ':' → logprob: -1.6576478481292725
    3. '       ' → logprob: -1.6576478481292725
    4. '           ' → logprob: -5.032648086547852
    5. '   ' → logprob: -5.407648086547852
    6. ' in' → logprob: -5.782648086547852
    7. '[i' → logprob: -6.032648086547852
    8. '```' → logprob: -6.032648086547852
    9. ' ,' → logprob: -6.157648086547852
    10. ':
' → logprob: -6.532648086547852

Token 1925: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02081793174147606
    2. '           ' → logprob: -3.895817995071411
    3. '
' → logprob: -9.520817756652832
    4. '   ' → logprob: -9.645817756652832
    5. '               ' → logprob: -9.895817756652832
    6. ',' → logprob: -10.770817756652832
    7. '        ' → logprob: -11.020817756652832
    8. '        
' → logprob: -11.395817756652832
    9. '      ' → logprob: -12.145817756652832
    10. ' ' → logprob: -12.145817756652832

Token 1926: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02744547836482525
    2. '           ' → logprob: -3.6524455547332764
    3. 'for' → logprob: -7.277445316314697
    4. ' for' → logprob: -8.777445793151855
    5. '
' → logprob: -9.277445793151855
    6. '   ' → logprob: -9.402445793151855
    7. '#' (adapté à ' #') → logprob: -10.027445793151855
    8. '               ' → logprob: -10.152445793151855
    9. ',' → logprob: -11.152445793151855
    10. 'def' → logprob: -11.402445793151855

Token 1927: '  ' (ID: 256)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46951568126678467
    2. '       ' → logprob: -1.5945156812667847
    3. 'for' → logprob: -2.469515800476074
    4. ' for' → logprob: -2.719515800476074
    5. '
' → logprob: -4.594515800476074
    6. '               ' → logprob: -5.344515800476074
    7. '   ' → logprob: -6.219515800476074
    8. '                   ' → logprob: -6.594515800476074
    9. '#' → logprob: -7.094515800476074
    10. '```' → logprob: -7.469515800476074

Token 1928: ' option' (ID: 5317)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6975967288017273
    2. '           ' → logprob: -1.322596788406372
    3. ' for' → logprob: -2.572596788406372
    4. '#' → logprob: -2.947596788406372
    5. '       ' → logprob: -3.447596788406372
    6. '
' → logprob: -3.822596788406372
    7. '   ' → logprob: -4.072596549987793
    8. 'if' → logprob: -4.447596549987793
    9. '               ' → logprob: -5.322596549987793
    10. '                   ' → logprob: -5.572596549987793

Token 1929: ' skip' (ID: 16677)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6129303574562073
    2. ':' → logprob: -1.4879302978515625
    3. '=' → logprob: -1.7379302978515625
    4. '       ' → logprob: -4.2379302978515625
    5. ':
' → logprob: -4.2379302978515625
    6. '           ' → logprob: -4.8629302978515625
    7. 'skip' → logprob: -5.8629302978515625
    8. ' to' → logprob: -5.9879302978515625
    9. ' (' → logprob: -6.6129302978515625
    10. '1' → logprob: -6.7379302978515625

Token 1930: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9589088559150696
    2. ':' → logprob: -1.7089087963104248
    3. '           ' → logprob: -2.083908796310425
    4. '(i' → logprob: -2.208908796310425
    5. ',i' → logprob: -2.958908796310425
    6. '=' → logprob: -3.708908796310425
    7. '       ' → logprob: -3.708908796310425
    8. '[i' → logprob: -3.708908796310425
    9. ' =' → logprob: -4.083909034729004
    10. 'i' → logprob: -4.458909034729004

Token 1931: ' same' (ID: 2684)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15012148022651672
    2. ' continue' → logprob: -2.9001214504241943
    3. ' for' → logprob: -4.150121688842773
    4. ' self' → logprob: -4.275121688842773
    5. '               ' → logprob: -4.525121688842773
    6. 'continue' → logprob: -4.650121688842773
    7. 'self' → logprob: -4.900121688842773
    8. '
' → logprob: -5.400121688842773
    9. 'for' → logprob: -5.650121688842773
    10. ' yield' → logprob: -5.900121688842773

Token 1932: ' coin' (ID: 22179)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7798985242843628
    2. 'state' → logprob: -1.0298985242843628
    3. '_state' → logprob: -2.9048986434936523
    4. ' state' → logprob: -3.4048986434936523
    5. '
' → logprob: -3.5298986434936523
    6. '       ' → logprob: -4.154898643493652
    7. '``' → logprob: -4.529898643493652
    8. ',' → logprob: -4.529898643493652
    9. '`' → logprob: -4.904898643493652
    10. '\n' → logprob: -5.279898643493652

Token 1933: ' counts' (ID: 28991)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18893861770629883
    2. '_counts' → logprob: -2.063938617706299
    3. '_' → logprob: -3.438938617706299
    4. '_tuple' → logprob: -5.563938617706299
    5. '_s' → logprob: -5.938938617706299
    6. ',' → logprob: -6.563938617706299
    7. '_set' → logprob: -6.938938617706299
    8. '       ' → logprob: -7.188938617706299
    9. '_,' → logprob: -7.438938617706299
    10. '   ' → logprob: -7.438938617706299

Token 1934: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4261258542537689
    2. '       ' → logprob: -2.1761257648468018
    3. '           ' → logprob: -2.8011257648468018
    4. '
' → logprob: -3.0511257648468018
    5. ':' → logprob: -3.5511257648468018
    6. '```' → logprob: -3.6761257648468018
    7. ',
' → logprob: -4.176126003265381
    8. '   ' → logprob: -4.301126003265381
    9. '+' → logprob: -4.926126003265381
    10. ':
' → logprob: -5.426126003265381

Token 1935: ' c' (ID: 274)
  Prédit: 'expense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expense' → logprob: -0.7699597477912903
    2. 'c' → logprob: -1.1449596881866455
    3. ' expense' → logprob: -2.3949596881866455
    4. ' c' → logprob: -2.8949596881866455
    5. 'max' → logprob: -4.269959926605225
    6. 'cost' → logprob: -4.394959926605225
    7. ' max' → logprob: -4.644959926605225
    8. 'same' → logprob: -5.144959926605225
    9. '   ' → logprob: -5.269959926605225
    10. '       ' → logprob: -5.394959926605225

Token 1936: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.05486919358372688
    2. 'o' → logprob: -3.5548691749572754
    3. '_' → logprob: -4.679869174957275
    4. 'ol' → logprob: -4.804869174957275
    5. ',' → logprob: -5.804869174957275
    6. 'oin' → logprob: -6.804869174957275
    7. '_col' → logprob: -7.554869174957275
    8. 'ost' → logprob: -7.679869174957275
    9. '   ' → logprob: -7.929869174957275
    10. 'urrent' → logprob: -8.054869651794434

Token 1937: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006586763076484203
    2. '+' → logprob: -5.88158655166626
    3. '_,' → logprob: -7.00658655166626
    4. ' +' → logprob: -7.38158655166626
    5. '           ' → logprob: -7.50658655166626
    6. ' ,' → logprob: -7.50658655166626
    7. '               ' → logprob: -8.881587028503418
    8. ',
' → logprob: -9.131587028503418
    9. '```' → logprob: -9.131587028503418
    10. ')' → logprob: -9.256587028503418

Token 1938: ' expense' (ID: 29361)
  Prédit: 'expense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expense' → logprob: -0.01497766375541687
    2. ' expense' → logprob: -4.38997745513916
    3. 'e' → logprob: -6.63997745513916
    4. 'exp' → logprob: -6.88997745513916
    5. ' ' → logprob: -10.51497745513916
    6. '  ' → logprob: -10.63997745513916
    7. 'expenses' → logprob: -10.63997745513916
    8. '   ' → logprob: -10.88997745513916
    9. ' e' → logprob: -11.01497745513916
    10. 'min' → logprob: -12.26497745513916

Token 1939: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9258988499641418
    2. '       ' → logprob: -1.675898790359497
    3. '```' → logprob: -1.800898790359497
    4. ',' → logprob: -1.925898790359497
    5. '=' → logprob: -3.550898790359497
    6. ':' → logprob: -3.550898790359497
    7. '               ' → logprob: -4.050899028778076
    8. '+' → logprob: -4.550899028778076
    9. '
' → logprob: -5.050899028778076
    10. '                   ' → logprob: -6.050899028778076

Token 1940: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14128834009170532
    2. '           ' → logprob: -2.8912882804870605
    3. '#' → logprob: -3.3912882804870605
    4. '   ' → logprob: -4.3912882804870605
    5. ':' → logprob: -4.5162882804870605
    6. ',' → logprob: -5.1412882804870605
    7. '```' → logprob: -5.3912882804870605
    8. '
' → logprob: -5.6412882804870605
    9. ':
' → logprob: -6.7662882804870605
    10. '\' → logprob: -7.0162882804870605

Token 1941: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2744782865047455
    2. '#' (adapté à ' #') → logprob: -2.0244781970977783
    3. '           ' → logprob: -2.3994781970977783
    4. 'for' → logprob: -4.649478435516357
    5. '
' → logprob: -5.024478435516357
    6. '               ' → logprob: -8.1494779586792
    7. ' for' → logprob: -8.2744779586792
    8. '   ' → logprob: -8.3994779586792
    9. '#
' → logprob: -9.2744779586792
    10. ',' → logprob: -9.8994779586792

Token 1942: '  ' (ID: 256)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.49680301547050476
    2. '       ' → logprob: -1.1218030452728271
    3. '           ' → logprob: -3.246803045272827
    4. ',' → logprob: -4.746802806854248
    5. ':' → logprob: -4.871802806854248
    6. 'for' → logprob: -5.746802806854248
    7. '```' → logprob: -5.871802806854248
    8. '
' → logprob: -6.496802806854248
    9. ' for' → logprob: -7.246802806854248
    10. ':
' → logprob: -7.746802806854248

Token 1943: ' option' (ID: 5317)
  Prédit: 'buy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'buy' → logprob: -0.3945649266242981
    2. 'for' → logprob: -2.2695648670196533
    3. 'pay' → logprob: -3.0195648670196533
    4. '#' → logprob: -3.1445648670196533
    5. '  ' → logprob: -3.1445648670196533
    6. 'payment' → logprob: -3.5195648670196533
    7. '   ' → logprob: -3.7695648670196533
    8. ' ' → logprob: -4.644565105438232
    9. '       ' → logprob: -5.519565105438232
    10. 'process' → logprob: -6.019565105438232

Token 1944: ' buy' (ID: 3877)
  Prédit: 'buy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buy' → logprob: -0.00030805266578681767
    2. ' buy' → logprob: -8.1253080368042
    3. 'pay' → logprob: -11.8753080368042
    4. '   ' → logprob: -13.3753080368042
    5. ' ' → logprob: -14.0003080368042
    6. '#' → logprob: -14.5003080368042
    7. 'continue' → logprob: -14.7503080368042
    8. '  ' → logprob: -14.7503080368042
    9. ':' → logprob: -15.0003080368042
    10. '_buy' → logprob: -15.1253080368042

Token 1945: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29026827216148376
    2. '       ' → logprob: -2.5402681827545166
    3. ':
' → logprob: -2.6652681827545166
    4. '(i' → logprob: -2.6652681827545166
    5. '           ' → logprob: -4.665268421173096
    6. '(self' → logprob: -5.290268421173096
    7. ' =' → logprob: -5.415268421173096
    8. ',' → logprob: -5.665268421173096
    9. '
' → logprob: -5.665268421173096
    10. '=' → logprob: -5.790268421173096

Token 1946: ' try' (ID: 2075)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3522002696990967
    2. 'price' → logprob: -1.3522002696990967
    3. '           ' → logprob: -1.7272002696990967
    4. 'for' → logprob: -2.1022002696990967
    5. 'prices' → logprob: -2.1022002696990967
    6. ' for' → logprob: -3.7272002696990967
    7. ' prices' → logprob: -4.852200508117676
    8. ' price' → logprob: -4.852200508117676
    9. '
' → logprob: -5.102200508117676
    10. '#' → logprob: -5.352200508117676

Token 1947: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.36596766114234924
    2. 'to' → logprob: -1.8659676313400269
    3. '           ' → logprob: -2.8659677505493164
    4. 'payment' → logprob: -3.9909677505493164
    5. '               ' → logprob: -4.240967750549316
    6. '       ' → logprob: -4.615967750549316
    7. 'pay' → logprob: -4.615967750549316
    8. 'each' → logprob: -4.615967750549316
    9. '                   ' → logprob: -5.240967750549316
    10. ' to' → logprob: -5.240967750549316

Token 1948: ' payment' (ID: 9277)
  Prédit: 'payment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'payment' → logprob: -0.3398369252681732
    2. '_payment' → logprob: -1.5898369550704956
    3. 'possible' → logprob: -2.964836835861206
    4. '       ' → logprob: -5.464837074279785
    5. '_coin' → logprob: -5.464837074279785
    6. '   ' → logprob: -5.839837074279785
    7. 'options' → logprob: -5.964837074279785
    8. 'available' → logprob: -6.214837074279785
    9. 'coin' → logprob: -6.214837074279785
    10. 'coins' → logprob: -6.339837074279785

Token 1949: ' methods' (ID: 7933)
  Prédit: '_options'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_options' → logprob: -0.26018282771110535
    2. 'options' → logprob: -1.7601828575134277
    3. ' options' → logprob: -3.8851828575134277
    4. '       ' → logprob: -4.385182857513428
    5. '           ' → logprob: -5.260182857513428
    6. '_option' → logprob: -5.635182857513428
    7. '_methods' → logprob: -5.885182857513428
    8. '               ' → logprob: -6.135182857513428
    9. '   ' → logprob: -6.135182857513428
    10. ',' → logprob: -6.510182857513428

Token 1950: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17300379276275635
    2. '               ' → logprob: -2.673003673553467
    3. '           ' → logprob: -2.798003673553467
    4. '                   ' → logprob: -4.173003673553467
    5. '                       ' → logprob: -5.048003673553467
    6. '```' → logprob: -5.923003673553467
    7. ':' → logprob: -6.298003673553467
    8. ',' → logprob: -7.173003673553467
    9. '                           ' → logprob: -7.548003673553467
    10. 'class' → logprob: -8.923004150390625

Token 1951: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19489143788814545
    2. '           ' → logprob: -2.0698914527893066
    3. '               ' → logprob: -3.9448914527893066
    4. '#' → logprob: -4.069891452789307
    5. '                   ' → logprob: -5.069891452789307
    6. '                       ' → logprob: -5.819891452789307
    7. 'for' → logprob: -6.444891452789307
    8. ' for' → logprob: -6.694891452789307
    9. ',' → logprob: -7.069891452789307
    10. '   ' → logprob: -7.444891452789307

Token 1952: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2794937491416931
    2. 'for' → logprob: -2.154493808746338
    3. '#' (adapté à ' #') → logprob: -2.654493808746338
    4. '           ' → logprob: -3.154493808746338
    5. ' for' → logprob: -5.029493808746338
    6. '               ' → logprob: -5.154493808746338
    7. '                   ' → logprob: -6.654493808746338
    8. '```' → logprob: -7.529493808746338
    9. '                       ' → logprob: -8.65449333190918
    10. '   ' → logprob: -8.65449333190918

Token 1953: '      ' (ID: 1699)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3325467109680176
    2. '       ' → logprob: -1.3325467109680176
    3. '           ' → logprob: -1.5825467109680176
    4. 'for' → logprob: -2.5825467109680176
    5. '                   ' → logprob: -2.5825467109680176
    6. '               ' → logprob: -2.7075467109680176
    7. ' for' → logprob: -4.207546710968018
    8. '                       ' → logprob: -4.457546710968018
    9. '   ' → logprob: -5.582546710968018
    10. ' #' → logprob: -5.707546710968018

Token 1954: ' subtract' (ID: 71973)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8482214212417603
    2. '#' → logprob: -1.0982214212417603
    3. 'price' → logprob: -2.8482213020324707
    4. '                   ' → logprob: -3.5982213020324707
    5. '       ' → logprob: -3.7232213020324707
    6. ' for' → logprob: -3.8482213020324707
    7. 'coin' → logprob: -4.098221302032471
    8. 'coins' → logprob: -4.098221302032471
    9. 'change' → logprob: -4.223221302032471
    10. '                       ' → logprob: -4.223221302032471

Token 1955: ' coins' (ID: 28969)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.10559828579425812
    2. 'coins' → logprob: -3.230598211288452
    3. ' price' → logprob: -4.105598449707031
    4. '1' → logprob: -4.230598449707031
    5. 'self' → logprob: -4.980598449707031
    6. 'payment' → logprob: -5.730598449707031
    7. '                   ' → logprob: -6.230598449707031
    8. 'coin' → logprob: -6.230598449707031
    9. ' coins' → logprob: -6.230598449707031
    10. 'the' → logprob: -6.480598449707031

Token 1956: ' used' (ID: 2061)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.2067563235759735
    2. 'used' → logprob: -2.581756353378296
    3. '```' → logprob: -2.956756353378296
    4. '           ' → logprob: -4.331756114959717
    5. ',' → logprob: -4.581756114959717
    6. '       ' → logprob: -4.956756114959717
    7. 'from' → logprob: -5.081756114959717
    8. '_' → logprob: -5.331756114959717
    9. '               ' → logprob: -5.456756114959717
    10. '   ' → logprob: -6.206756114959717

Token 1957: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6483616232872009
    2. '```' → logprob: -1.6483616828918457
    3. ',' → logprob: -2.2733616828918457
    4. '                   ' → logprob: -3.2733616828918457
    5. '_used' → logprob: -3.3983616828918457
    6. '           ' → logprob: -3.7733616828918457
    7. ' used' → logprob: -4.273361682891846
    8. '`' → logprob: -4.648361682891846
    9. '_' → logprob: -5.023361682891846
    10. ' for' → logprob: -5.023361682891846

Token 1958: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.19102632999420166
    2. ' add' → logprob: -1.8160263299942017
    3. '       ' → logprob: -5.441026210784912
    4. ',' → logprob: -6.941026210784912
    5. '```' → logprob: -7.066026210784912
    6. '#' → logprob: -7.441026210784912
    7. '        ' → logprob: -7.566026210784912
    8. '         ' → logprob: -7.691026210784912
    9. '``' → logprob: -7.816026210784912
    10. 'increase' → logprob: -8.06602668762207

Token 1959: ' coins' (ID: 28969)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.4443092346191406
    2. ' change' → logprob: -1.8193092346191406
    3. 'coins' → logprob: -1.8193092346191406
    4. ' coins' → logprob: -3.4443092346191406
    5. 'returned' → logprob: -7.819309234619141
    6. 'coin' → logprob: -8.06930923461914
    7. '       ' → logprob: -8.19430923461914
    8. '   ' → logprob: -8.31930923461914
    9. 'received' → logprob: -8.69430923461914
    10. '(change' → logprob: -9.19430923461914

Token 1960: ' from' (ID: 591)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.654664158821106
    2. '_' → logprob: -1.029664158821106
    3. '```' → logprob: -2.5296640396118164
    4. '       ' → logprob: -3.6546640396118164
    5. '           ' → logprob: -5.654664039611816
    6. '   ' → logprob: -5.904664039611816
    7. '``' → logprob: -6.279664039611816
    8. 'used' → logprob: -6.404664039611816
    9. '`' → logprob: -6.529664039611816
    10. ',' → logprob: -6.779664039611816

Token 1961: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.0025742328725755215
    2. ' change' → logprob: -6.002574443817139
    3. 'payment' → logprob: -9.87757396697998
    4. '   ' → logprob: -11.25257396697998
    5. '(change' → logprob: -11.87757396697998
    6. '```' → logprob: -11.87757396697998
    7. ' ' → logprob: -12.62757396697998
    8. '       ' → logprob: -12.87757396697998
    9. '	change' → logprob: -12.87757396697998
    10. '_change' → logprob: -13.00257396697998

Token 1962: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10753379017114639
    2. '           ' → logprob: -2.9825336933135986
    3. '               ' → logprob: -4.107533931732178
    4. '```' → logprob: -4.357533931732178
    5. '                   ' → logprob: -4.732533931732178
    6. ',' → logprob: -5.232533931732178
    7. '                       ' → logprob: -6.357533931732178
    8. '
' → logprob: -6.607533931732178
    9. '(' → logprob: -7.357533931732178
    10. '+' → logprob: -7.357533931732178

Token 1963: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08177145570516586
    2. '       ' → logprob: -2.5817713737487793
    3. '           ' → logprob: -7.331771373748779
    4. '```' → logprob: -7.331771373748779
    5. 'and' → logprob: -7.706771373748779
    6. '               ' → logprob: -8.331771850585938
    7. ' #' → logprob: -8.456771850585938
    8. ' and' → logprob: -8.456771850585938
    9. 'return' → logprob: -9.331771850585938
    10. ',' → logprob: -9.831771850585938

Token 1964: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.18528541922569275
    2. '       ' → logprob: -1.8102854490280151
    3. '           ' → logprob: -6.310285568237305
    4. '```' → logprob: -6.310285568237305
    5. '               ' → logprob: -7.185285568237305
    6. '                   ' → logprob: -8.310285568237305
    7. ' #' → logprob: -8.435285568237305
    8. '                       ' → logprob: -8.560285568237305
    9. 'and' → logprob: -9.060285568237305
    10. '   ' → logprob: -9.810285568237305

Token 1965: '      ' (ID: 1699)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09215892106294632
    2. '       ' → logprob: -2.4671590328216553
    3. '           ' → logprob: -6.967158794403076
    4. 'and' → logprob: -8.092159271240234
    5. 'return' → logprob: -8.342159271240234
    6. ' #' → logprob: -8.717159271240234
    7. '               ' → logprob: -8.842159271240234
    8. '   ' → logprob: -8.842159271240234
    9. 'def' → logprob: -9.092159271240234
    10. '```' → logprob: -9.217159271240234

Token 1966: ' increment' (ID: 24032)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16565261781215668
    2. 'update' → logprob: -2.9156525135040283
    3. '       ' → logprob: -3.7906525135040283
    4. 'calculate' → logprob: -4.540652751922607
    5. 'compute' → logprob: -4.540652751922607
    6. 'keep' → logprob: -5.290652751922607
    7. 'store' → logprob: -5.415652751922607
    8. 'coin' → logprob: -5.540652751922607
    9. 'price' → logprob: -5.790652751922607
    10. 'count' → logprob: -5.915652751922607

Token 1967: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07310391217470169
    2. 'count' → logprob: -2.948103904724121
    3. 'col' → logprob: -4.823103904724121
    4. '500' → logprob: -5.948103904724121
    5. 'coins' → logprob: -6.573103904724121
    6. 'self' → logprob: -6.948103904724121
    7. 'received' → logprob: -7.198103904724121
    8. '   ' → logprob: -7.573103904724121
    9. 'coin' → logprob: -7.573103904724121
    10. ' c' → logprob: -7.823103904724121

Token 1968: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.4923742711544037
    2. 'oin' → logprob: -2.4923741817474365
    3. 'o' → logprob: -2.6173741817474365
    4. 'ount' → logprob: -3.2423741817474365
    5. '       ' → logprob: -3.4923741817474365
    6. '_' → logprob: -3.4923741817474365
    7. '5' → logprob: -3.7423741817474365
    8. 'oints' → logprob: -3.8673741817474365
    9. '   ' → logprob: -4.117374420166016
    10. 'n' → logprob: -4.242374420166016

Token 1969: ' coins' (ID: 28969)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006733965128660202
    2. '           ' → logprob: -5.5067338943481445
    3. '               ' → logprob: -6.6317338943481445
    4. '```' → logprob: -8.006733894348145
    5. '                   ' → logprob: -8.381733894348145
    6. ',' → logprob: -8.506733894348145
    7. '   ' → logprob: -8.631733894348145
    8. '                       ' → logprob: -9.381733894348145
    9. ')' → logprob: -10.006733894348145
    10. '
' → logprob: -10.131733894348145

Token 1970: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05494818836450577
    2. ',' → logprob: -4.179948329925537
    3. '
' → logprob: -4.179948329925537
    4. '           ' → logprob: -4.554948329925537
    5. '```' → logprob: -5.679948329925537
    6. ':
' → logprob: -6.679948329925537
    7. '               ' → logprob: -6.679948329925537
    8. ':' → logprob: -6.804948329925537
    9. '(' → logprob: -7.429948329925537
    10. '   ' → logprob: -7.554948329925537

Token 1971: ' number' (ID: 2086)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.49393197894096375
    2. 'count' → logprob: -0.9939320087432861
    3. '(change' → logprob: -5.118931770324707
    4. ' change' → logprob: -5.368931770324707
    5. 'payment' → logprob: -6.243931770324707
    6. 'result' → logprob: -6.368931770324707
    7. 'results' → logprob: -6.493931770324707
    8. ' count' → logprob: -6.743931770324707
    9. '1' → logprob: -7.243931770324707
    10. 'coin' → logprob: -7.868931770324707

Token 1972: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5853491425514221
    2. '           ' → logprob: -1.5853490829467773
    3. '               ' → logprob: -2.4603490829467773
    4. ',' → logprob: -3.0853490829467773
    5. '                   ' → logprob: -3.7103490829467773
    6. '   ' → logprob: -4.210349082946777
    7. ':' → logprob: -4.710349082946777
    8. '_' → logprob: -4.960349082946777
    9. '=' → logprob: -4.960349082946777
    10. '+' → logprob: -5.085349082946777

Token 1973: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.04925144463777542
    2. 'change' → logprob: -4.174251556396484
    3. 'coins' → logprob: -4.549251556396484
    4. ' ' → logprob: -5.049251556396484
    5. 'received' → logprob: -5.049251556396484
    6. 'used' → logprob: -5.299251556396484
    7. '```' → logprob: -7.049251556396484
    8. ' coins' → logprob: -7.424251556396484
    9. 'returned' → logprob: -7.424251556396484
    10. 'payment' → logprob: -7.924251556396484

Token 1974: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.019260162487626076
    2. 'received' → logprob: -4.394259929656982
    3. 'coins' → logprob: -6.519259929656982
    4. '```' → logprob: -6.769259929656982
    5. 'returned' → logprob: -6.894259929656982
    6. 'change' → logprob: -7.269259929656982
    7. 'payment' → logprob: -7.394259929656982
    8. 'new' → logprob: -7.894259929656982
    9. '
' → logprob: -8.26926040649414
    10. 'used' → logprob: -8.64426040649414

Token 1975: '-y' (ID: 18102)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.31878662109375
    2. '               ' → logprob: -1.44378662109375
    3. '       ' → logprob: -1.44378662109375
    4. ',' → logprob: -2.69378662109375
    5. '                   ' → logprob: -2.69378662109375
    6. '                       ' → logprob: -3.56878662109375
    7. ')' → logprob: -3.94378662109375
    8. '_' → logprob: -4.44378662109375
    9. '```' → logprob: -4.69378662109375
    10. '[' → logprob: -4.81878662109375

Token 1976: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.004230358637869358
    2. '-en' → logprob: -5.504230499267578
    3. '```' → logprob: -9.879230499267578
    4. '   ' → logprob: -11.379230499267578
    5. 'coins' → logprob: -11.504230499267578
    6. ' coins' → logprob: -11.504230499267578
    7. '=en' → logprob: -11.629230499267578
    8. '
' → logprob: -12.004230499267578
    9. '#' → logprob: -12.129230499267578
    10. 'coin' → logprob: -12.254230499267578

Token 1977: ' coins' (ID: 28969)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2647377252578735
    2. '           ' → logprob: -1.6397377252578735
    3. 'coins' → logprob: -1.6397377252578735
    4. '               ' → logprob: -2.514737606048584
    5. '   ' → logprob: -3.139737606048584
    6. 'used' → logprob: -3.514737606048584
    7. '_' → logprob: -3.639737606048584
    8. '_used' → logprob: -3.764737606048584
    9. ' coins' → logprob: -4.014737606048584
    10. '```' → logprob: -4.139737606048584

Token 1978: ' received' (ID: 6100)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04463977366685867
    2. '           ' → logprob: -3.919639825820923
    3. '
' → logprob: -5.044639587402344
    4. ',' → logprob: -5.169639587402344
    5. '               ' → logprob: -5.794639587402344
    6. ':' → logprob: -5.919639587402344
    7. ':
' → logprob: -6.919639587402344
    8. '                   ' → logprob: -7.044639587402344
    9. '   ' → logprob: -7.419639587402344
    10. '```' → logprob: -7.419639587402344

Token 1979: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04611917585134506
    2. '           ' → logprob: -3.921119213104248
    3. '               ' → logprob: -4.546119213104248
    4. '                   ' → logprob: -5.421119213104248
    5. '
' → logprob: -5.546119213104248
    6. ',' → logprob: -6.546119213104248
    7. '```' → logprob: -6.671119213104248
    8. '   ' → logprob: -7.421119213104248
    9. '                       ' → logprob: -7.546119213104248
    10. ')' → logprob: -7.796119213104248

Token 1980: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.00015264409012161195
    2. ' change' → logprob: -9.000152587890625
    3. 'payment' → logprob: -10.750152587890625
    4. '   ' → logprob: -12.750152587890625
    5. 'the' → logprob: -13.625152587890625
    6. '#' → logprob: -13.875152587890625
    7. '
' → logprob: -14.125152587890625
    8. '       ' → logprob: -14.875152587890625
    9. '_change' → logprob: -15.125152587890625
    10. '     ' → logprob: -15.750152587890625

Token 1981: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03683967888355255
    2. '               ' → logprob: -4.286839485168457
    3. '           ' → logprob: -4.536839485168457
    4. '                   ' → logprob: -5.161839485168457
    5. '
' → logprob: -6.411839485168457
    6. '                       ' → logprob: -6.786839485168457
    7. ',' → logprob: -7.286839485168457
    8. '   ' → logprob: -7.536839485168457
    9. '```' → logprob: -7.911839485168457
    10. '                           ' → logprob: -8.286839485168457

Token 1982: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035095494240522385
    2. '
' → logprob: -4.285095691680908
    3. '           ' → logprob: -4.535095691680908
    4. ',' → logprob: -6.035095691680908
    5. '               ' → logprob: -6.035095691680908
    6. '        
' → logprob: -6.785095691680908
    7. '                   ' → logprob: -6.910095691680908
    8. '   ' → logprob: -7.035095691680908
    9. ':' → logprob: -7.160095691680908
    10. '```' → logprob: -8.41009521484375

Token 1983: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006559623870998621
    2. '```' → logprob: -8.375656127929688
    3. '           ' → logprob: -8.750656127929688
    4. '   ' → logprob: -9.000656127929688
    5. 'def' → logprob: -9.250656127929688
    6. '
' → logprob: -11.250656127929688
    7. 'next' → logprob: -12.375656127929688
    8. '        
' → logprob: -12.500656127929688
    9. 'class' → logprob: -12.500656127929688
    10. 'import' → logprob: -12.625656127929688

Token 1984: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.009953462518751621
    2. 'heap' → logprob: -4.759953498840332
    3. 'copy' → logprob: -7.509953498840332
    4. 'math' → logprob: -7.759953498840332
    5. 'typing' → logprob: -8.759953498840332
    6. 'fun' → logprob: -9.134953498840332
    7. 'it' → logprob: -9.384953498840332
    8. 'sys' → logprob: -12.009953498840332
    9. 'operator' → logprob: -12.009953498840332
    10. '__' → logprob: -13.384953498840332

Token 1985: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4564109146595001
    2. 'import' → logprob: -1.3314108848571777
    3. 'from' → logprob: -3.2064108848571777
    4. '```' → logprob: -3.9564108848571777
    5. '[' → logprob: -4.831410884857178
    6. '[
' → logprob: -4.956410884857178
    7. 'ertools' → logprob: -5.331410884857178
    8. '.deepcopy' → logprob: -5.956410884857178
    9. 'def' → logprob: -6.456410884857178
    10. '.from' → logprob: -6.581410884857178

Token 1986: ' defaultdict' (ID: 107098)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0013095251051709056
    2. 'default' → logprob: -6.751309394836426
    3. ' deque' → logprob: -9.501309394836426
    4. 'collections' → logprob: -10.001309394836426
    5. ' defaultdict' → logprob: -12.001309394836426
    6. '```' → logprob: -12.251309394836426
    7. 'import' → logprob: -12.376309394836426
    8. '
' → logprob: -13.001309394836426
    9. '   ' → logprob: -13.626309394836426
    10. 'de' → logprob: -14.751309394836426

Token 1987: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38599294424057007
    2. 'dp' → logprob: -1.5109930038452148
    3. '
' → logprob: -3.135993003845215
    4. 'states' → logprob: -3.260993003845215
    5. 'def' → logprob: -5.760993003845215
    6. 'state' → logprob: -6.010993003845215
    7. 'class' → logprob: -6.010993003845215
    8. '   ' → logprob: -6.010993003845215
    9. 'current' → logprob: -6.260993003845215
    10. '```' → logprob: -6.260993003845215

Token 1988: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0002622894535306841
    2. ' deque' → logprob: -8.250262260437012
    3. 'heap' → logprob: -14.500262260437012
    4. '```' → logprob: -15.125262260437012
    5. 'de' → logprob: -15.375262260437012
    6. '
' → logprob: -16.250263214111328
    7. 'collections' → logprob: -18.250263214111328
    8. 'queue' → logprob: -18.750263214111328
    9. '   ' → logprob: -19.125263214111328
    10. 'Deque' → logprob: -20.125263214111328

Token 1989: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4234663248062134
    2. '
' → logprob: -1.1734663248062134
    3. 'dp' → logprob: -3.798466205596924
    4. 'queue' → logprob: -5.423466205596924
    5. 'states' → logprob: -6.048466205596924
    6. 'def' → logprob: -6.173466205596924
    7. '   ' → logprob: -7.048466205596924
    8. 'state' → logprob: -7.298466205596924
    9. '```' → logprob: -7.673466205596924
    10. ',' → logprob: -7.798466205596924

Token 1990: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5864577889442444
    2. 'dp' → logprob: -1.0864577293395996
    3. 'queue' → logprob: -2.8364577293395996
    4. 'states' → logprob: -4.4614577293396
    5. 'def' → logprob: -4.9614577293396
    6. '
' → logprob: -5.2114577293396
    7. 'visited' → logprob: -5.3364577293396
    8. 'state' → logprob: -5.3364577293396
    9. '   ' → logprob: -5.8364577293396
    10. '```' → logprob: -5.8364577293396

Token 1991: ' current' (ID: 2208)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.022471340373158455
    2. 'states' → logprob: -4.1474714279174805
    3. 'queue' → logprob: -6.1474714279174805
    4. '   ' → logprob: -6.6474714279174805
    5. 'best' → logprob: -6.8974714279174805
    6. 'state' → logprob: -7.8974714279174805
    7. 'visited' → logprob: -7.8974714279174805
    8. '       ' → logprob: -8.02247142791748
    9. 'max' → logprob: -9.02247142791748
    10. 'current' (adapté à ' current') → logprob: -9.02247142791748

Token 1992: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.0021318255458027124
    2. '_state' → logprob: -6.502131938934326
    3. '_' → logprob: -8.627131462097168
    4. '_dp' → logprob: -8.752131462097168
    5. '=' → logprob: -9.377131462097168
    6. ' =' → logprob: -9.627131462097168
    7. '_levels' → logprob: -9.752131462097168
    8. '_level' → logprob: -10.627131462097168
    9. '_layer' → logprob: -10.627131462097168
    10. 'States' → logprob: -11.877131462097168

Token 1993: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142912864685059
    2. '=' → logprob: -1.7014291286468506
    3. '={}' → logprob: -11.20142936706543
    4. '=[]' → logprob: -14.45142936706543
    5. ')' → logprob: -14.70142936706543
    6. '       ' → logprob: -15.57642936706543
    7. '={' → logprob: -15.57642936706543
    8. '={'' → logprob: -16.07642936706543
    9. '={}
' → logprob: -16.32642936706543
    10. ',' → logprob: -16.32642936706543

Token 1994: ' {}
' (ID: 11421)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.014378677122294903
    2. 'default' → logprob: -4.264378547668457
    3. '{}
' → logprob: -9.014378547668457
    4. ' {(' → logprob: -9.639378547668457
    5. '   ' → logprob: -11.639378547668457
    6. '{}' → logprob: -11.764378547668457
    7. '{
' → logprob: -12.014378547668457
    8. ' {' → logprob: -13.139378547668457
    9. ' defaultdict' → logprob: -13.764378547668457
    10. 'dict' → logprob: -14.264378547668457

Token 1995: '       ' (ID: 309)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.1028764620423317
    2. 'for' → logprob: -2.7278764247894287
    3. '       ' → logprob: -3.4778764247894287
    4. '{' → logprob: -7.477876663208008
    5. ' for' → logprob: -8.477876663208008
    6. '```' → logprob: -8.727876663208008
    7. '=' → logprob: -8.852876663208008
    8. ' current' → logprob: -8.852876663208008
    9. '[current' → logprob: -9.852876663208008
    10. '=current' → logprob: -9.852876663208008

Token 1996: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.0015304554253816605
    2. '       ' → logprob: -6.751530647277832
    3. 'for' → logprob: -8.251530647277832
    4. '#' → logprob: -9.376530647277832
    5. 'key' → logprob: -11.876530647277832
    6. '   ' → logprob: -12.876530647277832
    7. ' current' → logprob: -13.876530647277832
    8. 'coin' → logprob: -14.126530647277832
    9. 'initial' → logprob: -14.126530647277832
    10. 'self' → logprob: -14.251530647277832

Token 1997: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -6.575563020305708e-05
    2. ' =' → logprob: -10.625065803527832
    3. '=' → logprob: -11.875065803527832
    4. '```' → logprob: -12.125065803527832
    5. 'states' → logprob: -12.125065803527832
    6. 'States' → logprob: -12.500065803527832
    7. '_' → logprob: -12.625065803527832
    8. '_state' → logprob: -13.000065803527832
    9. '=_' → logprob: -13.250065803527832
    10. '   ' → logprob: -13.375065803527832

Token 1998: '[self' (ID: 33734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5405494570732117
    2. ' =' → logprob: -0.9155494570732117
    3. '[' → logprob: -4.415549278259277
    4. '[(' → logprob: -5.665549278259277
    5. '={(' → logprob: -6.915549278259277
    6. ')' → logprob: -8.665549278259277
    7. '={' → logprob: -8.665549278259277
    8. '=[' → logprob: -9.665549278259277
    9. '.setdefault' → logprob: -10.040549278259277
    10. '={}' → logprob: -10.165549278259277

Token 1999: '.initial' (ID: 58290)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '._' → logprob: -0.8588780164718628
    2. '(' → logprob: -1.1088780164718628
    3. '.current' → logprob: -2.3588781356811523
    4. '.' → logprob: -2.9838781356811523
    5. '[(' → logprob: -4.108878135681152
    6. '0' → logprob: -4.358878135681152
    7. '[' → logprob: -4.358878135681152
    8. ' (' → logprob: -4.983878135681152
    9. ']' → logprob: -5.108878135681152
    10. 'current' → logprob: -5.108878135681152

Token 2000: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -8.506661833962426e-05
    2. '_states' → logprob: -10.37508487701416
    3. '_' → logprob: -10.50008487701416
    4. '```' → logprob: -11.25008487701416
    5. '_coin' → logprob: -12.87508487701416
    6. '_tokens' → logprob: -12.87508487701416
    7. '_state' → logprob: -13.12508487701416
    8. ')_' → logprob: -13.50008487701416
    9. '
' → logprob: -13.87508487701416
    10. '`' → logprob: -14.12508487701416

Token 2001: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.007132923696190119
    2. 'coins' → logprob: -5.8821330070495605
    3. '_' → logprob: -6.5071330070495605
    4. '_ins' → logprob: -6.8821330070495605
    5. '_co' → logprob: -7.6321330070495605
    6. '_
' → logprob: -9.382132530212402
    7. 'oints' → logprob: -9.382132530212402
    8. '
' → logprob: -9.507132530212402
    9. 'o' → logprob: -9.507132530212402
    10. '```' → logprob: -9.507132530212402

Token 2002: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011990104801952839
    2. ']=' → logprob: -4.636990070343018
    3. ' =' → logprob: -7.136990070343018
    4. ')' → logprob: -7.636990070343018
    5. '=' → logprob: -7.761990070343018
    6. ' ]' → logprob: -7.886990070343018
    7. ')]' → logprob: -9.511990547180176
    8. ',' → logprob: -11.011990547180176
    9. '        ' → logprob: -11.011990547180176
    10. ')=' → logprob: -11.511990547180176

Token 2003: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408533096313477
    2. ' =' → logprob: -0.9740853309631348
    3. '        ' → logprob: -12.974084854125977
    4. ')' → logprob: -13.599084854125977
    5. '=None' → logprob: -14.099084854125977
    6. '=True' → logprob: -14.099084854125977
    7. '       ' → logprob: -14.349084854125977
    8. ',' → logprob: -14.599084854125977
    9. ']=' → logprob: -14.974084854125977
    10. '   ' → logprob: -15.099084854125977

Token 2004: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.203409844194539e-05
    2. ' (' → logprob: -10.125041961669922
    3. '   ' → logprob: -13.250041961669922
    4. '0' → logprob: -16.500041961669922
    5. '       ' → logprob: -17.500041961669922
    6. '           ' → logprob: -19.250041961669922
    7. ' ' → logprob: -19.375041961669922
    8. '((' → logprob: -19.875041961669922
    9. '  ' → logprob: -20.250041961669922
    10. '    ' → logprob: -20.625041961669922

Token 2005: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.203409844194539e-05
    2. '(' → logprob: -10.125041961669922
    3. ' ' → logprob: -13.250041961669922
    4. '   ' → logprob: -16.625041961669922
    5. ' (' → logprob: -17.500041961669922
    6. '           ' → logprob: -20.000041961669922
    7. '         ' → logprob: -20.375041961669922
    8. '       ' → logprob: -20.375041961669922
    9. '  ' → logprob: -20.500041961669922
    10. '     ' → logprob: -20.750041961669922

Token 2006: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.856408536899835e-05
    2. ' ,' → logprob: -11.125028610229492
    3. ',
' → logprob: -12.375028610229492
    4. '<|end|>' → logprob: -12.500028610229492
    5. ')' → logprob: -12.750028610229492
    6. ',)' → logprob: -13.750028610229492
    7. '   ' → logprob: -14.250028610229492
    8. '    ' → logprob: -15.375028610229492
    9. '<|end|>' → logprob: -15.375028610229492
    10. ',None' → logprob: -15.875028610229492

Token 2007: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.849109119386412e-06
    2. ' ' → logprob: -11.625009536743164
    3. '           ' → logprob: -14.875009536743164
    4. '       ' → logprob: -15.875009536743164
    5. '   ' → logprob: -16.375009536743164
    6. '         ' → logprob: -17.000009536743164
    7. '          ' → logprob: -17.250009536743164
    8. '        ' → logprob: -17.375009536743164
    9. '               ' → logprob: -17.500009536743164
    10. '            ' → logprob: -17.750009536743164

Token 2008: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011467679869383574
    2. ')
' → logprob: -7.0011467933654785
    3. '       ' → logprob: -8.37614631652832
    4. ' )' → logprob: -12.87614631652832
    5. ')

' → logprob: -13.87614631652832
    6. '   ' → logprob: -14.25114631652832
    7. ')
' → logprob: -15.25114631652832
    8. '        ' → logprob: -16.25114631652832
    9. '
' → logprob: -16.50114631652832
    10. '           ' → logprob: -16.87614631652832

Token 2009: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036418259143829346
    2. '
' → logprob: -3.4114181995391846
    3. '        
' → logprob: -6.411418437957764
    4. 'for' → logprob: -7.036418437957764
    5. '```' → logprob: -9.536417961120605
    6. ' for' → logprob: -9.786417961120605
    7. '   ' → logprob: -10.161417961120605
    8. '    
' → logprob: -10.786417961120605
    9. '           ' → logprob: -11.161417961120605
    10. ',' → logprob: -11.286417961120605

Token 2010: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006593986414372921
    2. '       ' → logprob: -5.131594181060791
    3. 'price' → logprob: -8.256593704223633
    4. '
' → logprob: -8.381593704223633
    5. 'prices' → logprob: -9.256593704223633
    6. ' for' → logprob: -10.256593704223633
    7. '        
' → logprob: -10.506593704223633
    8. '#' → logprob: -11.131593704223633
    9. '```' → logprob: -13.631593704223633
    10. 'import' → logprob: -14.256593704223633

Token 2011: ' coin' (ID: 22179)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6970320343971252
    2. '
' → logprob: -1.4470319747924805
    3. '#' → logprob: -1.5720319747924805
    4. ')' → logprob: -4.0720319747924805
    5. '       ' → logprob: -4.0720319747924805
    6. 'True' → logprob: -4.6970319747924805
    7. '        
' → logprob: -6.0720319747924805
    8. ')
' → logprob: -6.3220319747924805
    9. 'None' → logprob: -6.3220319747924805
    10. '{}' → logprob: -6.3220319747924805

Token 2012: ' counts' (ID: 28991)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.150971919298172
    2. 's' → logprob: -2.7759718894958496
    3. '_s' → logprob: -3.4009718894958496
    4. '_types' → logprob: -3.7759718894958496
    5. '_tuple' → logprob: -4.15097188949585
    6. ')' → logprob: -6.65097188949585
    7. '_t' → logprob: -6.90097188949585
    8. '```' → logprob: -7.27597188949585
    9. '_' → logprob: -7.65097188949585
    10. ')_' → logprob: -7.77597188949585

Token 2013: ' ->' (ID: 2747)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14322155714035034
    2. ',' → logprob: -2.893221616744995
    3. '<|end|>' → logprob: -3.518221616744995
    4. ' =' → logprob: -4.768221378326416
    5. '<|end|>' → logprob: -4.768221378326416
    6. '       ' → logprob: -4.893221378326416
    7. '=' → logprob: -5.518221378326416
    8. '   ' → logprob: -5.768221378326416
    9. '        
' → logprob: -6.143221378326416
    10. '
' → logprob: -6.143221378326416

Token 2014: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0029844753444194794
    2. '0' → logprob: -6.002984523773193
    3. ' (' → logprob: -7.752984523773193
    4. 'c' → logprob: -9.877984046936035
    5. 'max' → logprob: -11.252984046936035
    6. '(c' → logprob: -12.377984046936035
    7. ' ' → logprob: -12.502984046936035
    8. '(max' → logprob: -12.627984046936035
    9. '   ' → logprob: -13.627984046936035
    10. 'current' → logprob: -13.752984046936035

Token 2015: 'c' (ID: 66)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001613459608051926
    2. ' ' → logprob: -9.500161170959473
    3. 'max' → logprob: -10.250161170959473
    4. 'c' → logprob: -10.375161170959473
    5. 'col' → logprob: -12.250161170959473
    6. '(' → logprob: -12.625161170959473
    7. '500' → logprob: -12.875161170959473
    8. '
' → logprob: -13.000161170959473
    9. 'coins' → logprob: -13.250161170959473
    10. 'current' → logprob: -13.375161170959473

Token 2016: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.0004147032741457224
    2. '_' → logprob: -9.125414848327637
    3. 'ount' → logprob: -9.125414848327637
    4. 'max' → logprob: -9.250414848327637
    5. '5' → logprob: -10.250414848327637
    6. '50' → logprob: -10.500414848327637
    7. '_max' → logprob: -11.625414848327637
    8. ' ' → logprob: -12.000414848327637
    9. 'count' → logprob: -12.000414848327637
    10. 'urrent' → logprob: -12.250414848327637

Token 2017: 'coins' (ID: 48264)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008079858496785164
    2. ',count' → logprob: -5.508080005645752
    3. 'coins' → logprob: -6.508080005645752
    4. '_count' → logprob: -7.008080005645752
    5. 'count' → logprob: -7.883080005645752
    6. '_co' → logprob: -8.758079528808594
    7. ' ,' → logprob: -8.758079528808594
    8. ',)' → logprob: -9.258079528808594
    9. '_,' → logprob: -9.383079528808594
    10. '
' → logprob: -9.508079528808594

Token 2018: ' collected' (ID: 20480)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01368186715990305
    2. ',count' → logprob: -4.513681888580322
    3. 'count' → logprob: -6.638681888580322
    4. ' ,' → logprob: -7.763681888580322
    5. '_count' → logprob: -8.513681411743164
    6. 'coins' → logprob: -8.513681411743164
    7. ',current' → logprob: -9.513681411743164
    8. ')' → logprob: -10.138681411743164
    9. ' count' → logprob: -10.263681411743164
    10. ',num' → logprob: -10.263681411743164

Token 2019: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022523177904076874
    2. ')' → logprob: -9.750225067138672
    3. ' ,' → logprob: -9.875225067138672
    4. '```' → logprob: -9.875225067138672
    5. ',
' → logprob: -11.125225067138672
    6. '),' → logprob: -11.500225067138672
    7. '       ' → logprob: -11.875225067138672
    8. '   ' → logprob: -12.000225067138672
    9. '           ' → logprob: -12.250225067138672
    10. ',)' → logprob: -12.750225067138672

Token 2020: ' expense' (ID: 29361)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003502434410620481
    2. ' ' → logprob: -8.125349998474121
    3. 'expense' → logprob: -10.000349998474121
    4. 'cost' → logprob: -13.125349998474121
    5. 'total' → logprob: -13.500349998474121
    6. 'expenses' → logprob: -13.500349998474121
    7. 'exp' → logprob: -14.500349998474121
    8. '   ' → logprob: -14.625349998474121
    9. ' expense' → logprob: -14.625349998474121
    10. '     ' → logprob: -15.250349998474121

Token 2021: ' spent' (ID: 11228)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.034167028963565826
    2. '       ' → logprob: -3.7841670513153076
    3. ')
' → logprob: -4.5341668128967285
    4. '           ' → logprob: -10.409167289733887
    5. '```' → logprob: -10.784167289733887
    6. ')

' → logprob: -11.159167289733887
    7. '   ' → logprob: -11.409167289733887
    8. '               ' → logprob: -11.659167289733887
    9. ',' → logprob: -11.784167289733887
    10. ')
' → logprob: -12.409167289733887

Token 2022: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08505059033632278
    2. '       ' → logprob: -3.085050582885742
    3. ')
' → logprob: -3.335050582885742
    4. ')

' → logprob: -9.210050582885742
    5. '   ' → logprob: -9.835050582885742
    6. ')
' → logprob: -10.960050582885742
    7. '           ' → logprob: -12.210050582885742
    8. ' )' → logprob: -12.460050582885742
    9. '        
' → logprob: -13.085050582885742
    10. '
' → logprob: -13.710050582885742

Token 2023: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38751304149627686
    2. 'for' → logprob: -1.1375130414962769
    3. '
' → logprob: -7.887513160705566
    4. ' for' → logprob: -8.762513160705566
    5. '```' → logprob: -9.637513160705566
    6. '   ' → logprob: -10.887513160705566
    7. '        
' → logprob: -11.137513160705566
    8. ')' → logprob: -12.387513160705566
    9. '           ' → logprob: -13.387513160705566
    10. 'next' → logprob: -13.762513160705566

Token 2024: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0077136969193816185
    2. '       ' → logprob: -4.882713794708252
    3. ' for' → logprob: -10.007713317871094
    4. '
' → logprob: -10.882713317871094
    5. 'prices' → logprob: -11.382713317871094
    6. '```' → logprob: -11.632713317871094
    7. 'import' → logprob: -12.007713317871094
    8. '   ' → logprob: -12.132713317871094
    9. 'from' → logprob: -12.632713317871094
    10. '#' → logprob: -13.007713317871094

Token 2025: ' price' (ID: 3911)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0556645505130291
    2. ' i' → logprob: -3.305664539337158
    3. 'shop' → logprob: -4.805664539337158
    4. '_i' → logprob: -5.305664539337158
    5. '_' → logprob: -6.430664539337158
    6. ' shop' → logprob: -7.180664539337158
    7. 'self' → logprob: -7.930664539337158
    8. '   ' → logprob: -7.930664539337158
    9. 'idx' → logprob: -8.055665016174316
    10. '_shop' → logprob: -8.305665016174316

Token 2026: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027173109352588654
    2. 'in' → logprob: -3.6521730422973633
    3. ',' → logprob: -7.152173042297363
    4. 'i' → logprob: -10.777173042297363
    5. '_in' → logprob: -11.027173042297363
    6. '   ' → logprob: -11.527173042297363
    7. '	in' → logprob: -12.027173042297363
    8. ' i' → logprob: -12.152173042297363
    9. '_' → logprob: -12.527173042297363
    10. ' ,' → logprob: -12.652173042297363

Token 2027: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014249884523451328
    2. ' self' → logprob: -4.764249801635742
    3. 'range' → logprob: -5.264249801635742
    4. ' range' → logprob: -7.764249801635742
    5. 'enumer' → logprob: -12.139249801635742
    6. '(self' → logprob: -12.389249801635742
    7. '   ' → logprob: -12.764249801635742
    8. '[self' → logprob: -12.764249801635742
    9. '[' → logprob: -13.389249801635742
    10. ' ' → logprob: -13.889249801635742

Token 2028: '.pr' (ID: 27292)
  Prédit: 'prices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prices' → logprob: -0.1133052408695221
    2. '.pr' → logprob: -2.2383053302764893
    3. 'pr' → logprob: -7.73830509185791
    4. ' prices' → logprob: -10.98830509185791
    5. '
' → logprob: -12.11330509185791
    6. '   ' → logprob: -12.36330509185791
    7. '_prices' → logprob: -12.36330509185791
    8. 'range' → logprob: -13.11330509185791
    9. '.price' → logprob: -13.23830509185791
    10. '(pr' → logprob: -13.48830509185791

Token 2029: 'ices' (ID: 1386)
  Prédit: 'ices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ices' → logprob: -0.0338430181145668
    2. 'ice' → logprob: -3.4088430404663086
    3. 'ces' → logprob: -9.658843040466309
    4. '```' → logprob: -10.533843040466309
    5. 'i' → logprob: -10.658843040466309
    6. 'ic' → logprob: -10.783843040466309
    7. 'rices' → logprob: -11.283843040466309
    8. 'es' → logprob: -11.283843040466309
    9. 'ce' → logprob: -11.658843040466309
    10. 'oces' → logprob: -12.158843040466309

Token 2030: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2840460240840912
    2. ':' → logprob: -1.5340460538864136
    3. ',' → logprob: -4.159046173095703
    4. ':
' → logprob: -4.534046173095703
    5. '       ' → logprob: -5.659046173095703
    6. '<|end|>' → logprob: -7.784046173095703
    7. '):
' → logprob: -8.034046173095703
    8. '<|end|>' → logprob: -8.284046173095703
    9. '=' → logprob: -8.409046173095703
    10. ' =' → logprob: -8.909046173095703

Token 2031: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001314295077463612
    2. '       ' → logprob: -9.125131607055664
    3. '   ' → logprob: -11.500131607055664
    4. 'for' → logprob: -11.750131607055664
    5. ' for' → logprob: -12.750131607055664
    6. '```' → logprob: -13.750131607055664
    7. '
' → logprob: -15.750131607055664
    8. '               ' → logprob: -15.875131607055664
    9. 'next' → logprob: -17.375131607055664
    10. ',' → logprob: -17.500131607055664

Token 2032: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.036786485463380814
    2. '           ' → logprob: -3.5367865562438965
    3. 'new' → logprob: -5.5367865562438965
    4. ' next' → logprob: -5.7867865562438965
    5. ' new' → logprob: -13.161786079406738
    6. '```' → logprob: -14.286786079406738
    7. '.next' → logprob: -14.911786079406738
    8. '       ' → logprob: -15.036786079406738
    9. '   ' → logprob: -15.411786079406738
    10. 'Next' → logprob: -15.661786079406738

Token 2033: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.0002378673671046272
    2. '_current' → logprob: -8.375237464904785
    3. '_state' → logprob: -12.750237464904785
    4. 'current' → logprob: -13.125237464904785
    5. 'states' → logprob: -14.000237464904785
    6. '_' → logprob: -14.875237464904785
    7. '_co' → logprob: -15.000237464904785
    8. 'States' → logprob: -15.250237464904785
    9. '```' → logprob: -15.250237464904785
    10. '   ' → logprob: -17.0002384185791

Token 2034: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741731584072113
    2. ' =' → logprob: -0.9741731882095337
    3. '={}' → logprob: -9.724173545837402
    4. '           ' → logprob: -10.349173545837402
    5. '={' → logprob: -13.474173545837402
    6. '={}
' → logprob: -13.724173545837402
    7. '       ' → logprob: -14.474173545837402
    8. '               ' → logprob: -15.224173545837402
    9. '            ' → logprob: -15.474173545837402
    10. '   ' → logprob: -15.849173545837402

Token 2035: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.005494022276252508
    2. 'default' → logprob: -5.255494117736816
    3. '{}
' → logprob: -8.255494117736816
    4. '{' → logprob: -15.880494117736816
    5. '{}

' → logprob: -15.880494117736816
    6. '{})' → logprob: -16.6304931640625
    7. 'dict' → logprob: -17.0054931640625
    8. ' defaultdict' → logprob: -17.5054931640625
    9. '{}\' → logprob: -19.6304931640625
    10. ' {}' → logprob: -19.8804931640625

Token 2036: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.526570384972729e-05
    2. '       ' → logprob: -10.000055313110352
    3. 'for' → logprob: -11.750055313110352
    4. '
' → logprob: -14.500055313110352
    5. '   ' → logprob: -14.875055313110352
    6. '               ' → logprob: -15.000055313110352
    7. ' for' → logprob: -15.125055313110352
    8. '```' → logprob: -15.500055313110352
    9. 'import' → logprob: -16.50005531311035
    10. '            
' → logprob: -17.37505531311035

Token 2037: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04859759286046028
    2. 'for' (adapté à ' for') → logprob: -3.048597574234009
    3. ' for' → logprob: -12.17359733581543
    4. '#' → logprob: -13.17359733581543
    5. '       ' → logprob: -13.67359733581543
    6. '               ' → logprob: -13.79859733581543
    7. '   ' → logprob: -14.92359733581543
    8. 'from' → logprob: -15.17359733581543
    9. 'import' → logprob: -15.67359733581543
    10. '
' → logprob: -16.42359733581543

Token 2038: ' coins' (ID: 28969)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.18114648759365082
    2. 'coins' → logprob: -1.806146502494812
    3. '(' → logprob: -6.931146621704102
    4. ' coin' → logprob: -8.806146621704102
    5. ' coins' → logprob: -9.181146621704102
    6. '   ' → logprob: -10.181146621704102
    7. '(co' → logprob: -10.431146621704102
    8. 'current' → logprob: -10.806146621704102
    9. 'curr' → logprob: -11.181146621704102
    10. 'cur' → logprob: -11.306146621704102

Token 2039: '_' (ID: 62)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.405883252620697
    2. 'in' → logprob: -1.1558833122253418
    3. '_in' → logprob: -5.280883312225342
    4. '_tuple' → logprob: -5.530883312225342
    5. ',count' → logprob: -6.030883312225342
    6. '_counts' → logprob: -6.405883312225342
    7. ' in' → logprob: -6.655883312225342
    8. 'count' → logprob: -7.155883312225342
    9. 'tuple' → logprob: -7.530883312225342
    10. '_key' → logprob: -7.530883312225342

Token 2040: 'held' (ID: 32869)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.2749837636947632
    2. 'count' → logprob: -2.2749838829040527
    3. 'tuple' → logprob: -2.2749838829040527
    4. 'held' → logprob: -4.399983882904053
    5. 'in' → logprob: -4.399983882904053
    6. ',' → logprob: -4.899983882904053
    7. '_counts' → logprob: -7.024983882904053
    8. ' counts' → logprob: -7.524983882904053
    9. '_tuple' → logprob: -8.024983406066895
    10. ' in' → logprob: -8.774983406066895

Token 2041: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0871204063296318
    2. 'in' → logprob: -2.587120294570923
    3. ' in' → logprob: -4.837120532989502
    4. ' ,' → logprob: -9.837120056152344
    5. ',in' → logprob: -10.087120056152344
    6. 'coins' → logprob: -10.337120056152344
    7. ',count' → logprob: -10.337120056152344
    8. '```' → logprob: -10.962120056152344
    9. '           ' → logprob: -11.087120056152344
    10. '_in' → logprob: -11.212120056152344

Token 2042: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.06620625406503677
    2. ' (' → logprob: -2.816206216812134
    3. '           ' → logprob: -5.816206455230713
    4. '       ' → logprob: -8.066205978393555
    5. '   ' → logprob: -8.566205978393555
    6. '(value' → logprob: -8.691205978393555
    7. '(current' → logprob: -9.191205978393555
    8. '        ' → logprob: -9.316205978393555
    9. '          ' → logprob: -9.316205978393555
    10. '         ' → logprob: -9.941205978393555

Token 2043: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0026660270523279905
    2. 'max' → logprob: -6.252665996551514
    3. 'current' → logprob: -8.002666473388672
    4. ' c' → logprob: -9.127666473388672
    5. 'curr' → logprob: -9.377666473388672
    6. 'cur' → logprob: -9.752666473388672
    7. 'old' → logprob: -10.002666473388672
    8. 'col' → logprob: -10.127666473388672
    9. '   ' → logprob: -10.627666473388672
    10. 'prev' → logprob: -11.627666473388672

Token 2044: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -3.8219583075260743e-05
    2. '_' → logprob: -11.125038146972656
    3. '5' → logprob: -11.750038146972656
    4. 'max' → logprob: -12.000038146972656
    5. 'five' → logprob: -12.750038146972656
    6. '```' → logprob: -13.625038146972656
    7. '50' → logprob: -13.750038146972656
    8. '_max' → logprob: -13.875038146972656
    9. '   ' → logprob: -14.375038146972656
    10. '505' → logprob: -14.875038146972656

Token 2045: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2022324800491333
    2. 'col' → logprob: -1.8272324800491333
    3. 'coins' → logprob: -4.702232360839844
    4. '_col' → logprob: -4.952232360839844
    5. 'count' → logprob: -5.702232360839844
    6. ',col' → logprob: -6.952232360839844
    7. 'spent' → logprob: -7.702232360839844
    8. '_count' → logprob: -8.452232360839844
    9. 'current' → logprob: -8.702232360839844
    10. '   ' → logprob: -8.827232360839844

Token 2046: ' expense' (ID: 29361)
  Prédit: 'expense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expense' → logprob: -0.07614058256149292
    2. 'e' → logprob: -2.9511406421661377
    3. 'exp' → logprob: -3.9511406421661377
    4. ' expense' → logprob: -6.451140403747559
    5. 'cost' → logprob: -8.826140403747559
    6. ' e' → logprob: -10.451140403747559
    7. 'expenses' → logprob: -11.326140403747559
    8. '   ' → logprob: -11.576140403747559
    9. 'ex' → logprob: -11.951140403747559
    10. ' exp' → logprob: -12.576140403747559

Token 2047: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.141186450899113e-05
    2. '               ' → logprob: -11.375020980834961
    3. 'in' → logprob: -12.250020980834961
    4. ' )' → logprob: -13.500020980834961
    5. '):
' → logprob: -14.000020980834961
    6. '           ' → logprob: -14.125020980834961
    7. ')
' → logprob: -14.500020980834961
    8. ' in' → logprob: -14.750020980834961
    9. '       ' → logprob: -15.125020980834961
    10. '                   ' → logprob: -15.875020980834961

Token 2048: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09761616587638855
    2. '               ' → logprob: -2.722616195678711
    3. ',' → logprob: -4.597616195678711
    4. ':' → logprob: -4.972616195678711
    5. ':
' → logprob: -5.847616195678711
    6. 'in' → logprob: -6.472616195678711
    7. '           ' → logprob: -6.972616195678711
    8. '                       ' → logprob: -7.222616195678711
    9. '):
' → logprob: -7.222616195678711
    10. '<|end|>' → logprob: -7.597616195678711

Token 2049: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0028127210680395365
    2. ' current' → logprob: -5.87781286239624
    3. 'coins' → logprob: -13.127812385559082
    4. '           ' → logprob: -13.502812385559082
    5. '
' → logprob: -13.752812385559082
    6. 'next' → logprob: -14.127812385559082
    7. '(current' → logprob: -14.252812385559082
    8. '$current' → logprob: -14.627812385559082
    9. '```' → logprob: -14.752812385559082
    10. '[current' → logprob: -15.252812385559082

Token 2050: '_states' (ID: 53795)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7021931409835815
    2. '.setdefault' → logprob: -1.3271931409835815
    3. '```' → logprob: -2.202193260192871
    4. '.' → logprob: -3.202193260192871
    5. '.items' → logprob: -3.577193260192871
    6. '_items' → logprob: -3.702193260192871
    7. '._' → logprob: -5.452193260192871
    8. '.keys' → logprob: -5.952193260192871
    9. '_.' → logprob: -6.077193260192871
    10. '.get' → logprob: -6.077193260192871

Token 2051: '.items' (ID: 19607)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16822631657123566
    2. '               ' → logprob: -2.1682262420654297
    3. 'in' → logprob: -3.5432262420654297
    4. ':' → logprob: -5.16822624206543
    5. ':
' → logprob: -6.04322624206543
    6. ',' → logprob: -7.04322624206543
    7. '.items' → logprob: -7.29322624206543
    8. '           ' → logprob: -7.66822624206543
    9. '):
' → logprob: -7.66822624206543
    10. ')' → logprob: -8.79322624206543

Token 2052: '():
' (ID: 8595)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.911915123462677
    2. '():
' → logprob: -1.4119150638580322
    3. ':' → logprob: -1.9119150638580322
    4. ',' → logprob: -2.9119150638580322
    5. '):
' → logprob: -3.1619150638580322
    6. ' in' → logprob: -3.1619150638580322
    7. ':
' → logprob: -3.2869150638580322
    8. '                       ' → logprob: -5.286915302276611
    9. ')' → logprob: -5.536915302276611
    10. '           ' → logprob: -5.536915302276611

Token 2053: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.7491250875755213e-05
    2. ' for' → logprob: -12.000027656555176
    3. 'for' → logprob: -12.250027656555176
    4. '                
' → logprob: -12.500027656555176
    5. '```' → logprob: -12.750027656555176
    6. '           ' → logprob: -12.875027656555176
    7. '                   ' → logprob: -13.000027656555176
    8. '	           ' → logprob: -13.500027656555176
    9. '<|end|>' → logprob: -14.250027656555176
    10. ',' → logprob: -14.625027656555176

Token 2054: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2357672154903412
    2. '#' (adapté à ' #') → logprob: -1.6107672452926636
    3. '                   ' → logprob: -4.735767364501953
    4. ' #' → logprob: -7.235767364501953
    5. 'payment' → logprob: -7.485767364501953
    6. '   ' → logprob: -9.485767364501953
    7. '           ' → logprob: -9.735767364501953
    8. 'pay' → logprob: -10.360767364501953
    9. '                       ' → logprob: -11.110767364501953
    10. 'new' → logprob: -11.485767364501953

Token 2055: ' Option' (ID: 17796)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25511351227760315
    2. '#' → logprob: -1.5051134824752808
    3. '                   ' → logprob: -6.38011360168457
    4. ' #' → logprob: -7.75511360168457
    5. 'payment' → logprob: -7.88011360168457
    6. '           ' → logprob: -8.25511360168457
    7. '   ' → logprob: -8.25511360168457
    8. 'for' → logprob: -10.00511360168457
    9. 'options' → logprob: -10.50511360168457
    10. 'option' → logprob: -10.75511360168457

Token 2056: ' ' (ID: 220)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5245382189750671
    2. ' skip' → logprob: -1.899538278579712
    3. '               ' → logprob: -2.399538278579712
    4. 'skip' → logprob: -2.649538278579712
    5. ' =' → logprob: -3.274538278579712
    6. '                   ' → logprob: -3.524538278579712
    7. '=' → logprob: -5.149538040161133
    8. '(skip' → logprob: -5.399538040161133
    9. '           ' → logprob: -5.524538040161133
    10. ' #' → logprob: -5.649538040161133

Token 2057: '1' (ID: 16)
  Prédit: 'skip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'skip' → logprob: -0.20364469289779663
    2. '#' → logprob: -1.7036447525024414
    3. '1' → logprob: -6.203644752502441
    4. ' #' → logprob: -9.578644752502441
    5. '           ' → logprob: -9.828644752502441
    6. ' skip' → logprob: -10.703644752502441
    7. '   ' → logprob: -11.328644752502441
    8. '               ' → logprob: -11.328644752502441
    9. ' ' → logprob: -12.078644752502441
    10. '       ' → logprob: -12.203644752502441

Token 2058: ':' (ID: 25)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05186060443520546
    2. '#' → logprob: -3.0518605709075928
    3. '           ' → logprob: -6.551860809326172
    4. ':' → logprob: -7.426860809326172
    5. ' #' → logprob: -7.801860809326172
    6. 'skip' → logprob: -8.426860809326172
    7. '                   ' → logprob: -8.551860809326172
    8. '   ' → logprob: -8.801860809326172
    9. '```' → logprob: -9.301860809326172
    10. 'Skip' → logprob: -9.801860809326172

Token 2059: ' skip' (ID: 16677)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.011808098293840885
    2. '               ' → logprob: -4.636807918548584
    3. 'next' → logprob: -6.636807918548584
    4. 'skip' → logprob: -8.011808395385742
    5. '           ' → logprob: -8.761808395385742
    6. '                   ' → logprob: -9.136808395385742
    7. ' #' → logprob: -9.511808395385742
    8. '   ' → logprob: -9.886808395385742
    9. '```' → logprob: -11.886808395385742
    10. '#do' → logprob: -12.886808395385742

Token 2060: ' this' (ID: 495)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15544500946998596
    2. '                   ' → logprob: -2.030445098876953
    3. '
' → logprob: -5.530445098876953
    4. '#' → logprob: -6.030445098876953
    5. 'for' → logprob: -6.530445098876953
    6. 'coins' → logprob: -6.655445098876953
    7. 'continue' → logprob: -7.030445098876953
    8. 'if' → logprob: -7.530445098876953
    9. '```' → logprob: -7.655445098876953
    10. 'next' → logprob: -7.905445098876953

Token 2061: ' shop' (ID: 9100)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.15785449743270874
    2. ' shop' → logprob: -2.1578545570373535
    3. '               ' → logprob: -3.7828545570373535
    4. '           ' → logprob: -6.0328545570373535
    5. '
' → logprob: -6.2828545570373535
    6. '_shop' → logprob: -7.1578545570373535
    7. '                   ' → logprob: -7.2828545570373535
    8. 'store' → logprob: -8.157854080200195
    9. '(shop' → logprob: -8.407854080200195
    10. ',' → logprob: -8.407854080200195

Token 2062: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.40495631098747253
    2. '                   ' → logprob: -1.279956340789795
    3. '
' → logprob: -3.029956340789795
    4. ':' → logprob: -6.279956340789795
    5. ':
' → logprob: -6.529956340789795
    6. '```' → logprob: -6.529956340789795
    7. '                       ' → logprob: -7.154956340789795
    8. '                    
' → logprob: -8.404955863952637
    9. '                
' → logprob: -8.529955863952637
    10. ',' → logprob: -9.279955863952637

Token 2063: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007505440153181553
    2. '
' → logprob: -7.625750541687012
    3. '                   ' → logprob: -8.625750541687012
    4. '```' → logprob: -10.125750541687012
    5. '                
' → logprob: -10.250750541687012
    6. '                       ' → logprob: -13.250750541687012
    7. '           ' → logprob: -13.250750541687012
    8. '                    
' → logprob: -14.250750541687012
    9. 'continue' → logprob: -14.625750541687012
    10. '``' → logprob: -14.875750541687012

Token 2064: ' self' (ID: 1051)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017376091331243515
    2. 'next' → logprob: -4.142375946044922
    3. ' next' → logprob: -7.642375946044922
    4. '#' → logprob: -8.017375946044922
    5. '                   ' → logprob: -8.267375946044922
    6. 'new' → logprob: -8.892375946044922
    7. '           ' → logprob: -9.892375946044922
    8. 'if' → logprob: -11.142375946044922
    9. '                
' → logprob: -11.142375946044922
    10. 'for' → logprob: -11.267375946044922

Token 2065: '.update' (ID: 8689)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9357166290283203
    2. '           ' → logprob: -1.3107166290283203
    3. '                   ' → logprob: -2.3107166290283203
    4. 'continue' → logprob: -3.8107166290283203
    5. '_continue' → logprob: -3.9357166290283203
    6. 'next' → logprob: -4.18571662902832
    7. ' =' → logprob: -4.18571662902832
    8. '#' → logprob: -4.18571662902832
    9. '_next' → logprob: -4.31071662902832
    10. '<|end|>' → logprob: -4.43571662902832

Token 2066: '_state' (ID: 9479)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.0045394194312393665
    2. 'next' → logprob: -5.504539489746094
    3. '(' → logprob: -8.754539489746094
    4. '[next' → logprob: -9.129539489746094
    5. ' next' → logprob: -9.629539489746094
    6. '_next' → logprob: -10.004539489746094
    7. '           ' → logprob: -10.504539489746094
    8. ' (' → logprob: -10.879539489746094
    9. '(
' → logprob: -11.504539489746094
    10. '               ' → logprob: -12.004539489746094

Token 2067: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.0018028652993962169
    2. '           ' → logprob: -7.126802921295166
    3. '               ' → logprob: -7.626802921295166
    4. 'next' → logprob: -8.501802444458008
    5. '(' → logprob: -8.876802444458008
    6. ' next' → logprob: -9.501802444458008
    7. '[next' → logprob: -10.501802444458008
    8. '(
' → logprob: -10.751802444458008
    9. '```' → logprob: -10.876802444458008
    10. ',next' → logprob: -11.626802444458008

Token 2068: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.00042054426739923656
    2. '_' → logprob: -8.625420570373535
    3. 'states' → logprob: -8.875420570373535
    4. '_state' → logprob: -10.750420570373535
    5. '   ' → logprob: -11.125420570373535
    6. 'States' → logprob: -11.375420570373535
    7. ')' → logprob: -11.500420570373535
    8. '_tokens' → logprob: -12.250420570373535
    9. ')_' → logprob: -12.375420570373535
    10. '_)' → logprob: -12.500420570373535

Token 2069: ',' (ID: 11)
  Prédit: '(co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -0.5298767685890198
    2. ',' → logprob: -0.9048767685890198
    3. '               ' → logprob: -5.779876708984375
    4. '                   ' → logprob: -6.904876708984375
    5. ')' → logprob: -6.904876708984375
    6. '(' → logprob: -7.154876708984375
    7. ')(' → logprob: -8.654876708984375
    8. ',
' → logprob: -9.279876708984375
    9. '           ' → logprob: -9.529876708984375
    10. ',(' → logprob: -9.529876708984375

Token 2070: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.0018982905894517899
    2. '               ' → logprob: -7.126898288726807
    3. ' coins' → logprob: -7.501898288726807
    4. '           ' → logprob: -8.251898765563965
    5. '                   ' → logprob: -8.876898765563965
    6. '   ' → logprob: -9.501898765563965
    7. 'coin' → logprob: -10.376898765563965
    8. '       ' → logprob: -12.376898765563965
    9. '```' → logprob: -12.501898765563965
    10. '              ' → logprob: -12.501898765563965

Token 2071: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.054500666621607e-06
    2. 'held' → logprob: -13.87500286102295
    3. ',' → logprob: -14.37500286102295
    4. '           ' → logprob: -14.87500286102295
    5. '_holder' → logprob: -15.37500286102295
    6. ')' → logprob: -15.87500286102295
    7. '```' → logprob: -16.125003814697266
    8. '          ' → logprob: -16.250003814697266
    9. '             ' → logprob: -16.375003814697266
    10. '<|end|>' → logprob: -16.750003814697266

Token 2072: 'held' (ID: 32869)
  Prédit: 'held'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'held' → logprob: -0.0017402705270797014
    2. '_' → logprob: -6.376740455627441
    3. '-held' → logprob: -12.126740455627441
    4. 'he' → logprob: -12.126740455627441
    5. 'Held' → logprob: -12.501740455627441
    6. '           ' → logprob: -12.876740455627441
    7. '```' → logprob: -12.876740455627441
    8. 'ield' → logprob: -13.126740455627441
    9. ' held' → logprob: -13.126740455627441
    10. ',' → logprob: -13.626740455627441

Token 2073: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016239990945905447
    2. '                   ' → logprob: -6.75162410736084
    3. '               ' → logprob: -8.00162410736084
    4. '                       ' → logprob: -9.50162410736084
    5. ' ,' → logprob: -11.00162410736084
    6. ',
' → logprob: -11.75162410736084
    7. '                  ' → logprob: -13.12662410736084
    8. '                      ' → logprob: -13.12662410736084
    9. '                           ' → logprob: -13.25162410736084
    10. '                    ' → logprob: -13.25162410736084

Token 2074: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0038790537510067225
    2. ' c' → logprob: -5.753879070281982
    3. '                   ' → logprob: -8.003878593444824
    4. '               ' → logprob: -8.503878593444824
    5. '   ' → logprob: -9.378878593444824
    6. '                ' → logprob: -11.003878593444824
    7. '                           ' → logprob: -11.128878593444824
    8. '(c' → logprob: -11.878878593444824
    9. '                       ' → logprob: -12.128878593444824
    10. '           ' → logprob: -12.128878593444824

Token 2075: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.0007559045334346592
    2. '_' → logprob: -7.875755786895752
    3. '5' → logprob: -9.00075626373291
    4. ',' → logprob: -9.00075626373291
    5. '50' → logprob: -9.37575626373291
    6. '505' → logprob: -10.87575626373291
    7. ' ' → logprob: -11.12575626373291
    8. '   ' → logprob: -12.75075626373291
    9. '+' → logprob: -13.75075626373291
    10. '
' → logprob: -14.00075626373291

Token 2076: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016420685278717428
    2. '               ' → logprob: -9.750164031982422
    3. ' ,' → logprob: -10.125164031982422
    4. '           ' → logprob: -10.500164031982422
    5. ',
' → logprob: -11.250164031982422
    6. '                   ' → logprob: -11.500164031982422
    7. ',p' → logprob: -12.375164031982422
    8. '```' → logprob: -13.375164031982422
    9. ',b' → logprob: -13.500164031982422
    10. ',e' → logprob: -14.375164031982422

Token 2077: ' expense' (ID: 29361)
  Prédit: 'expense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expense' → logprob: -0.47409728169441223
    2. ' expense' → logprob: -0.9740972518920898
    3. '                ' → logprob: -11.59909725189209
    4. '               ' → logprob: -11.72409725189209
    5. '                   ' → logprob: -14.09909725189209
    6. 'expenses' → logprob: -14.72409725189209
    7. '                    ' → logprob: -14.97409725189209
    8. 'exp' → logprob: -15.09909725189209
    9. '            ' → logprob: -15.09909725189209
    10. '                            ' → logprob: -16.099098205566406

Token 2078: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.251139760017395
    2. ')' → logprob: -1.751139760017395
    3. ',' → logprob: -3.1261396408081055
    4. '                   ' → logprob: -6.2511396408081055
    5. ')
' → logprob: -6.6261396408081055
    6. '                       ' → logprob: -7.0011396408081055
    7. '           ' → logprob: -9.126139640808105
    8. '                           ' → logprob: -9.251139640808105
    9. ',
' → logprob: -9.376139640808105
    10. '                               ' → logprob: -10.626139640808105

Token 2079: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006503747310489416
    2. '
' → logprob: -5.506503582000732
    3. '```' → logprob: -6.631503582000732
    4. '                
' → logprob: -7.256503582000732
    5. '           ' → logprob: -8.13150405883789
    6. '       ' → logprob: -10.00650405883789
    7. '``' → logprob: -11.63150405883789
    8. '              ' → logprob: -11.75650405883789
    9. '            
' → logprob: -11.88150405883789
    10. '`' → logprob: -12.00650405883789

Token 2080: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004091935232281685
    2. '
' → logprob: -5.754091739654541
    3. '           ' → logprob: -7.254091739654541
    4. '```' → logprob: -9.2540922164917
    5. '                
' → logprob: -9.7540922164917
    6. 'for' → logprob: -11.0040922164917
    7. 'payment' → logprob: -11.2540922164917
    8. '                   ' → logprob: -11.7540922164917
    9. 'Payment' → logprob: -12.3790922164917
    10. '#' (adapté à ' #') → logprob: -13.2540922164917

Token 2081: ' Option' (ID: 17796)
  Prédit: 'payment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'payment' → logprob: -0.14019091427326202
    2. '           ' → logprob: -2.515190839767456
    3. '#' → logprob: -3.640190839767456
    4. '               ' → logprob: -4.140191078186035
    5. 'strategy' → logprob: -5.140191078186035
    6. 'options' → logprob: -7.265191078186035
    7. 'option' → logprob: -7.515191078186035
    8. 'ps' → logprob: -8.140191078186035
    9. ' payment' → logprob: -8.515191078186035
    10. 'pay' → logprob: -10.015191078186035

Token 2082: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4890083074569702
    2. ' ' → logprob: -0.9890083074569702
    3. '1' → logprob: -4.86400842666626
    4. '           ' → logprob: -4.98900842666626
    5. '       ' → logprob: -9.239007949829102
    6. ':' → logprob: -9.239007949829102
    7. '   ' → logprob: -9.989007949829102
    8. '               ' → logprob: -10.614007949829102
    9. '         ' → logprob: -12.489007949829102
    10. '  ' → logprob: -12.864007949829102

Token 2083: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04878527671098709
    2. '2' → logprob: -3.0487852096557617
    3. ':' → logprob: -8.798785209655762
    4. ' ' → logprob: -10.798785209655762
    5. '           ' → logprob: -11.798785209655762
    6. '
' → logprob: -12.548785209655762
    7. 'for' → logprob: -12.673785209655762
    8. '       ' → logprob: -12.798785209655762
    9. '500' → logprob: -13.048785209655762
    10. '=' → logprob: -13.548785209655762

Token 2084: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13072840869426727
    2. '               ' → logprob: -2.1307284832000732
    3. ' =' → logprob: -6.630728244781494
    4. ' :' → logprob: -7.130728244781494
    5. ':
' → logprob: -7.380728244781494
    6. '           ' → logprob: -7.505728244781494
    7. '=' → logprob: -8.755728721618652
    8. '                   ' → logprob: -9.005728721618652
    9. '```' → logprob: -10.005728721618652
    10. ',' → logprob: -10.130728721618652

Token 2085: ' buy' (ID: 3877)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46328431367874146
    2. ' for' → logprob: -1.0882842540740967
    3. '#' → logprob: -4.713284492492676
    4. '           ' → logprob: -5.088284492492676
    5. '               ' → logprob: -5.213284492492676
    6. 'price' → logprob: -5.713284492492676
    7. ' #' → logprob: -5.838284492492676
    8. 'pay' → logprob: -6.338284492492676
    9. 'buy' → logprob: -6.713284492492676
    10. 'try' → logprob: -6.963284492492676

Token 2086: ' this' (ID: 495)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018640438094735146
    2. 'payment' → logprob: -4.768640518188477
    3. '                   ' → logprob: -5.518640518188477
    4. 'for' → logprob: -5.893640518188477
    5. 'coins' → logprob: -7.018640518188477
    6. '
' → logprob: -7.268640518188477
    7. '```' → logprob: -7.518640518188477
    8. 'coin' → logprob: -7.893640518188477
    9. '                
' → logprob: -9.018640518188477
    10. '           ' → logprob: -9.018640518188477

Token 2087: ' shop' (ID: 9100)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.6542611122131348
    2. ' shop' → logprob: -0.7792611122131348
    3. '_shop' → logprob: -4.404261112213135
    4. '               ' → logprob: -5.154261112213135
    5. '           ' → logprob: -6.654261112213135
    6. '(shop' → logprob: -6.779261112213135
    7. '                   ' → logprob: -7.779261112213135
    8. ':
' → logprob: -9.154260635375977
    9. ',' → logprob: -9.154260635375977
    10. '
' → logprob: -10.154260635375977

Token 2088: ''s' (ID: 885)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011123548028990626
    2. ',' → logprob: -7.626112461090088
    3. ' for' → logprob: -8.25111198425293
    4. 'for' → logprob: -8.50111198425293
    5. '```' → logprob: -9.75111198425293
    6. '                   ' → logprob: -10.12611198425293
    7. '                
' → logprob: -10.62611198425293
    8. '
' → logprob: -11.75111198425293
    9. 'payment' → logprob: -12.25111198425293
    10. '           ' → logprob: -12.37611198425293

Token 2089: ' souvenir' (ID: 85706)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.8393073678016663
    2. ' item' → logprob: -1.7143073081970215
    3. ',' → logprob: -2.0893073081970215
    4. 'product' → logprob: -2.0893073081970215
    5. 'price' → logprob: -2.2143073081970215
    6. ' product' → logprob: -5.2143073081970215
    7. 'purchase' → logprob: -5.2143073081970215
    8. 'shop' → logprob: -5.8393073081970215
    9. '```' → logprob: -5.8393073081970215
    10. ' ,' → logprob: -6.2143073081970215

Token 2090: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015643771039322019
    2. 'payment' → logprob: -7.2515645027160645
    3. ',' → logprob: -7.7515645027160645
    4. '                   ' → logprob: -9.501564025878906
    5. '                
' → logprob: -9.626564025878906
    6. '```' → logprob: -9.876564025878906
    7. 'for' → logprob: -10.001564025878906
    8. ':' → logprob: -10.376564025878906
    9. ' for' → logprob: -10.501564025878906
    10. 'coin' → logprob: -10.751564025878906

Token 2091: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00755669828504324
    2. '           ' → logprob: -5.007556915283203
    3. 'payment' → logprob: -7.632556915283203
    4. '```' → logprob: -8.257556915283203
    5. '                   ' → logprob: -10.007556915283203
    6. '                
' → logprob: -11.382556915283203
    7. 'Payment' → logprob: -11.632556915283203
    8. '
' → logprob: -11.632556915283203
    9. ',' → logprob: -12.257556915283203
    10. ' payment' → logprob: -12.757556915283203

Token 2092: ' strategy' (ID: 10772)
  Prédit: 'payment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'payment' → logprob: -0.45032498240470886
    2. '               ' → logprob: -1.2003250122070312
    3. 'strategy' (adapté à ' strategy') → logprob: -2.9503250122070312
    4. 'options' → logprob: -5.450325012207031
    5. 'pay' → logprob: -6.575325012207031
    6. 'for' → logprob: -7.200325012207031
    7. 'ps' → logprob: -7.450325012207031
    8. '           ' → logprob: -7.950325012207031
    9. '#' → logprob: -8.075325012207031
    10. 'option' → logprob: -8.075325012207031

Token 2093: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04315926879644394
    2. '=' → logprob: -3.168159246444702
    3. '       ' → logprob: -9.293159484863281
    4. '   ' → logprob: -10.168159484863281
    5. '           ' → logprob: -11.418159484863281
    6. '=str' → logprob: -12.043159484863281
    7. '               ' → logprob: -13.043159484863281
    8. '                   ' → logprob: -13.293159484863281
    9. '_payment' → logprob: -13.543159484863281
    10. '_strategy' → logprob: -13.668159484863281

Token 2094: ' Payment' (ID: 26873)
  Prédit: 'Payment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Payment' → logprob: -0.0007099286303855479
    2. ' Payment' → logprob: -7.2507100105285645
    3. 'Purchase' → logprob: -19.125709533691406
    4. '   ' → logprob: -20.500709533691406
    5. '       ' → logprob: -21.125709533691406
    6. '.Payment' → logprob: -21.125709533691406
    7. 'Pay' → logprob: -22.000709533691406
    8. 'payment' → logprob: -22.625709533691406
    9. '_payment' → logprob: -22.750709533691406
    10. ' payment' → logprob: -22.875709533691406

Token 2095: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -4.320199877838604e-07
    2. 'strategy' → logprob: -15.875
    3. 'Strateg' → logprob: -16.375
    4. '(' → logprob: -16.5
    5. 'S' → logprob: -17.5
    6. '   ' → logprob: -17.75
    7. '_strategy' → logprob: -18.125
    8. ' Strategy' → logprob: -18.375
    9. '       ' → logprob: -18.5
    10. '(
' → logprob: -18.625

Token 2096: '(price' (ID: 81279)
  Prédit: '(price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(price' → logprob: -0.00861729308962822
    2. 'price' → logprob: -4.758617401123047
    3. ' price' → logprob: -13.383617401123047
    4. '(' → logprob: -14.508617401123047
    5. '(
' → logprob: -15.508617401123047
    6. '               ' → logprob: -16.008617401123047
    7. '           ' → logprob: -16.633617401123047
    8. '                   ' → logprob: -16.883617401123047
    9. 'Price' → logprob: -17.008617401123047
    10. '.price' → logprob: -17.383617401123047

Token 2097: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017398154886905104
    2. ')' → logprob: -9.375173568725586
    3. '(co' → logprob: -9.875173568725586
    4. ',
' → logprob: -11.375173568725586
    5. ')
' → logprob: -12.000173568725586
    6. ' ,' → logprob: -12.250173568725586
    7. '(' → logprob: -12.750173568725586
    8. ',self' → logprob: -12.875173568725586
    9. '           ' → logprob: -13.125173568725586
    10. '               ' → logprob: -13.375173568725586

Token 2098: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.00020580526324920356
    2. ' coins' → logprob: -8.500205993652344
    3. '   ' → logprob: -13.875205993652344
    4. '           ' → logprob: -14.500205993652344
    5. '[' → logprob: -15.250205993652344
    6. '       ' → logprob: -15.375205993652344
    7. 'coin' → logprob: -15.500205993652344
    8. '
' → logprob: -15.875205993652344
    9. 'co' → logprob: -17.500205993652344
    10. '               ' → logprob: -17.500205993652344

Token 2099: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.8828707804204896e-05
    2. '_counts' → logprob: -10.625048637390137
    3. ')' → logprob: -11.875048637390137
    4. 'held' → logprob: -12.000048637390137
    5. '```' → logprob: -13.000048637390137
    6. '(' → logprob: -13.750048637390137
    7. '_current' → logprob: -14.250048637390137
    8. '_hold' → logprob: -14.250048637390137
    9. '_he' → logprob: -14.375048637390137
    10. '_holder' → logprob: -14.375048637390137

Token 2100: 'held' (ID: 32869)
  Prédit: 'held'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'held' → logprob: -0.008412327617406845
    2. '(' → logprob: -5.0084123611450195
    3. 'Held' → logprob: -6.8834123611450195
    4. '-held' → logprob: -8.00841236114502
    5. ')' → logprob: -8.50841236114502
    6. '_' → logprob: -11.38341236114502
    7. ')
' → logprob: -11.63341236114502
    8. '[' → logprob: -11.75841236114502
    9. ' held' → logprob: -11.88341236114502
    10. 'he' → logprob: -11.88341236114502

Token 2101: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10233629494905472
    2. ')' → logprob: -2.3523364067077637
    3. '               ' → logprob: -6.227336406707764
    4. '           ' → logprob: -9.352335929870605
    5. '       ' → logprob: -10.602335929870605
    6. ')
' → logprob: -10.602335929870605
    7. ').' → logprob: -11.352335929870605
    8. ')

' → logprob: -13.727335929870605
    9. '                   ' → logprob: -14.227335929870605
    10. ' )
' → logprob: -14.477335929870605

Token 2102: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5475316047668457
    2. 'for' → logprob: -1.2975316047668457
    3. 'results' → logprob: -2.5475316047668457
    4. 'options' → logprob: -2.7975316047668457
    5. 'payment' → logprob: -5.172531604766846
    6. '```' → logprob: -6.547531604766846
    7. '       ' → logprob: -6.797531604766846
    8. ' for' → logprob: -8.297531127929688
    9. '   ' → logprob: -8.672531127929688
    10. 'payments' → logprob: -8.922531127929688

Token 2103: ' payments' (ID: 18382)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09111037105321884
    2. 'payment' → logprob: -2.5911104679107666
    3. 'options' → logprob: -4.5911102294921875
    4. '               ' → logprob: -6.3411102294921875
    5. 'payments' (adapté à ' payments') → logprob: -8.841110229492188
    6. ' for' → logprob: -10.216110229492188
    7. 'results' → logprob: -10.841110229492188
    8. 'pay' → logprob: -10.966110229492188
    9. '                   ' → logprob: -11.716110229492188
    10. '       ' → logprob: -12.466110229492188

Token 2104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4080005884170532
    2. '.generate' → logprob: -1.7830005884170532
    3. '=' → logprob: -2.2830004692077637
    4. '   ' → logprob: -3.2830004692077637
    5. '_results' → logprob: -5.283000469207764
    6. '.payment' → logprob: -5.408000469207764
    7. '           ' → logprob: -5.408000469207764
    8. '       ' → logprob: -5.533000469207764
    9. '.' → logprob: -6.783000469207764
    10. '.results' → logprob: -6.908000469207764

Token 2105: ' strategy' (ID: 10772)
  Prédit: 'strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strategy' → logprob: -0.00026169343618676066
    2. ' strategy' → logprob: -8.250261306762695
    3. '   ' → logprob: -15.625261306762695
    4. 'list' → logprob: -15.750261306762695
    5. 'strateg' → logprob: -16.500261306762695
    6. '(strategy' → logprob: -17.375261306762695
    7. '           ' → logprob: -19.875261306762695
    8. '       ' → logprob: -20.500261306762695
    9. 'strategie' → logprob: -20.625261306762695
    10. '.strategy' → logprob: -21.250261306762695

Token 2106: '.generate' (ID: 33917)
  Prédit: '.generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.generate' → logprob: -0.00025287605240009725
    2. '.' → logprob: -8.875252723693848
    3. 'generate' → logprob: -9.125252723693848
    4. ' .' → logprob: -13.000252723693848
    5. '.get' → logprob: -14.500252723693848
    6. '   ' → logprob: -14.625252723693848
    7. ').' → logprob: -15.500252723693848
    8. '_generate' → logprob: -15.500252723693848
    9. '
' → logprob: -16.750253677368164
    10. '.gener' → logprob: -16.875253677368164

Token 2107: '_payment' (ID: 61735)
  Prédit: '_payment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_payment' → logprob: -0.02976854331791401
    2. 'payment' → logprob: -3.529768466949463
    3. '```' → logprob: -12.404768943786621
    4. '
' → logprob: -12.529768943786621
    5. 'Payment' → logprob: -12.529768943786621
    6. '_pay' → logprob: -13.279768943786621
    7. '\' → logprob: -13.404768943786621
    8. '`' → logprob: -14.279768943786621
    9. '_PAYMENT' → logprob: -14.279768943786621
    10. ' payment' → logprob: -15.029768943786621

Token 2108: '_options' (ID: 19793)
  Prédit: '_options'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_options' → logprob: -0.043549202382564545
    2. 'options' → logprob: -3.1685492992401123
    3. '_' → logprob: -7.918549060821533
    4. ' options' → logprob: -9.543549537658691
    5. '_opt' → logprob: -10.668549537658691
    6. '_option' → logprob: -11.168549537658691
    7. 'Options' → logprob: -11.418549537658691
    8. '(
' → logprob: -11.418549537658691
    9. '(' → logprob: -11.543549537658691
    10. '_op' → logprob: -12.168549537658691

Token 2109: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.42393937706947327
    2. '               ' → logprob: -1.1739393472671509
    3. '()
' → logprob: -3.4239394664764404
    4. '                
' → logprob: -6.673939228057861
    5. 'for' → logprob: -7.548939228057861
    6. '           ' → logprob: -8.04893970489502
    7. '<|end|>' → logprob: -8.04893970489502
    8. '                   ' → logprob: -8.42393970489502
    9. '():
' → logprob: -8.54893970489502
    10. '<|end|>' → logprob: -9.04893970489502

Token 2110: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.2166411478538066e-05
    2. 'for' → logprob: -10.125052452087402
    3. ' for' → logprob: -12.250052452087402
    4. '                   ' → logprob: -12.625052452087402
    5. '           ' → logprob: -12.875052452087402
    6. '```' → logprob: -14.000052452087402
    7. '       ' → logprob: -15.250052452087402
    8. '                
' → logprob: -15.875052452087402
    9. '                       ' → logprob: -16.250051498413086
    10. '              ' → logprob: -16.625051498413086

Token 2111: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.31440216302871704
    2. '               ' → logprob: -1.3144021034240723
    3. ' for' → logprob: -6.814402103424072
    4. '                   ' → logprob: -10.18940258026123
    5. '           ' → logprob: -13.18940258026123
    6. '```' → logprob: -13.43940258026123
    7. '                       ' → logprob: -14.56440258026123
    8. '       ' → logprob: -15.68940258026123
    9. '                
' → logprob: -15.68940258026123
    10. '   ' → logprob: -15.81440258026123

Token 2112: ' (' (ID: 350)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.01325281336903572
    2. 'c' → logprob: -4.6382527351379395
    3. '(count' → logprob: -5.8882527351379395
    4. '   ' → logprob: -8.138253211975098
    5. ' count' → logprob: -9.263253211975098
    6. '       ' → logprob: -9.263253211975098
    7. '(c' → logprob: -9.388253211975098
    8. '           ' → logprob: -10.513253211975098
    9. 'cnt' → logprob: -10.638253211975098
    10. 'payment' → logprob: -10.763253211975098

Token 2113: 'received' (ID: 79385)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.011415841057896614
    2. 'c' → logprob: -4.511415958404541
    3. 'cnt' → logprob: -8.886415481567383
    4. '500' → logprob: -10.261415481567383
    5. ' count' → logprob: -10.511415481567383
    6. 'coin' → logprob: -10.886415481567383
    7. '   ' → logprob: -10.886415481567383
    8. '0' → logprob: -10.886415481567383
    9. '_count' → logprob: -11.136415481567383
    10. '       ' → logprob: -11.386415481567383

Token 2114: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0005486258305609226
    2. '_count' → logprob: -8.625548362731934
    3. '```' → logprob: -9.000548362731934
    4. ',' → logprob: -9.625548362731934
    5. '_coin' → logprob: -10.375548362731934
    6. '500' → logprob: -10.500548362731934
    7. '_tokens' → logprob: -10.750548362731934
    8. ')' → logprob: -10.875548362731934
    9. '                   ' → logprob: -11.375548362731934
    10. '_co' → logprob: -11.500548362731934

Token 2115: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.035781703889369965
    2. '_' → logprob: -3.4107816219329834
    3. 'coins' → logprob: -6.7857818603515625
    4. 'count' → logprob: -7.5357818603515625
    5. '_count' → logprob: -8.660781860351562
    6. '```' → logprob: -10.035781860351562
    7. 'coin' → logprob: -10.160781860351562
    8. 'c' → logprob: -10.285781860351562
    9. '_coin' → logprob: -10.660781860351562
    10. ',' → logprob: -10.660781860351562

Token 2116: 'coins' (ID: 48264)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005090375896543264
    2. 'coins' → logprob: -6.380090236663818
    3. '_co' → logprob: -6.380090236663818
    4. '_coin' → logprob: -7.505090236663818
    5. ')' → logprob: -8.255090713500977
    6. ' ,' → logprob: -8.880090713500977
    7. '_' → logprob: -9.005090713500977
    8. 'coin' → logprob: -9.255090713500977
    9. '```' → logprob: -9.255090713500977
    10. '   ' → logprob: -9.255090713500977

Token 2117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015174767468124628
    2. ' ,' → logprob: -7.251517295837402
    3. ')' → logprob: -9.001517295837402
    4. '           ' → logprob: -9.251517295837402
    5. '               ' → logprob: -9.251517295837402
    6. '_count' → logprob: -9.251517295837402
    7. 'count' → logprob: -9.626517295837402
    8. ',count' → logprob: -10.126517295837402
    9. ',)' → logprob: -10.126517295837402
    10. '),' → logprob: -10.251517295837402

Token 2118: ' payment' (ID: 9277)
  Prédit: 'payment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'payment' → logprob: -0.228634774684906
    2. ' payment' → logprob: -1.6036348342895508
    3. 'pay' → logprob: -6.478634834289551
    4. 'total' → logprob: -7.478634834289551
    5. 'paid' → logprob: -7.853634834289551
    6. ' total' → logprob: -8.72863483428955
    7. 'money' → logprob: -9.35363483428955
    8. '       ' → logprob: -9.47863483428955
    9. ' paid' → logprob: -9.47863483428955
    10. 'p' → logprob: -9.60363483428955

Token 2119: '_money' (ID: 81323)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4862106442451477
    2. '_used' → logprob: -1.986210584640503
    3. '_tokens' → logprob: -2.111210584640503
    4. '           ' → logprob: -3.361210584640503
    5. '[' → logprob: -4.111210823059082
    6. ')' → logprob: -4.236210823059082
    7. '_amount' → logprob: -4.361210823059082
    8. '_' → logprob: -4.611210823059082
    9. '_usage' → logprob: -4.611210823059082
    10. '               ' → logprob: -4.736210823059082

Token 2120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03894837200641632
    2. ')' → logprob: -3.5389482975006104
    3. '               ' → logprob: -5.7889485359191895
    4. '                   ' → logprob: -5.9139485359191895
    5. ' ,' → logprob: -6.9139485359191895
    6. '           ' → logprob: -7.2889485359191895
    7. '                ' → logprob: -8.288948059082031
    8. '),' → logprob: -8.288948059082031
    9. '                  ' → logprob: -8.788948059082031
    10. '_used' → logprob: -8.788948059082031

Token 2121: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.06483161449432373
    2. ' used' → logprob: -2.8148317337036133
    3. 'coins' → logprob: -6.064831733703613
    4. ' coins' → logprob: -7.689831733703613
    5. 'coin' → logprob: -10.939831733703613
    6. 'payment' → logprob: -10.939831733703613
    7. ' payment' → logprob: -11.564831733703613
    8. 'paid' → logprob: -11.939831733703613
    9. 'tuple' → logprob: -12.189831733703613
    10. '   ' → logprob: -12.564831733703613

Token 2122: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -1.3306015716807451e-05
    2. '_coin' → logprob: -12.25001335144043
    3. '_' → logprob: -12.75001335144043
    4. '```' → logprob: -13.50001335144043
    5. '_tokens' → logprob: -13.75001335144043
    6. '\' → logprob: -13.87501335144043
    7. '
' → logprob: -14.00001335144043
    8. ')_' → logprob: -15.50001335144043
    9. ' _' → logprob: -15.87501335144043
    10. '`' → logprob: -16.00001335144043

Token 2123: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.00027301779482513666
    2. '_ins' → logprob: -9.000272750854492
    3. '_' → logprob: -9.875272750854492
    4. 'coins' → logprob: -11.000272750854492
    5. 'i' → logprob: -11.375272750854492
    6. 'in' → logprob: -11.375272750854492
    7. '...' → logprob: -11.625272750854492
    8. '```' → logprob: -11.625272750854492
    9. '``' → logprob: -12.125272750854492
    10. '**' → logprob: -12.625272750854492

Token 2124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015698568895459175
    2. '               ' → logprob: -7.751569747924805
    3. '),' → logprob: -7.876569747924805
    4. ')' → logprob: -7.876569747924805
    5. '           ' → logprob: -9.251569747924805
    6. '_,' → logprob: -9.376569747924805
    7. ' ,' → logprob: -9.626569747924805
    8. '                   ' → logprob: -10.376569747924805
    9. ',
' → logprob: -11.001569747924805
    10. ',)' → logprob: -11.001569747924805

Token 2125: ' used' (ID: 2061)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04740877076983452
    2. ' k' → logprob: -3.1724088191986084
    3. 'used' → logprob: -5.797408580780029
    4. ' used' → logprob: -7.547408580780029
    5. 'num' → logprob: -8.047409057617188
    6. '1' → logprob: -9.297409057617188
    7. 'paid' → logprob: -9.422409057617188
    8. ' ' → logprob: -9.672409057617188
    9. 'bill' → logprob: -10.047409057617188
    10. '0' → logprob: -10.422409057617188

Token 2126: '_' (ID: 62)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.5878467559814453
    2. '_' → logprob: -0.8378467559814453
    3. '100' → logprob: -4.587846755981445
    4. '_b' → logprob: -7.212846755981445
    5. ')_' → logprob: -8.087846755981445
    6. '_k' → logprob: -8.837846755981445
    7. '```' → logprob: -8.962846755981445
    8. '_coin' → logprob: -9.462846755981445
    9. '
' → logprob: -9.712846755981445
    10. ')' → logprob: -10.587846755981445

Token 2127: '100' (ID: 1353)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6667713522911072
    2. '_co' → logprob: -1.166771411895752
    3. '100' → logprob: -1.916771411895752
    4. 'coins' → logprob: -3.666771411895752
    5. '_b' → logprob: -6.291771411895752
    6. 'b' → logprob: -7.791771411895752
    7. 'co' → logprob: -8.666770935058594
    8. '_k' → logprob: -9.416770935058594
    9. 'Coins' → logprob: -11.291770935058594
    10. ' coins' → logprob: -11.416770935058594

Token 2128: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. '```' → logprob: -13.37500286102295
    3. '00' → logprob: -14.37500286102295
    4. '_' → logprob: -14.87500286102295
    5. ')' → logprob: -15.75000286102295
    6. '``' → logprob: -16.125003814697266
    7. '
' → logprob: -16.500003814697266
    8. '000' → logprob: -17.312503814697266
    9. '{' → logprob: -17.625003814697266
    10. '۰' → logprob: -18.000003814697266

Token 2129: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.749420166015625
    2. ')' → logprob: -0.999420166015625
    3. '_y' → logprob: -2.749420166015625
    4. '100' → logprob: -3.749420166015625
    5. 'b' → logprob: -3.874420166015625
    6. '```' → logprob: -4.374420166015625
    7. '0' → logprob: -5.124420166015625
    8. 'yen' → logprob: -5.499420166015625
    9. '
' → logprob: -5.499420166015625
    10. 'coins' → logprob: -5.624420166015625

Token 2130: 'ills' (ID: 3678)
  Prédit: 'ills'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ills' → logprob: -0.009079182520508766
    2. 'ill' → logprob: -4.7590789794921875
    3. 'ils' → logprob: -7.8840789794921875
    4. 'il' → logprob: -10.134078979492188
    5. ')' → logprob: -10.634078979492188
    6. '```' → logprob: -11.384078979492188
    7. '1' → logprob: -13.634078979492188
    8. 'its' → logprob: -13.634078979492188
    9. '`)' → logprob: -13.634078979492188
    10. ']' → logprob: -13.634078979492188

Token 2131: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013320814818143845
    2. '):
' → logprob: -4.3883209228515625
    3. '):' → logprob: -7.2633209228515625
    4. ')
' → logprob: -10.263320922851562
    5. ')=' → logprob: -10.638320922851562
    6. '           ' → logprob: -11.513320922851562
    7. ' )' → logprob: -12.013320922851562
    8. '),' → logprob: -12.138320922851562
    9. '       ' → logprob: -12.263320922851562
    10. '):

' → logprob: -12.513320922851562

Token 2132: ' in' (ID: 306)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8517773747444153
    2. ':
' → logprob: -0.8517773747444153
    3. ':' → logprob: -2.4767773151397705
    4. ',' → logprob: -3.3517773151397705
    5. '):
' → logprob: -3.7267773151397705
    6. '                       ' → logprob: -7.10177755355835
    7. '               ' → logprob: -7.85177755355835
    8. '):' → logprob: -8.351777076721191
    9. '                           ' → logprob: -8.351777076721191
    10. '                    
' → logprob: -8.476777076721191

Token 2133: ' payments' (ID: 18382)
  Prédit: 'payments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'payments' → logprob: -0.006771618966013193
    2. ' payments' → logprob: -5.131771564483643
    3. 'payment' → logprob: -7.506771564483643
    4. '(' → logprob: -9.8817720413208
    5. 'range' → logprob: -10.0067720413208
    6. '
' → logprob: -10.3817720413208
    7. '(pay' → logprob: -10.8817720413208
    8. ' (' → logprob: -11.0067720413208
    9. 'strategy' → logprob: -11.1317720413208
    10. 'pay' → logprob: -11.1317720413208

Token 2134: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.140480175614357
    2. ':
' → logprob: -2.2654802799224854
    3. ':' → logprob: -4.015480041503906
    4. '):
' → logprob: -5.390480041503906
    5. ',' → logprob: -6.140480041503906
    6. '                       ' → logprob: -7.265480041503906
    7. '                           ' → logprob: -8.015480041503906
    8. '                    
' → logprob: -8.140480041503906
    9. '               ' → logprob: -8.265480041503906
    10. '<|end|>' → logprob: -8.890480041503906

Token 2135: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -3.440506407059729e-05
    2. '                       ' → logprob: -11.37503433227539
    3. '               ' → logprob: -12.00003433227539
    4. 'coin' → logprob: -12.75003433227539
    5. '```' → logprob: -13.00003433227539
    6. '                    
' → logprob: -13.25003433227539
    7. 'coins' → logprob: -13.25003433227539
    8. '                  ' → logprob: -13.75003433227539
    9. '                           ' → logprob: -13.75003433227539
    10. 'new' → logprob: -13.75003433227539

Token 2136: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.507824718952179
    2. '#' (adapté à ' #') → logprob: -1.5078246593475342
    3. 'new' → logprob: -1.7578246593475342
    4. '               ' → logprob: -6.507824897766113
    5. '                       ' → logprob: -7.257824897766113
    6. 'coin' → logprob: -7.632824897766113
    7. 'coins' → logprob: -7.882824897766113
    8. 'pay' → logprob: -8.007824897766113
    9. 'used' → logprob: -8.882824897766113
    10. ' #' → logprob: -9.007824897766113

Token 2137: ' check' (ID: 2371)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5315155982971191
    2. '#' → logprob: -1.0315155982971191
    3. '                   ' → logprob: -3.656515598297119
    4. 'if' → logprob: -5.031515598297119
    5. 'coins' → logprob: -5.281515598297119
    6. 'pay' → logprob: -5.406515598297119
    7. 'paid' → logprob: -5.906515598297119
    8. 'used' → logprob: -6.031515598297119
    9. 'coin' → logprob: -6.281515598297119
    10. '               ' → logprob: -6.656515598297119

Token 2138: ' if' (ID: 538)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4421029090881348
    2. 'if' → logprob: -1.5671029090881348
    3. 'all' → logprob: -1.6921029090881348
    4. 'len' → logprob: -1.6921029090881348
    5. 'used' → logprob: -2.9421029090881348
    6. 'coins' → logprob: -3.1921029090881348
    7. ' all' → logprob: -3.9421029090881348
    8. ' if' → logprob: -4.192102909088135
    9. '                   ' → logprob: -4.317102909088135
    10. ' #' → logprob: -4.567102909088135

Token 2139: ' we' (ID: 581)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.10175244510173798
    2. 'used' → logprob: -3.351752519607544
    3. 'len' → logprob: -3.476752519607544
    4. ' all' → logprob: -3.976752519607544
    5. 'True' → logprob: -5.351752281188965
    6. 'sum' → logprob: -5.726752281188965
    7. 'payment' → logprob: -6.726752281188965
    8. '#' → logprob: -6.851752281188965
    9. 'any' → logprob: -7.726752281188965
    10. '   ' → logprob: -8.601752281188965

Token 2140: ' have' (ID: 679)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.7179108262062073
    2. 'can' → logprob: -1.5929107666015625
    3. 'have' → logprob: -1.7179107666015625
    4. ' have' → logprob: -2.0929107666015625
    5. '                       ' → logprob: -6.4679107666015625
    6. '                   ' → logprob: -6.9679107666015625
    7. '```' → logprob: -7.0929107666015625
    8. 'continue' → logprob: -7.0929107666015625
    9. '#' → logprob: -7.5929107666015625
    10. '_can' → logprob: -7.8429107666015625

Token 2141: ' enough' (ID: 4951)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.10026922076940536
    2. 'en' → logprob: -3.600269317626953
    3. ' all' → logprob: -3.600269317626953
    4. 'used' → logprob: -3.725269317626953
    5. '#' → logprob: -5.350269317626953
    6. '   ' → logprob: -5.600269317626953
    7. '                   ' → logprob: -5.725269317626953
    8. 's' → logprob: -7.225269317626953
    9. 'c' → logprob: -7.475269317626953
    10. '                       ' → logprob: -7.725269317626953

Token 2142: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.24412420392036438
    2. 'for' → logprob: -2.619124174118042
    3. 'all' → logprob: -3.244124174118042
    4. 'coin' → logprob: -3.744124174118042
    5. '```' → logprob: -4.619124412536621
    6. '   ' → logprob: -4.994124412536621
    7. ' all' → logprob: -4.994124412536621
    8. 'c' → logprob: -4.994124412536621
    9. ' for' → logprob: -4.994124412536621
    10. '``' → logprob: -5.369124412536621

Token 2143: ' to' (ID: 316)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.090153455734253
    2. ' and' → logprob: -1.840153455734253
    3. 'and' → logprob: -1.840153455734253
    4. 'for' → logprob: -2.215153455734253
    5. 'if' → logprob: -2.340153455734253
    6. ' for' → logprob: -3.465153455734253
    7. '                       ' → logprob: -3.590153455734253
    8. ':' → logprob: -3.590153455734253
    9. ' if' → logprob: -4.090153694152832
    10. ':
' → logprob: -4.715153694152832

Token 2144: ' pay' (ID: 2777)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.894137442111969
    2. 'pay' → logprob: -0.894137442111969
    3. 'subtract' → logprob: -1.8941373825073242
    4. 'cover' → logprob: -3.769137382507324
    5. ' pay' → logprob: -6.519137382507324
    6. ' use' → logprob: -6.644137382507324
    7. 'hand' → logprob: -7.019137382507324
    8. 'used' → logprob: -7.144137382507324
    9. 'ded' → logprob: -7.269137382507324
    10. 'make' → logprob: -7.519137382507324

Token 2145: ' used' (ID: 2061)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7857693433761597
    2. 'and' → logprob: -1.6607693433761597
    3. ' and' → logprob: -1.9107693433761597
    4. ':
' → logprob: -2.035769462585449
    5. '                       ' → logprob: -3.535769462585449
    6. '                   ' → logprob: -3.785769462585449
    7. 'if' → logprob: -4.660769462585449
    8. 'for' → logprob: -5.035769462585449
    9. ' (' → logprob: -6.285769462585449
    10. ',' → logprob: -6.285769462585449

Token 2146: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.00023727134976070374
    2. '_' → logprob: -8.375237464904785
    3. '_coin' → logprob: -12.625237464904785
    4. '```' → logprob: -13.250237464904785
    5. 'coins' → logprob: -14.500237464904785
    6. '_counts' → logprob: -15.000237464904785
    7. '_)' → logprob: -16.12523651123047
    8. '   ' → logprob: -16.50023651123047
    9. '_
' → logprob: -16.75023651123047
    10. 'co' → logprob: -16.75023651123047

Token 2147: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.028009913861751556
    2. '_ins' → logprob: -4.52800989151001
    3. '_' → logprob: -4.65300989151001
    4. 'ints' → logprob: -7.02800989151001
    5. 'in' → logprob: -7.15300989151001
    6. '_used' → logprob: -7.77800989151001
    7. 'unts' → logprob: -7.90300989151001
    8. '_counts' → logprob: -7.90300989151001
    9. '_co' → logprob: -8.153010368347168
    10. '               ' → logprob: -8.153010368347168

Token 2148: '
' (ID: 198)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.9154834151268005
    2. ' and' → logprob: -1.2904834747314453
    3. '                   ' → logprob: -1.5404834747314453
    4. '                       ' → logprob: -3.2904834747314453
    5. '```' → logprob: -3.7904834747314453
    6. ':' → logprob: -4.290483474731445
    7. ':
' → logprob: -4.415483474731445
    8. 'for' → logprob: -4.540483474731445
    9. 'if' → logprob: -5.165483474731445
    10. ' for' → logprob: -5.665483474731445

Token 2149: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1858673393726349
    2. '                       ' → logprob: -2.3108673095703125
    3. ':' → logprob: -3.0608673095703125
    4. ':
' → logprob: -4.9358673095703125
    5. ' and' → logprob: -5.5608673095703125
    6. ',' → logprob: -5.9358673095703125
    7. '```' → logprob: -6.1858673095703125
    8. ' if' → logprob: -6.5608673095703125
    9. '       ' → logprob: -6.9358673095703125
    10. ' for' → logprob: -7.0608673095703125

Token 2150: ' #' (ID: 1069)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.9015237092971802
    2. 'if' → logprob: -1.2765237092971802
    3. '                   ' → logprob: -1.2765237092971802
    4. 'available' → logprob: -4.901523590087891
    5. ' can' → logprob: -5.026523590087891
    6. 'en' → logprob: -5.401523590087891
    7. ' if' → logprob: -5.526523590087891
    8. 'has' → logprob: -5.526523590087891
    9. '                       ' → logprob: -6.401523590087891
    10. 'able' → logprob: -6.651523590087891

Token 2151: ' used' (ID: 2061)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.27759814262390137
    2. 'can' → logprob: -1.9025981426239014
    3. '                   ' → logprob: -2.6525981426239014
    4. 'has' → logprob: -4.6525983810424805
    5. 'have' → logprob: -4.9025983810424805
    6. 'available' → logprob: -6.5275983810424805
    7. ' if' → logprob: -7.1525983810424805
    8. 'for' → logprob: -7.4025983810424805
    9. '           ' → logprob: -7.5275983810424805
    10. 'able' → logprob: -7.7775983810424805

Token 2152: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.0036282234359532595
    2. '_' → logprob: -6.003628253936768
    3. 'coins' → logprob: -7.128628253936768
    4. '_coin' → logprob: -8.75362777709961
    5. '_counts' → logprob: -9.62862777709961
    6. '-co' → logprob: -9.75362777709961
    7. 'Coins' → logprob: -10.75362777709961
    8. 'co' → logprob: -11.25362777709961
    9. ')' → logprob: -12.50362777709961
    10. 'coin' → logprob: -12.62862777709961

Token 2153: 'ins' (ID: 1564)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6221980452537537
    2. '_co' → logprob: -0.8721980452537537
    3. 'ins' → logprob: -4.372198104858398
    4. 'o' → logprob: -4.747198104858398
    5. '_counts' → logprob: -4.872198104858398
    6. '_ins' → logprob: -5.122198104858398
    7. '_in' → logprob: -5.622198104858398
    8. '_o' → logprob: -6.497198104858398
    9. 'oints' → logprob: -7.372198104858398
    10. '```' → logprob: -7.372198104858398

Token 2154: ' corresponds' (ID: 66938)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -1.0933912992477417
    2. ' =' → logprob: -1.3433912992477417
    3. '=' → logprob: -2.2183914184570312
    4. '_len' → logprob: -2.4683914184570312
    5. 'counts' → logprob: -3.2183914184570312
    6. '_lengths' → logprob: -3.4683914184570312
    7. '_ok' → logprob: -3.4683914184570312
    8. 'len' → logprob: -3.9683914184570312
    9. ')' → logprob: -4.218391418457031
    10. '_valid' → logprob: -4.843391418457031

Token 2155: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.26739266514778137
    2. ' to' → logprob: -1.517392635345459
    3. '                   ' → logprob: -4.267392635345459
    4. '               ' → logprob: -7.517392635345459
    5. '```' → logprob: -8.892393112182617
    6. '                       ' → logprob: -9.142393112182617
    7. '_to' → logprob: -9.392393112182617
    8. '           ' → logprob: -9.892393112182617
    9. '                    ' → logprob: -10.017393112182617
    10. '                  ' → logprob: -10.267393112182617

Token 2156: ' coins' (ID: 28969)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.37208831310272217
    2. '(' → logprob: -1.9970883131027222
    3. 'coins' → logprob: -3.1220884323120117
    4. 'range' → logprob: -3.3720884323120117
    5. '0' → logprob: -3.8720884323120117
    6. 'index' → logprob: -4.122088432312012
    7. 'coin' → logprob: -4.247088432312012
    8. 'indexes' → logprob: -4.622088432312012
    9. '[' → logprob: -4.997088432312012
    10. 'the' → logprob: -5.122088432312012

Token 2157: ' handed' (ID: 42324)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.274949312210083
    2. '_' → logprob: -1.649949312210083
    3. '_ex' → logprob: -2.024949312210083
    4. '```' → logprob: -2.274949312210083
    5. ')' → logprob: -2.399949312210083
    6. '                   ' → logprob: -3.399949312210083
    7. ',' → logprob: -3.524949312210083
    8. '_used' → logprob: -3.774949312210083
    9. '_in' → logprob: -4.399949073791504
    10. '           ' → logprob: -4.524949073791504

Token 2158: ' over' (ID: 1072)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.31370267271995544
    2. '                   ' → logprob: -1.4387027025222778
    3. ' over' → logprob: -4.438702583312988
    4. '       ' → logprob: -5.438702583312988
    5. '```' → logprob: -5.438702583312988
    6. '               ' → logprob: -5.563702583312988
    7. '                       ' → logprob: -6.313702583312988
    8. '           ' → logprob: -6.438702583312988
    9. '_over' → logprob: -6.688702583312988
    10. 'for' → logprob: -7.188702583312988

Token 2159: ' of' (ID: 328)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6296535730361938
    2. 'for' → logprob: -2.3796534538269043
    3. ':
' → logprob: -2.5046534538269043
    4. ':' → logprob: -2.5046534538269043
    5. ',' → logprob: -2.8796534538269043
    6. '```' → logprob: -3.1296534538269043
    7. ' for' → logprob: -3.8796534538269043
    8. '[i' → logprob: -4.379653453826904
    9. 'if' → logprob: -4.504653453826904
    10. '[' → logprob: -4.754653453826904

Token 2160: ' six' (ID: 7429)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.13167978823184967
    2. 'coins' → logprob: -3.1316797733306885
    3. 'len' → logprob: -3.3816797733306885
    4. 'used' → logprob: -4.631680011749268
    5. '(' → logprob: -4.881680011749268
    6. '500' → logprob: -5.006680011749268
    7. 'each' → logprob: -5.381680011749268
    8. 'indices' → logprob: -5.506680011749268
    9. 'current' → logprob: -5.631680011749268
    10. '6' → logprob: -5.631680011749268

Token 2161: ' coin' (ID: 22179)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48389074206352234
    2. 'indices' → logprob: -1.9838907718658447
    3. 'coins' → logprob: -2.9838907718658447
    4. '500' → logprob: -2.9838907718658447
    5. 'types' → logprob: -3.7338907718658447
    6. '):
' → logprob: -3.9838907718658447
    7. 'coin' → logprob: -4.108890533447266
    8. '),' → logprob: -4.858890533447266
    9. ' (' → logprob: -4.983890533447266
    10. ' indices' → logprob: -4.983890533447266

Token 2162: ' types' (ID: 6009)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.45860764384269714
    2. '_counts' → logprob: -1.0836076736450195
    3. '_s' → logprob: -5.0836076736450195
    4. ')' → logprob: -5.0836076736450195
    5. '```' → logprob: -5.7086076736450195
    6. '_types' → logprob: -5.7086076736450195
    7. ' counts' → logprob: -6.0836076736450195
    8. 'counts' → logprob: -6.0836076736450195
    9. '_' → logprob: -6.8336076736450195
    10. 'types' → logprob: -6.9586076736450195

Token 2163: ' in' (ID: 306)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.015601171180605888
    2. 'if' → logprob: -5.39060115814209
    3. ',' → logprob: -5.89060115814209
    4. '                       ' → logprob: -6.14060115814209
    5. ' if' → logprob: -6.26560115814209
    6. '```' → logprob: -6.76560115814209
    7. ':' → logprob: -7.39060115814209
    8. 'for' → logprob: -8.26560115814209
    9. '                    
' → logprob: -8.26560115814209
    10. ':
' → logprob: -8.39060115814209

Token 2164: ' order' (ID: 2569)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.120295763015747
    2. 'used' → logprob: -1.495295763015747
    3. 'indices' → logprob: -1.995295763015747
    4. 'length' → logprob: -1.995295763015747
    5. 'tuple' → logprob: -3.245295763015747
    6. 'enumer' → logprob: -3.495295763015747
    7. 'range' → logprob: -3.995295763015747
    8. '[' → logprob: -3.995295763015747
    9. 'order' → logprob: -3.995295763015747
    10. '500' → logprob: -4.495295524597168

Token 2165: ':' (ID: 25)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.026519153267145157
    2. ':' → logprob: -4.776519298553467
    3. 'if' → logprob: -5.651519298553467
    4. ',' → logprob: -5.651519298553467
    5. ':
' → logprob: -6.401519298553467
    6. ' if' → logprob: -6.526519298553467
    7. 'for' → logprob: -6.526519298553467
    8. '                       ' → logprob: -6.776519298553467
    9. '```' → logprob: -7.151519298553467
    10. ' for' → logprob: -7.276519298553467

Token 2166: ' [' (ID: 723)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.141045093536377
    2. 'for' → logprob: -1.266045093536377
    3. 'valid' → logprob: -2.141045093536377
    4. '                   ' → logprob: -2.766045093536377
    5. 'can' → logprob: -2.766045093536377
    6. ' for' → logprob: -3.016045093536377
    7. ' can' → logprob: -3.516045093536377
    8. 'all' → logprob: -3.516045093536377
    9. ' if' → logprob: -4.516045093536377
    10. ' all' → logprob: -4.641045093536377

Token 2167: '500' (ID: 3234)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02383256144821644
    2. '500' → logprob: -3.7738325595855713
    3. '
' → logprob: -8.523832321166992
    4. '1' → logprob: -8.523832321166992
    5. ')' → logprob: -9.773832321166992
    6. ']' → logprob: -10.648832321166992
    7. '```' → logprob: -10.773832321166992
    8. '#' → logprob: -11.523832321166992
    9. '    
' → logprob: -11.773832321166992
    10. ' ' → logprob: -11.773832321166992

Token 2168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00110116065479815
    2. ',
' → logprob: -7.001101016998291
    3. ' ,' → logprob: -9.62610149383545
    4. '   ' → logprob: -9.62610149383545
    5. ',-' → logprob: -11.62610149383545
    6. '`,' → logprob: -12.37610149383545
    7. '0' → logprob: -12.37610149383545
    8. ']' → logprob: -12.37610149383545
    9. '```' → logprob: -12.37610149383545
    10. '],' → logprob: -12.50110149383545

Token 2169: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.125005722045898
    4. '
' → logprob: -16.8750057220459
    5. '```' → logprob: -17.5000057220459
    6. ',' → logprob: -19.0000057220459
    7. '  ' → logprob: -19.5000057220459
    8. '１００' → logprob: -20.0000057220459
    9. ')' → logprob: -20.7500057220459
    10. '       ' → logprob: -20.8750057220459

Token 2170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019901065388694406
    2. ',
' → logprob: -8.875199317932129
    3. '50' → logprob: -11.000199317932129
    4. ' ,' → logprob: -11.000199317932129
    5. '           ' → logprob: -11.750199317932129
    6. '       ' → logprob: -12.875199317932129
    7. '   ' → logprob: -12.875199317932129
    8. '                   ' → logprob: -13.125199317932129
    9. '```' → logprob: -13.125199317932129
    10. '
' → logprob: -13.500199317932129

Token 2171: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.004629245959222317
    2. ' ' → logprob: -5.379629135131836
    3. '   ' → logprob: -12.004629135131836
    4. '  ' → logprob: -13.879629135131836
    5. '```' → logprob: -14.754629135131836
    6. '    ' → logprob: -15.317129135131836
    7. ' ' → logprob: -15.692129135131836
    8. '
' → logprob: -15.817129135131836
    9. '       ' → logprob: -16.129629135131836
    10. '500' → logprob: -16.192129135131836

Token 2172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016027313540689647
    2. ',
' → logprob: -9.500160217285156
    3. '0' → logprob: -10.750160217285156
    4. ' ,' → logprob: -11.000160217285156
    5. '   ' → logprob: -11.250160217285156
    6. '```' → logprob: -11.875160217285156
    7. '],' → logprob: -12.250160217285156
    8. '                   ' → logprob: -12.375160217285156
    9. '           ' → logprob: -12.625160217285156
    10. '       ' → logprob: -13.125160217285156

Token 2173: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -9.841743303695694e-05
    2. ' ' → logprob: -9.25009822845459
    3. '   ' → logprob: -13.50009822845459
    4. '40' → logprob: -15.00009822845459
    5. '```' → logprob: -15.50009822845459
    6. '  ' → logprob: -16.000099182128906
    7. '       ' → logprob: -16.625099182128906
    8. '30' → logprob: -16.750099182128906
    9. '    ' → logprob: -16.875099182128906
    10. '     ' → logprob: -17.000099182128906

Token 2174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005255113355815411
    2. '5' → logprob: -7.87552547454834
    3. '0' → logprob: -9.62552547454834
    4. ' ,' → logprob: -10.50052547454834
    5. '   ' → logprob: -10.75052547454834
    6. ' ' → logprob: -11.25052547454834
    7. '       ' → logprob: -12.12552547454834
    8. ',
' → logprob: -12.12552547454834
    9. '```' → logprob: -13.50052547454834
    10. '     ' → logprob: -14.12552547454834

Token 2175: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0003827676991932094
    2. ' ' → logprob: -7.875382900238037
    3. '   ' → logprob: -13.875382423400879
    4. '```' → logprob: -13.875382423400879
    5. '       ' → logprob: -15.375382423400879
    6. '
' → logprob: -15.500382423400879
    7. '     ' → logprob: -16.125383377075195
    8. '  ' → logprob: -16.500383377075195
    9. '    ' → logprob: -16.625383377075195
    10. ',' → logprob: -17.625383377075195

Token 2176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9862216504407115e-05
    2. ',
' → logprob: -11.500020027160645
    3. '```' → logprob: -12.625020027160645
    4. ' ,' → logprob: -13.125020027160645
    5. '       ' → logprob: -14.000020027160645
    6. '   ' → logprob: -14.000020027160645
    7. '0' → logprob: -14.750020027160645
    8. '           ' → logprob: -14.875020027160645
    9. ' ' → logprob: -15.125020027160645
    10. ',[' → logprob: -15.625020027160645

Token 2177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -17.3750057220459
    4. '   ' → logprob: -19.3750057220459
    5. '
' → logprob: -21.3750057220459
    6. '100' → logprob: -21.6250057220459
    7. '  ' → logprob: -21.8750057220459
    8. '     ' → logprob: -22.0000057220459
    9. '``' → logprob: -22.0000057220459
    10. '0' → logprob: -22.0000057220459

Token 2178: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15565142035484314
    2. ']:
' → logprob: -2.780651330947876
    3. ']
' → logprob: -3.155651330947876
    4. '                   ' → logprob: -3.780651330947876
    5. '],' → logprob: -4.780651569366455
    6. ']:' → logprob: -5.530651569366455
    7. '               ' → logprob: -6.655651569366455
    8. '])' → logprob: -7.405651569366455
    9. ',' → logprob: -7.530651569366455
    10. '])
' → logprob: -8.030651092529297

Token 2179: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0902838185429573
    2. 'if' → logprob: -3.4652838706970215
    3. '                       ' → logprob: -3.7152838706970215
    4. '```' → logprob: -3.8402838706970215
    5. ' if' → logprob: -5.7152838706970215
    6. ',' → logprob: -5.9652838706970215
    7. '                           ' → logprob: -6.9652838706970215
    8. 'for' → logprob: -7.7152838706970215
    9. '           ' → logprob: -8.090283393859863
    10. '               ' → logprob: -8.340283393859863

Token 2180: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7484446167945862
    2. 'can' → logprob: -1.2484445571899414
    3. '                   ' → logprob: -1.4984445571899414
    4. 'en' → logprob: -5.123444557189941
    5. 'valid' → logprob: -5.498444557189941
    6. 'available' → logprob: -5.873444557189941
    7. ' if' → logprob: -7.373444557189941
    8. 'has' → logprob: -7.748444557189941
    9. '#' (adapté à ' #') → logprob: -7.873444557189941
    10. '           ' → logprob: -7.998444557189941

Token 2181: ' but' (ID: 889)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20603564381599426
    2. '                   ' → logprob: -2.081035614013672
    3. 'can' → logprob: -2.956035614013672
    4. 'valid' → logprob: -5.706035614013672
    5. ' if' → logprob: -6.581035614013672
    6. 'en' → logprob: -7.206035614013672
    7. 'for' → logprob: -7.331035614013672
    8. '```' → logprob: -7.956035614013672
    9. 'available' → logprob: -7.956035614013672
    10. '   ' → logprob: -8.206035614013672

Token 2182: ' we' (ID: 581)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.19786138832569122
    2. 'all' → logprob: -2.572861433029175
    3. 'used' → logprob: -2.822861433029175
    4. '#' → logprob: -4.572861194610596
    5. ' all' → logprob: -4.697861194610596
    6. ' used' → logprob: -4.822861194610596
    7. 'payment' → logprob: -5.447861194610596
    8. 'sum' → logprob: -5.697861194610596
    9. ' len' → logprob: -5.947861194610596
    10. '...' → logprob: -6.447861194610596

Token 2183: ' started' (ID: 5424)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -1.2003498077392578
    2. ' need' → logprob: -1.7003498077392578
    3. 'have' → logprob: -2.075349807739258
    4. 'continue' → logprob: -2.325349807739258
    5. 'must' → logprob: -3.075349807739258
    6. 'for' → logprob: -3.200349807739258
    7. ' have' → logprob: -3.325349807739258
    8. 'len' → logprob: -3.825349807739258
    9. ' must' → logprob: -3.825349807739258
    10. 'cannot' → logprob: -4.325349807739258

Token 2184: ' with' (ID: 483)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.689802885055542
    2. 'with' → logprob: -1.814802885055542
    3. 'index' → logprob: -2.064802885055542
    4. ' at' → logprob: -2.439802885055542
    5. 'used' → logprob: -2.564802885055542
    6. '0' → logprob: -2.939802885055542
    7. 'at' → logprob: -3.189802885055542
    8. 'from' → logprob: -3.189802885055542
    9. '#' → logprob: -3.189802885055542
    10. '[' → logprob: -3.439802885055542

Token 2185: ' counts' (ID: 28991)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.8097162842750549
    2. 'coins' → logprob: -1.6847162246704102
    3. '[' → logprob: -2.18471622467041
    4. '(' → logprob: -2.55971622467041
    5. 'used' → logprob: -2.68471622467041
    6. '0' → logprob: -2.80971622467041
    7. '6' → logprob: -4.30971622467041
    8. 'tuple' → logprob: -4.68471622467041
    9. '(len' → logprob: -4.93471622467041
    10. 'coin' → logprob: -5.43471622467041

Token 2186: ' coins' (ID: 28969)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.37183135747909546
    2. ',' → logprob: -2.9968314170837402
    3. '[' → logprob: -3.1218314170837402
    4. ':' → logprob: -3.3718314170837402
    5. ' =' → logprob: -3.6218314170837402
    6. '```' → logprob: -3.8718314170837402
    7. ')' → logprob: -3.9968314170837402
    8. '=' → logprob: -4.24683141708374
    9. '                       ' → logprob: -4.24683141708374
    10. '_' → logprob: -4.62183141708374

Token 2187: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0028262771666049957
    2. '_used' → logprob: -6.37782621383667
    3. '```' → logprob: -7.87782621383667
    4. ')' → logprob: -8.752826690673828
    5. '           ' → logprob: -8.877826690673828
    6. '   ' → logprob: -9.752826690673828
    7. '_in' → logprob: -10.002826690673828
    8. ' =' → logprob: -10.377826690673828
    9. '       ' → logprob: -10.377826690673828
    10. ',' → logprob: -10.502826690673828

Token 2188: 'held' (ID: 32869)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06200018152594566
    2. 'held' → logprob: -2.812000274658203
    3. '```' → logprob: -10.812000274658203
    4. '   ' → logprob: -12.187000274658203
    5. '``' → logprob: -13.687000274658203
    6. '_he' → logprob: -13.812000274658203
    7. '
' → logprob: -13.937000274658203
    8. '-held' → logprob: -14.562000274658203
    9. ')' → logprob: -14.687000274658203
    10. '[' → logprob: -14.937000274658203

Token 2189: ' of' (ID: 328)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.017424365505576134
    2. ':
' → logprob: -5.267424583435059
    3. '):
' → logprob: -6.017424583435059
    4. '               ' → logprob: -6.517424583435059
    5. ' if' → logprob: -6.517424583435059
    6. ',' → logprob: -6.642424583435059
    7. '                       ' → logprob: -7.017424583435059
    8. ':' → logprob: -7.392424583435059
    9. '
' → logprob: -7.392424583435059
    10. '                    
' → logprob: -7.392424583435059

Token 2190: ' same' (ID: 2684)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.9841587543487549
    2. 'each' → logprob: -1.6091587543487549
    3. '500' → logprob: -1.6091587543487549
    4. 'six' → logprob: -2.109158754348755
    5. 'len' → logprob: -2.984158754348755
    6. 'coins' → logprob: -3.859158754348755
    7. 'Coin' → logprob: -4.484158515930176
    8. 'used' → logprob: -4.859158515930176
    9. 'coin' → logprob: -5.984158515930176
    10. '[' → logprob: -6.109158515930176

Token 2191: ' order' (ID: 2569)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.3041958808898926
    2. '):
' → logprob: -1.8041958808898926
    3. '[i' → logprob: -2.0541958808898926
    4. '[' → logprob: -2.3041958808898926
    5. ')' → logprob: -2.4291958808898926
    6. ')
' → logprob: -2.6791958808898926
    7. '                   ' → logprob: -3.4291958808898926
    8. '[
' → logprob: -3.9291958808898926
    9. ',' → logprob: -4.429195880889893
    10. ']' → logprob: -4.554195880889893

Token 2192: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03843538463115692
    2. 'if' → logprob: -3.663435459136963
    3. '                       ' → logprob: -4.788435459136963
    4. ' if' → logprob: -6.788435459136963
    5. 'for' → logprob: -6.913435459136963
    6. ',' → logprob: -8.038434982299805
    7. '```' → logprob: -8.288434982299805
    8. '#' → logprob: -9.038434982299805
    9. '                           ' → logprob: -9.038434982299805
    10. '               ' → logprob: -9.538434982299805

Token 2193: ' must' (ID: 2804)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8934443593025208
    2. 'can' → logprob: -1.268444299697876
    3. 'valid' → logprob: -1.518444299697876
    4. '                   ' → logprob: -2.768444299697876
    5. 'en' → logprob: -4.018444538116455
    6. '#' → logprob: -6.143444538116455
    7. 's' → logprob: -6.643444538116455
    8. 'ok' → logprob: -6.768444538116455
    9. 'available' → logprob: -7.143444538116455
    10. 'all' → logprob: -7.143444538116455

Token 2194: ' check' (ID: 2371)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.5996701717376709
    2. 'pass' → logprob: -1.099670171737671
    3. 'continue' → logprob: -3.224670171737671
    4. 'have' → logprob: -3.974670171737671
    5. 'be' → logprob: -4.34967041015625
    6. 's' → logprob: -4.34967041015625
    7. 'en' → logprob: -4.34967041015625
    8. 'allow' → logprob: -4.84967041015625
    9. 'valid' → logprob: -5.47467041015625
    10. 'ok' → logprob: -5.84967041015625

Token 2195: ' >=' (ID: 5064)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06646440923213959
    2. 'can' → logprob: -3.066464424133301
    3. '                   ' → logprob: -4.941464424133301
    4. 'en' → logprob: -5.191464424133301
    5. 'for' → logprob: -5.941464424133301
    6. 'valid' → logprob: -7.316464424133301
    7. '```' → logprob: -7.566464424133301
    8. 'able' → logprob: -7.941464424133301
    9. 'has' → logprob: -8.4414644241333
    10. 'all' → logprob: -8.6914644241333

Token 2196: ' used' (ID: 2061)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.14418666064739227
    2. 'True' → logprob: -2.6441867351531982
    3. 'for' → logprob: -3.0191867351531982
    4. 'if' → logprob: -4.894186496734619
    5. '                   ' → logprob: -5.769186496734619
    6. '```' → logprob: -6.894186496734619
    7. '           ' → logprob: -7.269186496734619
    8. '               ' → logprob: -7.644186496734619
    9. ' all' → logprob: -7.894186496734619
    10. '                       ' → logprob: -8.144186973571777

Token 2197: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.0001398929744027555
    2. '_' → logprob: -9.750140190124512
    3. '_counts' → logprob: -9.875140190124512
    4. '_coin' → logprob: -10.875140190124512
    5. 'Coins' → logprob: -12.625140190124512
    6. '[i' → logprob: -13.125140190124512
    7. '```' → logprob: -13.500140190124512
    8. 'Co' → logprob: -13.875140190124512
    9. '_count' → logprob: -14.125140190124512
    10. '_
' → logprob: -14.625140190124512

Token 2198: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.044724125415086746
    2. '_' → logprob: -3.169724225997925
    3. 'unts' → logprob: -8.169724464416504
    4. '_ins' → logprob: -8.294724464416504
    5. '_counts' → logprob: -8.919724464416504
    6. '[' → logprob: -9.044724464416504
    7. '               ' → logprob: -9.169724464416504
    8. 'ints' → logprob: -9.294724464416504
    9. 'in' → logprob: -9.669724464416504
    10. 's' → logprob: -9.919724464416504

Token 2199: '?

' (ID: 1715)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09718909114599228
    2. 'if' → logprob: -3.22218918800354
    3. '                       ' → logprob: -3.72218918800354
    4. ' if' → logprob: -4.472188949584961
    5. ':' → logprob: -4.847188949584961
    6. ':
' → logprob: -5.347188949584961
    7. '                           ' → logprob: -6.972188949584961
    8. '               ' → logprob: -6.972188949584961
    9. '```' → logprob: -7.472188949584961
    10. 'for' → logprob: -7.597188949584961

Token 2200: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0760519877076149
    2. 'if' → logprob: -3.076051950454712
    3. '                       ' → logprob: -3.951051950454712
    4. '```' → logprob: -5.826052188873291
    5. ' if' → logprob: -6.326052188873291
    6. ':
' → logprob: -6.951052188873291
    7. 'for' → logprob: -7.201052188873291
    8. '               ' → logprob: -7.951052188873291
    9. ':' → logprob: -8.076051712036133
    10. ',' → logprob: -8.951051712036133

Token 2201: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03833327442407608
    2. '                   ' → logprob: -3.2883331775665283
    3. ' if' → logprob: -9.28833293914795
    4. 'valid' → logprob: -10.28833293914795
    5. 'for' → logprob: -10.28833293914795
    6. '                       ' → logprob: -10.41333293914795
    7. '```' → logprob: -10.41333293914795
    8. 'can' → logprob: -10.53833293914795
    9. '               ' → logprob: -11.41333293914795
    10. '           ' → logprob: -11.53833293914795

Token 2202: ' any' (ID: 1062)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.00042054426739923656
    2. ' all' → logprob: -8.125420570373535
    3. 'any' → logprob: -9.375420570373535
    4. '                   ' → logprob: -10.875420570373535
    5. '               ' → logprob: -11.750420570373535
    6. '   ' → logprob: -12.125420570373535
    7. '           ' → logprob: -13.125420570373535
    8. '                       ' → logprob: -13.250420570373535
    9. '       ' → logprob: -14.000420570373535
    10. '                           ' → logprob: -14.500420570373535

Token 2203: '(' (ID: 7)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.05513998121023178
    2. 'c' → logprob: -3.6801400184631348
    3. 'used' → logprob: -4.680140018463135
    4. ' coins' → logprob: -4.680140018463135
    5. 'held' → logprob: -5.555140018463135
    6. 'a' → logprob: -6.805140018463135
    7. '(co' → logprob: -6.930140018463135
    8. '   ' → logprob: -7.055140018463135
    9. 'x' → logprob: -7.180140018463135
    10. 'u' → logprob: -7.305140018463135

Token 2204: 'used' (ID: 4943)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.30880069732666016
    2. 'used' → logprob: -1.6838006973266602
    3. 'c' → logprob: -3.43380069732666
    4. 'u' → logprob: -3.55880069732666
    5. 'hc' → logprob: -5.30880069732666
    6. 'held' → logprob: -5.43380069732666
    7. 'a' → logprob: -6.05880069732666
    8. 'uc' → logprob: -6.30880069732666
    9. 'x' → logprob: -6.30880069732666
    10. ' coins' → logprob: -6.43380069732666

Token 2205: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.001992278266698122
    2. '_' → logprob: -6.751992225646973
    3. '_coin' → logprob: -7.501992225646973
    4. '[i' → logprob: -9.126992225646973
    5. 'coins' → logprob: -9.251992225646973
    6. '   ' → logprob: -10.876992225646973
    7. '[' → logprob: -11.626992225646973
    8. 'coin' → logprob: -12.126992225646973
    9. '```' → logprob: -12.251992225646973
    10. '_counts' → logprob: -12.876992225646973

Token 2206: 'ins' (ID: 1564)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.06617311388254166
    2. 'ins' → logprob: -3.3161730766296387
    3. '_' → logprob: -3.6911730766296387
    4. 'in' → logprob: -7.066173076629639
    5. '_in' → logprob: -7.441173076629639
    6. '_ins' → logprob: -7.566173076629639
    7. '_counts' → logprob: -8.441173553466797
    8. 'coins' → logprob: -9.066173553466797
    9. '_i' → logprob: -9.816173553466797
    10. '_)' → logprob: -9.816173553466797

Token 2207: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001614961656741798
    2. '>' → logprob: -7.126615047454834
    3. '>[' → logprob: -7.501615047454834
    4. ' >' → logprob: -9.376614570617676
    5. '[' → logprob: -10.126614570617676
    6. '[j' → logprob: -10.876614570617676
    7. '[c' → logprob: -10.876614570617676
    8. 'i' → logprob: -11.001614570617676
    9. '[idx' → logprob: -11.626614570617676
    10. '   ' → logprob: -11.626614570617676

Token 2208: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.10233532637357712
    2. ' >' → logprob: -2.602335214614868
    3. ']' → logprob: -4.102335453033447
    4. '[i' → logprob: -5.352335453033447
    5. ']>' → logprob: -6.352335453033447
    6. 'i' → logprob: -10.852334976196289
    7. '[' → logprob: -10.852334976196289
    8. '           ' → logprob: -10.977334976196289
    9. '>
' → logprob: -11.102334976196289
    10. '   ' → logprob: -11.352334976196289

Token 2209: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.02641884982585907
    2. ' >' → logprob: -3.651418924331665
    3. '[i' → logprob: -9.276418685913086
    4. '>
' → logprob: -11.651418685913086
    5. '   ' → logprob: -12.276418685913086
    6. '[' → logprob: -13.151418685913086
    7. ' >
' → logprob: -13.526418685913086
    8. '           ' → logprob: -13.776418685913086
    9. ']' → logprob: -13.901418685913086
    10. '>[' → logprob: -14.026418685913086

Token 2210: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -4.5252596464706585e-05
    2. ' coins' → logprob: -10.125044822692871
    3. 'coin' → logprob: -12.250044822692871
    4. '   ' → logprob: -15.125044822692871
    5. '           ' → logprob: -17.375045776367188
    6. '               ' → logprob: -17.750045776367188
    7. 'co' → logprob: -17.750045776367188
    8. '```' → logprob: -18.000045776367188
    9. '                   ' → logprob: -18.625045776367188
    10. 'current' → logprob: -18.625045776367188

Token 2211: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.690834273584187e-05
    2. 'held' → logprob: -10.87503719329834
    3. '[i' → logprob: -11.12503719329834
    4. 'i' → logprob: -13.75003719329834
    5. '```' → logprob: -14.37503719329834
    6. '_i' → logprob: -14.87503719329834
    7. '   ' → logprob: -15.12503719329834
    8. ' i' → logprob: -15.50003719329834
    9. '[' → logprob: -15.50003719329834
    10. '``' → logprob: -16.500036239624023

Token 2212: 'held' (ID: 32869)
  Prédit: 'held'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'held' → logprob: -0.00048358101048506796
    2. '_' → logprob: -8.125483512878418
    3. '[i' → logprob: -9.375483512878418
    4. 'i' → logprob: -9.500483512878418
    5. '```' → logprob: -11.875483512878418
    6. '-held' → logprob: -12.000483512878418
    7. 'Held' → logprob: -12.250483512878418
    8. '0' → logprob: -13.375483512878418
    9. ' held' → logprob: -13.500483512878418
    10. '   ' → logprob: -13.750483512878418

Token 2213: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2113979209971149e-05
    2. 'i' → logprob: -11.875012397766113
    3. '[
' → logprob: -13.000012397766113
    4. '(i' → logprob: -13.875012397766113
    5. ' [' → logprob: -14.750012397766113
    6. '```' → logprob: -14.750012397766113
    7. ' i' → logprob: -15.125012397766113
    8. '
' → logprob: -15.750012397766113
    9. '   ' → logprob: -16.000011444091797
    10. '[' → logprob: -16.000011444091797

Token 2214: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22171346843242645
    2. 'for' → logprob: -2.0967135429382324
    3. '[i' → logprob: -2.7217135429382324
    4. '           ' → logprob: -5.721713542938232
    5. ')' → logprob: -6.346713542938232
    6. '                   ' → logprob: -6.596713542938232
    7. '               ' → logprob: -6.596713542938232
    8. '       ' → logprob: -7.221713542938232
    9. 'i' → logprob: -8.221713066101074
    10. ']' → logprob: -8.346713066101074

Token 2215: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11273348331451416
    2. 'for' → logprob: -2.3627333641052246
    3. ')' → logprob: -4.987733364105225
    4. ' or' → logprob: -6.362733364105225
    5. '):
' → logprob: -6.487733364105225
    6. '):' → logprob: -7.362733364105225
    7. '<|end|>' → logprob: -7.362733364105225
    8. '                           ' → logprob: -8.987733840942383
    9. '[i' → logprob: -9.362733840942383
    10. ' )' → logprob: -9.362733840942383

Token 2216: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00020354038861114532
    2. ' i' → logprob: -8.500203132629395
    3. '	i' → logprob: -16.75020408630371
    4. '
' → logprob: -18.25020408630371
    5. '(i' → logprob: -21.25020408630371
    6. '   ' → logprob: -21.25020408630371
    7. ')i' → logprob: -21.25020408630371
    8. '```' → logprob: -21.62520408630371
    9. 'in' → logprob: -21.75020408630371
    10. '[i' → logprob: -21.75020408630371

Token 2217: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18858209252357483
    2. 'in' → logprob: -2.063582181930542
    3. ' i' → logprob: -3.688582181930542
    4. 'i' → logprob: -3.938582181930542
    5. '<|end|>' → logprob: -8.563582420349121
    6. '[i' → logprob: -8.938582420349121
    7. '<|end|>' → logprob: -11.313582420349121
    8. '(i' → logprob: -11.563582420349121
    9. ',i' → logprob: -11.813582420349121
    10. '=i' → logprob: -12.188582420349121

Token 2218: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0014323819195851684
    2. ' range' → logprob: -6.751432418823242
    3. 'i' → logprob: -8.251432418823242
    4. '(range' → logprob: -14.501432418823242
    5. '
' → logprob: -15.001432418823242
    6. '(' → logprob: -15.251432418823242
    7. '	range' → logprob: -16.376432418823242
    8. '[' → logprob: -16.751432418823242
    9. ' i' → logprob: -16.876432418823242
    10. '```' → logprob: -17.376432418823242

Token 2219: '(' (ID: 7)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.016069795936346054
    2. 'len' → logprob: -4.1410698890686035
    3. '(len' → logprob: -11.141069412231445
    4. ' len' → logprob: -12.141069412231445
    5. '```' → logprob: -12.391069412231445
    6. 'i' → logprob: -12.516069412231445
    7. ' ' → logprob: -13.141069412231445
    8. '                   ' → logprob: -13.391069412231445
    9. '   ' → logprob: -14.141069412231445
    10. '(' → logprob: -14.141069412231445

Token 2220: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -9.491498531133402e-06
    2. 'len' → logprob: -11.625009536743164
    3. 'i' → logprob: -15.000009536743164
    4. '```' → logprob: -16.125009536743164
    5. '1' → logprob: -16.250009536743164
    6. '0' → logprob: -16.875009536743164
    7. '                   ' → logprob: -17.875009536743164
    8. '   ' → logprob: -17.875009536743164
    9. '           ' → logprob: -17.875009536743164
    10. ')' → logprob: -18.125009536743164

Token 2221: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6943600177764893
    2. '):' → logprob: -0.6943600177764893
    3. ')' → logprob: -6.94435977935791
    4. '                   ' → logprob: -8.81935977935791
    5. '                       ' → logprob: -10.69435977935791
    6. '):
' → logprob: -10.94435977935791
    7. '   ' → logprob: -11.06935977935791
    8. '):

' → logprob: -11.06935977935791
    9. '       ' → logprob: -11.81935977935791
    10. ')==' → logprob: -12.69435977935791

Token 2222: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0001669485354796052
    2. 'continue' → logprob: -9.250166893005371
    3. ' continue' → logprob: -10.000166893005371
    4. ':' → logprob: -11.625166893005371
    5. ':
' → logprob: -12.250166893005371
    6. '                           ' → logprob: -12.500166893005371
    7. '                   ' → logprob: -13.250166893005371
    8. '                               ' → logprob: -13.375166893005371
    9. '                        ' → logprob: -13.750166893005371
    10. '                      ' → logprob: -14.125166893005371

Token 2223: ' continue' (ID: 4901)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.694476306438446
    2. 'continue' (adapté à ' continue') → logprob: -0.694476306438446
    3. '                           ' → logprob: -6.694476127624512
    4. ' continue' → logprob: -9.944476127624512
    5. '                               ' → logprob: -10.444476127624512
    6. '                   ' → logprob: -12.444476127624512
    7. '   ' → logprob: -12.694476127624512
    8. '	continue' → logprob: -13.444476127624512
    9. '```' → logprob: -13.694476127624512
    10. '
' → logprob: -13.819476127624512

Token 2224: ' ' (ID: 220)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009781472384929657
    2. '                       ' → logprob: -5.509781360626221
    3. '                    
' → logprob: -5.759781360626221
    4. '                        
' → logprob: -7.134781360626221
    5. '                    ' → logprob: -8.009781837463379
    6. ':
' → logprob: -8.009781837463379
    7. '               ' → logprob: -8.634781837463379
    8. '                           ' → logprob: -8.884781837463379
    9. '```' → logprob: -8.884781837463379
    10. '
' → logprob: -9.134781837463379

Token 2225: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003663968062028289
    2. '```' → logprob: -6.753664016723633
    3. '
' → logprob: -7.128664016723633
    4. 'continue' → logprob: -7.378664016723633
    5. '                       ' → logprob: -7.503664016723633
    6. '                    
' → logprob: -8.378664016723633
    7. 'else' → logprob: -9.378664016723633
    8. '               ' → logprob: -9.753664016723633
    9. 'if' → logprob: -9.878664016723633
    10. '                        
' → logprob: -10.878664016723633

Token 2226: ' can't' (ID: 8535)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.2083725929260254
    2. '                       ' → logprob: -2.2083725929260254
    3. '                           ' → logprob: -3.0833725929260254
    4. '                   ' → logprob: -3.5833725929260254
    5. '                               ' → logprob: -6.583372592926025
    6. ' continue' → logprob: -6.833372592926025
    7. '```' → logprob: -7.208372592926025
    8. '           ' → logprob: -7.583372592926025
    9. '   ' → logprob: -8.333372116088867
    10. '
' → logprob: -8.333372116088867

Token 2227: ' pay' (ID: 2777)
  Prédit: 'pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pay' → logprob: -0.02217278443276882
    2. 'use' → logprob: -3.897172689437866
    3. 'pro' → logprob: -7.522172927856445
    4. ' pay' → logprob: -7.772172927856445
    5. ' use' → logprob: -8.022172927856445
    6. 'continue' → logprob: -9.147172927856445
    7. '```' → logprob: -9.522172927856445
    8. 'make' → logprob: -10.272172927856445
    9. '           ' → logprob: -10.522172927856445
    10. '       ' → logprob: -11.147172927856445

Token 2228: ' these' (ID: 1879)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003787250490859151
    2. '```' → logprob: -6.378787040710449
    3. '
' → logprob: -6.878787040710449
    4. '                       ' → logprob: -7.378787040710449
    5. '                    
' → logprob: -8.50378704071045
    6. '               ' → logprob: -9.62878704071045
    7. '                        
' → logprob: -10.00378704071045
    8. 'continue' → logprob: -10.25378704071045
    9. '           ' → logprob: -10.62878704071045
    10. '                           ' → logprob: -11.87878704071045

Token 2229: ' coins' (ID: 28969)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00502513675019145
    2. '                    
' → logprob: -5.8800249099731445
    3. '
' → logprob: -6.8800249099731445
    4. '                       ' → logprob: -7.7550249099731445
    5. '               ' → logprob: -8.130024909973145
    6. '                        
' → logprob: -8.630024909973145
    7. '           ' → logprob: -9.630024909973145
    8. '```' → logprob: -9.880024909973145
    9. ',' → logprob: -10.505024909973145
    10. 'continue' → logprob: -10.630024909973145

Token 2230: '

' (ID: 279)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.011555256322026253
    2. '
' → logprob: -5.261555194854736
    3. '                    
' → logprob: -5.511555194854736
    4. '```' → logprob: -7.011555194854736
    5. '                       ' → logprob: -7.761555194854736
    6. '                        
' → logprob: -8.136555671691895
    7. '               ' → logprob: -8.761555671691895
    8. ')
' → logprob: -9.011555671691895
    9. '           ' → logprob: -9.511555671691895
    10. '    
' → logprob: -10.511555671691895

Token 2231: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07302014529705048
    2. '
' → logprob: -2.6980202198028564
    3. '                    
' → logprob: -5.823019981384277
    4. 'new' → logprob: -9.698019981384277
    5. 'coin' → logprob: -11.448019981384277
    6. '                        
' → logprob: -11.573019981384277
    7. '                   
' → logprob: -12.198019981384277
    8. '                
' → logprob: -12.323019981384277
    9. '               ' → logprob: -12.323019981384277
    10. '

' → logprob: -12.573019981384277

Token 2232: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.588982343673706
    2. 'new' → logprob: -0.838982343673706
    3. '#' (adapté à ' #') → logprob: -5.088982582092285
    4. 'change' → logprob: -5.213982582092285
    5. 'next' → logprob: -7.838982582092285
    6. '                    
' → logprob: -8.088982582092285
    7. 'pay' → logprob: -8.588982582092285
    8. 'coin' → logprob: -9.213982582092285
    9. '```' → logprob: -9.338982582092285
    10. '
' → logprob: -9.713982582092285

Token 2233: ' build' (ID: 3024)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.037859346717596054
    2. '#' → logprob: -3.7878594398498535
    3. 'change' → logprob: -4.6628594398498535
    4. 'next' → logprob: -6.2878594398498535
    5. 'paid' → logprob: -7.0378594398498535
    6. '                   ' → logprob: -7.1628594398498535
    7. 'remaining' → logprob: -8.037858963012695
    8. 'used' → logprob: -8.662858963012695
    9. 'payment' → logprob: -8.787858963012695
    10. 'updated' → logprob: -8.912858963012695

Token 2234: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.019605522975325584
    2. 'next' → logprob: -4.39460563659668
    3. ' new' → logprob: -5.26960563659668
    4. '                   ' → logprob: -7.26960563659668
    5. '```' → logprob: -8.14460563659668
    6. 'used' → logprob: -9.01960563659668
    7. 'updated' → logprob: -9.01960563659668
    8. '   ' → logprob: -9.14460563659668
    9. '``' → logprob: -9.26960563659668
    10. 'paid' → logprob: -9.26960563659668

Token 2235: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.03039814718067646
    2. '_co' → logprob: -4.030398368835449
    3. 'coin' → logprob: -4.530398368835449
    4. '_coin' → logprob: -7.155398368835449
    5. '```' → logprob: -7.780398368835449
    6. 'held' → logprob: -9.78039836883545
    7. '``' → logprob: -9.78039836883545
    8. 'co' → logprob: -10.40539836883545
    9. ' coins' → logprob: -10.78039836883545
    10. '_' → logprob: -11.78039836883545

Token 2236: ' count' (ID: 3605)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006742015480995178
    2. '           ' → logprob: -6.131742000579834
    3. 'held' → logprob: -6.131742000579834
    4. '```' → logprob: -7.131742000579834
    5. '_used' → logprob: -7.256742000579834
    6. '   ' → logprob: -7.756742000579834
    7. '_counts' → logprob: -9.256742477416992
    8. ' =' → logprob: -9.631742477416992
    9. '       ' → logprob: -9.881742477416992
    10. '_new' → logprob: -10.006742477416992

Token 2237: ' after' (ID: 1934)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6200661659240723
    2. '                   ' → logprob: -0.8700661659240723
    3. ' new' → logprob: -3.7450661659240723
    4. '```' → logprob: -4.620066165924072
    5. '_new' → logprob: -5.995066165924072
    6. ' =' → logprob: -6.495066165924072
    7. '                       ' → logprob: -6.745066165924072
    8. '``' → logprob: -7.495066165924072
    9. '   ' → logprob: -7.620066165924072
    10. 'next' → logprob: -7.870066165924072

Token 2238: ' payment' (ID: 9277)
  Prédit: 'payment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'payment' → logprob: -0.021380063146352768
    2. 'pay' → logprob: -5.0213799476623535
    3. 'purchase' → logprob: -5.2713799476623535
    4. 'subtract' → logprob: -5.8963799476623535
    5. '```' → logprob: -6.1463799476623535
    6. ' payment' → logprob: -6.8963799476623535
    7. 'used' → logprob: -7.2713799476623535
    8. 'coin' → logprob: -8.146380424499512
    9. 'hand' → logprob: -8.146380424499512
    10. 'def' → logprob: -8.271380424499512

Token 2239: ':
' (ID: 734)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.2187279909849167
    2. '                   ' → logprob: -1.718727946281433
    3. '```' → logprob: -4.343728065490723
    4. ' new' → logprob: -6.593728065490723
    5. '``' → logprob: -6.843728065490723
    6. '_new' → logprob: -8.218728065490723
    7. '                       ' → logprob: -8.218728065490723
    8. '(new' → logprob: -8.593728065490723
    9. ' =' → logprob: -9.093728065490723
    10. '
' → logprob: -9.218728065490723

Token 2240: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6945743560791016
    2. 'new' → logprob: -0.6945743560791016
    3. ' new' → logprob: -7.569574356079102
    4. '```' → logprob: -7.819574356079102
    5. '
' → logprob: -8.444574356079102
    6. '                    
' → logprob: -9.444574356079102
    7. '   ' → logprob: -9.944574356079102
    8. '                       ' → logprob: -10.069574356079102
    9. '``' → logprob: -10.319574356079102
    10. '               ' → logprob: -10.569574356079102

Token 2241: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0009063414763659239
    2. '                   ' → logprob: -7.625906467437744
    3. '```' → logprob: -8.750905990600586
    4. ' new' → logprob: -9.000905990600586
    5. '   ' → logprob: -9.625905990600586
    6. '           ' → logprob: -10.875905990600586
    7. '                       ' → logprob: -11.000905990600586
    8. '``' → logprob: -11.125905990600586
    9. '               ' → logprob: -11.375905990600586
    10. '       ' → logprob: -12.250905990600586

Token 2242: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0005404045223258436
    2. '                   ' → logprob: -8.000540733337402
    3. '```' → logprob: -9.625540733337402
    4. ' new' → logprob: -9.750540733337402
    5. '   ' → logprob: -10.500540733337402
    6. '           ' → logprob: -10.875540733337402
    7. '                       ' → logprob: -11.375540733337402
    8. '               ' → logprob: -11.750540733337402
    9. '``' → logprob: -11.875540733337402
    10. '       ' → logprob: -12.750540733337402

Token 2243: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.06401635706424713
    2. 'coins' → logprob: -2.814016342163086
    3. '_coin' → logprob: -6.314016342163086
    4. 'coin' → logprob: -9.189016342163086
    5. '_counts' → logprob: -9.939016342163086
    6. '_' → logprob: -10.064016342163086
    7. '```' → logprob: -10.814016342163086
    8. ' coins' → logprob: -11.814016342163086
    9. '``' → logprob: -12.189016342163086
    10. 'co' → logprob: -12.564016342163086

Token 2244: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.01575431041419506
    2. 'unts' → logprob: -4.765754222869873
    3. 'unt' → logprob: -5.765754222869873
    4. 'in' → logprob: -6.265754222869873
    5. '_' → logprob: -7.015754222869873
    6. 'ints' → logprob: -7.765754222869873
    7. '_ins' → logprob: -8.890754699707031
    8. '_counts' → logprob: -8.890754699707031
    9. '   ' → logprob: -8.890754699707031
    10. '``' → logprob: -9.390754699707031

Token 2245: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08344834297895432
    2. ' =' → logprob: -2.5834484100341797
    3. '```' → logprob: -6.08344841003418
    4. '                   ' → logprob: -7.08344841003418
    5. '[i' → logprob: -8.33344841003418
    6. '_counts' → logprob: -8.45844841003418
    7. '               ' → logprob: -8.58344841003418
    8. '           ' → logprob: -8.58344841003418
    9. '   ' → logprob: -9.20844841003418
    10. '=i' → logprob: -9.33344841003418

Token 2246: ' coins' (ID: 28969)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0024557956494390965
    2. '(tuple' → logprob: -6.752455711364746
    3. ' tuple' → logprob: -6.877455711364746
    4. '   ' → logprob: -9.252455711364746
    5. 'coins' → logprob: -9.877455711364746
    6. '(
' → logprob: -10.127455711364746
    7. '(' → logprob: -10.752455711364746
    8. '           ' → logprob: -11.127455711364746
    9. 'new' → logprob: -12.502455711364746
    10. '               ' → logprob: -12.502455711364746

Token 2247: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.020254792645573616
    2. 'held' → logprob: -4.770254611968994
    3. '```' → logprob: -5.770254611968994
    4. ' =' → logprob: -6.520254611968994
    5. '_count' → logprob: -6.770254611968994
    6. '           ' → logprob: -7.020254611968994
    7. '[i' → logprob: -7.270254611968994
    8. '                   ' → logprob: -7.395254611968994
    9. '_counts' → logprob: -7.520254611968994
    10. '   ' → logprob: -7.520254611968994

Token 2248: 'held' (ID: 32869)
  Prédit: 'held'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'held' → logprob: -0.14532186090946198
    2. 'tuple' → logprob: -2.145321846008301
    3. '```' → logprob: -5.270321846008301
    4. 'counts' → logprob: -5.645321846008301
    5. 'holder' → logprob: -5.770321846008301
    6. '500' → logprob: -6.645321846008301
    7. 'count' → logprob: -6.645321846008301
    8. '   ' → logprob: -7.020321846008301
    9. '(' → logprob: -7.270321846008301
    10. 'i' → logprob: -8.3953218460083

Token 2249: ' -' (ID: 533)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.23141010105609894
    2. '[:]' → logprob: -2.231410026550293
    3. '.copy' → logprob: -2.731410026550293
    4. '[i' → logprob: -4.856410026550293
    5. '=' → logprob: -5.106410026550293
    6. '```' → logprob: -5.356410026550293
    7. '                   ' → logprob: -5.606410026550293
    8. ' =' → logprob: -5.731410026550293
    9. '
' → logprob: -6.231410026550293
    10. '[' → logprob: -6.481410026550293

Token 2250: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.06040682643651962
    2. 'tuple' → logprob: -3.3104069232940674
    3. ' used' → logprob: -3.9354069232940674
    4. ' tuple' → logprob: -6.185406684875488
    5. '(' → logprob: -8.310406684875488
    6. '
' → logprob: -9.685406684875488
    7. '```' → logprob: -9.685406684875488
    8. '   ' → logprob: -10.310406684875488
    9. '[' → logprob: -10.810406684875488
    10. 'tu' → logprob: -11.560406684875488

Token 2251: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -2.5776860184123507e-06
    2. '_' → logprob: -13.50000286102295
    3. '```' → logprob: -14.25000286102295
    4. '
' → logprob: -15.75000286102295
    5. '_coin' → logprob: -16.500001907348633
    6. 'coins' → logprob: -16.500001907348633
    7. 'co' → logprob: -16.625001907348633
    8. '\' → logprob: -17.125001907348633
    9. '``' → logprob: -17.625001907348633
    10. '_c' → logprob: -17.625001907348633

Token 2252: 'ins' (ID: 1564)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.00027718624914996326
    2. 'coins' → logprob: -8.500277519226074
    3. 'ins' → logprob: -10.125277519226074
    4. 'co' → logprob: -11.625277519226074
    5. '_' → logprob: -11.750277519226074
    6. '-co' → logprob: -12.250277519226074
    7. 'Coins' → logprob: -12.875277519226074
    8. '_ins' → logprob: -13.125277519226074
    9. '```' → logprob: -13.125277519226074
    10. '_in' → logprob: -14.125277519226074

Token 2253: ' +' (ID: 659)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0521042346954346
    2. '                   ' → logprob: -1.1771042346954346
    3. '[i' → logprob: -1.9271042346954346
    4. '
' → logprob: -2.4271042346954346
    5. 'new' → logprob: -3.1771042346954346
    6. '[' → logprob: -4.3021039962768555
    7. 'for' → logprob: -4.5521039962768555
    8. '``' → logprob: -4.5521039962768555
    9. '[:' → logprob: -5.3021039962768555
    10. '[
' → logprob: -5.9271039962768555

Token 2254: ' change' (ID: 3343)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.6266273856163025
    2. 'change' → logprob: -1.0016274452209473
    3. 'used' → logprob: -3.1266274452209473
    4. 'Coin' → logprob: -3.5016274452209473
    5. ' tuple' → logprob: -4.376627445220947
    6. 'Payment' → logprob: -5.876627445220947
    7. ' change' → logprob: -6.126627445220947
    8. 'received' → logprob: -6.501627445220947
    9. '   ' → logprob: -7.251627445220947
    10. 'coins' → logprob: -7.376627445220947

Token 2255: '_co' (ID: 21102)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1363428831100464
    2. '```' → logprob: -1.1363428831100464
    3. '                   ' → logprob: -1.8863428831100464
    4. '_co' → logprob: -2.261343002319336
    5. '[i' → logprob: -3.386343002319336
    6. '_
' → logprob: -3.761343002319336
    7. ' =' → logprob: -4.511343002319336
    8. '_counts' → logprob: -5.136343002319336
    9. '``' → logprob: -5.261343002319336
    10. '_used' → logprob: -5.886343002319336

Token 2256: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.009821374900639057
    2. 'unts' → logprob: -5.25982141494751
    3. 'in' → logprob: -6.50982141494751
    4. 'unt' → logprob: -7.13482141494751
    5. 'oints' → logprob: -7.63482141494751
    6. '_' → logprob: -8.134820938110352
    7. 'ints' → logprob: -8.384820938110352
    8. '   ' → logprob: -8.634820938110352
    9. '_ins' → logprob: -8.884820938110352
    10. '``' → logprob: -9.259820938110352

Token 2257: ' except' (ID: 6384)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.060095153748989105
    2. '
' → logprob: -4.185095310211182
    3. ' =' → logprob: -4.685095310211182
    4. '```' → logprob: -4.935095310211182
    5. 'new' → logprob: -5.310095310211182
    6. 'used' → logprob: -5.810095310211182
    7. '=' → logprob: -5.935095310211182
    8. '#' → logprob: -6.435095310211182
    9. 'from' → logprob: -6.560095310211182
    10. '                    
' → logprob: -6.685095310211182

Token 2258: ' ' (ID: 220)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -1.0808545351028442
    2. 'for' → logprob: -1.8308545351028442
    3. 'Coin' → logprob: -1.9558545351028442
    4. '100' → logprob: -2.2058544158935547
    5. '500' → logprob: -2.2058544158935547
    6. 'the' → logprob: -2.4558544158935547
    7. 'that' → logprob: -3.9558544158935547
    8. 'den' → logprob: -4.830854415893555
    9. 'coins' → logprob: -5.830854415893555
    10. '(' → logprob: -5.830854415893555

Token 2259: '500' (ID: 3234)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5046343803405762
    2. '500' → logprob: -2.004634380340576
    3. 'used' → logprob: -2.254634380340576
    4. 'the' → logprob: -2.504634380340576
    5. 'for' → logprob: -3.504634380340576
    6. 'den' → logprob: -3.879634380340576
    7. 'Coin' → logprob: -5.879634380340576
    8. 'coins' → logprob: -5.879634380340576
    9. 'index' → logprob: -6.004634380340576
    10. 'i' → logprob: -6.129634380340576

Token 2260: '-y' (ID: 18102)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04941519349813461
    2. '
' → logprob: -5.174415111541748
    3. ':
' → logprob: -5.174415111541748
    4. ')' → logprob: -5.299415111541748
    5. '```' → logprob: -5.424415111541748
    6. '                    
' → logprob: -5.674415111541748
    7. ',' → logprob: -5.799415111541748
    8. '                       ' → logprob: -5.924415111541748
    9. ' =' → logprob: -6.424415111541748
    10. '[' → logprob: -6.549415111541748

Token 2261: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.001307617872953415
    2. '```' → logprob: -8.001307487487793
    3. '-en' → logprob: -8.751307487487793
    4. '   ' → logprob: -8.876307487487793
    5. 'an' → logprob: -9.126307487487793
    6. 'coins' → logprob: -9.251307487487793
    7. 'ield' → logprob: -10.001307487487793
    8. '=' → logprob: -10.376307487487793
    9. 'ields' → logprob: -10.501307487487793
    10. 'yen' → logprob: -10.751307487487793

Token 2262: ' coins' (ID: 28969)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7566712498664856
    2. '```' → logprob: -2.006671190261841
    3. '_co' → logprob: -2.381671190261841
    4. ' =' → logprob: -2.756671190261841
    5. '
' → logprob: -3.256671190261841
    6. '_' → logprob: -3.256671190261841
    7. '500' → logprob: -3.881671190261841
    8. 'coins' → logprob: -4.38167142868042
    9. '=' → logprob: -4.50667142868042
    10. ',' → logprob: -4.88167142868042

Token 2263: ' increase' (ID: 7064)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11060672998428345
    2. '```' → logprob: -3.7356066703796387
    3. ':
' → logprob: -4.235606670379639
    4. '
' → logprob: -4.235606670379639
    5. '[' → logprob: -4.360606670379639
    6. ':' → logprob: -4.985606670379639
    7. '[i' → logprob: -5.485606670379639
    8. '):
' → logprob: -5.985606670379639
    9. '               ' → logprob: -6.110606670379639
    10. '                       ' → logprob: -6.235606670379639

Token 2264: ' count' (ID: 3605)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.24090434610843658
    2. 'change' → logprob: -1.8659043312072754
    3. '#' → logprob: -4.240904331207275
    4. 'new' → logprob: -4.990904331207275
    5. '500' → logprob: -4.990904331207275
    6. '
' → logprob: -5.115904331207275
    7. '_change' → logprob: -5.615904331207275
    8. '+' → logprob: -6.115904331207275
    9. 'used' → logprob: -6.115904331207275
    10. 'den' → logprob: -6.365904331207275

Token 2265: ' is' (ID: 382)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00267387623898685
    2. '
' → logprob: -7.377674102783203
    3. '```' → logprob: -7.502674102783203
    4. '                    
' → logprob: -8.252674102783203
    5. ',' → logprob: -8.502674102783203
    6. '               ' → logprob: -8.752674102783203
    7. ':
' → logprob: -9.002674102783203
    8. '           ' → logprob: -9.127674102783203
    9. '                       ' → logprob: -9.627674102783203
    10. 'for' → logprob: -9.752674102783203

Token 2266: ' noted' (ID: 19700)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5874515771865845
    2. 'used' → logprob: -1.4624515771865845
    3. '(
' → logprob: -3.212451457977295
    4. '1' → logprob: -3.337451457977295
    5. '(' → logprob: -4.087451457977295
    6. 'received' → logprob: -4.212451457977295
    7. 'change' → logprob: -4.337451457977295
    8. 'payment' → logprob: -4.462451457977295
    9. '-' → logprob: -4.712451457977295
    10. 'coins' → logprob: -4.837451457977295

Token 2267: ' separately' (ID: 37741)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07971823215484619
    2. '```' → logprob: -3.8297181129455566
    3. '
' → logprob: -4.454718112945557
    4. 'for' → logprob: -4.954718112945557
    5. ':
' → logprob: -5.454718112945557
    6. '+' → logprob: -5.454718112945557
    7. '#' → logprob: -5.829718112945557
    8. ',' → logprob: -5.829718112945557
    9. '                       ' → logprob: -5.954718112945557
    10. 'change' → logprob: -6.454718112945557

Token 2268: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06923145055770874
    2. '
' → logprob: -3.8192315101623535
    3. ',' → logprob: -5.1942315101623535
    4. '```' → logprob: -5.1942315101623535
    5. '                    
' → logprob: -5.3192315101623535
    6. '(' → logprob: -5.4442315101623535
    7. '(
' → logprob: -5.8192315101623535
    8. ':
' → logprob: -6.1942315101623535
    9. 'new' → logprob: -6.4442315101623535
    10. 'for' → logprob: -6.4442315101623535

Token 2269: '500' (ID: 3234)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280629396438599
    2. ')
' → logprob: -2.2780628204345703
    3. '
' → logprob: -2.2780628204345703
    4. 'used' → logprob: -2.5280628204345703
    5. '#' → logprob: -2.9030628204345703
    6. '                   ' → logprob: -3.4030628204345703
    7. '500' → logprob: -3.4030628204345703
    8. ' used' → logprob: -3.5280628204345703
    9. 'for' → logprob: -3.9030628204345703
    10. 'i' → logprob: -3.9030628204345703

Token 2270: '-y' (ID: 18102)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.605343222618103
    2. ')' → logprob: -2.1053433418273926
    3. '-' → logprob: -2.6053433418273926
    4. ')]' → logprob: -3.1053433418273926
    5. '```' → logprob: -3.1053433418273926
    6. '   ' → logprob: -3.3553433418273926
    7. '),' → logprob: -3.6053433418273926
    8. '-y' → logprob: -4.355343341827393
    9. '-co' → logprob: -4.605343341827393
    10. ' -' → logprob: -4.605343341827393

Token 2271: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.0004386558721307665
    2. 'coin' → logprob: -8.875438690185547
    3. '-en' → logprob: -9.875438690185547
    4. '```' → logprob: -10.000438690185547
    5. '#' → logprob: -10.500438690185547
    6. 'coins' → logprob: -10.750438690185547
    7. '   ' → logprob: -11.000438690185547
    8. ')' → logprob: -11.250438690185547
    9. '-co' → logprob: -11.375438690185547
    10. '[' → logprob: -11.875438690185547

Token 2272: ' coins' (ID: 28969)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.069471575319767
    2. 'coins' → logprob: -3.069471597671509
    3. ')' → logprob: -4.81947135925293
    4. ',' → logprob: -5.81947135925293
    5. ' coin' → logprob: -6.06947135925293
    6. '```' → logprob: -6.31947135925293
    7. '
' → logprob: -6.94447135925293
    8. '_coin' → logprob: -7.19447135925293
    9. ')
' → logprob: -7.69447135925293
    10. ' coins' → logprob: -7.69447135925293

Token 2273: ' are' (ID: 553)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0278267860412598
    2. ')' → logprob: -1.6528267860412598
    3. '_used' → logprob: -1.9028267860412598
    4. '[' → logprob: -2.6528267860412598
    5. '```' → logprob: -3.2778267860412598
    6. '_co' → logprob: -3.9028267860412598
    7. 'used' → logprob: -3.9028267860412598
    8. '_in' → logprob: -4.15282678604126
    9. '
' → logprob: -4.65282678604126
    10. '),' → logprob: -4.65282678604126

Token 2274: ' in' (ID: 306)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.9035108685493469
    2. 'coins' → logprob: -2.028510808944702
    3. 'excluded' → logprob: -2.278510808944702
    4. '0' → logprob: -2.903510808944702
    5. '1' → logprob: -2.903510808944702
    6. 'den' → logprob: -3.028510808944702
    7. ')' → logprob: -3.403510808944702
    8. 'not' → logprob: -3.778510808944702
    9. 'Coin' → logprob: -4.028511047363281
    10. '500' → logprob: -4.153511047363281

Token 2275: ' coin' (ID: 22179)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.3576749861240387
    2. 'change' → logprob: -2.107675075531006
    3. 'used' → logprob: -2.357675075531006
    4. 'the' → logprob: -3.232675075531006
    5. 'Coin' → logprob: -4.982675075531006
    6. 'self' → logprob: -5.107675075531006
    7. 'new' → logprob: -5.607675075531006
    8. 'coin' → logprob: -5.732675075531006
    9. 'result' → logprob: -5.982675075531006
    10. '
' → logprob: -6.107675075531006

Token 2276: ' set' (ID: 920)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.17532745003700256
    2. '_types' → logprob: -2.6753275394439697
    3. 'Set' → logprob: -3.3003275394439697
    4. '_set' → logprob: -4.425327301025391
    5. '_' → logprob: -4.425327301025391
    6. 's' → logprob: -4.925327301025391
    7. '   ' → logprob: -5.300327301025391
    8. 'value' → logprob: -6.050327301025391
    9. '_den' → logprob: -6.050327301025391
    10. '_type' → logprob: -6.550327301025391

Token 2277: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5619488954544067
    2. '[' → logprob: -2.311948776245117
    3. ',' → logprob: -3.186948776245117
    4. ')
' → logprob: -3.186948776245117
    5. '_' → logprob: -3.561948776245117
    6. 's' → logprob: -3.811948776245117
    7. ']' → logprob: -3.811948776245117
    8. '```' → logprob: -4.061948776245117
    9. '[i' → logprob: -4.186948776245117
    10. '                   ' → logprob: -4.311948776245117

Token 2278: ' but' (ID: 889)
  Prédit: 'but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'but' → logprob: -1.052344799041748
    2. 'not' → logprob: -2.052344799041748
    3. '#' → logprob: -2.927344799041748
    4. '
' → logprob: -2.927344799041748
    5. ' but' → logprob: -2.927344799041748
    6. 'so' → logprob: -3.052344799041748
    7. '                   ' → logprob: -3.052344799041748
    8. ')' → logprob: -3.177344799041748
    9. 'used' → logprob: -3.177344799041748
    10. 'except' → logprob: -3.427344799041748

Token 2279: ' also' (ID: 1217)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5269700288772583
    2. 'used' → logprob: -2.1519699096679688
    3. '500' → logprob: -2.2769699096679688
    4. 'not' → logprob: -2.2769699096679688
    5. 'change' → logprob: -2.2769699096679688
    6. 'excluded' → logprob: -2.6519699096679688
    7. 'they' → logprob: -3.0269699096679688
    8. 'we' → logprob: -3.2769699096679688
    9. 'the' → logprob: -3.6519699096679688
    10. '
' → logprob: -3.7769699096679688

Token 2280: ' counted' (ID: 60500)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.6389663219451904
    2. '
' → logprob: -1.8889663219451904
    3. '#' → logprob: -2.1389663219451904
    4. '500' → logprob: -2.6389663219451904
    5. 'added' → logprob: -2.7639663219451904
    6. 'the' → logprob: -2.7639663219451904
    7. 'we' → logprob: -2.8889663219451904
    8. 'used' → logprob: -3.2639663219451904
    9. 'change' → logprob: -3.3889663219451904
    10. 'they' → logprob: -3.7639663219451904

Token 2281: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4533438682556152
    2. 'for' → logprob: -1.9533438682556152
    3. 'in' → logprob: -2.0783438682556152
    4. 'as' → logprob: -2.7033438682556152
    5. '```' → logprob: -3.2033438682556152
    6. '
' → logprob: -3.3283438682556152
    7. '_' → logprob: -3.3283438682556152
    8. ',' → logprob: -3.4533438682556152
    9. ' as' → logprob: -3.4533438682556152
    10. '[' → logprob: -3.8283438682556152

Token 2282: ' c' (ID: 274)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.430824875831604
    2. 'coins' → logprob: -1.430824875831604
    3. 'result' → logprob: -3.9308247566223145
    4. '500' → logprob: -4.4308247566223145
    5. 'received' → logprob: -4.5558247566223145
    6. 'the' → logprob: -4.6808247566223145
    7. 'payment' → logprob: -4.6808247566223145
    8. 'c' → logprob: -4.9308247566223145
    9. 'new' → logprob: -5.0558247566223145
    10. 'results' → logprob: -5.1808247566223145

Token 2283: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.06953974813222885
    2. 'o' → logprob: -3.444539785385132
    3. '_' → logprob: -4.694539546966553
    4. 'ount' → logprob: -5.069539546966553
    5. 'held' → logprob: -5.319539546966553
    6. 'oin' → logprob: -5.444539546966553
    7. 'oints' → logprob: -6.194539546966553
    8. 'coins' → logprob: -6.444539546966553
    9. 'h' → logprob: -6.944539546966553
    10. '
' → logprob: -7.194539546966553

Token 2284: ')
' (ID: 446)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_co' → logprob: -1.480042576789856
    2. '_' → logprob: -1.855042576789856
    3. '```' → logprob: -2.1050424575805664
    4. ')' → logprob: -2.2300424575805664
    5. 'coins' → logprob: -2.9800424575805664
    6. '_used' → logprob: -3.1050424575805664
    7. '
' → logprob: -3.4800424575805664
    8. '   ' → logprob: -3.4800424575805664
    9. '),' → logprob: -3.8550424575805664
    10. 's' → logprob: -3.9800424575805664

Token 2285: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1022316962480545
    2. 'change' → logprob: -2.977231740951538
    3. '
' → logprob: -3.602231740951538
    4. 'coin' → logprob: -5.977231502532959
    5. '#' → logprob: -6.352231502532959
    6. '```' → logprob: -6.602231502532959
    7. 'coins' → logprob: -6.602231502532959
    8. 'new' → logprob: -6.727231502532959
    9. 'for' → logprob: -6.977231502532959
    10. '                    
' → logprob: -6.977231502532959

Token 2286: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.28022363781929016
    2. 'change' → logprob: -1.5302236080169678
    3. 'new' → logprob: -4.530223846435547
    4. '
' → logprob: -5.280223846435547
    5. 'coin' → logprob: -5.405223846435547
    6. '#' (adapté à ' #') → logprob: -5.655223846435547
    7. 'coins' → logprob: -7.030223846435547
    8. '                    
' → logprob: -7.280223846435547
    9. 'den' → logprob: -7.405223846435547
    10. 'payment' → logprob: -7.655223846435547

Token 2287: ' To' (ID: 2514)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5297756195068359
    2. 'change' → logprob: -1.029775619506836
    3. '#' → logprob: -3.529775619506836
    4. '
' → logprob: -5.154775619506836
    5. 'coin' → logprob: -5.154775619506836
    6. 'new' → logprob: -5.654775619506836
    7. 'coins' → logprob: -6.404775619506836
    8. 'den' → logprob: -6.529775619506836
    9. 'for' → logprob: -7.279775619506836
    10. 'payment' → logprob: -7.279775619506836

Token 2288: ' calculate' (ID: 17950)
  Prédit: 'complete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'complete' → logprob: -0.6334295868873596
    2. 'continue' → logprob: -1.6334295272827148
    3. 'update' → logprob: -2.758429527282715
    4. 'build' → logprob: -3.383429527282715
    5. 'compute' → logprob: -3.383429527282715
    6. 'change' → logprob: -4.133429527282715
    7. 'add' → logprob: -4.383429527282715
    8. '#' → logprob: -4.508429527282715
    9. 'get' → logprob: -4.633429527282715
    10. 'pro' → logprob: -4.758429527282715

Token 2289: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.0945754423737526
    2. '#' → logprob: -2.9695754051208496
    3. '                   ' → logprob: -4.09457540512085
    4. 'used' → logprob: -4.71957540512085
    5. '```' → logprob: -6.09457540512085
    6. 'payment' → logprob: -6.34457540512085
    7. 'new' → logprob: -6.46957540512085
    8. 'coins' → logprob: -6.46957540512085
    9. 'coin' → logprob: -6.59457540512085
    10. 'minimal' → logprob: -6.96957540512085

Token 2290: '_co' (ID: 21102)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.27981650829315186
    2. '                   ' → logprob: -1.7798165082931519
    3. 'coins' → logprob: -3.6548166275024414
    4. '#' → logprob: -4.154816627502441
    5. 'used' → logprob: -5.154816627502441
    6. '
' → logprob: -5.154816627502441
    7. 'coin' → logprob: -5.404816627502441
    8. '   ' → logprob: -6.279816627502441
    9. '_change' → logprob: -6.279816627502441
    10. '```' → logprob: -6.279816627502441

Token 2291: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.030682235956192017
    2. 'in' → logprob: -4.90568208694458
    3. 'uns' → logprob: -5.28068208694458
    4. 'unts' → logprob: -5.40568208694458
    5. 'def' → logprob: -6.03068208694458
    6. '   ' → logprob: -6.28068208694458
    7. 'ns' → logprob: -6.78068208694458
    8. 'unt' → logprob: -6.90568208694458
    9. '       ' → logprob: -7.15568208694458
    10. 'u' → logprob: -7.40568208694458

Token 2292: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.31907352805137634
    2. 'change' → logprob: -1.5690735578536987
    3. ' =' → logprob: -4.194073677062988
    4. '=' → logprob: -4.944073677062988
    5. ':
' → logprob: -5.194073677062988
    6. ':' → logprob: -5.694073677062988
    7. 'coins' → logprob: -5.819073677062988
    8. '#' → logprob: -5.819073677062988
    9. '500' → logprob: -5.819073677062988
    10. '```' → logprob: -6.069073677062988

Token 2293: ' do' (ID: 621)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.003995292354375124
    2. '                   ' → logprob: -6.628995418548584
    3. ' change' → logprob: -7.253995418548584
    4. '#' → logprob: -7.628995418548584
    5. 'minimal' → logprob: -7.753995418548584
    6. 'coin' → logprob: -8.628994941711426
    7. 'continue' → logprob: -9.128994941711426
    8. 'we' → logprob: -9.253994941711426
    9. 'min' → logprob: -9.253994941711426
    10. 'for' → logprob: -9.378994941711426

Token 2294: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.05192919075489044
    2. '
' → logprob: -3.926929235458374
    3. '```' → logprob: -3.926929235458374
    4. 'payment' → logprob: -5.676928997039795
    5. 'minimal' → logprob: -6.051928997039795
    6. 'coin' → logprob: -7.551928997039795
    7. 'min' → logprob: -7.551928997039795
    8. ' change' → logprob: -7.551928997039795
    9. '``' → logprob: -7.801928997039795
    10. '                   ' → logprob: -8.176929473876953

Token 2295: ' =' (ID: 314)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.09612154960632324
    2. '                   ' → logprob: -2.4711215496063232
    3. ' =' → logprob: -6.221121788024902
    4. '_change' → logprob: -6.721121788024902
    5. '```' → logprob: -7.221121788024902
    6. '               ' → logprob: -7.721121788024902
    7. 'change' → logprob: -7.721121788024902
    8. '_value' → logprob: -7.846121788024902
    9. '=' → logprob: -8.221121788024902
    10. '   ' → logprob: -8.346121788024902

Token 2296: ' payment' (ID: 9277)
  Prédit: 'payment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'payment' → logprob: -0.000156577822053805
    2. ' payment' → logprob: -9.25015640258789
    3. '   ' → logprob: -10.87515640258789
    4. '```' → logprob: -11.87515640258789
    5. 'price' → logprob: -12.12515640258789
    6. '
' → logprob: -12.37515640258789
    7. '(payment' → logprob: -12.37515640258789
    8. 'purchase' → logprob: -12.75015640258789
    9. 'change' → logprob: -12.87515640258789
    10. '`' → logprob: -12.87515640258789

Token 2297: '_money' (ID: 81323)
  Prédit: '_money'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_money' → logprob: -1.4445273876190186
    2. ' -' → logprob: -1.5695273876190186
    3. '-money' → logprob: -1.5695273876190186
    4. ' =' → logprob: -1.9445273876190186
    5. '-' → logprob: -2.1945273876190186
    6. '                   ' → logprob: -3.1945273876190186
    7. '=' → logprob: -3.5695273876190186
    8. '_amount' → logprob: -5.194527626037598
    9. 'money' → logprob: -5.819527626037598
    10. '_minus' → logprob: -5.819527626037598

Token 2298: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2855486273765564
    2. '-' → logprob: -1.4105486869812012
    3. '                   ' → logprob: -5.785548686981201
    4. '-payment' → logprob: -7.910548686981201
    5. '-price' → logprob: -8.285548210144043
    6. '               ' → logprob: -8.785548210144043
    7. '```' → logprob: -9.160548210144043
    8. '   ' → logprob: -9.410548210144043
    9. '           ' → logprob: -9.535548210144043
    10. '-
' → logprob: -10.160548210144043

Token 2299: ' price' (ID: 3911)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.17995485663414001
    2. 'price' → logprob: -1.8049548864364624
    3. ' price' → logprob: -9.179954528808594
    4. ' self' → logprob: -9.429954528808594
    5. '
' → logprob: -11.554954528808594
    6. '   ' → logprob: -11.554954528808594
    7. '```' → logprob: -12.929954528808594
    8. '       ' → logprob: -13.054954528808594
    9. '           ' → logprob: -14.304954528808594
    10. 'payment' → logprob: -14.679954528808594

Token 2300: ' again' (ID: 2418)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2632403075695038
    2. 'change' → logprob: -1.7632403373718262
    3. '
' → logprob: -3.138240337371826
    4. '```' → logprob: -5.763240337371826
    5. '                    
' → logprob: -6.388240337371826
    6. '               ' → logprob: -6.513240337371826
    7. ',' → logprob: -6.638240337371826
    8. ' change' → logprob: -6.763240337371826
    9. ' =' → logprob: -6.888240337371826
    10. '   ' → logprob: -7.138240337371826

Token 2301: ' and' (ID: 326)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00811037141829729
    2. 'change' → logprob: -5.633110523223877
    3. '```' → logprob: -6.508110523223877
    4. '
' → logprob: -7.133110523223877
    5. '                       ' → logprob: -7.758110523223877
    6. '               ' → logprob: -7.758110523223877
    7. '`' → logprob: -8.008110046386719
    8. ',' → logprob: -8.508110046386719
    9. '           ' → logprob: -8.633110046386719
    10. 'for' → logprob: -9.258110046386719

Token 2302: ' get' (ID: 717)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.04937751591205597
    2. 'get' → logprob: -3.92437744140625
    3. 'use' → logprob: -5.29937744140625
    4. 'call' → logprob: -5.54937744140625
    5. '
' → logprob: -5.67437744140625
    6. 'coins' → logprob: -5.79937744140625
    7. 'coin' → logprob: -6.17437744140625
    8. 'compute' → logprob: -6.29937744140625
    9. 'calculate' → logprob: -6.29937744140625
    10. ' change' → logprob: -6.42437744140625

Token 2303: ' minimal' (ID: 19957)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -0.4201180636882782
    2. 'minimum' → logprob: -1.4201180934906006
    3. 'change' → logprob: -2.6701180934906006
    4. 'Coin' → logprob: -3.5451180934906006
    5. 'the' → logprob: -6.6701178550720215
    6. ' minimal' → logprob: -7.1701178550720215
    7. '```' → logprob: -7.5451178550720215
    8. 'min' → logprob: -9.04511833190918
    9. 'Minimal' → logprob: -9.29511833190918
    10. '`' → logprob: -9.42011833190918

Token 2304: ' coins' (ID: 28969)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.022995276376605034
    2. '_change' → logprob: -4.522995471954346
    3. '                   ' → logprob: -5.022995471954346
    4. 'change' → logprob: -6.022995471954346
    5. '_' → logprob: -6.522995471954346
    6. '```' → logprob: -7.772995471954346
    7. '               ' → logprob: -8.022994995117188
    8. 'coins' → logprob: -8.522994995117188
    9. 'for' → logprob: -10.022994995117188
    10. '           ' → logprob: -10.022994995117188

Token 2305: ' except' (ID: 6384)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009539321064949036
    2. 'change' → logprob: -5.1345391273498535
    3. '
' → logprob: -6.0095391273498535
    4. '```' → logprob: -8.134539604187012
    5. '                    
' → logprob: -8.134539604187012
    6. '               ' → logprob: -8.759539604187012
    7. ' change' → logprob: -9.634539604187012
    8. '                       ' → logprob: -9.759539604187012
    9. 'for' → logprob: -10.134539604187012
    10. '(change' → logprob: -10.134539604187012

Token 2306: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.2822214961051941
    2. 'the' → logprob: -2.157221555709839
    3. 'used' → logprob: -3.157221555709839
    4. 'count' → logprob: -3.657221555709839
    5. 'for' → logprob: -4.03222131729126
    6. ' ' → logprob: -4.78222131729126
    7. 'value' → logprob: -5.53222131729126
    8. 'den' → logprob: -5.53222131729126
    9. 'coin' → logprob: -5.65722131729126
    10. '
' → logprob: -5.65722131729126

Token 2307: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.25292572379112244
    2. 'used' → logprob: -2.5029256343841553
    3. 'the' → logprob: -3.1279256343841553
    4. '100' → logprob: -3.6279256343841553
    5. 'count' → logprob: -3.7529256343841553
    6. '
' → logprob: -4.627925872802734
    7. 'den' → logprob: -4.877925872802734
    8. 'coins' → logprob: -5.252925872802734
    9. 'for' → logprob: -5.627925872802734
    10. 'using' → logprob: -6.252925872802734

Token 2308: '-y' (ID: 18102)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.035629983991384506
    2. '500' → logprob: -4.910629749298096
    3. '_co' → logprob: -5.410629749298096
    4. '_' → logprob: -5.660629749298096
    5. '```' → logprob: -5.910629749298096
    6. '_set' → logprob: -5.910629749298096
    7. '                       ' → logprob: -6.160629749298096
    8. '_change' → logprob: -6.410629749298096
    9. '               ' → logprob: -6.535629749298096
    10. 'change' → logprob: -6.785629749298096

Token 2309: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.011127402074635029
    2. '-co' → logprob: -6.011127471923828
    3. '-den' → logprob: -6.136127471923828
    4. '-en' → logprob: -6.386127471923828
    5. 'coins' → logprob: -6.761127471923828
    6. 'coin' → logprob: -7.261127471923828
    7. '_coin' → logprob: -7.761127471923828
    8. '   ' → logprob: -7.761127471923828
    9. ' coins' → logprob: -8.261127471923828
    10. '```' → logprob: -8.386127471923828

Token 2310: ' coins' (ID: 28969)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.027815038338303566
    2. 'change' → logprob: -4.527814865112305
    3. '
' → logprob: -5.527814865112305
    4. '500' → logprob: -5.777814865112305
    5. '                    
' → logprob: -6.652814865112305
    6. '               ' → logprob: -7.027814865112305
    7. ',' → logprob: -7.152814865112305
    8. '                       ' → logprob: -7.277814865112305
    9. ' =' → logprob: -7.402814865112305
    10. '_change' → logprob: -7.402814865112305

Token 2311: ' count' (ID: 3605)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0811828151345253
    2. 'change' → logprob: -3.3311827182769775
    3. '
' → logprob: -4.081182956695557
    4. ':
' → logprob: -5.331182956695557
    5. '```' → logprob: -5.581182956695557
    6. ' =' → logprob: -5.956182956695557
    7. ',' → logprob: -6.206182956695557
    8. ' change' → logprob: -6.706182956695557
    9. '                       ' → logprob: -6.831182956695557
    10. '               ' → logprob: -6.831182956695557

Token 2312: '

' (ID: 279)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.028590023517608643
    2. '
' → logprob: -4.028590202331543
    3. 'change' → logprob: -4.778590202331543
    4. '```' → logprob: -7.278590202331543
    5. '                    
' → logprob: -7.528590202331543
    6. '               ' → logprob: -8.778590202331543
    7. ' change' → logprob: -8.778590202331543
    8. '           ' → logprob: -9.778590202331543
    9. '`' → logprob: -10.028590202331543
    10. 'for' → logprob: -10.153590202331543

Token 2313: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03438854217529297
    2. 'change' → logprob: -4.034388542175293
    3. '
' → logprob: -4.909388542175293
    4. '```' → logprob: -6.284388542175293
    5. 'for' → logprob: -6.534388542175293
    6. '               ' → logprob: -7.034388542175293
    7. '           ' → logprob: -7.159388542175293
    8. '                    
' → logprob: -7.284388542175293
    9. '`' → logprob: -7.659388542175293
    10. '                       ' → logprob: -8.159388542175293

Token 2314: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' (adapté à ' change') → logprob: -0.2838241755962372
    2. '                   ' → logprob: -1.4088242053985596
    3. 'payment' → logprob: -7.4088239669799805
    4. ' change' → logprob: -7.7838239669799805
    5. '               ' → logprob: -8.15882396697998
    6. '
' → logprob: -8.15882396697998
    7. '```' → logprob: -8.40882396697998
    8. '   ' → logprob: -8.65882396697998
    9. '           ' → logprob: -9.28382396697998
    10. 'continue' → logprob: -9.28382396697998

Token 2315: ' =' (ID: 314)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.0021796426735818386
    2. ' =' → logprob: -6.3771796226501465
    3. '_value' → logprob: -9.002180099487305
    4. '=' → logprob: -9.002180099487305
    5. '_change' → logprob: -9.377180099487305
    6. '_amount' → logprob: -9.752180099487305
    7. '_tokens' → logprob: -10.752180099487305
    8. '```' → logprob: -10.877180099487305
    9. 'coins' → logprob: -11.502180099487305
    10. '_coin' → logprob: -11.627180099487305

Token 2316: ' payment' (ID: 9277)
  Prédit: 'payment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'payment' → logprob: -0.1002156138420105
    2. ' payment' → logprob: -2.3502156734466553
    3. '                   ' → logprob: -11.975215911865234
    4. '(payment' → logprob: -13.225215911865234
    5. 'pay' → logprob: -15.225215911865234
    6. '   ' → logprob: -15.475215911865234
    7. 'Payment' → logprob: -16.850215911865234
    8. '                       ' → logprob: -16.850215911865234
    9. '                    ' → logprob: -16.975215911865234
    10. '               ' → logprob: -16.975215911865234

Token 2317: '_money' (ID: 81323)
  Prédit: '_money'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_money' → logprob: -0.004733433946967125
    2. '_' → logprob: -5.754733562469482
    3. '-' → logprob: -6.879733562469482
    4. ' -' → logprob: -7.879733562469482
    5. '-money' → logprob: -10.254733085632324
    6. 'money' → logprob: -10.504733085632324
    7. '_payment' → logprob: -10.629733085632324
    8. '```' → logprob: -11.629733085632324
    9. '   ' → logprob: -11.754733085632324
    10. 'Money' → logprob: -11.754733085632324

Token 2318: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02326248399913311
    2. '-' → logprob: -3.7732625007629395
    3. ' ' → logprob: -12.648262023925781
    4. '        ' → logprob: -12.898262023925781
    5. ' -
' → logprob: -13.023262023925781
    6. '```' → logprob: -13.398262023925781
    7. '   ' → logprob: -13.773262023925781
    8. ' ' → logprob: -14.023262023925781
    9. '<|end|>' → logprob: -14.023262023925781
    10. '
' → logprob: -14.148262023925781

Token 2319: ' price' (ID: 3911)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.004873181227594614
    2. 'self' → logprob: -5.379873275756836
    3. ' price' → logprob: -8.379873275756836
    4. '
' → logprob: -12.004873275756836
    5. '           ' → logprob: -12.504873275756836
    6. '   ' → logprob: -12.754873275756836
    7. '                   ' → logprob: -13.004873275756836
    8. '       ' → logprob: -13.379873275756836
    9. '               ' → logprob: -13.504873275756836
    10. ' self' → logprob: -14.129873275756836

Token 2320: '
' (ID: 198)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.4410363435745239
    2. '                   ' → logprob: -1.191036343574524
    3. '
' → logprob: -3.0660362243652344
    4. ' change' → logprob: -5.941036224365234
    5. '_change' → logprob: -6.941036224365234
    6. '                    
' → logprob: -7.691036224365234
    7. 'coins' → logprob: -8.191036224365234
    8. ',' → logprob: -8.191036224365234
    9. 'coin' → logprob: -8.316036224365234
    10. '               ' → logprob: -8.566036224365234

Token 2321: '                   ' (ID: 699)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.06219892203807831
    2. '                   ' → logprob: -2.8121988773345947
    3. ' change' → logprob: -8.937198638916016
    4. '               ' → logprob: -10.437198638916016
    5. '           ' → logprob: -10.812198638916016
    6. 'coin' → logprob: -11.312198638916016
    7. '                       ' → logprob: -12.062198638916016
    8. '       ' → logprob: -12.062198638916016
    9. '   ' → logprob: -12.187198638916016
    10. '
' → logprob: -12.687198638916016

Token 2322: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' (adapté à ' change') → logprob: -0.00035333906998857856
    2. '                   ' → logprob: -8.000353813171387
    3. ' change' → logprob: -12.250353813171387
    4. 'minimal' → logprob: -12.625353813171387
    5. 'if' → logprob: -13.125353813171387
    6. '                       ' → logprob: -13.500353813171387
    7. 'min' → logprob: -13.500353813171387
    8. 'coin' → logprob: -13.875353813171387
    9. 'payment' → logprob: -14.125353813171387
    10. '   ' → logprob: -14.375353813171387

Token 2323: '_min' (ID: 15950)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_co' → logprob: -2.5776860184123507e-06
    2. 'coins' → logprob: -13.75000286102295
    3. '_coin' → logprob: -14.25000286102295
    4. '```' → logprob: -15.25000286102295
    5. '=' → logprob: -15.37500286102295
    6. '_change' → logprob: -16.375001907348633
    7. ' =' → logprob: -16.875001907348633
    8. 'Coins' → logprob: -17.000001907348633
    9. '   ' → logprob: -17.125001907348633
    10. '_tokens' → logprob: -17.250001907348633

Token 2324: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.001785490894690156
    2. 'coins' → logprob: -6.3767852783203125
    3. 'co' → logprob: -10.501785278320312
    4. 'Coins' → logprob: -11.626785278320312
    5. '-co' → logprob: -12.001785278320312
    6. '                   ' → logprob: -12.001785278320312
    7. '               ' → logprob: -12.001785278320312
    8. '_' → logprob: -12.126785278320312
    9. '   ' → logprob: -12.126785278320312
    10. 's' → logprob: -12.251785278320312

Token 2325: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0003202114312443882
    2. 'in' → logprob: -8.125320434570312
    3. '#' → logprob: -13.250320434570312
    4. '_' → logprob: -13.375320434570312
    5. 'change' → logprob: -13.375320434570312
    6. '_ins' → logprob: -13.375320434570312
    7. '_change' → logprob: -13.500320434570312
    8. 'i' → logprob: -13.500320434570312
    9. 'ints' → logprob: -13.500320434570312
    10. 'inds' → logprob: -13.500320434570312

Token 2326: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10065518319606781
    2. '=' → logprob: -2.3506550788879395
    3. '_co' → logprob: -8.225655555725098
    4. '   ' → logprob: -9.225655555725098
    5. '_dict' → logprob: -10.600655555725098
    6. '       ' → logprob: -11.350655555725098
    7. 'coins' → logprob: -11.475655555725098
    8. 's' → logprob: -11.600655555725098
    9. '```' → logprob: -12.100655555725098
    10. 'dict' → logprob: -12.225655555725098

Token 2327: ' Coin' (ID: 35089)
  Prédit: 'Coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' → logprob: -6.790129555156454e-05
    2. ' Coin' → logprob: -9.625067710876465
    3. '   ' → logprob: -14.125067710876465
    4. '       ' → logprob: -15.375067710876465
    5. 'Payment' → logprob: -16.00006866455078
    6. 'Coins' → logprob: -16.12506866455078
    7. '           ' → logprob: -16.25006866455078
    8. 'Counter' → logprob: -16.37506866455078
    9. '{' → logprob: -16.37506866455078
    10. 'Code' → logprob: -16.87506866455078

Token 2328: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -3.4121114822482923e-06
    2. 'Den' → logprob: -13.875003814697266
    3. '_set' → logprob: -14.000003814697266
    4. 'set' → logprob: -14.375003814697266
    5. '_Set' → logprob: -15.250003814697266
    6. '   ' → logprob: -15.750003814697266
    7. '.set' → logprob: -16.125003814697266
    8. '.Set' → logprob: -16.125003814697266
    9. '	Set' → logprob: -16.250003814697266
    10. '```' → logprob: -16.250003814697266

Token 2329: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0009771942859515548
    2. 'get' → logprob: -7.125977039337158
    3. '.' → logprob: -8.750977516174316
    4. '   ' → logprob: -12.500977516174316
    5. '```' → logprob: -12.500977516174316
    6. '_get' → logprob: -13.125977516174316
    7. '._' → logprob: -13.500977516174316
    8. ' .' → logprob: -13.875977516174316
    9. '
' → logprob: -14.625977516174316
    10. '`.' → logprob: -15.375977516174316

Token 2330: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -4.739826181321405e-05
    2. 'minimum' → logprob: -10.00004768371582
    3. 'min' → logprob: -13.25004768371582
    4. 'minimal' → logprob: -16.50004768371582
    5. '_max' → logprob: -18.37504768371582
    6. '.minimum' → logprob: -18.75004768371582
    7. 'Minimum' → logprob: -19.00004768371582
    8. '_m' → logprob: -19.12504768371582
    9. '(min' → logprob: -19.37504768371582
    10. ' minimum' → logprob: -20.00004768371582

Token 2331: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -1.981667537620524e-06
    2. 'im' → logprob: -14.250001907348633
    3. 'um' → logprob: -14.375001907348633
    4. 'imal' → logprob: -14.625001907348633
    5. 'inum' → logprob: -16.125001907348633
    6. 'IMUM' → logprob: -16.125001907348633
    7. 'mum' → logprob: -17.250001907348633
    8. 'ium' → logprob: -17.625001907348633
    9. 'mium' → logprob: -18.875001907348633
    10. '```' → logprob: -19.125001907348633

Token 2332: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -5.6934557505883276e-05
    2. 'coins' → logprob: -9.875057220458984
    3. '```' → logprob: -12.750057220458984
    4. 'Coins' → logprob: -13.500057220458984
    5. 'co' → logprob: -15.000057220458984
    6. '\' → logprob: -15.875057220458984
    7. 's' → logprob: -15.875057220458984
    8. '_change' → logprob: -16.250057220458984
    9. '-co' → logprob: -16.375057220458984
    10. ' coins' → logprob: -16.625057220458984

Token 2333: 'ins' (ID: 1564)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.6382671594619751
    2. '_co' → logprob: -0.7632671594619751
    3. 'co' → logprob: -6.0132670402526855
    4. 'ins' → logprob: -6.2632670402526855
    5. '```' → logprob: -8.013267517089844
    6. 'change' → logprob: -8.388267517089844
    7. 'o' → logprob: -8.763267517089844
    8. '_change' → logprob: -9.388267517089844
    9. 'in' → logprob: -9.763267517089844
    10. '
' → logprob: -9.763267517089844

Token 2334: '_change' (ID: 36082)
  Prédit: '_change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_change' → logprob: -0.012530959211289883
    2. 'change' → logprob: -4.38753080368042
    3. 'Change' → logprob: -11.387531280517578
    4. '_co' → logprob: -12.012531280517578
    5. ' change' → logprob: -14.012531280517578
    6. '	change' → logprob: -14.137531280517578
    7. '_CHANGE' → logprob: -14.387531280517578
    8. '```' → logprob: -14.387531280517578
    9. '_changes' → logprob: -15.137531280517578
    10. '.change' → logprob: -15.387531280517578

Token 2335: '(change' (ID: 95178)
  Prédit: '(change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(change' → logprob: -8.995397365652025e-05
    2. 'change' → logprob: -9.625089645385742
    3. '(
' → logprob: -11.125089645385742
    4. '(' → logprob: -11.625089645385742
    5. ' change' → logprob: -17.375089645385742
    6. ' (' → logprob: -17.875089645385742
    7. '```' → logprob: -18.125089645385742
    8. ')' → logprob: -19.375089645385742
    9. '	change' → logprob: -19.500089645385742
    10. '.change' → logprob: -19.625089645385742

Token 2336: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3554339110851288
    2. ')
' → logprob: -1.2304339408874512
    3. '                   ' → logprob: -4.980433940887451
    4. '               ' → logprob: -10.480433464050293
    5. ')
' → logprob: -11.480433464050293
    6. '())
' → logprob: -11.605433464050293
    7. '                       ' → logprob: -11.605433464050293
    8. '           ' → logprob: -11.980433464050293
    9. ')

' → logprob: -12.230433464050293
    10. '())' → logprob: -12.355433464050293

Token 2337: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0016169771552085876
    2. 'for' → logprob: -7.626616954803467
    3. '           ' → logprob: -8.251617431640625
    4. 'change' → logprob: -8.376617431640625
    5. '
' → logprob: -8.626617431640625
    6. 'new' → logprob: -8.626617431640625
    7. '               ' → logprob: -9.501617431640625
    8. '```' → logprob: -9.626617431640625
    9. '       ' → logprob: -10.126617431640625
    10. '                    
' → logprob: -10.876617431640625

Token 2338: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5973752737045288
    2. '                   ' → logprob: -0.8473752737045288
    3. 'change' → logprob: -4.097375392913818
    4. '#' (adapté à ' #') → logprob: -5.472375392913818
    5. 'coin' → logprob: -8.97237491607666
    6. '                    
' → logprob: -9.84737491607666
    7. '               ' → logprob: -10.22237491607666
    8. 'for' → logprob: -10.34737491607666
    9. '
' → logprob: -10.59737491607666
    10. '           ' → logprob: -10.72237491607666

Token 2339: ' coins' (ID: 28969)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.323667049407959
    2. '                   ' → logprob: -1.573667049407959
    3. 'change' → logprob: -3.198667049407959
    4. '#' → logprob: -3.573667049407959
    5. '   ' → logprob: -9.698667526245117
    6. '           ' → logprob: -9.823667526245117
    7. '               ' → logprob: -9.948667526245117
    8. 'coin' → logprob: -10.073667526245117
    9. '                    
' → logprob: -10.823667526245117
    10. 'def' → logprob: -10.948667526245117

Token 2340: ' after' (ID: 1934)
  Prédit: '_after'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_after' → logprob: -0.7764677405357361
    2. '_' → logprob: -1.9014678001403809
    3. '_change' → logprob: -2.026467800140381
    4. '_counts' → logprob: -3.026467800140381
    5. '_used' → logprob: -3.026467800140381
    6. 'change' → logprob: -3.151467800140381
    7. '_count' → logprob: -3.651467800140381
    8. '_received' → logprob: -3.776467800140381
    9. '_in' → logprob: -4.526467800140381
    10. '_list' → logprob: -4.776467800140381

Token 2341: ' transaction' (ID: 12469)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.3825664520263672
    2. 'new' → logprob: -2.257566452026367
    3. 'payment' → logprob: -2.632566452026367
    4. '```' → logprob: -3.757566452026367
    5. 'hand' → logprob: -4.132566452026367
    6. '                   ' → logprob: -4.132566452026367
    7. 'pay' → logprob: -4.257566452026367
    8. 'paid' → logprob: -4.632566452026367
    9. 'coins' → logprob: -4.632566452026367
    10. '   ' → logprob: -5.007566452026367

Token 2342: ':

' (ID: 1402)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03453446552157402
    2. 'new' → logprob: -3.409534454345703
    3. '```' → logprob: -7.909534454345703
    4. '               ' → logprob: -9.409534454345703
    5. 'after' → logprob: -9.409534454345703
    6. '           ' → logprob: -9.534534454345703
    7. ' =' → logprob: -9.909534454345703
    8. ' new' → logprob: -9.909534454345703
    9. '   ' → logprob: -10.284534454345703
    10. '`' → logprob: -10.409534454345703

Token 2343: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07894377410411835
    2. 'new' → logprob: -2.5789437294006348
    3. ' new' → logprob: -10.578944206237793
    4. '               ' → logprob: -11.578944206237793
    5. '           ' → logprob: -11.703944206237793
    6. '```' → logprob: -12.328944206237793
    7. '                    
' → logprob: -12.953944206237793
    8. 'change' → logprob: -13.578944206237793
    9. '
' → logprob: -13.828944206237793
    10. '   ' → logprob: -15.078944206237793

Token 2344: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.47420233488082886
    2. '                   ' → logprob: -0.9742023348808289
    3. ' new' → logprob: -9.974202156066895
    4. '               ' → logprob: -10.349202156066895
    5. '           ' → logprob: -10.974202156066895
    6. '   ' → logprob: -11.599202156066895
    7. '```' → logprob: -12.099202156066895
    8. '
' → logprob: -12.724202156066895
    9. '                    
' → logprob: -12.724202156066895
    10. '                       ' → logprob: -12.849202156066895

Token 2345: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.0009306333377026021
    2. 'coins' → logprob: -7.3759307861328125
    3. '_' → logprob: -8.500930786132812
    4. '_counts' → logprob: -10.500930786132812
    5. '_coin' → logprob: -10.500930786132812
    6. '               ' → logprob: -11.375930786132812
    7. '           ' → logprob: -11.625930786132812
    8. '                   ' → logprob: -11.875930786132812
    9. '```' → logprob: -12.000930786132812
    10. 'co' → logprob: -12.125930786132812

Token 2346: 'ins' (ID: 1564)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.7579432129859924
    2. 'ins' → logprob: -1.2579431533813477
    3. '_' → logprob: -1.7579431533813477
    4. '_counts' → logprob: -2.8829431533813477
    5. 'coins' → logprob: -5.632943153381348
    6. 'oints' → logprob: -5.757943153381348
    7. 'o' → logprob: -5.757943153381348
    8. '_ins' → logprob: -6.632943153381348
    9. '               ' → logprob: -7.007943153381348
    10. '           ' → logprob: -7.257943153381348

Token 2347: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4742049276828766
    2. ' =' → logprob: -0.9742048978805542
    3. '           ' → logprob: -9.974205017089844
    4. '   ' → logprob: -10.474205017089844
    5. '                   ' → logprob: -11.349205017089844
    6. '               ' → logprob: -11.599205017089844
    7. '       ' → logprob: -11.974205017089844
    8. '_counts' → logprob: -12.224205017089844
    9. '```' → logprob: -12.349205017089844
    10. '=list' → logprob: -12.849205017089844

Token 2348: ' [' (ID: 723)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.2359691858291626
    2. 'list' → logprob: -2.485969066619873
    3. '[]
' → logprob: -2.610969066619873
    4. '[' → logprob: -2.985969066619873
    5. '[
' → logprob: -6.485969066619873
    6. '[]' → logprob: -7.485969066619873
    7. ' tuple' → logprob: -8.235969543457031
    8. '   ' → logprob: -8.360969543457031
    9. '           ' → logprob: -9.235969543457031
    10. '[list' → logprob: -9.360969543457031

Token 2349: '0' (ID: 15)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -2.1054253011243418e-05
    2. '   ' → logprob: -12.000020980834961
    3. ' coins' → logprob: -12.000020980834961
    4. '0' → logprob: -12.125020980834961
    5. 'max' → logprob: -13.375020980834961
    6. 'coin' → logprob: -14.875020980834961
    7. '       ' → logprob: -15.125020980834961
    8. '           ' → logprob: -15.125020980834961
    9. '               ' → logprob: -15.250020980834961
    10. '            
' → logprob: -15.875020980834961

Token 2350: ']*' (ID: 18579)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.9864445924758911
    2. ']' → logprob: -1.6114445924758911
    3. 'for' → logprob: -1.6114445924758911
    4. ' for' → logprob: -1.8614445924758911
    5. '(i' → logprob: -3.9864444732666016
    6. '                   ' → logprob: -4.236444473266602
    7. ']*' → logprob: -4.236444473266602
    8. '               ' → logprob: -4.861444473266602
    9. '           ' → logprob: -5.111444473266602
    10. 'i' → logprob: -5.986444473266602

Token 2351: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. 'len' → logprob: -16.125
    4. '   ' → logprob: -17.875
    5. '```' → logprob: -18.375
    6. '
' → logprob: -18.625
    7. '           ' → logprob: -19.5625
    8. '(' → logprob: -19.75
    9. '۶' → logprob: -19.875
    10. '                   ' → logprob: -20.0

Token 2352: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0234090089797974
    2. ' for' → logprob: -1.3984090089797974
    3. '                   ' → logprob: -1.8984090089797974
    4. 'for' → logprob: -2.023408889770508
    5. '<|end|>' → logprob: -2.648408889770508
    6. '```' → logprob: -4.523408889770508
    7. '               ' → logprob: -5.148408889770508
    8. '           ' → logprob: -5.398408889770508
    9. '       ' → logprob: -5.523408889770508
    10. '<|end|>' → logprob: -5.648408889770508

Token 2353: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02258032001554966
    2. 'for' → logprob: -3.89758038520813
    3. ' for' → logprob: -6.397580146789551
    4. '           ' → logprob: -8.39758014678955
    5. '       ' → logprob: -10.02258014678955
    6. '```' → logprob: -10.02258014678955
    7. '               ' → logprob: -10.39758014678955
    8. '   ' → logprob: -10.89758014678955
    9. '                       ' → logprob: -12.27258014678955
    10. '
' → logprob: -13.39758014678955

Token 2354: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0032776487059891224
    2. '                   ' → logprob: -5.753277778625488
    3. ' for' → logprob: -9.253277778625488
    4. '           ' → logprob: -13.003277778625488
    5. '               ' → logprob: -14.003277778625488
    6. '```' → logprob: -14.878277778625488
    7. '   ' → logprob: -15.128277778625488
    8. '       ' → logprob: -16.003276824951172
    9. '                       ' → logprob: -16.003276824951172
    10. '
' → logprob: -16.003276824951172

Token 2355: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.45848218582978e-06
    2. ' i' → logprob: -13.75000286102295
    3. 'idx' → logprob: -14.00000286102295
    4. 'j' → logprob: -14.75000286102295
    5. '   ' → logprob: -17.000001907348633
    6. '	i' → logprob: -17.875001907348633
    7. 't' → logprob: -19.125001907348633
    8. '       ' → logprob: -19.250001907348633
    9. '_i' → logprob: -19.375001907348633
    10. '```' → logprob: -20.000001907348633

Token 2356: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3150683343410492
    2. 'in' → logprob: -1.3150683641433716
    3. '<|end|>' → logprob: -7.190068244934082
    4. ',' → logprob: -7.565068244934082
    5. 'i' → logprob: -9.565068244934082
    6. '=' → logprob: -9.565068244934082
    7. '[' → logprob: -9.565068244934082
    8. '0' → logprob: -9.940068244934082
    9. '<|end|>' → logprob: -9.940068244934082
    10. '...' → logprob: -10.065068244934082

Token 2357: ' denom' (ID: 73604)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.009081901982426643
    2. 'coin' → logprob: -5.134081840515137
    3. 'val' → logprob: -6.259081840515137
    4. 'd' → logprob: -7.384081840515137
    5. 'value' → logprob: -8.134081840515137
    6. ' denom' → logprob: -8.884081840515137
    7. 'c' → logprob: -9.259081840515137
    8. 'v' → logprob: -9.759081840515137
    9. 'dtype' → logprob: -11.884081840515137
    10. '(' → logprob: -12.259081840515137

Token 2358: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5250158905982971
    2. ' in' → logprob: -0.9000158905982971
    3. 'value' → logprob: -6.775015830993652
    4. ',value' → logprob: -8.775015830993652
    5. ',' → logprob: -8.900015830993652
    6. '_value' → logprob: -9.025015830993652
    7. '   ' → logprob: -9.650015830993652
    8. '
' → logprob: -9.650015830993652
    9. '.value' → logprob: -10.775015830993652
    10. 'i' → logprob: -10.775015830993652

Token 2359: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00025549851125106215
    2. 'range' → logprob: -8.750255584716797
    3. ' enumerate' → logprob: -9.250255584716797
    4. '
' → logprob: -14.500255584716797
    5. 'enum' → logprob: -15.375255584716797
    6. '```' → logprob: -16.875255584716797
    7. '[(' → logprob: -17.000255584716797
    8. '   ' → logprob: -17.125255584716797
    9. 'coin' → logprob: -17.375255584716797
    10. 'Coin' → logprob: -17.750255584716797

Token 2360: '(self' (ID: 2402)
  Prédit: 'Coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' → logprob: -0.13044008612632751
    2. 'coin' → logprob: -2.3804399967193604
    3. 'self' → logprob: -3.7554399967193604
    4. '(C' → logprob: -5.3804402351379395
    5. 'strategy' → logprob: -7.5054402351379395
    6. '(' → logprob: -7.7554402351379395
    7. '(self' → logprob: -8.130439758300781
    8. 'class' → logprob: -8.880439758300781
    9. ' Coin' → logprob: -9.505439758300781
    10. ' coin' → logprob: -9.880439758300781

Token 2361: '.coin' (ID: 151855)
  Prédit: '.coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.coin' → logprob: -0.009763529524207115
    2. 'coin' → logprob: -4.634763717651367
    3. ' coin' → logprob: -12.634763717651367
    4. '.' → logprob: -13.634763717651367
    5. ' .' → logprob: -14.884763717651367
    6. '   ' → logprob: -15.134763717651367
    7. '.co' → logprob: -15.134763717651367
    8. '\.' → logprob: -15.259763717651367
    9. '_coin' → logprob: -15.259763717651367
    10. '
' → logprob: -15.259763717651367

Token 2362: '_types' (ID: 21515)
  Prédit: '_types'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_types' → logprob: -3.2378600735682994e-05
    2. 'types' → logprob: -11.375032424926758
    3. '_set' → logprob: -11.625032424926758
    4. 'set' → logprob: -12.875032424926758
    5. 'Types' → logprob: -12.875032424926758
    6. '   ' → logprob: -13.000032424926758
    7. '.types' → logprob: -13.625032424926758
    8. '
' → logprob: -14.000032424926758
    9. '_TYPES' → logprob: -14.000032424926758
    10. 's' → logprob: -14.500032424926758

Token 2363: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05171888321638107
    2. '):' → logprob: -3.4267189502716064
    3. '                   ' → logprob: -5.051718711853027
    4. '                       ' → logprob: -5.301718711853027
    5. '       ' → logprob: -5.801718711853027
    6. ':' → logprob: -6.426718711853027
    7. '[' → logprob: -7.676718711853027
    8. '   ' → logprob: -7.926718711853027
    9. '           ' → logprob: -8.551718711853027
    10. ':
' → logprob: -8.676718711853027

Token 2364: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0016499487683176994
    2. '```' → logprob: -6.626649856567383
    3. ' new' → logprob: -9.501649856567383
    4. '                        
' → logprob: -9.876649856567383
    5. '                   ' → logprob: -10.126649856567383
    6. '<|end|>' → logprob: -10.126649856567383
    7. 'new' → logprob: -10.376649856567383
    8. ',' → logprob: -11.001649856567383
    9. '):
' → logprob: -11.126649856567383
    10. '               ' → logprob: -11.876649856567383

Token 2365: ' coin' (ID: 22179)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.28386855125427246
    2. '                       ' → logprob: -2.2838685512542725
    3. 'count' → logprob: -2.6588685512542725
    4. 'if' → logprob: -3.2838685512542725
    5. 'used' → logprob: -4.658868789672852
    6. 'value' → logprob: -4.658868789672852
    7. ' new' → logprob: -4.908868789672852
    8. 'change' → logprob: -5.658868789672852
    9. 'coin' (adapté à ' coin') → logprob: -6.408868789672852
    10. 'old' → logprob: -6.533868789672852

Token 2366: '_val' (ID: 13694)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.6420818567276001
    2. '_value' → logprob: -0.7670818567276001
    3. '=' → logprob: -5.8920817375183105
    4. 'new' → logprob: -6.6420817375183105
    5. ' =' → logprob: -6.6420817375183105
    6. '_index' → logprob: -7.1420817375183105
    7. '_val' → logprob: -7.3920817375183105
    8. '_count' → logprob: -7.6420817375183105
    9. 'index' → logprob: -7.7670817375183105
    10. 'count' → logprob: -8.267082214355469

Token 2367: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6993645429611206
    2. ' =' → logprob: -0.6993645429611206
    3. 's' → logprob: -6.94936466217041
    4. ')' → logprob: -7.07436466217041
    5. '=
' → logprob: -7.07436466217041
    6. '=value' → logprob: -7.57436466217041
    7. '_value' → logprob: -7.82436466217041
    8. ',' → logprob: -7.94936466217041
    9. '           ' → logprob: -8.19936466217041
    10. 'value' → logprob: -8.32436466217041

Token 2368: ' denom' (ID: 73604)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -3.297462171758525e-05
    2. 'coin' → logprob: -10.875033378601074
    3. ' denom' → logprob: -12.500033378601074
    4. '           ' → logprob: -12.875033378601074
    5. '                   ' → logprob: -13.000033378601074
    6. 'self' → logprob: -13.250033378601074
    7. 'Coin' → logprob: -13.500033378601074
    8. '               ' → logprob: -13.500033378601074
    9. 'dom' → logprob: -15.625033378601074
    10. '       ' → logprob: -15.750033378601074

Token 2369: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.00012166214582975954
    2. 'value' → logprob: -9.3751220703125
    3. '.' → logprob: -10.3751220703125
    4. '   ' → logprob: -13.1251220703125
    5. '```' → logprob: -13.5001220703125
    6. ' .' → logprob: -14.2501220703125
    7. '       ' → logprob: -15.5001220703125
    8. '.
' → logprob: -15.6251220703125
    9. ''value' → logprob: -15.8751220703125
    10. ').' → logprob: -15.8751220703125

Token 2370: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.023431699723005295
    2. '
' → logprob: -4.148431777954102
    3. '                        
' → logprob: -6.148431777954102
    4. ' =' → logprob: -6.898431777954102
    5. '<|end|>' → logprob: -7.023431777954102
    6. '=' → logprob: -7.398431777954102
    7. '                   ' → logprob: -7.523431777954102
    8. ',' → logprob: -7.523431777954102
    9. ':
' → logprob: -8.148431777954102
    10. '):
' → logprob: -8.648431777954102

Token 2371: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.002218891866505146
    2. '```' → logprob: -6.627218723297119
    3. '                   ' → logprob: -7.502218723297119
    4. '                        
' → logprob: -8.877219200134277
    5. '           ' → logprob: -10.377219200134277
    6. '
' → logprob: -10.752219200134277
    7. '               ' → logprob: -10.877219200134277
    8. '       ' → logprob: -10.877219200134277
    9. '                           ' → logprob: -10.877219200134277
    10. 'new' → logprob: -11.252219200134277

Token 2372: ' after' (ID: 1934)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.791436493396759
    2. 'new' → logprob: -1.2914364337921143
    3. '                       ' → logprob: -2.1664364337921143
    4. 'old' → logprob: -2.7914364337921143
    5. 'count' → logprob: -3.4164364337921143
    6. 'if' → logprob: -3.4164364337921143
    7. ' used' → logprob: -5.541436672210693
    8. 'current' → logprob: -5.916436672210693
    9. ' new' → logprob: -6.041436672210693
    10. 'coin' → logprob: -6.041436672210693

Token 2373: ' =' (ID: 314)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.6019240617752075
    2. '_count' → logprob: -1.8519240617752075
    3. 'count' → logprob: -2.476923942565918
    4. ' =' → logprob: -2.601923942565918
    5. '=' → logprob: -3.101923942565918
    6. '_co' → logprob: -3.226923942565918
    7. 'new' → logprob: -4.601923942565918
    8. '                   ' → logprob: -4.976923942565918
    9. '           ' → logprob: -5.476923942565918
    10. '   ' → logprob: -5.476923942565918

Token 2374: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.0002930366899818182
    2. ' coins' → logprob: -8.750292778015137
    3. '           ' → logprob: -9.750292778015137
    4. '               ' → logprob: -10.625292778015137
    5. '                   ' → logprob: -10.875292778015137
    6. '   ' → logprob: -11.125292778015137
    7. '       ' → logprob: -12.000292778015137
    8. '                       ' → logprob: -12.625292778015137
    9. 'coin' → logprob: -12.875292778015137
    10. 'max' → logprob: -13.125292778015137

Token 2375: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00016396844875998795
    2. 'held' → logprob: -8.750164031982422
    3. '[' → logprob: -13.500164031982422
    4. '```' → logprob: -14.000164031982422
    5. '                   ' → logprob: -14.250164031982422
    6. '-held' → logprob: -14.500164031982422
    7. '                       ' → logprob: -14.625164031982422
    8. '   ' → logprob: -15.500164031982422
    9. '[i' → logprob: -15.625164031982422
    10. '           ' → logprob: -15.750164031982422

Token 2376: 'held' (ID: 32869)
  Prédit: 'held'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'held' → logprob: -1.5332478142227046e-05
    2. '_' → logprob: -12.750015258789062
    3. '-held' → logprob: -12.750015258789062
    4. '```' → logprob: -13.375015258789062
    5. 'Held' → logprob: -13.625015258789062
    6. 'hold' → logprob: -13.625015258789062
    7. ' held' → logprob: -13.875015258789062
    8. '   ' → logprob: -14.125015258789062
    9. 'i' → logprob: -14.750015258789062
    10. 'new' → logprob: -14.875015258789062

Token 2377: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.253090865968261e-06
    2. '                       ' → logprob: -12.625009536743164
    3. '```' → logprob: -13.375009536743164
    4. '                   ' → logprob: -13.500009536743164
    5. '[
' → logprob: -14.250009536743164
    6. ' [' → logprob: -14.375009536743164
    7. 'i' → logprob: -14.750009536743164
    8. '(i' → logprob: -15.125009536743164
    9. '                        
' → logprob: -16.125009536743164
    10. '[' → logprob: -16.125009536743164

Token 2378: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.020607639104127884
    2. '-' → logprob: -3.8956077098846436
    3. ' -
' → logprob: -11.395607948303223
    4. '                       ' → logprob: -11.645607948303223
    5. ']' → logprob: -11.770607948303223
    6. ')' → logprob: -11.895607948303223
    7. '-
' → logprob: -12.020607948303223
    8. '<|end|>' → logprob: -12.520607948303223
    9. '```' → logprob: -13.020607948303223
    10. '                   ' → logprob: -13.020607948303223

Token 2379: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11290035396814346
    2. '-' → logprob: -2.2379002571105957
    3. '```' → logprob: -9.987900733947754
    4. '-
' → logprob: -12.362900733947754
    5. '                       ' → logprob: -12.612900733947754
    6. '-use' → logprob: -12.862900733947754
    7. '-used' → logprob: -13.112900733947754
    8. ' -
' → logprob: -13.362900733947754
    9. '           ' → logprob: -13.737900733947754
    10. '-self' → logprob: -13.862900733947754

Token 2380: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -7.493430894101039e-05
    2. ' used' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.12507438659668
    4. '                   ' → logprob: -17.37507438659668
    5. '                       ' → logprob: -18.50007438659668
    6. '               ' → logprob: -18.75007438659668
    7. '       ' → logprob: -19.12507438659668
    8. '           ' → logprob: -19.25007438659668
    9. 'usage' → logprob: -20.37507438659668
    10. '                           ' → logprob: -20.62507438659668

Token 2381: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -1.0280383548888494e-06
    2. 'co' → logprob: -14.500000953674316
    3. 'coins' → logprob: -15.750000953674316
    4. '_' → logprob: -15.750000953674316
    5. '_tokens' → logprob: -16.375001907348633
    6. '```' → logprob: -17.750001907348633
    7. '[i' → logprob: -19.000001907348633
    8. 'i' → logprob: -19.125001907348633
    9. '-co' → logprob: -19.125001907348633
    10. '
' → logprob: -19.375001907348633

Token 2382: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.01137329638004303
    2. 'coins' → logprob: -4.886373519897461
    3. '_co' → logprob: -5.886373519897461
    4. 'o' → logprob: -7.511373519897461
    5. '_' → logprob: -9.386373519897461
    6. 'Coins' → logprob: -9.636373519897461
    7. 'ions' → logprob: -10.011373519897461
    8. '_ins' → logprob: -10.011373519897461
    9. 'ns' → logprob: -10.136373519897461
    10. '
' → logprob: -10.636373519897461

Token 2383: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.842555426876061e-06
    2. '[' → logprob: -13.500004768371582
    3. '[
' → logprob: -13.750004768371582
    4. '                       ' → logprob: -14.750004768371582
    5. '```' → logprob: -14.750004768371582
    6. ' [' → logprob: -14.875004768371582
    7. 'i' → logprob: -15.125004768371582
    8. '(i' → logprob: -15.375004768371582
    9. '                   ' → logprob: -15.500004768371582
    10. '][' → logprob: -15.750004768371582

Token 2384: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8825026154518127
    2. ']' → logprob: -1.507502555847168
    3. '                       ' → logprob: -1.757502555847168
    4. ' +' → logprob: -2.007502555847168
    5. ']+' → logprob: -3.632502555847168
    6. ')' → logprob: -4.507502555847168
    7. '[i' → logprob: -5.382502555847168
    8. ']
' → logprob: -6.007502555847168
    9. '                        ' → logprob: -6.507502555847168
    10. '[' → logprob: -6.632502555847168

Token 2385: ' +' (ID: 659)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.9739906191825867
    2. '+' → logprob: -1.0989906787872314
    3. ' +' → logprob: -1.9739906787872314
    4. '-' → logprob: -2.9739906787872314
    5. ' -' → logprob: -2.9739906787872314
    6. '
' → logprob: -4.098990440368652
    7. '```' → logprob: -4.473990440368652
    8. '                   ' → logprob: -4.598990440368652
    9. '                        
' → logprob: -5.973990440368652
    10. '<|end|>' → logprob: -6.473990440368652

Token 2386: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.00016802136087790132
    2. ' change' → logprob: -9.125167846679688
    3. '(change' → logprob: -9.750167846679688
    4. 'count' → logprob: -16.125167846679688
    5. '       ' → logprob: -16.250167846679688
    6. 'new' → logprob: -16.375167846679688
    7. '	change' → logprob: -16.625167846679688
    8. '           ' → logprob: -16.750167846679688
    9. '```' → logprob: -16.875167846679688
    10. '   ' → logprob: -17.000167846679688

Token 2387: '_min' (ID: 15950)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.10471975803375244
    2. '_min' → logprob: -2.854719638824463
    3. '_val' → logprob: -4.104719638824463
    4. '_counts' → logprob: -4.604719638824463
    5. '[i' → logprob: -5.979719638824463
    6. 'co' → logprob: -5.979719638824463
    7. '```' → logprob: -6.479719638824463
    8. '_count' → logprob: -6.479719638824463
    9. '       ' → logprob: -7.354719638824463
    10. 's' → logprob: -7.479719638824463

Token 2388: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -1.5690089639974758e-05
    2. 'coins' → logprob: -11.125015258789062
    3. 'Coins' → logprob: -14.375015258789062
    4. ' coins' → logprob: -16.750015258789062
    5. '.co' → logprob: -16.875015258789062
    6. '   ' → logprob: -17.250015258789062
    7. '_coin' → logprob: -17.250015258789062
    8. '-co' → logprob: -17.500015258789062
    9. 'co' → logprob: -17.625015258789062
    10. '[i' → logprob: -17.875015258789062

Token 2389: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.2922365367412567
    2. 'coins' → logprob: -1.542236566543579
    3. 's' → logprob: -4.042236328125
    4. 'Coins' → logprob: -4.667236328125
    5. 'ns' → logprob: -5.042236328125
    6. '
' → logprob: -7.292236328125
    7. 'ons' → logprob: -7.292236328125
    8. 'os' → logprob: -7.417236328125
    9. '   ' → logprob: -7.542236328125
    10. '```' → logprob: -7.917236328125

Token 2390: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.00010187433508690447
    2. '[' → logprob: -9.750102043151855
    3. 'get' → logprob: -11.000102043151855
    4. '.' → logprob: -11.250102043151855
    5. '[i' → logprob: -12.125102043151855
    6. '.setdefault' → logprob: -13.000102043151855
    7. '```' → logprob: -13.250102043151855
    8. '       ' → logprob: -14.250102043151855
    9. '_get' → logprob: -14.500102043151855
    10. '.value' → logprob: -14.625102043151855

Token 2391: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.297462171758525e-05
    2. '(
' → logprob: -10.750033378601074
    3. 'coin' → logprob: -11.750033378601074
    4. '((' → logprob: -13.875033378601074
    5. '```' → logprob: -14.125033378601074
    6. '(co' → logprob: -14.375033378601074
    7. '(i' → logprob: -14.500033378601074
    8. ' (' → logprob: -15.625033378601074
    9. '
' → logprob: -15.875033378601074
    10. '.coin' → logprob: -16.375032424926758

Token 2392: 'coin' (ID: 10126)
  Prédit: 'coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coin' → logprob: -5.8961017202818766e-05
    2. 'den' → logprob: -10.375059127807617
    3. ' coin' → logprob: -10.625059127807617
    4. '(' → logprob: -13.375059127807617
    5. '```' → logprob: -14.250059127807617
    6. 'Coin' → logprob: -14.500059127807617
    7. '.coin' → logprob: -15.375059127807617
    8. '_coin' → logprob: -15.750059127807617
    9. '`' → logprob: -16.875059127807617
    10. 'i' → logprob: -17.000059127807617

Token 2393: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.011770996265113354
    2. 'val' → logprob: -4.511771202087402
    3. '.val' → logprob: -8.011771202087402
    4. 'value' → logprob: -9.261771202087402
    5. '.value' → logprob: -9.636771202087402
    6. '   ' → logprob: -10.949271202087402
    7. '[val' → logprob: -10.949271202087402
    8. '[' → logprob: -11.386771202087402
    9. '
' → logprob: -11.761771202087402
    10. '       ' → logprob: -11.824271202087402

Token 2394: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007424455252476037
    2. ',i' → logprob: -7.625742435455322
    3. '(i' → logprob: -8.87574291229248
    4. ' ,' → logprob: -9.75074291229248
    5. '(),' → logprob: -10.62574291229248
    6. '           ' → logprob: -11.62574291229248
    7. 'i' → logprob: -12.25074291229248
    8. '```' → logprob: -12.37574291229248
    9. '               ' → logprob: -12.50074291229248
    10. '`,' → logprob: -13.25074291229248

Token 2395: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '           ' → logprob: -16.62501335144043
    4. ')' → logprob: -17.62501335144043
    5. '                       ' → logprob: -17.62501335144043
    6. '       ' → logprob: -18.00001335144043
    7. '                   ' → logprob: -18.00001335144043
    8. '   ' → logprob: -18.12501335144043
    9. '               ' → logprob: -18.12501335144043
    10. '```' → logprob: -18.50001335144043

Token 2396: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.75000762939453
    4. '           ' → logprob: -17.25000762939453
    5. '       ' → logprob: -17.62500762939453
    6. ')' → logprob: -17.75000762939453
    7. '```' → logprob: -18.00000762939453
    8. '                   ' → logprob: -18.68750762939453
    9. '                       ' → logprob: -18.81250762939453
    10. '               ' → logprob: -18.93750762939453

Token 2397: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17637202143669128
    2. ')
' → logprob: -2.0513720512390137
    3. '                       ' → logprob: -3.4263720512390137
    4. '                   ' → logprob: -8.176371574401855
    5. '                           ' → logprob: -9.176371574401855
    6. '())' → logprob: -9.676371574401855
    7. '())
' → logprob: -10.176371574401855
    8. '           ' → logprob: -10.426371574401855
    9. '):
' → logprob: -10.801371574401855
    10. '               ' → logprob: -11.051371574401855

Token 2398: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.06549159437417984
    2. '                   ' → logprob: -3.6904916763305664
    3. '```' → logprob: -3.9404916763305664
    4. '<|end|>' → logprob: -4.940491676330566
    5. '                        
' → logprob: -5.065491676330566
    6. '``' → logprob: -6.815491676330566
    7. ')' → logprob: -7.315491676330566
    8. '                           ' → logprob: -7.565491676330566
    9. '               ' → logprob: -7.815491676330566
    10. '
' → logprob: -7.940491676330566

Token 2399: ' new' (ID: 620)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2748624384403229
    2. 'new' (adapté à ' new') → logprob: -2.02486252784729
    3. '                       ' → logprob: -2.52486252784729
    4. '                   ' → logprob: -4.024862289428711
    5. ' if' → logprob: -4.774862289428711
    6. ' new' → logprob: -7.024862289428711
    7. '```' → logprob: -8.024862289428711
    8. '
' → logprob: -8.399862289428711
    9. '                           ' → logprob: -8.899862289428711
    10. '           ' → logprob: -9.149862289428711

Token 2400: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -8.482821431243792e-05
    2. 'coins' → logprob: -9.75008487701416
    3. '[i' → logprob: -11.37508487701416
    4. '```' → logprob: -12.25008487701416
    5. '[' → logprob: -13.50008487701416
    6. '_val' → logprob: -13.62508487701416
    7. '   ' → logprob: -13.62508487701416
    8. '_coin' → logprob: -13.75008487701416
    9. 'Coins' → logprob: -13.87508487701416
    10. '_' → logprob: -14.25008487701416

Token 2401: 'ins' (ID: 1564)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.3221853971481323
    2. 'ins' → logprob: -1.3221853971481323
    3. 'coins' → logprob: -6.072185516357422
    4. '_' → logprob: -6.572185516357422
    5. '_ins' → logprob: -6.572185516357422
    6. '_in' → logprob: -6.697185516357422
    7. 'w' → logprob: -7.072185516357422
    8. '_w' → logprob: -7.697185516357422
    9. '_inches' → logprob: -8.572185516357422
    10. 'ines' → logprob: -8.697185516357422

Token 2402: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03955449163913727
    2. '[' → logprob: -3.9145545959472656
    3. '.append' → logprob: -4.164554595947266
    4. '[
' → logprob: -6.789554595947266
    5. '=' → logprob: -7.039554595947266
    6. '```' → logprob: -7.789554595947266
    7. '                   ' → logprob: -9.164554595947266
    8. '[idx' → logprob: -9.539554595947266
    9. '<|end|>' → logprob: -9.664554595947266
    10. '[int' → logprob: -9.789554595947266

Token 2403: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -1.2587897777557373
    2. '=' → logprob: -1.5087897777557373
    3. '>=' → logprob: -2.6337897777557373
    4. ')' → logprob: -2.6337897777557373
    5. ']+=' → logprob: -2.6337897777557373
    6. '<|end|>' → logprob: -2.8837897777557373
    7. ' +=' → logprob: -3.0087897777557373
    8. '[' → logprob: -3.1337897777557373
    9. ']' → logprob: -3.8837897777557373
    10. '[
' → logprob: -4.258790016174316

Token 2404: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006195876747369766
    2. '+=' → logprob: -5.131196022033691
    3. '=max' → logprob: -9.381196022033691
    4. ' =' → logprob: -9.631196022033691
    5. '>=' → logprob: -9.881196022033691
    6. ' +=' → logprob: -10.631196022033691
    7. '.=' → logprob: -11.881196022033691
    8. '=
' → logprob: -12.006196022033691
    9. '>' → logprob: -12.381196022033691
    10. '                       ' → logprob: -12.506196022033691

Token 2405: ' after' (ID: 1934)
  Prédit: 'after'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'after' → logprob: -0.005804479122161865
    2. 'max' → logprob: -5.255804538726807
    3. ' after' → logprob: -7.630804538726807
    4. ' max' → logprob: -9.505804061889648
    5. '   ' → logprob: -12.755804061889648
    6. '(after' → logprob: -13.255804061889648
    7. '           ' → logprob: -13.755804061889648
    8. '0' → logprob: -13.880804061889648
    9. '
' → logprob: -13.880804061889648
    10. 'af' → logprob: -14.255804061889648

Token 2406: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2407: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.018744800239801407
    2. '
' → logprob: -4.393744945526123
    3. '           ' → logprob: -6.643744945526123
    4. '```' → logprob: -6.768744945526123
    5. '                    
' → logprob: -6.893744945526123
    6. '                       ' → logprob: -6.893744945526123
    7. '               ' → logprob: -7.268744945526123
    8. '       ' → logprob: -8.643744468688965
    9. '                        
' → logprob: -9.143744468688965
    10. '   ' → logprob: -9.268744468688965

Token 2408: ' new' (ID: 620)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.41577133536338806
    2. '                   ' → logprob: -1.1657713651657104
    3. 'new' (adapté à ' new') → logprob: -3.790771245956421
    4. '#' → logprob: -6.040771484375
    5. 'c' → logprob: -6.790771484375
    6. 'for' → logprob: -7.540771484375
    7. 'key' → logprob: -7.665771484375
    8. 'state' → logprob: -7.790771484375
    9. 'self' → logprob: -8.165771484375
    10. '               ' → logprob: -8.665771484375

Token 2409: '_co' (ID: 21102)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.02762673608958721
    2. '_co' → logprob: -3.7776267528533936
    3. '_' → logprob: -5.9026265144348145
    4. 'coins' → logprob: -6.6526265144348145
    5. '_coin' → logprob: -8.402626991271973
    6. '
' → logprob: -10.277626991271973
    7. 'c' → logprob: -10.652626991271973
    8. '_state' → logprob: -11.652626991271973
    9. ' coins' → logprob: -11.777626991271973
    10. '_tuple' → logprob: -12.027626991271973

Token 2410: 'ins' (ID: 1564)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.10779229551553726
    2. 'ins' → logprob: -2.607792377471924
    3. '_' → logprob: -3.982792377471924
    4. '_ins' → logprob: -5.982792377471924
    5. 'coins' → logprob: -5.982792377471924
    6. 'o' → logprob: -6.857792377471924
    7. '_in' → logprob: -7.232792377471924
    8. '500' → logprob: -7.607792377471924
    9. 'in' → logprob: -7.857792377471924
    10. '_o' → logprob: -8.607791900634766

Token 2411: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5234125256538391
    2. '=' → logprob: -0.8984125256538391
    3. '_tuple' → logprob: -9.148412704467773
    4. '```' → logprob: -9.523412704467773
    5. '           ' → logprob: -10.398412704467773
    6. ')' → logprob: -11.273412704467773
    7. '                   ' → logprob: -11.523412704467773
    8. '<|end|>' → logprob: -11.898412704467773
    9. '=
' → logprob: -12.023412704467773
    10. '.append' → logprob: -12.023412704467773

Token 2412: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0004309076175559312
    2. ' tuple' → logprob: -7.750431060791016
    3. '(tuple' → logprob: -16.000431060791016
    4. 'tu' → logprob: -16.250431060791016
    5. '           ' → logprob: -17.625431060791016
    6. '   ' → logprob: -18.000431060791016
    7. 'Tuple' → logprob: -20.500431060791016
    8. '_tuple' → logprob: -20.625431060791016
    9. '       ' → logprob: -20.750431060791016
    10. '                   ' → logprob: -21.375431060791016

Token 2413: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.0024870727211236954
    2. 'new' → logprob: -6.0024871826171875
    3. '(sorted' → logprob: -11.502487182617188
    4. '[new' → logprob: -13.752487182617188
    5. ' new' → logprob: -16.377487182617188
    6. 'sorted' → logprob: -17.127487182617188
    7. '$new' → logprob: -17.877487182617188
    8. '(
' → logprob: -17.877487182617188
    9. '_new' → logprob: -18.502487182617188
    10. ')new' → logprob: -18.502487182617188

Token 2414: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -1.747814349073451e-05
    2. 'coins' → logprob: -11.375017166137695
    3. '(co' → logprob: -13.000017166137695
    4. '(new' → logprob: -13.625017166137695
    5. 'new' → logprob: -13.750017166137695
    6. 'Coins' → logprob: -14.250017166137695
    7. 'co' → logprob: -15.625017166137695
    8. '_coin' → logprob: -16.125017166137695
    9. '```' → logprob: -16.625017166137695
    10. '_new' → logprob: -17.000017166137695

Token 2415: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.01839352212846279
    2. 'w' → logprob: -4.143393516540527
    3. 'ines' → logprob: -7.893393516540527
    4. '_co' → logprob: -7.893393516540527
    5. '[' → logprob: -8.018393516540527
    6. '_ins' → logprob: -8.143393516540527
    7. '_w' → logprob: -8.268393516540527
    8. 'ns' → logprob: -9.018393516540527
    9. '_' → logprob: -9.018393516540527
    10. 'ices' → logprob: -9.018393516540527

Token 2416: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22332046926021576
    2. '                   ' → logprob: -2.098320484161377
    3. ')
' → logprob: -2.598320484161377
    4. '               ' → logprob: -6.598320484161377
    5. '           ' → logprob: -7.348320484161377
    6. '
' → logprob: -7.973320484161377
    7. '<|end|>' → logprob: -8.473320007324219
    8. '                    
' → logprob: -8.973320007324219
    9. ',' → logprob: -9.098320007324219
    10. '):
' → logprob: -9.973320007324219

Token 2417: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001770139206200838
    2. '
' → logprob: -6.87677001953125
    3. 'if' → logprob: -7.75177001953125
    4. '                    
' → logprob: -9.25177001953125
    5. 'self' → logprob: -9.87677001953125
    6. '           ' → logprob: -10.12677001953125
    7. '               ' → logprob: -10.50177001953125
    8. ',' → logprob: -10.87677001953125
    9. '   ' → logprob: -11.12677001953125
    10. '                       ' → logprob: -11.37677001953125

Token 2418: ' new' (ID: 620)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5932666659355164
    2. 'self' → logprob: -0.8432666659355164
    3. 'if' → logprob: -4.093266487121582
    4. '
' → logprob: -8.968266487121582
    5. 'c' → logprob: -9.343266487121582
    6. '                    
' → logprob: -9.593266487121582
    7. 'updated' → logprob: -9.843266487121582
    8. 'new' (adapté à ' new') → logprob: -9.968266487121582
    9. '               ' → logprob: -10.593266487121582
    10. '#' → logprob: -10.593266487121582

Token 2419: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0003688245196826756
    2. '_' → logprob: -8.12536907196045
    3. '500' → logprob: -10.25036907196045
    4. 'c' → logprob: -11.62536907196045
    5. '               ' → logprob: -12.12536907196045
    6. '                   ' → logprob: -12.25036907196045
    7. '
' → logprob: -12.37536907196045
    8. '_states' → logprob: -12.75036907196045
    9. '_state' → logprob: -13.12536907196045
    10. ' =' → logprob: -13.50036907196045

Token 2420: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -7.004696090007201e-05
    2. '_' → logprob: -10.000069618225098
    3. '5' → logprob: -12.500069618225098
    4. ',' → logprob: -12.625069618225098
    5. ' =' → logprob: -13.000069618225098
    6. 'o' → logprob: -13.125069618225098
    7. '
' → logprob: -13.625069618225098
    8. 'c' → logprob: -14.125069618225098
    9. 'coins' → logprob: -14.250069618225098
    10. 'oin' → logprob: -14.375069618225098

Token 2421: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34931519627571106
    2. '=' → logprob: -1.2243151664733887
    3. '+' → logprob: -7.599315166473389
    4. ' +' → logprob: -8.849315643310547
    5. ' +=' → logprob: -9.099315643310547
    6. '+=' → logprob: -10.099315643310547
    7. ',' → logprob: -10.849315643310547
    8. '<|end|>' → logprob: -10.849315643310547
    9. ')' → logprob: -11.599315643310547
    10. '    ' → logprob: -11.974315643310547

Token 2422: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.849109119386412e-06
    2. ' c' → logprob: -11.750009536743164
    3. '                   ' → logprob: -13.250009536743164
    4. '                       ' → logprob: -16.375009536743164
    5. '               ' → logprob: -17.625009536743164
    6. '   ' → logprob: -18.125009536743164
    7. '                           ' → logprob: -18.875009536743164
    8. '(c' → logprob: -18.875009536743164
    9. '           ' → logprob: -19.625009536743164
    10. '	c' → logprob: -19.750009536743164

Token 2423: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -6.909333023941144e-05
    2. '+' → logprob: -10.250068664550781
    3. '_' → logprob: -11.875068664550781
    4. '5' → logprob: -11.875068664550781
    5. '   ' → logprob: -12.750068664550781
    6. '50' → logprob: -12.875068664550781
    7. '[' → logprob: -13.375068664550781
    8. '501' → logprob: -13.625068664550781
    9. '(' → logprob: -13.750068664550781
    10. '               ' → logprob: -13.875068664550781

Token 2424: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759797692298889
    2. '+' → logprob: -0.8259797692298889
    3. '                   ' → logprob: -10.200980186462402
    4. '+
' → logprob: -13.950980186462402
    5. '                       ' → logprob: -14.325980186462402
    6. '                    ' → logprob: -14.325980186462402
    7. ' +
' → logprob: -15.700980186462402
    8. '＋' → logprob: -15.825980186462402
    9. '               ' → logprob: -16.450979232788086
    10. '
' → logprob: -16.450979232788086

Token 2425: ' received' (ID: 6100)
  Prédit: 'received'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'received' → logprob: -1.2664456789934775e-06
    2. 'count' → logprob: -14.000000953674316
    3. ' received' → logprob: -14.750000953674316
    4. '(rece' → logprob: -17.750001907348633
    5. '   ' → logprob: -18.625001907348633
    6. 'used' → logprob: -19.375001907348633
    7. 'returned' → logprob: -21.125001907348633
    8. '
' → logprob: -21.750001907348633
    9. 'rece' → logprob: -21.875001907348633
    10. '       ' → logprob: -22.375001907348633

Token 2426: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25448983907699585
    2. '_co' → logprob: -1.5044898986816406
    3. 'coins' → logprob: -6.379489898681641
    4. '500' → logprob: -7.129489898681641
    5. '```' → logprob: -10.87948989868164
    6. '_coin' → logprob: -11.62948989868164
    7. '
' → logprob: -12.25448989868164
    8. 'co' → logprob: -12.37948989868164
    9. '100' → logprob: -12.62948989868164
    10. '5' → logprob: -12.75448989868164

Token 2427: '500' (ID: 3234)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.012933257035911083
    2. '500' → logprob: -4.512933254241943
    3. '1' → logprob: -6.387933254241943
    4. '100' → logprob: -8.762933731079102
    5. '_co' → logprob: -11.262933731079102
    6. '0' → logprob: -11.262933731079102
    7. '_' → logprob: -12.262933731079102
    8. '5' → logprob: -12.762933731079102
    9. ' coins' → logprob: -12.887933731079102
    10. 'co' → logprob: -13.137933731079102

Token 2428: 'coins' (ID: 48264)
  Prédit: 'coins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -3.190178904333152e-05
    2. '_co' → logprob: -10.500031471252441
    3. 'coin' → logprob: -13.625031471252441
    4. '```' → logprob: -14.000031471252441
    5. 'tokens' → logprob: -14.500031471252441
    6. '
' → logprob: -14.500031471252441
    7. ' coins' → logprob: -14.625031471252441
    8. 'co' → logprob: -14.750031471252441
    9. '_' → logprob: -16.000032424926758
    10. '   ' → logprob: -16.375032424926758

Token 2429: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10480767488479614
    2. ',' → logprob: -2.7298076152801514
    3. ',
' → logprob: -4.1048078536987305
    4. '
' → logprob: -4.1048078536987305
    5. '                    
' → logprob: -7.3548078536987305
    6. '```' → logprob: -7.8548078536987305
    7. '               ' → logprob: -9.85480785369873
    8. ')' → logprob: -10.72980785369873
    9. '
' → logprob: -10.85480785369873
    10. '                    ' → logprob: -10.97980785369873

Token 2430: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03134874999523163
    2. ',' → logprob: -3.531348705291748
    3. ',
' → logprob: -7.531348705291748
    4. '
' → logprob: -7.531348705291748
    5. '                    
' → logprob: -7.906348705291748
    6. '                    ' → logprob: -10.406349182128906
    7. '               ' → logprob: -10.406349182128906
    8. '```' → logprob: -10.656349182128906
    9. '           ' → logprob: -11.531349182128906
    10. '                       ' → logprob: -11.781349182128906

Token 2431: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.4226066470146179
    2. 'self' → logprob: -1.1726067066192627
    3. 'if' → logprob: -4.047606468200684
    4. '                   ' → logprob: -4.047606468200684
    5. '                    
' → logprob: -10.297606468200684
    6. 'expense' → logprob: -10.422606468200684
    7. '               ' → logprob: -10.922606468200684
    8. ' new' → logprob: -11.297606468200684
    9. '
' → logprob: -11.297606468200684
    10. '                       ' → logprob: -11.422606468200684

Token 2432: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.04518328607082367
    2. '_co' → logprob: -3.1701831817626953
    3. '_c' → logprob: -6.545183181762695
    4. '_' → logprob: -8.170183181762695
    5. '_coin' → logprob: -8.170183181762695
    6. 'expense' → logprob: -10.045183181762695
    7. '_state' → logprob: -10.295183181762695
    8. '_ex' → logprob: -10.545183181762695
    9. '_,' → logprob: -11.045183181762695
    10. ',' → logprob: -11.545183181762695

Token 2433: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -7.064297824399546e-05
    2. '=' → logprob: -11.000070571899414
    3. 'anse' → logprob: -11.375070571899414
    4. '               ' → logprob: -11.750070571899414
    5. '   ' → logprob: -12.125070571899414
    6. 'enses' → logprob: -12.500070571899414
    7. '       ' → logprob: -12.625070571899414
    8. '                   ' → logprob: -12.625070571899414
    9. '
' → logprob: -12.750070571899414
    10. '           ' → logprob: -13.000070571899414

Token 2434: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3530222177505493
    2. '=' → logprob: -1.2280222177505493
    3. ' +' → logprob: -6.10302209854126
    4. '                   ' → logprob: -6.47802209854126
    5. '+' → logprob: -7.85302209854126
    6. '                    ' → logprob: -7.97802209854126
    7. ' +=' → logprob: -10.978022575378418
    8. '                ' → logprob: -11.228022575378418
    9. '```' → logprob: -12.228022575378418
    10. '               ' → logprob: -12.353022575378418

Token 2435: ' expense' (ID: 29361)
  Prédit: 'expense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expense' → logprob: -0.011063147336244583
    2. ' expense' → logprob: -4.511063098907471
    3. '                   ' → logprob: -11.136063575744629
    4. 'payment' → logprob: -14.636063575744629
    5. '                    ' → logprob: -16.386062622070312
    6. '               ' → logprob: -16.761062622070312
    7. 'expenses' → logprob: -17.136062622070312
    8. 'exp' → logprob: -17.136062622070312
    9. '                       ' → logprob: -17.511062622070312
    10. '                ' → logprob: -18.261062622070312

Token 2436: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10021896660327911
    2. '+' → logprob: -2.3502190113067627
    3. '                   ' → logprob: -11.850218772888184
    4. ' +
' → logprob: -12.850218772888184
    5. '+
' → logprob: -13.850218772888184
    6. '                    ' → logprob: -13.850218772888184
    7. '                ' → logprob: -15.600218772888184
    8. '                       ' → logprob: -16.6002197265625
    9. '＋' → logprob: -16.7252197265625
    10. ' ' → logprob: -16.9752197265625

Token 2437: ' payment' (ID: 9277)
  Prédit: 'payment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'payment' → logprob: -1.9361264946837764e-07
    2. ' payment' → logprob: -15.75
    3. 'price' → logprob: -16.875
    4. '(payment' → logprob: -18.375
    5. 'pay' → logprob: -19.5
    6. 'purchase' → logprob: -20.125
    7. '   ' → logprob: -21.625
    8. '
' → logprob: -21.875
    9. '.payment' → logprob: -23.625
    10. 'Payment' → logprob: -23.75

Token 2438: '_money' (ID: 81323)
  Prédit: '_money'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_money' → logprob: -2.816093228830141e-06
    2. '                   ' → logprob: -14.37500286102295
    3. 'money' → logprob: -14.62500286102295
    4. '_' → logprob: -14.62500286102295
    5. '   ' → logprob: -15.12500286102295
    6. '_payment' → logprob: -15.37500286102295
    7. 'Money' → logprob: -15.75000286102295
    8. '```' → logprob: -15.75000286102295
    9. '           ' → logprob: -16.000001907348633
    10. '\' → logprob: -16.500001907348633

Token 2439: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03490326553583145
    2. '
' → logprob: -3.4099032878875732
    3. '                    
' → logprob: -7.909903049468994
    4. 'if' → logprob: -8.409903526306152
    5. '                       ' → logprob: -9.034903526306152
    6. ')
' → logprob: -9.284903526306152
    7. ')' → logprob: -9.409903526306152
    8. '               ' → logprob: -9.909903526306152
    9. '                           ' → logprob: -10.034903526306152
    10. '
' → logprob: -10.034903526306152

Token 2440: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000890259922016412
    2. 'if' → logprob: -7.375890254974365
    3. 'self' → logprob: -9.000890731811523
    4. '
' → logprob: -9.125890731811523
    5. '                    
' → logprob: -10.750890731811523
    6. '```' → logprob: -12.750890731811523
    7. '               ' → logprob: -13.125890731811523
    8. '                       ' → logprob: -13.250890731811523
    9. ' if' → logprob: -13.875890731811523
    10. '				' → logprob: -14.375890731811523

Token 2441: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6100555062294006
    2. '                   ' → logprob: -1.3600554466247559
    3. 'if' → logprob: -1.6100554466247559
    4. '                    
' → logprob: -9.985055923461914
    5. '
' → logprob: -10.235055923461914
    6. ' self' → logprob: -10.610055923461914
    7. ' if' → logprob: -10.735055923461914
    8. '                       ' → logprob: -11.485055923461914
    9. '               ' → logprob: -11.985055923461914
    10. '   ' → logprob: -13.235055923461914

Token 2442: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.023295558989048004
    2. 'update' → logprob: -3.7732956409454346
    3. '.' → logprob: -10.148295402526855
    4. '   ' → logprob: -11.898295402526855
    5. ' .' → logprob: -13.523295402526855
    6. '       ' → logprob: -13.648295402526855
    7. '_update' → logprob: -14.273295402526855
    8. '._' → logprob: -15.023295402526855
    9. 'UPDATE' → logprob: -15.398295402526855
    10. '           ' → logprob: -15.523295402526855

Token 2443: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.000327956018736586
    2. '_states' → logprob: -8.125328063964844
    3. 'state' → logprob: -11.250328063964844
    4. '(next' → logprob: -12.000328063964844
    5. 'State' → logprob: -12.500328063964844
    6. '```' → logprob: -13.000328063964844
    7. '_next' → logprob: -13.125328063964844
    8. '   ' → logprob: -13.625328063964844
    9. '`' → logprob: -14.375328063964844
    10. '(_' → logprob: -14.625328063964844

Token 2444: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -4.084206375409849e-05
    2. '(' → logprob: -10.375041007995605
    3. '(
' → logprob: -13.000041007995605
    4. '           ' → logprob: -13.000041007995605
    5. 'next' → logprob: -13.250041007995605
    6. '                   ' → logprob: -13.750041007995605
    7. '               ' → logprob: -14.250041007995605
    8. '   ' → logprob: -14.250041007995605
    9. '```' → logprob: -14.875041007995605
    10. '[next' → logprob: -15.250041007995605

Token 2445: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -1.1472419600977446e-06
    2. 'States' → logprob: -15.000000953674316
    3. '_state' → logprob: -15.375000953674316
    4. 'states' → logprob: -15.625000953674316
    5. '```' → logprob: -15.875000953674316
    6. '_' → logprob: -16.500001907348633
    7. '   ' → logprob: -17.000001907348633
    8. '(_' → logprob: -17.250001907348633
    9. '           ' → logprob: -17.500001907348633
    10. '(' → logprob: -18.125001907348633

Token 2446: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.045830223709344864
    2. '(next' → logprob: -3.545830249786377
    3. '                   ' → logprob: -5.295830249786377
    4. ',' → logprob: -5.420830249786377
    5. '(None' → logprob: -6.670830249786377
    6. '                       ' → logprob: -6.670830249786377
    7. '               ' → logprob: -6.920830249786377
    8. '                           ' → logprob: -7.420830249786377
    9. '           ' → logprob: -7.795830249786377
    10. '(_,' → logprob: -7.795830249786377

Token 2447: ' new' (ID: 620)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.0030859708786010742
    2. ' coins' → logprob: -6.253086090087891
    3. 'new' → logprob: -7.503086090087891
    4. '                   ' → logprob: -8.25308609008789
    5. 'coin' → logprob: -8.50308609008789
    6. '               ' → logprob: -9.25308609008789
    7. ' new' → logprob: -10.87808609008789
    8. '           ' → logprob: -11.50308609008789
    9. '                    ' → logprob: -12.00308609008789
    10. '            ' → logprob: -13.00308609008789

Token 2448: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.39031797647476196
    2. 'coins' → logprob: -1.1403179168701172
    3. 'co' → logprob: -6.515317916870117
    4. 'new' → logprob: -7.515317916870117
    5. '_c' → logprob: -7.890317916870117
    6. 'o' → logprob: -8.140317916870117
    7. 'coin' → logprob: -8.765317916870117
    8. 'oin' → logprob: -9.640317916870117
    9. 'Coins' → logprob: -9.640317916870117
    10. '   ' → logprob: -9.640317916870117

Token 2449: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0017262301407754421
    2. 'coins' → logprob: -7.251726150512695
    3. '_ins' → logprob: -7.501726150512695
    4. '_co' → logprob: -8.126726150512695
    5. '_' → logprob: -9.876726150512695
    6. '   ' → logprob: -10.251726150512695
    7. 'is' → logprob: -10.876726150512695
    8. 'in' → logprob: -11.001726150512695
    9. '#' → logprob: -12.376726150512695
    10. '
' → logprob: -12.751726150512695

Token 2450: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003764535649679601
    2. '                   ' → logprob: -8.12537670135498
    3. ' ,' → logprob: -10.00037670135498
    4. '                       ' → logprob: -11.37537670135498
    5. '                           ' → logprob: -11.87537670135498
    6. '               ' → logprob: -12.37537670135498
    7. ',new' → logprob: -12.75037670135498
    8. '```' → logprob: -13.25037670135498
    9. '           ' → logprob: -13.87537670135498
    10. '                  ' → logprob: -13.87537670135498

Token 2451: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0001239196863025427
    2. ' new' → logprob: -9.000123977661133
    3. '                   ' → logprob: -15.000123977661133
    4. '
' → logprob: -16.000123977661133
    5. '_new' → logprob: -16.750123977661133
    6. 'New' → logprob: -17.625123977661133
    7. '   ' → logprob: -17.625123977661133
    8. '                       ' → logprob: -18.125123977661133
    9. '               ' → logprob: -18.125123977661133
    10. '           ' → logprob: -18.625123977661133

Token 2452: '_c' (ID: 1303)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.581380307674408
    2. '_c' → logprob: -1.2063803672790527
    3. 'c' → logprob: -1.9563803672790527
    4. 'C' → logprob: -8.706379890441895
    5. '
' → logprob: -11.081379890441895
    6. '50' → logprob: -12.081379890441895
    7. 'exp' → logprob: -12.206379890441895
    8. '505' → logprob: -12.456379890441895
    9. '_' → logprob: -12.581379890441895
    10. '`' → logprob: -12.956379890441895

Token 2453: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -7.815280696377158e-05
    2. '5' → logprob: -10.125078201293945
    3. '50' → logprob: -10.375078201293945
    4. '505' → logprob: -12.750078201293945
    5. '_' → logprob: -13.750078201293945
    6. '   ' → logprob: -13.875078201293945
    7. ' ' → logprob: -15.625078201293945
    8. '
' → logprob: -15.750078201293945
    9. ',' → logprob: -16.125078201293945
    10. '300' → logprob: -16.500078201293945

Token 2454: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007524513057433069
    2. '                   ' → logprob: -7.2507524490356445
    3. ' ,' → logprob: -10.500752449035645
    4. '               ' → logprob: -12.375752449035645
    5. '           ' → logprob: -12.875752449035645
    6. '```' → logprob: -13.000752449035645
    7. '                    ' → logprob: -13.875752449035645
    8. ',
' → logprob: -14.000752449035645
    9. '                       ' → logprob: -14.000752449035645
    10. '                  ' → logprob: -14.250752449035645

Token 2455: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0019287518225610256
    2. ' new' → logprob: -6.251928806304932
    3. '                   ' → logprob: -16.251928329467773
    4. '                       ' → logprob: -18.501928329467773
    5. '               ' → logprob: -18.626928329467773
    6. '                    ' → logprob: -18.751928329467773
    7. '           ' → logprob: -19.126928329467773
    8. '                ' → logprob: -19.626928329467773
    9. '                               ' → logprob: -19.626928329467773
    10. '                           ' → logprob: -19.751928329467773

Token 2456: '_exp' (ID: 30306)
  Prédit: 'expense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expense' → logprob: -0.0021131434477865696
    2. 'xp' → logprob: -6.377113342285156
    3. ' expense' → logprob: -8.627113342285156
    4. '_exp' → logprob: -9.252113342285156
    5. 'p' → logprob: -10.127113342285156
    6. 'exp' → logprob: -10.377113342285156
    7. '500' → logprob: -11.252113342285156
    8. '_' → logprob: -11.752113342285156
    9. ')' → logprob: -12.002113342285156
    10. 'x' → logprob: -12.127113342285156

Token 2457: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.021363036707043648
    2. 'p' → logprob: -4.021363258361816
    3. '               ' → logprob: -7.521363258361816
    4. '
' → logprob: -7.521363258361816
    5. '   ' → logprob: -8.021363258361816
    6. '```' → logprob: -8.146363258361816
    7. '           ' → logprob: -8.646363258361816
    8. '       ' → logprob: -8.771363258361816
    9. '                   ' → logprob: -9.271363258361816
    10. '                ' → logprob: -9.396363258361816

Token 2458: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01949586719274521
    2. '                   ' → logprob: -4.019495964050293
    3. '               ' → logprob: -7.894495964050293
    4. ')
' → logprob: -8.144495964050293
    5. '                       ' → logprob: -8.644495964050293
    6. '           ' → logprob: -8.769495964050293
    7. '```' → logprob: -8.769495964050293
    8. '       ' → logprob: -9.269495964050293
    9. ',' → logprob: -10.144495964050293
    10. '<|end|>' → logprob: -11.144495964050293

Token 2459: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037440650165081024
    2. '
' → logprob: -4.287440776824951
    3. '   ' → logprob: -4.287440776824951
    4. '        
' → logprob: -5.537440776824951
    5. '```' → logprob: -5.912440776824951
    6. '<|end|>' → logprob: -7.162440776824951
    7. '    
' → logprob: -7.412440776824951
    8. '           ' → logprob: -8.037440299987793
    9. 'def' → logprob: -8.912440299987793
    10. ')
' → logprob: -9.412440299987793

Token 2460: ' current' (ID: 2208)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5384339094161987
    2. '           ' → logprob: -1.1634339094161987
    3. 'current' (adapté à ' current') → logprob: -2.2884340286254883
    4. '
' → logprob: -7.038434028625488
    5. ' current' → logprob: -7.288434028625488
    6. '   ' → logprob: -7.288434028625488
    7. 'return' → logprob: -9.538434028625488
    8. 'def' → logprob: -10.163434028625488
    9. '_current' → logprob: -10.288434028625488
    10. 'import' → logprob: -10.788434028625488

Token 2461: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -1.2664456789934775e-06
    2. 'States' → logprob: -14.375000953674316
    3. 'states' → logprob: -14.625000953674316
    4. '           ' → logprob: -16.500001907348633
    5. '_state' → logprob: -16.750001907348633
    6. '_' → logprob: -17.750001907348633
    7. '_co' → logprob: -18.875001907348633
    8. '_s' → logprob: -19.000001907348633
    9. '_tokens' → logprob: -19.000001907348633
    10. '```' → logprob: -19.250001907348633

Token 2462: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022524237632751
    2. ' =' → logprob: -1.91022527217865
    3. '       ' → logprob: -15.035224914550781
    4. '           ' → logprob: -15.535224914550781
    5. ',' → logprob: -15.660224914550781
    6. '   ' → logprob: -16.03522491455078
    7. '        ' → logprob: -16.41022491455078
    8. '={}' → logprob: -16.66022491455078
    9. '＝' → logprob: -16.78522491455078
    10. '         ' → logprob: -17.28522491455078

Token 2463: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.010109364986419678
    2. 'current' → logprob: -4.7601094245910645
    3. ' next' → logprob: -6.5101094245910645
    4. ' current' → logprob: -12.260108947753906
    5. '{}' → logprob: -15.135108947753906
    6. 'dict' → logprob: -15.635108947753906
    7. '(next' → logprob: -16.635108947753906
    8. '{' → logprob: -17.260108947753906
    9. 'new' → logprob: -17.385108947753906
    10. '.next' → logprob: -17.760108947753906

Token 2464: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.00012558852904476225
    2. '_' → logprob: -9.250125885009766
    3. 'States' → logprob: -11.625125885009766
    4. 'states' → logprob: -12.250125885009766
    5. '_
' → logprob: -12.375125885009766
    6. '_state' → logprob: -12.625125885009766
    7. '```' → logprob: -13.000125885009766
    8. 'underscore' → logprob: -14.625125885009766
    9. '_steps' → logprob: -14.875125885009766
    10. 's' → logprob: -14.875125885009766

Token 2465: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09633278846740723
    2. '
' → logprob: -2.9713327884674072
    3. '<|end|>' → logprob: -3.9713327884674072
    4. '```' → logprob: -4.471332550048828
    5. 'return' → logprob: -5.596332550048828
    6. '   ' → logprob: -5.971332550048828
    7. '        
' → logprob: -6.721332550048828
    8. 'def' → logprob: -7.096332550048828
    9. '<|end|>' → logprob: -7.846332550048828
    10. '           ' → logprob: -8.221332550048828

Token 2466: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3296448290348053
    2. '   ' → logprob: -1.704644799232483
    3. 'def' → logprob: -2.3296449184417725
    4. '
' → logprob: -7.079644680023193
    5. 'return' → logprob: -7.704644680023193
    6. '```' → logprob: -8.329645156860352
    7. ' def' → logprob: -10.204645156860352
    8. '           ' → logprob: -10.454645156860352
    9. '<|end|>' → logprob: -10.954645156860352
    10. '    
' → logprob: -11.704645156860352

Token 2467: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.2977665662765503
    2. 'max' → logprob: -1.2977665662765503
    3. '       ' → logprob: -1.6727665662765503
    4. '```' → logprob: -1.7977665662765503
    5. 'best' → logprob: -3.29776668548584
    6. 'result' → logprob: -3.42276668548584
    7. 'def' → logprob: -4.29776668548584
    8. '
' → logprob: -5.42276668548584
    9. '``' → logprob: -5.54776668548584
    10. '   ' → logprob: -5.67276668548584

Token 2468: ' answer' (ID: 6052)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.014786222018301487
    2. 'max' → logprob: -4.264786243438721
    3. '       ' → logprob: -8.514785766601562
    4. 'return' → logprob: -8.514785766601562
    5. 'result' → logprob: -9.389785766601562
    6. 'min' → logprob: -9.389785766601562
    7. '#' → logprob: -10.014785766601562
    8. 'answer' → logprob: -13.514785766601562
    9. 'results' → logprob: -13.639785766601562
    10. ' best' → logprob: -13.764785766601562

Token 2469: ':' (ID: 25)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.7017151117324829
    2. '       ' → logprob: -1.326715111732483
    3. 'max' → logprob: -1.451715111732483
    4. 'return' → logprob: -6.076714992523193
    5. 'min' → logprob: -6.951714992523193
    6. '
' → logprob: -7.826714992523193
    7. '```' → logprob: -8.076715469360352
    8. 'result' → logprob: -8.326715469360352
    9. '#' → logprob: -8.951715469360352
    10. '   ' → logprob: -9.451715469360352

Token 2470: ' find' (ID: 1646)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.3899801969528198
    2. 'max' → logprob: -1.1399801969528198
    3. 'return' → logprob: -6.264980316162109
    4. '       ' → logprob: -7.014980316162109
    5. 'result' → logprob: -8.63998031616211
    6. ' max' → logprob: -9.88998031616211
    7. ' best' → logprob: -10.38998031616211
    8. 'ans' → logprob: -11.26498031616211
    9. 'answer' → logprob: -11.51498031616211
    10. 'res' → logprob: -11.76498031616211

Token 2471: ' maximum' (ID: 10562)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0008747781976126134
    2. 'best' → logprob: -7.750874996185303
    3. ' max' → logprob: -8.000874519348145
    4. 'key' → logprob: -10.250874519348145
    5. '(max' → logprob: -10.375874519348145
    6. '   ' → logprob: -10.625874519348145
    7. '```' → logprob: -11.875874519348145
    8. 'min' → logprob: -12.500874519348145
    9. 'None' → logprob: -13.625874519348145
    10. 'result' → logprob: -13.625874519348145

Token 2472: ' c' (ID: 274)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3461947739124298
    2. '_c' → logprob: -1.9711947441101074
    3. '500' → logprob: -3.8461947441101074
    4. '_' → logprob: -4.221194744110107
    5. '_key' → logprob: -4.221194744110107
    6. 'key' → logprob: -4.221194744110107
    7. '_co' → logprob: -4.346194744110107
    8. 'coins' → logprob: -4.596194744110107
    9. '_max' → logprob: -4.721194744110107
    10. '       ' → logprob: -5.096194744110107

Token 2473: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.009808271192014217
    2. '_' → logprob: -4.63480806350708
    3. 'max' → logprob: -10.759808540344238
    4. '5' → logprob: -11.509808540344238
    5. '_max' → logprob: -11.634808540344238
    6. '   ' → logprob: -12.634808540344238
    7. '50' → logprob: -12.884808540344238
    8. '
' → logprob: -14.384808540344238
    9. 'five' → logprob: -14.634808540344238
    10. 'for' → logprob: -14.759808540344238

Token 2474: ' coins' (ID: 28969)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04241025447845459
    2. 'max' → logprob: -4.542410373687744
    3. 'return' → logprob: -4.542410373687744
    4. '
' → logprob: -4.667410373687744
    5. ',' → logprob: -5.917410373687744
    6. 'result' → logprob: -6.417410373687744
    7. '```' → logprob: -6.417410373687744
    8. 'keys' → logprob: -6.917410373687744
    9. '   ' → logprob: -7.292410373687744
    10. 'best' → logprob: -7.542410373687744

Token 2475: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07776998728513718
    2. '
' → logprob: -3.7027699947357178
    3. 'max' → logprob: -4.077769756317139
    4. 'return' → logprob: -4.327769756317139
    5. '```' → logprob: -4.702769756317139
    6. ' =' → logprob: -6.077769756317139
    7. '   ' → logprob: -6.577769756317139
    8. ',' → logprob: -6.577769756317139
    9. '=' → logprob: -6.827769756317139
    10. '`' → logprob: -7.077769756317139

Token 2476: ' minimum' (ID: 11085)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7671013474464417
    2. 'minimum' → logprob: -1.0171012878417969
    3. 'minimal' → logprob: -1.8921012878417969
    4. ' minimal' → logprob: -4.642101287841797
    5. '
' → logprob: -5.392101287841797
    6. ' minimum' → logprob: -5.767101287841797
    7. 'lowest' → logprob: -6.267101287841797
    8. ' min' → logprob: -6.392101287841797
    9. 'among' → logprob: -6.892101287841797
    10. ' among' → logprob: -7.392101287841797

Token 2477: ' expense' (ID: 29361)
  Prédit: 'expense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expense' → logprob: -0.0006078407750464976
    2. 'exp' → logprob: -8.00060749053955
    3. '_exp' → logprob: -8.75060749053955
    4. '```' → logprob: -9.37560749053955
    5. ' expense' → logprob: -10.87560749053955
    6. '``' → logprob: -12.50060749053955
    7. '
' → logprob: -12.50060749053955
    8. 'expenses' → logprob: -13.37560749053955
    9. '(exp' → logprob: -14.62560749053955
    10. '`' → logprob: -15.12560749053955

Token 2478: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07451938837766647
    2. 'return' → logprob: -2.949519395828247
    3. ',' → logprob: -5.074519157409668
    4. 'result' → logprob: -5.199519157409668
    5. '
' → logprob: -5.449519157409668
    6. '```' → logprob: -6.324519157409668
    7. 'keys' → logprob: -8.324519157409668
    8. 'best' → logprob: -8.574519157409668
    9. '   ' → logprob: -8.949519157409668
    10. '`' → logprob: -9.324519157409668

Token 2479: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035065680742263794
    2. '
' → logprob: -3.5350656509399414
    3. 'return' → logprob: -5.785065650939941
    4. '```' → logprob: -6.535065650939941
    5. '   ' → logprob: -7.910065650939941
    6. '``' → logprob: -9.160065650939941
    7. '        
' → logprob: -9.785065650939941
    8. 'for' → logprob: -10.160065650939941
    9. '`
' → logprob: -10.410065650939941
    10. ',' → logprob: -10.660065650939941

Token 2480: ' max' (ID: 2999)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.8094639182090759
    2. 'max' (adapté à ' max') → logprob: -1.3094639778137207
    3. '       ' → logprob: -2.0594639778137207
    4. 'result' → logprob: -2.6844639778137207
    5. 'answer' → logprob: -2.9344639778137207
    6. 'return' → logprob: -4.184463977813721
    7. '```' → logprob: -4.559463977813721
    8. 'ans' → logprob: -5.059463977813721
    9. '``' → logprob: -6.809463977813721
    10. '
' → logprob: -7.059463977813721

Token 2481: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.020745666697621346
    2. '_' → logprob: -3.8957457542419434
    3. '500' → logprob: -9.145745277404785
    4. '_key' → logprob: -10.770745277404785
    5. '_value' → logprob: -11.270745277404785
    6. '_val' → logprob: -11.645745277404785
    7. '_count' → logprob: -11.645745277404785
    8. '_keys' → logprob: -11.770745277404785
    9. '(' → logprob: -11.895745277404785
    10. 'c' → logprob: -12.020745277404785

Token 2482: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.0619816891849041
    2. '_' → logprob: -2.811981678009033
    3. 'o' → logprob: -12.061982154846191
    4. 'ount' → logprob: -12.936982154846191
    5. '_c' → logprob: -13.311982154846191
    6. '_o' → logprob: -13.561982154846191
    7. '
' → logprob: -14.311982154846191
    8. '5' → logprob: -14.936982154846191
    9. '=' → logprob: -15.186982154846191
    10. '50' → logprob: -15.561982154846191

Token 2483: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3984726071357727
    2. ' =' → logprob: -1.148472547531128
    3. ',' → logprob: -4.523472785949707
    4. '=max' → logprob: -7.398472785949707
    5. ')' → logprob: -10.148472785949707
    6. '=
' → logprob: -12.273472785949707
    7. '_' → logprob: -12.523472785949707
    8. ',max' → logprob: -12.648472785949707
    9. '```' → logprob: -12.648472785949707
    10. '=None' → logprob: -13.148472785949707

Token 2484: ' -' (ID: 533)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.49230527877807617
    2. '-' → logprob: -0.9923052787780762
    3. '0' → logprob: -4.742305278778076
    4. '-max' → logprob: -4.742305278778076
    5. ' max' → logprob: -7.617305278778076
    6. ' -' → logprob: -9.492305755615234
    7. '-m' → logprob: -10.117305755615234
    8. ' ' → logprob: -12.242305755615234
    9. '[max' → logprob: -13.367305755615234
    10. '=max' → logprob: -13.492305755615234

Token 2485: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004060050705447793
    2. 'float' → logprob: -8.125406265258789
    3. '(' → logprob: -9.625406265258789
    4. 'self' → logprob: -10.375406265258789
    5. '
' → logprob: -12.500406265258789
    6. '```' → logprob: -13.250406265258789
    7. 'inf' → logprob: -13.500406265258789
    8. 'int' → logprob: -13.750406265258789
    9. '   ' → logprob: -13.750406265258789
    10. '2' → logprob: -14.750406265258789

Token 2486: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8692260384559631
    2. 'for' → logprob: -1.1192259788513184
    3. 'min' → logprob: -1.8692259788513184
    4. '
' → logprob: -2.6192259788513184
    5. ' for' → logprob: -4.244225978851318
    6. '```' → logprob: -5.369225978851318
    7. ',min' → logprob: -5.994225978851318
    8. 'result' → logprob: -6.244225978851318
    9. ',
' → logprob: -6.869225978851318
    10. ' min' → logprob: -7.119225978851318

Token 2487: '       ' (ID: 309)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.11760131269693375
    2. ',' → logprob: -2.3676013946533203
    3. ',min' → logprob: -4.24260139465332
    4. 'for' → logprob: -6.61760139465332
    5. '
' → logprob: -7.61760139465332
    6. '```' → logprob: -7.86760139465332
    7. '       ' → logprob: -8.11760139465332
    8. 'best' → logprob: -9.11760139465332
    9. ' min' → logprob: -9.36760139465332
    10. '_min' → logprob: -9.74260139465332

Token 2488: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -1.6405310816480778e-05
    2. 'ans' → logprob: -11.750016212463379
    3. 'best' → logprob: -12.000016212463379
    4. 'answer' → logprob: -13.750016212463379
    5. ' min' → logprob: -14.000016212463379
    6. 'max' → logprob: -15.750016212463379
    7. 'result' → logprob: -16.750017166137695
    8. '```' → logprob: -17.375017166137695
    9. '
' → logprob: -17.500017166137695
    10. 'res' → logprob: -18.625017166137695

Token 2489: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -4.723352049040841e-06
    2. 'expense' → logprob: -13.250004768371582
    3. '_cost' → logprob: -13.375004768371582
    4. '_' → logprob: -14.750004768371582
    5. '_ex' → logprob: -15.375004768371582
    6. 'exp' → logprob: -15.375004768371582
    7. '```' → logprob: -15.625004768371582
    8. '
' → logprob: -15.875004768371582
    9. '\' → logprob: -16.875003814697266
    10. ' _' → logprob: -17.250003814697266

Token 2490: 'ense' (ID: 1603)
  Prédit: 'expense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expense' → logprob: -0.23382095992565155
    2. 'ense' → logprob: -1.983820915222168
    3. 'exp' → logprob: -3.233820915222168
    4. '_exp' → logprob: -3.608820915222168
    5. 'p' → logprob: -6.108820915222168
    6. ' expense' → logprob: -7.108820915222168
    7. 'xp' → logprob: -7.608820915222168
    8. 'Expense' → logprob: -8.608820915222168
    9. 'apse' → logprob: -8.733820915222168
    10. '=' → logprob: -8.858820915222168

Token 2491: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02977120317518711
    2. ' =' → logprob: -3.529771089553833
    3. '=float' → logprob: -11.529770851135254
    4. '=None' → logprob: -12.154770851135254
    5. '```' → logprob: -12.529770851135254
    6. ',' → logprob: -13.779770851135254
    7. '=int' → logprob: -15.529770851135254
    8. '   ' → logprob: -15.779770851135254
    9. '=
' → logprob: -16.02977180480957
    10. ' ' → logprob: -16.27977180480957

Token 2492: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.016101941466331482
    2. '1' → logprob: -4.141101837158203
    3. ' self' → logprob: -10.516101837158203
    4. 'float' → logprob: -11.141101837158203
    5. 'None' → logprob: -11.516101837158203
    6. '0' → logprob: -12.391101837158203
    7. ' ' → logprob: -12.516101837158203
    8. '   ' → logprob: -13.266101837158203
    9. '999' → logprob: -13.266101837158203
    10. '(' → logprob: -13.766101837158203

Token 2493: '.IN' (ID: 20931)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.633654773235321
    2. '.IN' → logprob: -1.2586548328399658
    3. 'max' → logprob: -2.383654832839966
    4. '.MAX' → logprob: -2.508654832839966
    5. 'inf' → logprob: -6.008654594421387
    6. 'n' → logprob: -6.383654594421387
    7. 'IN' → logprob: -6.633654594421387
    8. '_INF' → logprob: -6.758654594421387
    9. '.max' → logprob: -6.883654594421387
    10. 'size' → logprob: -7.383654594421387

Token 2494: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.016114838421344757
    2. 'T' → logprob: -4.141114711761475
    3. 'f' → logprob: -10.391115188598633
    4. 'FT' → logprob: -11.016115188598633
    5. 'FS' → logprob: -11.891115188598633
    6. 'TF' → logprob: -12.266115188598633
    7. 'Fs' → logprob: -12.266115188598633
    8. 't' → logprob: -12.391115188598633
    9. '   ' → logprob: -13.266115188598633
    10. 'FO' → logprob: -13.766115188598633

Token 2495: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5529237389564514
    2. '
' → logprob: -0.9279237389564514
    3. ' for' → logprob: -3.6779236793518066
    4. '       ' → logprob: -5.927923679351807
    5. '```' → logprob: -7.677923679351807
    6. '=' → logprob: -8.302924156188965
    7. ' =' → logprob: -8.927924156188965
    8. 'result' → logprob: -9.177924156188965
    9. '<|end|>' → logprob: -9.177924156188965
    10. ',' → logprob: -9.677924156188965

Token 2496: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02977745607495308
    2. '       ' → logprob: -3.6547775268554688
    3. ' for' → logprob: -6.154777526855469
    4. '
' → logprob: -6.904777526855469
    5. '```' → logprob: -8.279777526855469
    6. '``' → logprob: -10.529777526855469
    7. 'result' → logprob: -10.779777526855469
    8. '   ' → logprob: -11.154777526855469
    9. 'answer' → logprob: -11.279777526855469
    10. '`' → logprob: -12.404777526855469

Token 2497: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00020783171930816025
    2. '       ' → logprob: -8.500207901000977
    3. ' for' → logprob: -13.125207901000977
    4. '```' → logprob: -13.125207901000977
    5. '
' → logprob: -15.375207901000977
    6. '   ' → logprob: -16.875207901000977
    7. '``' → logprob: -17.125207901000977
    8. '           ' → logprob: -18.750207901000977
    9. 'result' → logprob: -19.500207901000977
    10. 'answer' → logprob: -19.625207901000977

Token 2498: ' (' (ID: 350)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.10069345682859421
    2. 'coin' → logprob: -2.350693464279175
    3. '_,' → logprob: -8.350693702697754
    4. ' coins' → logprob: -8.850693702697754
    5. 'state' → logprob: -9.850693702697754
    6. 'key' → logprob: -11.100693702697754
    7. 'new' → logprob: -11.600693702697754
    8. '   ' → logprob: -11.850693702697754
    9. 'co' → logprob: -11.975693702697754
    10. 'c' → logprob: -12.225693702697754

Token 2499: 'c' (ID: 66)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.2582257390022278
    2. 'c' → logprob: -1.508225679397583
    3. 'coin' → logprob: -5.133225917816162
    4. '_,' → logprob: -8.633225440979004
    5. 'state' → logprob: -9.258225440979004
    6. '   ' → logprob: -10.133225440979004
    7. ' coins' → logprob: -10.383225440979004
    8. 'new' → logprob: -11.258225440979004
    9. ',c' → logprob: -12.883225440979004
    10. '(c' → logprob: -12.883225440979004

Token 2500: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.008849973790347576
    2. '_' → logprob: -5.00885009765625
    3. ',' → logprob: -7.38385009765625
    4. 'coins' → logprob: -7.75885009765625
    5. '_c' → logprob: -7.88385009765625
    6. '5' → logprob: -7.88385009765625
    7. '_i' → logprob: -9.25885009765625
    8. '_,' → logprob: -10.00885009765625
    9. 'c' → logprob: -10.25885009765625
    10. 'i' → logprob: -11.00885009765625

Token 2501: 'coins' (ID: 48264)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07404672354459763
    2. ',c' → logprob: -2.9490466117858887
    3. '_,' → logprob: -4.824046611785889
    4. ',)' → logprob: -5.949046611785889
    5. ',i' → logprob: -6.074046611785889
    6. '),' → logprob: -6.949046611785889
    7. 'in' → logprob: -7.074046611785889
    8. ')' → logprob: -7.324046611785889
    9. ',key' → logprob: -7.824046611785889
    10. '           ' → logprob: -8.074047088623047

Token 2502: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0469287745654583
    2. ',c' → logprob: -3.296928882598877
    3. 'in' → logprob: -5.671928882598877
    4. '_,' → logprob: -6.296928882598877
    5. ',in' → logprob: -7.171928882598877
    6. ',count' → logprob: -7.546928882598877
    7. ',user' → logprob: -7.796928882598877
    8. ',)' → logprob: -8.046928405761719
    9. ',value' → logprob: -8.171928405761719
    10. ',key' → logprob: -8.796928405761719

Token 2503: ' exp' (ID: 2794)
  Prédit: 'expense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expense' → logprob: -0.01110758911818266
    2. ' expense' → logprob: -4.511107444763184
    3. 'exp' → logprob: -9.761107444763184
    4. 'expenses' → logprob: -14.386107444763184
    5. '   ' → logprob: -14.636107444763184
    6. 'e' → logprob: -15.261107444763184
    7. '    ' → logprob: -16.0111083984375
    8. ' ' → logprob: -16.0111083984375
    9. 'ex' → logprob: -16.2611083984375
    10. 'min' → logprob: -16.3861083984375

Token 2504: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4943610727787018
    2. 'ense' → logprob: -0.9943610429763794
    3. ')' → logprob: -4.24436092376709
    4. '):
' → logprob: -7.11936092376709
    5. '),' → logprob: -7.11936092376709
    6. 'enses' → logprob: -7.24436092376709
    7. 'ens' → logprob: -8.24436092376709
    8. 'e' → logprob: -8.36936092376709
    9. 'anse' → logprob: -8.61936092376709
    10. ' ,' → logprob: -8.74436092376709

Token 2505: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3994477689266205
    2. ',' → logprob: -1.1494477987289429
    3. ' in' → logprob: -4.524447917938232
    4. ',in' → logprob: -7.149447917938232
    5. '           ' → logprob: -8.274447441101074
    6. '```' → logprob: -8.399447441101074
    7. ',c' → logprob: -9.149447441101074
    8. '       ' → logprob: -9.274447441101074
    9. ' ,' → logprob: -10.024447441101074
    10. '_,' → logprob: -10.399447441101074

Token 2506: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -7.505351095460355e-05
    2. ' current' → logprob: -9.500075340270996
    3. '(current' → logprob: -16.87507438659668
    4. 'values' → logprob: -16.87507438659668
    5. 'state' → logprob: -17.87507438659668
    6. 'self' → logprob: -18.62507438659668
    7. '   ' → logprob: -19.00007438659668
    8. '.current' → logprob: -19.25007438659668
    9. 'c' → logprob: -20.12507438659668
    10. '[current' → logprob: -20.37507438659668

Token 2507: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.0515548437833786
    2. '_items' → logprob: -3.8015549182891846
    3. '_values' → logprob: -4.0515546798706055
    4. '.items' → logprob: -5.9265546798706055
    5. 'states' → logprob: -5.9265546798706055
    6. 'items' → logprob: -6.8015546798706055
    7. '.values' → logprob: -6.8015546798706055
    8. '_co' → logprob: -6.9265546798706055
    9. 'coins' → logprob: -7.5515546798706055
    10. 'values' → logprob: -7.9265546798706055

Token 2508: '.values' (ID: 20422)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49118635058403015
    2. '.values' → logprob: -1.8661863803863525
    3. 'in' → logprob: -2.3661863803863525
    4. ' in' → logprob: -2.4911863803863525
    5. 'values' → logprob: -3.3661863803863525
    6. '       ' → logprob: -4.616186141967773
    7. '           ' → logprob: -5.741186141967773
    8. '_values' → logprob: -5.991186141967773
    9. 'items' → logprob: -6.241186141967773
    10. '.items' → logprob: -6.616186141967773

Token 2509: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.010806327685713768
    2. ':
' → logprob: -4.885806560516357
    3. '():' → logprob: -6.635806560516357
    4. ':' → logprob: -7.635806560516357
    5. '()' → logprob: -7.635806560516357
    6. '):
' → logprob: -8.2608060836792
    7. '       ' → logprob: -8.3858060836792
    8. '()):
' → logprob: -8.6358060836792
    9. ',' → logprob: -9.3858060836792
    10. '(),' → logprob: -9.8858060836792

Token 2510: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008824035176075995
    2. ':
' → logprob: -7.375882625579834
    3. 'if' → logprob: -9.375882148742676
    4. '```' → logprob: -9.625882148742676
    5. ' if' → logprob: -10.000882148742676
    6. ':' → logprob: -10.875882148742676
    7. ',' → logprob: -11.000882148742676
    8. '               ' → logprob: -11.875882148742676
    9. '       ' → logprob: -12.250882148742676
    10. '   ' → logprob: -12.875882148742676

Token 2511: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5898892283439636
    2. '           ' → logprob: -0.8398892283439636
    3. ' if' → logprob: -4.839889049530029
    4. '               ' → logprob: -5.339889049530029
    5. '       ' → logprob: -6.839889049530029
    6. '```' → logprob: -9.964889526367188
    7. '   ' → logprob: -11.089889526367188
    8. ':
' → logprob: -12.339889526367188
    9. '
' → logprob: -12.964889526367188
    10. '                   ' → logprob: -13.214889526367188

Token 2512: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001037214300595224
    2. ' c' → logprob: -6.876037120819092
    3. '(c' → logprob: -13.12603759765625
    4. '   ' → logprob: -13.87603759765625
    5. '           ' → logprob: -14.12603759765625
    6. 'max' → logprob: -15.50103759765625
    7. ')c' → logprob: -16.00103759765625
    8. ' (' → logprob: -16.50103759765625
    9. '	c' → logprob: -16.50103759765625
    10. '    ' → logprob: -17.00103759765625

Token 2513: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.002820685738697648
    2. '>' → logprob: -6.1278204917907715
    3. 'c' → logprob: -8.12782096862793
    4. 'o' → logprob: -9.12782096862793
    5. '   ' → logprob: -9.87782096862793
    6. '==' → logprob: -10.25282096862793
    7. ' >' → logprob: -10.75282096862793
    8. '300' → logprob: -10.87782096862793
    9. '>=' → logprob: -10.87782096862793
    10. ' ' → logprob: -11.50282096862793

Token 2514: 'coins' (ID: 48264)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.23788227140903473
    2. ' >' → logprob: -1.6128822565078735
    3. 'coins' → logprob: -4.487882137298584
    4. '           ' → logprob: -7.237882137298584
    5. '               ' → logprob: -9.112882614135742
    6. '>=' → logprob: -9.237882614135742
    7. '   ' → logprob: -9.862882614135742
    8. '       ' → logprob: -10.237882614135742
    9. ' >=' → logprob: -10.987882614135742
    10. '500' → logprob: -11.112882614135742

Token 2515: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.008736654184758663
    2. ' >' → logprob: -4.758736610412598
    3. '<' → logprob: -9.508736610412598
    4. '==' → logprob: -11.508736610412598
    5. '>
' → logprob: -11.633736610412598
    6. '>=' → logprob: -11.758736610412598
    7. ' <' → logprob: -12.008736610412598
    8. '           ' → logprob: -12.133736610412598
    9. '```' → logprob: -12.758736610412598
    10. ' ==' → logprob: -13.508736610412598

Token 2516: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.7120533811976202e-05
    2. ' max' → logprob: -11.000017166137695
    3. '           ' → logprob: -16.125017166137695
    4. '=' → logprob: -16.375017166137695
    5. '=max' → logprob: -16.500017166137695
    6. '       ' → logprob: -17.375017166137695
    7. '
' → logprob: -17.500017166137695
    8. '   ' → logprob: -18.125017166137695
    9. '_max' → logprob: -19.125017166137695
    10. 'c' → logprob: -19.250017166137695

Token 2517: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00036953974631614983
    2. '500' → logprob: -8.50036907196045
    3. '_' → logprob: -9.25036907196045
    4. '           ' → logprob: -10.00036907196045
    5. '       ' → logprob: -11.50036907196045
    6. '               ' → logprob: -11.62536907196045
    7. 'c' → logprob: -13.25036907196045
    8. '   ' → logprob: -13.50036907196045
    9. '                   ' → logprob: -14.62536907196045
    10. '         ' → logprob: -15.00036907196045

Token 2518: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -6.182190554682165e-05
    2. '_' → logprob: -10.625061988830566
    3. '5' → logprob: -10.750061988830566
    4. '50' → logprob: -11.375061988830566
    5. '
' → logprob: -13.625061988830566
    6. '   ' → logprob: -14.375061988830566
    7. '0' → logprob: -14.500061988830566
    8. '```' → logprob: -14.875061988830566
    9. '{' → logprob: -15.375061988830566
    10. ' ' → logprob: -15.500061988830566

Token 2519: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.051072172820568085
    2. 'or' → logprob: -3.426072120666504
    3. ' and' → logprob: -4.676072120666504
    4. 'and' → logprob: -5.051072120666504
    5. '               ' → logprob: -6.551072120666504
    6. '           ' → logprob: -9.176072120666504
    7. '              ' → logprob: -11.426072120666504
    8. '            ' → logprob: -12.301072120666504
    9. '```' → logprob: -12.301072120666504
    10. '                   ' → logprob: -13.801072120666504

Token 2520: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.001020663301460445
    2. '(' → logprob: -7.376020431518555
    3. ' (' → logprob: -7.876020431518555
    4. '(
' → logprob: -12.001020431518555
    5. '   ' → logprob: -12.626020431518555
    6. '(co' → logprob: -14.001020431518555
    7. '  ' → logprob: -14.251020431518555
    8. ' ' → logprob: -14.501020431518555
    9. '((' → logprob: -14.751020431518555
    10. '(cost' → logprob: -15.001020431518555

Token 2521: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0012704703258350492
    2. '(c' → logprob: -6.751270294189453
    3. ' c' → logprob: -9.876270294189453
    4. '   ' → logprob: -11.126270294189453
    5. 'coin' → logprob: -11.251270294189453
    6. '(' → logprob: -12.626270294189453
    7. '           ' → logprob: -12.876270294189453
    8. '(
' → logprob: -12.876270294189453
    9. ')c' → logprob: -12.876270294189453
    10. '
' → logprob: -13.501270294189453

Token 2522: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.0647946298122406
    2. 'coins' → logprob: -2.9397945404052734
    3. 'c' → logprob: -4.689794540405273
    4. '_c' → logprob: -7.564794540405273
    5. ' coins' → logprob: -10.814794540405273
    6. '=c' → logprob: -11.189794540405273
    7. '(c' → logprob: -11.189794540405273
    8. '=' → logprob: -11.314794540405273
    9. 'coin' → logprob: -11.814794540405273
    10. ' c' → logprob: -11.939794540405273

Token 2523: 'coins' (ID: 48264)
  Prédit: 'coins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.10866633802652359
    2. '==' → logprob: -2.35866641998291
    3. ' ==' → logprob: -4.85866641998291
    4. '```' → logprob: -8.23366641998291
    5. '!=' → logprob: -9.10866641998291
    6. '   ' → logprob: -9.23366641998291
    7. 'c' → logprob: -9.85866641998291
    8. ' !=' → logprob: -10.98366641998291
    9. ' ' → logprob: -11.10866641998291
    10. '=' → logprob: -11.10866641998291

Token 2524: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.348591148853302
    2. ' ==' → logprob: -1.2235910892486572
    3. '=' → logprob: -10.098590850830078
    4. ',' → logprob: -10.973590850830078
    5. ')' → logprob: -11.598590850830078
    6. '           ' → logprob: -11.598590850830078
    7. '[' → logprob: -11.723590850830078
    8. 'c' → logprob: -11.848590850830078
    9. ')==' → logprob: -11.973590850830078
    10. '==
' → logprob: -11.973590850830078

Token 2525: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -8.53050296427682e-05
    2. ' max' → logprob: -10.12508487701416
    3. 'c' → logprob: -10.62508487701416
    4. 'min' → logprob: -10.87508487701416
    5. '
' → logprob: -14.12508487701416
    6. '           ' → logprob: -14.50008487701416
    7. '       ' → logprob: -14.87508487701416
    8. '   ' → logprob: -16.000085830688477
    9. 'exp' → logprob: -16.375085830688477
    10. '               ' → logprob: -16.750085830688477

Token 2526: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.515866219997406
    2. 'exp' → logprob: -1.0158662796020508
    3. 'min' → logprob: -4.015866279602051
    4. '_exp' → logprob: -4.265866279602051
    5. 'c' → logprob: -5.640866279602051
    6. 'coins' → logprob: -5.890866279602051
    7. '
' → logprob: -7.515866279602051
    8. '           ' → logprob: -7.640866279602051
    9. '       ' → logprob: -8.01586627960205
    10. '   ' → logprob: -8.26586627960205

Token 2527: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.07842830568552017
    2. 'coins' → logprob: -3.078428268432617
    3. '_c' → logprob: -3.578428268432617
    4. '_' → logprob: -6.703428268432617
    5. '50' → logprob: -10.328428268432617
    6. '   ' → logprob: -10.453428268432617
    7. '505' → logprob: -10.578428268432617
    8. ' coins' → logprob: -10.828428268432617
    9. '0' → logprob: -10.828428268432617
    10. '_o' → logprob: -10.953428268432617

Token 2528: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5760955810546875
    2. 'and' → logprob: -0.8260955810546875
    3. '           ' → logprob: -9.076095581054688
    4. '            ' → logprob: -11.076095581054688
    5. '               ' → logprob: -11.701095581054688
    6. '          ' → logprob: -12.326095581054688
    7. '```' → logprob: -12.576095581054688
    8. '        ' → logprob: -12.951095581054688
    9. '                ' → logprob: -13.701095581054688
    10. '             ' → logprob: -13.826095581054688

Token 2529: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.4741137623786926
    2. ' exp' → logprob: -0.9741137623786926
    3. '(exp' → logprob: -10.349113464355469
    4. '           ' → logprob: -12.724113464355469
    5. '	exp' → logprob: -14.099113464355469
    6. '            ' → logprob: -14.724113464355469
    7. '_exp' → logprob: -15.724113464355469
    8. '               ' → logprob: -16.47411346435547
    9. '    ' → logprob: -16.59911346435547
    10. '
' → logprob: -16.59911346435547

Token 2530: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.08896596729755402
    2. ' <' → logprob: -2.463965892791748
    3. '<int' → logprob: -11.588966369628906
    4. '```' → logprob: -12.463966369628906
    5. '<size' → logprob: -13.213966369628906
    6. '<
' → logprob: -13.838966369628906
    7. '<|end|>' → logprob: -13.838966369628906
    8. '<p' → logprob: -14.213966369628906
    9. '<T' → logprob: -14.463966369628906
    10. '<std' → logprob: -14.588966369628906

Token 2531: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.011170192621648312
    2. 'exp' → logprob: -4.511170387268066
    3. ' min' → logprob: -9.011170387268066
    4. '           ' → logprob: -15.636170387268066
    5. ' exp' → logprob: -16.13616943359375
    6. '(min' → logprob: -17.76116943359375
    7. '[min' → logprob: -17.88616943359375
    8. '       ' → logprob: -18.26116943359375
    9. '   ' → logprob: -18.76116943359375
    10. '               ' → logprob: -18.76116943359375

Token 2532: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.00039588010986335576
    2. 'exp' → logprob: -7.875395774841309
    3. '_ex' → logprob: -11.500395774841309
    4. 'expense' → logprob: -12.500395774841309
    5. '	exp' → logprob: -14.375395774841309
    6. 'min' → logprob: -14.625395774841309
    7. '\' → logprob: -15.000395774841309
    8. '
' → logprob: -15.625395774841309
    9. '(exp' → logprob: -15.875395774841309
    10. 'Expense' → logprob: -17.125396728515625

Token 2533: 'ense' (ID: 1603)
  Prédit: '_exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.10758143663406372
    2. 'exp' → logprob: -2.982581377029419
    3. 'expense' → logprob: -2.982581377029419
    4. 'Expense' → logprob: -7.732581615447998
    5. 'est' → logprob: -9.48258113861084
    6. 'ense' → logprob: -10.10758113861084
    7. ' expense' → logprob: -10.60758113861084
    8. 'p' → logprob: -10.98258113861084
    9. '_cost' → logprob: -11.85758113861084
    10. '   ' → logprob: -11.98258113861084

Token 2534: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.39444875717163086
    2. ':
' → logprob: -1.8944487571716309
    3. '           ' → logprob: -2.394448757171631
    4. '               ' → logprob: -2.894448757171631
    5. ':' → logprob: -3.769448757171631
    6. '```' → logprob: -6.144448757171631
    7. '       ' → logprob: -6.644448757171631
    8. '):' → logprob: -7.394448757171631
    9. '                       ' → logprob: -7.644448757171631
    10. '=' → logprob: -7.644448757171631

Token 2535: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000605933484621346
    2. 'min' → logprob: -8.125605583190918
    3. '```' → logprob: -8.750605583190918
    4. '       ' → logprob: -10.000605583190918
    5. '           ' → logprob: -10.500605583190918
    6. '(min' → logprob: -10.875605583190918
    7. '                   ' → logprob: -10.875605583190918
    8. 'max' → logprob: -11.625605583190918
    9. ' min' → logprob: -12.000605583190918
    10. '              ' → logprob: -12.125605583190918

Token 2536: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.0001126026691053994
    2. '               ' → logprob: -9.875112533569336
    3. ' max' → logprob: -10.000112533569336
    4. '                   ' → logprob: -11.250112533569336
    5. '           ' → logprob: -13.875112533569336
    6. '(max' → logprob: -13.875112533569336
    7. '```' → logprob: -15.000112533569336
    8. '
' → logprob: -16.000112533569336
    9. '   ' → logprob: -16.250112533569336
    10. '``' → logprob: -16.375112533569336

Token 2537: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0005196703714318573
    2. '_exp' → logprob: -7.875519752502441
    3. '               ' → logprob: -9.375519752502441
    4. 'exp' → logprob: -10.000519752502441
    5. '           ' → logprob: -12.375519752502441
    6. '                   ' → logprob: -13.875519752502441
    7. '=' → logprob: -13.875519752502441
    8. '_' → logprob: -14.000519752502441
    9. 'max' → logprob: -14.500519752502441
    10. 'expense' → logprob: -15.000519752502441

Token 2538: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -1.7835754988482222e-05
    2. '_c' → logprob: -11.375018119812012
    3. '_' → logprob: -12.625018119812012
    4. '50' → logprob: -13.625018119812012
    5. '5' → logprob: -14.500018119812012
    6. 'c' → logprob: -15.125018119812012
    7. '=' → logprob: -15.750018119812012
    8. '   ' → logprob: -15.875018119812012
    9. '       ' → logprob: -16.375017166137695
    10. 'coins' → logprob: -16.625017166137695

Token 2539: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.805981972021982e-05
    2. ' =' → logprob: -9.25009822845459
    3. '=max' → logprob: -13.37509822845459
    4. '=
' → logprob: -15.37509822845459
    5. '=c' → logprob: -16.125097274780273
    6. '                   ' → logprob: -18.000097274780273
    7. '           ' → logprob: -18.125097274780273
    8. '               ' → logprob: -18.625097274780273
    9. '=min' → logprob: -19.375097274780273
    10. '=

' → logprob: -19.500097274780273

Token 2540: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.869639476761222e-05
    2. '               ' → logprob: -10.750039100646973
    3. ' c' → logprob: -11.000039100646973
    4. '           ' → logprob: -14.875039100646973
    5. '                   ' → logprob: -16.250038146972656
    6. '   ' → logprob: -18.750038146972656
    7. ')c' → logprob: -18.875038146972656
    8. '                ' → logprob: -19.500038146972656
    9. '$c' → logprob: -19.500038146972656
    10. '              ' → logprob: -19.625038146972656

Token 2541: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -1.7120533811976202e-05
    2. '5' → logprob: -11.625017166137695
    3. 'c' → logprob: -13.250017166137695
    4. '-' → logprob: -13.875017166137695
    5. '   ' → logprob: -14.000017166137695
    6. '_c' → logprob: -14.250017166137695
    7. '_' → logprob: -14.250017166137695
    8. '
' → logprob: -14.375017166137695
    9. '+' → logprob: -14.875017166137695
    10. '(c' → logprob: -15.000017166137695

Token 2542: 'coins' (ID: 48264)
  Prédit: 'coins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.4201456606388092
    2. ',' → logprob: -1.6701456308364868
    3. '=' → logprob: -2.1701457500457764
    4. '               ' → logprob: -4.545145511627197
    5. '           ' → logprob: -4.795145511627197
    6. ' coins' → logprob: -4.920145511627197
    7. ',
' → logprob: -5.420145511627197
    8. ' =' → logprob: -6.045145511627197
    9. '       ' → logprob: -6.920145511627197
    10. '500' → logprob: -7.420145511627197

Token 2543: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03548629581928253
    2. ' and' → logprob: -4.160486221313477
    3. '           ' → logprob: -5.285486221313477
    4. '```' → logprob: -5.410486221313477
    5. '                   ' → logprob: -6.035486221313477
    6. 'and' → logprob: -6.160486221313477
    7. ',' → logprob: -6.535486221313477
    8. '                ' → logprob: -7.285486221313477
    9. '                
' → logprob: -7.285486221313477
    10. '
' → logprob: -7.410486221313477

Token 2544: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0035137145314365625
    2. 'and' → logprob: -6.753513813018799
    3. ' and' → logprob: -7.003513813018799
    4. '```' → logprob: -7.503513813018799
    5. ',' → logprob: -7.628513813018799
    6. '           ' → logprob: -8.37851333618164
    7. '
' → logprob: -9.87851333618164
    8. '                   ' → logprob: -10.25351333618164
    9. '       ' → logprob: -11.00351333618164
    10. ',
' → logprob: -11.62851333618164

Token 2545: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.3214489817619324
    2. '               ' → logprob: -1.3214490413665771
    3. ' min' → logprob: -4.821448802947998
    4. '           ' → logprob: -9.446449279785156
    5. '                   ' → logprob: -11.196449279785156
    6. '       ' → logprob: -13.571449279785156
    7. '[min' → logprob: -13.571449279785156
    8. '_min' → logprob: -13.946449279785156
    9. '(min' → logprob: -13.946449279785156
    10. '   ' → logprob: -15.071449279785156

Token 2546: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -1.7835754988482222e-05
    2. 'expense' → logprob: -11.250018119812012
    3. 'exp' → logprob: -13.000018119812012
    4. 'Expense' → logprob: -13.750018119812012
    5. '_ex' → logprob: -14.250018119812012
    6. '	exp' → logprob: -15.375018119812012
    7. '\' → logprob: -16.125017166137695
    8. '_cost' → logprob: -16.250017166137695
    9. '```' → logprob: -16.500017166137695
    10. '
' → logprob: -16.625017166137695

Token 2547: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.0003156817110721022
    2. 'expense' → logprob: -8.75031566619873
    3. '_exp' → logprob: -9.12531566619873
    4. 'exp' → logprob: -10.62531566619873
    5. 'anse' → logprob: -11.37531566619873
    6. 'ort' → logprob: -13.12531566619873
    7. 'ose' → logprob: -13.50031566619873
    8. 'enses' → logprob: -13.75031566619873
    9. '
' → logprob: -14.00031566619873
    10. 'onse' → logprob: -14.12531566619873

Token 2548: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07911163568496704
    2. ' =' → logprob: -2.5791115760803223
    3. '```' → logprob: -9.70411205291748
    4. '               ' → logprob: -9.82911205291748
    5. '                ' → logprob: -10.82911205291748
    6. ' if' → logprob: -10.95411205291748
    7. '           ' → logprob: -11.07911205291748
    8. '                   ' → logprob: -11.57911205291748
    9. '=
' → logprob: -11.57911205291748
    10. 'if' → logprob: -11.95411205291748

Token 2549: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.0002613358374219388
    2. ' exp' → logprob: -8.250261306762695
    3. '	exp' → logprob: -17.375261306762695
    4. '_exp' → logprob: -18.000261306762695
    5. '   ' → logprob: -19.000261306762695
    6. '(exp' → logprob: -19.500261306762695
    7. 'Exp' → logprob: -20.250261306762695
    8. '.exp' → logprob: -20.750261306762695
    9. '       ' → logprob: -20.875261306762695
    10. ''exp' → logprob: -21.125261306762695

Token 2550: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014678503386676311
    2. '
' → logprob: -4.639678478240967
    3. 'return' → logprob: -5.389678478240967
    4. ' return' → logprob: -8.764678955078125
    5. '```' → logprob: -8.889678955078125
    6. '<|end|>' → logprob: -11.014678955078125
    7. '   ' → logprob: -11.764678955078125
    8. '        
' → logprob: -11.764678955078125
    9. '
' → logprob: -12.264678955078125
    10. '	return' → logprob: -12.889678955078125

Token 2551: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019470850005745888
    2. '
' → logprob: -4.519470691680908
    3. '```' → logprob: -5.144470691680908
    4. 'return' → logprob: -6.019470691680908
    5. '   ' → logprob: -10.019471168518066
    6. ' return' → logprob: -10.644471168518066
    7. '``' → logprob: -11.144471168518066
    8. '        
' → logprob: -11.394471168518066
    9. ')
' → logprob: -11.894471168518066
    10. '           ' → logprob: -11.894471168518066

Token 2552: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5077523589134216
    2. '       ' → logprob: -1.0077524185180664
    3. 'if' → logprob: -3.7577524185180664
    4. '```' → logprob: -5.007752418518066
    5. '
' → logprob: -5.882752418518066
    6. '   ' → logprob: -9.007752418518066
    7. '``' → logprob: -9.507752418518066
    8. ' return' → logprob: -10.007752418518066
    9. ' if' → logprob: -10.632752418518066
    10. '`' → logprob: -11.132752418518066

Token 2553: ' max' (ID: 2999)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.16048742830753326
    2. 'max' → logprob: -1.910487413406372
    3. ' max' → logprob: -8.410487174987793
    4. '   ' → logprob: -10.410487174987793
    5. ' (' → logprob: -11.910487174987793
    6. '(' → logprob: -13.160487174987793
    7. '[max' → logprob: -13.410487174987793
    8. ',max' → logprob: -15.660487174987793
    9. ' ' → logprob: -16.78548812866211
    10. '       ' → logprob: -16.91048812866211

Token 2554: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -2.3557529857498594e-05
    2. '_' → logprob: -11.37502384185791
    3. '500' → logprob: -12.50002384185791
    4. '\' → logprob: -13.00002384185791
    5. '```' → logprob: -13.12502384185791
    6. '_max' → logprob: -14.50002384185791
    7. '(_' → logprob: -14.75002384185791
    8. '_C' → logprob: -14.87502384185791
    9. ' _' → logprob: -15.12502384185791
    10. 'max' → logprob: -15.37502384185791

Token 2555: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -1.723973582556937e-05
    2. '_' → logprob: -11.625017166137695
    3. '50' → logprob: -13.000017166137695
    4. '5' → logprob: -13.000017166137695
    5. '```' → logprob: -14.250017166137695
    6. '(' → logprob: -14.375017166137695
    7. '
' → logprob: -14.875017166137695
    8. '0' → logprob: -15.375017166137695
    9. '   ' → logprob: -15.625017166137695
    10. 'o' → logprob: -15.750017166137695

Token 2556: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10833767056465149
    2. '<|end|>' → logprob: -2.358337640762329
    3. '```' → logprob: -5.483337879180908
    4. '
' → logprob: -6.108337879180908
    5. '   ' → logprob: -7.858337879180908
    6. 'def' → logprob: -8.48333740234375
    7. '.' → logprob: -8.98333740234375
    8. 'if' → logprob: -8.98333740234375
    9. '<|end|>' → logprob: -9.23333740234375
    10. '#' → logprob: -9.23333740234375

Token 2557: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -9.615255839889869e-05
    2. ' min' → logprob: -9.250096321105957
    3. '(min' → logprob: -17.25009536743164
    4. '_min' → logprob: -19.62509536743164
    5. ',min' → logprob: -20.87509536743164
    6. '[min' → logprob: -21.12509536743164
    7. '	min' → logprob: -21.87509536743164
    8. 'max' → logprob: -22.00009536743164
    9. '   ' → logprob: -23.00009536743164
    10. '```' → logprob: -23.00009536743164

Token 2558: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -5.2524021157296374e-05
    2. 'Expense' → logprob: -10.375052452087402
    3. 'expense' → logprob: -11.125052452087402
    4. 'exp' → logprob: -12.500052452087402
    5. '_ex' → logprob: -13.625052452087402
    6. '\' → logprob: -15.125052452087402
    7. 'Exp' → logprob: -15.250052452087402
    8. '	exp' → logprob: -15.625052452087402
    9. '```' → logprob: -15.875052452087402
    10. ' expense' → logprob: -16.25005340576172

Token 2559: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -1.6310397386550903
    2. '-' → logprob: -2.131039619445801
    3. 'p' → logprob: -2.381039619445801
    4. 'xp' → logprob: -2.381039619445801
    5. 'rror' → logprob: -2.506039619445801
    6. '```' → logprob: -2.881039619445801
    7. 'x' → logprob: -3.131039619445801
    8. '       ' → logprob: -3.256039619445801
    9. 'psilon' → logprob: -3.506039619445801
    10. '   ' → logprob: -3.881039619445801

Token 2560: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2561: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01704847440123558
    2. 'def' → logprob: -4.142048358917236
    3. '<|end|>' → logprob: -7.267048358917236
    4. '```' → logprob: -9.017048835754395
    5. '       ' → logprob: -9.267048835754395
    6. ' def' → logprob: -9.767048835754395
    7. '<|end|>' → logprob: -11.267048835754395
    8. '    
' → logprob: -11.767048835754395
    9. '
' → logprob: -12.642048835754395
    10. ')' → logprob: -13.017048835754395

Token 2562: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051264844834804535
    2. 'def' (adapté à ' def') → logprob: -3.051264762878418
    3. '```' → logprob: -6.551264762878418
    4. '<|end|>' → logprob: -7.176264762878418
    5. '
' → logprob: -8.551264762878418
    6. ' def' → logprob: -8.676264762878418
    7. '    
' → logprob: -10.301264762878418
    8. '       ' → logprob: -10.676264762878418
    9. '#' → logprob: -11.551264762878418
    10. '<|end|>' → logprob: -11.926264762878418

Token 2563: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -6.704273118884885e-07
    2. ' update' → logprob: -15.000000953674316
    3. '_update' → logprob: -15.250000953674316
    4. '   ' → logprob: -16.875
    5. '.update' → logprob: -20.875
    6. '
' → logprob: -21.25
    7. '	update' → logprob: -21.375
    8. ' ' → logprob: -21.5
    9. '  ' → logprob: -22.125
    10. 'def' → logprob: -23.125

Token 2564: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -7.576873758807778e-05
    2. '   ' → logprob: -10.375075340270996
    3. '(self' → logprob: -10.625075340270996
    4. '_states' → logprob: -11.500075340270996
    5. 'state' → logprob: -12.875075340270996
    6. '```' → logprob: -13.250075340270996
    7. 'State' → logprob: -13.500075340270996
    8. '_' → logprob: -13.750075340270996
    9. 'self' → logprob: -14.125075340270996
    10. '_status' → logprob: -14.250075340270996

Token 2565: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009610046399757266
    2. '   ' → logprob: -7.625960826873779
    3. '(' → logprob: -7.750960826873779
    4. '       ' → logprob: -10.750961303710938
    5. 'self' → logprob: -11.500961303710938
    6. '(
' → logprob: -12.375961303710938
    7. 'def' → logprob: -12.500961303710938
    8. ' (' → logprob: -13.500961303710938
    9. '```' → logprob: -14.000961303710938
    10. ' ' → logprob: -16.000961303710938

Token 2566: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002735686022788286
    2. '   ' → logprob: -6.252735614776611
    3. '(' → logprob: -7.877735614776611
    4. '       ' → logprob: -8.00273609161377
    5. 'self' → logprob: -10.25273609161377
    6. '(
' → logprob: -11.00273609161377
    7. 'def' → logprob: -11.75273609161377
    8. '```' → logprob: -12.12773609161377
    9. ' ' → logprob: -12.37773609161377
    10. ',' → logprob: -12.87773609161377

Token 2567: ' state' (ID: 2608)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.18671570718288422
    2. 'coin' → logprob: -2.061715602874756
    3. 'coins' → logprob: -3.686715602874756
    4. 'states' → logprob: -4.686715602874756
    5. 'state' → logprob: -5.311715602874756
    6. '   ' → logprob: -6.436715602874756
    7. ' coin' → logprob: -7.436715602874756
    8. ' self' → logprob: -7.561715602874756
    9. 'next' → logprob: -8.186716079711914
    10. '       ' → logprob: -8.186716079711914

Token 2568: '_dict' (ID: 11295)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4787466824054718
    2. '       ' → logprob: -1.8537466526031494
    3. '   ' → logprob: -1.9787466526031494
    4. 'self' → logprob: -2.8537466526031494
    5. ',self' → logprob: -4.4787468910217285
    6. 's' → logprob: -4.7287468910217285
    7. '(self' → logprob: -5.6037468910217285
    8. '):
' → logprob: -6.4787468910217285
    9. '_,' → logprob: -7.4787468910217285
    10. '```' → logprob: -7.8537468910217285

Token 2569: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15407969057559967
    2. '       ' → logprob: -2.0290796756744385
    3. '(self' → logprob: -5.154079914093018
    4. '```' → logprob: -6.279079914093018
    5. '   ' → logprob: -6.404079914093018
    6. '):
' → logprob: -7.404079914093018
    7. '[' → logprob: -7.904079914093018
    8. ',self' → logprob: -8.52907943725586
    9. '           ' → logprob: -9.15407943725586
    10. 'self' → logprob: -9.27907943725586

Token 2570: ' coins' (ID: 28969)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.0035811839625239372
    2. 'coins' → logprob: -6.2535810470581055
    3. ' coin' → logprob: -7.1285810470581055
    4. '   ' → logprob: -8.128581047058105
    5. 'key' → logprob: -8.253581047058105
    6. '           ' → logprob: -9.378581047058105
    7. '       ' → logprob: -9.503581047058105
    8. '               ' → logprob: -9.878581047058105
    9. '                   ' → logprob: -10.253581047058105
    10. ' coins' → logprob: -11.253581047058105

Token 2571: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2356894165277481
    2. ',' → logprob: -2.110689401626587
    3. '_tuple' → logprob: -2.860689401626587
    4. '   ' → logprob: -4.360689640045166
    5. '_,' → logprob: -4.735689640045166
    6. '_used' → logprob: -5.735689640045166
    7. '_counts' → logprob: -6.610689640045166
    8. '           ' → logprob: -6.610689640045166
    9. '_t' → logprob: -6.860689640045166
    10. '       ' → logprob: -7.110689640045166

Token 2572: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.018630610778927803
    2. ' c' → logprob: -4.518630504608154
    3. '   ' → logprob: -5.518630504608154
    4. '       ' → logprob: -7.018630504608154
    5. '           ' → logprob: -7.518630504608154
    6. '      ' → logprob: -8.143630981445312
    7. '          ' → logprob: -8.143630981445312
    8. '    ' → logprob: -8.393630981445312
    9. '     ' → logprob: -8.393630981445312
    10. '        ' → logprob: -8.893630981445312

Token 2573: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -1.4021237802808173e-05
    2. '_' → logprob: -11.500014305114746
    3. '5' → logprob: -12.625014305114746
    4. '50' → logprob: -15.750014305114746
    5. 'ount' → logprob: -16.37501335144043
    6. '
' → logprob: -16.62501335144043
    7. '```' → logprob: -17.25001335144043
    8. '   ' → logprob: -17.37501335144043
    9. '505' → logprob: -18.00001335144043
    10. 'urrent' → logprob: -18.00001335144043

Token 2574: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012475410767365247
    2. '   ' → logprob: -9.87512493133545
    3. '_,' → logprob: -10.50012493133545
    4. ' ,' → logprob: -11.00012493133545
    5. '       ' → logprob: -11.62512493133545
    6. ',c' → logprob: -12.50012493133545
    7. ',int' → logprob: -12.50012493133545
    8. '           ' → logprob: -12.87512493133545
    9. '```' → logprob: -12.87512493133545
    10. ',
' → logprob: -13.75012493133545

Token 2575: ' expense' (ID: 29361)
  Prédit: 'expense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expense' → logprob: -0.000770436367020011
    2. 'exp' → logprob: -7.750770568847656
    3. ' expense' → logprob: -8.000770568847656
    4. '   ' → logprob: -12.875770568847656
    5. '    ' → logprob: -14.250770568847656
    6. '       ' → logprob: -14.375770568847656
    7. '  ' → logprob: -15.750770568847656
    8. '     ' → logprob: -15.875770568847656
    9. '      ' → logprob: -16.000770568847656
    10. ' ' → logprob: -16.250770568847656

Token 2576: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.038730036467313766
    2. '       ' → logprob: -3.5387301445007324
    3. '):' → logprob: -5.038730144500732
    4. '   ' → logprob: -6.413730144500732
    5. ',' → logprob: -7.163730144500732
    6. '):
' → logprob: -11.163729667663574
    7. '           ' → logprob: -11.788729667663574
    8. ':' → logprob: -12.163729667663574
    9. '```' → logprob: -12.163729667663574
    10. '):

' → logprob: -13.163729667663574

Token 2577: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18196815252304077
    2. '```' → logprob: -1.8069682121276855
    3. '   ' → logprob: -6.4319682121276855
    4. '`' → logprob: -8.431967735290527
    5. '[' → logprob: -8.681967735290527
    6. 'state' → logprob: -9.181967735290527
    7. '``' → logprob: -9.681967735290527
    8. '[state' → logprob: -10.806967735290527
    9. '(state' → logprob: -11.806967735290527
    10. '
' → logprob: -12.181967735290527

Token 2578: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26209011673927307
    2. '```' → logprob: -1.7620900869369507
    3. 'key' → logprob: -3.3870902061462402
    4. '   ' → logprob: -4.01209020614624
    5. 'if' (adapté à ' if') → logprob: -5.88709020614624
    6. ' key' → logprob: -6.01209020614624
    7. '``' → logprob: -6.51209020614624
    8. '_key' → logprob: -9.762089729309082
    9. '`' → logprob: -9.762089729309082
    10. ' if' → logprob: -10.012089729309082

Token 2579: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.021296042948961258
    2. ' coins' → logprob: -4.14629602432251
    3. '   ' → logprob: -5.64629602432251
    4. '       ' → logprob: -6.64629602432251
    5. '(co' → logprob: -8.521296501159668
    6. '           ' → logprob: -9.271296501159668
    7. ' (' → logprob: -10.396296501159668
    8. '(' → logprob: -10.396296501159668
    9. '     ' → logprob: -11.146296501159668
    10. '    ' → logprob: -11.271296501159668

Token 2580: ' not' (ID: 625)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.43313106894493103
    2. ' not' → logprob: -1.3081310987472534
    3. ' in' → logprob: -3.058130979537964
    4. 'not' → logprob: -3.433130979537964
    5. ')' → logprob: -7.308131217956543
    6. '       ' → logprob: -7.558131217956543
    7. ',' → logprob: -8.183131217956543
    8. '```' → logprob: -8.808131217956543
    9. '_in' → logprob: -9.433131217956543
    10. '   ' → logprob: -10.183131217956543

Token 2581: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1427781879901886
    2. ' in' → logprob: -2.017778158187866
    3. '   ' → logprob: -10.392778396606445
    4. '<|end|>' → logprob: -10.642778396606445
    5. '       ' → logprob: -10.892778396606445
    6. '```' → logprob: -12.017778396606445
    7. '<|end|>' → logprob: -12.392778396606445
    8. '_in' → logprob: -12.767778396606445
    9. '	in' → logprob: -13.017778396606445
    10. ',' → logprob: -13.017778396606445

Token 2582: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -1.5048530030981055e-06
    2. ' state' → logprob: -13.500001907348633
    3. '   ' → logprob: -17.000001907348633
    4. '	state' → logprob: -19.875001907348633
    5. '       ' → logprob: -20.250001907348633
    6. '(state' → logprob: -20.500001907348633
    7. 'or' → logprob: -21.125001907348633
    8. '```' → logprob: -21.250001907348633
    9. '    ' → logprob: -22.625001907348633
    10. ' ' → logprob: -23.125001907348633

Token 2583: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.002695386065170169
    2. '```' → logprob: -6.252695560455322
    3. '       ' → logprob: -8.127695083618164
    4. '   ' → logprob: -8.377695083618164
    5. ':
' → logprob: -9.627695083618164
    6. '_DICT' → logprob: -10.002695083618164
    7. 'dict' → logprob: -10.502695083618164
    8. ':' → logprob: -11.002695083618164
    9. '):
' → logprob: -11.127695083618164
    10. '           ' → logprob: -11.252695083618164

Token 2584: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.05799189954996109
    2. ':
' → logprob: -3.5579919815063477
    3. '           ' → logprob: -4.057991981506348
    4. ':' → logprob: -4.932991981506348
    5. 'or' → logprob: -6.182991981506348
    6. '       ' → logprob: -7.557991981506348
    7. '```' → logprob: -7.682991981506348
    8. '=' → logprob: -8.807991981506348
    9. '	or' → logprob: -10.057991981506348
    10. ',' → logprob: -10.682991981506348

Token 2585: '           ' (ID: 352)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.7621362805366516
    2. '           ' → logprob: -1.2621362209320068
    3. '```' → logprob: -1.6371362209320068
    4. 'or' → logprob: -3.012136220932007
    5. '       ' → logprob: -5.262136459350586
    6. '   ' → logprob: -7.012136459350586
    7. '=True' → logprob: -9.387136459350586
    8. '``' → logprob: -9.637136459350586
    9. '	or' → logprob: -9.637136459350586
    10. '[' → logprob: -10.012136459350586

Token 2586: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' (adapté à ' state') → logprob: -0.00038539018714800477
    2. '       ' → logprob: -8.500385284423828
    3. '           ' → logprob: -9.000385284423828
    4. ' state' → logprob: -10.375385284423828
    5. '```' → logprob: -10.750385284423828
    6. '   ' → logprob: -12.125385284423828
    7. '	state' → logprob: -15.500385284423828
    8. ' ' → logprob: -15.875385284423828
    9. '               ' → logprob: -16.750385284423828
    10. '(state' → logprob: -18.000385284423828

Token 2587: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.007557047996670008
    2. '[' → logprob: -5.007556915283203
    3. 'dict' → logprob: -7.382556915283203
    4. '```' → logprob: -9.382556915283203
    5. 'coins' → logprob: -9.382556915283203
    6. '   ' → logprob: -10.882556915283203
    7. '=' → logprob: -11.757556915283203
    8. '       ' → logprob: -12.257556915283203
    9. 'Dict' → logprob: -12.507556915283203
    10. '_co' → logprob: -12.757556915283203

Token 2588: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00014334988372866064
    2. 'coins' → logprob: -9.000143051147461
    3. '```' → logprob: -11.250143051147461
    4. '=' → logprob: -12.375143051147461
    5. '   ' → logprob: -14.250143051147461
    6. '       ' → logprob: -15.125143051147461
    7. ' coins' → logprob: -15.250143051147461
    8. '
' → logprob: -15.250143051147461
    9. '__[' → logprob: -15.625143051147461
    10. 'Coins' → logprob: -15.875143051147461

Token 2589: 'coins' (ID: 48264)
  Prédit: 'coins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -1.5451681974809617e-05
    2. '   ' → logprob: -11.750015258789062
    3. ' coins' → logprob: -12.625015258789062
    4. '{' → logprob: -12.875015258789062
    5. '       ' → logprob: -14.250015258789062
    6. '           ' → logprob: -14.625015258789062
    7. '{
' → logprob: -16.000015258789062
    8. '{}' → logprob: -16.000015258789062
    9. '[' → logprob: -16.500015258789062
    10. '(co' → logprob: -17.250015258789062

Token 2590: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10286495089530945
    2. ' =' → logprob: -2.352864980697632
    3. ']' → logprob: -6.352864742279053
    4. ']=' → logprob: -7.102864742279053
    5. '   ' → logprob: -9.852865219116211
    6. '       ' → logprob: -10.852865219116211
    7. ')' → logprob: -11.977865219116211
    8. ')=' → logprob: -12.477865219116211
    9. '=True' → logprob: -12.727865219116211
    10. '           ' → logprob: -12.977865219116211

Token 2591: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00043138445471413434
    2. ' =' → logprob: -7.750431537628174
    3. '=
' → logprob: -14.625431060791016
    4. '=True' → logprob: -16.125431060791016
    5. '       ' → logprob: -16.375431060791016
    6. '   ' → logprob: -17.250431060791016
    7. '           ' → logprob: -17.750431060791016
    8. '[' → logprob: -19.125431060791016
    9. ']=' → logprob: -19.375431060791016
    10. '=None' → logprob: -20.375431060791016

Token 2592: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -7.886803359724581e-05
    2. ' (' → logprob: -9.750079154968262
    3. '   ' → logprob: -11.250079154968262
    4. '       ' → logprob: -11.875079154968262
    5. '           ' → logprob: -14.875079154968262
    6. '(' → logprob: -16.125078201293945
    7. '(C' → logprob: -17.250078201293945
    8. '     ' → logprob: -17.750078201293945
    9. '         ' → logprob: -18.625078201293945
    10. ' ' → logprob: -18.750078201293945

Token 2593: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -6.704273118884885e-07
    2. '   ' → logprob: -15.250000953674316
    3. '(c' → logprob: -15.375000953674316
    4. ' c' → logprob: -16.375
    5. '       ' → logprob: -17.625
    6. '           ' → logprob: -18.5
    7. ')c' → logprob: -19.75
    8. '         ' → logprob: -20.875
    9. '
' → logprob: -21.0
    10. '     ' → logprob: -21.5

Token 2594: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -1.4140441635390744e-05
    2. '5' → logprob: -11.750014305114746
    3. '_' → logprob: -12.375014305114746
    4. '50' → logprob: -14.000014305114746
    5. '501' → logprob: -15.375014305114746
    6. '300' → logprob: -15.500014305114746
    7. '   ' → logprob: -15.625014305114746
    8. ' ' → logprob: -15.875014305114746
    9. ',' → logprob: -17.00001335144043
    10. '505' → logprob: -17.00001335144043

Token 2595: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.982165698194876e-05
    2. '           ' → logprob: -10.250080108642578
    3. ' ,' → logprob: -10.625080108642578
    4. ',
' → logprob: -11.750080108642578
    5. '               ' → logprob: -12.625080108642578
    6. '       ' → logprob: -13.125080108642578
    7. '```' → logprob: -13.875080108642578
    8. '                   ' → logprob: -14.125080108642578
    9. ',user' → logprob: -14.375080108642578
    10. ',None' → logprob: -14.500080108642578

Token 2596: ' expense' (ID: 29361)
  Prédit: 'expense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expense' → logprob: -0.008615988306701183
    2. ' expense' → logprob: -4.758615970611572
    3. 'exp' → logprob: -13.88361644744873
    4. 'expenses' → logprob: -15.38361644744873
    5. '(exp' → logprob: -16.633615493774414
    6. ' (' → logprob: -17.633615493774414
    7. '       ' → logprob: -17.758615493774414
    8. '   ' → logprob: -17.758615493774414
    9. '
' → logprob: -18.008615493774414
    10. '0' → logprob: -18.008615493774414

Token 2597: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030917972326278687
    2. '       ' → logprob: -6.378091812133789
    3. ')
' → logprob: -7.253091812133789
    4. '           ' → logprob: -7.753091812133789
    5. ',' → logprob: -9.128091812133789
    6. '               ' → logprob: -9.378091812133789
    7. '):
' → logprob: -11.253091812133789
    8. '                   ' → logprob: -11.753091812133789
    9. ')return' → logprob: -12.003091812133789
    10. '   ' → logprob: -12.128091812133789

Token 2598: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1697094887495041
    2. '```' → logprob: -2.9197094440460205
    3. ' else' → logprob: -3.1697094440460205
    4. '           ' → logprob: -3.1697094440460205
    5. 'else' → logprob: -4.5447096824646
    6. '               ' → logprob: -5.9197096824646
    7. '   ' → logprob: -6.4197096824646
    8. ',' → logprob: -6.9197096824646
    9. '<|end|>' → logprob: -7.9197096824646
    10. '                               ' → logprob: -8.169709205627441

Token 2599: ' else' (ID: 1203)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.2940944731235504
    2. '       ' → logprob: -1.544094443321228
    3. '           ' → logprob: -3.9190945625305176
    4. 'else' (adapté à ' else') → logprob: -4.419094562530518
    5. '   ' → logprob: -6.544094562530518
    6. '[' → logprob: -6.544094562530518
    7. '<|end|>' → logprob: -6.544094562530518
    8. ' else' → logprob: -6.919094562530518
    9. '``' → logprob: -6.919094562530518
    10. ',' → logprob: -7.044094562530518

Token 2600: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10752544552087784
    2. '```' → logprob: -3.35752534866333
    3. ' if' → logprob: -3.85752534866333
    4. 'if' → logprob: -3.98252534866333
    5. '       ' → logprob: -4.60752534866333
    6. ',' → logprob: -4.73252534866333
    7. ':
' → logprob: -5.23252534866333
    8. ':' → logprob: -6.73252534866333
    9. '{
' → logprob: -7.85752534866333
    10. '   ' → logprob: -8.107525825500488

Token 2601: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35918501019477844
    2. '       ' → logprob: -1.234184980392456
    3. '```' → logprob: -5.109185218811035
    4. ' if' → logprob: -6.109185218811035
    5. 'if' → logprob: -6.234185218811035
    6. ',' → logprob: -9.109185218811035
    7. '               ' → logprob: -9.234185218811035
    8. '   ' → logprob: -9.234185218811035
    9. '
' → logprob: -10.484185218811035
    10. '``' → logprob: -10.609185218811035

Token 2602: ' old' (ID: 2890)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.5206421613693237
    2. '           ' → logprob: -1.8956421613693237
    3. 'c' → logprob: -2.1456422805786133
    4. 'old' (adapté à ' old') → logprob: -3.3956422805786133
    5. 'if' → logprob: -3.6456422805786133
    6. '```' → logprob: -3.6456422805786133
    7. 'prev' → logprob: -3.7706422805786133
    8. '       ' → logprob: -4.020642280578613
    9. 'existing' → logprob: -5.645642280578613
    10. 'coins' → logprob: -6.020642280578613

Token 2603: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00028862981707789004
    2. 'c' → logprob: -8.375288963317871
    3. '_val' → logprob: -11.000288963317871
    4. '_value' → logprob: -11.250288963317871
    5. '_co' → logprob: -11.875288963317871
    6. '_coin' → logprob: -12.375288963317871
    7. '_space' → logprob: -12.750288963317871
    8. '_exp' → logprob: -13.125288963317871
    9. '_tokens' → logprob: -13.125288963317871
    10. ' =' → logprob: -13.250288963317871

Token 2604: '500' (ID: 3234)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2980484664440155
    2. ',c' → logprob: -1.423048496246338
    3. '_c' → logprob: -4.548048496246338
    4. ',_' → logprob: -6.048048496246338
    5. '_,' → logprob: -6.173048496246338
    6. 'c' → logprob: -7.298048496246338
    7. '_' → logprob: -8.79804801940918
    8. '=' → logprob: -8.92304801940918
    9. ' ,' → logprob: -9.04804801940918
    10. '           ' → logprob: -9.54804801940918

Token 2605: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02536187320947647
    2. ',c' → logprob: -3.7753617763519287
    3. '           ' → logprob: -7.025362014770508
    4. '_,' → logprob: -7.900362014770508
    5. ' ,' → logprob: -8.275362014770508
    6. '_c' → logprob: -8.650362014770508
    7. '```' → logprob: -9.025362014770508
    8. ',
' → logprob: -10.025362014770508
    9. ',value' → logprob: -10.525362014770508
    10. ',state' → logprob: -10.775362014770508

Token 2606: ' old' (ID: 2890)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.014200292527675629
    2. ' old' → logprob: -4.264200210571289
    3. 'expense' → logprob: -10.264200210571289
    4. ' expense' → logprob: -13.889200210571289
    5. 'state' → logprob: -15.264200210571289
    6. '_old' → logprob: -15.389200210571289
    7. '(old' → logprob: -15.514200210571289
    8. '	old' → logprob: -15.889200210571289
    9. 'exp' → logprob: -17.01420021057129
    10. 'olds' → logprob: -17.26420021057129

Token 2607: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.004392729140818119
    2. 'expense' → logprob: -5.629392623901367
    3. 'exp' → logprob: -7.254392623901367
    4. ',' → logprob: -10.004392623901367
    5. 'e' → logprob: -11.629392623901367
    6. '_e' → logprob: -11.879392623901367
    7. '```' → logprob: -11.879392623901367
    8. '_cost' → logprob: -11.879392623901367
    9. '_c' → logprob: -12.504392623901367
    10. ' expense' → logprob: -13.379392623901367

Token 2608: 'ense' (ID: 1603)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25948670506477356
    2. 'ense' → logprob: -2.134486675262451
    3. ' =' → logprob: -2.509486675262451
    4. '```' → logprob: -4.509486675262451
    5. '=' → logprob: -4.759486675262451
    6. ')' → logprob: -6.509486675262451
    7. '``' → logprob: -6.759486675262451
    8. ' ,' → logprob: -6.759486675262451
    9. '`' → logprob: -7.384486675262451
    10. '_exp' → logprob: -7.509486675262451

Token 2609: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474872350692749
    2. ' =' → logprob: -0.974872350692749
    3. '           ' → logprob: -7.849872589111328
    4. '```' → logprob: -8.974872589111328
    5. ')' → logprob: -9.224872589111328
    6. ',' → logprob: -9.224872589111328
    7. '       ' → logprob: -10.849872589111328
    8. '            ' → logprob: -11.599872589111328
    9. '_' → logprob: -11.849872589111328
    10. '        ' → logprob: -12.099872589111328

Token 2610: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.00020461321400944144
    2. ' state' → logprob: -8.500205039978027
    3. '           ' → logprob: -13.875205039978027
    4. '   ' → logprob: -16.25020408630371
    5. '               ' → logprob: -18.37520408630371
    6. '       ' → logprob: -18.75020408630371
    7. '            ' → logprob: -19.25020408630371
    8. '    ' → logprob: -19.37520408630371
    9. '        ' → logprob: -19.37520408630371
    10. '	state' → logprob: -19.75020408630371

Token 2611: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.0038650394417345524
    2. 'dict' → logprob: -5.6288652420043945
    3. '[' → logprob: -8.753865242004395
    4. 'state' → logprob: -9.628865242004395
    5. 'Dict' → logprob: -10.878865242004395
    6. '_DICT' → logprob: -11.628865242004395
    7. 'coins' → logprob: -12.378865242004395
    8. '```' → logprob: -12.753865242004395
    9. '_state' → logprob: -13.503865242004395
    10. 'DICT' → logprob: -14.253865242004395

Token 2612: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006018148735165596
    2. 'coins' → logprob: -5.131018161773682
    3. '```' → logprob: -10.131017684936523
    4. '       ' → logprob: -11.381017684936523
    5. '           ' → logprob: -11.381017684936523
    6. '(co' → logprob: -11.381017684936523
    7. '
' → logprob: -12.381017684936523
    8. '   ' → logprob: -12.506017684936523
    9. '[
' → logprob: -13.881017684936523
    10. '`' → logprob: -13.881017684936523

Token 2613: 'coins' (ID: 48264)
  Prédit: 'coins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -6.704273118884885e-07
    2. 'codes' → logprob: -15.500000953674316
    3. '[' → logprob: -15.750000953674316
    4. '   ' → logprob: -16.125
    5. ' coins' → logprob: -16.5
    6. 'tokens' → logprob: -16.75
    7. '           ' → logprob: -17.875
    8. '```' → logprob: -17.875
    9. '       ' → logprob: -18.875
    10. 'code' → logprob: -18.875

Token 2614: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.206254780292511
    2. '       ' → logprob: -2.831254720687866
    3. ')
' → logprob: -2.956254720687866
    4. ')' → logprob: -3.456254720687866
    5. ',' → logprob: -3.581254720687866
    6. '               ' → logprob: -5.206254959106445
    7. '[' → logprob: -5.706254959106445
    8. '
' → logprob: -6.456254959106445
    9. '```' → logprob: -6.706254959106445
    10. '):
' → logprob: -7.081254959106445

Token 2615: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6035008430480957
    2. '```' → logprob: -1.3535008430480957
    3. '               ' → logprob: -1.7285008430480957
    4. '                   ' → logprob: -5.603500843048096
    5. '       ' → logprob: -5.728500843048096
    6. '                       ' → logprob: -6.103500843048096
    7. '``' → logprob: -6.103500843048096
    8. '                               ' → logprob: -6.103500843048096
    9. '                           ' → logprob: -6.853500843048096
    10. '                                   ' → logprob: -7.978500843048096

Token 2616: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02148088440299034
    2. 'if' (adapté à ' if') → logprob: -3.8964807987213135
    3. ' if' → logprob: -7.271481037139893
    4. '```' → logprob: -8.396480560302734
    5. '``' → logprob: -12.021480560302734
    6. '               ' → logprob: -12.396480560302734
    7. '
' → logprob: -13.271480560302734
    8. 'expense' → logprob: -13.396480560302734
    9. '       ' → logprob: -13.646480560302734
    10. '   ' → logprob: -13.896480560302734

Token 2617: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002626904286444187
    2. '           ' → logprob: -6.627626895904541
    3. ' c' → logprob: -6.877626895904541
    4. '(c' → logprob: -8.6276273727417
    5. '   ' → logprob: -9.8776273727417
    6. ' (' → logprob: -12.1276273727417
    7. ' ' → logprob: -12.3776273727417
    8. '               ' → logprob: -12.5026273727417
    9. 'expense' → logprob: -12.5026273727417
    10. '(' → logprob: -12.6276273727417

Token 2618: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.00012201975914649665
    2. '_' → logprob: -9.6251220703125
    3. 'c' → logprob: -10.0001220703125
    4. '5' → logprob: -12.7501220703125
    5. '50' → logprob: -13.3751220703125
    6. '   ' → logprob: -13.5001220703125
    7. '
' → logprob: -14.2501220703125
    8. ' ' → logprob: -14.5001220703125
    9. '  ' → logprob: -14.8751220703125
    10. '_c' → logprob: -15.0001220703125

Token 2619: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.031245918944478035
    2. '>' → logprob: -3.5312459468841553
    3. ' <' → logprob: -6.781245708465576
    4. '           ' → logprob: -8.156246185302734
    5. '<' → logprob: -11.281246185302734
    6. '          ' → logprob: -11.281246185302734
    7. '```' → logprob: -11.406246185302734
    8. '               ' → logprob: -11.406246185302734
    9. '            ' → logprob: -12.531246185302734
    10. '                   ' → logprob: -12.906246185302734

Token 2620: ' old' (ID: 2890)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -1.8624639324116288e-06
    2. ' old' → logprob: -13.250001907348633
    3. '           ' → logprob: -19.250001907348633
    4. '	old' → logprob: -21.250001907348633
    5. '(old' → logprob: -21.625001907348633
    6. '_old' → logprob: -23.125001907348633
    7. '
' → logprob: -23.250001907348633
    8. '.old' → logprob: -23.500001907348633
    9. '       ' → logprob: -24.250001907348633
    10. '               ' → logprob: -24.625001907348633

Token 2621: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0010500772623345256
    2. '_' → logprob: -6.876049995422363
    3. ' _' → logprob: -11.251049995422363
    4. '```' → logprob: -13.376049995422363
    5. '500' → logprob: -14.251049995422363
    6. '_
' → logprob: -14.376049995422363
    7. '\' → logprob: -15.251049995422363
    8. '_s' → logprob: -15.501049995422363
    9. ')_' → logprob: -15.626049995422363
    10. '[' → logprob: -16.00105094909668

Token 2622: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -4.417976379045285e-05
    2. '_' → logprob: -10.625043869018555
    3. '50' → logprob: -11.750043869018555
    4. '5' → logprob: -12.000043869018555
    5. '```' → logprob: -13.250043869018555
    6. '   ' → logprob: -14.000043869018555
    7. '[' → logprob: -14.250043869018555
    8. '300' → logprob: -14.375043869018555
    9. '
' → logprob: -14.875043869018555
    10. '`' → logprob: -15.375043869018555

Token 2623: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.012087158858776093
    2. 'or' → logprob: -4.512087345123291
    3. '               ' → logprob: -7.387087345123291
    4. '           ' → logprob: -7.887087345123291
    5. '```' → logprob: -10.637086868286133
    6. '            ' → logprob: -11.637086868286133
    7. '                   ' → logprob: -12.387086868286133
    8. '              ' → logprob: -13.387086868286133
    9. '	or' → logprob: -13.637086868286133
    10. ' ' → logprob: -14.137086868286133

Token 2624: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0531131029129028
    2. '(exp' → logprob: -1.0531131029129028
    3. 'expense' → logprob: -1.4281131029129028
    4. ' expense' → logprob: -3.1781129837036133
    5. '(' → logprob: -3.9281129837036133
    6. '           ' → logprob: -7.928112983703613
    7. '(
' → logprob: -8.053112983703613
    8. ' (
' → logprob: -9.178112983703613
    9. '            ' → logprob: -9.303112983703613
    10. '               ' → logprob: -9.553112983703613

Token 2625: 'c' (ID: 66)
  Prédit: 'expense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expense' → logprob: -0.0011727249948307872
    2. 'c' → logprob: -7.0011725425720215
    3. ' expense' → logprob: -8.50117301940918
    4. 'exp' → logprob: -10.75117301940918
    5. '(exp' → logprob: -11.62617301940918
    6. '(' → logprob: -12.00117301940918
    7. '(c' → logprob: -12.12617301940918
    8. '
' → logprob: -12.50117301940918
    9. '   ' → logprob: -12.62617301940918
    10. 'expenses' → logprob: -13.00117301940918

Token 2626: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.00012749579036608338
    2. 'c' → logprob: -9.125127792358398
    3. '50' → logprob: -12.375127792358398
    4. '==' → logprob: -12.750127792358398
    5. '
' → logprob: -12.875127792358398
    6. '501' → logprob: -13.375127792358398
    7. '5' → logprob: -13.500127792358398
    8. '```' → logprob: -13.750127792358398
    9. '_' → logprob: -14.250127792358398
    10. '505' → logprob: -14.500127792358398

Token 2627: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.42984771728515625
    2. '==' → logprob: -1.0548477172851562
    3. ' <' → logprob: -7.429847717285156
    4. '          ' → logprob: -9.054847717285156
    5. ' !=' → logprob: -9.054847717285156
    6. '[' → logprob: -9.429847717285156
    7. '!=' → logprob: -9.929847717285156
    8. '           ' → logprob: -10.179847717285156
    9. '_exp' → logprob: -10.304847717285156
    10. '        ' → logprob: -10.804847717285156

Token 2628: ' old' (ID: 2890)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -1.0280383548888494e-06
    2. ' old' → logprob: -13.875000953674316
    3. '(old' → logprob: -17.500001907348633
    4. '
' → logprob: -19.375001907348633
    5. '	old' → logprob: -19.500001907348633
    6. '_old' → logprob: -20.000001907348633
    7. '           ' → logprob: -20.125001907348633
    8. '
' → logprob: -20.375001907348633
    9. 'olds' → logprob: -21.250001907348633
    10. '.old' → logprob: -21.750001907348633

Token 2629: '_c' (ID: 1303)
  Prédit: '_exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -3.1782583391759545e-05
    2. '_c' → logprob: -11.625031471252441
    3. '```' → logprob: -11.875031471252441
    4. '_cost' → logprob: -12.500031471252441
    5. '_s' → logprob: -13.000031471252441
    6. 'exp' → logprob: -13.000031471252441
    7. '_' → logprob: -13.000031471252441
    8. '   ' → logprob: -13.750031471252441
    9. ''_' → logprob: -14.625031471252441
    10. '``' → logprob: -14.875031471252441

Token 2630: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -3.309382373117842e-05
    2. '_' → logprob: -10.500033378601074
    3. '   ' → logprob: -13.500033378601074
    4. '
' → logprob: -14.125033378601074
    5. '5' → logprob: -14.125033378601074
    6. '```' → logprob: -14.500033378601074
    7. '300' → logprob: -15.250033378601074
    8. '50' → logprob: -15.375033378601074
    9. 'exp' → logprob: -15.625033378601074
    10. '       ' → logprob: -16.250032424926758

Token 2631: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.1269317865371704
    2. ' and' → logprob: -2.126931667327881
    3. '           ' → logprob: -13.626932144165039
    4. '            ' → logprob: -13.626932144165039
    5. '               ' → logprob: -15.001932144165039
    6. '```' → logprob: -15.001932144165039
    7. '                ' → logprob: -15.501932144165039
    8. '          ' → logprob: -15.876932144165039
    9. '                   ' → logprob: -16.12693214416504
    10. '        ' → logprob: -16.12693214416504

Token 2632: ' expense' (ID: 29361)
  Prédit: ' expense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expense' → logprob: -0.3132629990577698
    2. 'expense' → logprob: -1.313262939453125
    3. 'exp' → logprob: -14.438262939453125
    4. 'Expense' → logprob: -15.563262939453125
    5. '(exp' → logprob: -15.938262939453125
    6. 'expenses' → logprob: -16.063262939453125
    7. ' expenses' → logprob: -16.813262939453125
    8. '           ' → logprob: -17.313262939453125
    9. '   ' → logprob: -17.688262939453125
    10. '               ' → logprob: -18.063262939453125

Token 2633: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03365134820342064
    2. '<' → logprob: -3.408651351928711
    3. '<|end|>' → logprob: -13.158651351928711
    4. '[' → logprob: -14.033651351928711
    5. ' <
' → logprob: -14.408651351928711
    6. '<int' → logprob: -14.658651351928711
    7. '```' → logprob: -14.783651351928711
    8. ' ' → logprob: -15.033651351928711
    9. '<class' → logprob: -15.658651351928711
    10. ' <",' → logprob: -15.658651351928711

Token 2634: ' old' (ID: 2890)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.004078401252627373
    2. ' old' → logprob: -5.504078388214111
    3. '	old' → logprob: -18.379077911376953
    4. '(old' → logprob: -18.504077911376953
    5. '_old' → logprob: -19.879077911376953
    6. '.old' → logprob: -21.254077911376953
    7. '           ' → logprob: -21.379077911376953
    8. 'olds' → logprob: -22.629077911376953
    9. '               ' → logprob: -23.129077911376953
    10. '
' → logprob: -23.379077911376953

Token 2635: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -5.2166411478538066e-05
    2. 'expense' → logprob: -9.875052452087402
    3. 'exp' → logprob: -14.500052452087402
    4. '
' → logprob: -17.375051498413086
    5. ' expense' → logprob: -17.375051498413086
    6. '_ex' → logprob: -17.500051498413086
    7. 'Expense' → logprob: -18.000051498413086
    8. '_old' → logprob: -18.375051498413086
    9. '```' → logprob: -18.500051498413086
    10. '\' → logprob: -18.875051498413086

Token 2636: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.1064322292804718
    2. '_exp' → logprob: -2.8564321994781494
    3. 'expense' → logprob: -3.2314321994781494
    4. 'p' → logprob: -6.1064324378967285
    5. 'exp' → logprob: -7.1064324378967285
    6. ' expense' → logprob: -8.35643196105957
    7. 'xp' → logprob: -8.60643196105957
    8. '_cost' → logprob: -8.85643196105957
    9. '
' → logprob: -9.35643196105957
    10. '```' → logprob: -10.10643196105957

Token 2637: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03859585523605347
    2. '               ' → logprob: -3.2885959148406982
    3. '):' → logprob: -8.288596153259277
    4. '           ' → logprob: -8.413596153259277
    5. ':
' → logprob: -10.038596153259277
    6. '                   ' → logprob: -11.163596153259277
    7. '                       ' → logprob: -12.288596153259277
    8. ')' → logprob: -12.288596153259277
    9. '       ' → logprob: -12.413596153259277
    10. '):
' → logprob: -13.038596153259277

Token 2638: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.041768160182983e-05
    2. '                   ' → logprob: -10.250080108642578
    3. '):
' → logprob: -11.500080108642578
    4. '           ' → logprob: -11.625080108642578
    5. '                       ' → logprob: -11.875080108642578
    6. ':
' → logprob: -12.000080108642578
    7. '                               ' → logprob: -12.000080108642578
    8. '                           ' → logprob: -13.000080108642578
    9. '```' → logprob: -14.125080108642578
    10. '       ' → logprob: -14.250080108642578

Token 2639: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' (adapté à ' state') → logprob: -0.021378666162490845
    2. '               ' → logprob: -4.021378517150879
    3. ' state' → logprob: -5.896378517150879
    4. '                   ' → logprob: -8.021378517150879
    5. '```' → logprob: -9.021378517150879
    6. '                       ' → logprob: -11.646378517150879
    7. '(state' → logprob: -12.771378517150879
    8. '                ' → logprob: -13.021378517150879
    9. '           ' → logprob: -13.271378517150879
    10. '       ' → logprob: -13.271378517150879

Token 2640: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -6.802049756515771e-05
    2. 'dict' → logprob: -9.625067710876465
    3. '[' → logprob: -14.625067710876465
    4. '           ' → logprob: -14.625067710876465
    5. 'Dict' → logprob: -15.250067710876465
    6. '```' → logprob: -15.625067710876465
    7. '_DICT' → logprob: -15.625067710876465
    8. 'ict' → logprob: -16.00006866455078
    9. '       ' → logprob: -16.37506866455078
    10. 'state' → logprob: -16.62506866455078

Token 2641: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. '```' → logprob: -14.000000953674316
    3. 'coins' → logprob: -14.500000953674316
    4. '[
' → logprob: -17.375001907348633
    5. '   ' → logprob: -18.625001907348633
    6. '
' → logprob: -19.125001907348633
    7. '\[' → logprob: -19.375001907348633
    8. 'Coins' → logprob: -19.500001907348633
    9. ' [' → logprob: -19.500001907348633
    10. ' coins' → logprob: -20.250001907348633

Token 2642: 'coins' (ID: 48264)
  Prédit: 'coins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.75
    3. '   ' → logprob: -17.625
    4. ' coins' → logprob: -17.875
    5. '
' → logprob: -18.125
    6. 'codes' → logprob: -18.375
    7. '```' → logprob: -19.5
    8. 'tokens' → logprob: -19.875
    9. '           ' → logprob: -21.0
    10. ' ' → logprob: -21.125

Token 2643: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04065198078751564
    2. '=' → logprob: -3.66565203666687
    3. ']' → logprob: -4.415651798248291
    4. ' =' → logprob: -7.540651798248291
    5. ']=' → logprob: -7.790651798248291
    6. '                   ' → logprob: -7.915651798248291
    7. '           ' → logprob: -8.16565227508545
    8. 'coins' → logprob: -8.16565227508545
    9. '               ' → logprob: -8.54065227508545
    10. ')' → logprob: -10.66565227508545

Token 2644: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12817543745040894
    2. '[' → logprob: -2.1281754970550537
    3. ' =' → logprob: -7.378175258636475
    4. '=
' → logprob: -8.753175735473633
    5. '                   ' → logprob: -9.003175735473633
    6. '           ' → logprob: -9.128175735473633
    7. '```' → logprob: -9.253175735473633
    8. 'coins' → logprob: -9.753175735473633
    9. '               ' → logprob: -10.503175735473633
    10. '[
' → logprob: -11.253175735473633

Token 2645: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.029856126755475998
    2. ' (' → logprob: -3.5298562049865723
    3. '           ' → logprob: -9.904855728149414
    4. '   ' → logprob: -10.529855728149414
    5. '               ' → logprob: -10.654855728149414
    6. '                   ' → logprob: -12.779855728149414
    7. '       ' → logprob: -13.404855728149414
    8. '(code' → logprob: -14.654855728149414
    9. '(co' → logprob: -15.279855728149414
    10. '(' → logprob: -16.529855728149414

Token 2646: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.45848218582978e-06
    2. '               ' → logprob: -13.50000286102295
    3. '                   ' → logprob: -14.75000286102295
    4. 'coins' → logprob: -14.75000286102295
    5. '           ' → logprob: -16.000001907348633
    6. ' c' → logprob: -16.750001907348633
    7. '   ' → logprob: -17.625001907348633
    8. '                               ' → logprob: -17.750001907348633
    9. '(c' → logprob: -18.000001907348633
    10. '                       ' → logprob: -18.000001907348633

Token 2647: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -2.248469718324486e-05
    2. 'c' → logprob: -11.000022888183594
    3. '_' → logprob: -13.375022888183594
    4. '300' → logprob: -14.125022888183594
    5. '5' → logprob: -14.375022888183594
    6. '50' → logprob: -15.000022888183594
    7. '(c' → logprob: -15.250022888183594
    8. 'u' → logprob: -15.250022888183594
    9. 's' → logprob: -15.375022888183594
    10. '   ' → logprob: -15.875022888183594

Token 2648: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.9153885558771435e-06
    2. '               ' → logprob: -12.875005722045898
    3. ' ,' → logprob: -13.000005722045898
    4. '           ' → logprob: -14.750005722045898
    5. '                   ' → logprob: -15.375005722045898
    6. ',
' → logprob: -15.625005722045898
    7. '```' → logprob: -15.625005722045898
    8. ',c' → logprob: -17.7500057220459
    9. '
' → logprob: -18.0000057220459
    10. '_,' → logprob: -18.1250057220459

Token 2649: ' expense' (ID: 29361)
  Prédit: 'expense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expense' → logprob: -0.029750952497124672
    2. ' expense' → logprob: -3.5297510623931885
    3. 'exp' → logprob: -15.40475082397461
    4. '               ' → logprob: -15.77975082397461
    5. 'expenses' → logprob: -16.77975082397461
    6. 'Expense' → logprob: -17.40475082397461
    7. '                ' → logprob: -17.77975082397461
    8. '           ' → logprob: -17.77975082397461
    9. '
' → logprob: -18.52975082397461
    10. '            ' → logprob: -18.65475082397461

Token 2650: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015950730070471764
    2. '               ' → logprob: -4.515950679779053
    3. '           ' → logprob: -6.015950679779053
    4. '                   ' → logprob: -6.640950679779053
    5. '       ' → logprob: -7.015950679779053
    6. ')
' → logprob: -9.390951156616211
    7. '                       ' → logprob: -9.640951156616211
    8. '                           ' → logprob: -10.265951156616211
    9. '                               ' → logprob: -11.015951156616211
    10. ')return' → logprob: -11.640951156616211

Token 2651: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2652: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.15196868777275085
    2. 'main' → logprob: -2.9019687175750732
    3. ' solve' → logprob: -3.0269687175750732
    4. 'def' → logprob: -4.401968479156494
    5. ' def' → logprob: -4.651968479156494
    6. 'solve' → logprob: -5.026968479156494
    7. '_main' → logprob: -6.151968479156494
    8. '```' → logprob: -6.526968479156494
    9. '__' → logprob: -6.651968479156494
    10. ' run' → logprob: -6.651968479156494

Token 2653: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03805606812238693
    2. '():
' → logprob: -3.2880561351776123
    3. '()' → logprob: -11.913056373596191
    4. 'def' → logprob: -12.913056373596191
    5. '():
' → logprob: -12.913056373596191
    6. '():

' → logprob: -13.663056373596191
    7. ' ():' → logprob: -14.163056373596191
    8. ':' → logprob: -15.538056373596191
    9. '().' → logprob: -15.788056373596191
    10. '();' → logprob: -16.038055419921875

Token 2654: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014524973928928375
    2. 'import' → logprob: -5.014524936676025
    3. '```' → logprob: -5.514524936676025
    4. 'prices' → logprob: -6.264524936676025
    5. 'def' → logprob: -7.139524936676025
    6. ' import' → logprob: -7.514524936676025
    7. ' prices' → logprob: -7.889524936676025
    8. '_prices' → logprob: -10.639525413513184
    9. ' def' → logprob: -10.889525413513184
    10. '`' → logprob: -11.139525413513184

Token 2655: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.033100586384534836
    2. '   ' → logprob: -3.6581006050109863
    3. ' import' → logprob: -5.158100605010986
    4. 'def' → logprob: -7.533100605010986
    5. '```' → logprob: -8.158100128173828
    6. 'n' → logprob: -8.658100128173828
    7. 'prices' → logprob: -11.283100128173828
    8. '	import' → logprob: -11.783100128173828
    9. ' n' → logprob: -12.908100128173828
    10. 'from' → logprob: -13.283100128173828

Token 2656: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -4.320199877838604e-07
    2. ' sys' → logprob: -14.75
    3. '=sys' → logprob: -18.625
    4. '(sys' → logprob: -20.375
    5. 'math' → logprob: -22.0
    6. '```' → logprob: -22.125
    7. '	sys' → logprob: -22.25
    8. 'stdin' → logprob: -23.75
    9. 'io' → logprob: -24.0
    10. '.sys' → logprob: -24.125

Token 2657: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07145246118307114
    2. 'input' → logprob: -2.6964523792266846
    3. ' input' → logprob: -6.946452617645264
    4. 'data' → logprob: -8.446452140808105
    5. 'n' → logprob: -9.071452140808105
    6. '```' → logprob: -9.321452140808105
    7. '
' → logprob: -10.321452140808105
    8. 'import' → logprob: -10.946452140808105
    9. 'def' → logprob: -10.946452140808105
    10. '    
' → logprob: -11.071452140808105

Token 2658: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003019660711288452
    2. 'input' → logprob: -6.6280198097229
    3. '```' → logprob: -7.0030198097229
    4. 'data' → logprob: -7.6280198097229
    5. 'lines' → logprob: -9.628019332885742
    6. 'for' → logprob: -10.253019332885742
    7. 'line' → logprob: -10.503019332885742
    8. ' lines' → logprob: -10.503019332885742
    9. '    
' → logprob: -10.753019332885742
    10. '``' → logprob: -10.753019332885742

Token 2659: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.5796095132827759
    2. '   ' → logprob: -0.8296095132827759
    3. 'data' → logprob: -6.329609394073486
    4. 'n' → logprob: -7.454609394073486
    5. 'prices' → logprob: -7.704609394073486
    6. ' input' → logprob: -7.954609394073486
    7. '
' → logprob: -8.454609870910645
    8. 'lines' → logprob: -8.954609870910645
    9. '```' → logprob: -10.079609870910645
    10. '    
' → logprob: -10.329609870910645

Token 2660: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13559554517269135
    2. '_data' → logprob: -3.2605955600738525
    3. '().' → logprob: -3.3855955600738525
    4. '_line' → logprob: -3.6355955600738525
    5. '=' → logprob: -4.635595321655273
    6. '_lines' → logprob: -4.885595321655273
    7. 'data' → logprob: -5.385595321655273
    8. '.readline' → logprob: -6.010595321655273
    9. ' =' → logprob: -6.510595321655273
    10. '.' → logprob: -7.635595321655273

Token 2661: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.006067682523280382
    2. ' sys' → logprob: -5.506067752838135
    3. 'input' → logprob: -6.256067752838135
    4. '=sys' → logprob: -10.131067276000977
    5. 'lambda' → logprob: -10.756067276000977
    6. ' input' → logprob: -12.381067276000977
    7. '(sys' → logprob: -13.506067276000977
    8. '	sys' → logprob: -13.756067276000977
    9. '   ' → logprob: -15.631067276000977
    10. ' lambda' → logprob: -15.631067276000977

Token 2662: '.stdin' (ID: 93480)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.20435531437397003
    2. '.' → logprob: -2.329355239868164
    3. '().' → logprob: -2.454355239868164
    4. '()' → logprob: -7.829355239868164
    5. '.read' → logprob: -8.079355239868164
    6. '.readlines' → logprob: -8.579355239868164
    7. '   ' → logprob: -8.829355239868164
    8. '.
' → logprob: -9.079355239868164
    9. '```' → logprob: -9.079355239868164
    10. '()
' → logprob: -9.079355239868164

Token 2663: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.04946080222725868
    2. 'read' → logprob: -3.2994608879089355
    3. '_read' → logprob: -5.6744608879089355
    4. ' =' → logprob: -6.4244608879089355
    5. '<|end|>' → logprob: -6.4244608879089355
    6. ' readline' → logprob: -7.0494608879089355
    7. '=' → logprob: -7.1744608879089355
    8. '```' → logprob: -7.5494608879089355
    9. '
' → logprob: -7.9244608879089355
    10. '_' → logprob: -8.049460411071777

Token 2664: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006933589465916157
    2. 'n' → logprob: -5.006933689117432
    3. 'num' → logprob: -9.006933212280273
    4. '
' → logprob: -10.256933212280273
    5. '    
' → logprob: -11.131933212280273
    6. 'def' → logprob: -11.256933212280273
    7. '```' → logprob: -11.381933212280273
    8. ' n' → logprob: -11.506933212280273
    9. '	n' → logprob: -12.881933212280273
    10. 'line' → logprob: -12.881933212280273

Token 2665: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028853563126176596
    2. 'n' → logprob: -5.877885341644287
    3. '
' → logprob: -10.877885818481445
    4. 'def' → logprob: -10.877885818481445
    5. '    
' → logprob: -11.127885818481445
    6. 'num' → logprob: -11.252885818481445
    7. '(n' → logprob: -11.877885818481445
    8. '```' → logprob: -13.127885818481445
    9. '	n' → logprob: -13.127885818481445
    10. ' n' → logprob: -13.752885818481445

Token 2666: ' results' (ID: 4376)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.015827063471078873
    2. '   ' → logprob: -4.265827178955078
    3. 't' → logprob: -6.765827178955078
    4. 'N' → logprob: -7.765827178955078
    5. ' n' → logprob: -10.265827178955078
    6. 'num' → logprob: -10.640827178955078
    7. 'T' → logprob: -11.265827178955078
    8. '
' → logprob: -11.765827178955078
    9. '```' → logprob: -12.265827178955078
    10. '	n' → logprob: -14.515827178955078

Token 2667: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5519790053367615
    2. '=' → logprob: -1.0519790649414062
    3. ' =' → logprob: -3.4269790649414062
    4. '=[]' → logprob: -3.6769790649414062
    5. '   ' → logprob: -4.801979064941406
    6. '(' → logprob: -6.176979064941406
    7. '[]' → logprob: -6.301979064941406
    8. '=[]
' → logprob: -6.676979064941406
    9. ':' → logprob: -7.176979064941406
    10. ',' → logprob: -7.426979064941406

Token 2668: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.001934469910338521
    2. '[]
' → logprob: -6.25193452835083
    3. ' []' → logprob: -12.751934051513672
    4. '[' → logprob: -13.501934051513672
    5. '[]

' → logprob: -14.126934051513672
    6. '{}' → logprob: -14.251934051513672
    7. '([]' → logprob: -15.876934051513672
    8. '()' → logprob: -16.126934051513672
    9. '[]"' → logprob: -16.876934051513672
    10. '[])' → logprob: -17.001934051513672

Token 2669: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5766268372535706
    2. 'n' → logprob: -0.8266268372535706
    3. 't' → logprob: -8.076626777648926
    4. ' n' → logprob: -8.451626777648926
    5. 'N' → logprob: -9.701626777648926
    6. '```' → logprob: -9.951626777648926
    7. 'for' → logprob: -10.826626777648926
    8. 'num' → logprob: -11.201626777648926
    9. '
' → logprob: -12.076626777648926
    10. '	n' → logprob: -12.326626777648926

Token 2670: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16243010759353638
    2. '   ' → logprob: -2.1624300479888916
    3. 'while' (adapté à ' while') → logprob: -3.9124300479888916
    4. 't' → logprob: -4.537430286407471
    5. 'for' → logprob: -6.412430286407471
    6. 'T' → logprob: -7.037430286407471
    7. '```' → logprob: -7.162430286407471
    8. 'num' → logprob: -7.662430286407471
    9. 'N' → logprob: -8.162429809570312
    10. ' n' → logprob: -10.037429809570312

Token 2671: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.004612876567989588
    2. ' True' → logprob: -6.254612922668457
    3. 'line' → logprob: -6.504612922668457
    4. '(True' → logprob: -6.754612922668457
    5. '(line' → logprob: -11.504612922668457
    6. '   ' → logprob: -12.004612922668457
    7. ' line' → logprob: -13.879612922668457
    8. '1' → logprob: -14.379612922668457
    9. '
' → logprob: -14.629612922668457
    10. '=True' → logprob: -15.629612922668457

Token 2672: ':
' (ID: 734)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.7263855338096619
    2. '():' → logprob: -1.1013855934143066
    3. '       ' → logprob: -2.4763855934143066
    4. ':
' → logprob: -3.2263855934143066
    5. '   ' → logprob: -3.7263855934143066
    6. ':' → logprob: -3.8513855934143066
    7. '(' → logprob: -4.851385593414307
    8. ',' → logprob: -6.226385593414307
    9. ' line' → logprob: -7.101385593414307
    10. '()' → logprob: -7.101385593414307

Token 2673: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06824295967817307
    2. 'line' → logprob: -2.8182430267333984
    3. ' line' → logprob: -5.193243026733398
    4. '       ' → logprob: -8.193243026733398
    5. '	line' → logprob: -8.443243026733398
    6. '(line' → logprob: -9.318243026733398
    7. '```' → logprob: -9.693243026733398
    8. '#line' → logprob: -10.068243026733398
    9. '_line' → logprob: -12.568243026733398
    10. 'try' → logprob: -12.693243026733398

Token 2674: ' n' (ID: 297)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0167874526232481
    2. '   ' → logprob: -4.266787528991699
    3. ' line' → logprob: -6.016787528991699
    4. 'n' (adapté à ' n') → logprob: -8.8917875289917
    5. '```' → logprob: -10.8917875289917
    6. '	line' → logprob: -11.2667875289917
    7. 's' → logprob: -11.7667875289917
    8. 'N' → logprob: -13.2667875289917
    9. 'l' → logprob: -13.8917875289917
    10. '(line' → logprob: -14.3917875289917

Token 2675: '_line' (ID: 14418)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08052179217338562
    2. ' =' → logprob: -2.580521821975708
    3. '==' → logprob: -7.330521583557129
    4. ' ==' → logprob: -7.330521583557129
    5. '=
' → logprob: -9.455521583557129
    6. '=int' → logprob: -10.080521583557129
    7. '   ' → logprob: -10.330521583557129
    8. '>' → logprob: -10.705521583557129
    9. ' =
' → logprob: -10.830521583557129
    10. ',' → logprob: -10.830521583557129

Token 2676: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04314751178026199
    2. ' =' → logprob: -3.168147563934326
    3. '=line' → logprob: -9.668147087097168
    4. '=n' → logprob: -9.918147087097168
    5. 'n' → logprob: -11.293147087097168
    6. '=input' → logprob: -12.418147087097168
    7. '   ' → logprob: -12.543147087097168
    8. '==' → logprob: -12.543147087097168
    9. '       ' → logprob: -12.668147087097168
    10. '=
' → logprob: -13.293147087097168

Token 2677: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0011705794604495168
    2. ' input' → logprob: -6.751170635223389
    3. '=input' → logprob: -15.12617015838623
    4. 'sys' → logprob: -16.251171112060547
    5. '(input' → logprob: -17.001171112060547
    6. '<input' → logprob: -18.626171112060547
    7. 'stdin' → logprob: -19.251171112060547
    8. '   ' → logprob: -20.126171112060547
    9. '=' → logprob: -20.876171112060547
    10. '	input' → logprob: -21.376171112060547

Token 2678: '()
' (ID: 1234)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07597807794809341
    2. '()
' → logprob: -3.0759780406951904
    3. ' =' → logprob: -4.0759782791137695
    4. '()' → logprob: -5.2009782791137695
    5. '().' → logprob: -5.8259782791137695
    6. '=line' → logprob: -7.7009782791137695
    7. '=n' → logprob: -7.9509782791137695
    8. '=
' → logprob: -8.32597827911377
    9. '.strip' → logprob: -8.45097827911377
    10. '   ' → logprob: -9.07597827911377

Token 2679: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006830069469287992
    2. ' if' → logprob: -7.500682830810547
    3. '   ' → logprob: -9.875682830810547
    4. 'if' → logprob: -10.250682830810547
    5. '```' → logprob: -10.500682830810547
    6. '​' → logprob: -12.375682830810547
    7. '           ' → logprob: -12.750682830810547
    8. ':' → logprob: -13.500682830810547
    9. ',' → logprob: -13.750682830810547
    10. 'If' → logprob: -14.250682830810547

Token 2680: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1077267974615097
    2. ' if' → logprob: -2.857726812362671
    3. '       ' → logprob: -3.107726812362671
    4. '   ' → logprob: -10.60772705078125
    5. '	if' → logprob: -14.73272705078125
    6. '           ' → logprob: -15.85772705078125
    7. 'n' → logprob: -16.73272705078125
    8. '```' → logprob: -16.73272705078125
    9. 'If' → logprob: -16.98272705078125
    10. '
' → logprob: -16.98272705078125

Token 2681: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.04596605896949768
    2. 'n' → logprob: -3.795966148376465
    3. ' not' → logprob: -3.795966148376465
    4. ' n' → logprob: -12.795966148376465
    5. '       ' → logprob: -15.920966148376465
    6. '   ' → logprob: -16.04596519470215
    7. '	not' → logprob: -16.54596519470215
    8. '(not' → logprob: -17.04596519470215
    9. 'Not' → logprob: -18.67096519470215
    10. ' ' → logprob: -18.79596519470215

Token 2682: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018150178715586662
    2. ' n' → logprob: -4.018150329589844
    3. '
' → logprob: -15.643150329589844
    4. '_n' → logprob: -16.393150329589844
    5. '	n' → logprob: -17.268150329589844
    6. '(n' → logprob: -18.143150329589844
    7. ')n' → logprob: -18.268150329589844
    8. ' ' → logprob: -18.393150329589844
    9. '\n' → logprob: -18.518150329589844
    10. '   ' → logprob: -19.143150329589844

Token 2683: '_line' (ID: 14418)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.753395140171051
    2. '_line' → logprob: -1.6283950805664062
    3. '\n' → logprob: -2.5033950805664062
    4. '   ' → logprob: -3.1283950805664062
    5. '_n' → logprob: -3.3783950805664062
    6. '=' → logprob: -3.7533950805664062
    7. ':
' → logprob: -3.8783950805664062
    8. '_lines' → logprob: -3.8783950805664062
    9. ' =' → logprob: -4.253395080566406
    10. ' n' → logprob: -4.378395080566406

Token 2684: ':
' (ID: 734)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.18692685663700104
    2. ':
' → logprob: -1.8119268417358398
    3. ':' → logprob: -5.31192684173584
    4. ' or' → logprob: -6.81192684173584
    5. '.rstrip' → logprob: -7.43692684173584
    6. '.' → logprob: -8.56192684173584
    7. '.startswith' → logprob: -8.81192684173584
    8. '       ' → logprob: -9.81192684173584
    9. 'strip' → logprob: -9.93692684173584
    10. '   ' → logprob: -11.06192684173584

Token 2685: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019488852471113205
    2. '       ' → logprob: -4.01948881149292
    3. 'break' → logprob: -6.89448881149292
    4. '   ' → logprob: -8.894489288330078
    5. ' break' → logprob: -8.894489288330078
    6. ':
' → logprob: -10.644489288330078
    7. ':' → logprob: -11.894489288330078
    8. '               ' → logprob: -12.644489288330078
    9. '_break' → logprob: -12.894489288330078
    10. 'continue' → logprob: -13.144489288330078

Token 2686: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.1192881241440773
    2. '       ' → logprob: -2.619288206100464
    3. ' break' → logprob: -3.869288206100464
    4. '           ' → logprob: -3.994288206100464
    5. '   ' → logprob: -8.369288444519043
    6. '	break' → logprob: -10.369288444519043
    7. '_break' → logprob: -11.369288444519043
    8. '               ' → logprob: -11.619288444519043
    9. 'Break' → logprob: -12.119288444519043
    10. 'continue' → logprob: -12.619288444519043

Token 2687: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000104616025055293
    2. 'n' → logprob: -10.250104904174805
    3. ',' → logprob: -10.875104904174805
    4. '   ' → logprob: -11.000104904174805
    5. '        
' → logprob: -11.750104904174805
    6. '           ' → logprob: -12.000104904174805
    7. '<|end|>' → logprob: -12.125104904174805
    8. ' n' → logprob: -12.500104904174805
    9. '=' → logprob: -12.625104904174805
    10. ' =' → logprob: -13.625104904174805

Token 2688: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015771172475069761
    2. 'n' → logprob: -6.501576900482178
    3. ' n' → logprob: -10.126577377319336
    4. '   ' → logprob: -10.626577377319336
    5. '```' → logprob: -11.751577377319336
    6. '           ' → logprob: -13.751577377319336
    7. '        
' → logprob: -14.876577377319336
    8. '
' → logprob: -15.126577377319336
    9. 'try' → logprob: -15.126577377319336
    10. ',' → logprob: -16.001577377319336

Token 2689: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.014606730081140995
    2. '       ' → logprob: -4.264606952667236
    3. ' n' → logprob: -8.139606475830078
    4. '   ' → logprob: -9.389606475830078
    5. 'try' → logprob: -9.764606475830078
    6. 'if' → logprob: -12.264606475830078
    7. '           ' → logprob: -12.764606475830078
    8. '```' → logprob: -13.264606475830078
    9. '
' → logprob: -15.514606475830078
    10. ' if' → logprob: -15.764606475830078

Token 2690: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4774073362350464
    2. ' =' → logprob: -0.9774073362350464
    3. '=int' → logprob: -6.602407455444336
    4. '==' → logprob: -6.852407455444336
    5. ' ==' → logprob: -7.852407455444336
    6. '   ' → logprob: -8.852407455444336
    7. ')' → logprob: -9.602407455444336
    8. ',' → logprob: -10.102407455444336
    9. '.strip' → logprob: -10.102407455444336
    10. '       ' → logprob: -10.477407455444336

Token 2691: ' n' (ID: 297)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0011510556796565652
    2. ' int' → logprob: -7.251151084899902
    3. 'n' → logprob: -7.751151084899902
    4. ' n' → logprob: -11.626151084899902
    5. '=int' → logprob: -13.876151084899902
    6. '
' → logprob: -14.751151084899902
    7. '(int' → logprob: -15.751151084899902
    8. '```' → logprob: -16.376150131225586
    9. 'len' → logprob: -16.501150131225586
    10. '[int' → logprob: -16.501150131225586

Token 2692: '_line' (ID: 14418)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.043596453964710236
    2. '.readline' → logprob: -3.9185965061187744
    3. '=' → logprob: -4.543596267700195
    4. ' =' → logprob: -5.043596267700195
    5. '.' → logprob: -7.043596267700195
    6. '.rstrip' → logprob: -7.043596267700195
    7. '_line' → logprob: -7.168596267700195
    8. 'strip' → logprob: -7.168596267700195
    9. '==' → logprob: -8.043596267700195
    10. '   ' → logprob: -8.168596267700195

Token 2693: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.02797003649175167
    2. '.rstrip' → logprob: -4.152969837188721
    3. '.' → logprob: -4.902969837188721
    4. ' =' → logprob: -6.652969837188721
    5. '().' → logprob: -7.277969837188721
    6. '.readline' → logprob: -7.527969837188721
    7. '   ' → logprob: -7.902969837188721
    8. 'tokens' → logprob: -8.027970314025879
    9. '=' → logprob: -8.152970314025879
    10. 'token' → logprob: -8.902970314025879

Token 2694: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.6564338803291321
    2. '()' → logprob: -1.4064338207244873
    3. '()==' → logprob: -1.6564338207244873
    4. '==' → logprob: -3.1564338207244873
    5. '```' → logprob: -6.781434059143066
    6. 'and' → logprob: -7.906434059143066
    7. '=' → logprob: -8.281434059143066
    8. ' ==' → logprob: -8.406434059143066
    9. '().' → logprob: -9.031434059143066
    10. '==
' → logprob: -9.156434059143066

Token 2695: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09544540196657181
    2. 'if' → logprob: -2.720445394515991
    3. ' if' → logprob: -4.72044563293457
    4. '
' → logprob: -4.84544563293457
    5. '```' → logprob: -5.09544563293457
    6. ' =' → logprob: -6.97044563293457
    7. '=' → logprob: -7.72044563293457
    8. '        
' → logprob: -9.09544563293457
    9. '``' → logprob: -9.09544563293457
    10. ',' → logprob: -9.34544563293457

Token 2696: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0021860685665160418
    2. ' if' → logprob: -6.252186298370361
    3. '       ' → logprob: -8.627185821533203
    4. '```' → logprob: -9.627185821533203
    5. '           ' → logprob: -11.502185821533203
    6. 'If' → logprob: -13.877185821533203
    7. ';if' → logprob: -14.752185821533203
    8. '@if' → logprob: -15.252185821533203
    9. '``' → logprob: -15.627185821533203
    10. '        
' → logprob: -15.752185821533203

Token 2697: ' n' (ID: 297)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.26652806997299194
    2. 'n' → logprob: -1.7665281295776367
    3. ' not' → logprob: -2.7665281295776367
    4. ' n' → logprob: -8.766528129577637
    5. '''' → logprob: -13.766528129577637
    6. '```' → logprob: -14.266528129577637
    7. '   ' → logprob: -14.641528129577637
    8. 'n't' → logprob: -14.766528129577637
    9. '(n' → logprob: -14.891528129577637
    10. '==' → logprob: -14.891528129577637

Token 2698: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07931042462587357
    2. ' ==' → logprob: -2.579310417175293
    3. '=='' → logprob: -8.704310417175293
    4. '=' → logprob: -9.579310417175293
    5. '==
' → logprob: -9.829310417175293
    6. '```' → logprob: -9.829310417175293
    7. '=="' → logprob: -10.329310417175293
    8. '<=' → logprob: -11.829310417175293
    9. '!=' → logprob: -11.829310417175293
    10. '()==' → logprob: -12.204310417175293

Token 2699: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4263952672481537
    2. '"' → logprob: -1.426395297050476
    3. '''' → logprob: -2.4263951778411865
    4. '0' → logprob: -4.301395416259766
    5. '""' → logprob: -5.301395416259766
    6. '''
' → logprob: -10.426395416259766
    7. '"":' → logprob: -10.551395416259766
    8. ' '' → logprob: -12.051395416259766
    9. '`' → logprob: -12.301395416259766
    10. ' '':
' → logprob: -13.176395416259766

Token 2700: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3296646475791931
    2. '\n' → logprob: -2.579664707183838
    3. ''\' → logprob: -2.579664707183838
    4. ''' → logprob: -2.704664707183838
    5. '':
' → logprob: -2.954664707183838
    6. '':' → logprob: -5.954664707183838
    7. '\r' → logprob: -6.204664707183838
    8. '"' → logprob: -6.204664707183838
    9. '"\' → logprob: -6.329664707183838
    10. ''
' → logprob: -7.454664707183838

Token 2701: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.25507140159606934
    2. '\n' → logprob: -1.5050714015960693
    3. '':' → logprob: -6.505071640014648
    4. ':
' → logprob: -7.255071640014648
    5. ''):
' → logprob: -7.380071640014648
    6. '       ' → logprob: -9.505071640014648
    7. '):
' → logprob: -10.130071640014648
    8. ''' → logprob: -10.255071640014648
    9. '':
' → logprob: -10.255071640014648
    10. '\r' → logprob: -10.505071640014648

Token 2702: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003261679667048156
    2. '       ' → logprob: -8.250326156616211
    3. '		' → logprob: -10.625326156616211
    4. 'continue' → logprob: -11.375326156616211
    5. '               ' → logprob: -12.000326156616211
    6. 'break' → logprob: -12.125326156616211
    7. ':' → logprob: -12.500326156616211
    8. ':
' → logprob: -12.625326156616211
    9. '	       ' → logprob: -12.625326156616211
    10. '```' → logprob: -13.250326156616211

Token 2703: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.2545720934867859
    2. '           ' → logprob: -2.0045721530914307
    3. '       ' → logprob: -2.7545721530914307
    4. '	break' → logprob: -4.379571914672852
    5. ' break' → logprob: -4.629571914672852
    6. 'return' → logprob: -6.004571914672852
    7. '		' → logprob: -7.754571914672852
    8. '   ' → logprob: -8.254571914672852
    9. '               ' → logprob: -8.379571914672852
    10. '
' → logprob: -8.629571914672852

Token 2704: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00030400342075154185
    2. 'n' → logprob: -8.625304222106934
    3. '```' → logprob: -9.625304222106934
    4. '   ' → logprob: -10.875304222106934
    5. '
' → logprob: -10.875304222106934
    6. '        
' → logprob: -11.750304222106934
    7. ',' → logprob: -12.375304222106934
    8. ' n' → logprob: -13.125304222106934
    9. '           ' → logprob: -13.250304222106934
    10. '`' → logprob: -14.000304222106934

Token 2705: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21595197916030884
    2. '```' → logprob: -1.965951919555664
    3. 'n' → logprob: -2.965951919555664
    4. '``' → logprob: -6.965951919555664
    5. 'price' → logprob: -7.965951919555664
    6. ' n' → logprob: -8.215951919555664
    7. '   ' → logprob: -8.215951919555664
    8. '`' → logprob: -8.340951919555664
    9. 'prices' → logprob: -8.465951919555664
    10. 'num' → logprob: -8.965951919555664

Token 2706: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.10176913440227509
    2. '       ' → logprob: -2.476769208908081
    3. ' n' → logprob: -5.101768970489502
    4. 'prices' → logprob: -5.476768970489502
    5. 'num' → logprob: -6.351768970489502
    6. 'price' → logprob: -8.22676944732666
    7. ' prices' → logprob: -8.72676944732666
    8. '   ' → logprob: -8.97676944732666
    9. '```' → logprob: -9.85176944732666
    10. 'count' → logprob: -10.10176944732666

Token 2707: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38743796944618225
    2. ' =' → logprob: -1.1374379396438599
    3. '=int' → logprob: -7.51243782043457
    4. 'int' → logprob: -11.63743782043457
    5. '   ' → logprob: -12.76243782043457
    6. 'n' → logprob: -13.01243782043457
    7. '=
' → logprob: -13.76243782043457
    8. 'num' → logprob: -13.88743782043457
    9. '       ' → logprob: -14.13743782043457
    10. ',' → logprob: -14.26243782043457

Token 2708: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.2729995988775045e-06
    2. ' int' → logprob: -12.000006675720215
    3. '[int' → logprob: -17.5000057220459
    4. '(int' → logprob: -19.0000057220459
    5. '=int' → logprob: -19.3750057220459
    6. '<int' → logprob: -19.5000057220459
    7. 'n' → logprob: -20.0000057220459
    8. '       ' → logprob: -21.0000057220459
    9. 'len' → logprob: -21.2500057220459
    10. '	int' → logprob: -21.3750057220459

Token 2709: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.31326377391815186
    2. 'n' → logprob: -1.3132637739181519
    3. ' n' → logprob: -13.438263893127441
    4. '(' → logprob: -15.813263893127441
    5. '_n' → logprob: -16.188262939453125
    6. '`' → logprob: -16.188262939453125
    7. '
' → logprob: -16.313262939453125
    8. ')n' → logprob: -16.313262939453125
    9. '```' → logprob: -16.563262939453125
    10. '	n' → logprob: -17.813262939453125

Token 2710: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.42890942096710205
    2. ')' → logprob: -1.053909420967102
    3. ')n' → logprob: -9.553909301757812
    4. '(n' → logprob: -9.928909301757812
    5. ')
' → logprob: -10.053909301757812
    6. 'n' → logprob: -12.053909301757812
    7. ')>
' → logprob: -12.178909301757812
    8. ')`
' → logprob: -12.303909301757812
    9. '())
' → logprob: -12.428909301757812
    10. ')`' → logprob: -12.678909301757812

Token 2711: '       ' (ID: 309)
  Prédit: 'prices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prices' → logprob: -0.7757713198661804
    2. '   ' → logprob: -1.1507713794708252
    3. '       ' → logprob: -1.5257713794708252
    4. ' prices' → logprob: -6.025771141052246
    5. 'price' → logprob: -6.900771141052246
    6. '_prices' → logprob: -6.900771141052246
    7. '```' → logprob: -8.025771141052246
    8. 'coins' → logprob: -8.400771141052246
    9. 'pr' → logprob: -8.650771141052246
    10. '	price' → logprob: -8.900771141052246

Token 2712: ' prices' (ID: 8451)
  Prédit: 'prices'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prices' (adapté à ' prices') → logprob: -8.85235276655294e-05
    2. '       ' → logprob: -10.000088691711426
    3. 'pr' → logprob: -10.500088691711426
    4. '   ' → logprob: -11.625088691711426
    5. 'price' → logprob: -12.625088691711426
    6. ' prices' → logprob: -13.000088691711426
    7. '_prices' → logprob: -14.875088691711426
    8. 'coins' → logprob: -15.000088691711426
    9. 'for' → logprob: -15.875088691711426
    10. 'prix' → logprob: -16.50008773803711

Token 2713: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1821914166212082
    2. ' =' → logprob: -1.8071913719177246
    3. '=[]' → logprob: -6.057191371917725
    4. '=[]
' → logprob: -10.182191848754883
    5. '   ' → logprob: -10.557191848754883
    6. '[]' → logprob: -10.682191848754883
    7. '       ' → logprob: -12.682191848754883
    8. '_list' → logprob: -13.307191848754883
    9. '()' → logprob: -13.432191848754883
    10. '	' → logprob: -13.432191848754883

Token 2714: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4058830738067627
    2. '[list' → logprob: -1.4058830738067627
    3. '[int' → logprob: -2.6558830738067627
    4. '[n' → logprob: -5.155882835388184
    5. '[]' → logprob: -5.155882835388184
    6. '[List' → logprob: -6.655882835388184
    7. '[str' → logprob: -6.655882835388184
    8. '[]
' → logprob: -7.030882835388184
    9. '[
' → logprob: -7.155882835388184
    10. '[line' → logprob: -8.030882835388184

Token 2715: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5354591012001038
    2. 'for' → logprob: -1.035459041595459
    3. ' for' → logprob: -2.910459041595459
    4. '```' → logprob: -5.535459041595459
    5. '	for' → logprob: -7.410459041595459
    6. '   ' → logprob: -8.410459518432617
    7. '	' → logprob: -8.910459518432617
    8. '``' → logprob: -9.910459518432617
    9. '<|end|>' → logprob: -10.785459518432617
    10. '           ' → logprob: -10.910459518432617

Token 2716: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0032021927181631327
    2. '       ' → logprob: -5.753201961517334
    3. ' for' → logprob: -10.753202438354492
    4. '   ' → logprob: -13.378202438354492
    5. 'while' → logprob: -13.753202438354492
    6. '	for' → logprob: -14.503202438354492
    7. '
' → logprob: -18.128202438354492
    8. '           ' → logprob: -18.253202438354492
    9. '```' → logprob: -19.128202438354492
    10. '	' → logprob: -19.628202438354492

Token 2717: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00011868205183418468
    2. '_i' → logprob: -9.875118255615234
    3. '_
' → logprob: -10.500118255615234
    4. '
' → logprob: -11.250118255615234
    5. '_range' → logprob: -12.000118255615234
    6. '_in' → logprob: -12.000118255615234
    7. ' _' → logprob: -12.750118255615234
    8. '_=' → logprob: -13.125118255615234
    9. '`' → logprob: -14.000118255615234
    10. '_j' → logprob: -14.000118255615234

Token 2718: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0038414057344198227
    2. 'in' → logprob: -5.628841400146484
    3. '_' → logprob: -8.503841400146484
    4. 'i' → logprob: -11.003841400146484
    5. 'range' → logprob: -11.003841400146484
    6. ' ' → logprob: -13.878841400146484
    7. ' _' → logprob: -14.003841400146484
    8. 'n' → logprob: -14.253841400146484
    9. '
' → logprob: -14.253841400146484
    10. 'In' → logprob: -15.003841400146484

Token 2719: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00021593389101326466
    2. ' range' → logprob: -8.500215530395508
    3. '_' → logprob: -12.250215530395508
    4. '_range' → logprob: -12.375215530395508
    5. '
' → logprob: -12.625215530395508
    6. '	range' → logprob: -16.125215530395508
    7. '(range' → logprob: -18.500215530395508
    8. '0' → logprob: -18.625215530395508
    9. '```' → logprob: -18.750215530395508
    10. '   ' → logprob: -19.625215530395508

Token 2720: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.927930654550437e-05
    2. '(n' → logprob: -11.000029563903809
    3. ' n' → logprob: -11.750029563903809
    4. '_n' → logprob: -12.500029563903809
    5. 'range' → logprob: -14.125029563903809
    6. '	n' → logprob: -16.250028610229492
    7. '
' → logprob: -17.250028610229492
    8. 'int' → logprob: -17.250028610229492
    9. ')n' → logprob: -17.625028610229492
    10. '   ' → logprob: -17.625028610229492

Token 2721: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.754065752029419
    2. '():
' → logprob: -0.754065752029419
    3. '       ' → logprob: -3.379065752029419
    4. '           ' → logprob: -4.75406551361084
    5. '()):
' → logprob: -4.87906551361084
    6. ':
' → logprob: -5.75406551361084
    7. '()' → logprob: -6.25406551361084
    8. '):' → logprob: -7.00406551361084
    9. ':' → logprob: -7.87906551361084
    10. ''):
' → logprob: -8.12906551361084

Token 2722: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003335037035867572
    2. '```' → logprob: -6.253334999084473
    3. '   ' → logprob: -7.253334999084473
    4. ' line' → logprob: -8.753334999084473
    5. 'line' → logprob: -8.878334999084473
    6. '	       ' → logprob: -9.003334999084473
    7. '       ' → logprob: -9.253334999084473
    8. 'price' → logprob: -10.003334999084473
    9. 'prices' → logprob: -10.628334999084473
    10. '	   ' → logprob: -11.378334999084473

Token 2723: ' p' (ID: 275)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.11849503964185715
    2. 'p' (adapté à ' p') → logprob: -2.368494987487793
    3. 'line' → logprob: -4.118494987487793
    4. ' price' → logprob: -7.118494987487793
    5. '           ' → logprob: -7.368494987487793
    6. ' line' → logprob: -9.243494987487793
    7. 'prices' → logprob: -9.618494987487793
    8. ' p' → logprob: -9.618494987487793
    9. 'pr' → logprob: -9.993494987487793
    10. '   ' → logprob: -9.993494987487793

Token 2724: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5047613382339478
    2. '=' → logprob: -1.0047613382339478
    3. 'rice' → logprob: -3.629761219024658
    4. '=int' → logprob: -5.879761219024658
    5. 'r' → logprob: -8.379761695861816
    6. '   ' → logprob: -9.129761695861816
    7. '=p' → logprob: -9.379761695861816
    8. '=line' → logprob: -9.379761695861816
    9. 'iece' → logprob: -9.504761695861816
    10. '=input' → logprob: -9.879761695861816

Token 2725: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.982165698194876e-05
    2. ' int' → logprob: -9.500080108642578
    3. '           ' → logprob: -12.625080108642578
    4. 'input' → logprob: -14.625080108642578
    5. '=int' → logprob: -15.000080108642578
    6. '(int' → logprob: -15.250080108642578
    7. '[int' → logprob: -15.250080108642578
    8. '<int' → logprob: -15.500080108642578
    9. '
' → logprob: -16.250080108642578
    10. '	int' → logprob: -17.625080108642578

Token 2726: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4741031527519226
    2. '(input' → logprob: -0.9741031527519226
    3. '=input' → logprob: -11.599102973937988
    4. ' input' → logprob: -11.724102973937988
    5. '(' → logprob: -13.224102973937988
    6. '()
' → logprob: -13.349102973937988
    7. '(
' → logprob: -13.474102973937988
    8. 'sys' → logprob: -14.099102973937988
    9. '()' → logprob: -14.224102973937988
    10. '<input' → logprob: -14.599102973937988

Token 2727: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1375293880701065
    2. '().' → logprob: -2.6375293731689453
    3. '())
' → logprob: -2.8875293731689453
    4. '()' → logprob: -6.762529373168945
    5. ')' → logprob: -10.262529373168945
    6. '()
' → logprob: -10.637529373168945
    7. '())
' → logprob: -11.387529373168945
    8. ' ())' → logprob: -12.262529373168945
    9. '())

' → logprob: -12.887529373168945
    10. '(' → logprob: -13.387529373168945

Token 2728: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002497767563909292
    2. '       ' → logprob: -8.625249862670898
    3. '<|end|>' → logprob: -10.250249862670898
    4. '```' → logprob: -11.750249862670898
    5. '	       ' → logprob: -11.875249862670898
    6. '<|end|>' → logprob: -12.000249862670898
    7. '               ' → logprob: -12.375249862670898
    8. 'prices' → logprob: -13.125249862670898
    9. ')' → logprob: -13.625249862670898
    10. '          ' → logprob: -13.750249862670898

Token 2729: ' prices' (ID: 8451)
  Prédit: 'prices'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prices' (adapté à ' prices') → logprob: -0.10053412616252899
    2. '           ' → logprob: -2.350534200668335
    3. ' prices' → logprob: -8.850534439086914
    4. 'pr' → logprob: -8.850534439086914
    5. '       ' → logprob: -10.475534439086914
    6. '_prices' → logprob: -11.850534439086914
    7. 'prijzen' → logprob: -14.100534439086914
    8. '(pr' → logprob: -14.225534439086914
    9. 'price' → logprob: -14.475534439086914
    10. '   ' → logprob: -14.475534439086914

Token 2730: '.append' (ID: 3709)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47746989130973816
    2. '.append' → logprob: -0.9774699211120605
    3. '       ' → logprob: -6.3524699211120605
    4. 'prices' → logprob: -8.102469444274902
    5. '<|end|>' → logprob: -8.477469444274902
    6. '<|end|>' → logprob: -8.477469444274902
    7. '.' → logprob: -8.727469444274902
    8. '```' → logprob: -8.977469444274902
    9. ')' → logprob: -8.977469444274902
    10. '=' → logprob: -9.602469444274902

Token 2731: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04858873412013054
    2. '(p' → logprob: -3.048588752746582
    3. ' p' → logprob: -13.548588752746582
    4. '           ' → logprob: -17.798587799072266
    5. ')p' → logprob: -18.923587799072266
    6. '	p' → logprob: -19.173587799072266
    7. '       ' → logprob: -19.423587799072266
    8. '(' → logprob: -19.548587799072266
    9. '   ' → logprob: -19.923587799072266
    10. '(int' → logprob: -20.298587799072266

Token 2732: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.057906847447156906
    2. '       ' → logprob: -3.0579068660736084
    3. ')
' → logprob: -4.682906627655029
    4. '<|end|>' → logprob: -11.182907104492188
    5. '   ' → logprob: -13.057907104492188
    6. '<|end|>' → logprob: -13.682907104492188
    7. ' )' → logprob: -14.182907104492188
    8. ')
' → logprob: -14.307907104492188
    9. '')' → logprob: -14.432907104492188
    10. '`)' → logprob: -14.432907104492188

Token 2733: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001515100128017366
    2. '   ' → logprob: -7.126514911651611
    3. '
' → logprob: -7.751514911651611
    4. '<|end|>' → logprob: -9.00151538848877
    5. '```' → logprob: -9.00151538848877
    6. '        
' → logprob: -11.75151538848877
    7. '    
' → logprob: -12.87651538848877
    8. ')' → logprob: -13.00151538848877
    9. '
' → logprob: -13.00151538848877
    10. '           ' → logprob: -13.12651538848877

Token 2734: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.5255860686302185
    2. '   ' → logprob: -1.1505861282348633
    3. ' solver' → logprob: -2.4005861282348633
    4. '
' → logprob: -7.650586128234863
    5. '       ' → logprob: -8.275586128234863
    6. 'solution' → logprob: -8.400586128234863
    7. ' solution' → logprob: -8.775586128234863
    8. 'payment' → logprob: -9.150586128234863
    9. ' strategy' → logprob: -9.150586128234863
    10. 'strategy' → logprob: -9.275586128234863

Token 2735: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.632646381855011
    2. '=' → logprob: -0.757646381855011
    3. '   ' → logprob: -10.632646560668945
    4. '=s' → logprob: -11.757646560668945
    5. '       ' → logprob: -12.132646560668945
    6. '```' → logprob: -13.507646560668945
    7. '(' → logprob: -13.632646560668945
    8. '(s' → logprob: -13.882646560668945
    9. '<|end|>' → logprob: -14.007646560668945
    10. '=
' → logprob: -14.132646560668945

Token 2736: ' Yen' (ID: 99889)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -1.9361264946837764e-07
    2. ' Yen' → logprob: -16.625
    3. '   ' → logprob: -18.75
    4. '	Y' → logprob: -19.25
    5. ' Y' → logprob: -19.625
    6. '```' → logprob: -19.75
    7. '`' → logprob: -20.625
    8. '
' → logprob: -20.875
    9. '_Y' → logprob: -21.375
    10. 'YAxis' → logprob: -21.875

Token 2737: 'Saving' (ID: 72060)
  Prédit: 'Saving'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Saving' → logprob: -9.088346359931165e-07
    2. 'Savings' → logprob: -14.625000953674316
    3. '-saving' → logprob: -15.875000953674316
    4. 'Sol' → logprob: -16.125
    5. ' Saving' → logprob: -17.0
    6. '_S' → logprob: -17.0
    7. 'saving' → logprob: -17.125
    8. '   ' → logprob: -18.0
    9. '_s' → logprob: -18.125
    10. '```' → logprob: -18.25

Token 2738: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -7.3458322731312364e-06
    2. 'solver' → logprob: -12.000007629394531
    3. '_solver' → logprob: -13.750007629394531
    4. ' Solver' → logprob: -16.87500762939453
    5. '
' → logprob: -17.62500762939453
    6. ' solver' → logprob: -18.25000762939453
    7. '```' → logprob: -18.50000762939453
    8. 'olver' → logprob: -18.75000762939453
    9. 'Solve' → logprob: -19.50000762939453
    10. '(S' → logprob: -19.62500762939453

Token 2739: '(pr' (ID: 38401)
  Prédit: '(pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -0.0004317420825827867
    2. 'prices' → logprob: -7.750431537628174
    3. 'pr' → logprob: -14.125432014465332
    4. '(price' → logprob: -15.750432014465332
    5. ' prices' → logprob: -17.250431060791016
    6. '   ' → logprob: -17.250431060791016
    7. 'Prices' → logprob: -17.625431060791016
    8. '(' → logprob: -17.750431060791016
    9. '	pr' → logprob: -17.875431060791016
    10. '(s' → logprob: -18.375431060791016

Token 2740: 'ices' (ID: 1386)
  Prédit: 'ices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ices' → logprob: -9.722539834911004e-05
    2. 'prices' → logprob: -10.500097274780273
    3. 'rices' → logprob: -10.625097274780273
    4. 'ces' → logprob: -10.875097274780273
    5. 'izes' → logprob: -11.500097274780273
    6. '   ' → logprob: -12.125097274780273
    7. 'ice' → logprob: -12.875097274780273
    8. '```' → logprob: -13.000097274780273
    9. 'ic' → logprob: -13.250097274780273
    10. 'ises' → logprob: -15.000097274780273

Token 2741: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07862392067909241
    2. ')' → logprob: -2.8286240100860596
    3. '<|end|>' → logprob: -4.4536237716674805
    4. ').' → logprob: -6.3286237716674805
    5. ')
' → logprob: -6.5786237716674805
    6. '<|end|>' → logprob: -7.3286237716674805
    7. '.solve' → logprob: -7.5786237716674805
    8. '   ' → logprob: -8.32862377166748
    9. ')s' → logprob: -9.70362377166748
    10. '.s' → logprob: -10.20362377166748

Token 2742: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.47551998496055603
    2. '       ' → logprob: -0.9755200147628784
    3. 'res' → logprob: -7.725520133972168
    4. '   ' → logprob: -7.725520133972168
    5. '```' → logprob: -8.475520133972168
    6. 'results' → logprob: -8.975520133972168
    7. ' result' → logprob: -9.600520133972168
    8. 'answer' → logprob: -9.600520133972168
    9. 'solution' → logprob: -10.350520133972168
    10. '`' → logprob: -11.600520133972168

Token 2743: ' c' (ID: 274)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.08061297237873077
    2. 'result' → logprob: -2.580612897872925
    3. 'res' → logprob: -7.080613136291504
    4. '       ' → logprob: -7.705613136291504
    5. 'c' (adapté à ' c') → logprob: -8.080613136291504
    6. 'results' → logprob: -10.330613136291504
    7. ' max' → logprob: -10.455613136291504
    8. 'print' → logprob: -10.705613136291504
    9. 'r' → logprob: -11.955613136291504
    10. 'answer' → logprob: -12.455613136291504

Token 2744: ',' (ID: 11)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.006357581354677677
    2. '_max' → logprob: -5.631357669830322
    3. 'o' → logprob: -6.881357669830322
    4. '500' → logprob: -7.256357669830322
    5. ' =' → logprob: -7.631357669830322
    6. '=' → logprob: -8.756357192993164
    7. '=max' → logprob: -9.256357192993164
    8. 'ount' → logprob: -9.756357192993164
    9. 'ol' → logprob: -10.256357192993164
    10. '_' → logprob: -10.381357192993164

Token 2745: ' s' (ID: 265)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0013469000114127994
    2. 'm' → logprob: -6.626347064971924
    3. 'min' → logprob: -11.251346588134766
    4. ' e' → logprob: -13.001346588134766
    5. 's' → logprob: -13.251346588134766
    6. '_e' → logprob: -13.626346588134766
    7. 'p' → logprob: -13.876346588134766
    8. 'd' → logprob: -14.376346588134766
    9. 'exp' → logprob: -15.626346588134766
    10. '_' → logprob: -15.751346588134766

Token 2746: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20076413452625275
    2. ' =' → logprob: -1.8257641792297363
    3. 'olve' → logprob: -4.950764179229736
    4. 'olver' → logprob: -4.950764179229736
    5. ',' → logprob: -5.325764179229736
    6. 'aved' → logprob: -7.450764179229736
    7. '=s' → logprob: -7.575764179229736
    8. '   ' → logprob: -8.450763702392578
    9. 'ave' → logprob: -8.950763702392578
    10. '       ' → logprob: -9.575763702392578

Token 2747: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.0005530327325686812
    2. ' solver' → logprob: -7.500553131103516
    3. 'sol' → logprob: -19.125553131103516
    4. '_solver' → logprob: -19.750553131103516
    5. 'solve' → logprob: -20.000553131103516
    6. '   ' → logprob: -21.250553131103516
    7. 'olver' → logprob: -22.125553131103516
    8. 'resolver' → logprob: -22.250553131103516
    9. '```' → logprob: -22.625553131103516
    10. 'scheduler' → logprob: -22.625553131103516

Token 2748: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -0.0052362410351634026
    2. 'solve' → logprob: -5.2552361488342285
    3. '.' → logprob: -13.255236625671387
    4. '   ' → logprob: -14.880236625671387
    5. '```' → logprob: -16.13023567199707
    6. ' .' → logprob: -16.50523567199707
    7. '.save' → logprob: -17.00523567199707
    8. '.sol' → logprob: -17.00523567199707
    9. 'solver' → logprob: -17.38023567199707
    10. '.run' → logprob: -17.50523567199707

Token 2749: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022976152831688523
    2. 'print' → logprob: -9.375229835510254
    3. '()' → logprob: -9.750229835510254
    4. '   ' → logprob: -10.500229835510254
    5. '<|end|>' → logprob: -10.500229835510254
    6. '()
' → logprob: -10.875229835510254
    7. '```' → logprob: -12.625229835510254
    8. '(' → logprob: -13.125229835510254
    9. ',' → logprob: -13.250229835510254
    10. '(print' → logprob: -13.750229835510254

Token 2750: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09473604708909988
    2. '   ' → logprob: -2.469736099243164
    3. 'print' → logprob: -5.719736099243164
    4. '```' → logprob: -6.094736099243164
    5. '<|end|>' → logprob: -9.094736099243164
    6. 'results' → logprob: -9.469736099243164
    7. '
' → logprob: -10.594736099243164
    8. '``' → logprob: -11.969736099243164
    9. ' print' → logprob: -12.094736099243164
    10. '           ' → logprob: -12.219736099243164

Token 2751: ' print' (ID: 2123)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0007448295946232975
    2. 'print' (adapté à ' print') → logprob: -7.500744819641113
    3. '       ' → logprob: -9.000744819641113
    4. '   ' → logprob: -10.000744819641113
    5. ' results' → logprob: -10.750744819641113
    6. '```' → logprob: -13.875744819641113
    7. '	results' → logprob: -14.875744819641113
    8. '
' → logprob: -15.250744819641113
    9. 'result' → logprob: -15.750744819641113
    10. 'answers' → logprob: -16.87574577331543

Token 2752: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0005586316110566258
    2. '(f' → logprob: -7.750558853149414
    3. 'c' → logprob: -9.000558853149414
    4. '(' → logprob: -12.375558853149414
    5. 'f' → logprob: -15.125558853149414
    6. '((' → logprob: -16.625558853149414
    7. ' c' → logprob: -17.125558853149414
    8. '("{}' → logprob: -17.875558853149414
    9. '('{}' → logprob: -19.250558853149414
    10. '	c' → logprob: -19.250558853149414

Token 2753: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016023407224565744
    2. ')' → logprob: -6.6266021728515625
    3. ',end' → logprob: -8.501602172851562
    4. ',c' → logprob: -10.126602172851562
    5. ',s' → logprob: -11.126602172851562
    6. ' ,' → logprob: -12.251602172851562
    7. '   ' → logprob: -12.376602172851562
    8. ',p' → logprob: -12.626602172851562
    9. ')
' → logprob: -13.626602172851562
    10. ',",' → logprob: -13.751602172851562

Token 2754: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.7610454708337784e-05
    2. ' s' → logprob: -10.500027656555176
    3. '"s' → logprob: -19.37502670288086
    4. ')' → logprob: -19.87502670288086
    5. ''s' → logprob: -20.12502670288086
    6. ''' → logprob: -20.50002670288086
    7. '   ' → logprob: -20.50002670288086
    8. '"' → logprob: -20.50002670288086
    9. '
' → logprob: -21.00002670288086
    10. ' 
' → logprob: -21.25002670288086

Token 2755: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. ')
' → logprob: -12.500005722045898
    3. '   ' → logprob: -13.750005722045898
    4. '")' → logprob: -15.750005722045898
    5. '')' → logprob: -16.0000057220459
    6. '       ' → logprob: -16.1250057220459
    7. '`)' → logprob: -16.2500057220459
    8. ' )' → logprob: -16.8750057220459
    9. ')`' → logprob: -17.8750057220459
    10. '))' → logprob: -18.0000057220459

Token 2756: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2757: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.008669880218803883
    2. ' __' → logprob: -4.758669853210449
    3. 'name' → logprob: -10.25866985321045
    4. '```' → logprob: -11.13366985321045
    5. '_name' → logprob: -12.38366985321045
    6. ' name' → logprob: -15.13366985321045
    7. 'Name' → logprob: -15.13366985321045
    8. '___' → logprob: -15.50866985321045
    9. '/__' → logprob: -15.63366985321045
    10. 'if' → logprob: -15.63366985321045

Token 2758: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.007351043168455362
    2. '==' → logprob: -5.507350921630859
    3. '```' → logprob: -6.257350921630859
    4. ' ==' → logprob: -7.382350921630859
    5. 'name' → logprob: -8.75735092163086
    6. '__.__' → logprob: -9.25735092163086
    7. '.__' → logprob: -9.38235092163086
    8. '=="' → logprob: -9.63235092163086
    9. 'if' → logprob: -10.00735092163086
    10. '__
' → logprob: -10.25735092163086

Token 2759: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00021724513499066234
    2. '==' → logprob: -9.12521743774414
    3. '__.__' → logprob: -10.25021743774414
    4. '```' → logprob: -10.75021743774414
    5. '=="' → logprob: -11.00021743774414
    6. '__('' → logprob: -11.62521743774414
    7. '__":
' → logprob: -12.25021743774414
    8. '__
' → logprob: -12.50021743774414
    9. ' ==' → logprob: -12.50021743774414
    10. '=='' → logprob: -12.50021743774414

Token 2760: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3335564434528351
    2. '==' → logprob: -1.3335564136505127
    3. '=="' → logprob: -4.708556652069092
    4. ' ==' → logprob: -4.833556652069092
    5. '=='' → logprob: -6.583556652069092
    6. '__.__' → logprob: -6.833556652069092
    7. '```' → logprob: -7.833556652069092
    8. '.__' → logprob: -9.958556175231934
    9. '__":
' → logprob: -10.708556175231934
    10. '__["' → logprob: -10.708556175231934

Token 2761: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10021734237670898
    2. ''' → logprob: -2.350217342376709
    3. '__' → logprob: -11.475217819213867
    4. ' "__' → logprob: -15.600217819213867
    5. '   ' → logprob: -16.600217819213867
    6. 'main' → logprob: -18.475217819213867
    7. '"user' → logprob: -18.475217819213867
    8. ' '__' → logprob: -18.600217819213867
    9. '`' → logprob: -18.725217819213867
    10. ''app' → logprob: -18.850217819213867

Token 2762: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01835806667804718
    2. 'main' → logprob: -4.26835823059082
    3. '"' → logprob: -5.51835823059082
    4. ''' → logprob: -9.14335823059082
    5. '___' → logprob: -10.14335823059082
    6. '____' → logprob: -11.64335823059082
    7. '__":
' → logprob: -12.39335823059082
    8. 'built' → logprob: -12.39335823059082
    9. '```' → logprob: -12.39335823059082
    10. '__
' → logprob: -13.89335823059082

Token 2763: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.0909355878829956
    2. '__' → logprob: -2.465935707092285
    3. '__':
' → logprob: -6.465935707092285
    4. '__.' → logprob: -9.090935707092285
    5. '__.__' → logprob: -9.215935707092285
    6. '__["' → logprob: -9.465935707092285
    7. '.' → logprob: -10.090935707092285
    8. '__
' → logprob: -10.590935707092285
    9. '__
' → logprob: -10.965935707092285
    10. '.__' → logprob: -11.215935707092285

Token 2764: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.04968087747693062
    2. '   ' → logprob: -3.0496809482574463
    3. '	main' → logprob: -7.174680709838867
    4. ' main' → logprob: -8.174680709838867
    5. '(main' → logprob: -10.799680709838867
    6. '_main' → logprob: -11.299680709838867
    7. '```' → logprob: -11.424680709838867
    8. '    
' → logprob: -14.799680709838867
    9. '__' → logprob: -15.174680709838867
    10. 'Main' → logprob: -15.174680709838867

Token 2765: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.320199877838604e-07
    2. ' main' → logprob: -15.25
    3. '   ' → logprob: -16.0
    4. '	main' → logprob: -18.875
    5. 'import' → logprob: -21.5
    6. '(main' → logprob: -23.125
    7. '_main' → logprob: -23.75
    8. '.main' → logprob: -24.125
    9. '```' → logprob: -25.0
    10. '
' → logprob: -26.0

Token 2766: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2764
Tokens correctement prédits (1ère position, stricte): 936
Tokens correctement prédits (1ère position, avec adaptation): 1000
Tokens correctement prédits (top 10): 1928
Précision stricte (1ère position): 33.86%
Précision adaptée (1ère position): 36.18%
Précision (top 10): 69.75%
================================================================================
