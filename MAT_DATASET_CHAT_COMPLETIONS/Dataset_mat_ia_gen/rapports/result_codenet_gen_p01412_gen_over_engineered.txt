================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import total_ordering
from typing import List, Callable

class PowerTower:
    """
    Represents a power tower expression a1^(a2^(... (an)...))
    where evaluation is right-associative.
    """

    def __init__(self, bases: List[int]):
        self.bases = bases

    def evaluate(self) -> float:
        """
        Evaluate the tower height using floating approximations, mainly for possible future use.
        This won't be the comparator logic but can be used to debug or approximate.
        """
        return self._eval_recursive(0)

    def _eval_recursive(self, idx: int) -> float:
        if idx == len(self.bases) - 1:
            return float(self.bases[idx])
        base = float(self.bases[idx])
        exponent = self._eval_recursive(idx + 1)
        # 0^0 = 1 as per the problem statement
        if base == 0 and exponent == 0:
            return 1.0
        # To avoid math domain errors or float overflow, use log
        if base == 0:
            return 0.0
        # Cap too large exponents for float pow
        if exponent > 1e9:
            exponent = 1e9
        return base ** exponent

@total_ordering
class PowerTowerComparator:
    """
    Wraps bases list and enables comparisons based on the problem's criteria:
    Compare towers from left to right with power tower rules.
    """

    def __init__(self, bases: List[int]):
        self.bases = bases

    def __eq__(self, other: 'PowerTowerComparator') -> bool:
        return self.bases == other.bases

    def __lt__(self, other: 'PowerTowerComparator') -> bool:
        return self._compare(self.bases, other.bases) < 0

    @staticmethod
    def _compare(a: List[int], b: List[int]) -> int:
        """
        Compares two power tower lists a and b according to the problem's logic:
        - Calculate which tower results in a greater number.
        - If equal, lex order decides.
        This comparison is done recursively and uses special rules:
        Since direct power tower evaluation is infeasible for large exponents,
        we implement a custom comparison behavior.

        Returns:
            -1 if a < b
             0 if a == b
             1 if a > b
        """

        n = len(a)
        for i in range(n):
            if a[i] == b[i]:
                continue

            # base cases for comparing single elements:
            # - if towers shrink to one element, compare directly
            if i == n - 1:
                if a[i] < b[i]:
                    return -1
                elif a[i] > b[i]:
                    return 1
                else:
                    continue

            # Use recursive logic to compare a[i]^(rest_a) and b[i]^(rest_b)

            rest_a = a[i+1:]
            rest_b = b[i+1:]

            r = PowerTowerComparator._comparePower(a[i], rest_a, b[i], rest_b)
            if r != 0:
                return r

        return 0

    @staticmethod
    def _comparePower(base1: int, exp_list1: List[int], base2: int, exp_list2: List[int]) -> int:
        """
        Compare base1^(exp1) and base2^(exp2) where exp1 and exp2 are power towers defined by exp_list1 and exp_list2.
        Uses special rules and approximations:
        - 0^0 = 1 by problem statement
        - If both bases and exponents equal, towers are equal.
        - Uses heuristic and logarithmic comparisons to avoid overflow.
        """

        # Evaluate exponents ends:
        # If exponent empty, exponent is considered 1 by tower definition

        if len(exp_list1) == 0:
            exp1 = 1
        else:
            # Compare exponent towers recursively
            exp1 = PowerTower(exp_list1).evaluate()

        if len(exp_list2) == 0:
            exp2 = 1
        else:
            exp2 = PowerTower(exp_list2).evaluate()

        # Handle the 0^0 case as 1
        def val(base, exp):
            if base == 0 and exp == 0:
                return 1.0
            try:
                # For large exponents, use logs to compare size instead of numbers
                if base == 0:
                    return 0.0
                if exp > 1e9:
                    exp = 1e9
                return base ** exp
            except OverflowError:
                return float('inf')

        # Because direct calculation is impossible for large:
        # Instead, compare using logarithm rules: val1 = base1^exp1 > val2 = base2^exp2
        #
        # log(val1) = exp1 * log(base1)
        # log(val2) = exp2 * log(base2)
        #
        # Compare log(val1) and log(val2) carefully considering bases might be 0.

        import math

        # Handle 0^exp cases:
        if base1 == 0 and exp1 == 0:
            val1_ln = 0.0
        elif base1 == 0:
            val1_ln = float('-inf')
        else:
            try:
                val1_ln = exp1 * math.log(base1)
            except ValueError:
                # log(0) impossible, but handled above
                val1_ln = float('-inf')

        if base2 == 0 and exp2 == 0:
            val2_ln = 0.0
        elif base2 == 0:
            val2_ln = float('-inf')
        else:
            try:
                val2_ln = exp2 * math.log(base2)
            except ValueError:
                val2_ln = float('-inf')

        if abs(val1_ln - val2_ln) < 1e-12:
            # Almost equal, fallback to lex order on bases and exponents lists
            if base1 < base2:
                return -1
            elif base1 > base2:
                return 1
            else:
                # rec compare exponent towers lex order
                if exp_list1 < exp_list2:
                    return -1
                elif exp_list1 > exp_list2:
                    return 1
                else:
                    return 0

        if val1_ln > val2_ln:
            return 1
        else:
            return -1


class TowerSorter:
    """
    A class responsible for sorting arrays of integers into sequences that maximize the power tower result,
    following the problem rules and tie-breakers.
    """

    def __init__(self, array: List[int]):
        self.array = array

    def get_max_tower_sequence(self) -> List[int]:
        """
        Returns the rearranged list that yields the maximal right-associative power tower,
        with tie-breaking on lexicographical order.
        """

        # We cannot simply sort by value or naive comparator.
        # Instead, apply a custom comparator implementing the PowerTowerComparator.

        # We'll generate all permutations is impossible (N up to 100)
        # Instead: Sort using PowerTowerComparator based comparator with functools.cmp_to_key

        from functools import cmp_to_key

        def cmp_func(x, y):
            comp = PowerTowerComparator._compare([x], [y])
            # _compare returns -1 if x < y but we want descending order (max tower first)
            return -comp

        # Sort using cmp_func then resolve ties lex order in resulting sequence per problem statement
        # Actually, the problem says that among maximal sequences tie in tower value, pick lex smallest sequence.
        # Sorting ascending by cmp_func implements sorting descending by tower value, so lex order is automatically preserved in stable sort.

        sorted_arr = sorted(self.array, key=cmp_to_key(cmp_func))

        # For possible duplicates creating same power tower value,
        # we might want to verify if this sorted sequence is lex minimal maximal solution.
        # The sorting method picks one maximal solution with lex smallest due to stable sort.

        return sorted_arr


def main():
    import sys
    sys.setrecursionlimit(10**7)

    input = sys.stdin.readline
    N = int(input())
    A = [int(input()) for _ in range(N)]

    sorter = TowerSorter(A)
    ans = sorter.get_max_tower_sequence()

    for v in ans:
        print(v)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' total' (ID: 3609)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.6194254755973816
    2. 'wrap' → logprob: -0.8694254755973816
    3. 'reduce' → logprob: -3.3694255352020264
    4. ' wraps' → logprob: -5.369425296783447
    5. 'l' → logprob: -6.119425296783447
    6. 'cached' → logprob: -7.869425296783447
    7. ' partial' → logprob: -8.119425773620605
    8. 'cache' → logprob: -8.494425773620605
    9. '```' → logprob: -8.869425773620605
    10. 'cmp' → logprob: -8.994425773620605

Token 4: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.018622778356075287
    2. '_' → logprob: -5.018622875213623
    3. '_l' → logprob: -5.018622875213623
    4. 'y' → logprob: -6.893622875213623
    5. '_line' → logprob: -7.143622875213623
    6. 'ly' → logprob: -7.143622875213623
    7. '_le' → logprob: -7.518622875213623
    8. '_wrap' → logprob: -7.893622875213623
    9. '_version' → logprob: -8.643622398376465
    10. '_layer' → logprob: -8.893622398376465

Token 5: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.026431504637002945
    2. 'ling' → logprob: -4.151431560516357
    3. 'ring' → logprob: -6.276431560516357
    4. 'less' → logprob: -6.276431560516357
    5. 'r' → logprob: -6.401431560516357
    6. 'er' → logprob: -6.526431560516357
    7. 'ity' → logprob: -6.651431560516357
    8. 'ng' → logprob: -7.776431560516357
    9. 'in' → logprob: -8.4014310836792
    10. 'it' → logprob: -8.6514310836792

Token 6: '
' (ID: 198)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0008195152622647583
    2. '@
' → logprob: -7.625819683074951
    3. '
' → logprob: -9.500819206237793
    4. '```' → logprob: -9.625819206237793
    5. '\n' → logprob: -10.250819206237793
    6. '(' → logprob: -10.750819206237793
    7. '@\' → logprob: -10.750819206237793
    8. '@click' → logprob: -11.000819206237793
    9. '\' → logprob: -11.750819206237793
    10. '@Rest' → logprob: -11.750819206237793

Token 7: 'from' (ID: 2845)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.004920870065689087
    2. '@
' → logprob: -5.879920959472656
    3. '
' → logprob: -6.254920959472656
    4. '```' → logprob: -10.004920959472656
    5. '@

' → logprob: -10.504920959472656
    6. '\n' → logprob: -10.629920959472656
    7. '

' → logprob: -11.129920959472656
    8. '`' → logprob: -11.629920959472656
    9. '@click' → logprob: -11.879920959472656
    10. '@\' → logprob: -11.879920959472656

Token 8: ' typing' (ID: 34152)
  Prédit: ' dat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dat' → logprob: -0.6191315054893494
    2. ' typing' → logprob: -0.9941315054893494
    3. ' collections' → logprob: -3.244131565093994
    4. ' operator' → logprob: -3.619131565093994
    5. 'typing' → logprob: -5.119131565093994
    6. ' math' → logprob: -5.244131565093994
    7. 'dat' → logprob: -5.244131565093994
    8. 'collections' → logprob: -5.869131565093994
    9. ' ' → logprob: -6.369131565093994
    10. ' datetime' → logprob: -6.744131565093994

Token 9: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.2862366735935211
    2. 'import' → logprob: -1.5362366437911987
    3. '.' → logprob: -3.5362367630004883
    4. '_' → logprob: -7.161236763000488
    5. '<|end|>' → logprob: -7.161236763000488
    6. '.import' → logprob: -7.536236763000488
    7. '[' → logprob: -7.536236763000488
    8. '```' → logprob: -7.911236763000488
    9. ' ' → logprob: -8.036236763000488
    10. ',' → logprob: -8.286236763000488

Token 10: ' List' (ID: 2655)
  Prédit: 'Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Any' → logprob: -0.26494863629341125
    2. ' Any' → logprob: -1.5149486064910889
    3. 'List' → logprob: -5.514948844909668
    4. ' List' → logprob: -6.014948844909668
    5. 'Optional' → logprob: -6.389948844909668
    6. 'Union' → logprob: -6.389948844909668
    7. ' Union' → logprob: -6.764948844909668
    8. ' Optional' → logprob: -6.889948844909668
    9. ' Protocol' → logprob: -8.889948844909668
    10. 'Protocol' → logprob: -8.889948844909668

Token 11: ',' (ID: 11)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.4132906496524811
    2. '
' → logprob: -1.2882906198501587
    3. '

' → logprob: -3.4132907390594482
    4. '\n' → logprob: -4.288290500640869
    5. '```' → logprob: -4.788290500640869
    6. '@
' → logprob: -6.038290500640869
    7. '@class' → logprob: -6.788290500640869
    8. '
' → logprob: -7.038290500640869
    9. 'class' → logprob: -7.538290500640869
    10. '@

' → logprob: -7.663290500640869

Token 12: ' Callable' (ID: 94560)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.55027174949646
    2. 'Any' → logprob: -1.80027174949646
    3. 'Callable' → logprob: -2.80027174949646
    4. ' Optional' → logprob: -2.92527174949646
    5. 'Tuple' → logprob: -2.92527174949646
    6. 'Union' → logprob: -3.17527174949646
    7. ' Union' → logprob: -4.175271987915039
    8. ' Callable' → logprob: -4.550271987915039
    9. ' Any' → logprob: -5.050271987915039
    10. 'Named' → logprob: -5.300271987915039

Token 13: '

' (ID: 279)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.12967318296432495
    2. '
' → logprob: -2.5046732425689697
    3. '```' → logprob: -4.379673004150391
    4. '\n' → logprob: -4.754673004150391
    5. '

' → logprob: -4.879673004150391
    6. '@
' → logprob: -5.254673004150391
    7. '@class' → logprob: -6.379673004150391
    8. '@dat' → logprob: -7.129673004150391
    9. '@

' → logprob: -7.504673004150391
    10. 'class' → logprob: -7.504673004150391

Token 14: 'class' (ID: 1444)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0014399961801245809
    2. 'class' → logprob: -7.001440048217773
    3. '@class' → logprob: -8.251440048217773
    4. '@dat' → logprob: -8.751440048217773
    5. '```' → logprob: -9.626440048217773
    6. '@
' → logprob: -10.626440048217773
    7. '@example' → logprob: -11.876440048217773
    8. '``' → logprob: -13.251440048217773
    9. '
' → logprob: -13.376440048217773
    10. '@interface' → logprob: -14.001440048217773

Token 15: ' Power' (ID: 10079)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09247936308383942
    2. ' total' → logprob: -3.7174794673919678
    3. ' Total' → logprob: -3.7174794673919678
    4. ' Space' → logprob: -3.8424794673919678
    5. ' Person' → logprob: -5.217479228973389
    6. ' My' → logprob: -5.717479228973389
    7. ' User' → logprob: -6.217479228973389
    8. ' Student' → logprob: -6.842479228973389
    9. ' Animal' → logprob: -7.467479228973389
    10. ' Rectangle' → logprob: -7.842479228973389

Token 16: 'Tower' (ID: 96498)
  Prédit: 'Operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Operator' → logprob: -0.5587051510810852
    2. '(' → logprob: -1.5587050914764404
    3. '@' → logprob: -2.0587050914764404
    4. 'User' → logprob: -4.3087053298950195
    5. '(@' → logprob: -4.6837053298950195
    6. '(object' → logprob: -4.8087053298950195
    7. '@(' → logprob: -4.8087053298950195
    8. ' (@' → logprob: -5.0587053298950195
    9. ' (' → logprob: -5.4337053298950195
    10. 'Decorator' → logprob: -5.5587053298950195

Token 17: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2542681097984314
    2. '(' → logprob: -1.5042681694030762
    3. '():' → logprob: -6.879268169403076
    4. '(object' → logprob: -7.754268169403076
    5. '(P' → logprob: -8.629267692565918
    6. '<|end|>' → logprob: -9.254267692565918
    7. '(:' → logprob: -9.504267692565918
    8. '):' → logprob: -9.504267692565918
    9. '(T' → logprob: -10.004267692565918
    10. '@:' → logprob: -10.254267692565918

Token 18: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25903835892677307
    2. '(' → logprob: -1.5090383291244507
    3. '   ' → logprob: -5.25903844833374
    4. '():' → logprob: -6.88403844833374
    5. '```' → logprob: -8.009037971496582
    6. 'def' → logprob: -8.759037971496582
    7. '@' → logprob: -9.509037971496582
    8. '(object' → logprob: -9.884037971496582
    9. ':def' → logprob: -9.884037971496582
    10. ' def' → logprob: -10.884037971496582

Token 19: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17226271331310272
    2. ' def' → logprob: -2.047262668609619
    3. '   ' → logprob: -3.547262668609619
    4. '@' → logprob: -8.172263145446777
    5. '```' → logprob: -11.172263145446777
    6. ' ' → logprob: -11.297263145446777
    7. '@property' → logprob: -11.672263145446777
    8. 'class' → logprob: -11.797263145446777
    9. '    ' → logprob: -12.172263145446777
    10. '__' → logprob: -12.422263145446777

Token 20: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.516001284122467
    2. '"""
' → logprob: -2.1410012245178223
    3. 'def' → logprob: -3.1410012245178223
    4. 'Calculate' → logprob: -3.3910012245178223
    5. 'd' → logprob: -3.6410012245178223
    6. 'A' → logprob: -3.7660012245178223
    7. '   ' → logprob: -3.7660012245178223
    8. 'class' → logprob: -4.141001224517822
    9. 'T' → logprob: -4.141001224517822
    10. ')' → logprob: -4.391001224517822

Token 21: ' Represents' (ID: 84592)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7435177564620972
    2. 'Rep' → logprob: -1.4935177564620972
    3. '"""' → logprob: -1.7435177564620972
    4. ' A' → logprob: -3.6185178756713867
    5. ' Represents' → logprob: -3.7435178756713867
    6. 'Power' → logprob: -3.8685178756713867
    7. 'Calculate' → logprob: -4.368517875671387
    8. 'An' → logprob: -4.493517875671387
    9. 'Represent' → logprob: -5.618517875671387
    10. 'Calcul' → logprob: -5.868517875671387

Token 22: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6062559485435486
    2. ' an' → logprob: -1.2312560081481934
    3. 'a' → logprob: -1.8562560081481934
    4. 'an' → logprob: -5.856256008148193
    5. '   ' → logprob: -6.231256008148193
    6. 'ex' → logprob: -7.231256008148193
    7. ' the' → logprob: -8.231255531311035
    8. ' exponent' → logprob: -8.481255531311035
    9. ' ' → logprob: -9.856255531311035
    10. ' ex' → logprob: -10.543755531311035

Token 23: ' power' (ID: 3470)
  Prédit: ' power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' power' → logprob: -0.37171077728271484
    2. 'power' → logprob: -1.6217107772827148
    3. ' mathematical' → logprob: -2.371710777282715
    4. ' function' → logprob: -5.621710777282715
    5. ' sequence' → logprob: -5.996710777282715
    6. ' number' → logprob: -6.121710777282715
    7. ' callable' → logprob: -6.871710777282715
    8. 'number' → logprob: -6.996710777282715
    9. 'mat' → logprob: -6.996710777282715
    10. ' tower' → logprob: -7.121710777282715

Token 24: ' tower' (ID: 35225)
  Prédit: ' tower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tower' → logprob: -1.1766855716705322
    2. ' ' → logprob: -1.3016855716705322
    3. '   ' → logprob: -1.3016855716705322
    4. '_' → logprob: -3.4266855716705322
    5. '  ' → logprob: -3.8016855716705322
    6. '_t' → logprob: -4.301685333251953
    7. 'ed' → logprob: -4.551685333251953
    8. 't' → logprob: -4.676685333251953
    9. ')' → logprob: -4.801685333251953
    10. ' of' → logprob: -4.801685333251953

Token 25: ' expression' (ID: 12973)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5491020679473877
    2. ' (' → logprob: -1.5491020679473877
    3. '   ' → logprob: -2.1741020679473877
    4. '(' → logprob: -3.2991020679473877
    5. ',' → logprob: -3.9241020679473877
    6. 'of' → logprob: -4.174101829528809
    7. '(n' → logprob: -4.674101829528809
    8. '<|end|>' → logprob: -6.299101829528809
    9. ' consisting' → logprob: -6.549101829528809
    10. '.' → logprob: -7.049101829528809

Token 26: ' a' (ID: 261)
  Prédit: ' consisting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' consisting' → logprob: -1.3482906818389893
    2. '.' → logprob: -1.5982906818389893
    3. ',' → logprob: -1.8482906818389893
    4. ' of' → logprob: -2.0982906818389893
    5. '   ' → logprob: -2.9732906818389893
    6. ':' → logprob: -3.0982906818389893
    7. ' (' → logprob: -3.4732906818389893
    8. '(' → logprob: -3.5982906818389893
    9. ' composed' → logprob: -3.9732906818389893
    10. '<|end|>' → logprob: -4.34829044342041

Token 27: '1' (ID: 16)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.6468024253845215
    2. ' **' → logprob: -1.1468024253845215
    3. '^' → logprob: -3.2718024253845215
    4. '_' → logprob: -3.6468024253845215
    5. '   ' → logprob: -3.8968024253845215
    6. ' ' → logprob: -4.0218024253845215
    7. ' of' → logprob: -4.1468024253845215
    8. '  ' → logprob: -4.6468024253845215
    9. '`' → logprob: -5.3968024253845215
    10. 'n' → logprob: -5.8968024253845215

Token 28: '^(' (ID: 32612)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006423559971153736
    2. ' a' → logprob: -5.131423473358154
    3. ' (' → logprob: -8.881423950195312
    4. '(' → logprob: -8.881423950195312
    5. '(a' → logprob: -9.506423950195312
    6. '   ' → logprob: -9.881423950195312
    7. ' ' → logprob: -10.256423950195312
    8. ')' → logprob: -10.631423950195312
    9. '       ' → logprob: -12.256423950195312
    10. ')a' → logprob: -12.631423950195312

Token 30: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.26643335819244385
    2. '1' → logprob: -1.6414333581924438
    3. '_' → logprob: -3.2664332389831543
    4. '0' → logprob: -7.391433238983154
    5. '_(' → logprob: -7.766433238983154
    6. '_{' → logprob: -8.516433715820312
    7. ')' → logprob: -8.766433715820312
    8. 'n' → logprob: -8.891433715820312
    9. '₂' → logprob: -8.891433715820312
    10. '_)' → logprob: -9.266433715820312

Token 31: '^(' (ID: 32612)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024002375081181526
    2. '^' → logprob: -4.274002552032471
    3. '**' → logprob: -5.399002552032471
    4. ' )' → logprob: -6.274002552032471
    5. ')^' → logprob: -6.774002552032471
    6. '^)' → logprob: -7.274002552032471
    7. ')**' → logprob: -7.399002552032471
    8. '```' → logprob: -8.649002075195312
    9. '^(' → logprob: -8.899002075195312
    10. ' ' → logprob: -9.149002075195312

Token 32: '...' (ID: 1008)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00011319868644932285
    2. ' a' → logprob: -9.500113487243652
    3. '...' → logprob: -10.500113487243652
    4. '<|end|>' → logprob: -13.000113487243652
    5. ')' → logprob: -13.125113487243652
    6. '_a' → logprob: -13.500113487243652
    7. '<|end|>' → logprob: -13.500113487243652
    8. '   ' → logprob: -13.625113487243652
    9. ' ' → logprob: -13.875113487243652
    10. '  ' → logprob: -14.750113487243652

Token 33: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.022299746051430702
    2. ')' → logprob: -4.647299766540527
    3. '...' → logprob: -5.022299766540527
    4. 'n' → logprob: -6.147299766540527
    5. '))' → logprob: -7.022299766540527
    6. ' ' → logprob: -7.522299766540527
    7. 'an' → logprob: -8.022299766540527
    8. '0' → logprob: -8.272299766540527
    9. '_a' → logprob: -8.397299766540527
    10. ' a' → logprob: -8.522299766540527

Token 34: 'an' (ID: 270)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005563143640756607
    2. 'an' → logprob: -5.255563259124756
    3. '...' → logprob: -8.255562782287598
    4. ')' → logprob: -10.505562782287598
    5. ' a' → logprob: -11.130562782287598
    6. ')))' → logprob: -12.255562782287598
    7. '...)' → logprob: -12.255562782287598
    8. '))' → logprob: -12.255562782287598
    9. '   ' → logprob: -12.630562782287598
    10. ' ' → logprob: -14.005562782287598

Token 35: ')...' (ID: 58473)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16805532574653625
    2. ')))' → logprob: -2.168055295944214
    3. ')...' → logprob: -3.918055295944214
    4. ')^' → logprob: -4.043055534362793
    5. ')**' → logprob: -6.293055534362793
    6. '))' → logprob: -7.918055534362793
    7. '))))' → logprob: -8.668055534362793
    8. ' )' → logprob: -9.043055534362793
    9. ')`' → logprob: -9.293055534362793
    10. '...' → logprob: -10.043055534362793

Token 36: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.23340514302253723
    2. ')' → logprob: -1.6084051132202148
    3. ')))' → logprob: -5.608405113220215
    4. ')^' → logprob: -5.608405113220215
    5. ' ' → logprob: -8.483405113220215
    6. '^' → logprob: -8.983405113220215
    7. 'a' → logprob: -9.733405113220215
    8. ' )' → logprob: -10.108405113220215
    9. ')**' → logprob: -10.233405113220215
    10. '))
' → logprob: -10.483405113220215

Token 37: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07614931464195251
    2. '   ' → logprob: -2.7011492252349854
    3. '"""' → logprob: -5.2011494636535645
    4. '```' → logprob: -8.701148986816406
    5. ')"' → logprob: -9.326148986816406
    6. '")' → logprob: -9.326148986816406
    7. ')
' → logprob: -9.326148986816406
    8. '""' → logprob: -9.451148986816406
    9. '"""
' → logprob: -9.576148986816406
    10. ' )' → logprob: -10.951148986816406

Token 38: ' where' (ID: 1919)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.17114414274692535
    2. ')' → logprob: -2.2961442470550537
    3. '   ' → logprob: -2.9211442470550537
    4. '"""
' → logprob: -6.546144008636475
    5. '```' → logprob: -7.296144008636475
    6. '""' → logprob: -7.921144008636475
    7. ' """' → logprob: -9.296144485473633
    8. '")' → logprob: -9.421144485473633
    9. '"' → logprob: -9.796144485473633
    10. '    ' → logprob: -11.046144485473633

Token 39: ' evaluation' (ID: 21407)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9651939272880554
    2. ' a' → logprob: -0.9651939272880554
    3. ' each' → logprob: -1.8401939868927002
    4. ' ai' → logprob: -3.4651939868927
    5. ' the' → logprob: -3.8401939868927
    6. 'each' → logprob: -4.840193748474121
    7. 'n' → logprob: -5.215193748474121
    8. ' an' → logprob: -5.215193748474121
    9. ' n' → logprob: -6.090193748474121
    10. '   ' → logprob: -6.215193748474121

Token 40: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7562549710273743
    2. ' proceeds' → logprob: -1.5062549114227295
    3. ' continues' → logprob: -2.0062549114227295
    4. '   ' → logprob: -3.0062549114227295
    5. ' of' → logprob: -3.6312549114227295
    6. ' def' → logprob: -3.8812549114227295
    7. 'contin' → logprob: -4.381255149841309
    8. ' can' → logprob: -5.006255149841309
    9. 'def' → logprob: -5.131255149841309
    10. ' occurs' → logprob: -5.131255149841309

Token 41: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -1.7832486629486084
    2. 'defined' → logprob: -1.7832486629486084
    3. ' defined' → logprob: -2.2832486629486084
    4. '   ' → logprob: -2.5332486629486084
    5. ' left' → logprob: -2.5332486629486084
    6. ' done' → logprob: -2.5332486629486084
    7. ' right' → logprob: -2.6582486629486084
    8. 'from' → logprob: -2.7832486629486084
    9. 'left' → logprob: -2.9082486629486084
    10. 'done' → logprob: -3.2832486629486084

Token 42: '-ass' (ID: 44229)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6075111627578735
    2. '-ass' → logprob: -1.2325111627578735
    3. '_ass' → logprob: -1.8575111627578735
    4. 'ass' → logprob: -6.232511043548584
    5. '   ' → logprob: -6.732511043548584
    6. '_assoc' → logprob: -6.732511043548584
    7. '-associated' → logprob: -7.357511043548584
    8. 'associated' → logprob: -7.732511043548584
    9. 'to' → logprob: -7.982511043548584
    10. '-to' → logprob: -8.107511520385742

Token 43: 'oci' (ID: 3212)
  Prédit: 'oci'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oci' → logprob: -0.00025954778539016843
    2. 'oc' → logprob: -8.750259399414062
    3. 'ociated' → logprob: -9.875259399414062
    4. 'ociate' → logprob: -10.125259399414062
    5. ')' → logprob: -12.500259399414062
    6. '```' → logprob: -12.875259399414062
    7. 'ociation' → logprob: -13.750259399414062
    8. 'ert' → logprob: -14.500259399414062
    9. '>' → logprob: -15.375259399414062
    10. '=' → logprob: -15.375259399414062

Token 44: 'ative' (ID: 1799)
  Prédit: 'ative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.0036247847601771355
    2. 'ated' → logprob: -5.62862491607666
    3. 'ate' → logprob: -11.25362491607666
    4. 'a' → logprob: -12.00362491607666
    5. 'ed' → logprob: -13.00362491607666
    6. 'able' → logprob: -13.25362491607666
    7. 'at' → logprob: -13.62862491607666
    8. 'e' → logprob: -16.378623962402344
    9. 'ativity' → logprob: -16.878623962402344
    10. 'ating' → logprob: -17.128623962402344

Token 45: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3527868390083313
    2. '   ' → logprob: -1.2277867794036865
    3. '"""' → logprob: -5.727787017822266
    4. '```' → logprob: -7.602787017822266
    5. ')
' → logprob: -8.227787017822266
    6. '  ' → logprob: -9.727787017822266
    7. ' ' → logprob: -9.852787017822266
    8. '\n' → logprob: -10.227787017822266
    9. '    ' → logprob: -10.352787017822266
    10. '*' → logprob: -10.852787017822266

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08266863226890564
    2. '"""' → logprob: -2.5826685428619385
    3. '```' → logprob: -6.457668781280518
    4. ')' → logprob: -7.082668781280518
    5. ' """' → logprob: -7.082668781280518
    6. '"""
' → logprob: -8.45766830444336
    7. '    ' → logprob: -8.70766830444336
    8. ' """
' → logprob: -10.45766830444336
    9. '"' → logprob: -10.58266830444336
    10. '`' → logprob: -10.58266830444336

Token 47: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23099026083946228
    2. '"""' → logprob: -1.6059902906417847
    3. '```' → logprob: -6.105990409851074
    4. ')' → logprob: -6.480990409851074
    5. '"""
' → logprob: -6.855990409851074
    6. 'def' → logprob: -8.105990409851074
    7. '    ' → logprob: -9.105990409851074
    8. '""' → logprob: -9.230990409851074
    9. ' """' → logprob: -9.605990409851074
    10. '"' → logprob: -10.355990409851074

Token 48: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.555230975151062
    2. '   ' → logprob: -1.055230975151062
    3. '@' → logprob: -2.5552310943603516
    4. ' def' → logprob: -8.305231094360352
    5. '@property' → logprob: -11.805231094360352
    6. ' @' → logprob: -12.180231094360352
    7. 'total' → logprob: -12.555231094360352
    8. ' ' → logprob: -12.930231094360352
    9. '```' → logprob: -12.930231094360352
    10. 'class' → logprob: -13.680231094360352

Token 49: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.002063780091702938
    2. '@' → logprob: -6.252063751220703
    3. ' def' → logprob: -9.002063751220703
    4. '@property' → logprob: -12.127063751220703
    5. '   ' → logprob: -12.502063751220703
    6. '__' → logprob: -13.127063751220703
    7. '_def' → logprob: -15.127063751220703
    8. '@dat' → logprob: -15.377063751220703
    9. 'de' → logprob: -15.502063751220703
    10. '@param' → logprob: -16.252063751220703

Token 50: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.9399443864822388
    2. ' __' → logprob: -1.1899443864822388
    3. '_init' → logprob: -1.6899443864822388
    4. ' init' → logprob: -2.939944267272949
    5. ' def' → logprob: -3.439944267272949
    6. '__' → logprob: -3.689944267272949
    7. ' ' → logprob: -5.439944267272949
    8. 'def' → logprob: -6.064944267272949
    9. ' _' → logprob: -6.439944267272949
    10. '```' → logprob: -6.814944267272949

Token 51: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.512236498361744e-07
    2. 'ini' → logprob: -14.625000953674316
    3. ' init' → logprob: -18.125
    4. 'in' → logprob: -19.0
    5. 'i' → logprob: -19.375
    6. 'inite' → logprob: -19.5
    7. '```' → logprob: -19.625
    8. 'int' → logprob: -19.75
    9. '_init' → logprob: -20.375
    10. 'eq' → logprob: -20.375

Token 52: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7373847365379333
    2. '(' → logprob: -1.2373847961425781
    3. '__(' → logprob: -1.6123847961425781
    4. '<|end|>' → logprob: -3.987384796142578
    5. ' (' → logprob: -5.487384796142578
    6. 'self' → logprob: -5.612384796142578
    7. '__(
' → logprob: -6.487384796142578
    8. '<|end|>' → logprob: -6.862384796142578
    9. '_(' → logprob: -7.362384796142578
    10. '```' → logprob: -7.737384796142578

Token 53: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002314303710591048
    2. ' self' → logprob: -8.375231742858887
    3. '
' → logprob: -15.875231742858887
    4. ' ' → logprob: -15.875231742858887
    5. '(self' → logprob: -16.12523078918457
    6. '<|end|>' → logprob: -16.12523078918457
    7. '0' → logprob: -16.50023078918457
    8. '	self' → logprob: -16.50023078918457
    9. '_self' → logprob: -16.50023078918457
    10. '   ' → logprob: -16.75023078918457

Token 54: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1324986070394516
    2. '(self' → logprob: -2.7574985027313232
    3. ' self' → logprob: -3.3824985027313232
    4. ',' → logprob: -3.7574985027313232
    5. '_self' → logprob: -6.882498741149902
    6. '(' → logprob: -7.382498741149902
    7. ')' → logprob: -7.757498741149902
    8. ' (' → logprob: -8.007498741149902
    9. ' ,' → logprob: -8.632498741149902
    10. '<|end|>' → logprob: -8.757498741149902

Token 55: ' bases' (ID: 31148)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07140328735113144
    2. ' self' → logprob: -2.6964032649993896
    3. 'values' → logprob: -7.321403503417969
    4. 'a' → logprob: -8.696403503417969
    5. '       ' → logprob: -8.821403503417969
    6. 'powers' → logprob: -9.071403503417969
    7. ' values' → logprob: -9.571403503417969
    8. '   ' → logprob: -9.946403503417969
    9. 'elements' → logprob: -10.321403503417969
    10. ' bases' → logprob: -10.446403503417969

Token 56: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004438971809577197
    2. '):' → logprob: -8.125443458557129
    3. ')' → logprob: -10.125443458557129
    4. '=' → logprob: -10.250443458557129
    5. ',' → logprob: -10.375443458557129
    6. 'self' → logprob: -10.875443458557129
    7. '):
' → logprob: -11.875443458557129
    8. ' :' → logprob: -11.875443458557129
    9. ':list' → logprob: -12.875443458557129
    10. '   ' → logprob: -13.750443458557129

Token 57: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.5759461522102356
    2. ' List' → logprob: -0.8259461522102356
    3. '[List' → logprob: -12.700945854187012
    4. '	List' → logprob: -13.075945854187012
    5. '   ' → logprob: -14.200945854187012
    6. '       ' → logprob: -14.950945854187012
    7. ' list' → logprob: -15.450945854187012
    8. 'list' → logprob: -16.450946807861328
    9. '    ' → logprob: -16.825946807861328
    10. ')' → logprob: -16.825946807861328

Token 58: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -8.184812031686306e-05
    2. '[' → logprob: -10.000082015991211
    3. 'int' → logprob: -10.375082015991211
    4. '   ' → logprob: -13.000082015991211
    5. '<int' → logprob: -14.000082015991211
    6. ')' → logprob: -14.375082015991211
    7. '```' → logprob: -15.250082015991211
    8. '=int' → logprob: -15.875082015991211
    9. '[Int' → logprob: -15.875082015991211
    10. ']int' → logprob: -16.00008201599121

Token 59: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.5400482416152954
    2. '])' → logprob: -1.0400482416152954
    3. ']' → logprob: -2.790048122406006
    4. ']:' → logprob: -7.040048122406006
    5. '],' → logprob: -7.290048122406006
    6. ']):
' → logprob: -7.665048122406006
    7. '):' → logprob: -8.790048599243164
    8. ')' → logprob: -8.915048599243164
    9. ' ])' → logprob: -10.665048599243164
    10. ' ]' → logprob: -10.915048599243164

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002027850365266204
    2. 'self' → logprob: -6.252027988433838
    3. ' self' → logprob: -9.50202751159668
    4. '   ' → logprob: -11.87702751159668
    5. '):' → logprob: -12.00202751159668
    6. ':' → logprob: -12.37702751159668
    7. '```' → logprob: -13.12702751159668
    8. '[' → logprob: -13.87702751159668
    9. ')' → logprob: -14.12702751159668
    10. ',' → logprob: -14.25202751159668

Token 61: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.41676783561706543
    2. '       ' → logprob: -1.1667678356170654
    3. ' self' → logprob: -3.5417678356170654
    4. '   ' → logprob: -7.6667680740356445
    5. ' ' → logprob: -11.541768074035645
    6. '	self' → logprob: -12.541768074035645
    7. '           ' → logprob: -13.666768074035645
    8. '```' → logprob: -13.791768074035645
    9. '      ' → logprob: -13.916768074035645
    10. '     ' → logprob: -14.041768074035645

Token 62: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.043856728821992874
    2. '.' → logprob: -3.168856620788574
    3. ' .' → logprob: -7.293856620788574
    4. '   ' → logprob: -9.543856620788574
    5. '`.' → logprob: -10.293856620788574
    6. '       ' → logprob: -11.293856620788574
    7. ' ' → logprob: -11.668856620788574
    8. '.base' → logprob: -11.918856620788574
    9. 'bases' → logprob: -12.043856620788574
    10. ').' → logprob: -12.043856620788574

Token 63: 'ases' (ID: 4324)
  Prédit: 'ases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ases' → logprob: -2.558399319241289e-05
    2. 'bases' → logprob: -10.750025749206543
    3. 'ase' → logprob: -12.875025749206543
    4. 'a' → logprob: -14.625025749206543
    5. '```' → logprob: -14.625025749206543
    6. '   ' → logprob: -15.750025749206543
    7. 'asses' → logprob: -16.500024795532227
    8. '       ' → logprob: -16.750024795532227
    9. ' ases' → logprob: -16.875024795532227
    10. '``' → logprob: -17.250024795532227

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868922293186188
    2. '=' → logprob: -1.1368921995162964
    3. ' ' → logprob: -11.761892318725586
    4. ')' → logprob: -12.136892318725586
    5. '[:]' → logprob: -12.886892318725586
    6. '  ' → logprob: -14.011892318725586
    7. ':' → logprob: -14.011892318725586
    8. '[' → logprob: -14.136892318725586
    9. '=[]' → logprob: -14.136892318725586
    10. ' =[' → logprob: -15.011892318725586

Token 65: ' bases' (ID: 31148)
  Prédit: ' bases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bases' → logprob: -0.4740820825099945
    2. 'bases' → logprob: -0.9740821123123169
    3. 'b' → logprob: -13.974081993103027
    4. 'list' → logprob: -14.099081993103027
    5. 'Bases' → logprob: -14.099081993103027
    6. 'base' → logprob: -14.224081993103027
    7. ' list' → logprob: -14.474081993103027
    8. 'bas' → logprob: -15.224081993103027
    9. '[' → logprob: -15.849081993103027
    10. '```' → logprob: -15.849081993103027

Token 66: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48518145084381104
    2. '<|end|>' → logprob: -1.610181450843811
    3. 'def' → logprob: -2.4851813316345215
    4. '   ' → logprob: -2.9851813316345215
    5. '<|end|>' → logprob: -3.3601813316345215
    6. '```' → logprob: -5.2351813316345215
    7. '    
' → logprob: -5.8601813316345215
    8. '

' → logprob: -6.4851813316345215
    9. ' def' → logprob: -6.6101813316345215
    10. '  
' → logprob: -6.9851813316345215

Token 67: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6582439541816711
    2. 'def' → logprob: -1.4082438945770264
    3. '   ' → logprob: -2.1582438945770264
    4. '<|end|>' → logprob: -2.6582438945770264
    5. '<|end|>' → logprob: -4.0332441329956055
    6. '    
' → logprob: -4.7832441329956055
    7. ' def' → logprob: -4.9082441329956055
    8. '

' → logprob: -5.4082441329956055
    9. '@' → logprob: -5.4082441329956055
    10. ' ' → logprob: -5.9082441329956055

Token 68: ' def' (ID: 1056)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.2526852786540985
    2. 'def' (adapté à ' def') → logprob: -1.502685308456421
    3. '   ' → logprob: -7.252685070037842
    4. '@property' → logprob: -10.377685546875
    5. ' def' → logprob: -11.502685546875
    6. '@index' → logprob: -13.377685546875
    7. '@return' → logprob: -13.377685546875
    8. ' @' → logprob: -14.502685546875
    9. '@param' → logprob: -14.502685546875
    10. '```' → logprob: -14.627685546875

Token 69: ' evaluate' (ID: 21646)
  Prédit: '_eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_eval' → logprob: -0.9169962406158447
    2. ' _' → logprob: -1.1669962406158447
    3. ' def' → logprob: -1.6669962406158447
    4. ' evaluate' → logprob: -3.6669962406158447
    5. '_e' → logprob: -4.166996002197266
    6. '_repr' → logprob: -4.541996002197266
    7. '_' → logprob: -4.791996002197266
    8. ' __' → logprob: -5.166996002197266
    9. '_pow' → logprob: -5.166996002197266
    10. ' eval' → logprob: -5.416996002197266

Token 70: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004746841266751289
    2. '(' → logprob: -5.629746913909912
    3. '()' → logprob: -6.879746913909912
    4. ' (' → logprob: -9.504746437072754
    5. 'self' → logprob: -10.629746437072754
    6. '   ' → logprob: -11.879746437072754
    7. ')' → logprob: -12.504746437072754
    8. '       ' → logprob: -13.379746437072754
    9. '():' → logprob: -13.629746437072754
    10. ' ()' → logprob: -13.879746437072754

Token 71: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18268100917339325
    2. ')' → logprob: -2.057681083679199
    3. ',' → logprob: -3.307681083679199
    4. ' ):' → logprob: -7.182681083679199
    5. '):
' → logprob: -7.432681083679199
    6. '[' → logprob: -7.932681083679199
    7. 'self' → logprob: -8.3076810836792
    8. ' )' → logprob: -8.4326810836792
    9. '[]):' → logprob: -8.8076810836792
    10. ' ,' → logprob: -10.0576810836792

Token 72: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.15644456446170807
    2. ':' → logprob: -3.156444549560547
    3. ' ->' → logprob: -3.156444549560547
    4. '(' → logprob: -3.656444549560547
    5. '       ' → logprob: -4.156444549560547
    6. '   ' → logprob: -5.406444549560547
    7. '):' → logprob: -5.531444549560547
    8. ' :' → logprob: -5.906444549560547
    9. '():' → logprob: -6.281444549560547
    10. 'self' → logprob: -6.656444549560547

Token 73: ' float' (ID: 4428)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.18004266917705536
    2. ' int' → logprob: -1.8050426244735718
    3. 'float' → logprob: -8.430042266845703
    4. ' float' → logprob: -10.055042266845703
    5. ' ' → logprob: -10.680042266845703
    6. 'Optional' → logprob: -12.430042266845703
    7. '(int' → logprob: -12.555042266845703
    8. '   ' → logprob: -13.805042266845703
    9. ' Optional' → logprob: -13.930042266845703
    10. '[int' → logprob: -14.055042266845703

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001117711653932929
    2. ':
' → logprob: -7.626117706298828
    3. '):' → logprob: -7.876117706298828
    4. '():' → logprob: -9.251117706298828
    5. '       ' → logprob: -9.376117706298828
    6. '   ' → logprob: -10.501117706298828
    7. ':return' → logprob: -10.751117706298828
    8. ',' → logprob: -11.876117706298828
    9. ')' → logprob: -13.001117706298828
    10. '):
' → logprob: -13.251117706298828

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00546414777636528
    2. ' if' → logprob: -5.25546407699585
    3. 'if' → logprob: -8.630464553833008
    4. '```' → logprob: -11.005464553833008
    5. '   ' → logprob: -11.630464553833008
    6. '      ' → logprob: -11.880464553833008
    7. 'n' → logprob: -12.255464553833008
    8. ',' → logprob: -13.130464553833008
    9. '    ' → logprob: -13.255464553833008
    10. ':' → logprob: -13.630464553833008

Token 76: ' """
' (ID: 7037)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4793831408023834
    2. 'if' → logprob: -0.979383111000061
    3. '       ' → logprob: -5.3543829917907715
    4. 'def' → logprob: -7.7293829917907715
    5. 'n' → logprob: -9.85438346862793
    6. ' n' → logprob: -10.35438346862793
    7. ' def' → logprob: -10.85438346862793
    8. '   ' → logprob: -12.10438346862793
    9. '```' → logprob: -12.10438346862793
    10. 'return' → logprob: -12.35438346862793

Token 77: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2620640695095062
    2. ' if' → logprob: -1.5120640993118286
    3. '       ' → logprob: -4.762063980102539
    4. 'def' → logprob: -6.512063980102539
    5. '```' → logprob: -11.012063980102539
    6. ' def' → logprob: -11.512063980102539
    7. 'return' → logprob: -11.887063980102539
    8. '   ' → logprob: -12.012063980102539
    9. 'n' → logprob: -12.512063980102539
    10. '#' → logprob: -12.637063980102539

Token 78: ' Evaluate' (ID: 95819)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01286088302731514
    2. ' if' → logprob: -5.0128607749938965
    3. 'def' → logprob: -5.7628607749938965
    4. '       ' → logprob: -6.0128607749938965
    5. 'If' → logprob: -8.137861251831055
    6. '"""' → logprob: -8.762861251831055
    7. '#' → logprob: -9.887861251831055
    8. '```' → logprob: -11.262861251831055
    9. '"""
' → logprob: -11.637861251831055
    10. ' def' → logprob: -12.512861251831055

Token 79: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.1220373585820198
    2. 'self' → logprob: -2.747037410736084
    3. 'the' → logprob: -3.622037410736084
    4. '(self' → logprob: -4.622037410736084
    5. ' self' → logprob: -4.622037410736084
    6. '       ' → logprob: -6.122037410736084
    7. '   ' → logprob: -6.497037410736084
    8. ' ' → logprob: -8.122036933898926
    9. ')' → logprob: -10.122036933898926
    10. '(' → logprob: -10.247036933898926

Token 80: ' tower' (ID: 35225)
  Prédit: ' bases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bases' → logprob: -0.6802111268043518
    2. ' if' → logprob: -2.430211067199707
    3. ' next' → logprob: -2.555211067199707
    4. ' expression' → logprob: -2.680211067199707
    5. ' result' → logprob: -2.805211067199707
    6. ' value' → logprob: -3.430211067199707
    7. ' power' → logprob: -3.555211067199707
    8. ' def' → logprob: -4.180211067199707
    9. 'result' → logprob: -4.305211067199707
    10. 'value' → logprob: -4.555211067199707

Token 81: ' height' (ID: 4679)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.720343828201294
    2. ')' → logprob: -1.595343828201294
    3. '   ' → logprob: -2.470343828201294
    4. '(self' → logprob: -2.595343828201294
    5. '(' → logprob: -2.720343828201294
    6. ' if' → logprob: -3.845343828201294
    7. ',' → logprob: -4.220343589782715
    8. '
' → logprob: -4.970343589782715
    9. '[' → logprob: -5.345343589782715
    10. '        
' → logprob: -5.720343589782715

Token 82: ' using' (ID: 2360)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3368709087371826
    2. '   ' → logprob: -1.4618709087371826
    3. '    ' → logprob: -1.9618709087371826
    4. ' by' → logprob: -2.0868709087371826
    5. ' ' → logprob: -2.4618709087371826
    6. '       ' → logprob: -2.9618709087371826
    7. '<|end|>' → logprob: -3.8368709087371826
    8. ' at' → logprob: -4.586871147155762
    9. ' of' → logprob: -4.711871147155762
    10. '  ' → logprob: -4.711871147155762

Token 83: ' floating' (ID: 35887)
  Prédit: ' recursion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' recursion' → logprob: -0.26257362961769104
    2. ' self' → logprob: -1.7625735998153687
    3. 'self' → logprob: -3.387573719024658
    4. ' the' → logprob: -4.012573719024658
    5. ')' → logprob: -5.887573719024658
    6. ' recursive' → logprob: -6.512573719024658
    7. 'rec' → logprob: -7.012573719024658
    8. 'the' → logprob: -7.637573719024658
    9. 'recursive' → logprob: -8.1375732421875
    10. ' a' → logprob: -8.2625732421875

Token 84: ' approxim' (ID: 116685)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0013117826310917735
    2. '_point' → logprob: -7.001311779022217
    3. ' _' → logprob: -8.251312255859375
    4. ' ' → logprob: -9.626312255859375
    5. '    ' → logprob: -10.626312255859375
    6. ')' → logprob: -11.001312255859375
    7. '   ' → logprob: -12.001312255859375
    8. '(' → logprob: -12.001312255859375
    9. '-point' → logprob: -13.001312255859375
    10. '  ' → logprob: -13.251312255859375

Token 85: 'ations' (ID: 929)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.12180139869451523
    2. 'ate' → logprob: -2.2468013763427734
    3. 'a' → logprob: -4.871801376342773
    4. 'at' → logprob: -7.496801376342773
    5. ' at' → logprob: -7.746801376342773
    6. 'e' → logprob: -8.996801376342773
    7. 'ator' → logprob: -9.371801376342773
    8. 'ated' → logprob: -10.621801376342773
    9. ' a' → logprob: -11.496801376342773
    10. 'atio' → logprob: -11.496801376342773

Token 86: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005119784269481897
    2. '.' → logprob: -6.880119800567627
    3. '
' → logprob: -7.130119800567627
    4. '   ' → logprob: -7.255119800567627
    5. ')' → logprob: -7.380119800567627
    6. ':' → logprob: -7.505119800567627
    7. ',' → logprob: -7.630119800567627
    8. '):' → logprob: -8.755119323730469
    9. '        
' → logprob: -9.005119323730469
    10. 'n' → logprob: -9.130119323730469

Token 87: ' mainly' (ID: 19294)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007415782194584608
    2. ' if' → logprob: -5.132415771484375
    3. '   ' → logprob: -7.132415771484375
    4. '           ' → logprob: -8.382415771484375
    5. '        ' → logprob: -8.882415771484375
    6. 'if' → logprob: -9.507415771484375
    7. '    ' → logprob: -9.507415771484375
    8. ' ' → logprob: -9.757415771484375
    9. '      ' → logprob: -11.132415771484375
    10. ')' → logprob: -11.382415771484375

Token 88: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6829888820648193
    2. ' to' → logprob: -1.0579888820648193
    3. 'for' → logprob: -2.3079888820648193
    4. 'to' → logprob: -3.1829888820648193
    5. '       ' → logprob: -5.432989120483398
    6. '   ' → logprob: -6.932989120483398
    7. ' by' → logprob: -8.307989120483398
    8. ' recursively' → logprob: -8.557989120483398
    9. 'def' → logprob: -8.807989120483398
    10. ' the' → logprob: -8.807989120483398

Token 89: ' possible' (ID: 4149)
  Prédit: ' debugging'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' debugging' → logprob: -0.6087155938148499
    2. ' testing' → logprob: -1.983715534210205
    3. ' readability' → logprob: -3.108715534210205
    4. ' visualization' → logprob: -3.608715534210205
    5. ' recursion' → logprob: -3.608715534210205
    6. ' the' → logprob: -3.733715534210205
    7. ' purposes' → logprob: -3.983715534210205
    8. ' internal' → logprob: -4.108715534210205
    9. ' comparison' → logprob: -4.108715534210205
    10. ' convenience' → logprob: -4.608715534210205

Token 90: ' future' (ID: 5277)
  Prédit: ' recursion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' recursion' → logprob: -1.7515591382980347
    2. ' purposes' → logprob: -2.126559257507324
    3. ' debugging' → logprob: -2.251559257507324
    4. ' comparisons' → logprob: -2.626559257507324
    5. ' comparison' → logprob: -2.626559257507324
    6. ' testing' → logprob: -3.001559257507324
    7. ' ' → logprob: -3.126559257507324
    8. ' practical' → logprob: -3.626559257507324
    9. ' visualization' → logprob: -3.626559257507324
    10. ' stability' → logprob: -3.626559257507324

Token 91: ' use' (ID: 1199)
  Prédit: ' use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' use' → logprob: -0.21883805096149445
    2. ' purposes' → logprob: -2.9688379764556885
    3. ' usage' → logprob: -3.3438379764556885
    4. ' implementation' → logprob: -3.5938379764556885
    5. 'use' → logprob: -3.8438379764556885
    6. ' uses' → logprob: -4.718838214874268
    7. ' recursion' → logprob: -4.843838214874268
    8. ' optimization' → logprob: -5.718838214874268
    9. ' ' → logprob: -5.968838214874268
    10. ' applications' → logprob: -6.093838214874268

Token 92: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15644201636314392
    2. '   ' → logprob: -2.7814419269561768
    3. ')' → logprob: -3.1564419269561768
    4. '\n' → logprob: -4.406442165374756
    5. '.' → logprob: -4.781442165374756
    6. '        
' → logprob: -5.656442165374756
    7. ',' → logprob: -6.156442165374756
    8. '    ' → logprob: -6.406442165374756
    9. '`' → logprob: -6.656442165374756
    10. ' ' → logprob: -6.656442165374756

Token 93: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037264458369463682
    2. 'n' → logprob: -5.878726482391357
    3. '   ' → logprob: -7.628726482391357
    4. '```' → logprob: -9.0037260055542
    5. '
' → logprob: -10.2537260055542
    6. '`' → logprob: -10.3787260055542
    7. '        
' → logprob: -10.3787260055542
    8. ')' → logprob: -10.3787260055542
    9. '\n' → logprob: -10.7537260055542
    10. 'e' → logprob: -10.8787260055542

Token 94: ' This' (ID: 1328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09553110599517822
    2. ' if' → logprob: -2.5955309867858887
    3. 'if' → logprob: -4.345530986785889
    4. '```' → logprob: -6.970530986785889
    5. 'n' → logprob: -7.345530986785889
    6. '        
' → logprob: -7.720530986785889
    7. '   ' → logprob: -8.345531463623047
    8. 'return' → logprob: -8.470531463623047
    9. ')' → logprob: -8.595531463623047
    10. '
' → logprob: -8.845531463623047

Token 95: ' won't' (ID: 14219)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7076613903045654
    2. ' def' → logprob: -1.7076613903045654
    3. ' ' → logprob: -2.5826613903045654
    4. 'def' → logprob: -2.9576613903045654
    5. ' uses' → logprob: -3.0826613903045654
    6. ' can' → logprob: -3.4576613903045654
    7. '    ' → logprob: -3.5826613903045654
    8. '   ' → logprob: -3.9576613903045654
    9. ' involves' → logprob: -4.3326616287231445
    10. ' code' → logprob: -4.4576616287231445

Token 96: ' be' (ID: 413)
  Prédit: ' handle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' handle' → logprob: -0.30338871479034424
    2. ' work' → logprob: -2.0533885955810547
    3. 'handle' → logprob: -3.1783885955810547
    4. ' support' → logprob: -3.5533885955810547
    5. ' be' → logprob: -3.6783885955810547
    6. ' accurately' → logprob: -4.928388595581055
    7. ' raise' → logprob: -5.303388595581055
    8. ' give' → logprob: -5.553388595581055
    9. 'support' → logprob: -5.553388595581055
    10. ' correctly' → logprob: -6.178388595581055

Token 97: ' the' (ID: 290)
  Prédit: 'accur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'accur' → logprob: -0.5121846795082092
    2. ' accurate' → logprob: -1.6371846199035645
    3. 'able' → logprob: -2.6371846199035645
    4. ' precise' → logprob: -3.7621846199035645
    5. 'exact' → logprob: -3.8871846199035645
    6. ' mathem' → logprob: -3.8871846199035645
    7. ' reliable' → logprob: -4.5121846199035645
    8. 's' → logprob: -4.5121846199035645
    9. ' able' → logprob: -5.0121846199035645
    10. 'prec' → logprob: -5.0121846199035645

Token 98: ' comparator' (ID: 96166)
  Prédit: ' exact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' exact' → logprob: -0.4748629331588745
    2. ' same' → logprob: -1.8498629331588745
    3. ' whole' → logprob: -3.224863052368164
    4. ' result' → logprob: -3.349863052368164
    5. 'exact' → logprob: -3.599863052368164
    6. 'same' → logprob: -4.474863052368164
    7. ' actual' → logprob: -4.599863052368164
    8. ' entire' → logprob: -4.724863052368164
    9. 're' → logprob: -4.849863052368164
    10. ' full' → logprob: -4.974863052368164

Token 99: ' logic' (ID: 18485)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11990846693515778
    2. ':' → logprob: -2.369908571243286
    3. ')' → logprob: -5.244908332824707
    4. ',' → logprob: -5.494908332824707
    5. ' ' → logprob: -6.369908332824707
    6. '.
' → logprob: -6.369908332824707
    7. '   ' → logprob: -6.869908332824707
    8. ' .' → logprob: -7.119908332824707
    9. ''s' → logprob: -7.244908332824707
    10. ':
' → logprob: -7.369908332824707

Token 100: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07205416262149811
    2. '.' → logprob: -3.072054147720337
    3. '   ' → logprob: -4.822054386138916
    4. ')' → logprob: -5.822054386138916
    5. ',' → logprob: -5.822054386138916
    6. '    ' → logprob: -5.822054386138916
    7. 'n' → logprob: -6.322054386138916
    8. '<|end|>' → logprob: -6.447054386138916
    9. '\n' → logprob: -7.197054386138916
    10. '    
' → logprob: -8.072053909301758

Token 101: ' can' (ID: 665)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8585877418518066
    2. ' not' → logprob: -1.8585877418518066
    3. '       ' → logprob: -2.1085877418518066
    4. '   ' → logprob: -2.3585877418518066
    5. ' for' → logprob: -2.7335877418518066
    6. ' only' → logprob: -2.8585877418518066
    7. ' return' → logprob: -3.7335877418518066
    8. ' a' → logprob: -4.608587741851807
    9. ' is' → logprob: -5.483587741851807
    10. '<|end|>' → logprob: -5.483587741851807

Token 102: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.192301943898201
    2. ' provide' → logprob: -2.3173019886016846
    3. ' help' → logprob: -3.8173019886016846
    4. '   ' → logprob: -4.0673017501831055
    5. ' return' → logprob: -4.3173017501831055
    6. ' ' → logprob: -4.9423017501831055
    7. '<|end|>' → logprob: -5.5673017501831055
    8. ' only' → logprob: -5.9423017501831055
    9. ' continue' → logprob: -6.1923017501831055
    10. ' serve' → logprob: -6.4423017501831055

Token 103: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.34267768263816833
    2. ' useful' → logprob: -1.3426777124404907
    3. ' helpful' → logprob: -3.967677593231201
    4. 'used' → logprob: -4.717677593231201
    5. 'use' → logprob: -7.467677593231201
    6. ' use' → logprob: -8.09267807006836
    7. ' a' → logprob: -9.46767807006836
    8. '```' → logprob: -10.21767807006836
    9. ' continued' → logprob: -10.71767807006836
    10. 'help' → logprob: -10.96767807006836

Token 104: ' to' (ID: 316)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15353477001190186
    2. ' to' → logprob: -2.5285348892211914
    3. ' as' → logprob: -3.1535348892211914
    4. '   ' → logprob: -4.278534889221191
    5. ' in' → logprob: -5.903534889221191
    6. 'for' → logprob: -7.278534889221191
    7. '    ' → logprob: -7.278534889221191
    8. ' ' → logprob: -7.528534889221191
    9. '.' → logprob: -7.653534889221191
    10. '  ' → logprob: -9.028534889221191

Token 105: ' debug' (ID: 15199)
  Prédit: ' provide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' provide' → logprob: -0.5753986835479736
    2. ' help' → logprob: -1.3253986835479736
    3. ' print' → logprob: -2.2003986835479736
    4. 'print' → logprob: -4.8253984451293945
    5. 'help' → logprob: -4.8253984451293945
    6. ' return' → logprob: -4.9503984451293945
    7. 'provide' → logprob: -4.9503984451293945
    8. ' get' → logprob: -5.4503984451293945
    9. ' test' → logprob: -5.8253984451293945
    10. ' compare' → logprob: -5.9503984451293945

Token 106: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8345637321472168
    2. '       ' → logprob: -0.9595637321472168
    3. ')' → logprob: -1.9595637321472168
    4. '.' → logprob: -4.084563732147217
    5. ' the' → logprob: -5.084563732147217
    6. ' or' → logprob: -5.209563732147217
    7. '):
' → logprob: -6.209563732147217
    8. '```' → logprob: -6.334563732147217
    9. ' code' → logprob: -6.834563732147217
    10. ' for' → logprob: -6.834563732147217

Token 107: ' approximate' (ID: 68753)
  Prédit: ' help'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' help' → logprob: -1.759523630142212
    2. ' provide' → logprob: -2.134523630142212
    3. ' get' → logprob: -2.259523630142212
    4. ' approximate' → logprob: -2.259523630142212
    5. ' print' → logprob: -2.384523630142212
    6. ' test' → logprob: -2.384523630142212
    7. ' check' → logprob: -2.634523630142212
    8. ' give' → logprob: -3.259523630142212
    9. ' visualize' → logprob: -3.259523630142212
    10. ' verify' → logprob: -3.759523630142212

Token 108: '.
' (ID: 558)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.13802297413349152
    2. '   ' → logprob: -2.8880228996276855
    3. '.' → logprob: -3.7630228996276855
    4. ')' → logprob: -4.1380228996276855
    5. '<|end|>' → logprob: -5.1380228996276855
    6. 'the' → logprob: -5.2630228996276855
    7. '       ' → logprob: -5.7630228996276855
    8. '
' → logprob: -5.8880228996276855
    9. '<|end|>' → logprob: -6.0130228996276855
    10. ' results' → logprob: -6.5130228996276855

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003389190824236721
    2. '
' → logprob: -9.000338554382324
    3. 'n' → logprob: -9.750338554382324
    4. '        
' → logprob: -9.875338554382324
    5. '   ' → logprob: -10.375338554382324
    6. '```' → logprob: -10.750338554382324
    7. 'return' → logprob: -11.750338554382324
    8. '    
' → logprob: -11.750338554382324
    9. '\n' → logprob: -12.500338554382324
    10. ' if' → logprob: -12.625338554382324

Token 110: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000504062045365572
    2. ' if' → logprob: -8.500504493713379
    3. 'if' → logprob: -8.750504493713379
    4. '```' → logprob: -9.125504493713379
    5. '
' → logprob: -11.375504493713379
    6. '   ' → logprob: -11.625504493713379
    7. 'n' → logprob: -12.375504493713379
    8. ')' → logprob: -13.250504493713379
    9. '"""' → logprob: -13.500504493713379
    10. '           ' → logprob: -14.125504493713379

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07703223079442978
    2. 'if' → logprob: -3.0770323276519775
    3. ' if' → logprob: -3.5770323276519775
    4. '```' → logprob: -10.327032089233398
    5. '   ' → logprob: -10.702032089233398
    6. 'n' → logprob: -11.202032089233398
    7. 'return' → logprob: -11.577032089233398
    8. 'stack' → logprob: -12.952032089233398
    9. 'def' → logprob: -13.952032089233398
    10. '           ' → logprob: -14.452032089233398

Token 112: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0004935794277116656
    2. 'def' → logprob: -7.75049352645874
    3. '       ' → logprob: -9.875494003295898
    4. ' if' → logprob: -12.000494003295898
    5. 'import' → logprob: -12.750494003295898
    6. 'return' (adapté à ' return') → logprob: -14.000494003295898
    7. 'from' → logprob: -14.250494003295898
    8. '```' → logprob: -14.250494003295898
    9. '   ' → logprob: -14.875494003295898
    10. 'n' → logprob: -17.2504940032959

Token 113: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4278218448162079
    2. 'self' → logprob: -1.1778218746185303
    3. '1' → logprob: -3.6778218746185303
    4. ' ' → logprob: -4.927821636199951
    5. 'pow' → logprob: -5.177821636199951
    6. ' float' → logprob: -7.427821636199951
    7. 'float' → logprob: -7.427821636199951
    8. ' pow' → logprob: -7.677821636199951
    9. '0' → logprob: -9.05282211303711
    10. '(self' → logprob: -10.17782211303711

Token 114: '._' (ID: 2697)
  Prédit: '.b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.13987047970294952
    2. '.' → logprob: -2.3898704051971436
    3. '.evaluate' → logprob: -3.6398704051971436
    4. '**' → logprob: -4.639870643615723
    5. ' .' → logprob: -6.639870643615723
    6. '.e' → logprob: -7.764870643615723
    7. ')' → logprob: -8.014870643615723
    8. '._' → logprob: -8.514870643615723
    9. '.eval' → logprob: -8.764870643615723
    10. ').' → logprob: -9.139870643615723

Token 115: 'eval' (ID: 37679)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -0.1493142545223236
    2. 'eval' → logprob: -2.0243141651153564
    3. 'power' → logprob: -5.8993144035339355
    4. 'pow' → logprob: -6.6493144035339355
    5. 'recursive' → logprob: -6.6493144035339355
    6. 'fast' → logprob: -8.274313926696777
    7. 'approx' → logprob: -8.399313926696777
    8. 'float' → logprob: -8.399313926696777
    9. 'safe' → logprob: -8.899313926696777
    10. '_eval' → logprob: -8.899313926696777

Token 116: '_recursive' (ID: 175926)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02909325435757637
    2. '(len' → logprob: -3.9040932655334473
    3. 'uate' → logprob: -5.154093265533447
    4. '_recursive' → logprob: -7.529093265533447
    5. 'er' → logprob: -7.904093265533447
    6. 'ute' → logprob: -8.029092788696289
    7. 'ue' → logprob: -8.154092788696289
    8. 'uation' → logprob: -8.279092788696289
    9. '(-' → logprob: -8.404092788696289
    10. 'ution' → logprob: -8.904092788696289

Token 117: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005730756092816591
    2. '(len' → logprob: -5.255730628967285
    3. ' (' → logprob: -8.255730628967285
    4. '(self' → logprob: -8.630730628967285
    5. '(
' → logprob: -10.255730628967285
    6. '((' → logprob: -11.755730628967285
    7. '("("' → logprob: -12.505730628967285
    8. '(lambda' → logprob: -13.255730628967285
    9. '(None' → logprob: -13.380730628967285
    10. '(`' → logprob: -13.380730628967285

Token 118: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04947430267930031
    2. 'len' → logprob: -3.1744742393493652
    3. 'self' → logprob: -5.674474239349365
    4. ')' → logprob: -5.924474239349365
    5. ' ' → logprob: -9.299474716186523
    6. '(len' → logprob: -9.674474716186523
    7. '1' → logprob: -9.799474716186523
    8. ' len' → logprob: -10.049474716186523
    9. '   ' → logprob: -10.174474716186523
    10. '-' → logprob: -10.549474716186523

Token 119: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09102189540863037
    2. ',' → logprob: -2.59102201461792
    3. ' )' → logprob: -4.46602201461792
    4. ',len' → logprob: -8.216021537780762
    5. ' ,' → logprob: -9.216021537780762
    6. ',)' → logprob: -9.716021537780762
    7. '   ' → logprob: -10.216021537780762
    8. ' +' → logprob: -11.216021537780762
    9. '       ' → logprob: -11.466021537780762
    10. '))' → logprob: -11.591021537780762

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2722163796424866
    2. '(' → logprob: -2.272216320037842
    3. '<|end|>' → logprob: -2.647216320037842
    4. '       ' → logprob: -3.897216320037842
    5. 'def' → logprob: -3.897216320037842
    6. '    ' → logprob: -5.772216320037842
    7. '\n' → logprob: -5.897216320037842
    8. ' ' → logprob: -6.022216320037842
    9. '<|end|>' → logprob: -6.147216320037842
    10. ')' → logprob: -6.147216320037842

Token 121: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9063312411308289
    2. 'def' (adapté à ' def') → logprob: -1.1563313007354736
    3. ')' → logprob: -1.6563313007354736
    4. '       ' → logprob: -3.0313313007354736
    5. ' def' → logprob: -4.4063310623168945
    6. '(' → logprob: -4.4063310623168945
    7. '    ' → logprob: -6.0313310623168945
    8. '<|end|>' → logprob: -6.0313310623168945
    9. '```' → logprob: -6.0313310623168945
    10. ':' → logprob: -6.1563310623168945

Token 122: ' _' (ID: 1175)
  Prédit: '_eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_eval' → logprob: -0.09068737924098969
    2. ' _' → logprob: -2.4656872749328613
    3. ' def' → logprob: -6.465687274932861
    4. 'def' → logprob: -9.09068775177002
    5. '_def' → logprob: -10.71568775177002
    6. '_val' → logprob: -11.46568775177002
    7. '_' → logprob: -11.59068775177002
    8. ' ' → logprob: -12.09068775177002
    9. ' eval' → logprob: -12.21568775177002
    10. '   ' → logprob: -12.34068775177002

Token 123: 'eval' (ID: 37679)
  Prédit: 'eval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -7.862962229410186e-05
    2. '_eval' → logprob: -9.625078201293945
    3. ' eval' → logprob: -11.375078201293945
    4. 'evaluate' → logprob: -14.875078201293945
    5. 'e' → logprob: -15.375078201293945
    6. 'ev' → logprob: -15.750078201293945
    7. '(eval' → logprob: -16.250078201293945
    8. 'val' → logprob: -16.375078201293945
    9. '.eval' → logprob: -16.500078201293945
    10. 'def' → logprob: -18.250078201293945

Token 124: '_recursive' (ID: 175926)
  Prédit: '_recursive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_recursive' → logprob: -1.981667537620524e-06
    2. '_' → logprob: -13.750001907348633
    3. '_rec' → logprob: -14.125001907348633
    4. 'recursive' → logprob: -15.625001907348633
    5. '__' → logprob: -18.500001907348633
    6. '_re' → logprob: -19.125001907348633
    7. 'Recursive' → logprob: -19.125001907348633
    8. ' _' → logprob: -19.250001907348633
    9. ' recursive' → logprob: -19.750001907348633
    10. '```' → logprob: -20.000001907348633

Token 125: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018276482820510864
    2. '(' → logprob: -4.018276691436768
    3. ' (' → logprob: -9.26827621459961
    4. '<|end|>' → logprob: -11.26827621459961
    5. '(
' → logprob: -11.39327621459961
    6. ' ' → logprob: -13.51827621459961
    7. 'self' → logprob: -13.64327621459961
    8. '(index' → logprob: -14.14327621459961
    9. '   ' → logprob: -14.14327621459961
    10. '}(' → logprob: -14.51827621459961

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2818385362625122
    2. ' ,' → logprob: -1.4068385362625122
    3. ')' → logprob: -7.906838417053223
    4. ' ' → logprob: -9.281838417053223
    5. '   ' → logprob: -9.406838417053223
    6. ' )' → logprob: -10.156838417053223
    7. 'index' → logprob: -10.906838417053223
    8. ',index' → logprob: -11.031838417053223
    9. ',
' → logprob: -11.406838417053223
    10. '    ' → logprob: -11.781838417053223

Token 127: ' idx' (ID: 14016)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.18045997619628906
    2. ' index' → logprob: -1.930459976196289
    3. ' idx' → logprob: -4.430459976196289
    4. 'idx' → logprob: -5.055459976196289
    5. 'i' → logprob: -7.680459976196289
    6. 'level' → logprob: -7.930459976196289
    7. 'self' → logprob: -8.180459976196289
    8. '   ' → logprob: -8.555459976196289
    9. ' ' → logprob: -9.430459976196289
    10. ' level' → logprob: -9.555459976196289

Token 128: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06793248653411865
    2. ')' → logprob: -3.067932605743408
    3. ':' → logprob: -5.067932605743408
    4. '+' → logprob: -5.442932605743408
    5. ' ):' → logprob: -5.442932605743408
    6. '):
' → logprob: -5.817932605743408
    7. ' +' → logprob: -7.442932605743408
    8. ' )' → logprob: -8.31793212890625
    9. '   ' → logprob: -8.56793212890625
    10. '=' → logprob: -9.31793212890625

Token 129: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0011998742120340466
    2. ' int' → logprob: -7.251199722290039
    3. ')' → logprob: -7.751199722290039
    4. '0' → logprob: -10.876199722290039
    5. '<|end|>' → logprob: -11.251199722290039
    6. ' ' → logprob: -11.751199722290039
    7. 'None' → logprob: -12.626199722290039
    8. ':int' → logprob: -13.001199722290039
    9. '1' → logprob: -13.126199722290039
    10. '[int' → logprob: -13.251199722290039

Token 130: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2522766888141632
    2. '):' → logprob: -1.5022766590118408
    3. ' )' → logprob: -8.752276420593262
    4. ' ):' → logprob: -9.002276420593262
    5. '):
' → logprob: -10.252276420593262
    6. ':' → logprob: -10.502276420593262
    7. '   ' → logprob: -13.127276420593262
    8. ')->' → logprob: -14.752276420593262
    9. '):
' → logprob: -14.877276420593262
    10. ',' → logprob: -15.627276420593262

Token 131: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006698081269860268
    2. '):' → logprob: -5.631698131561279
    3. ' ->' → logprob: -6.131698131561279
    4. '->' → logprob: -7.256698131561279
    5. ')' → logprob: -9.131697654724121
    6. ' :' → logprob: -10.006697654724121
    7. '   ' → logprob: -10.756697654724121
    8. ')->' → logprob: -11.631697654724121
    9. '():' → logprob: -11.756697654724121
    10. '       ' → logprob: -11.881697654724121

Token 132: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.01107329223304987
    2. ' float' → logprob: -4.511073112487793
    3. 'int' → logprob: -10.761073112487793
    4. 'flo' → logprob: -13.261073112487793
    5. '(float' → logprob: -14.011073112487793
    6. ' ' → logprob: -14.136073112487793
    7. '	float' → logprob: -14.886073112487793
    8. '   ' → logprob: -15.511073112487793
    9. '1' → logprob: -16.01107406616211
    10. 'f' → logprob: -17.01107406616211

Token 133: ':
' (ID: 734)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1469053030014038
    2. ' if' → logprob: -2.2719054222106934
    3. 'if' → logprob: -3.3969054222106934
    4. '   ' → logprob: -11.396904945373535
    5. 'If' → logprob: -12.146904945373535
    6. '	if' → logprob: -12.271904945373535
    7. '        
' → logprob: -13.271904945373535
    8. '<|end|>' → logprob: -13.396904945373535
    9. ' ' → logprob: -13.896904945373535
    10. '```' → logprob: -14.021904945373535

Token 135: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.26295915246009827
    2. ' if' → logprob: -1.5129591226577759
    3. '       ' → logprob: -4.512959003448486
    4. '   ' → logprob: -13.012959480285645
    5. '	if' → logprob: -14.512959480285645
    6. 'If' → logprob: -14.887959480285645
    7. '```' → logprob: -15.887959480285645
    8. ' ' → logprob: -15.887959480285645
    9. '           ' → logprob: -16.637958526611328
    10. '        ' → logprob: -17.012958526611328

Token 136: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.6932661533355713
    2. ' idx' → logprob: -0.6932661533355713
    3. '	idx' → logprob: -9.068265914916992
    4. '(idx' → logprob: -13.318265914916992
    5. '_idx' → logprob: -14.443265914916992
    6. '.idx' → logprob: -14.443265914916992
    7. '   ' → logprob: -15.068265914916992
    8. '       ' → logprob: -15.193265914916992
    9. '[idx' → logprob: -15.318265914916992
    10. '           ' → logprob: -16.943265914916992

Token 137: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7697497010231018
    2. '>=' → logprob: -1.269749641418457
    3. ' >=' → logprob: -2.019749641418457
    4. ' ==' → logprob: -2.144749641418457
    5. '+' → logprob: -5.144749641418457
    6. ' +' → logprob: -8.644749641418457
    7. ']>=' → logprob: -10.144749641418457
    8. '=' → logprob: -10.269749641418457
    9. '<|end|>' → logprob: -10.894749641418457
    10. '   ' → logprob: -11.144749641418457

Token 138: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.004080062732100487
    2. ' len' → logprob: -5.504080295562744
    3. '(len' → logprob: -14.004079818725586
    4. '	len' → logprob: -15.004079818725586
    5. '=len' → logprob: -15.629079818725586
    6. '<|end|>' → logprob: -16.379079818725586
    7. '<len' → logprob: -16.379079818725586
    8. '   ' → logprob: -16.879079818725586
    9. '[len' → logprob: -17.129079818725586
    10. ',len' → logprob: -17.504079818725586

Token 139: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00011009939044015482
    2. '(' → logprob: -9.125109672546387
    3. 'self' → logprob: -13.750109672546387
    4. ' self' → logprob: -17.500110626220703
    5. ' (' → logprob: -18.000110626220703
    6. '(this' → logprob: -18.625110626220703
    7. '(
' → logprob: -18.875110626220703
    8. '	self' → logprob: -19.875110626220703
    9. '(s' → logprob: -20.250110626220703
    10. '=self' → logprob: -21.000110626220703

Token 140: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.0003121056070085615
    2. ').' → logprob: -8.750311851501465
    3. '.' → logprob: -8.875311851501465
    4. ' .' → logprob: -11.500311851501465
    5. ')' → logprob: -13.875311851501465
    6. 'b' → logprob: -14.625311851501465
    7. '].' → logprob: -15.375311851501465
    8. '>.' → logprob: -15.500311851501465
    9. '}.' → logprob: -15.625311851501465
    10. '```' → logprob: -15.625311851501465

Token 141: 'ases' (ID: 4324)
  Prédit: 'ases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ases' → logprob: -4.008129963040119e-06
    2. 'bases' → logprob: -13.000003814697266
    3. 'ase' → logprob: -13.750003814697266
    4. '```' → logprob: -14.875003814697266
    5. 'asses' → logprob: -17.000003814697266
    6. 'ses' → logprob: -17.375003814697266
    7. 'a' → logprob: -17.625003814697266
    8. ' ases' → logprob: -18.000003814697266
    9. 'asis' → logprob: -18.000003814697266
    10. 'as' → logprob: -18.125003814697266

Token 142: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1273423433303833
    2. '):
' → logprob: -2.1273422241210938
    3. ')' → logprob: -7.877342224121094
    4. ' ):' → logprob: -11.127342224121094
    5. '):
' → logprob: -11.877342224121094
    6. ':' → logprob: -12.252342224121094
    7. '   ' → logprob: -12.752342224121094
    8. ' ):
' → logprob: -13.252342224121094
    9. '       ' → logprob: -13.377342224121094
    10. '):

' → logprob: -13.627342224121094

Token 143: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011461452580988407
    2. ':return' → logprob: -4.76146125793457
    3. ':
' → logprob: -6.13646125793457
    4. ' :' → logprob: -7.63646125793457
    5. '):' → logprob: -9.76146125793457
    6. '-' → logprob: -9.76146125793457
    7. ' -' → logprob: -9.88646125793457
    8. ' :
' → logprob: -11.76146125793457
    9. '():' → logprob: -12.01146125793457
    10. '   ' → logprob: -12.76146125793457

Token 144: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009757032617926598
    2. ' ' → logprob: -4.634757041931152
    3. '   ' → logprob: -14.384757041931152
    4. '  ' → logprob: -16.134756088256836
    5. '```' → logprob: -16.259756088256836
    6. '2' → logprob: -16.509756088256836
    7. '<|end|>' → logprob: -16.884756088256836
    8. '0' → logprob: -17.197256088256836
    9. '       ' → logprob: -17.322256088256836
    10. '    ' → logprob: -17.697256088256836

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.2762428822461516e-05
    2. ' ' → logprob: -9.875052452087402
    3. '2' → logprob: -14.625052452087402
    4. '```' → logprob: -15.687552452087402
    5. '   ' → logprob: -15.812552452087402
    6. '۱' → logprob: -16.37505340576172
    7. '0' → logprob: -16.75005340576172
    8. '  ' → logprob: -17.25005340576172
    9. '１' → logprob: -17.43755340576172
    10. '-' → logprob: -17.75005340576172

Token 146: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38826751708984375
    2. ':
' → logprob: -1.1382675170898438
    3. ':return' → logprob: -6.638267517089844
    4. '):
' → logprob: -10.388267517089844
    5. ' :' → logprob: -11.263267517089844
    6. ' :
' → logprob: -11.513267517089844
    7. '):' → logprob: -11.638267517089844
    8. ':
' → logprob: -11.888267517089844
    9. '       ' → logprob: -12.638267517089844
    10. 'return' → logprob: -12.888267517089844

Token 147: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.17445515096187592
    2. ' return' → logprob: -1.924455165863037
    3. '           ' → logprob: -4.799455165863037
    4. '       ' → logprob: -5.174455165863037
    5. '   ' → logprob: -8.924454689025879
    6. ':return' → logprob: -9.924454689025879
    7. '
' → logprob: -10.924454689025879
    8. '	return' → logprob: -11.549454689025879
    9. ':' → logprob: -11.799454689025879
    10. '        
' → logprob: -12.299454689025879

Token 148: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0006679982761852443
    2. ' return' → logprob: -7.500668048858643
    3. '           ' → logprob: -9.250667572021484
    4. '       ' → logprob: -11.000667572021484
    5. '   ' → logprob: -13.750667572021484
    6. '	return' → logprob: -14.500667572021484
    7. '
' → logprob: -15.250667572021484
    8. '```' → logprob: -16.000667572021484
    9. ':return' → logprob: -16.125667572021484
    10. '               ' → logprob: -16.625667572021484

Token 149: ' float' (ID: 4428)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31517359614372253
    2. 'float' → logprob: -1.315173625946045
    3. ' self' → logprob: -6.690173625946045
    4. ' float' → logprob: -7.315173625946045
    5. '       ' → logprob: -14.690173149108887
    6. '   ' → logprob: -14.690173149108887
    7. '(float' → logprob: -15.815173149108887
    8. '1' → logprob: -16.065174102783203
    9. '           ' → logprob: -16.190174102783203
    10. '(self' → logprob: -16.190174102783203

Token 150: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0683535037969705e-05
    2. 'self' → logprob: -11.50001049041748
    3. '(' → logprob: -14.50001049041748
    4. ' self' → logprob: -18.875011444091797
    5. '(
' → logprob: -19.125011444091797
    6. ' (' → logprob: -20.250011444091797
    7. '[self' → logprob: -20.375011444091797
    8. '	self' → logprob: -21.875011444091797
    9. '(s' → logprob: -22.250011444091797
    10. ':self' → logprob: -22.375011444091797

Token 151: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -5.9795445849886164e-05
    2. ').' → logprob: -10.500060081481934
    3. '.' → logprob: -10.625060081481934
    4. ' .' → logprob: -11.875060081481934
    5. '[' → logprob: -15.250060081481934
    6. '].' → logprob: -16.000059127807617
    7. '`.' → logprob: -16.125059127807617
    8. 'bases' → logprob: -16.125059127807617
    9. ')' → logprob: -16.250059127807617
    10. 'b' → logprob: -17.125059127807617

Token 152: 'ases' (ID: 4324)
  Prédit: 'ases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ases' → logprob: -0.00025037277373485267
    2. 'bases' → logprob: -8.375250816345215
    3. '.b' → logprob: -11.625250816345215
    4. 'ase' → logprob: -12.000250816345215
    5. 'asses' → logprob: -13.875250816345215
    6. 'a' → logprob: -14.000250816345215
    7. 'as' → logprob: -14.250250816345215
    8. '[' → logprob: -14.375250816345215
    9. 'b' → logprob: -15.000250816345215
    10. '```' → logprob: -15.250250816345215

Token 153: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.500001907348633
    3. ')' → logprob: -16.750001907348633
    4. '[
' → logprob: -16.875001907348633
    5. '[-' → logprob: -18.375001907348633
    6. ')[' → logprob: -18.625001907348633
    7. 'idx' → logprob: -19.000001907348633
    8. '[index' → logprob: -19.125001907348633
    9. '```' → logprob: -19.500001907348633
    10. ' [' → logprob: -19.625001907348633

Token 154: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6952491998672485
    2. '])' → logprob: -0.6952491998672485
    3. '])
' → logprob: -7.070249080657959
    4. ')
' → logprob: -7.195249080657959
    5. ']' → logprob: -8.945249557495117
    6. ')]' → logprob: -9.195249557495117
    7. ')])' → logprob: -9.195249557495117
    8. ' )' → logprob: -9.445249557495117
    9. '))' → logprob: -10.320249557495117
    10. ' ])' → logprob: -10.695249557495117

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025365818291902542
    2. '
' → logprob: -4.150365829467773
    3. 'else' → logprob: -5.400365829467773
    4. '**' → logprob: -6.150365829467773
    5. '        
' → logprob: -6.525365829467773
    6. 'return' → logprob: -7.900365829467773
    7. '    
' → logprob: -8.400365829467773
    8. '   ' → logprob: -8.525365829467773
    9. ')' → logprob: -9.025365829467773
    10. ' else' → logprob: -9.900365829467773

Token 156: ' base' (ID: 3611)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.30762147903442383
    2. '**' → logprob: -2.307621479034424
    3. 'base' (adapté à ' base') → logprob: -2.557621479034424
    4. 'pow' → logprob: -2.932621479034424
    5. 'result' → logprob: -3.932621479034424
    6. 'self' → logprob: -5.557621479034424
    7. 'else' → logprob: -5.932621479034424
    8. ' return' → logprob: -6.057621479034424
    9. '
' → logprob: -6.182621479034424
    10. 'b' → logprob: -7.182621479034424

Token 157: ' =' (ID: 314)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.38989007472991943
    2. ' *' → logprob: -1.3898900747299194
    3. '**' → logprob: -3.014890193939209
    4. '*' → logprob: -4.514890193939209
    5. ')' → logprob: -4.889890193939209
    6. ',' → logprob: -5.514890193939209
    7. ' ' → logprob: -6.514890193939209
    8. '(' → logprob: -9.13988971710205
    9. '=' → logprob: -9.13988971710205
    10. ' ,' → logprob: -9.63988971710205

Token 158: ' float' (ID: 4428)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014500177465379238
    2. ' self' → logprob: -4.264500141143799
    3. 'float' → logprob: -8.014500617980957
    4. ' float' → logprob: -12.264500617980957
    5. '       ' → logprob: -14.014500617980957
    6. '
' → logprob: -16.26449966430664
    7. '	self' → logprob: -16.51449966430664
    8. '   ' → logprob: -16.51449966430664
    9. '(self' → logprob: -16.88949966430664
    10. ' ' → logprob: -17.26449966430664

Token 159: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.796184723294573e-06
    2. 'self' → logprob: -12.500005722045898
    3. '(' → logprob: -13.375005722045898
    4. '(
' → logprob: -15.125005722045898
    5. '[self' → logprob: -16.1250057220459
    6. '=self' → logprob: -18.2500057220459
    7. ' (' → logprob: -18.5000057220459
    8. ' self' → logprob: -19.1250057220459
    9. '       ' → logprob: -19.2500057220459
    10. '(s' → logprob: -20.1250057220459

Token 160: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.0012577339075505733
    2. '.' → logprob: -7.25125789642334
    3. 'bases' → logprob: -7.87625789642334
    4. ').' → logprob: -9.25125789642334
    5. 'b' → logprob: -10.00125789642334
    6. ')' → logprob: -11.12625789642334
    7. '[' → logprob: -12.75125789642334
    8. ' .' → logprob: -13.25125789642334
    9. '[b' → logprob: -13.75125789642334
    10. ' bases' → logprob: -13.87625789642334

Token 161: 'ases' (ID: 4324)
  Prédit: 'ases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ases' → logprob: -0.0003902775060851127
    2. 'bases' → logprob: -7.87539005279541
    3. 'ase' → logprob: -11.87539005279541
    4. 'as' → logprob: -14.25039005279541
    5. '```' → logprob: -14.75039005279541
    6. 'asses' → logprob: -15.00039005279541
    7. ' bases' → logprob: -15.00039005279541
    8. 'b' → logprob: -15.50039005279541
    9. 'asis' → logprob: -15.50039005279541
    10. '   ' → logprob: -15.62539005279541

Token 162: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -8.061054359131958e-06
    2. 'idx' → logprob: -12.750007629394531
    3. ')' → logprob: -13.375007629394531
    4. ')[' → logprob: -13.500007629394531
    5. '[' → logprob: -13.875007629394531
    6. ' idx' → logprob: -14.500007629394531
    7. '   ' → logprob: -15.250007629394531
    8. '(idx' → logprob: -15.375007629394531
    9. ' [' → logprob: -16.50000762939453
    10. '	idx' → logprob: -16.62500762939453

Token 163: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.08963370323181152
    2. '])' → logprob: -2.4646337032318115
    3. ')
' → logprob: -7.589633941650391
    4. ')' → logprob: -9.58963394165039
    5. ' ])
' → logprob: -9.83963394165039
    6. '       ' → logprob: -10.58963394165039
    7. ']' → logprob: -11.08963394165039
    8. '])
' → logprob: -11.96463394165039
    9. '   ' → logprob: -12.33963394165039
    10. ' ])' → logprob: -12.33963394165039

Token 164: '       ' (ID: 309)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.012647381983697414
    2. 'base' → logprob: -4.5126471519470215
    3. ' **' → logprob: -6.8876471519470215
    4. ' base' → logprob: -8.13764762878418
    5. 'return' → logprob: -9.13764762878418
    6. 'pow' → logprob: -9.63764762878418
    7. '(base' → logprob: -9.76264762878418
    8. 'result' → logprob: -11.01264762878418
    9. '*' → logprob: -11.13764762878418
    10. 'power' → logprob: -11.51264762878418

Token 165: ' exponent' (ID: 51159)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.21963854134082794
    2. '**' → logprob: -2.3446385860443115
    3. 'return' → logprob: -2.7196385860443115
    4. 'result' → logprob: -3.9696385860443115
    5. 'pow' → logprob: -4.594638347625732
    6. 'power' → logprob: -5.719638347625732
    7. ' base' → logprob: -7.219638347625732
    8. 'ex' → logprob: -7.219638347625732
    9. '(base' → logprob: -7.344638347625732
    10. '
' → logprob: -7.594638347625732

Token 166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687121868133545
    2. '=' → logprob: -1.1368712186813354
    3. ')' → logprob: -16.386871337890625
    4. ' ' → logprob: -16.886871337890625
    5. ' =
' → logprob: -18.136871337890625
    6. '=float' → logprob: -18.261871337890625
    7. ',' → logprob: -18.886871337890625
    8. ' ' → logprob: -19.136871337890625
    9. '=self' → logprob: -19.261871337890625
    10. '=_' → logprob: -19.261871337890625

Token 167: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0789511501789093
    2. ' self' → logprob: -2.578951120376587
    3. '(self' → logprob: -9.953950881958008
    4. '       ' → logprob: -12.203950881958008
    5. '_self' → logprob: -12.953950881958008
    6. '	self' → logprob: -13.203950881958008
    7. '[self' → logprob: -13.328950881958008
    8. '=self' → logprob: -13.828950881958008
    9. '
' → logprob: -14.328950881958008
    10. ' ' → logprob: -15.453950881958008

Token 168: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -9.114600834436715e-05
    2. '_eval' → logprob: -9.500091552734375
    3. '.evaluate' → logprob: -12.125091552734375
    4. '.' → logprob: -12.125091552734375
    5. '.eval' → logprob: -12.500091552734375
    6. ' .' → logprob: -13.750091552734375
    7. ')._' → logprob: -15.500091552734375
    8. ']._' → logprob: -16.000091552734375
    9. ' _' → logprob: -16.125091552734375
    10. ' ' → logprob: -16.375091552734375

Token 169: 'eval' (ID: 37679)
  Prédit: 'eval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.00014978687977418303
    2. 'val' → logprob: -9.000149726867676
    3. '_eval' → logprob: -10.625149726867676
    4. ' eval' → logprob: -14.000149726867676
    5. '(eval' → logprob: -14.875149726867676
    6. '.eval' → logprob: -14.875149726867676
    7. 'ev' → logprob: -15.125149726867676
    8. 'env' → logprob: -17.250150680541992
    9. 'rec' → logprob: -17.250150680541992
    10. 'e' → logprob: -17.250150680541992

Token 170: '_recursive' (ID: 175926)
  Prédit: '_recursive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_recursive' → logprob: -3.7697225252486533e-06
    2. 'recursive' → logprob: -12.500003814697266
    3. '_rec' → logprob: -18.250003814697266
    4. 'Recursive' → logprob: -18.250003814697266
    5. '```' → logprob: -18.625003814697266
    6. '
' → logprob: -19.000003814697266
    7. ' recursive' → logprob: -19.875003814697266
    8. '\' → logprob: -20.625003814697266
    9. ' _' → logprob: -21.375003814697266
    10. '(_' → logprob: -21.375003814697266

Token 171: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -5.6100132496794686e-05
    2. '(' → logprob: -9.875056266784668
    3. 'idx' → logprob: -13.500056266784668
    4. ' (' → logprob: -13.625056266784668
    5. '(
' → logprob: -14.000056266784668
    6. '((' → logprob: -14.500056266784668
    7. '(index' → logprob: -15.000056266784668
    8. ' idx' → logprob: -15.875056266784668
    9. '[idx' → logprob: -16.12505531311035
    10. '```' → logprob: -16.37505531311035

Token 172: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3532516360282898
    2. '+' → logprob: -1.2282516956329346
    3. '(idx' → logprob: -5.3532514572143555
    4. '(' → logprob: -10.728251457214355
    5. ' ' → logprob: -11.728251457214355
    6. '()+' → logprob: -11.978251457214355
    7. ' idx' → logprob: -12.353251457214355
    8. 'idx' → logprob: -12.478251457214355
    9. ' (' → logprob: -12.603251457214355
    10. '(index' → logprob: -12.728251457214355

Token 173: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7968066206085496e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -15.625027656555176
    4. ')' → logprob: -16.500028610229492
    5. '```' → logprob: -17.250028610229492
    6. '
' → logprob: -18.250028610229492
    7. '           ' → logprob: -18.375028610229492
    8. '       ' → logprob: -18.750028610229492
    9. '     ' → logprob: -18.750028610229492
    10. '    ' → logprob: -19.000028610229492

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -16.000001907348633
    4. ')' → logprob: -16.750001907348633
    5. '
' → logprob: -18.000001907348633
    6. '```' → logprob: -18.125001907348633
    7. 'idx' → logprob: -19.500001907348633
    8. '           ' → logprob: -19.500001907348633
    9. '  ' → logprob: -19.875001907348633
    10. '       ' → logprob: -19.875001907348633

Token 175: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10027848929166794
    2. ')
' → logprob: -2.350278377532959
    3. ' )' → logprob: -10.725278854370117
    4. '))' → logprob: -11.475278854370117
    5. '())' → logprob: -11.850278854370117
    6. ' )
' → logprob: -11.850278854370117
    7. '()' → logprob: -12.225278854370117
    8. ')`
' → logprob: -12.225278854370117
    9. ')
' → logprob: -12.475278854370117
    10. '())
' → logprob: -12.475278854370117

Token 176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5852768421173096
    2. '
' → logprob: -1.0852768421173096
    3. 'return' → logprob: -2.4602768421173096
    4. '        
' → logprob: -5.2102766036987305
    5. ' return' → logprob: -5.3352766036987305
    6. ')' → logprob: -5.5852766036987305
    7. '**' → logprob: -5.7102766036987305
    8. '```' → logprob: -7.4602766036987305
    9. ')
' → logprob: -7.5852766036987305
    10. '<|end|>' → logprob: -7.7102766036987305

Token 177: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0031995740719139576
    2. ' return' → logprob: -6.253199577331543
    3. '
' → logprob: -7.628199577331543
    4. '**' → logprob: -7.628199577331543
    5. '       ' → logprob: -9.253199577331543
    6. '        
' → logprob: -9.878199577331543
    7. 'import' → logprob: -10.128199577331543
    8. '```' → logprob: -10.128199577331543
    9. 'base' → logprob: -11.003199577331543
    10. '#' (adapté à ' #') → logprob: -11.753199577331543

Token 178: ' ' (ID: 220)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0024305977858603
    2. 'import' → logprob: -6.502430438995361
    3. 'try' → logprob: -7.002430438995361
    4. ' return' → logprob: -11.62743091583252
    5. 'from' → logprob: -12.12743091583252
    6. '#' → logprob: -13.37743091583252
    7. 'result' → logprob: -13.50243091583252
    8. 'if' → logprob: -15.00243091583252
    9. '       ' → logprob: -15.87743091583252
    10. 'Try' → logprob: -16.127429962158203

Token 179: '0' (ID: 15)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0002458430244587362
    2. 'try' → logprob: -9.000246047973633
    3. 'import' → logprob: -9.750246047973633
    4. ' return' → logprob: -9.750246047973633
    5. '**' → logprob: -13.125246047973633
    6. 'pow' → logprob: -14.125246047973633
    7. 'base' → logprob: -14.250246047973633
    8. 'if' → logprob: -14.375246047973633
    9. 'result' → logprob: -14.375246047973633
    10. '#' → logprob: -15.000246047973633

Token 180: '^' (ID: 61)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.6586897969245911
    2. '**' → logprob: -1.0336897373199463
    3. ' if' → logprob: -2.2836897373199463
    4. '.' → logprob: -4.033689975738525
    5. 'if' → logprob: -5.033689975738525
    6. '
' → logprob: -8.908689498901367
    7. 'If' → logprob: -9.158689498901367
    8. '#' → logprob: -9.783689498901367
    9. ' <=' → logprob: -9.908689498901367
    10. ' and' → logprob: -10.158689498901367

Token 181: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011773703154176474
    2. 'ex' → logprob: -7.3761773109436035
    3. 'float' → logprob: -7.7511773109436035
    4. ' ' → logprob: -9.751177787780762
    5. 'base' → logprob: -11.001177787780762
    6. 'if' → logprob: -11.626177787780762
    7. '(' → logprob: -12.001177787780762
    8. '```' → logprob: -12.501177787780762
    9. '.' → logprob: -12.626177787780762
    10. '(ex' → logprob: -12.751177787780762

Token 182: ' =' (ID: 314)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.8953883647918701
    2. ' if' → logprob: -1.0203883647918701
    3. 'if' → logprob: -2.02038836479187
    4. ' and' → logprob: -3.27038836479187
    5. ' or' → logprob: -4.270388603210449
    6. '**' → logprob: -4.395388603210449
    7. ' return' → logprob: -4.895388603210449
    8. ')' → logprob: -5.020388603210449
    9. 'return' → logprob: -5.020388603210449
    10. ' **' → logprob: -6.270388603210449

Token 183: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3663626305060461e-05
    2. ' ' → logprob: -11.87501335144043
    3. '0' → logprob: -12.00001335144043
    4. 'float' → logprob: -15.50001335144043
    5. '   ' → logprob: -16.50001335144043
    6. '`' → logprob: -17.62501335144043
    7. '```' → logprob: -17.87501335144043
    8. '  ' → logprob: -18.12501335144043
    9. '	' → logprob: -18.43751335144043
    10. 'pow' → logprob: -18.56251335144043

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.875001907348633
    3. '0' → logprob: -14.375001907348633
    4. 'float' → logprob: -16.375001907348633
    5. 'undefined' → logprob: -17.375001907348633
    6. '   ' → logprob: -18.250001907348633
    7. '۱' → logprob: -19.312501907348633
    8. '  ' → logprob: -19.437501907348633
    9. 'one' → logprob: -19.875001907348633
    10. 'pow' → logprob: -20.000001907348633

Token 185: ' as' (ID: 472)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3672167658805847
    2. '
' → logprob: -1.3672168254852295
    3. '       ' → logprob: -3.1172168254852295
    4. 'if' → logprob: -5.11721658706665
    5. '        
' → logprob: -6.49221658706665
    6. 'return' → logprob: -7.99221658706665
    7. ',' → logprob: -9.242217063903809
    8. ' return' → logprob: -9.742217063903809
    9. ' and' → logprob: -10.117217063903809
    10. '
' → logprob: -10.242217063903809

Token 186: ' per' (ID: 777)
  Prédit: ' convention'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convention' → logprob: -0.769400417804718
    2. ' per' → logprob: -1.3944003582000732
    3. ' a' → logprob: -2.7694003582000732
    4. 'per' → logprob: -2.8944003582000732
    5. ' defined' → logprob: -3.2694003582000732
    6. 'defined' → logprob: -3.6444003582000732
    7. ' in' → logprob: -3.8944003582000732
    8. ' specified' → logprob: -4.394400596618652
    9. 'a' → logprob: -4.769400596618652
    10. ' standard' → logprob: -4.769400596618652

Token 187: ' the' (ID: 290)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.2131415605545044
    2. 'con' → logprob: -2.338141441345215
    3. 'common' → logprob: -3.213141441345215
    4. ' convention' → logprob: -3.713141441345215
    5. ' mathematical' → logprob: -4.588141441345215
    6. 'math' → logprob: -5.088141441345215
    7. 'Python' → logprob: -5.588141441345215
    8. ' math' → logprob: -5.963141441345215
    9. 'python' → logprob: -5.963141441345215
    10. ' common' → logprob: -6.088141441345215

Token 188: ' problem' (ID: 4792)
  Prédit: 'common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'common' → logprob: -1.1524882316589355
    2. 'con' → logprob: -1.5274882316589355
    3. 'mat' → logprob: -1.7774882316589355
    4. ' convention' → logprob: -2.1524882316589355
    5. 'Python' → logprob: -2.2774882316589355
    6. ' common' → logprob: -3.9024882316589355
    7. 'python' → logprob: -4.6524882316589355
    8. 'math' → logprob: -4.7774882316589355
    9. 'standard' → logprob: -4.9024882316589355
    10. ' mathematical' → logprob: -5.1524882316589355

Token 189: ' statement' (ID: 9710)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7946735620498657
    2. '
' → logprob: -1.1696735620498657
    3. '       ' → logprob: -1.5446735620498657
    4. ' return' → logprob: -4.794673442840576
    5. 'return' → logprob: -5.044673442840576
    6. '        
' → logprob: -5.669673442840576
    7. 'if' → logprob: -5.669673442840576
    8. ',' → logprob: -6.544673442840576
    9. ' and' → logprob: -8.044673919677734
    10. '
' → logprob: -8.794673919677734

Token 190: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36991098523139954
    2. ' if' → logprob: -1.3699109554290771
    3. '       ' → logprob: -3.494910955429077
    4. 'return' → logprob: -4.494911193847656
    5. 'if' → logprob: -4.994911193847656
    6. '        
' → logprob: -5.369911193847656
    7. ' return' → logprob: -6.994911193847656
    8. ')' → logprob: -7.619911193847656
    9. ')
' → logprob: -8.494911193847656
    10. ',' → logprob: -8.994911193847656

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23133595287799835
    2. '
' → logprob: -1.856335997581482
    3. '        
' → logprob: -4.2313361167907715
    4. ' if' → logprob: -4.4813361167907715
    5. 'return' → logprob: -4.6063361167907715
    6. ')' → logprob: -4.7313361167907715
    7. ' return' → logprob: -5.9813361167907715
    8. ')
' → logprob: -6.4813361167907715
    9. 'if' → logprob: -8.231335639953613
    10. ',' → logprob: -8.356335639953613

Token 192: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.009129147045314312
    2. ' if' → logprob: -4.759129047393799
    3. '       ' → logprob: -8.009129524230957
    4. 'return' → logprob: -8.634129524230957
    5. '
' → logprob: -12.759129524230957
    6. 'result' → logprob: -14.759129524230957
    7. '   ' → logprob: -15.009129524230957
    8. '        
' → logprob: -15.259129524230957
    9. ' return' → logprob: -15.509129524230957
    10. '	if' → logprob: -16.25912857055664

Token 193: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.3484525978565216
    2. ' base' → logprob: -1.2234525680541992
    3. '	base' → logprob: -12.8484525680542
    4. ' ' → logprob: -13.3484525680542
    5. '   ' → logprob: -13.7234525680542
    6. '(base' → logprob: -13.9734525680542
    7. 'Base' → logprob: -14.0984525680542
    8. '_base' → logprob: -15.5984525680542
    9. '0' → logprob: -15.7234525680542
    10. '  ' → logprob: -16.098453521728516

Token 194: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14268548786640167
    2. ' ==' → logprob: -2.0176854133605957
    3. ')==' → logprob: -12.892685890197754
    4. '()==' → logprob: -12.892685890197754
    5. '=' → logprob: -13.392685890197754
    6. ' ' → logprob: -14.017685890197754
    7. '==
' → logprob: -14.017685890197754
    8. '0' → logprob: -14.267685890197754
    9. ']==' → logprob: -14.642685890197754
    10. '===' → logprob: -14.767685890197754

Token 195: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012510117143392563
    2. ' ' → logprob: -4.387510299682617
    3. '  ' → logprob: -15.762510299682617
    4. '۰' → logprob: -16.137510299682617
    5. '   ' → logprob: -17.012510299682617
    6. '```' → logprob: -17.262510299682617
    7. '    ' → logprob: -17.637510299682617
    8. '<|end|>' → logprob: -17.762510299682617
    9. '
' → logprob: -18.200010299682617
    10. '০' → logprob: -18.637510299682617

Token 196: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.53050296427682e-05
    2. ' ' → logprob: -9.37508487701416
    3. '۰' → logprob: -15.68758487701416
    4. '1' → logprob: -17.062585830688477
    5. '```' → logprob: -17.250085830688477
    6. '০' → logprob: -17.562585830688477
    7. '  ' → logprob: -17.750085830688477
    8. '   ' → logprob: -18.000085830688477
    9. 'zero' → logprob: -18.062585830688477
    10. '
' → logprob: -18.125085830688477

Token 197: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4741254150867462
    2. 'and' → logprob: -0.9741253852844238
    3. ' ' → logprob: -10.224125862121582
    4. '.' → logprob: -12.224125862121582
    5. ':' → logprob: -12.724125862121582
    6. '0' → logprob: -13.349125862121582
    7. ':
' → logprob: -14.099125862121582
    8. '	and' → logprob: -14.724125862121582
    9. '<|end|>' → logprob: -14.974125862121582
    10. '   ' → logprob: -14.974125862121582

Token 198: ' exponent' (ID: 51159)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.007619399111717939
    2. ' exponent' → logprob: -4.882619380950928
    3. ' ex' → logprob: -12.382619857788086
    4. '	ex' → logprob: -12.757619857788086
    5. '0' → logprob: -13.007619857788086
    6. 'int' → logprob: -13.632619857788086
    7. ' ' → logprob: -14.007619857788086
    8. 'base' → logprob: -14.632619857788086
    9. 'float' → logprob: -15.257619857788086
    10. '(ex' → logprob: -15.632619857788086

Token 199: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.42874211072921753
    2. ' ==' → logprob: -1.0537421703338623
    3. '<=' → logprob: -11.178742408752441
    4. ' <=' → logprob: -11.803742408752441
    5. '0' → logprob: -11.928742408752441
    6. ')==' → logprob: -12.178742408752441
    7. '()==' → logprob: -12.928742408752441
    8. ' ' → logprob: -12.928742408752441
    9. ']==' → logprob: -13.553742408752441
    10. '=' → logprob: -14.428742408752441

Token 200: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005234002135694027
    2. ' ' → logprob: -5.2552337646484375
    3. '۰' → logprob: -16.505233764648438
    4. '  ' → logprob: -16.630233764648438
    5. '   ' → logprob: -16.880233764648438
    6. '<|end|>' → logprob: -18.130233764648438
    7. ' ' → logprob: -18.505233764648438
    8. '00' → logprob: -19.130233764648438
    9. '<|end|>' → logprob: -19.130233764648438
    10. '০' → logprob: -19.505233764648438

Token 201: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '۰' → logprob: -17.87507438659668
    4. '  ' → logprob: -19.25007438659668
    5. '   ' → logprob: -19.25007438659668
    6. '<|end|>' → logprob: -20.37507438659668
    7. '00' → logprob: -20.75007438659668
    8. '０' → logprob: -20.87507438659668
    9. '০' → logprob: -21.25007438659668
    10. '٠' → logprob: -21.62507438659668

Token 202: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47460252046585083
    2. ':
' → logprob: -0.9746025204658508
    3. '       ' → logprob: -8.474602699279785
    4. '           ' → logprob: -8.474602699279785
    5. ':return' → logprob: -10.099602699279785
    6. ':
' → logprob: -10.224602699279785
    7. '):
' → logprob: -10.974602699279785
    8. '   ' → logprob: -12.349602699279785
    9. ':

' → logprob: -12.849602699279785
    10. ',' → logprob: -13.599602699279785

Token 203: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008547629113309085
    2. 'return' → logprob: -7.875854969024658
    3. ' return' → logprob: -7.875854969024658
    4. ':' → logprob: -10.5008544921875
    5. '            
' → logprob: -11.1258544921875
    6. '1' → logprob: -11.7508544921875
    7. '       ' → logprob: -12.0008544921875
    8. '               ' → logprob: -12.0008544921875
    9. ':
' → logprob: -12.2508544921875
    10. '
' → logprob: -12.5008544921875

Token 204: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.31569552421569824
    2. ' return' → logprob: -1.3156955242156982
    3. '           ' → logprob: -6.065695762634277
    4. '1' → logprob: -9.815695762634277
    5. '               ' → logprob: -10.940695762634277
    6. '       ' → logprob: -10.940695762634277
    7. '
' → logprob: -11.815695762634277
    8. '   ' → logprob: -12.565695762634277
    9. '	return' → logprob: -12.815695762634277
    10. ' ' → logprob: -13.440695762634277

Token 205: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -20.5
    4. 'float' → logprob: -21.875
    5. '```' → logprob: -22.875
    6. '۱' → logprob: -23.375
    7. '`' → logprob: -23.75
    8. '１' → logprob: -24.75
    9. '  ' → logprob: -25.0
    10. ' ' → logprob: -25.25

Token 206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '   ' → logprob: -18.875
    4. 'float' → logprob: -20.0
    5. '```' → logprob: -20.875
    6. '`' → logprob: -22.375
    7. '۱' → logprob: -22.875
    8. '       ' → logprob: -22.875
    9. '  ' → logprob: -23.375
    10. '１' → logprob: -24.375

Token 207: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09447794407606125
    2. '       ' → logprob: -2.594477891921997
    3. '        
' → logprob: -4.469478130340576
    4. ' 
' → logprob: -6.469478130340576
    5. '  
' → logprob: -7.219478130340576
    6. ' else' → logprob: -7.469478130340576
    7. 'else' → logprob: -7.844478130340576
    8. '    
' → logprob: -8.219477653503418
    9. '.' → logprob: -8.969477653503418
    10. '
' → logprob: -9.344477653503418

Token 208: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00022964231902733445
    2. '
' → logprob: -8.625229835510254
    3. 'else' → logprob: -10.500229835510254
    4. ' 
' → logprob: -11.875229835510254
    5. '        
' → logprob: -12.250229835510254
    6. ' ' → logprob: -12.875229835510254
    7. '```' → logprob: -13.125229835510254
    8. '    
' → logprob: -13.750229835510254
    9. ' else' → logprob: -13.875229835510254
    10. 'return' → logprob: -14.250229835510254

Token 209: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03187587484717369
    2. '
' → logprob: -3.6568758487701416
    3. 'return' → logprob: -5.406876087188721
    4. '        
' → logprob: -7.531876087188721
    5. ' return' → logprob: -8.531875610351562
    6. 'else' → logprob: -8.781875610351562
    7. '    
' → logprob: -10.031875610351562
    8. ' else' → logprob: -10.031875610351562
    9. '   ' → logprob: -10.406875610351562
    10. '  
' → logprob: -10.781875610351562

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007739243097603321
    2. 'return' → logprob: -5.382739067077637
    3. '
' → logprob: -6.382739067077637
    4. '        
' → logprob: -7.382739067077637
    5. ' return' → logprob: -7.632739067077637
    6. '   ' → logprob: -8.882739067077637
    7. '    
' → logprob: -9.757739067077637
    8. 'else' → logprob: -10.257739067077637
    9. '  
' → logprob: -10.882739067077637
    10. ' 
' → logprob: -11.007739067077637

Token 211: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.003087874734774232
    2. '       ' → logprob: -6.503087997436523
    3. ' return' → logprob: -6.878087997436523
    4. 'import' → logprob: -7.878087997436523
    5. '   ' → logprob: -9.628087997436523
    6. 'result' → logprob: -10.003087997436523
    7. 'else' → logprob: -10.378087997436523
    8. '
' → logprob: -11.128087997436523
    9. '        
' → logprob: -11.878087997436523
    10. '```' → logprob: -12.503087997436523

Token 212: ' To' (ID: 2514)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03135302662849426
    2. 'import' → logprob: -3.656352996826172
    3. ' return' → logprob: -5.656352996826172
    4. 'if' → logprob: -7.156352996826172
    5. 'try' → logprob: -8.156352996826172
    6. '       ' → logprob: -8.781352996826172
    7. 'result' → logprob: -8.906352996826172
    8. 'from' → logprob: -9.406352996826172
    9. 'else' → logprob: -9.656352996826172
    10. ' if' → logprob: -11.531352996826172

Token 213: ' avoid' (ID: 8397)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5013267397880554
    2. 'import' → logprob: -1.2513267993927002
    3. 'handle' → logprob: -2.8763267993927
    4. 'avoid' → logprob: -4.251326560974121
    5. 'prevent' → logprob: -4.501326560974121
    6. ' return' → logprob: -4.751326560974121
    7. ' prevent' → logprob: -5.501326560974121
    8. ' avoid' → logprob: -5.751326560974121
    9. ' handle' → logprob: -5.751326560974121
    10. 'calculate' → logprob: -6.876326560974121

Token 214: ' math' (ID: 13324)
  Prédit: ' overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overflow' → logprob: -1.3405277729034424
    2. ' math' → logprob: -1.4655277729034424
    3. 'Overflow' → logprob: -1.7155277729034424
    4. 'overflow' → logprob: -1.9655277729034424
    5. 'math' → logprob: -2.3405277729034424
    6. ' Overflow' → logprob: -2.7155277729034424
    7. 'float' → logprob: -4.215527534484863
    8. ' float' → logprob: -5.590527534484863
    9. '(math' → logprob: -6.090527534484863
    10. '(' → logprob: -6.340527534484863

Token 215: ' domain' (ID: 11819)
  Prédit: ' domain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' domain' → logprob: -0.6695730686187744
    2. '.' → logprob: -1.4195730686187744
    3. 'domain' → logprob: -1.4195730686187744
    4. 'import' → logprob: -6.544572830200195
    5. '.pow' → logprob: -7.044572830200195
    6. '.isnan' → logprob: -7.419572830200195
    7. '.log' → logprob: -8.419572830200195
    8. '.sqrt' → logprob: -8.419572830200195
    9. '.nan' → logprob: -8.544572830200195
    10. 'Domain' → logprob: -8.669572830200195

Token 216: ' errors' (ID: 10664)
  Prédit: ' errors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' errors' → logprob: -0.369222491979599
    2. 'error' → logprob: -1.9942225217819214
    3. ' error' → logprob: -2.244222402572632
    4. 'errors' → logprob: -2.744222402572632
    5. '_error' → logprob: -6.244222640991211
    6. '_errors' → logprob: -8.119222640991211
    7. 'Error' → logprob: -10.494222640991211
    8. 'rror' → logprob: -11.869222640991211
    9. '_' → logprob: -12.494222640991211
    10. '```' → logprob: -12.494222640991211

Token 217: ' or' (ID: 503)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7596792578697205
    2. ',' → logprob: -1.0096793174743652
    3. ' and' → logprob: -3.2596793174743652
    4. ':' → logprob: -3.2596793174743652
    5. ' if' → logprob: -3.3846793174743652
    6. '       ' → logprob: -4.009679317474365
    7. ' ,' → logprob: -4.884679317474365
    8. '**' → logprob: -5.009679317474365
    9. ' import' → logprob: -5.134679317474365
    10. 'and' → logprob: -5.134679317474365

Token 218: ' float' (ID: 4428)
  Prédit: 'Overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Overflow' → logprob: -0.4338710308074951
    2. 'overflow' → logprob: -1.3088710308074951
    3. ' overflow' → logprob: -2.808871030807495
    4. ' Overflow' → logprob: -4.183871269226074
    5. 'import' → logprob: -6.058871269226074
    6. 'float' → logprob: -7.058871269226074
    7. 'math' → logprob: -7.308871269226074
    8. 'Value' → logprob: -7.308871269226074
    9. '0' → logprob: -7.433871269226074
    10. 'return' → logprob: -7.933871269226074

Token 219: ' overflow' (ID: 28614)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.324014276266098
    2. ' overflow' → logprob: -2.074014186859131
    3. 'overflow' → logprob: -2.449014186859131
    4. 'inf' → logprob: -3.574014186859131
    5. '('-' → logprob: -4.074014186859131
    6. ''' → logprob: -4.824014186859131
    7. 'over' → logprob: -6.449014186859131
    8. ' over' → logprob: -6.699014186859131
    9. ''s' → logprob: -6.824014186859131
    10. '   ' → logprob: -6.824014186859131

Token 220: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5508524179458618
    2. ',' → logprob: -1.3008524179458618
    3. '       ' → logprob: -2.5508522987365723
    4. ':' → logprob: -3.0508522987365723
    5. ' ,' → logprob: -4.550852298736572
    6. 'import' → logprob: -5.550852298736572
    7. ' and' → logprob: -5.675852298736572
    8. 'if' → logprob: -6.300852298736572
    9. ':
' → logprob: -6.550852298736572
    10. ' try' → logprob: -7.050852298736572

Token 221: ' use' (ID: 1199)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6261181831359863
    2. 'try' → logprob: -1.3761181831359863
    3. '       ' → logprob: -2.3761181831359863
    4. ' return' → logprob: -3.2511181831359863
    5. 'import' → logprob: -3.5011181831359863
    6. ' try' → logprob: -3.7511181831359863
    7. 'if' → logprob: -4.001118183135986
    8. ' if' → logprob: -4.751118183135986
    9. '           ' → logprob: -9.001117706298828
    10. '        
' → logprob: -9.501117706298828

Token 222: ' log' (ID: 2142)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9987483024597168
    2. 'math' → logprob: -0.9987483024597168
    3. 'pow' → logprob: -1.8737483024597168
    4. 'import' → logprob: -2.873748302459717
    5. 'float' → logprob: -4.373748302459717
    6. 'try' → logprob: -4.373748302459717
    7. ' pow' → logprob: -4.998748302459717
    8. 'base' → logprob: -5.623748302459717
    9. 'min' → logprob: -5.873748302459717
    10. ' float' → logprob: -5.998748302459717

Token 223: '
' (ID: 198)
  Prédit: 'arith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arith' → logprob: -0.6418848037719727
    2. '(' → logprob: -2.2668848037719727
    3. ' and' → logprob: -2.2668848037719727
    4. ' base' → logprob: -2.3918848037719727
    5. '10' → logprob: -2.7668848037719727
    6. '(base' → logprob: -3.7668848037719727
    7. 'base' → logprob: -3.8918848037719727
    8. ',' → logprob: -4.016884803771973
    9. '1' → logprob: -4.266884803771973
    10. 'space' → logprob: -5.391884803771973

Token 224: '       ' (ID: 309)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.9431901574134827
    2. ' **' → logprob: -1.693190097808838
    3. ')' → logprob: -2.193190097808838
    4. 'import' → logprob: -2.318190097808838
    5. '(' → logprob: -3.068190097808838
    6. ',' → logprob: -3.443190097808838
    7. '       ' → logprob: -3.943190097808838
    8. '(
' → logprob: -4.068190097808838
    9. '   ' → logprob: -4.318190097808838
    10. ' if' → logprob: -4.443190097808838

Token 225: ' if' (ID: 538)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.30841606855392456
    2. ' if' → logprob: -1.5584161281585693
    3. '
' → logprob: -3.8084161281585693
    4. ' import' → logprob: -4.18341588973999
    5. 'if' (adapté à ' if') → logprob: -4.80841588973999
    6. '       ' → logprob: -5.18341588973999
    7. ' return' → logprob: -6.93341588973999
    8. 'return' → logprob: -7.30841588973999
    9. ' try' → logprob: -7.68341588973999
    10. '        
' → logprob: -8.058416366577148

Token 226: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.10118215531110764
    2. ' base' → logprob: -2.351182222366333
    3. 'ex' → logprob: -6.976181983947754
    4. '	base' → logprob: -11.351181983947754
    5. ' exponent' → logprob: -11.601181983947754
    6. ' ' → logprob: -11.851181983947754
    7. '   ' → logprob: -11.976181983947754
    8. '(base' → logprob: -12.726181983947754
    9. '  ' → logprob: -13.726181983947754
    10. '0' → logprob: -14.788681983947754

Token 227: ' ==' (ID: 951)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.699174702167511
    2. '<=' → logprob: -0.824174702167511
    3. '==' → logprob: -3.324174642562866
    4. ' ==' → logprob: -3.574174642562866
    5. '>' → logprob: -9.199174880981445
    6. ' ' → logprob: -9.824174880981445
    7. '<' → logprob: -9.824174880981445
    8. '0' → logprob: -10.074174880981445
    9. ' >' → logprob: -10.574174880981445
    10. ')<=' → logprob: -11.074174880981445

Token 228: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006479830481112003
    2. '1' → logprob: -7.625648021697998
    3. ' ' → logprob: -8.75064754486084
    4. 'float' → logprob: -14.12564754486084
    5. '   ' → logprob: -15.50064754486084
    6. 'import' → logprob: -16.125648498535156
    7. '  ' → logprob: -16.813148498535156
    8. '	' → logprob: -16.813148498535156
    9. 'math' → logprob: -16.813148498535156
    10. '    ' → logprob: -16.875648498535156

Token 229: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008246336947195232
    2. '1' → logprob: -7.125824451446533
    3. ' ' → logprob: -10.875824928283691
    4. '[' → logprob: -15.125824928283691
    5. 'float' → logprob: -15.813324928283691
    6. ')' → logprob: -15.938324928283691
    7. '```' → logprob: -16.500823974609375
    8. '   ' → logprob: -16.500823974609375
    9. '    ' → logprob: -16.813323974609375
    10. '  ' → logprob: -16.875823974609375

Token 230: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5865321755409241
    2. ':' → logprob: -0.8365321755409241
    3. ':return' → logprob: -5.586532115936279
    4. '.' → logprob: -5.711532115936279
    5. ' and' → logprob: -6.711532115936279
    6. '           ' → logprob: -6.961532115936279
    7. '       ' → logprob: -7.211532115936279
    8. '   ' → logprob: -8.211532592773438
    9. 'and' → logprob: -8.711532592773438
    10. ':
' → logprob: -10.336532592773438

Token 231: '           ' (ID: 352)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12985117733478546
    2. 'return' → logprob: -2.3798511028289795
    3. ' return' → logprob: -4.629851341247559
    4. '   ' → logprob: -5.004851341247559
    5. '           ' → logprob: -5.254851341247559
    6. '       ' → logprob: -5.379851341247559
    7. ' ' → logprob: -5.879851341247559
    8. '	return' → logprob: -10.004851341247559
    9. ':return' → logprob: -11.004851341247559
    10. '               ' → logprob: -11.629851341247559

Token 232: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000700641714502126
    2. 'return' (adapté à ' return') → logprob: -7.3757004737854
    3. ' ' → logprob: -9.875700950622559
    4. ' return' → logprob: -10.750700950622559
    5. 'if' → logprob: -14.125700950622559
    6. '   ' → logprob: -14.625700950622559
    7. ' if' → logprob: -16.625699996948242
    8. '           ' → logprob: -17.875699996948242
    9. 'Return' → logprob: -18.375699996948242
    10. '  ' → logprob: -18.625699996948242

Token 233: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -18.000030517578125
    4. '1' → logprob: -19.562530517578125
    5. '۰' → logprob: -19.625030517578125
    6. '```' → logprob: -19.625030517578125
    7. 'float' → logprob: -19.875030517578125
    8. ' ' → logprob: -19.937530517578125
    9. '  ' → logprob: -20.250030517578125
    10. '`' → logprob: -20.750030517578125

Token 234: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '۰' → logprob: -18.437503814697266
    4. '   ' → logprob: -18.625003814697266
    5. '1' → logprob: -19.625003814697266
    6. '```' → logprob: -19.625003814697266
    7. '０' → logprob: -19.687503814697266
    8. 'float' → logprob: -20.125003814697266
    9. '`' → logprob: -20.375003814697266
    10. '  ' → logprob: -20.500003814697266

Token 235: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.3856492842023727e-06
    2. 'else' → logprob: -15.000000953674316
    3. '**' → logprob: -15.000000953674316
    4. '.
' → logprob: -15.250000953674316
    5. '0' → logprob: -15.750000953674316
    6. 'if' → logprob: -16.250001907348633
    7. ' if' → logprob: -16.625001907348633
    8. ' else' → logprob: -17.125001907348633
    9. 'elif' → logprob: -17.250001907348633
    10. '       ' → logprob: -17.375001907348633

Token 236: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '```' → logprob: -18.75
    3. 'return' → logprob: -21.5
    4. ' ' → logprob: -22.125
    5. '   ' → logprob: -22.625
    6. '00' → logprob: -23.25
    7. '``' → logprob: -23.25
    8. '        
' → logprob: -23.375
    9. 'float' → logprob: -23.375
    10. '    
' → logprob: -23.5

Token 237: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6513657569885254
    2. '       ' → logprob: -0.7763657569885254
    3. '        
' → logprob: -4.776365756988525
    4. '**' → logprob: -5.151365756988525
    5. 'return' → logprob: -7.026365756988525
    6. '<|end|>' → logprob: -7.151365756988525
    7. ' if' → logprob: -7.901365756988525
    8. ' 
' → logprob: -8.026365280151367
    9. ' return' → logprob: -8.026365280151367
    10. '    
' → logprob: -8.651365280151367

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014713866636157036
    2. '
' → logprob: -4.764713764190674
    3. 'return' → logprob: -5.514713764190674
    4. '        
' → logprob: -6.639713764190674
    5. ' return' → logprob: -7.764713764190674
    6. '```' → logprob: -9.889714241027832
    7. ')' → logprob: -10.014714241027832
    8. 'else' → logprob: -10.639714241027832
    9. '   ' → logprob: -10.889714241027832
    10. '    
' → logprob: -10.889714241027832

Token 239: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5520792603492737
    2. 'import' → logprob: -1.427079200744629
    3. 'if' → logprob: -2.427079200744629
    4. 'else' → logprob: -2.927079200744629
    5. '**' → logprob: -4.177079200744629
    6. ')' → logprob: -5.302079200744629
    7. '       ' → logprob: -5.302079200744629
    8. ' if' → logprob: -5.552079200744629
    9. ' return' → logprob: -5.677079200744629
    10. 'elif' → logprob: -6.052079200744629

Token 240: ' Cap' (ID: 9701)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7079097628593445
    2. 'return' → logprob: -0.8329097628593445
    3. 'try' → logprob: -2.9579098224639893
    4. 'pow' → logprob: -5.08290958404541
    5. 'from' → logprob: -5.45790958404541
    6. 'result' → logprob: -5.45790958404541
    7. 'if' → logprob: -5.45790958404541
    8. 'else' → logprob: -7.33290958404541
    9. ' return' → logprob: -7.83290958404541
    10. 'elif' → logprob: -8.58290958404541

Token 241: ' too' (ID: 3101)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.5185129046440125
    2. ' exponent' → logprob: -1.8935129642486572
    3. ' the' → logprob: -2.5185129642486572
    4. '_ex' → logprob: -2.6435129642486572
    5. 'import' → logprob: -4.143512725830078
    6. ' at' → logprob: -4.393512725830078
    7. 'd' → logprob: -4.518512725830078
    8. '=' → logprob: -4.518512725830078
    9. ' base' → logprob: -5.393512725830078
    10. ' =' → logprob: -5.393512725830078

Token 242: ' large' (ID: 4410)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.39601409435272217
    2. ' large' → logprob: -1.1460140943527222
    3. '_large' → logprob: -4.771014213562012
    4. 'ex' → logprob: -8.521014213562012
    5. 'import' → logprob: -8.646014213562012
    6. 'high' → logprob: -9.521014213562012
    7. ' high' → logprob: -10.146014213562012
    8. 'Large' → logprob: -10.271014213562012
    9. 'e' → logprob: -10.521014213562012
    10. 'big' → logprob: -10.646014213562012

Token 243: ' ex' (ID: 513)
  Prédit: ' ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ex' → logprob: -0.37604257464408875
    2. 'ex' → logprob: -1.7510426044464111
    3. ' exponent' → logprob: -2.001042604446411
    4. ' values' → logprob: -6.001042366027832
    5. ' numbers' → logprob: -7.501042366027832
    6. ' float' → logprob: -8.126042366027832
    7. 'import' → logprob: -8.251042366027832
    8. '_ex' → logprob: -8.501042366027832
    9. ' import' → logprob: -9.126042366027832
    10. 'float' → logprob: -9.501042366027832

Token 244: 'ponents' (ID: 4331)
  Prédit: 'ponent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.6935837864875793
    2. 'ponents' → logprob: -0.6935837864875793
    3. 'ponential' → logprob: -8.068583488464355
    4. 'p' → logprob: -9.318583488464355
    5. 'pon' → logprob: -11.443583488464355
    6. 'pressions' → logprob: -11.818583488464355
    7. 'pression' → logprob: -12.568583488464355
    8. 'ponente' → logprob: -13.193583488464355
    9. 'po' → logprob: -13.443583488464355
    10. 'port' → logprob: -13.693583488464355

Token 245: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6091927886009216
    2. '       ' → logprob: -0.8591927886009216
    3. ' and' → logprob: -3.7341928482055664
    4. ',' → logprob: -5.609192848205566
    5. ' or' → logprob: -6.609192848205566
    6. 'if' → logprob: -6.609192848205566
    7. ' =' → logprob: -7.609192848205566
    8. ':' → logprob: -7.609192848205566
    9. '=' → logprob: -8.734192848205566
    10. '           ' → logprob: -8.859192848205566

Token 246: ' float' (ID: 4428)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.2120206654071808
    2. 'math' → logprob: -2.9620206356048584
    3. '1' → logprob: -3.0870206356048584
    4. 'float' → logprob: -3.5870206356048584
    5. 'ex' → logprob: -4.4620208740234375
    6. 'pr' → logprob: -4.8370208740234375
    7. ' math' → logprob: -5.0870208740234375
    8. ' ' → logprob: -5.4620208740234375
    9. '50' → logprob: -5.4620208740234375
    10. 's' → logprob: -5.7120208740234375

Token 247: ' pow' (ID: 9779)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4331717491149902
    2. ' if' → logprob: -1.5581717491149902
    3. '**' → logprob: -1.5581717491149902
    4. ' **' → logprob: -2.1831717491149902
    5. ' and' → logprob: -2.3081717491149902
    6. ' or' → logprob: -3.5581717491149902
    7. 'return' → logprob: -4.55817174911499
    8. 'and' → logprob: -4.93317174911499
    9. '       ' → logprob: -5.05817174911499
    10. '
' → logprob: -5.05817174911499

Token 248: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2604803740978241
    2. '       ' → logprob: -1.8854804039001465
    3. ' ' → logprob: -3.5104804039001465
    4. ',' → logprob: -4.7604804039001465
    5. ' ,' → logprob: -5.0104804039001465
    6. '   ' → logprob: -5.1354804039001465
    7. 'if' → logprob: -5.3854804039001465
    8. 'return' → logprob: -5.5104804039001465
    9. ')' → logprob: -6.1354804039001465
    10. ' return' → logprob: -6.1354804039001465

Token 249: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11857582628726959
    2. ' if' → logprob: -2.3685758113861084
    3. '   ' → logprob: -5.4935760498046875
    4. ' ' → logprob: -5.6185760498046875
    5. ' return' → logprob: -6.2435760498046875
    6. ',' → logprob: -6.3685760498046875
    7. ' else' → logprob: -6.6185760498046875
    8. ')' → logprob: -7.2435760498046875
    9. ' elif' → logprob: -7.2435760498046875
    10. 'return' → logprob: -7.6185760498046875

Token 250: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.17352154850959778
    2. ' if' → logprob: -2.4235215187072754
    3. '       ' → logprob: -2.9235215187072754
    4. 'import' → logprob: -4.298521518707275
    5. 'ex' → logprob: -6.173521518707275
    6. 'return' → logprob: -7.298521518707275
    7. 'try' → logprob: -8.923521995544434
    8. 'max' → logprob: -9.298521995544434
    9. 'min' → logprob: -9.298521995544434
    10. ' min' → logprob: -9.673521995544434

Token 251: ' exponent' (ID: 51159)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0005239616730250418
    2. ' exponent' → logprob: -7.750524044036865
    3. 'abs' → logprob: -9.750523567199707
    4. 'base' → logprob: -11.125523567199707
    5. '   ' → logprob: -11.500523567199707
    6. '	ex' → logprob: -12.375523567199707
    7. ' ex' → logprob: -13.375523567199707
    8. ' ' → logprob: -13.750523567199707
    9. '  ' → logprob: -14.125523567199707
    10. '           ' → logprob: -14.375523567199707

Token 252: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.12692958116531372
    2. ' >' → logprob: -2.126929521560669
    3. '()>' → logprob: -13.75192928314209
    4. ' ' → logprob: -15.37692928314209
    5. '>=' → logprob: -15.87692928314209
    6. '   ' → logprob: -16.876930236816406
    7. '	' → logprob: -17.376930236816406
    8. ' >=' → logprob: -18.001930236816406
    9. '()' → logprob: -18.501930236816406
    10. 's' → logprob: -18.564430236816406

Token 253: ' ' (ID: 220)
  Prédit: '709'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '709' → logprob: -0.5687673091888428
    2. '100' → logprob: -1.0687673091888428
    3. '700' → logprob: -2.8187673091888428
    4. '20' → logprob: -4.318767547607422
    5. '1' → logprob: -4.568767547607422
    6. '10' → logprob: -6.068767547607422
    7. '300' → logprob: -6.693767547607422
    8. '600' → logprob: -7.193767547607422
    9. '50' → logprob: -7.443767547607422
    10. '500' → logprob: -7.818767547607422

Token 254: '1' (ID: 16)
  Prédit: '709'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '709' → logprob: -0.5353644490242004
    2. '100' → logprob: -1.1603643894195557
    3. '700' → logprob: -2.7853643894195557
    4. '20' → logprob: -4.035364627838135
    5. '1' → logprob: -4.160364627838135
    6. '10' → logprob: -6.410364627838135
    7. '300' → logprob: -6.535364627838135
    8. '50' → logprob: -7.285364627838135
    9. '600' → logprob: -7.285364627838135
    10. '500' → logprob: -7.535364627838135

Token 255: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.08262967318296432
    2. '0' → logprob: -3.082629680633545
    3. '00' → logprob: -3.457629680633545
    4. '000' → logprob: -6.457629680633545
    5. '6' → logprob: -8.582629203796387
    6. '8' → logprob: -9.582629203796387
    7. '5' → logprob: -9.832629203796387
    8. '4' → logprob: -10.707629203796387
    9. '7' → logprob: -11.207629203796387
    10. '06' → logprob: -11.707629203796387

Token 256: '9' (ID: 24)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.023681452497839928
    2. '5' → logprob: -4.648681640625
    3. '9' → logprob: -5.648681640625
    4. '10' → logprob: -5.648681640625
    5. '3' → logprob: -5.898681640625
    6. '8' → logprob: -6.648681640625
    7. '7' → logprob: -7.023681640625
    8. '4' → logprob: -7.273681640625
    9. '2' → logprob: -7.898681640625
    10. '308' → logprob: -8.273681640625

Token 257: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1096206083893776
    2. ':' → logprob: -2.3596205711364746
    3. ':return' → logprob: -5.609620571136475
    4. '           ' → logprob: -5.734620571136475
    5. ' :
' → logprob: -6.859620571136475
    6. '       ' → logprob: -7.234620571136475
    7. ' :' → logprob: -8.234621047973633
    8. ' or' → logprob: -8.359621047973633
    9. '):
' → logprob: -8.984621047973633
    10. ':
' → logprob: -10.859621047973633

Token 258: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.061382755637168884
    2. 'return' → logprob: -3.18638277053833
    3. ' return' → logprob: -4.56138277053833
    4. '1' → logprob: -6.18638277053833
    5. '10' → logprob: -6.31138277053833
    6. 'import' → logprob: -6.56138277053833
    7. '       ' → logprob: -6.93638277053833
    8. 'float' → logprob: -7.31138277053833
    9. '9' → logprob: -8.311382293701172
    10. '          ' → logprob: -9.436382293701172

Token 259: ' exponent' (ID: 51159)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.6227545142173767
    2. 'return' → logprob: -0.8727545142173767
    3. '           ' → logprob: -3.7477545738220215
    4. '1' → logprob: -3.8727545738220215
    5. 'inf' → logprob: -7.9977545738220215
    6. 'ex' → logprob: -8.122754096984863
    7. '   ' → logprob: -8.372754096984863
    8. '=float' → logprob: -9.247754096984863
    9. '10' → logprob: -9.497754096984863
    10. '                   ' → logprob: -10.122754096984863

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14268961548805237
    2. '=' → logprob: -2.0176897048950195
    3. 'return' → logprob: -13.26768970489502
    4. ')' → logprob: -13.39268970489502
    5. ' ' → logprob: -13.39268970489502
    6. '=float' → logprob: -13.51768970489502
    7. '>' → logprob: -14.01768970489502
    8. ',' → logprob: -14.26768970489502
    9. '   ' → logprob: -14.26768970489502
    10. ' ==' → logprob: -14.39268970489502

Token 261: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.17420256882906e-05
    2. ' ' → logprob: -9.500091552734375
    3. 'float' → logprob: -11.125091552734375
    4. '   ' → logprob: -14.000091552734375
    5. '100' → logprob: -14.625091552734375
    6. ' float' → logprob: -15.375091552734375
    7. '  ' → logprob: -15.875091552734375
    8. '9' → logprob: -16.062591552734375
    9. '999' → logprob: -16.250091552734375
    10. 'pow' → logprob: -16.250091552734375

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. 'float' → logprob: -12.125006675720215
    3. '100' → logprob: -15.375006675720215
    4. ' ' → logprob: -15.375006675720215
    5. 'pow' → logprob: -16.0000057220459
    6. '999' → logprob: -16.7500057220459
    7. '   ' → logprob: -17.3750057220459
    8. '10' → logprob: -17.5000057220459
    9. 'math' → logprob: -18.3750057220459
    10. '9' → logprob: -18.4375057220459

Token 263: 'e' (ID: 68)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5017176270484924
    2. '       ' → logprob: -1.5017175674438477
    3. '.' → logprob: -2.8767175674438477
    4. 'e' → logprob: -3.2517175674438477
    5. '        
' → logprob: -3.7517175674438477
    6. ')
' → logprob: -4.251717567443848
    7. '0' → logprob: -5.126717567443848
    8. '   ' → logprob: -5.126717567443848
    9. '    
' → logprob: -5.126717567443848
    10. '**' → logprob: -5.126717567443848

Token 264: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0002387018030276522
    2. '6' → logprob: -9.375238418579102
    3. '2' → logprob: -10.375238418579102
    4. '1' → logprob: -10.500238418579102
    5. '3' → logprob: -10.500238418579102
    6. '8' → logprob: -10.625238418579102
    7. '5' → logprob: -11.500238418579102
    8. '4' → logprob: -12.125238418579102
    9. '-' → logprob: -12.125238418579102
    10. '+' → logprob: -12.125238418579102

Token 265: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03333098068833351
    2. ')' → logprob: -4.158330917358398
    3. '
' → logprob: -4.658330917358398
    4. '**' → logprob: -5.533330917358398
    5. ')
' → logprob: -5.908330917358398
    6. '        
' → logprob: -8.158330917358398
    7. '<|end|>' → logprob: -8.408330917358398
    8. 'return' → logprob: -8.908330917358398
    9. ' **' → logprob: -9.283330917358398
    10. ',' → logprob: -10.658330917358398

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26205167174339294
    2. ')' → logprob: -1.8870517015457153
    3. '
' → logprob: -3.512051582336426
    4. ' return' → logprob: -4.637051582336426
    5. 'return' → logprob: -4.887051582336426
    6. '**' → logprob: -5.012051582336426
    7. ' )' → logprob: -5.262051582336426
    8. ' 
' → logprob: -5.387051582336426
    9. '<|end|>' → logprob: -5.512051582336426
    10. '        
' → logprob: -5.637051582336426

Token 267: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2570713460445404
    2. 'return' (adapté à ' return') → logprob: -1.5070713758468628
    3. ' return' → logprob: -5.632071495056152
    4. 'import' → logprob: -6.507071495056152
    5. '
' → logprob: -11.132071495056152
    6. 'result' → logprob: -11.132071495056152
    7. 'try' → logprob: -11.882071495056152
    8. '        
' → logprob: -12.257071495056152
    9. '	return' → logprob: -13.007071495056152
    10. '```' → logprob: -13.007071495056152

Token 268: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0542612187564373
    2. ' base' → logprob: -3.0542612075805664
    3. 'pow' → logprob: -5.179261207580566
    4. ' pow' → logprob: -10.929261207580566
    5. 'float' → logprob: -12.679261207580566
    6. '   ' → logprob: -13.179261207580566
    7. '(base' → logprob: -13.304261207580566
    8. '	base' → logprob: -14.929261207580566
    9. 'math' → logprob: -15.554261207580566
    10. ' ' → logprob: -16.054262161254883

Token 269: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.3868711292743683
    2. '**' → logprob: -1.136871099472046
    3. '```' → logprob: -16.761871337890625
    4. ' **
' → logprob: -17.511871337890625
    5. ' ' → logprob: -18.136871337890625
    6. '*' → logprob: -18.136871337890625
    7. '***' → logprob: -19.136871337890625
    8. '**
' → logprob: -19.511871337890625
    9. '
' → logprob: -19.511871337890625
    10. ' ' → logprob: -19.511871337890625

Token 270: ' exponent' (ID: 51159)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.00029613598599098623
    2. ' exponent' → logprob: -8.125296592712402
    3. '(ex' → logprob: -16.750295639038086
    4. 'int' → logprob: -17.625295639038086
    5. 'Exponent' → logprob: -17.750295639038086
    6. '	ex' → logprob: -18.125295639038086
    7. ' ex' → logprob: -18.375295639038086
    8. 'expert' → logprob: -19.500295639038086
    9. 'e' → logprob: -19.750295639038086
    10. ' ' → logprob: -19.875295639038086

Token 271: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 272: '@' (ID: 31)
  Prédit: '@'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.7038759589195251
    2. '   ' → logprob: -1.70387601852417
    3. '
' → logprob: -1.70387601852417
    4. '<|end|>' → logprob: -2.20387601852417
    5. '    
' → logprob: -4.45387601852417
    6. '@property' → logprob: -5.45387601852417
    7. '\n' → logprob: -5.95387601852417
    8. '@
' → logprob: -6.07887601852417
    9. '```' → logprob: -6.20387601852417
    10. '  
' → logprob: -6.32887601852417

Token 273: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.2664456789934775e-06
    2. 'dat' → logprob: -13.875000953674316
    3. 'tot' → logprob: -16.500001907348633
    4. 'staticmethod' → logprob: -16.750001907348633
    5. ' total' → logprob: -17.250001907348633
    6. '(total' → logprob: -18.000001907348633
    7. '@' → logprob: -18.625001907348633
    8. 'to' → logprob: -18.625001907348633
    9. '_total' → logprob: -18.750001907348633
    10. 'classmethod' → logprob: -18.750001907348633

Token 274: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -2.0339031834737398e-05
    2. '_' → logprob: -11.500020027160645
    3. '@' → logprob: -12.000020027160645
    4. '_operator' → logprob: -14.125020027160645
    5. '_or' → logprob: -14.375020027160645
    6. '_ORDER' → logprob: -15.000020027160645
    7. '_answer' → logprob: -15.125020027160645
    8. '_ass' → logprob: -15.625020027160645
    9. '@property' → logprob: -15.750020027160645
    10. '_import' → logprob: -15.875020027160645

Token 275: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.39846330881118774
    2. 'ordering' → logprob: -1.148463249206543
    3. '_order' → logprob: -4.523463249206543
    4. 'order' → logprob: -7.398463249206543
    5. '@' → logprob: -10.398463249206543
    6. 'def' → logprob: -11.523463249206543
    7. ' ordering' → logprob: -12.148463249206543
    8. 'ring' → logprob: -12.273463249206543
    9. 'Ordering' → logprob: -12.898463249206543
    10. 'ation' → logprob: -14.148463249206543

Token 276: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.018428046256303787
    2. '
' → logprob: -4.018427848815918
    3. ' class' → logprob: -8.393427848815918
    4. '(class' → logprob: -10.518427848815918
    5. '<class' → logprob: -10.893427848815918
    6. '(
' → logprob: -13.143427848815918
    7. '\' → logprob: -13.518427848815918
    8. '<|end|>' → logprob: -14.143427848815918
    9. '  
' → logprob: -14.893427848815918
    10. '
' → logprob: -15.018427848815918

Token 277: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -6.754368223482743e-05
    2. ' class' → logprob: -9.750067710876465
    3. '
' → logprob: -11.625067710876465
    4. '<class' → logprob: -15.125067710876465
    5. '(class' → logprob: -17.62506675720215
    6. '

' → logprob: -21.37506675720215
    7. 'clas' → logprob: -21.50006675720215
    8. '	class' → logprob: -21.75006675720215
    9. '<|end|>' → logprob: -21.75006675720215
    10. 'Class' → logprob: -21.87506675720215

Token 278: ' Power' (ID: 10079)
  Prédit: 'Power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Power' → logprob: -0.008614926598966122
    2. ' Power' → logprob: -4.758615016937256
    3. 'Pow' → logprob: -15.008614540100098
    4. '_power' → logprob: -17.133615493774414
    5. '.Power' → logprob: -17.258615493774414
    6. 'Comparison' → logprob: -18.258615493774414
    7. 'Powered' → logprob: -18.633615493774414
    8. ' power' → logprob: -19.258615493774414
    9. 'Tower' → logprob: -19.633615493774414
    10. ' ' → logprob: -19.883615493774414

Token 279: 'Tower' (ID: 96498)
  Prédit: 'Tower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tower' → logprob: -2.935296834039036e-06
    2. ' Tower' → logprob: -13.50000286102295
    3. '_T' → logprob: -14.75000286102295
    4. 'Tow' → logprob: -14.87500286102295
    5. 'To' → logprob: -15.75000286102295
    6. 'Town' → logprob: -16.125003814697266
    7. '
' → logprob: -16.500003814697266
    8. '   ' → logprob: -16.500003814697266
    9. '```' → logprob: -16.500003814697266
    10. 'Tour' → logprob: -16.625003814697266

Token 280: 'Comparator' (ID: 45034)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0038727547507733107
    2. ':
' → logprob: -5.753872871398926
    3. '(' → logprob: -7.878872871398926
    4. '):' → logprob: -8.753872871398926
    5. '(P' → logprob: -9.378872871398926
    6. '(object' → logprob: -9.878872871398926
    7. '():' → logprob: -12.128872871398926
    8. ':

' → logprob: -12.503872871398926
    9. ' :' → logprob: -13.003872871398926
    10. '[' → logprob: -13.128872871398926

Token 281: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009603201411664486
    2. ':
' → logprob: -4.884603023529053
    3. '(P' → logprob: -6.259603023529053
    4. '(' → logprob: -10.009603500366211
    5. '(object' → logprob: -11.134603500366211
    6. '):' → logprob: -11.384603500366211
    7. ':

' → logprob: -12.134603500366211
    8. '   ' → logprob: -13.634603500366211
    9. '[' → logprob: -13.759603500366211
    10. ',' → logprob: -14.259603500366211

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004675049334764481
    2. '    
' → logprob: -6.004674911499023
    3. 'def' → logprob: -7.254674911499023
    4. '
' → logprob: -7.254674911499023
    5. ' def' → logprob: -8.129674911499023
    6. ':' → logprob: -8.879674911499023
    7. ':
' → logprob: -9.504674911499023
    8. '):
' → logprob: -9.879674911499023
    9. '```' → logprob: -10.004674911499023
    10. '  
' → logprob: -10.254674911499023

Token 283: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2572518289089203
    2. '   ' → logprob: -2.007251739501953
    3. ' def' → logprob: -2.382251739501953
    4. 'class' → logprob: -9.382251739501953
    5. '	def' → logprob: -11.007251739501953
    6. '    
' → logprob: -11.507251739501953
    7. '
' → logprob: -12.007251739501953
    8. ' ' → logprob: -13.132251739501953
    9. ':def' → logprob: -13.507251739501953
    10. '__' → logprob: -13.757251739501953

Token 284: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6043326258659363
    2. '   ' → logprob: -0.8543326258659363
    3. ' def' → logprob: -3.604332685470581
    4. 'from' → logprob: -7.729332447052002
    5. '"""
' → logprob: -9.60433292388916
    6. 'class' → logprob: -9.60433292388916
    7. '
' → logprob: -9.72933292388916
    8. '  ' → logprob: -10.47933292388916
    9. ' ' → logprob: -10.47933292388916
    10. '	def' → logprob: -10.72933292388916

Token 285: ' Wrap' (ID: 60850)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.46477964520454407
    2. '   ' → logprob: -1.7147796154022217
    3. ' def' → logprob: -1.9647796154022217
    4. 'class' → logprob: -3.0897796154022217
    5. '"""
' → logprob: -5.839779853820801
    6. '
' → logprob: -6.839779853820801
    7. ' """
' → logprob: -7.214779853820801
    8. '"""' → logprob: -7.714779853820801
    9. 'Defines' → logprob: -8.5897798538208
    10. 'Provides' → logprob: -8.8397798538208

Token 286: 's' (ID: 82)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -1.74202561378479
    2. 'class' → logprob: -1.86702561378479
    3. '@' → logprob: -2.24202561378479
    4. ')' → logprob: -2.24202561378479
    5. '[' → logprob: -2.49202561378479
    6. ' the' → logprob: -2.99202561378479
    7. 'er' → logprob: -3.24202561378479
    8. '(
' → logprob: -3.36702561378479
    9. '   ' → logprob: -3.49202561378479
    10. ' around' → logprob: -3.86702561378479

Token 287: ' bases' (ID: 31148)
  Prédit: 'Power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Power' → logprob: -0.012728013098239899
    2. ' Power' → logprob: -4.387728214263916
    3. '   ' → logprob: -9.137727737426758
    4. '.Power' → logprob: -10.637727737426758
    5. 'object' → logprob: -10.887727737426758
    6. 'def' → logprob: -10.887727737426758
    7. 'power' → logprob: -11.012727737426758
    8. ':' → logprob: -11.512727737426758
    9. '
' → logprob: -11.887727737426758
    10. ' power' → logprob: -12.262727737426758

Token 288: ' list' (ID: 1562)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17659315466880798
    2. '   ' → logprob: -2.301593065261841
    3. ')' → logprob: -4.42659330368042
    4. '[' → logprob: -4.55159330368042
    5. '):' → logprob: -4.80159330368042
    6. '=' → logprob: -5.55159330368042
    7. '<|end|>' → logprob: -5.55159330368042
    8. ' lists' → logprob: -5.92659330368042
    9. ' and' → logprob: -6.17659330368042
    10. '):
' → logprob: -6.17659330368042

Token 289: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8100441694259644
    2. ':' → logprob: -1.3100441694259644
    3. ' to' → logprob: -1.5600441694259644
    4. ' for' → logprob: -3.185044288635254
    5. ':
' → logprob: -4.435044288635254
    6. ' and' → logprob: -4.810044288635254
    7. 'to' → logprob: -5.435044288635254
    8. ',' → logprob: -6.310044288635254
    9. 'for' → logprob: -6.560044288635254
    10. 'and' → logprob: -6.685044288635254

Token 290: ' enables' (ID: 23674)
  Prédit: 'provid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'provid' → logprob: -0.8740848898887634
    2. 'implements' → logprob: -0.8740848898887634
    3. 'def' → logprob: -2.499084949493408
    4. ' provides' → logprob: -2.999084949493408
    5. 'defines' → logprob: -3.999084949493408
    6. ' implements' → logprob: -4.624084949493408
    7. ' defines' → logprob: -6.249084949493408
    8. 'Provides' → logprob: -6.874084949493408
    9. '<|end|>' → logprob: -7.874084949493408
    10. '...' → logprob: -7.874084949493408

Token 291: ' comparisons' (ID: 68481)
  Prédit: ' comparison'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comparison' → logprob: -0.6392967104911804
    2. 'comparison' → logprob: -0.8892967104911804
    3. ' comparisons' → logprob: -3.139296770095825
    4. 'compar' → logprob: -4.889296531677246
    5. ' rich' → logprob: -5.514296531677246
    6. ' full' → logprob: -6.014296531677246
    7. 'rich' → logprob: -6.514296531677246
    8. ' comparing' → logprob: -6.764296531677246
    9. 'full' → logprob: -7.764296531677246
    10. ' the' → logprob: -8.639296531677246

Token 292: ' based' (ID: 4122)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15810967981815338
    2. ':' → logprob: -2.033109664916992
    3. ':
' → logprob: -5.158109664916992
    4. ' for' → logprob: -6.033109664916992
    5. 'def' → logprob: -6.533109664916992
    6. ' with' → logprob: -6.783109664916992
    7. ',' → logprob: -6.783109664916992
    8. '.' → logprob: -7.158109664916992
    9. '(' → logprob: -7.533109664916992
    10. '(
' → logprob: -8.033109664916992

Token 293: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.0007004032959230244
    2. ' on' → logprob: -7.3757004737854
    3. '   ' → logprob: -11.250699996948242
    4. 'only' → logprob: -11.250699996948242
    5. '...' → logprob: -11.375699996948242
    6. '@' → logprob: -11.750699996948242
    7. 'upon' → logprob: -12.625699996948242
    8. '_on' → logprob: -12.750699996948242
    9. 'ont' → logprob: -12.875699996948242
    10. 'from' → logprob: -12.875699996948242

Token 294: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9625614881515503
    2. 'Power' → logprob: -0.9625614881515503
    3. 'bases' → logprob: -2.21256160736084
    4. ' the' → logprob: -3.08756160736084
    5. 'def' → logprob: -3.08756160736084
    6. ' Power' → logprob: -4.21256160736084
    7. ' def' → logprob: -5.33756160736084
    8. 'their' → logprob: -5.46256160736084
    9. ' bases' → logprob: -5.71256160736084
    10. 'a' → logprob: -6.58756160736084

Token 295: ' problem' (ID: 4792)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2398948669433594
    2. 'bases' → logprob: -1.3648948669433594
    3. 'power' → logprob: -2.2398948669433594
    4. 'evaluation' → logprob: -2.3648948669433594
    5. 'Power' → logprob: -3.2398948669433594
    6. 'tower' → logprob: -3.4898948669433594
    7. 'math' → logprob: -3.4898948669433594
    8. 'value' → logprob: -3.7398948669433594
    9. 'mat' → logprob: -4.364894866943359
    10. 'logic' → logprob: -4.489894866943359

Token 296: ''s' (ID: 885)
  Prédit: 'statement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'statement' → logprob: -0.39175936579704285
    2. ' statement' → logprob: -1.5167593955993652
    3. 'description' → logprob: -2.7667593955993652
    4. ' description' → logprob: -3.6417593955993652
    5. ''s' → logprob: -5.016759395599365
    6. 'definition' → logprob: -5.391759395599365
    7. '_statement' → logprob: -7.391759395599365
    8. '   ' → logprob: -7.516759395599365
    9. 'domain' → logprob: -7.766759395599365
    10. ' logic' → logprob: -7.766759395599365

Token 297: ' criteria' (ID: 17572)
  Prédit: 'comparison'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comparison' → logprob: -0.7571528553962708
    2. 'description' → logprob: -2.007152795791626
    3. 'rules' → logprob: -2.507152795791626
    4. 'logic' → logprob: -2.882152795791626
    5. 'definition' → logprob: -3.007152795791626
    6. ' logic' → logprob: -3.257152795791626
    7. 'custom' → logprob: -3.757152795791626
    8. 'com' → logprob: -4.007153034210205
    9. '"""
' → logprob: -4.007153034210205
    10. 'def' → logprob: -4.507153034210205

Token 298: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5547776818275452
    2. '   ' → logprob: -0.9297776818275452
    3. ':
' → logprob: -4.0547776222229
    4. '
' → logprob: -5.0547776222229
    5. ',' → logprob: -6.1797776222229
    6. '<|end|>' → logprob: -6.3047776222229
    7. '.' → logprob: -6.9297776222229
    8. '):
' → logprob: -7.6797776222229
    9. ' for' → logprob: -8.304778099060059
    10. ')' → logprob: -8.304778099060059

Token 299: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17943212389945984
    2. '
' → logprob: -2.3044321537017822
    3. '"""
' → logprob: -3.6794321537017822
    4. ' def' → logprob: -4.429431915283203
    5. ')' → logprob: -5.179431915283203
    6. '    
' → logprob: -5.179431915283203
    7. ')
' → logprob: -5.179431915283203
    8. 'def' → logprob: -6.304431915283203
    9. ' """
' → logprob: -6.554431915283203
    10. ' bases' → logprob: -6.554431915283203

Token 300: ' Compare' (ID: 38200)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.2265626192092896
    2. '"""
' → logprob: -1.4765626192092896
    3. '   ' → logprob: -1.7265626192092896
    4. 'def' → logprob: -1.8515626192092896
    5. '
' → logprob: -3.8515625
    6. '1' → logprob: -3.9765625
    7. '"""' → logprob: -4.1015625
    8. ' bases' → logprob: -4.1015625
    9. ' the' → logprob: -4.2265625
    10. '    
' → logprob: -4.4765625

Token 301: ' towers' (ID: 79040)
  Prédit: ' two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.24056971073150635
    2. ' the' → logprob: -3.115569591522217
    3. ' power' → logprob: -3.490569591522217
    4. ' def' → logprob: -3.615569591522217
    5. 'def' → logprob: -3.740569591522217
    6. 'two' → logprob: -3.865569591522217
    7. '   ' → logprob: -4.240569591522217
    8. ' based' → logprob: -4.365569591522217
    9. ' by' → logprob: -4.990569591522217
    10. ' self' → logprob: -5.490569591522217

Token 302: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31215333938598633
    2. ' by' → logprob: -1.5621533393859863
    3. ' based' → logprob: -3.9371533393859863
    4. 'by' → logprob: -4.187153339385986
    5. ' for' → logprob: -4.437153339385986
    6. ':' → logprob: -6.187153339385986
    7. 'based' → logprob: -6.187153339385986
    8. ' using' → logprob: -6.312153339385986
    9. '(
' → logprob: -6.937153339385986
    10. 'def' → logprob: -7.562153339385986

Token 303: ' left' (ID: 3561)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.099488377571106
    2. 'left' → logprob: -1.599488377571106
    3. 'top' → logprob: -1.599488377571106
    4. 'bottom' → logprob: -2.0994882583618164
    5. 'a' → logprob: -3.8494882583618164
    6. 'right' → logprob: -3.9744882583618164
    7. 'their' → logprob: -4.474488258361816
    8. ' the' → logprob: -4.599488258361816
    9. 'below' → logprob: -4.849488258361816
    10. 'bases' → logprob: -4.849488258361816

Token 304: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.16571129858493805
    2. ' to' → logprob: -2.2907114028930664
    3. '   ' → logprob: -3.1657114028930664
    4. '_to' → logprob: -5.665711402893066
    5. 'def' → logprob: -6.165711402893066
    6. 'import' → logprob: -6.290711402893066
    7. ':' → logprob: -7.665711402893066
    8. ',' → logprob: -8.415711402893066
    9. 'side' → logprob: -8.415711402893066
    10. ')' → logprob: -8.540711402893066

Token 305: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0005303950165398419
    2. ' right' → logprob: -7.625530242919922
    3. 'ight' → logprob: -10.375530242919922
    4. '
' → logprob: -12.375530242919922
    5. 'r' → logprob: -13.500530242919922
    6. 'rightness' → logprob: -13.625530242919922
    7. '	right' → logprob: -14.000530242919922
    8. 'left' → logprob: -14.125530242919922
    9. ' ' → logprob: -14.125530242919922
    10. '   ' → logprob: -15.125530242919922

Token 306: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17012467980384827
    2. ':' → logprob: -2.1701247692108154
    3. ',' → logprob: -4.045124530792236
    4. ' def' → logprob: -5.045124530792236
    5. 'def' → logprob: -5.170124530792236
    6. ' with' → logprob: -5.295124530792236
    7. '.' → logprob: -6.045124530792236
    8. ' and' → logprob: -6.295124530792236
    9. '
' → logprob: -6.420124530792236
    10. ':
' → logprob: -8.045125007629395

Token 307: ' power' (ID: 3470)
  Prédit: 'special'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'special' → logprob: -1.2858002185821533
    2. 'custom' → logprob: -1.4108002185821533
    3. 'the' → logprob: -1.7858002185821533
    4. 'right' → logprob: -2.9108002185821533
    5. 'a' → logprob: -3.2858002185821533
    6. 'their' → logprob: -3.6608002185821533
    7. 'correct' → logprob: -4.035799980163574
    8. 'ex' → logprob: -4.160799980163574
    9. 'consider' → logprob: -4.160799980163574
    10. 'short' → logprob: -4.285799980163574

Token 308: ' tower' (ID: 35225)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.464843213558197
    2. '_t' → logprob: -1.5898432731628418
    3. 's' → logprob: -2.339843273162842
    4. '   ' → logprob: -3.714843273162842
    5. 't' → logprob: -4.964843273162842
    6. ' _' → logprob: -5.089843273162842
    7. '_
' → logprob: -5.589843273162842
    8. '_s' → logprob: -5.714843273162842
    9. '_ass' → logprob: -5.839843273162842
    10. ' towers' → logprob: -5.839843273162842

Token 309: ' rules' (ID: 9607)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.40594616532325745
    2. '<|end|>' → logprob: -2.1559462547302246
    3. ')' → logprob: -2.7809462547302246
    4. 'bases' → logprob: -3.5309462547302246
    5. ' logic' → logprob: -3.6559462547302246
    6. '(' → logprob: -4.280946254730225
    7. '<|end|>' → logprob: -4.280946254730225
    8. 'evalu' → logprob: -4.655946254730225
    9. 'levels' → logprob: -5.030946254730225
    10. 'ing' → logprob: -5.155946254730225

Token 310: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11652567237615585
    2. '
' → logprob: -2.741525650024414
    3. ':' → logprob: -3.241525650024414
    4. ':
' → logprob: -6.491525650024414
    5. '```' → logprob: -6.991525650024414
    6. '):
' → logprob: -7.116525650024414
    7. '.' → logprob: -7.241525650024414
    8. '):' → logprob: -7.366525650024414
    9. ',' → logprob: -7.866525650024414
    10. 'def' → logprob: -7.991525650024414

Token 311: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3526807725429535
    2. '
' → logprob: -1.2276808023452759
    3. '<|end|>' → logprob: -6.727680683135986
    4. ')' → logprob: -7.102680683135986
    5. '```' → logprob: -7.227680683135986
    6. '    
' → logprob: -7.352680683135986
    7. '"""
' → logprob: -8.602681159973145
    8. '"""' → logprob: -8.727681159973145
    9. ')
' → logprob: -9.102681159973145
    10. 'def' → logprob: -9.227681159973145

Token 312: ' """

' (ID: 28800)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14722687005996704
    2. '   ' → logprob: -2.1472268104553223
    3. 'def' → logprob: -4.147226810455322
    4. '    
' → logprob: -6.272226810455322
    5. '```' → logprob: -7.272226810455322
    6. ')' → logprob: -7.522226810455322
    7. ' def' → logprob: -7.522226810455322
    8. '

' → logprob: -7.772226810455322
    9. '"""' → logprob: -9.89722728729248
    10. '  
' → logprob: -10.02222728729248

Token 313: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20267049968242645
    2. '   ' → logprob: -1.7026704549789429
    3. ' def' → logprob: -6.702670574188232
    4. '
' → logprob: -11.077670097351074
    5. '    
' → logprob: -12.202670097351074
    6. 'from' → logprob: -12.577670097351074
    7. 'class' → logprob: -13.327670097351074
    8. ' ' → logprob: -13.702670097351074
    9. '  ' → logprob: -14.577670097351074
    10. '	def' → logprob: -14.577670097351074

Token 314: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0071386052295565605
    2. '__' → logprob: -5.007138729095459
    3. ' def' → logprob: -8.0071382522583
    4. 'bases' → logprob: -9.7571382522583
    5. '   ' → logprob: -11.6321382522583
    6. 'init' → logprob: -11.8821382522583
    7. '```' → logprob: -12.1321382522583
    8. 'b' → logprob: -12.7571382522583
    9. ' __' → logprob: -13.2571382522583
    10. '
' → logprob: -14.0071382522583

Token 315: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.5386640429496765
    2. '_init' → logprob: -1.0386641025543213
    3. '__' → logprob: -2.7886641025543213
    4. ' __' → logprob: -6.913663864135742
    5. '___' → logprob: -10.163663864135742
    6. ' init' → logprob: -12.538663864135742
    7. '**' → logprob: -13.288663864135742
    8. '```' → logprob: -13.413663864135742
    9. '__(' → logprob: -14.288663864135742
    10. '`' → logprob: -14.663663864135742

Token 316: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -17.875
    3. '_init' → logprob: -18.25
    4. '```' → logprob: -19.625
    5. 'in' → logprob: -20.0
    6. 'ini' → logprob: -20.625
    7. '
' → logprob: -20.75
    8. 'i' → logprob: -20.75
    9. 'int' → logprob: -20.875
    10. 'inite' → logprob: -21.0

Token 317: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0004702338483184576
    2. '__' → logprob: -7.875470161437988
    3. '__(
' → logprob: -9.875470161437988
    4. '(self' → logprob: -10.875470161437988
    5. '__((' → logprob: -11.750470161437988
    6. '(' → logprob: -11.750470161437988
    7. ' (' → logprob: -13.375470161437988
    8. '_(' → logprob: -14.125470161437988
    9. '__('' → logprob: -14.750470161437988
    10. '__(*' → logprob: -15.000470161437988

Token 318: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.251091377227567e-05
    2. ' self' → logprob: -10.125042915344238
    3. '(self' → logprob: -14.125042915344238
    4. ',' → logprob: -14.500042915344238
    5. 'bases' → logprob: -14.500042915344238
    6. '
' → logprob: -15.000042915344238
    7. ',self' → logprob: -15.250042915344238
    8. '   ' → logprob: -16.500041961669922
    9. '	self' → logprob: -18.875041961669922
    10. '       ' → logprob: -19.000041961669922

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037859921576455235
    2. 'self' → logprob: -8.375378608703613
    3. '__,' → logprob: -9.125378608703613
    4. ' ,' → logprob: -10.625378608703613
    5. ',self' → logprob: -12.125378608703613
    6. ',b' → logprob: -12.625378608703613
    7. '_,' → logprob: -13.125378608703613
    8. '(self' → logprob: -13.625378608703613
    9. 'b' → logprob: -14.125378608703613
    10. '__(' → logprob: -15.000378608703613

Token 320: ' bases' (ID: 31148)
  Prédit: 'bases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bases' → logprob: -0.002532141050323844
    2. ' bases' → logprob: -6.252532005310059
    3. 'self' → logprob: -7.627532005310059
    4. '   ' → logprob: -9.252532005310059
    5. '       ' → logprob: -12.002532005310059
    6. 'b' → logprob: -12.752532005310059
    7. 'bas' → logprob: -13.127532005310059
    8. ' self' → logprob: -13.127532005310059
    9. 'Bases' → logprob: -13.377532005310059
    10. ')' → logprob: -14.002532005310059

Token 321: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1282932162284851
    2. '):' → logprob: -2.12829327583313
    3. '):
' → logprob: -6.628293037414551
    4. ' ):' → logprob: -11.12829303741455
    5. ')' → logprob: -11.62829303741455
    6. '   ' → logprob: -12.12829303741455
    7. ' :' → logprob: -12.75329303741455
    8. '):
' → logprob: -12.87829303741455
    9. '```' → logprob: -13.75329303741455
    10. '=' → logprob: -14.00329303741455

Token 322: ' List' (ID: 2655)
  Prédit: 'bases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bases' → logprob: -0.597851037979126
    2. 'List' → logprob: -0.847851037979126
    3. 'list' → logprob: -3.972851037979126
    4. ' bases' → logprob: -6.097850799560547
    5. 'Bases' → logprob: -8.347850799560547
    6. ' List' → logprob: -8.847850799560547
    7. ' list' → logprob: -9.097850799560547
    8. ')' → logprob: -9.847850799560547
    9. '[List' → logprob: -10.597850799560547
    10. 'self' → logprob: -11.222850799560547

Token 323: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -7.314625690924004e-05
    2. 'int' → logprob: -9.625073432922363
    3. ']int' → logprob: -12.500073432922363
    4. '<int' → logprob: -13.000073432922363
    5. ')' → logprob: -15.000073432922363
    6. '=int' → logprob: -15.375073432922363
    7. '[' → logprob: -16.375072479248047
    8. '):' → logprob: -16.500072479248047
    9. '[Int' → logprob: -16.500072479248047
    10. ' int' → logprob: -16.875072479248047

Token 324: ']):
' (ID: 51989)
  Prédit: ']):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.2872472107410431
    2. ']):' → logprob: -1.4122471809387207
    3. ']' → logprob: -5.162247180938721
    4. '])' → logprob: -8.412247657775879
    5. '):
' → logprob: -10.037247657775879
    6. '):' → logprob: -10.287247657775879
    7. ')' → logprob: -10.787247657775879
    8. '   ' → logprob: -11.662247657775879
    9. '       ' → logprob: -12.037247657775879
    10. '']):
' → logprob: -12.662247657775879

Token 325: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056965336203575134
    2. 'self' → logprob: -2.9319653511047363
    3. ' self' → logprob: -6.181965351104736
    4. '   ' → logprob: -12.181964874267578
    5. '	self' → logprob: -12.306964874267578
    6. '	' → logprob: -14.056964874267578
    7. '      ' → logprob: -14.181964874267578
    8. ',' → logprob: -14.681964874267578
    9. '        
' → logprob: -14.681964874267578
    10. ',self' → logprob: -14.806964874267578

Token 326: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0006629953859373927
    2. '       ' → logprob: -7.500662803649902
    3. ' self' → logprob: -9.125662803649902
    4. '   ' → logprob: -13.875662803649902
    5. '	self' → logprob: -16.12566375732422
    6. 'from' → logprob: -17.12566375732422
    7. '(self' → logprob: -17.50066375732422
    8. '[self' → logprob: -18.75066375732422
    9. '```' → logprob: -19.12566375732422
    10. ' ' → logprob: -19.25066375732422

Token 327: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -8.304016228066757e-05
    2. '.' → logprob: -9.875082969665527
    3. 'bases' → logprob: -11.250082969665527
    4. ' .' → logprob: -11.750082969665527
    5. '.bas' → logprob: -11.750082969665527
    6. '.base' → logprob: -13.625082969665527
    7. '.basename' → logprob: -15.750082969665527
    8. ' bases' → logprob: -15.750082969665527
    9. 'Bases' → logprob: -15.750082969665527
    10. '.t' → logprob: -15.875082969665527

Token 328: 'ases' (ID: 4324)
  Prédit: 'ases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ases' → logprob: -2.7848862373502925e-05
    2. 'bases' → logprob: -10.500027656555176
    3. '_b' → logprob: -15.875027656555176
    4. 'ase' → logprob: -16.625028610229492
    5. 'asses' → logprob: -17.500028610229492
    6. '```' → logprob: -18.000028610229492
    7. 'a' → logprob: -18.250028610229492
    8. 'abases' → logprob: -18.625028610229492
    9. 'ses' → logprob: -19.000028610229492
    10. ' ases' → logprob: -19.125028610229492

Token 329: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868890106678009
    2. '=' → logprob: -1.1368889808654785
    3. '=b' → logprob: -11.136889457702637
    4. '   ' → logprob: -12.886889457702637
    5. ')' → logprob: -15.511889457702637
    6. '    ' → logprob: -15.636889457702637
    7. '<|end|>' → logprob: -16.01188850402832
    8. ' ' → logprob: -16.01188850402832
    9. ':' → logprob: -16.38688850402832
    10. '  ' → logprob: -16.76188850402832

Token 330: ' bases' (ID: 31148)
  Prédit: 'bases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bases' → logprob: -0.07889033854007721
    2. ' bases' → logprob: -2.578890323638916
    3. 'bas' → logprob: -15.203890800476074
    4. 'base' → logprob: -16.328889846801758
    5. 'Bases' → logprob: -16.453889846801758
    6. 'b' → logprob: -16.703889846801758
    7. 'basis' → logprob: -16.828889846801758
    8. ' bas' → logprob: -18.453889846801758
    9. ' basi' → logprob: -18.953889846801758
    10. ' Bases' → logprob: -20.703889846801758

Token 331: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 332: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06111219525337219
    2. '   ' → logprob: -3.31111216545105
    3. '
' → logprob: -3.93611216545105
    4. ' def' → logprob: -5.936112403869629
    5. '    
' → logprob: -7.686112403869629
    6. '<|end|>' → logprob: -9.561112403869629
    7. '        
' → logprob: -10.686112403869629
    8. '  
' → logprob: -10.686112403869629
    9. ' ' → logprob: -11.436112403869629
    10. '

' → logprob: -11.561112403869629

Token 333: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -8.180258191714529e-06
    2. ' def' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.750008583068848
    4. 'from' → logprob: -17.25000762939453
    5. 'import' → logprob: -17.75000762939453
    6. '
' → logprob: -18.12500762939453
    7. '    
' → logprob: -20.12500762939453
    8. '	def' → logprob: -20.12500762939453
    9. ' ' → logprob: -20.50000762939453
    10. '  ' → logprob: -20.87500762939453

Token 334: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.18179650604724884
    2. 'eq' → logprob: -2.5567965507507324
    3. '_eq' → logprob: -2.8067965507507324
    4. ' __' → logprob: -4.431796550750732
    5. 'lt' → logprob: -4.556796550750732
    6. '_lt' → logprob: -6.181796550750732
    7. 'def' → logprob: -6.681796550750732
    8. ' eq' → logprob: -6.681796550750732
    9. '_pow' → logprob: -7.556796550750732
    10. '_e' → logprob: -9.181796073913574

Token 335: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.2014133334159851
    2. 'lt' → logprob: -1.7014133930206299
    3. 'init' → logprob: -17.576414108276367
    4. ' eq' → logprob: -18.951414108276367
    5. 'gt' → logprob: -19.576414108276367
    6. 'repr' → logprob: -19.951414108276367
    7. ' lt' → logprob: -20.951414108276367
    8. 'pow' → logprob: -22.201414108276367
    9. 'LT' → logprob: -22.326414108276367
    10. '_lt' → logprob: -22.451414108276367

Token 336: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0300685353577137
    2. '__' → logprob: -3.5300686359405518
    3. '(self' → logprob: -8.530068397521973
    4. '__((' → logprob: -9.905068397521973
    5. '__(
' → logprob: -10.030068397521973
    6. '(' → logprob: -10.905068397521973
    7. '__(*' → logprob: -12.655068397521973
    8. '__('' → logprob: -13.280068397521973
    9. '__.__' → logprob: -14.030068397521973
    10. '__("' → logprob: -14.280068397521973

Token 337: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008635726757347584
    2. 'other' → logprob: -4.758635520935059
    3. ' self' → logprob: -11.383635520935059
    4. ' other' → logprob: -12.258635520935059
    5. ')' → logprob: -12.758635520935059
    6. ',' → logprob: -13.883635520935059
    7. '(self' → logprob: -14.383635520935059
    8. ' ' → logprob: -15.258635520935059
    9. ',self' → logprob: -15.633635520935059
    10. '0' → logprob: -16.258636474609375

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018446890637278557
    2. 'self' → logprob: -4.018446922302246
    3. ',self' → logprob: -9.268446922302246
    4. ')' → logprob: -9.518446922302246
    5. ' ,' → logprob: -10.143446922302246
    6. ')(' → logprob: -10.143446922302246
    7. '(self' → logprob: -10.643446922302246
    8. ' self' → logprob: -11.393446922302246
    9. '```' → logprob: -12.143446922302246
    10. ' ' → logprob: -13.018446922302246

Token 339: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0004306692280806601
    2. ' other' → logprob: -7.750430583953857
    3. 'Other' → logprob: -17.500431060791016
    4. '_other' → logprob: -19.125431060791016
    5. '(other' → logprob: -20.750431060791016
    6. '.other' → logprob: -21.000431060791016
    7. 'self' → logprob: -21.250431060791016
    8. ' ' → logprob: -21.500431060791016
    9. '其他' → logprob: -23.000431060791016
    10. '-other' → logprob: -23.000431060791016

Token 340: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07229527086019516
    2. ')' → logprob: -2.9472951889038086
    3. '):
' → logprob: -4.072295188903809
    4. ':' → logprob: -9.197295188903809
    5. ' ):' → logprob: -9.697295188903809
    6. ' )' → logprob: -10.697295188903809
    7. '):

' → logprob: -11.197295188903809
    8. '):
' → logprob: -11.572295188903809
    9. ')**' → logprob: -12.072295188903809
    10. ' ):
' → logprob: -13.197295188903809

Token 341: ' '' (ID: 461)
  Prédit: 'object'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'object' → logprob: -0.058238331228494644
    2. ')' → logprob: -3.0582382678985596
    3. ' object' → logprob: -5.308238506317139
    4. 'obj' → logprob: -6.183238506317139
    5. 'None' → logprob: -6.683238506317139
    6. 'other' → logprob: -7.558238506317139
    7. 'self' → logprob: -8.30823802947998
    8. 'not' → logprob: -8.68323802947998
    9. '):' → logprob: -9.18323802947998
    10. '):
' → logprob: -9.18323802947998

Token 342: 'Power' (ID: 17027)
  Prédit: 'Power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Power' → logprob: -1.9361264946837764e-07
    2. '.Power' → logprob: -16.5
    3. ' Power' → logprob: -16.875
    4. '_power' → logprob: -18.5
    5. 'Powered' → logprob: -18.5
    6. 'Pow' → logprob: -19.625
    7. 'power' → logprob: -20.5
    8. '_POWER' → logprob: -21.25
    9. ')' → logprob: -21.5
    10. '   ' → logprob: -22.375

Token 343: 'Tower' (ID: 96498)
  Prédit: 'Tower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tower' → logprob: -5.512236498361744e-07
    2. 'Power' → logprob: -15.875000953674316
    3. 'Tow' → logprob: -16.0
    4. ' Tower' → logprob: -16.25
    5. '```' → logprob: -16.875
    6. 'tower' → logprob: -16.875
    7. 'Torch' → logprob: -17.25
    8. '
' → logprob: -17.75
    9. 'Tour' → logprob: -17.875
    10. 'Town' → logprob: -17.875

Token 344: 'Comparator' (ID: 45034)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.036712247878313065
    2. ''):
' → logprob: -3.661712169647217
    3. 'Comparator' → logprob: -4.786712169647217
    4. ''):' → logprob: -6.661712169647217
    5. ')' → logprob: -7.286712169647217
    6. ''):
' → logprob: -10.786712646484375
    7. '):
' → logprob: -11.786712646484375
    8. '.Comparator' → logprob: -12.161712646484375
    9. '")' → logprob: -12.286712646484375
    10. '')->' → logprob: -12.661712646484375

Token 345: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.12724022567272186
    2. ')' → logprob: -2.1272401809692383
    3. ''):
' → logprob: -8.752240180969238
    4. ''):' → logprob: -9.002240180969238
    5. '`)' → logprob: -11.877240180969238
    6. '):' → logprob: -12.252240180969238
    7. '")' → logprob: -12.252240180969238
    8. '')->' → logprob: -12.377240180969238
    9. ''):
' → logprob: -12.377240180969238
    10. '):
' → logprob: -13.377240180969238

Token 346: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012243934907019138
    2. ':
' → logprob: -7.376224517822266
    3. ':return' → logprob: -8.876224517822266
    4. '->' → logprob: -9.126224517822266
    5. '):' → logprob: -9.501224517822266
    6. ')' → logprob: -9.501224517822266
    7. '       ' → logprob: -9.626224517822266
    8. '():' → logprob: -10.626224517822266
    9. ' ->' → logprob: -10.751224517822266
    10. '):
' → logprob: -11.001224517822266

Token 347: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -6.2729995988775045e-06
    2. ' bool' → logprob: -12.625006675720215
    3. 'object' → logprob: -12.750006675720215
    4. '<bool' → logprob: -18.0000057220459
    5. '(bool' → logprob: -18.2500057220459
    6. '	bool' → logprob: -19.3750057220459
    7. 'float' → logprob: -20.0000057220459
    8. 'int' → logprob: -20.8750057220459
    9. '   ' → logprob: -21.0000057220459
    10. 'boolean' → logprob: -22.0000057220459

Token 348: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0060330769047141075
    2. ':
' → logprob: -5.131032943725586
    3. '       ' → logprob: -10.256032943725586
    4. ':return' → logprob: -10.381032943725586
    5. '<|end|>' → logprob: -11.381032943725586
    6. '):
' → logprob: -11.506032943725586
    7. '):' → logprob: -12.006032943725586
    8. '():
' → logprob: -13.006032943725586
    9. ',' → logprob: -13.256032943725586
    10. '<|end|>' → logprob: -13.506032943725586

Token 349: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6925215125083923
    2. 'return' → logprob: -0.8175215125083923
    3. 'self' → logprob: -2.942521572113037
    4. ' return' → logprob: -5.567521572113037
    5. '
' → logprob: -6.942521572113037
    6. '[]' → logprob: -8.192521095275879
    7. '[' → logprob: -9.067521095275879
    8. ' self' → logprob: -9.192521095275879
    9. '        
' → logprob: -9.942521095275879
    10. '[self' → logprob: -10.692521095275879

Token 350: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6996590495109558
    2. 'self' → logprob: -0.6996590495109558
    3. '       ' → logprob: -5.8246588706970215
    4. ' return' → logprob: -5.9496588706970215
    5. ' self' → logprob: -7.0746588706970215
    6. '
' → logprob: -10.07465934753418
    7. '           ' → logprob: -11.19965934753418
    8. 'if' → logprob: -11.69965934753418
    9. '   ' → logprob: -11.82465934753418
    10. '        ' → logprob: -12.32465934753418

Token 351: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.2200749754119897e-06
    2. ' self' → logprob: -13.250001907348633
    3. 'not' → logprob: -16.000001907348633
    4. 'is' → logprob: -16.750001907348633
    5. 'len' → logprob: -17.000001907348633
    6. 'all' → logprob: -17.375001907348633
    7. '(self' → logprob: -17.750001907348633
    8. 'compare' → logprob: -18.000001907348633
    9. 'list' → logprob: -18.125001907348633
    10. 'Power' → logprob: -18.375001907348633

Token 352: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -2.868328920158092e-05
    2. '.base' → logprob: -10.875028610229492
    3. '.' → logprob: -12.375028610229492
    4. '.bas' → logprob: -13.125028610229492
    5. '.to' → logprob: -14.250028610229492
    6. '.values' → logprob: -14.375028610229492
    7. ').' → logprob: -15.125028610229492
    8. ' .' → logprob: -15.625028610229492
    9. '.evaluate' → logprob: -15.875028610229492
    10. '   ' → logprob: -16.000028610229492

Token 353: 'ases' (ID: 4324)
  Prédit: 'ases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ases' → logprob: -1.0280383548888494e-06
    2. 'bases' → logprob: -14.000000953674316
    3. 'ase' → logprob: -16.125001907348633
    4. 'a' → logprob: -18.625001907348633
    5. 'ates' → logprob: -19.500001907348633
    6. '```' → logprob: -19.625001907348633
    7. 'ased' → logprob: -20.500001907348633
    8. 'asses' → logprob: -20.625001907348633
    9. '``' → logprob: -20.750001907348633
    10. 'asis' → logprob: -20.875001907348633

Token 354: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20141693949699402
    2. '==' → logprob: -1.7014169692993164
    3. '=' → logprob: -13.201416969299316
    4. ' ' → logprob: -14.076416969299316
    5. '[:]' → logprob: -15.701416969299316
    6. '   ' → logprob: -15.951416969299316
    7. ' =' → logprob: -15.951416969299316
    8. '===' → logprob: -16.326416015625
    9. '[' → logprob: -16.451416015625
    10. '.' → logprob: -16.826416015625

Token 355: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0485873706638813
    2. ' other' → logprob: -3.0485873222351074
    3. '(other' → logprob: -18.048587799072266
    4. '.other' → logprob: -18.673587799072266
    5. 'Other' → logprob: -20.048587799072266
    6. '_other' → logprob: -20.173587799072266
    7. 'others' → logprob: -22.548587799072266
    8. '
' → logprob: -23.798587799072266
    9. 'self' → logprob: -24.173587799072266
    10. ' other's' → logprob: -24.173587799072266

Token 356: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.0019445802317932248
    2. '.' → logprob: -6.251944541931152
    3. ' .' → logprob: -11.876944541931152
    4. '.bas' → logprob: -12.376944541931152
    5. '.s' → logprob: -13.751944541931152
    6. 'bases' → logprob: -14.376944541931152
    7. '.base' → logprob: -14.501944541931152
    8. ').' → logprob: -14.626944541931152
    9. '.б' → logprob: -15.001944541931152
    10. '`.' → logprob: -15.626944541931152

Token 357: 'ases' (ID: 4324)
  Prédit: 'ases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ases' → logprob: -0.005259610712528229
    2. 'bases' → logprob: -5.2552595138549805
    3. 'ase' → logprob: -11.13025951385498
    4. '.b' → logprob: -11.88025951385498
    5. '```' → logprob: -13.88025951385498
    6. '.' → logprob: -14.38025951385498
    7. 'aces' → logprob: -15.38025951385498
    8. '._' → logprob: -15.50525951385498
    9. 'as' → logprob: -15.50525951385498
    10. 'cases' → logprob: -15.63025951385498

Token 358: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08644724637269974
    2. '   ' → logprob: -2.586447238922119
    3. '    
' → logprob: -5.336447238922119
    4. 'def' → logprob: -6.836447238922119
    5. '<|end|>' → logprob: -7.461447238922119
    6. '

' → logprob: -7.961447238922119
    7. '  
' → logprob: -8.086447715759277
    8. '```' → logprob: -8.711447715759277
    9. ' 
' → logprob: -9.336447715759277
    10. '   
' → logprob: -10.336447715759277

Token 359: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00400586100295186
    2. '   ' → logprob: -5.6290059089660645
    3. '
' → logprob: -8.129005432128906
    4. ' def' → logprob: -9.504005432128906
    5. '    
' → logprob: -10.504005432128906
    6. '	def' → logprob: -12.379005432128906
    7. '  
' → logprob: -14.129005432128906
    8. '

' → logprob: -14.254005432128906
    9. '@' → logprob: -14.379005432128906
    10. '_def' → logprob: -14.629005432128906

Token 360: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.512236498361744e-07
    2. ' def' → logprob: -15.000000953674316
    3. '   ' → logprob: -16.0
    4. '@' → logprob: -20.5
    5. '    
' → logprob: -21.0
    6. '	def' → logprob: -21.25
    7. '
' → logprob: -21.625
    8. '        
' → logprob: -23.875
    9. 'ndef' → logprob: -24.125
    10. '  
' → logprob: -24.375

Token 361: ' __' (ID: 2516)
  Prédit: 'lt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lt' → logprob: -0.2609567940235138
    2. '__' → logprob: -1.7609567642211914
    3. 'def' → logprob: -2.8859567642211914
    4. '_lt' → logprob: -6.635956764221191
    5. ' __' → logprob: -7.510956764221191
    6. ' def' → logprob: -9.635956764221191
    7. 'le' → logprob: -10.760956764221191
    8. '   ' → logprob: -10.760956764221191
    9. ' lt' → logprob: -11.385956764221191
    10. 'gt' → logprob: -12.010956764221191

Token 362: 'lt' (ID: 3199)
  Prédit: 'lt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lt' → logprob: -6.704273118884885e-07
    2. 'gt' → logprob: -14.250000953674316
    3. ' lt' → logprob: -20.625
    4. 'LT' → logprob: -20.75
    5. '_lt' → logprob: -20.75
    6. 'le' → logprob: -21.25
    7. 'hash' → logprob: -21.75
    8. '```' → logprob: -22.5
    9. 'Lt' → logprob: -22.75
    10. 'getitem' → logprob: -22.875

Token 363: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -2.7252845029579476e-05
    2. '__' → logprob: -11.000027656555176
    3. '__(
' → logprob: -11.750027656555176
    4. '__((' → logprob: -13.375027656555176
    5. '(self' → logprob: -14.500027656555176
    6. '__('' → logprob: -14.625027656555176
    7. '_(' → logprob: -16.50002670288086
    8. '__("' → logprob: -16.87502670288086
    9. '__(*' → logprob: -17.37502670288086
    10. '(' → logprob: -17.75002670288086

Token 364: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.029847231227905e-05
    2. 'other' → logprob: -9.500080108642578
    3. ' self' → logprob: -12.125080108642578
    4. ' other' → logprob: -19.000080108642578
    5. '(self' → logprob: -20.000080108642578
    6. 'Other' → logprob: -20.625080108642578
    7. '...' → logprob: -21.125080108642578
    8. ''' → logprob: -21.250080108642578
    9. '   ' → logprob: -21.500080108642578
    10. '
' → logprob: -21.625080108642578

Token 365: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019591135787777603
    2. 'self' → logprob: -9.125195503234863
    3. ' ,' → logprob: -9.500195503234863
    4. '(self' → logprob: -12.250195503234863
    5. ',self' → logprob: -12.750195503234863
    6. '__,' → logprob: -13.500195503234863
    7. '',' → logprob: -13.750195503234863
    8. ',
' → logprob: -14.125195503234863
    9. '_,' → logprob: -14.375195503234863
    10. '__(' → logprob: -15.500195503234863

Token 366: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.10249961912631989
    2. ' other' → logprob: -2.3524997234344482
    3. 'self' → logprob: -6.102499485015869
    4. ' self' → logprob: -9.852499961853027
    5. 'Other' → logprob: -14.977499961853027
    6. ' ' → logprob: -16.10249900817871
    7. '_other' → logprob: -17.10249900817871
    8. '.other' → logprob: -17.10249900817871
    9. '(other' → logprob: -17.22749900817871
    10. 'others' → logprob: -19.10249900817871

Token 367: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01769668236374855
    2. '):' → logprob: -4.142696857452393
    3. ' :' → logprob: -6.892696857452393
    4. ')' → logprob: -7.767696857452393
    5. '):
' → logprob: -8.642696380615234
    6. '   ' → logprob: -11.017696380615234
    7. ' ):' → logprob: -11.267696380615234
    8. ' ' → logprob: -12.892696380615234
    9. '       ' → logprob: -13.017696380615234
    10. ':'' → logprob: -13.017696380615234

Token 368: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.7074432373046875
    2. ''' → logprob: -0.8324432373046875
    3. 'Power' → logprob: -3.2074432373046875
    4. ' Power' → logprob: -3.4574432373046875
    5. ')' → logprob: -10.082443237304688
    6. ''s' → logprob: -10.082443237304688
    7. ' ' → logprob: -10.332443237304688
    8. '('' → logprob: -12.332443237304688
    9. '.Power' → logprob: -12.707443237304688
    10. 'Pow' → logprob: -13.332443237304688

Token 369: 'Power' (ID: 17027)
  Prédit: 'Power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Power' → logprob: -6.704273118884885e-07
    2. ' Power' → logprob: -15.000000953674316
    3. ''' → logprob: -15.500000953674316
    4. '_power' → logprob: -17.25
    5. '.Power' → logprob: -17.25
    6. 'power' → logprob: -18.0
    7. 'Pow' → logprob: -18.25
    8. '   ' → logprob: -18.5
    9. ' ' → logprob: -18.625
    10. 'Powered' → logprob: -18.625

Token 370: 'Tower' (ID: 96498)
  Prédit: 'Tower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tower' → logprob: -2.2200749754119897e-06
    2. ' Tower' → logprob: -13.500001907348633
    3. 'Tour' → logprob: -15.000001907348633
    4. '_T' → logprob: -16.250001907348633
    5. 'Tow' → logprob: -16.375001907348633
    6. 'Torch' → logprob: -16.375001907348633
    7. '   ' → logprob: -17.500001907348633
    8. ')' → logprob: -18.000001907348633
    9. 'Town' → logprob: -18.250001907348633
    10. 'tower' → logprob: -18.375001907348633

Token 371: 'Comparator' (ID: 45034)
  Prédit: 'Comparator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Comparator' → logprob: -3.440506407059729e-05
    2. ')' → logprob: -11.00003433227539
    3. '.Comparator' → logprob: -11.37503433227539
    4. '')' → logprob: -12.37503433227539
    5. 'Comparer' → logprob: -14.25003433227539
    6. '.com' → logprob: -15.12503433227539
    7. '   ' → logprob: -15.25003433227539
    8. 'com' → logprob: -15.75003433227539
    9. '`)' → logprob: -16.12503433227539
    10. 'Converter' → logprob: -16.25003433227539

Token 372: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.03805537521839142
    2. ')' → logprob: -3.288055419921875
    3. '`)' → logprob: -12.163055419921875
    4. ''):
' → logprob: -12.913055419921875
    5. ''' → logprob: -13.163055419921875
    6. '")' → logprob: -13.538055419921875
    7. '   ' → logprob: -13.788055419921875
    8. ' ')' → logprob: -14.663055419921875
    9. ')'' → logprob: -14.913055419921875
    10. ''):' → logprob: -15.038055419921875

Token 373: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007191036129370332
    2. '       ' → logprob: -8.12571907043457
    3. '(' → logprob: -8.62571907043457
    4. 'self' → logprob: -9.25071907043457
    5. '[self' → logprob: -9.75071907043457
    6. '[' → logprob: -10.87571907043457
    7. ' self' → logprob: -11.00071907043457
    8. ' (' → logprob: -11.25071907043457
    9. '   ' → logprob: -11.50071907043457
    10. '(
' → logprob: -11.62571907043457

Token 374: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0020581886637955904
    2. 'int' → logprob: -6.627058029174805
    3. ' bool' → logprob: -7.377058029174805
    4. 'object' → logprob: -10.377058029174805
    5. 'list' → logprob: -10.377058029174805
    6. 'lambda' → logprob: -10.627058029174805
    7. '   ' → logprob: -12.502058029174805
    8. ' ' → logprob: -12.877058029174805
    9. 'True' → logprob: -13.002058029174805
    10. 'Callable' → logprob: -13.627058029174805

Token 375: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06880154460668564
    2. '       ' → logprob: -3.4438016414642334
    3. '(' → logprob: -3.9438016414642334
    4. ':' → logprob: -4.693801403045654
    5. '(
' → logprob: -5.318801403045654
    6. ':
' → logprob: -8.193801879882812
    7. '   ' → logprob: -8.443801879882812
    8. '<|end|>' → logprob: -8.943801879882812
    9. 'self' → logprob: -9.193801879882812
    10. ',' → logprob: -9.693801879882812

Token 376: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03199734166264534
    2. 'if' → logprob: -4.031997203826904
    3. 'n' → logprob: -5.156997203826904
    4. 'def' → logprob: -5.156997203826904
    5. '#' → logprob: -7.031997203826904
    6. 'i' → logprob: -7.781997203826904
    7. 'for' → logprob: -8.281997680664062
    8. 'a' → logprob: -8.406997680664062
    9. 'self' → logprob: -8.656997680664062
    10. 'idx' → logprob: -9.156997680664062

Token 377: ' return' (ID: 622)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4697040617465973
    2. 'i' → logprob: -1.969704031944275
    3. 'def' → logprob: -2.0947041511535645
    4. '#' → logprob: -3.0947041511535645
    5. 'n' → logprob: -3.5947041511535645
    6. 'return' (adapté à ' return') → logprob: -4.4697041511535645
    7. 'min' → logprob: -4.9697041511535645
    8. '       ' → logprob: -4.9697041511535645
    9. 'len' → logprob: -5.2197041511535645
    10. 'a' → logprob: -6.0947041511535645

Token 378: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06238720566034317
    2. 'Power' → logprob: -3.062387228012085
    3. 'compare' → logprob: -4.437386989593506
    4. '_power' → logprob: -6.687386989593506
    5. 'power' → logprob: -8.812387466430664
    6. 'is' → logprob: -8.937387466430664
    7. '_compare' → logprob: -9.312387466430664
    8. 'less' → logprob: -9.937387466430664
    9. 'not' → logprob: -10.437387466430664
    10. ' self' → logprob: -10.562387466430664

Token 379: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.02058708667755127
    2. '.compare' → logprob: -3.8955869674682617
    3. '.power' → logprob: -11.020586967468262
    4. '.b' → logprob: -11.395586967468262
    5. '.is' → logprob: -12.395586967468262
    6. '_compare' → logprob: -12.895586967468262
    7. '.less' → logprob: -13.020586967468262
    8. '.evaluate' → logprob: -13.270586967468262
    9. 'compare' → logprob: -13.395586967468262
    10. '.pow' → logprob: -13.895586967468262

Token 380: 'compare' (ID: 27773)
  Prédit: 'compare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compare' → logprob: -0.04103832691907883
    2. 'less' → logprob: -3.7910382747650146
    3. 'lt' → logprob: -4.166038513183594
    4. 'power' → logprob: -7.416038513183594
    5. 'is' → logprob: -7.541038513183594
    6. 'pow' → logprob: -8.416038513183594
    7. 'cmp' → logprob: -8.541038513183594
    8. '_compare' → logprob: -8.666038513183594
    9. 'lex' → logprob: -8.791038513183594
    10. '_' → logprob: -9.291038513183594

Token 381: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2615745961666107
    2. '(self' → logprob: -1.636574625968933
    3. '(other' → logprob: -3.7615745067596436
    4. '_recursive' → logprob: -5.261574745178223
    5. '_t' → logprob: -5.636574745178223
    6. '_power' → logprob: -6.636574745178223
    7. '_helper' → logprob: -7.761574745178223
    8. 't' → logprob: -8.136574745178223
    9. '_other' → logprob: -8.636574745178223
    10. '_lists' → logprob: -8.636574745178223

Token 382: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.0004960790392942727
    2. ',' → logprob: -7.750495910644531
    3. ').' → logprob: -10.750495910644531
    4. ',b' → logprob: -10.875495910644531
    5. '.' → logprob: -11.375495910644531
    6. ')' → logprob: -12.625495910644531
    7. '   ' → logprob: -12.875495910644531
    8. ' ' → logprob: -13.375495910644531
    9. ' .' → logprob: -13.500495910644531
    10. '
' → logprob: -13.500495910644531

Token 383: 'ases' (ID: 4324)
  Prédit: 'ases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ases' → logprob: -0.001406305585987866
    2. 'bases' → logprob: -6.626406192779541
    3. 'ase' → logprob: -10.0014066696167
    4. '```' → logprob: -11.8764066696167
    5. 'as' → logprob: -12.0014066696167
    6. '.b' → logprob: -12.3764066696167
    7. '.' → logprob: -13.0014066696167
    8. 'asses' → logprob: -13.2514066696167
    9. 'aces' → logprob: -13.5014066696167
    10. '   ' → logprob: -14.1264066696167

Token 384: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.696077227592468e-05
    2. ' ,' → logprob: -10.250077247619629
    3. ',
' → logprob: -10.750077247619629
    4. 'other' → logprob: -11.000077247619629
    5. ' other' → logprob: -14.125077247619629
    6. '       ' → logprob: -14.375077247619629
    7. '(other' → logprob: -14.625077247619629
    8. '   ' → logprob: -14.875077247619629
    9. '[' → logprob: -15.000077247619629
    10. '[],' → logprob: -15.125077247619629

Token 385: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0021987867075949907
    2. ' other' → logprob: -6.127198696136475
    3. '0' → logprob: -11.377199172973633
    4. 'self' → logprob: -13.752199172973633
    5. '       ' → logprob: -14.377199172973633
    6. '(other' → logprob: -15.752199172973633
    7. '   ' → logprob: -16.002199172973633
    8. '           ' → logprob: -16.252199172973633
    9. '.other' → logprob: -16.752199172973633
    10. ' ' → logprob: -16.877199172973633

Token 386: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -5.3596853831550106e-05
    2. '.' → logprob: -10.000053405761719
    3. ' .' → logprob: -12.125053405761719
    4. ').' → logprob: -12.875053405761719
    5. '}.' → logprob: -17.75005340576172
    6. ')' → logprob: -17.87505340576172
    7. '].' → logprob: -18.00005340576172
    8. '.bas' → logprob: -18.25005340576172
    9. '`.' → logprob: -19.12505340576172
    10. '.б' → logprob: -19.25005340576172

Token 387: 'ases' (ID: 4324)
  Prédit: 'ases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ases' → logprob: -0.06325370073318481
    2. '.b' → logprob: -2.81325364112854
    3. 'bases' → logprob: -6.688253879547119
    4. '.' → logprob: -11.438253402709961
    5. '```' → logprob: -11.813253402709961
    6. '._' → logprob: -12.438253402709961
    7. ').' → logprob: -12.688253402709961
    8. 'as' → logprob: -12.938253402709961
    9. 'asses' → logprob: -13.063253402709961
    10. 'ase' → logprob: -13.188253402709961

Token 388: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2818450331687927
    2. ',' → logprob: -1.4068450927734375
    3. ')<' → logprob: -8.281845092773438
    4. ' )' → logprob: -9.156845092773438
    5. ')>' → logprob: -9.281845092773438
    6. ' ,' → logprob: -9.281845092773438
    7. '       ' → logprob: -9.531845092773438
    8. ')
' → logprob: -10.906845092773438
    9. ')==' → logprob: -11.156845092773438
    10. '   ' → logprob: -11.781845092773438

Token 389: ' <' (ID: 464)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4737740159034729
    2. '(
' → logprob: -2.098773956298828
    3. '       ' → logprob: -2.223773956298828
    4. '[' → logprob: -2.973773956298828
    5. '(self' → logprob: -2.973773956298828
    6. '   ' → logprob: -4.098773956298828
    7. 'def' → logprob: -4.473773956298828
    8. '[
' → logprob: -4.598773956298828
    9. ',' → logprob: -6.348773956298828
    10. '
' → logprob: -6.973773956298828

Token 390: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013378625735640526
    2. ' ' → logprob: -6.626338005065918
    3. '1' → logprob: -11.376338005065918
    4. '=' → logprob: -14.751338005065918
    5. '```' → logprob: -17.7513370513916
    6. '<|end|>' → logprob: -18.0013370513916
    7. '   ' → logprob: -18.2513370513916
    8. '>' → logprob: -18.5013370513916
    9. '[' → logprob: -19.3763370513916
    10. '  ' → logprob: -19.5013370513916

Token 391: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '1' → logprob: -17.2500057220459
    4. '=' → logprob: -19.7500057220459
    5. '  ' → logprob: -19.8750057220459
    6. '   ' → logprob: -19.8750057220459
    7. '```' → logprob: -20.2500057220459
    8. '۰' → logprob: -20.3750057220459
    9. '[' → logprob: -21.3750057220459
    10. '    ' → logprob: -21.7500057220459

Token 392: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5129001140594482
    2. '
' → logprob: -1.2629001140594482
    3. '       ' → logprob: -2.7629001140594482
    4. 'def' → logprob: -3.5129001140594482
    5. '    
' → logprob: -4.887900352478027
    6. '```' → logprob: -5.137900352478027
    7. ':' → logprob: -5.387900352478027
    8. '        
' → logprob: -5.887900352478027
    9. 'newline' → logprob: -7.137900352478027
    10. '
' → logprob: -7.262900352478027

Token 393: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1256658434867859
    2. 'def' → logprob: -3.2506659030914307
    3. '```' → logprob: -3.3756659030914307
    4. '
' → logprob: -3.7506659030914307
    5. '       ' → logprob: -4.375665664672852
    6. ':' → logprob: -5.375665664672852
    7. '\' → logprob: -6.875665664672852
    8. '    
' → logprob: -7.000665664672852
    9. '_' → logprob: -7.125665664672852
    10. 'newline' → logprob: -7.625665664672852

Token 394: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008782314253039658
    2. '   ' → logprob: -7.25087833404541
    3. ' def' → logprob: -8.87587833404541
    4. '@' (adapté à ' @') → logprob: -10.50087833404541
    5. '```' → logprob: -14.87587833404541
    6. '
' → logprob: -15.12587833404541
    7. '_def' → logprob: -16.500877380371094
    8. '    
' → logprob: -16.625877380371094
    9. '	def' → logprob: -16.875877380371094
    10. ':def' → logprob: -17.250877380371094

Token 395: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.0009138475870713592
    2. 'classmethod' → logprob: -7.000913619995117
    3. 'static' → logprob: -13.000913619995117
    4. 'property' → logprob: -16.250913619995117
    5. 'fun' → logprob: -19.500913619995117
    6. ' static' → logprob: -21.375913619995117
    7. 'l' → logprob: -23.000913619995117
    8. 'st' → logprob: -23.375913619995117
    9. 'Static' → logprob: -23.625913619995117
    10. 'cache' → logprob: -23.750913619995117

Token 396: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36814627051353455
    2. ' def' → logprob: -1.368146300315857
    3. '
' → logprob: -2.9931461811065674
    4. '(' → logprob: -5.8681464195251465
    5. '   ' → logprob: -8.618145942687988
    6. '(def' → logprob: -8.743145942687988
    7. '    
' → logprob: -10.118145942687988
    8. ' (' → logprob: -10.868145942687988
    9. '(
' → logprob: -11.618145942687988
    10. '  
' → logprob: -11.743145942687988

Token 397: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10726001858711243
    2. '
' → logprob: -2.35725998878479
    3. ' def' → logprob: -4.982260227203369
    4. '   ' → logprob: -9.482259750366211
    5. '    
' → logprob: -10.482259750366211
    6. '  
' → logprob: -10.857259750366211
    7. '	def' → logprob: -11.232259750366211
    8. '(def' → logprob: -11.357259750366211
    9. '_def' → logprob: -12.357259750366211
    10. '(' → logprob: -12.357259750366211

Token 398: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.006774465087801218
    2. '
' → logprob: -5.006774425506592
    3. ' def' → logprob: -9.75677490234375
    4. '  
' → logprob: -14.25677490234375
    5. ' 
' → logprob: -15.00677490234375
    6. '    
' → logprob: -15.88177490234375
    7. '   ' → logprob: -17.13177490234375
    8. '
' → logprob: -17.50677490234375
    9. '        
' → logprob: -18.25677490234375
    10. '

' → logprob: -18.38177490234375

Token 399: ' _' (ID: 1175)
  Prédit: '_compare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_compare' → logprob: -0.000122608442325145
    2. 'compare' → logprob: -9.500123023986816
    3. 'def' → logprob: -11.000123023986816
    4. ' _' → logprob: -11.750123023986816
    5. '_com' → logprob: -12.625123023986816
    6. '_power' → logprob: -13.125123023986816
    7. '_cal' → logprob: -13.500123023986816
    8. '_cmp' → logprob: -13.500123023986816
    9. '_comp' → logprob: -13.625123023986816
    10. '_' → logprob: -13.750123023986816

Token 400: 'compare' (ID: 27773)
  Prédit: 'compare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compare' → logprob: -7.588793960167095e-05
    2. '_compare' → logprob: -9.500076293945312
    3. ' compare' → logprob: -15.000076293945312
    4. 'cmp' → logprob: -15.000076293945312
    5. 'def' → logprob: -16.125076293945312
    6. '(compare' → logprob: -16.500076293945312
    7. '
' → logprob: -17.375076293945312
    8. '.compare' → logprob: -17.625076293945312
    9. 'parse' → logprob: -17.875076293945312
    10. '_' → logprob: -18.125076293945312

Token 401: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.27358099818229675
    2. '(lhs' → logprob: -1.8985810279846191
    3. '(left' → logprob: -2.773581027984619
    4. '(b' → logprob: -3.898581027984619
    5. '(t' → logprob: -5.898581027984619
    6. '(base' → logprob: -6.523581027984619
    7. '(lst' → logprob: -7.023581027984619
    8. '(cls' → logprob: -7.398581027984619
    9. '(l' → logprob: -7.398581027984619
    10. '(' → logprob: -8.898580551147461

Token 402: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14400480687618256
    2. ':' → logprob: -2.0190048217773438
    3. ' ,' → logprob: -6.894004821777344
    4. ',b' → logprob: -9.019004821777344
    5. ' :' → logprob: -9.519004821777344
    6. '   ' → logprob: -10.394004821777344
    7. ':list' → logprob: -10.644004821777344
    8. '[' → logprob: -11.019004821777344
    9. '[],' → logprob: -11.019004821777344
    10. 'a' → logprob: -12.269004821777344

Token 403: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0029892323072999716
    2. 'list' → logprob: -5.877989292144775
    3. ' List' → logprob: -9.252988815307617
    4. 'a' → logprob: -10.377988815307617
    5. 'int' → logprob: -10.502988815307617
    6. ')' → logprob: -11.127988815307617
    7. '[List' → logprob: -11.877988815307617
    8. '_list' → logprob: -12.877988815307617
    9. ' list' → logprob: -12.877988815307617
    10. ',' → logprob: -14.002988815307617

Token 404: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -9.662937372922897e-05
    2. 'int' → logprob: -9.250096321105957
    3. ',' → logprob: -15.375096321105957
    4. '   ' → logprob: -15.875096321105957
    5. ',int' → logprob: -16.375097274780273
    6. '<int' → logprob: -17.500097274780273
    7. '```' → logprob: -18.125097274780273
    8. '[' → logprob: -18.250097274780273
    9. '[Int' → logprob: -18.875097274780273
    10. ']int' → logprob: -19.375097274780273

Token 405: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1603275090456009
    2. '],' → logprob: -1.9103275537490845
    3. ' ,' → logprob: -9.410327911376953
    4. '   ' → logprob: -11.410327911376953
    5. ']' → logprob: -12.785327911376953
    6. '>,' → logprob: -12.910327911376953
    7. ' ],' → logprob: -13.535327911376953
    8. '),' → logprob: -14.160327911376953
    9. ',a' → logprob: -14.285327911376953
    10. '       ' → logprob: -14.410327911376953

Token 406: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00012368128227535635
    2. ' b' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.750123977661133
    4. '    ' → logprob: -18.375123977661133
    5. '       ' → logprob: -18.750123977661133
    6. '           ' → logprob: -19.250123977661133
    7. '	b' → logprob: -19.625123977661133
    8. ' ' → logprob: -20.125123977661133
    9. ')b' → logprob: -20.250123977661133
    10. '     ' → logprob: -20.375123977661133

Token 407: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17807935178279877
    2. ':' → logprob: -1.92807936668396
    3. '])' → logprob: -4.428079128265381
    4. '):' → logprob: -5.803079128265381
    5. ']' → logprob: -7.178079128265381
    6. ',' → logprob: -7.303079128265381
    7. '   ' → logprob: -7.553079128265381
    8. '[])' → logprob: -8.553079605102539
    9. '[int' → logprob: -8.928079605102539
    10. '):
' → logprob: -9.178079605102539

Token 408: ' List' (ID: 2655)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2534412145614624
    2. 'List' → logprob: -1.5034412145614624
    3. '[int' → logprob: -6.628441333770752
    4. ')' → logprob: -8.628440856933594
    5. '[List' → logprob: -12.503440856933594
    6. ' int' → logprob: -13.253440856933594
    7. ' List' → logprob: -13.628440856933594
    8. ']' → logprob: -13.628440856933594
    9. '])' → logprob: -14.503440856933594
    10. 'list' → logprob: -15.003440856933594

Token 409: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -6.468279752880335e-05
    2. 'int' → logprob: -9.750064849853516
    3. ')' → logprob: -12.500064849853516
    4. '   ' → logprob: -13.625064849853516
    5. ']int' → logprob: -14.750064849853516
    6. '])' → logprob: -15.000064849853516
    7. ']' → logprob: -15.375064849853516
    8. '<int' → logprob: -15.625064849853516
    9. ':int' → logprob: -16.375064849853516
    10. '[Int' → logprob: -16.500064849853516

Token 410: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -7.481510692741722e-05
    2. '],' → logprob: -9.87507438659668
    3. ')' → logprob: -11.12507438659668
    4. ' ])' → logprob: -12.37507438659668
    5. ''])' → logprob: -13.37507438659668
    6. ']' → logprob: -13.62507438659668
    7. '   ' → logprob: -14.50007438659668
    8. ']):
' → logprob: -14.62507438659668
    9. ']])' → logprob: -15.50007438659668
    10. '))' → logprob: -16.25007438659668

Token 411: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.32096123695373535
    2. ':' → logprob: -1.4459612369537354
    3. ' ->' → logprob: -3.5709612369537354
    4. ')' → logprob: -4.695960998535156
    5. ')->' → logprob: -6.945960998535156
    6. '->[' → logprob: -7.945960998535156
    7. '   ' → logprob: -8.070960998535156
    8. '[' → logprob: -10.320960998535156
    9. '>' → logprob: -10.695960998535156
    10. ']->' → logprob: -11.445960998535156

Token 412: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001706247916445136
    2. ' int' → logprob: -6.376706123352051
    3. '(int' → logprob: -13.50170612335205
    4. '[int' → logprob: -13.87670612335205
    5. 'Callable' → logprob: -14.75170612335205
    6. ' ' → logprob: -14.87670612335205
    7. 'lambda' → logprob: -15.50170612335205
    8. ':int' → logprob: -15.75170612335205
    9. '<int' → logprob: -15.75170612335205
    10. '   ' → logprob: -16.626707077026367

Token 413: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01964024268090725
    2. ':
' → logprob: -4.1446404457092285
    3. '       ' → logprob: -6.6446404457092285
    4. '   ' → logprob: -7.6446404457092285
    5. '<|end|>' → logprob: -7.6446404457092285
    6. '):' → logprob: -8.26963996887207
    7. ',' → logprob: -8.51963996887207
    8. '):
' → logprob: -8.51963996887207
    9. '():' → logprob: -8.89463996887207
    10. '():
' → logprob: -9.26963996887207

Token 414: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0985364094376564
    2. 'n' → logprob: -3.098536491394043
    3. 'if' → logprob: -3.848536491394043
    4. ' if' → logprob: -3.973536491394043
    5. ' n' → logprob: -5.473536491394043
    6. 'i' → logprob: -5.848536491394043
    7. '```' → logprob: -6.973536491394043
    8. ' i' → logprob: -8.223536491394043
    9. '#' → logprob: -9.598536491394043
    10. '   ' → logprob: -9.973536491394043

Token 415: ' """
' (ID: 7037)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14285260438919067
    2. 'n' → logprob: -2.142852544784546
    3. 'i' → logprob: -4.642852783203125
    4. '#' → logprob: -5.767852783203125
    5. 'def' → logprob: -6.767852783203125
    6. 'for' → logprob: -7.392852783203125
    7. '```' → logprob: -7.642852783203125
    8. '       ' → logprob: -7.892852783203125
    9. 'm' → logprob: -8.642852783203125
    10. ' if' → logprob: -9.267852783203125

Token 416: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13255049288272858
    2. 'n' → logprob: -2.8825504779815674
    3. '#' → logprob: -3.1325504779815674
    4. '       ' → logprob: -4.0075507164001465
    5. 'i' → logprob: -5.8825507164001465
    6. 'len' → logprob: -6.5075507164001465
    7. 'def' → logprob: -7.0075507164001465
    8. '```' → logprob: -8.007550239562988
    9. 'for' → logprob: -8.132550239562988
    10. 'm' → logprob: -8.132550239562988

Token 417: ' Com' (ID: 1390)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.28818464279174805
    2. '#' → logprob: -1.788184642791748
    3. 'n' → logprob: -2.788184642791748
    4. 'def' → logprob: -4.163184642791748
    5. 'i' → logprob: -5.913184642791748
    6. '       ' → logprob: -6.288184642791748
    7. 'len' → logprob: -7.038184642791748
    8. '"""
' → logprob: -9.663185119628906
    9. 'length' → logprob: -9.663185119628906
    10. ' if' → logprob: -9.788185119628906

Token 418: 'pares' (ID: 57580)
  Prédit: 'pare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -0.00872661080211401
    2. 'pares' → logprob: -4.758726596832275
    3. 'pute' → logprob: -9.258727073669434
    4. 'p' → logprob: -12.133727073669434
    5. 'parse' → logprob: -12.883727073669434
    6. 'Pare' → logprob: -13.133727073669434
    7. 'put' → logprob: -13.383727073669434
    8. '#' → logprob: -14.258727073669434
    9. '```' → logprob: -14.508727073669434
    10. 'pair' → logprob: -14.633727073669434

Token 419: ' two' (ID: 1920)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.015586618334054947
    2. 'i' → logprob: -4.765586853027344
    3. 'if' → logprob: -5.265586853027344
    4. ' a' → logprob: -7.265586853027344
    5. '#' → logprob: -7.390586853027344
    6. 'x' → logprob: -8.765586853027344
    7. 'len' → logprob: -9.640586853027344
    8. 'def' → logprob: -10.140586853027344
    9. ' if' → logprob: -10.140586853027344
    10. '   ' → logprob: -10.265586853027344

Token 420: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.18082647025585175
    2. ' power' → logprob: -2.430826425552368
    3. 't' → logprob: -3.305826425552368
    4. 'lists' → logprob: -3.930826425552368
    5. 'bases' → logprob: -4.555826663970947
    6. ' lists' → logprob: -4.680826663970947
    7. 'Power' → logprob: -7.930826663970947
    8. ' towers' → logprob: -8.180826187133789
    9. 'List' → logprob: -8.680826187133789
    10. 'powers' → logprob: -9.055826187133789

Token 421: ' tower' (ID: 35225)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0164729356765747
    2. '_t' → logprob: -1.2664729356765747
    3. 'Tower' → logprob: -1.3914729356765747
    4. 'T' → logprob: -3.016472816467285
    5. '   ' → logprob: -4.016472816467285
    6. ' towers' → logprob: -4.641472816467285
    7. 'a' → logprob: -4.766472816467285
    8. '_' → logprob: -5.016472816467285
    9. '       ' → logprob: -5.391472816467285
    10. '_T' → logprob: -5.641472816467285

Token 422: ' lists' (ID: 19471)
  Prédit: 'express'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'express' → logprob: -0.24952498078346252
    2. 'bases' → logprob: -1.8745249509811401
    3. 'lists' → logprob: -3.8745250701904297
    4. 's' → logprob: -4.24952507019043
    5. ' expressions' → logprob: -4.24952507019043
    6. 'a' → logprob: -5.12452507019043
    7. ' bases' → logprob: -5.24952507019043
    8. 't' → logprob: -6.12452507019043
    9. ' towers' → logprob: -6.37452507019043
    10. ' lists' → logprob: -7.12452507019043

Token 423: ' a' (ID: 261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3586950898170471
    2. ' a' → logprob: -2.4836950302124023
    3. '       ' → logprob: -2.6086950302124023
    4. 'a' → logprob: -3.2336950302124023
    5. '(a' → logprob: -3.4836950302124023
    6. ':' → logprob: -3.9836950302124023
    7. ' at' → logprob: -4.358695030212402
    8. ' for' → logprob: -4.983695030212402
    9. '[a' → logprob: -4.983695030212402
    10. ' (' → logprob: -5.108695030212402

Token 424: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11184731870889664
    2. ' and' → logprob: -2.361847400665283
    3. 'and' → logprob: -4.986847400665283
    4. '       ' → logprob: -6.361847400665283
    5. ':' → logprob: -6.486847400665283
    6. '   ' → logprob: -7.736847400665283
    7. ' ,' → logprob: -8.736846923828125
    8. ' with' → logprob: -8.861846923828125
    9. ')' → logprob: -9.236846923828125
    10. '[' → logprob: -9.361846923828125

Token 425: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011048054322600365
    2. ' b' → logprob: -4.511047840118408
    3. ' ' → logprob: -16.13604736328125
    4. 'a' → logprob: -17.76104736328125
    5. '   ' → logprob: -17.76104736328125
    6. '
' → logprob: -17.88604736328125
    7. 'List' → logprob: -18.26104736328125
    8. '    ' → logprob: -18.51104736328125
    9. '[b' → logprob: -19.01104736328125
    10. '       ' → logprob: -19.13604736328125

Token 426: ' according' (ID: 7065)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21156367659568787
    2. ':' → logprob: -2.2115635871887207
    3. ',' → logprob: -2.8365635871887207
    4. '.' → logprob: -4.586563587188721
    5. ' at' → logprob: -5.836563587188721
    6. ':
' → logprob: -6.086563587188721
    7. ' for' → logprob: -6.336563587188721
    8. ' to' → logprob: -6.836563587188721
    9. ' with' → logprob: -6.836563587188721
    10. '   ' → logprob: -7.461563587188721

Token 427: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.018788684159517288
    2. ' to' → logprob: -4.018788814544678
    3. '_to' → logprob: -7.643788814544678
    4. '_' → logprob: -9.14378833770752
    5. '=' → logprob: -10.64378833770752
    6. ')' → logprob: -12.26878833770752
    7. '<|end|>' → logprob: -12.26878833770752
    8. 'a' → logprob: -12.76878833770752
    9. '_tokens' → logprob: -13.26878833770752
    10. '```' → logprob: -13.51878833770752

Token 428: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.09433095157146454
    2. 'Power' → logprob: -2.9693310260772705
    3. 'power' → logprob: -4.469330787658691
    4. ' the' → logprob: -4.594330787658691
    5. 'their' → logprob: -5.344330787658691
    6. 'custom' → logprob: -5.719330787658691
    7. 'len' → logprob: -5.969330787658691
    8. '"' → logprob: -6.469330787658691
    9. '...' → logprob: -6.844330787658691
    10. 'problem' → logprob: -7.094330787658691

Token 429: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.5118184089660645
    2. 'len' → logprob: -1.8868184089660645
    3. 'rules' → logprob: -2.6368184089660645
    4. 'power' → logprob: -2.8868184089660645
    5. 'logic' → logprob: -3.3868184089660645
    6. 'def' → logprob: -3.3868184089660645
    7. 'following' → logprob: -4.0118184089660645
    8. 'same' → logprob: -4.7618184089660645
    9. 'specific' → logprob: -5.3868184089660645
    10. 'lambda' → logprob: -5.6368184089660645

Token 430: ''s' (ID: 885)
  Prédit: ' statement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' statement' → logprob: -0.9727464318275452
    2. '   ' → logprob: -1.4727463722229004
    3. 'statement' → logprob: -2.2227463722229004
    4. '       ' → logprob: -2.3477463722229004
    5. ''s' → logprob: -2.5977463722229004
    6. ' logic' → logprob: -3.4727463722229004
    7. ' specification' → logprob: -4.3477463722229
    8. 'spec' → logprob: -4.3477463722229
    9. ' description' → logprob: -4.5977463722229
    10. ',' → logprob: -4.8477463722229

Token 431: ' logic' (ID: 18485)
  Prédit: 'description'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'description' → logprob: -0.6250064969062805
    2. 'rules' → logprob: -1.6250064373016357
    3. 'logic' → logprob: -2.0000064373016357
    4. ' logic' → logprob: -3.3750064373016357
    5. 'definition' → logprob: -3.8750064373016357
    6. 'specific' → logprob: -3.8750064373016357
    7. 'spec' → logprob: -4.125006675720215
    8. 'statement' → logprob: -4.250006675720215
    9. ' rules' → logprob: -4.625006675720215
    10. ' description' → logprob: -4.875006675720215

Token 432: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0256910789757967
    2. ',' → logprob: -3.775691032409668
    3. '.' → logprob: -7.025691032409668
    4. ':' → logprob: -7.275691032409668
    5. '        
' → logprob: -8.400691032409668
    6. ' at' → logprob: -9.025691032409668
    7. '<|end|>' → logprob: -9.025691032409668
    8. '   ' → logprob: -9.775691032409668
    9. ')' → logprob: -9.900691032409668
    10. ':
' → logprob: -10.275691032409668

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007860597223043442
    2. ' if' → logprob: -5.7578606605529785
    3. 'n' → logprob: -5.8828606605529785
    4. ' n' → logprob: -6.6328606605529785
    5. 'if' → logprob: -7.7578606605529785
    6. '        
' → logprob: -10.25786018371582
    7. 'def' → logprob: -10.50786018371582
    8. '```' → logprob: -10.75786018371582
    9. '   ' → logprob: -11.50786018371582
    10. 'i' → logprob: -11.50786018371582

Token 434: ' -' (ID: 533)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.292034387588501
    2. 'if' → logprob: -1.542034387588501
    3. '       ' → logprob: -3.917034387588501
    4. '#' → logprob: -4.917034149169922
    5. 'm' → logprob: -5.042034149169922
    6. 'for' → logprob: -6.167034149169922
    7. 'i' → logprob: -6.542034149169922
    8. 'def' → logprob: -6.917034149169922
    9. 'max' → logprob: -7.792034149169922
    10. 'len' → logprob: -8.042034149169922

Token 435: ' Calculate' (ID: 38942)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1478046327829361
    2. 'n' → logprob: -2.1478047370910645
    3. '#' → logprob: -4.6478047370910645
    4. 'for' → logprob: -5.3978047370910645
    5. 'len' → logprob: -5.6478047370910645
    6. 'def' → logprob: -7.3978047370910645
    7. 'from' → logprob: -7.3978047370910645
    8. 'min' → logprob: -7.8978047370910645
    9. '       ' → logprob: -8.022804260253906
    10. 'length' → logprob: -8.022804260253906

Token 436: ' which' (ID: 1118)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8527215719223022
    2. 'len' → logprob: -0.8527215719223022
    3. 'import' → logprob: -3.227721691131592
    4. 'from' → logprob: -3.352721691131592
    5. 'if' → logprob: -3.477721691131592
    6. 'n' → logprob: -4.102721691131592
    7. 'la' → logprob: -4.477721691131592
    8. 'length' → logprob: -6.102721691131592
    9. 'a' → logprob: -6.227721691131592
    10. 'log' → logprob: -6.477721691131592

Token 437: ' tower' (ID: 35225)
  Prédit: 'tower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tower' → logprob: -1.1047377586364746
    2. 'is' → logprob: -1.6047377586364746
    3. 'list' → logprob: -1.8547377586364746
    4. 'one' → logprob: -2.6047377586364746
    5. 'comes' → logprob: -2.8547377586364746
    6. 'side' → logprob: -3.1047377586364746
    7. ' is' → logprob: -3.7297377586364746
    8. ' one' → logprob: -3.9797377586364746
    9. ' tower' → logprob: -3.9797377586364746
    10. 'token' → logprob: -3.9797377586364746

Token 438: ' results' (ID: 4376)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.19929645955562592
    2. ' is' → logprob: -1.824296474456787
    3. 'has' → logprob: -5.074296474456787
    4. 'comes' → logprob: -5.824296474456787
    5. ' has' → logprob: -6.199296474456787
    6. ' comes' → logprob: -6.324296474456787
    7. 'should' → logprob: -6.574296474456787
    8. '#' → logprob: -7.199296474456787
    9. 'length' → logprob: -7.699296474456787
    10. 'a' → logprob: -8.199295997619629

Token 439: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.05088004842400551
    2. ' in' → logprob: -3.550879955291748
    3. 'from' → logprob: -4.425879955291748
    4. '       ' → logprob: -5.550879955291748
    5. 'first' → logprob: -6.550879955291748
    6. 'a' → logprob: -6.925879955291748
    7. '   ' → logprob: -7.300879955291748
    8. 'is' → logprob: -7.675879955291748
    9. 'greater' → logprob: -8.050880432128906
    10. '```' → logprob: -9.050880432128906

Token 440: ' a' (ID: 261)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.34514543414115906
    2. '1' → logprob: -1.4701454639434814
    3. 'greater' → logprob: -3.2201454639434814
    4. 'a' → logprob: -4.095145225524902
    5. 'True' → logprob: -6.095145225524902
    6. 'larg' → logprob: -6.970145225524902
    7. ' -' → logprob: -7.345145225524902
    8. ' ' → logprob: -7.970145225524902
    9. 'Greater' → logprob: -8.845145225524902
    10. 'positive' → logprob: -9.470145225524902

Token 441: ' greater' (ID: 10740)
  Prédit: 'greater'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'greater' → logprob: -0.6919315457344055
    2. ' larger' → logprob: -2.0669314861297607
    3. 'larg' → logprob: -2.1919314861297607
    4. ' greater' → logprob: -2.3169314861297607
    5. ' smaller' → logprob: -2.9419314861297607
    6. ' positive' → logprob: -3.4419314861297607
    7. '-' → logprob: -3.8169314861297607
    8. 'sm' → logprob: -4.06693172454834
    9. '1' → logprob: -4.44193172454834
    10. ' higher' → logprob: -5.19193172454834

Token 442: ' number' (ID: 2086)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.18709522485733032
    2. ' value' → logprob: -2.1870951652526855
    3. 'result' → logprob: -3.4370951652526855
    4. 'power' → logprob: -4.5620951652526855
    5. ' result' → logprob: -5.1870951652526855
    6. 'number' → logprob: -5.9370951652526855
    7. 'height' → logprob: -6.1870951652526855
    8. ' power' → logprob: -6.8120951652526855
    9. ' number' → logprob: -7.0620951652526855
    10. 'expression' → logprob: -7.1870951652526855

Token 443: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7115477323532104
    2. ' if' → logprob: -1.0865477323532104
    3. ' or' → logprob: -3.3365478515625
    4. ' at' → logprob: -3.5865478515625
    5. 'if' → logprob: -3.8365478515625
    6. '.' → logprob: -3.8365478515625
    7. ',' → logprob: -4.0865478515625
    8. ' for' → logprob: -4.3365478515625
    9. '
' → logprob: -4.4615478515625
    10. ' and' → logprob: -4.9615478515625

Token 444: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005808155983686447
    2. '\n' → logprob: -6.130808353424072
    3. '```' → logprob: -6.630808353424072
    4. '
' → logprob: -7.505808353424072
    5. '"""
' → logprob: -8.130807876586914
    6. '        
' → logprob: -8.255807876586914
    7. ' if' → logprob: -8.505807876586914
    8. '\' → logprob: -8.880807876586914
    9. '\
' → logprob: -9.005807876586914
    10. '<|end|>' → logprob: -9.255807876586914

Token 445: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007816236466169357
    2. ' if' → logprob: -6.007816314697266
    3. ')' → logprob: -6.257816314697266
    4. '```' → logprob: -6.632816314697266
    5. 'if' → logprob: -7.632816314697266
    6. '        
' → logprob: -8.132816314697266
    7. '
' → logprob: -8.132816314697266
    8. ',' → logprob: -8.632816314697266
    9. '"""' → logprob: -9.382816314697266
    10. ')
' → logprob: -9.382816314697266

Token 446: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.46794918179512024
    2. '#' → logprob: -1.0929491519927979
    3. 'n' → logprob: -3.592949151992798
    4. '       ' → logprob: -5.092949390411377
    5. 'len' → logprob: -6.467949390411377
    6. 'from' → logprob: -6.967949390411377
    7. 'def' → logprob: -7.467949390411377
    8. ' if' → logprob: -7.717949390411377
    9. '
' → logprob: -7.967949390411377
    10. 'If' → logprob: -8.592948913574219

Token 447: ' equal' (ID: 12629)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.15557540953159332
    2. 'len' → logprob: -2.0305755138397217
    3. ' not' → logprob: -4.530575275421143
    4. 'a' → logprob: -6.280575275421143
    5. ' len' → logprob: -8.7805757522583
    6. '```' → logprob: -12.2805757522583
    7. 'all' → logprob: -12.6555757522583
    8. '(len' → logprob: -12.7805757522583
    9. ' a' → logprob: -13.4055757522583
    10. '!' → logprob: -13.5305757522583

Token 448: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10103777796030045
    2. ':' → logprob: -2.7260377407073975
    3. ' and' → logprob: -4.351037979125977
    4. ' or' → logprob: -4.351037979125977
    5. 'and' → logprob: -5.851037979125977
    6. ' ,' → logprob: -7.851037979125977
    7. '       ' → logprob: -8.226037979125977
    8. ' at' → logprob: -8.226037979125977
    9. ',
' → logprob: -8.476037979125977
    10. 'or' → logprob: -9.226037979125977

Token 449: ' lex' (ID: 37772)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7578467130661011
    2. 'if' → logprob: -1.132846713066101
    3. 'return' → logprob: -2.1328468322753906
    4. ' return' → logprob: -2.6328468322753906
    5. ' for' → logprob: -5.007846832275391
    6. 'for' → logprob: -5.257846832275391
    7. '#' → logprob: -5.632846832275391
    8. '       ' → logprob: -6.632846832275391
    9. 'len' → logprob: -7.257846832275391
    10. ' #' → logprob: -8.50784683227539

Token 450: ' order' (ID: 2569)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.0010111343581229448
    2. 'ically' → logprob: -8.12601089477539
    3. ' ' → logprob: -9.00101089477539
    4. 'i' → logprob: -9.25101089477539
    5. '-' → logprob: -9.50101089477539
    6. '_' → logprob: -9.62601089477539
    7. '   ' → logprob: -9.75101089477539
    8. '_compare' → logprob: -9.75101089477539
    9. '
' → logprob: -10.00101089477539
    10. 'ico' → logprob: -10.37601089477539

Token 451: ' decides' (ID: 48145)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24139335751533508
    2. ':' → logprob: -2.7413933277130127
    3. ' if' → logprob: -2.7413933277130127
    4. ':
' → logprob: -3.9913933277130127
    5. '
' → logprob: -4.366393566131592
    6. ',' → logprob: -4.491393566131592
    7. '):
' → logprob: -4.616393566131592
    8. ' =' → logprob: -4.741393566131592
    9. '        
' → logprob: -6.241393566131592
    10. '   ' → logprob: -6.241393566131592

Token 452: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12539076805114746
    2. ':' → logprob: -3.2503907680511475
    3. '
' → logprob: -3.8753907680511475
    4. ':
' → logprob: -4.375391006469727
    5. ' or' → logprob: -4.625391006469727
    6. '.' → logprob: -5.125391006469727
    7. ' if' → logprob: -5.250391006469727
    8. ',' → logprob: -5.750391006469727
    9. ')' → logprob: -5.875391006469727
    10. '   ' → logprob: -5.875391006469727

Token 453: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008905270136892796
    2. '```' → logprob: -5.133905410766602
    3. ')' → logprob: -7.383905410766602
    4. '        
' → logprob: -7.508905410766602
    5. '...' → logprob: -8.133905410766602
    6. '`' → logprob: -8.258905410766602
    7. '``' → logprob: -8.508905410766602
    8. ',' → logprob: -8.508905410766602
    9. '#' → logprob: -8.883905410766602
    10. ' if' → logprob: -9.383905410766602

Token 454: ' This' (ID: 1328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03706037625670433
    2. '"""
' → logprob: -3.912060260772705
    3. '"""' → logprob: -4.537060260772705
    4. '```' → logprob: -5.662060260772705
    5. '
' → logprob: -7.287060260772705
    6. ')' → logprob: -7.912060260772705
    7. '\n' → logprob: -8.412060737609863
    8. '``' → logprob: -8.537060737609863
    9. '   ' → logprob: -9.162060737609863
    10. '        ' → logprob: -9.412060737609863

Token 455: ' comparison' (ID: 19211)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.0253522396087646
    2. ' continues' → logprob: -1.2753522396087646
    3. ' can' → logprob: -2.6503522396087646
    4. '
' → logprob: -2.6503522396087646
    5. 'def' → logprob: -3.0253522396087646
    6. ' code' → logprob: -3.1503522396087646
    7. ' def' → logprob: -3.6503522396087646
    8. ' method' → logprob: -4.525352478027344
    9. 'is' → logprob: -4.650352478027344
    10. ' completes' → logprob: -4.650352478027344

Token 456: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.8585078120231628
    2. ' continues' → logprob: -1.4835078716278076
    3. 'is' → logprob: -2.3585078716278076
    4. 'def' → logprob: -2.4835078716278076
    5. '       ' → logprob: -2.8585078716278076
    6. ':' → logprob: -3.6085078716278076
    7. ' def' → logprob: -3.8585078716278076
    8. 'contin' → logprob: -4.4835076332092285
    9. ' can' → logprob: -4.6085076332092285
    10. ':
' → logprob: -5.2335076332092285

Token 457: ' done' (ID: 4167)
  Prédit: 'complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'complex' → logprob: -0.7097877264022827
    2. ' tricky' → logprob: -1.3347877264022827
    3. ' complex' → logprob: -2.4597878456115723
    4. 'not' → logprob: -2.5847878456115723
    5. 'non' → logprob: -2.9597878456115723
    6. ' not' → logprob: -5.209787845611572
    7. ' non' → logprob: -5.459787845611572
    8. 'def' → logprob: -5.959787845611572
    9. ' quite' → logprob: -6.084787845611572
    10. ' incomplete' → logprob: -6.209787845611572

Token 458: ' recursively' (ID: 130266)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.334523469209671
    2. ' based' → logprob: -2.4595234394073486
    3. 'by' → logprob: -2.9595234394073486
    4. ' recursively' → logprob: -2.9595234394073486
    5. ' here' → logprob: -3.7095234394073486
    6. ' using' → logprob: -4.334523677825928
    7. '       ' → logprob: -4.959523677825928
    8. 'based' → logprob: -5.209523677825928
    9. ' in' → logprob: -5.334523677825928
    10. ' on' → logprob: -5.459523677825928

Token 459: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0777447372674942
    2. '.' → logprob: -2.952744722366333
    3. ',' → logprob: -4.077744960784912
    4. ':' → logprob: -6.327744960784912
    5. ' for' → logprob: -6.702744960784912
    6. ' and' → logprob: -7.077744960784912
    7. ' to' → logprob: -7.577744960784912
    8. ' at' → logprob: -8.202744483947754
    9. ' by' → logprob: -8.702744483947754
    10. ' with' → logprob: -9.452744483947754

Token 460: ' uses' (ID: 8844)
  Prédit: ' handles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' handles' → logprob: -1.3996037244796753
    2. '       ' → logprob: -1.6496037244796753
    3. ' carefully' → logprob: -1.6496037244796753
    4. 'def' → logprob: -2.274603843688965
    5. 'handles' → logprob: -2.399603843688965
    6. ' considers' → logprob: -3.274603843688965
    7. '   ' → logprob: -3.399603843688965
    8. ' is' → logprob: -4.524603843688965
    9. 'care' → logprob: -4.774603843688965
    10. 'not' → logprob: -4.774603843688965

Token 461: ' special' (ID: 3582)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.11214595288038254
    2. 'math' → logprob: -2.8621459007263184
    3. 'def' → logprob: -3.7371459007263184
    4. 'from' → logprob: -4.737145900726318
    5. 'the' → logprob: -5.112145900726318
    6. 'len' → logprob: -5.487145900726318
    7. '#' → logprob: -6.737145900726318
    8. 'a' → logprob: -6.737145900726318
    9. ' math' → logprob: -6.987145900726318
    10. 'lambda' → logprob: -7.362145900726318

Token 462: ' rules' (ID: 9607)
  Prédit: 'handling'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'handling' → logprob: -0.8099101185798645
    2. 'cases' → logprob: -0.9349101185798645
    3. ' handling' → logprob: -3.1849100589752197
    4. 'c' → logprob: -3.3099100589752197
    5. ' cases' → logprob: -3.6849100589752197
    6. 'case' → logprob: -3.8099100589752197
    7. ' logic' → logprob: -4.559910297393799
    8. ' casing' → logprob: -4.934910297393799
    9. 'care' → logprob: -5.059910297393799
    10. 'rules' → logprob: -5.809910297393799

Token 463: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.709979236125946
    2. ' for' → logprob: -0.959979236125946
    3. ' to' → logprob: -2.334979295730591
    4. ':' → logprob: -4.334979057312012
    5. '   ' → logprob: -5.584979057312012
    6. ',' → logprob: -5.584979057312012
    7. '.' → logprob: -5.834979057312012
    8. 'for' → logprob: -6.459979057312012
    9. '):' → logprob: -7.584979057312012
    10. ':
' → logprob: -7.834979057312012

Token 464: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.721228368813172e-05
    2. 'if' → logprob: -10.000086784362793
    3. ' if' → logprob: -10.375086784362793
    4. 'n' → logprob: -12.875086784362793
    5. '   ' → logprob: -13.500086784362793
    6. '           ' → logprob: -13.500086784362793
    7. '        
' → logprob: -13.500086784362793
    8. '```' → logprob: -13.500086784362793
    9. 'def' → logprob: -14.375086784362793
    10. '...' → logprob: -14.375086784362793

Token 465: ' Since' (ID: 12265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9595932364463806
    2. ' if' → logprob: -0.9595932364463806
    3. 'if' → logprob: -1.4595932960510254
    4. 'n' → logprob: -7.209593296051025
    5. '```' → logprob: -7.209593296051025
    6. ' n' → logprob: -10.084592819213867
    7. 'def' → logprob: -10.834592819213867
    8. ')' → logprob: -11.709592819213867
    9. '``' → logprob: -11.834592819213867
    10. '#' → logprob: -12.584592819213867

Token 466: ' direct' (ID: 2823)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.7874565124511719
    2. 'direct' → logprob: -1.7874565124511719
    3. 'ex' → logprob: -1.9124565124511719
    4. 'the' → logprob: -2.287456512451172
    5. 'powers' → logprob: -3.662456512451172
    6. 't' → logprob: -4.537456512451172
    7. 'exact' → logprob: -4.662456512451172
    8. 'a' → logprob: -4.662456512451172
    9. '0' → logprob: -4.912456512451172
    10. 'actual' → logprob: -4.912456512451172

Token 467: ' power' (ID: 3470)
  Prédit: 'comparison'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comparison' → logprob: -0.08132536709308624
    2. 'power' → logprob: -3.2063252925872803
    3. 'pow' → logprob: -4.456325531005859
    4. 'evaluation' → logprob: -4.456325531005859
    5. 'ex' → logprob: -4.956325531005859
    6. 'com' → logprob: -5.331325531005859
    7. ' comparison' → logprob: -6.456325531005859
    8. 'floating' → logprob: -8.08132553100586
    9. 'float' → logprob: -8.83132553100586
    10. 'compar' → logprob: -8.83132553100586

Token 468: ' tower' (ID: 35225)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20660719275474548
    2. '       ' → logprob: -2.8316071033477783
    3. '_t' → logprob: -2.8316071033477783
    4. '   ' → logprob: -3.7066071033477783
    5. '(' → logprob: -4.331607341766357
    6. 'ex' → logprob: -4.831607341766357
    7. ')' → logprob: -5.206607341766357
    8. '(
' → logprob: -5.706607341766357
    9. ']' → logprob: -5.831607341766357
    10. 'Tower' → logprob: -6.331607341766357

Token 469: ' evaluation' (ID: 21407)
  Prédit: ' comparison'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comparison' → logprob: -0.5290269255638123
    2. 'comparison' → logprob: -1.779026985168457
    3. ' evaluation' → logprob: -1.904026985168457
    4. ' comparisons' → logprob: -2.904026985168457
    5. 'evaluation' → logprob: -3.404026985168457
    6. 'ex' → logprob: -6.529026985168457
    7. ' calculation' → logprob: -7.279026985168457
    8. ' computation' → logprob: -7.529026985168457
    9. 'compar' → logprob: -7.529026985168457
    10. 'com' → logprob: -7.654026985168457

Token 470: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3480397164821625
    2. 'is' → logprob: -1.4730397462844849
    3. ' can' → logprob: -3.2230396270751953
    4. 'can' → logprob: -4.223039627075195
    5. ' may' → logprob: -6.098039627075195
    6. 'may' → logprob: -6.723039627075195
    7. ' might' → logprob: -7.098039627075195
    8. ')' → logprob: -7.223039627075195
    9. 'could' → logprob: -7.348039627075195
    10. 'might' → logprob: -7.348039627075195

Token 471: ' infe' (ID: 87318)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.05692695453763008
    2. 'not' → logprob: -3.556926965713501
    3. 'in' → logprob: -4.306926727294922
    4. 'often' → logprob: -5.681926727294922
    5. 'comput' → logprob: -5.931926727294922
    6. 'unst' → logprob: -6.556926727294922
    7. 'complex' → logprob: -7.306926727294922
    8. 'usually' → logprob: -7.306926727294922
    9. 'too' → logprob: -7.556926727294922
    10. 'hard' → logprob: -7.806926727294922

Token 472: 'asible' (ID: 195692)
  Prédit: 'asible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asible' → logprob: -2.534558552724775e-05
    2. 'as' → logprob: -11.250025749206543
    3. 'sible' → logprob: -12.125025749206543
    4. 'asib' → logprob: -13.250025749206543
    5. '```' → logprob: -13.375025749206543
    6. '**' → logprob: -14.125025749206543
    7. 'ct' → logprob: -14.500025749206543
    8. 'nable' → logprob: -14.625025749206543
    9. 'ss' → logprob: -15.125025749206543
    10. 'asi' → logprob: -15.625025749206543

Token 473: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5739707946777344
    2. ' for' → logprob: -1.8239707946777344
    3. ' due' → logprob: -1.8239707946777344
    4. '       ' → logprob: -3.0739707946777344
    5. ' to' → logprob: -3.6989707946777344
    6. 'due' → logprob: -4.073970794677734
    7. ' at' → logprob: -4.448970794677734
    8. 'for' → logprob: -5.073970794677734
    9. 'to' → logprob: -6.198970794677734
    10. ' in' → logprob: -6.198970794677734

Token 474: ' large' (ID: 4410)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.019249171018600464
    2. 'very' → logprob: -4.019248962402344
    3. 'long' → logprob: -7.894248962402344
    4. ' large' → logprob: -8.519248962402344
    5. 'big' → logprob: -9.269248962402344
    6. 'larg' → logprob: -9.269248962402344
    7. 'most' → logprob: -9.769248962402344
    8. 'ar' → logprob: -9.769248962402344
    9. 'hu' → logprob: -10.269248962402344
    10. 'length' → logprob: -10.269248962402344

Token 475: ' ex' (ID: 513)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -1.4370256662368774
    2. 'a' → logprob: -1.9370256662368774
    3. 'ex' → logprob: -1.9370256662368774
    4. 'numbers' → logprob: -2.187025547027588
    5. 'lists' → logprob: -2.187025547027588
    6. 'bases' → logprob: -2.187025547027588
    7. ' lists' → logprob: -2.937025547027588
    8. 'values' → logprob: -3.312025547027588
    9. ' inputs' → logprob: -5.062025547027588
    10. 'n' → logprob: -5.312025547027588

Token 476: 'ponents' (ID: 4331)
  Prédit: 'ponents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponents' → logprob: -0.4803546071052551
    2. 'ponent' → logprob: -0.9803546071052551
    3. 'p' → logprob: -5.7303547859191895
    4. 'pression' → logprob: -6.3553547859191895
    5. 'pressions' → logprob: -7.2303547859191895
    6. 'ps' → logprob: -7.7303547859191895
    7. 'pr' → logprob: -9.980354309082031
    8. 'ponential' → logprob: -10.355354309082031
    9. '```' → logprob: -11.855354309082031
    10. 'port' → logprob: -12.605354309082031

Token 477: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12697292864322662
    2. '       ' → logprob: -2.3769729137420654
    3. '.' → logprob: -5.1269731521606445
    4. 'and' → logprob: -5.1269731521606445
    5. ',
' → logprob: -5.7519731521606445
    6. ' or' → logprob: -6.0019731521606445
    7. 'or' → logprob: -6.2519731521606445
    8. '...' → logprob: -6.5019731521606445
    9. ' and' → logprob: -6.6269731521606445
    10. ':' → logprob: -7.0019731521606445

Token 478: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011850631795823574
    2. ')' → logprob: -5.636850833892822
    3. '        ' → logprob: -6.636850833892822
    4. '#' → logprob: -6.886850833892822
    5. ' if' → logprob: -6.886850833892822
    6. ' n' → logprob: -7.011850833892822
    7. ' a' → logprob: -7.011850833892822
    8. 'a' → logprob: -7.136850833892822
    9. 'n' → logprob: -7.386850833892822
    10. '        
' → logprob: -7.886850833892822

Token 479: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48922526836395264
    2. ' if' → logprob: -1.7392252683639526
    3. 'if' → logprob: -2.114225387573242
    4. 'def' → logprob: -3.364225387573242
    5. '#' → logprob: -4.364225387573242
    6. 'n' → logprob: -4.489225387573242
    7. 'idx' → logprob: -5.239225387573242
    8. 'a' → logprob: -5.489225387573242
    9. 'import' → logprob: -5.614225387573242
    10. ' n' → logprob: -5.864225387573242

Token 480: ' implement' (ID: 6365)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.630915641784668
    2. '       ' → logprob: -1.380915641784668
    3. 'use' → logprob: -3.005915641784668
    4. ' use' → logprob: -3.380915641784668
    5. 'import' → logprob: -3.505915641784668
    6. '   ' → logprob: -3.880915641784668
    7. ' def' → logprob: -4.130915641784668
    8. '...' → logprob: -4.380915641784668
    9. 'handle' → logprob: -4.380915641784668
    10. 'need' → logprob: -5.255915641784668

Token 481: ' a' (ID: 261)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8804195523262024
    2. 'a' → logprob: -1.1304194927215576
    3. ' a' → logprob: -2.0054194927215576
    4. 'special' → logprob: -3.2554194927215576
    5. ' def' → logprob: -3.3804194927215576
    6. ' the' → logprob: -4.130419731140137
    7. 'the' → logprob: -4.380419731140137
    8. ' logic' → logprob: -5.005419731140137
    9. '       ' → logprob: -5.630419731140137
    10. ' special' → logprob: -5.880419731140137

Token 482: ' custom' (ID: 2602)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.039129287004470825
    2. 'special' → logprob: -3.7891292572021484
    3. 'recursive' → logprob: -5.164129257202148
    4. 'custom' → logprob: -5.789129257202148
    5. 'helper' → logprob: -6.914129257202148
    6. 'depth' → logprob: -7.039129257202148
    7. 'heur' → logprob: -7.039129257202148
    8. ' def' → logprob: -7.164129257202148
    9. 'partial' → logprob: -7.789129257202148
    10. 'safe' → logprob: -8.164129257202148

Token 483: ' comparison' (ID: 19211)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014082410372793674
    2. 'logic' → logprob: -5.639082431793213
    3. 'compare' → logprob: -5.639082431793213
    4. 'comparison' → logprob: -6.014082431793213
    5. ' def' → logprob: -6.389082431793213
    6. ' logic' → logprob: -7.014082431793213
    7. 'recursive' → logprob: -7.889082431793213
    8. 'helper' → logprob: -8.264081954956055
    9. 'import' → logprob: -9.139081954956055
    10. 'com' → logprob: -9.264081954956055

Token 484: ' behavior' (ID: 12741)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9520455598831177
    2. ' logic' → logprob: -1.7020455598831177
    3. '.' → logprob: -2.077045440673828
    4. ':' → logprob: -2.577045440673828
    5. ' method' → logprob: -3.077045440673828
    6. '):' → logprob: -3.202045440673828
    7. ',' → logprob: -3.452045440673828
    8. ')' → logprob: -4.202045440673828
    9. ' for' → logprob: -4.327045440673828
    10. ' to' → logprob: -4.577045440673828

Token 485: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6083707213401794
    2. '.' → logprob: -2.108370780944824
    3. ' that' → logprob: -2.483370780944824
    4. ' for' → logprob: -2.608370780944824
    5. ':' → logprob: -2.983370780944824
    6. ',' → logprob: -3.108370780944824
    7. ' to' → logprob: -3.108370780944824
    8. ' based' → logprob: -4.358370780944824
    9. ' with' → logprob: -5.608370780944824
    10. '...' → logprob: -5.733370780944824

Token 486: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029600173234939575
    2. 'if' → logprob: -3.779600143432617
    3. 'n' → logprob: -5.279600143432617
    4. ' if' → logprob: -7.029600143432617
    5. 'def' → logprob: -8.404600143432617
    6. '        
' → logprob: -10.279600143432617
    7. '#' → logprob: -10.529600143432617
    8. '   ' → logprob: -10.904600143432617
    9. ' n' → logprob: -11.154600143432617
    10. 'len' → logprob: -11.654600143432617

Token 487: ' Returns' (ID: 9609)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03210343047976494
    2. 'n' → logprob: -3.7821035385131836
    3. 'def' → logprob: -5.282103538513184
    4. '#' → logprob: -5.657103538513184
    5. '       ' → logprob: -8.657103538513184
    6. 'i' → logprob: -10.532103538513184
    7. ' if' → logprob: -11.032103538513184
    8. 'len' → logprob: -11.782103538513184
    9. '```' → logprob: -12.407103538513184
    10. 'import' → logprob: -12.657103538513184

Token 488: ':
' (ID: 734)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2155214548110962
    2. ' -' → logprob: -1.8405214548110962
    3. '0' → logprob: -3.8405213356018066
    4. '1' → logprob: -4.590521335601807
    5. ' ' → logprob: -5.715521335601807
    6. '       ' → logprob: -9.090521812438965
    7. ':' → logprob: -9.715521812438965
    8. '
' → logprob: -11.465521812438965
    9. 'int' → logprob: -11.840521812438965
    10. ' 
' → logprob: -12.715521812438965

Token 489: '           ' (ID: 352)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7914769649505615
    2. '1' → logprob: -0.7914769649505615
    3. ' ' → logprob: -2.5414769649505615
    4. '-' → logprob: -4.666477203369141
    5. ' -' → logprob: -5.291477203369141
    6. '       ' → logprob: -7.916477203369141
    7. '```' → logprob: -10.04147720336914
    8. '        ' → logprob: -10.41647720336914
    9. '           ' → logprob: -11.79147720336914
    10. '   ' → logprob: -12.91647720336914

Token 490: ' -' (ID: 533)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3357274830341339
    2. '-' (adapté à ' -') → logprob: -1.3357274532318115
    3. '1' → logprob: -3.9607274532318115
    4. '0' → logprob: -6.710727691650391
    5. ' -' → logprob: -6.835727691650391
    6. ' int' → logprob: -7.210727691650391
    7. ' ' → logprob: -9.46072769165039
    8. '
' → logprob: -11.33572769165039
    9. '       ' → logprob: -11.33572769165039
    10. '[int' → logprob: -11.46072769165039

Token 491: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0044489894062280655
    2. ' ' → logprob: -6.004448890686035
    3. '-' → logprob: -6.504448890686035
    4. ' -' → logprob: -8.379448890686035
    5. '0' → logprob: -8.504448890686035
    6. 'int' → logprob: -10.754448890686035
    7. '```' → logprob: -11.629448890686035
    8. '  ' → logprob: -12.754448890686035
    9. '   ' → logprob: -13.004448890686035
    10. '
' → logprob: -13.754448890686035

Token 492: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20755024254322052
    2. '<|end|>' → logprob: -1.707550287246704
    3. 'if' → logprob: -5.332550048828125
    4. ',' → logprob: -7.457550048828125
    5. '<|end|>' → logprob: -7.832550048828125
    6. ')' → logprob: -9.082550048828125
    7. '       ' → logprob: -9.082550048828125
    8. ' ' → logprob: -10.832550048828125
    9. ' for' → logprob: -11.207550048828125
    10. '
' → logprob: -11.332550048828125

Token 493: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.022226527333259583
    2. ' a' → logprob: -3.897226572036743
    3. '1' → logprob: -7.022226333618164
    4. '-' → logprob: -8.397226333618164
    5. '(a' → logprob: -8.897226333618164
    6. ' ' → logprob: -9.022226333618164
    7. '0' → logprob: -9.897226333618164
    8. 'len' → logprob: -10.147226333618164
    9. ' -' → logprob: -10.397226333618164
    10. '(' → logprob: -10.522226333618164

Token 494: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.004219197668135166
    2. '[' → logprob: -6.504219055175781
    3. ' ' → logprob: -6.629219055175781
    4. '<' → logprob: -6.879219055175781
    5. ' >' → logprob: -9.254219055175781
    6. '       ' → logprob: -9.504219055175781
    7. '   ' → logprob: -10.004219055175781
    8. '<b' → logprob: -10.129219055175781
    9. '  ' → logprob: -10.879219055175781
    10. ' is' → logprob: -11.004219055175781

Token 495: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1652371734380722
    2. ' b' → logprob: -1.9152371883392334
    3. '1' → logprob: -6.165236949920654
    4. '0' → logprob: -6.165236949920654
    5. ' ' → logprob: -8.290237426757812
    6. '       ' → logprob: -8.540237426757812
    7. '           ' → logprob: -8.790237426757812
    8. ',' → logprob: -9.540237426757812
    9. '```' → logprob: -9.665237426757812
    10. '        ' → logprob: -11.290237426757812

Token 496: '
' (ID: 198)
  Prédit: ',
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',
' → logprob: -0.40528345108032227
    2. ',' → logprob: -1.2802834510803223
    3. '       ' → logprob: -2.9052834510803223
    4. '
' → logprob: -8.155282974243164
    5. '```' → logprob: -9.655282974243164
    6. '<|end|>' → logprob: -10.280282974243164
    7. '\n' → logprob: -10.405282974243164
    8. '1' → logprob: -10.530282974243164
    9. ',
' → logprob: -11.530282974243164
    10. '           ' → logprob: -12.030282974243164

Token 497: '            ' (ID: 3346)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8774917125701904
    2. '       ' → logprob: -1.3774917125701904
    3. '           ' → logprob: -1.8774917125701904
    4. ',
' → logprob: -2.2524917125701904
    5. '0' → logprob: -3.1274917125701904
    6. '        ' → logprob: -4.3774919509887695
    7. '1' → logprob: -4.7524919509887695
    8. '
' → logprob: -6.1274919509887695
    9. '            ' → logprob: -6.2524919509887695
    10. '```' → logprob: -6.6274919509887695

Token 498: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.44115301966667175
    2. ' ' → logprob: -1.1911530494689941
    3. '1' → logprob: -2.941153049468994
    4. '+' → logprob: -11.316152572631836
    5. '            ' → logprob: -11.441152572631836
    6. ' +' → logprob: -13.316152572631836
    7. '        ' → logprob: -13.566152572631836
    8. ',' → logprob: -13.816152572631836
    9. '           ' → logprob: -13.941152572631836
    10. '             ' → logprob: -14.441152572631836

Token 499: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04123658686876297
    2. '1' → logprob: -3.791236639022827
    3. ' ' → logprob: -4.041236400604248
    4. ',' → logprob: -9.416236877441406
    5. '           ' → logprob: -9.666236877441406
    6. '            ' → logprob: -10.166236877441406
    7. '       ' → logprob: -10.916236877441406
    8. '        ' → logprob: -11.041236877441406
    9. '          ' → logprob: -11.541236877441406
    10. ',
' → logprob: -11.916236877441406

Token 500: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06487954407930374
    2. '           ' → logprob: -3.5648796558380127
    3. '<|end|>' → logprob: -3.9398796558380127
    4. '            ' → logprob: -4.814879417419434
    5. '       ' → logprob: -5.814879417419434
    6. 'if' → logprob: -5.939879417419434
    7. ',' → logprob: -7.314879417419434
    8. '        ' → logprob: -8.689879417419434
    9. '<|end|>' → logprob: -8.689879417419434
    10. '   ' → logprob: -9.314879417419434

Token 501: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03812158480286598
    2. ' a' → logprob: -3.2881217002868652
    3. '           ' → logprob: -9.538121223449707
    4. '0' → logprob: -13.163121223449707
    5. ' ' → logprob: -13.413121223449707
    6. '       ' → logprob: -13.663121223449707
    7. '            ' → logprob: -13.913121223449707
    8. '   ' → logprob: -14.038121223449707
    9. '        ' → logprob: -14.663121223449707
    10. '         ' → logprob: -14.788121223449707

Token 502: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25217247009277344
    2. '==' → logprob: -1.5021724700927734
    3. '=' → logprob: -9.502172470092773
    4. ' >' → logprob: -10.002172470092773
    5. '<|end|>' → logprob: -10.127172470092773
    6. ' =' → logprob: -10.627172470092773
    7. '>' → logprob: -11.127172470092773
    8. ' ' → logprob: -11.252172470092773
    9. '===' → logprob: -11.627172470092773
    10. ')' → logprob: -12.377172470092773

Token 503: ' b' (ID: 287)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9607017636299133
    2. 'b' → logprob: -1.2107017040252686
    3. ' ' → logprob: -1.3357017040252686
    4. '1' → logprob: -3.4607017040252686
    5. ' b' → logprob: -3.7107017040252686
    6. 'a' → logprob: -8.085701942443848
    7. ' a' → logprob: -9.460701942443848
    8. '            ' → logprob: -10.460701942443848
    9. '    ' → logprob: -10.835701942443848
    10. '   ' → logprob: -10.960701942443848

Token 504: '
' (ID: 198)
  Prédit: ',
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',
' → logprob: -0.6386195421218872
    2. ',' → logprob: -1.3886195421218872
    3. '           ' → logprob: -2.2636194229125977
    4. '       ' → logprob: -2.3886194229125977
    5. '            ' → logprob: -4.263619422912598
    6. '
' → logprob: -5.138619422912598
    7. '```' → logprob: -6.263619422912598
    8. '        
' → logprob: -7.013619422912598
    9. '\n' → logprob: -7.138619422912598
    10. '1' → logprob: -7.638619422912598

Token 505: '            ' (ID: 3346)
  Prédit: '            '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '            ' → logprob: -0.2264525443315506
    2. '           ' → logprob: -1.6014525890350342
    3. '1' → logprob: -7.726452350616455
    4. '       ' → logprob: -8.351452827453613
    5. ',' → logprob: -8.601452827453613
    6. '             ' → logprob: -9.851452827453613
    7. '```' → logprob: -10.226452827453613
    8. '          ' → logprob: -10.476452827453613
    9. '               ' → logprob: -11.351452827453613
    10. '   ' → logprob: -11.476452827453613

Token 506: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007792579010128975
    2. ' ' → logprob: -4.8827924728393555
    3. '            ' → logprob: -8.632792472839355
    4. '+' → logprob: -12.257792472839355
    5. '           ' → logprob: -12.882792472839355
    6. '        ' → logprob: -14.882792472839355
    7. '             ' → logprob: -15.632792472839355
    8. ' +' → logprob: -16.132793426513672
    9. '         ' → logprob: -16.632793426513672
    10. '
' → logprob: -16.632793426513672

Token 507: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08976513147354126
    2. ' ' → logprob: -3.0897650718688965
    3. '            ' → logprob: -3.2147650718688965
    4. '           ' → logprob: -9.089765548706055
    5. '+' → logprob: -10.089765548706055
    6. '             ' → logprob: -11.214765548706055
    7. '        ' → logprob: -13.214765548706055
    8. ' +' → logprob: -13.339765548706055
    9. '```' → logprob: -13.839765548706055
    10. '
' → logprob: -14.214765548706055

Token 508: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16424007713794708
    2. '<|end|>' → logprob: -1.9142401218414307
    3. '       ' → logprob: -5.914239883422852
    4. '        ' → logprob: -7.789239883422852
    5. '<|end|>' → logprob: -7.914239883422852
    6. 'if' → logprob: -8.414239883422852
    7. ')' → logprob: -8.914239883422852
    8. ' ' → logprob: -10.539239883422852
    9. ',' → logprob: -10.789239883422852
    10. ' for' → logprob: -11.039239883422852

Token 509: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03804286941885948
    2. ' a' → logprob: -3.2880427837371826
    3. '           ' → logprob: -13.788043022155762
    4. '	a' → logprob: -16.538042068481445
    5. '>a' → logprob: -16.663042068481445
    6. '       ' → logprob: -16.913042068481445
    7. '   ' → logprob: -17.038042068481445
    8. ')' → logprob: -17.163042068481445
    9. '    ' → logprob: -17.163042068481445
    10. ')a' → logprob: -17.163042068481445

Token 510: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.020304663106799126
    2. '>' → logprob: -4.1453046798706055
    3. ' <' → logprob: -5.6453046798706055
    4. '[' → logprob: -8.270304679870605
    5. '<|end|>' → logprob: -8.270304679870605
    6. ' ' → logprob: -9.770304679870605
    7. ' ' → logprob: -10.395304679870605
    8. '&gt' → logprob: -10.520304679870605
    9. ' >
' → logprob: -10.645304679870605
    10. ' >
' → logprob: -10.895304679870605

Token 511: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.693240225315094
    2. ' b' → logprob: -0.693240225315094
    3. ' ' → logprob: -10.56824016571045
    4. '1' → logprob: -11.06824016571045
    5. '<|end|>' → logprob: -11.06824016571045
    6. ')b' → logprob: -11.69324016571045
    7. '0' → logprob: -12.06824016571045
    8. ')' → logprob: -12.06824016571045
    9. '>b' → logprob: -12.56824016571045
    10. 'a' → logprob: -12.94324016571045

Token 512: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027188067324459553
    2. '<|end|>' → logprob: -7.252718925476074
    3. '```' → logprob: -7.502718925476074
    4. ')' → logprob: -7.627718925476074
    5. '):
' → logprob: -8.127718925476074
    6. ':' → logprob: -8.377718925476074
    7. '):' → logprob: -9.002718925476074
    8. '<|end|>' → logprob: -9.127718925476074
    9. '   ' → logprob: -9.502718925476074
    10. 'def' → logprob: -10.252718925476074

Token 513: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002448065672069788
    2. '```' → logprob: -6.627448081970215
    3. '):
' → logprob: -8.377448081970215
    4. '        
' → logprob: -8.377448081970215
    5. ')' → logprob: -8.502448081970215
    6. '   ' → logprob: -9.252448081970215
    7. ':' → logprob: -10.002448081970215
    8. '"""
' → logprob: -10.002448081970215
    9. '"""' → logprob: -10.127448081970215
    10. '<|end|>' → logprob: -10.252448081970215

Token 514: ' """

' (ID: 28800)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03411436825990677
    2. ')' → logprob: -3.784114360809326
    3. '```' → logprob: -5.034114360809326
    4. '):' → logprob: -6.909114360809326
    5. '"""' → logprob: -7.034114360809326
    6. '):
' → logprob: -7.034114360809326
    7. '        
' → logprob: -7.534114360809326
    8. '
' → logprob: -8.034114837646484
    9. ')
' → logprob: -8.409114837646484
    10. '<|end|>' → logprob: -9.409114837646484

Token 515: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5036552548408508
    2. '       ' → logprob: -1.003655195236206
    3. 'n' → logprob: -3.878655195236206
    4. 'def' → logprob: -5.128655433654785
    5. ' if' → logprob: -6.503655433654785
    6. '#' → logprob: -7.503655433654785
    7. '```' → logprob: -7.753655433654785
    8. 'len' → logprob: -11.003655433654785
    9. '        
' → logprob: -11.378655433654785
    10. 'a' → logprob: -11.753655433654785

Token 516: ' n' (ID: 297)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014595450833439827
    2. '#' → logprob: -4.5145955085754395
    3. 'n' (adapté à ' n') → logprob: -6.0145955085754395
    4. 'def' → logprob: -7.0145955085754395
    5. 'len' → logprob: -8.889595031738281
    6. '       ' → logprob: -9.889595031738281
    7. ' if' → logprob: -12.014595031738281
    8. 'm' → logprob: -13.514595031738281
    9. 'la' → logprob: -13.639595031738281
    10. 'length' → logprob: -13.639595031738281

Token 517: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25612303614616394
    2. '=' → logprob: -1.6311230659484863
    3. 'a' → logprob: -4.006123065948486
    4. '       ' → logprob: -4.631123065948486
    5. '=len' → logprob: -6.756123065948486
    6. '   ' → logprob: -7.631123065948486
    7. 'if' → logprob: -8.756122589111328
    8. '_a' → logprob: -8.756122589111328
    9. ',' → logprob: -9.006122589111328
    10. '=a' → logprob: -9.881122589111328

Token 518: ' len' (ID: 4631)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.06367257237434387
    2. 'len' → logprob: -2.8136725425720215
    3. 'max' → logprob: -6.5636725425720215
    4. ' min' → logprob: -8.18867301940918
    5. ' len' → logprob: -11.18867301940918
    6. '0' → logprob: -14.56367301940918
    7. ' max' → logprob: -15.18867301940918
    8. '   ' → logprob: -15.43867301940918
    9. 'a' → logprob: -16.43867301940918
    10. '[min' → logprob: -16.68867301940918

Token 519: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.003600901924073696
    2. 'a' → logprob: -5.62860107421875
    3. '(' → logprob: -15.25360107421875
    4. 'b' → logprob: -15.50360107421875
    5. '(b' → logprob: -15.75360107421875
    6. '_a' → logprob: -16.62860107421875
    7. 'A' → logprob: -17.25360107421875
    8. ')a' → logprob: -17.25360107421875
    9. '(
' → logprob: -17.50360107421875
    10. ' (' → logprob: -17.50360107421875

Token 520: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02056746743619442
    2. ')
' → logprob: -3.8955674171447754
    3. ')n' → logprob: -12.145567893981934
    4. '       ' → logprob: -12.645567893981934
    5. ')#' → logprob: -12.645567893981934
    6. '<|end|>' → logprob: -12.895567893981934
    7. ')

' → logprob: -13.020567893981934
    8. '),' → logprob: -13.020567893981934
    9. ');' → logprob: -13.895567893981934
    10. ' )' → logprob: -14.020567893981934

Token 521: '       ' (ID: 309)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00904823001474142
    2. '       ' → logprob: -4.7590484619140625
    3. 'if' → logprob: -7.8840484619140625
    4. ' m' → logprob: -10.134048461914062
    5. '```' → logprob: -11.759048461914062
    6. ' if' → logprob: -11.884048461914062
    7. ',' → logprob: -14.009048461914062
    8. '<m' → logprob: -15.259048461914062
    9. 'n' → logprob: -15.634048461914062
    10. '.' → logprob: -15.634048461914062

Token 522: ' for' (ID: 395)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.1875571544806007e-05
    2. 'if' → logprob: -11.375011444091797
    3. 'def' → logprob: -15.250011444091797
    4. '#' → logprob: -16.750011444091797
    5. '   ' → logprob: -16.750011444091797
    6. ' m' → logprob: -17.250011444091797
    7. 'for' (adapté à ' for') → logprob: -17.625011444091797
    8. '```' → logprob: -18.250011444091797
    9. 'mb' → logprob: -19.000011444091797
    10. 'import' → logprob: -19.500011444091797

Token 523: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018184591084718704
    2. ' i' → logprob: -4.018184661865234
    3. ' ' → logprob: -10.893184661865234
    4. '   ' → logprob: -11.893184661865234
    5. 'idx' → logprob: -12.393184661865234
    6. '(i' → logprob: -13.893184661865234
    7. '	i' → logprob: -14.268184661865234
    8. '  ' → logprob: -14.518184661865234
    9. ' idx' → logprob: -14.643184661865234
    10. '0' → logprob: -14.643184661865234

Token 524: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07125554978847504
    2. 'in' → logprob: -2.6962554454803467
    3. ',' → logprob: -7.821255683898926
    4. ' ' → logprob: -8.696255683898926
    5. '=' → logprob: -8.821255683898926
    6. '       ' → logprob: -9.196255683898926
    7. ' =' → logprob: -9.321255683898926
    8. ' i' → logprob: -9.321255683898926
    9. '        ' → logprob: -9.571255683898926
    10. 'i' → logprob: -10.071255683898926

Token 525: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011905835708603263
    2. ' range' → logprob: -6.751190662384033
    3. '(range' → logprob: -11.501190185546875
    4. ' ' → logprob: -11.751190185546875
    5. '0' → logprob: -13.751190185546875
    6. '   ' → logprob: -14.376190185546875
    7. '	range' → logprob: -15.251190185546875
    8. ')' → logprob: -15.501190185546875
    9. '  ' → logprob: -16.001190185546875
    10. 'in' → logprob: -16.751190185546875

Token 526: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.027615370228886604
    2. '(' → logprob: -4.652615547180176
    3. '(min' → logprob: -4.652615547180176
    4. '(len' → logprob: -5.777615547180176
    5. 'n' → logprob: -5.902615547180176
    6. '(max' → logprob: -7.027615547180176
    7. ' (' → logprob: -7.027615547180176
    8. ' n' → logprob: -7.902615547180176
    9. 'min' → logprob: -9.652615547180176
    10. '   ' → logprob: -10.402615547180176

Token 527: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5761354565620422
    2. '):' → logprob: -0.8261354565620422
    3. '       ' → logprob: -9.451135635375977
    4. ')' → logprob: -10.451135635375977
    5. ' ):' → logprob: -11.076135635375977
    6. '):

' → logprob: -11.451135635375977
    7. ':' → logprob: -11.451135635375977
    8. '+' → logprob: -11.451135635375977
    9. '):
' → logprob: -11.701135635375977
    10. '   ' → logprob: -11.701135635375977

Token 528: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.670791745185852
    2. 'if' → logprob: -1.295791745185852
    3. '           ' → logprob: -2.1707916259765625
    4. ' if' → logprob: -2.2957916259765625
    5. '        
' → logprob: -9.420791625976562
    6. ',' → logprob: -10.295791625976562
    7. '          ' → logprob: -10.420791625976562
    8. '```' → logprob: -11.045791625976562
    9. '        ' → logprob: -11.295791625976562
    10. '   ' → logprob: -11.420791625976562

Token 529: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00016301481809932739
    2. 'ai' → logprob: -8.875163078308105
    3. ' if' → logprob: -11.500163078308105
    4. '           ' → logprob: -11.500163078308105
    5. '       ' → logprob: -13.500163078308105
    6. 'a' → logprob: -14.250163078308105
    7. '#' → logprob: -15.375163078308105
    8. 'A' → logprob: -15.500163078308105
    9. '               ' → logprob: -16.00016212463379
    10. 'Ai' → logprob: -16.50016212463379

Token 530: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.38840383291244507
    2. 'i' → logprob: -1.1384038925170898
    3. ' a' → logprob: -7.01340389251709
    4. ' i' → logprob: -7.38840389251709
    5. '(a' → logprob: -12.76340389251709
    6. '(i' → logprob: -13.20090389251709
    7. 'len' → logprob: -13.38840389251709
    8. '   ' → logprob: -13.57590389251709
    9. '	a' → logprob: -14.20090389251709
    10. ' ' → logprob: -14.32590389251709

Token 531: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.875001907348633
    3. 'i' → logprob: -14.375001907348633
    4. '```' → logprob: -14.500001907348633
    5. '[a' → logprob: -16.625001907348633
    6. '[
' → logprob: -17.000001907348633
    7. ' [' → logprob: -17.000001907348633
    8. '
' → logprob: -17.750001907348633
    9. '[I' → logprob: -17.750001907348633
    10. '   ' → logprob: -18.125001907348633

Token 532: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1918846219778061
    2. ' !=' → logprob: -2.0668845176696777
    3. ' ==' → logprob: -3.8168845176696777
    4. '<' → logprob: -4.441884517669678
    5. ' ' → logprob: -5.566884517669678
    6. ']' → logprob: -5.816884517669678
    7. ' >' → logprob: -6.066884517669678
    8. '!=' → logprob: -6.066884517669678
    9. '==' → logprob: -6.691884517669678
    10. '>' → logprob: -7.191884517669678

Token 533: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2354905903339386
    2. ' <' → logprob: -1.7354905605316162
    3. '!=' → logprob: -4.110490798950195
    4. '>' → logprob: -4.860490798950195
    5. ' !=' → logprob: -4.985490798950195
    6. '==' → logprob: -6.485490798950195
    7. ' >' → logprob: -7.735490798950195
    8. ' ==' → logprob: -7.860490798950195
    9. ' ' → logprob: -8.860490798950195
    10. '[' → logprob: -12.485490798950195

Token 534: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005586316110566258
    2. ' b' → logprob: -8.125558853149414
    3. '0' → logprob: -8.250558853149414
    4. ' ' → logprob: -14.125558853149414
    5. '           ' → logprob: -15.625558853149414
    6. '   ' → logprob: -15.750558853149414
    7. 'a' → logprob: -16.000558853149414
    8. '    ' → logprob: -17.000558853149414
    9. '       ' → logprob: -17.000558853149414
    10. '1' → logprob: -17.250558853149414

Token 535: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.014684110297821e-06
    2. '[' → logprob: -12.000008583068848
    3. '           ' → logprob: -13.500008583068848
    4. '```' → logprob: -14.500008583068848
    5. 'i' → logprob: -15.250008583068848
    6. ')[' → logprob: -15.500008583068848
    7. '[j' → logprob: -15.875008583068848
    8. '[
' → logprob: -16.625009536743164
    9. '[I' → logprob: -17.000009536743164
    10. ')' → logprob: -17.125009536743164

Token 536: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4762837290763855
    2. '):' → logprob: -0.9762837290763855
    3. ')' → logprob: -6.851283550262451
    4. ':' → logprob: -7.351283550262451
    5. ':
' → logprob: -8.35128402709961
    6. '       ' → logprob: -9.60128402709961
    7. '           ' → logprob: -9.72628402709961
    8. '<|end|>' → logprob: -10.35128402709961
    9. '):
' → logprob: -10.72628402709961
    10. '):

' → logprob: -10.97628402709961

Token 537: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19607500731945038
    2. ' continue' → logprob: -1.8210749626159668
    3. 'continue' → logprob: -4.196074962615967
    4. ':' → logprob: -7.696074962615967
    5. '	continue' → logprob: -8.196075439453125
    6. ':
' → logprob: -8.946075439453125
    7. ' continues' → logprob: -9.321075439453125
    8. '           ' → logprob: -9.946075439453125
    9. '	           ' → logprob: -10.571075439453125
    10. '_continue' → logprob: -10.696075439453125

Token 538: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0593974590301514
    2. 'continue' (adapté à ' continue') → logprob: -1.0593974590301514
    3. ' continue' → logprob: -1.1843974590301514
    4. '	continue' → logprob: -8.18439769744873
    5. '                   ' → logprob: -8.30939769744873
    6. '           ' → logprob: -9.18439769744873
    7. '_continue' → logprob: -9.80939769744873
    8. '                
' → logprob: -11.68439769744873
    9. '	           ' → logprob: -11.80939769744873
    10. '			' → logprob: -12.55939769744873

Token 539: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021262550726532936
    2. '            
' → logprob: -4.1462626457214355
    3. '
' → logprob: -6.1462626457214355
    4. ' 
' → logprob: -7.1462626457214355
    5. '\n' → logprob: -7.2712626457214355
    6. '<|end|>' → logprob: -7.6462626457214355
    7. '    
' → logprob: -7.7712626457214355
    8. '  
' → logprob: -8.271262168884277
    9. '   
' → logprob: -9.521262168884277
    10. '           
' → logprob: -9.896262168884277

Token 540: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011171156074851751
    2. '            
' → logprob: -7.00111722946167
    3. 'if' → logprob: -8.876116752624512
    4. ' if' → logprob: -11.126116752624512
    5. 'a' → logprob: -11.876116752624512
    6. '        
' → logprob: -12.126116752624512
    7. '
' → logprob: -12.376116752624512
    8. '       ' → logprob: -12.501116752624512
    9. '    
' → logprob: -12.501116752624512
    10. 'else' → logprob: -12.501116752624512

Token 541: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1872101128101349
    2. '#' (adapté à ' #') → logprob: -2.1872100830078125
    3. 'ai' → logprob: -3.0622100830078125
    4. 'a' → logprob: -4.6872100830078125
    5. 'from' → logprob: -6.4372100830078125
    6. '           ' → logprob: -8.062210083007812
    7. 'import' → logprob: -8.687210083007812
    8. 'ia' → logprob: -9.437210083007812
    9. 'x' → logprob: -10.062210083007812
    10. '       ' → logprob: -10.187210083007812

Token 542: ' base' (ID: 3611)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.019981855526566505
    2. '#' → logprob: -4.269981861114502
    3. 'ai' → logprob: -5.269981861114502
    4. 'a' → logprob: -7.894981861114502
    5. 'from' → logprob: -9.019981384277344
    6. 'ia' → logprob: -10.269981384277344
    7. 'If' → logprob: -10.394981384277344
    8. 'A' → logprob: -10.894981384277344
    9. 'base' → logprob: -11.394981384277344
    10. 'val' → logprob: -11.519981384277344

Token 543: ' cases' (ID: 7911)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.18762195110321045
    2. 'a' → logprob: -2.0626220703125
    3. ' =' → logprob: -3.8126220703125
    4. 'if' → logprob: -4.6876220703125
    5. '=' → logprob: -5.1876220703125
    6. ',' → logprob: -6.3126220703125
    7. 'case' → logprob: -6.5626220703125
    8. 'A' → logprob: -6.5626220703125
    9. ' if' → logprob: -6.9376220703125
    10. '_' → logprob: -8.1876220703125

Token 544: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21265144646167755
    2. ' if' → logprob: -1.8376514911651611
    3. 'if' → logprob: -3.462651491165161
    4. ':' → logprob: -7.837651252746582
    5. ',' → logprob: -8.587651252746582
    6. '            
' → logprob: -8.587651252746582
    7. '       ' → logprob: -9.587651252746582
    8. '```' → logprob: -9.962651252746582
    9. '          ' → logprob: -11.337651252746582
    10. '1' → logprob: -11.462651252746582

Token 545: ' comparing' (ID: 42171)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8511155247688293
    2. 'a' → logprob: -1.1011154651641846
    3. 'i' → logprob: -1.4761154651641846
    4. ' a' → logprob: -5.601115703582764
    5. '1' → logprob: -5.976115703582764
    6. ' ' → logprob: -6.351115703582764
    7. 'n' → logprob: -6.351115703582764
    8. ' i' → logprob: -6.726115703582764
    9. '(a' → logprob: -8.726115226745605
    10. 'comparison' → logprob: -9.101115226745605

Token 546: ' single' (ID: 4590)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04234534874558449
    2. '0' → logprob: -3.2923452854156494
    3. 'if' → logprob: -5.6673455238342285
    4. '1' → logprob: -7.5423455238342285
    5. ' a' → logprob: -8.66734504699707
    6. 'i' → logprob: -10.16734504699707
    7. 'max' → logprob: -10.41734504699707
    8. '(a' → logprob: -10.91734504699707
    9. ' ' → logprob: -11.41734504699707
    10. '#' → logprob: -11.54234504699707

Token 547: ' elements' (ID: 8632)
  Prédit: ' elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.6133100390434265
    2. 'elements' → logprob: -1.2383100986480713
    3. 'element' → logprob: -2.2383100986480713
    4. ' integers' → logprob: -3.8633100986480713
    5. ' element' → logprob: -4.363309860229492
    6. '-element' → logprob: -4.613309860229492
    7. 'inte' → logprob: -5.238309860229492
    8. 'tons' → logprob: -5.988309860229492
    9. 'values' → logprob: -6.238309860229492
    10. 'int' → logprob: -6.613309860229492

Token 548: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04414990171790123
    2. ' if' → logprob: -3.294149875640869
    3. 'if' → logprob: -5.544149875640869
    4. '<|end|>' → logprob: -7.294149875640869
    5. '       ' → logprob: -7.794149875640869
    6. ',' → logprob: -8.044150352478027
    7. '            
' → logprob: -8.169150352478027
    8. ':' → logprob: -9.294150352478027
    9. '{' → logprob: -10.044150352478027
    10. '<|end|>' → logprob: -10.169150352478027

Token 549: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10290409624576569
    2. ' if' → logprob: -2.8529040813446045
    3. 'if' → logprob: -3.2279040813446045
    4. '       ' → logprob: -7.852904319763184
    5. 'return' → logprob: -10.477904319763184
    6. '```' → logprob: -10.727904319763184
    7. 'token' → logprob: -11.852904319763184
    8. '               ' → logprob: -12.102904319763184
    9. '            
' → logprob: -12.852904319763184
    10. ' return' → logprob: -12.852904319763184

Token 550: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.019270917400717735
    2. 'ai' → logprob: -4.144270896911621
    3. 'a' → logprob: -6.019270896911621
    4. '           ' → logprob: -7.769270896911621
    5. ' if' → logprob: -8.269270896911621
    6. '#' (adapté à ' #') → logprob: -9.644270896911621
    7. 'aval' → logprob: -11.269270896911621
    8. 'A' → logprob: -11.894270896911621
    9. 'Ai' → logprob: -11.894270896911621
    10. 'ia' → logprob: -12.394270896911621

Token 551: ' -' (ID: 533)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00442074378952384
    2. 'ai' → logprob: -5.629420757293701
    3. 'a' → logprob: -7.629420757293701
    4. '#' → logprob: -8.879420280456543
    5. ' if' → logprob: -9.254420280456543
    6. '           ' → logprob: -9.379420280456543
    7. 'ia' → logprob: -12.379420280456543
    8. 'return' → logprob: -13.504420280456543
    9. '            
' → logprob: -13.754420280456543
    10. 'Ai' → logprob: -13.879420280456543

Token 552: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.021623337641358376
    2. ' if' → logprob: -3.896623373031616
    3. 'If' → logprob: -7.646623134613037
    4. 'a' → logprob: -7.896623134613037
    5. '#' → logprob: -9.396623611450195
    6. 'return' → logprob: -9.521623611450195
    7. '0' → logprob: -10.896623611450195
    8. '           ' → logprob: -11.896623611450195
    9. 'def' → logprob: -12.271623611450195
    10. 'elif' → logprob: -12.271623611450195

Token 553: ' towers' (ID: 79040)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01258675754070282
    2. ' a' → logprob: -4.38758659362793
    3. 'i' → logprob: -10.13758659362793
    4. '(a' → logprob: -11.38758659362793
    5. '0' → logprob: -11.63758659362793
    6. '1' → logprob: -12.38758659362793
    7. 'min' → logprob: -12.88758659362793
    8. ' i' → logprob: -13.26258659362793
    9. 'max' → logprob: -13.38758659362793
    10. ' min' → logprob: -13.38758659362793

Token 554: ' shrink' (ID: 53969)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0013932115398347378
    2. '           ' → logprob: -6.8763933181762695
    3. 'a' → logprob: -9.12639331817627
    4. '[a' → logprob: -9.50139331817627
    5. ' are' → logprob: -10.50139331817627
    6. 'i' → logprob: -10.50139331817627
    7. '#' → logprob: -10.62639331817627
    8. '[' → logprob: -10.75139331817627
    9. ' have' → logprob: -11.87639331817627
    10. '1' → logprob: -11.87639331817627

Token 555: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.2010471820831299
    2. 'to' → logprob: -1.4510471820831299
    3. '[i' → logprob: -1.4510471820831299
    4. '           ' → logprob: -3.32604718208313
    5. 'and' → logprob: -3.32604718208313
    6. ' or' → logprob: -3.45104718208313
    7. '==' → logprob: -4.076046943664551
    8. 'ed' → logprob: -4.076046943664551
    9. 'or' → logprob: -4.701046943664551
    10. '[' → logprob: -4.701046943664551

Token 556: ' one' (ID: 1001)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.38784781098365784
    2. '1' → logprob: -2.137847900390625
    3. 'one' → logprob: -2.887847900390625
    4. ' length' → logprob: -3.137847900390625
    5. 'size' → logprob: -3.512847900390625
    6. 'i' → logprob: -3.512847900390625
    7. 'single' → logprob: -4.012847900390625
    8. 'len' → logprob: -5.012847900390625
    9. ' one' → logprob: -5.387847900390625
    10. 'a' → logprob: -5.512847900390625

Token 557: ' element' (ID: 3577)
  Prédit: ' element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.7445076704025269
    2. '[i' → logprob: -1.2445076704025269
    3. 'element' → logprob: -2.2445077896118164
    4. ':' → logprob: -3.1195077896118164
    5. ']' → logprob: -3.7445077896118164
    6. '           ' → logprob: -4.369507789611816
    7. ')' → logprob: -5.369507789611816
    8. ' and' → logprob: -5.369507789611816
    9. 'i' → logprob: -5.494507789611816
    10. '[' → logprob: -5.619507789611816

Token 558: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9273681044578552
    2. ' at' → logprob: -1.5523681640625
    3. ':' → logprob: -1.9273681640625
    4. ',' → logprob: -2.6773681640625
    5. ' and' → logprob: -2.8023681640625
    6. ':
' → logprob: -3.0523681640625
    7. 'and' → logprob: -3.3023681640625
    8. '               ' → logprob: -4.8023681640625
    9. ' or' → logprob: -4.9273681640625
    10. 'if' → logprob: -5.0523681640625

Token 559: ' compare' (ID: 12221)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8388422131538391
    2. ' if' → logprob: -0.8388422131538391
    3. 'if' → logprob: -2.3388421535491943
    4. 'return' → logprob: -3.9638421535491943
    5. ' return' → logprob: -3.9638421535491943
    6. '           ' → logprob: -7.088842391967773
    7. '                   ' → logprob: -9.463842391967773
    8. '                ' → logprob: -10.338842391967773
    9. '              ' → logprob: -10.463842391967773
    10. ':' → logprob: -11.088842391967773

Token 560: ' directly' (ID: 8516)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0018959138542413712
    2. ' a' → logprob: -7.126895904541016
    3. '(a' → logprob: -7.751895904541016
    4. '           ' → logprob: -8.251895904541016
    5. '[a' → logprob: -9.001895904541016
    6. 'return' → logprob: -9.626895904541016
    7. 'direct' → logprob: -9.626895904541016
    8. '   ' → logprob: -10.501895904541016
    9. 'if' → logprob: -11.126895904541016
    10. '               ' → logprob: -11.126895904541016

Token 561: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027901383582502604
    2. ' if' → logprob: -6.5027899742126465
    3. 'if' → logprob: -6.7527899742126465
    4. ',' → logprob: -10.002790451049805
    5. '<|end|>' → logprob: -11.127790451049805
    6. '<|end|>' → logprob: -11.252790451049805
    7. ' at' → logprob: -11.377790451049805
    8. '          ' → logprob: -11.877790451049805
    9. '       ' → logprob: -12.377790451049805
    10. '            
' → logprob: -12.627790451049805

Token 562: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00515785813331604
    2. 'if' → logprob: -5.505157947540283
    3. ' if' → logprob: -6.880157947540283
    4. '       ' → logprob: -10.380157470703125
    5. '```' → logprob: -12.755157470703125
    6. '            
' → logprob: -13.005157470703125
    7. '          ' → logprob: -13.130157470703125
    8. ',' → logprob: -13.380157470703125
    9. '<|end|>' → logprob: -13.505157470703125
    10. '               ' → logprob: -13.505157470703125

Token 563: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06306087225675583
    2. '           ' → logprob: -2.813060760498047
    3. ' if' → logprob: -7.313060760498047
    4. 'a' → logprob: -7.938060760498047
    5. 'return' → logprob: -9.938060760498047
    6. '            
' → logprob: -12.188060760498047
    7. '#' → logprob: -12.688060760498047
    8. 'ai' → logprob: -13.188060760498047
    9. 'elif' → logprob: -13.188060760498047
    10. '       ' → logprob: -13.313060760498047

Token 564: ' i' (ID: 575)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5822049379348755
    2. 'i' → logprob: -0.9572049379348755
    3. 'n' → logprob: -2.957204818725586
    4. ' len' → logprob: -5.707204818725586
    5. ' i' → logprob: -7.332204818725586
    6. 'a' → logprob: -8.332204818725586
    7. '   ' → logprob: -8.457204818725586
    8. ' n' → logprob: -8.457204818725586
    9. '(i' → logprob: -8.457204818725586
    10. '(len' → logprob: -8.957204818725586

Token 565: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16256172955036163
    2. '==' → logprob: -1.9125617742538452
    3. '+' → logprob: -6.537561893463135
    4. ' >=' → logprob: -7.787561893463135
    5. ' +' → logprob: -8.662561416625977
    6. '>=' → logprob: -8.787561416625977
    7. '==
' → logprob: -9.537561416625977
    8. ' ==
' → logprob: -10.787561416625977
    9. '==(' → logprob: -11.287561416625977
    10. ']==' → logprob: -11.662561416625977

Token 566: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0037397451233118773
    2. ' n' → logprob: -5.628739833831787
    3. 'len' → logprob: -9.003739356994629
    4. '   ' → logprob: -11.753739356994629
    5. ' ' → logprob: -12.503739356994629
    6. ' len' → logprob: -13.253739356994629
    7. '(n' → logprob: -13.628739356994629
    8. '	n' → logprob: -13.878739356994629
    9. '0' → logprob: -15.378739356994629
    10. '       ' → logprob: -15.628739356994629

Token 567: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5759450793266296
    2. ' -' → logprob: -0.8259450793266296
    3. ' ' → logprob: -13.575944900512695
    4. '       ' → logprob: -13.950944900512695
    5. ')' → logprob: -14.075944900512695
    6. '
' → logprob: -14.450944900512695
    7. '           ' → logprob: -14.575944900512695
    8. '   ' → logprob: -14.575944900512695
    9. ':' → logprob: -14.950944900512695
    10. '1' → logprob: -15.325944900512695

Token 568: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011248346709180623
    2. ' ' → logprob: -9.125112533569336
    3. '   ' → logprob: -13.125112533569336
    4. '2' → logprob: -14.000112533569336
    5. '```' → logprob: -15.625112533569336
    6. '  ' → logprob: -15.875112533569336
    7. '
' → logprob: -16.250112533569336
    8. '       ' → logprob: -16.625112533569336
    9. '-' → logprob: -16.875112533569336
    10. '...' → logprob: -17.312612533569336

Token 569: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.727905979962088e-05
    2. ' ' → logprob: -10.00004768371582
    3. '2' → logprob: -13.75004768371582
    4. '   ' → logprob: -14.75004768371582
    5. '```' → logprob: -15.75004768371582
    6. '
' → logprob: -16.06254768371582
    7. '-' → logprob: -17.50004768371582
    8. '0' → logprob: -17.50004768371582
    9. '  ' → logprob: -17.68754768371582
    10. '...' → logprob: -18.06254768371582

Token 570: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20337703824043274
    2. ':' → logprob: -1.7033770084381104
    3. '               ' → logprob: -6.3283772468566895
    4. '           ' → logprob: -9.328376770019531
    5. '):
' → logprob: -10.578376770019531
    6. ':return' → logprob: -11.078376770019531
    7. ' and' → logprob: -11.328376770019531
    8. ':
' → logprob: -11.453376770019531
    9. ',' → logprob: -11.453376770019531
    10. ':

' → logprob: -11.828376770019531

Token 571: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009232500451616943
    2. ':' → logprob: -7.250923156738281
    3. ':
' → logprob: -9.000923156738281
    4. 'return' → logprob: -10.875923156738281
    5. ' return' → logprob: -11.000923156738281
    6. '```' → logprob: -11.500923156738281
    7. '                   ' → logprob: -11.625923156738281
    8. ' if' → logprob: -12.125923156738281
    9. '                
' → logprob: -12.250923156738281
    10. ':return' → logprob: -12.375923156738281

Token 572: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7007925510406494
    2. 'return' → logprob: -0.7007925510406494
    3. '               ' → logprob: -4.95079231262207
    4. ' if' → logprob: -7.82579231262207
    5. ' return' → logprob: -8.95079231262207
    6. '           ' → logprob: -12.32579231262207
    7. 'a' → logprob: -13.07579231262207
    8. '                   ' → logprob: -13.32579231262207
    9. '```' → logprob: -15.07579231262207
    10. '	return' → logprob: -15.20079231262207

Token 573: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.0484450437361374e-05
    2. ' a' → logprob: -10.125040054321289
    3. '           ' → logprob: -15.250040054321289
    4. '   ' → logprob: -17.37504005432129
    5. '               ' → logprob: -17.50004005432129
    6. '                   ' → logprob: -19.12504005432129
    7. '       ' → logprob: -19.50004005432129
    8. ' ' → logprob: -19.87504005432129
    9. '  ' → logprob: -20.00004005432129
    10. '     ' → logprob: -20.12504005432129

Token 574: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -13.37500286102295
    3. '[
' → logprob: -14.87500286102295
    4. 'i' → logprob: -15.00000286102295
    5. '```' → logprob: -15.50000286102295
    6. ' [' → logprob: -16.125001907348633
    7. ')[' → logprob: -17.250001907348633
    8. '<i' → logprob: -17.375001907348633
    9. '][' → logprob: -17.500001907348633
    10. '[j' → logprob: -17.875001907348633

Token 575: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03485766798257828
    2. '<' → logprob: -3.534857749938965
    3. ' >' → logprob: -5.784857749938965
    4. '>' → logprob: -6.784857749938965
    5. '[' → logprob: -7.909857749938965
    6. '[i' → logprob: -8.159857749938965
    7. ' ' → logprob: -8.784857749938965
    8. ']' → logprob: -10.534857749938965
    9. '<i' → logprob: -11.659857749938965
    10. ' [' → logprob: -12.034857749938965

Token 576: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.070222407579422
    2. '<' → logprob: -2.6952223777770996
    3. ' >' → logprob: -8.695222854614258
    4. '>' → logprob: -9.445222854614258
    5. ' ' → logprob: -10.570222854614258
    6. '<int' → logprob: -12.570222854614258
    7. '[' → logprob: -12.945222854614258
    8. '<i' → logprob: -13.320222854614258
    9. '<n' → logprob: -13.820222854614258
    10. '<b' → logprob: -14.695222854614258

Token 577: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1269317865371704
    2. ' b' → logprob: -2.126931667327881
    3. '           ' → logprob: -13.376932144165039
    4. '               ' → logprob: -14.001932144165039
    5. ' ' → logprob: -15.126932144165039
    6. '                   ' → logprob: -15.751932144165039
    7. '          ' → logprob: -15.876932144165039
    8. '    ' → logprob: -16.00193214416504
    9. '            ' → logprob: -16.12693214416504
    10. '   ' → logprob: -16.25193214416504

Token 578: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.696889623621246e-06
    2. '[' → logprob: -13.25000286102295
    3. '```' → logprob: -14.87500286102295
    4. '[
' → logprob: -15.37500286102295
    5. 'i' → logprob: -15.62500286102295
    6. '{i' → logprob: -16.875001907348633
    7. ' [' → logprob: -17.000001907348633
    8. ']' → logprob: -17.875001907348633
    9. ')' → logprob: -18.000001907348633
    10. '[I' → logprob: -18.125001907348633

Token 579: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3701619803905487
    2. ':' → logprob: -1.870162010192871
    3. '               ' → logprob: -2.495162010192871
    4. '):
' → logprob: -2.745162010192871
    5. ':return' → logprob: -5.745162010192871
    6. '):' → logprob: -5.870162010192871
    7. '                   ' → logprob: -6.620162010192871
    8. '           ' → logprob: -7.995162010192871
    9. ')' → logprob: -8.495162010192871
    10. ',' → logprob: -8.620162010192871

Token 580: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1462179571390152
    2. '               ' → logprob: -2.3962180614471436
    3. ':
' → logprob: -3.5212180614471436
    4. ':' → logprob: -4.3962178230285645
    5. '                       ' → logprob: -6.2712178230285645
    6. ':return' → logprob: -7.3962178230285645
    7. '           ' → logprob: -8.896218299865723
    8. 'return' → logprob: -9.521218299865723
    9. '                  ' → logprob: -9.521218299865723
    10. ' return' → logprob: -9.646218299865723

Token 581: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4706445634365082
    2. 'return' (adapté à ' return') → logprob: -1.2206445932388306
    3. '                       ' → logprob: -3.095644474029541
    4. '
' → logprob: -3.595644474029541
    5. '                   ' → logprob: -5.220644474029541
    6. ':return' → logprob: -7.845644474029541
    7. '```' → logprob: -7.970644474029541
    8. ' 
' → logprob: -8.0956449508667
    9. '               ' → logprob: -8.0956449508667
    10. '<|end|>' → logprob: -8.7206449508667

Token 582: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0445127372804563e-05
    2. ' -' → logprob: -11.50001049041748
    3. '               ' → logprob: -16.125009536743164
    4. '           ' → logprob: -16.375009536743164
    5. '                   ' → logprob: -17.125009536743164
    6. '```' → logprob: -19.500009536743164
    7. '1' → logprob: -20.500009536743164
    8. '            ' → logprob: -21.000009536743164
    9. '   ' → logprob: -21.250009536743164
    10. '              ' → logprob: -21.375009536743164

Token 583: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '           ' → logprob: -17.75
    4. '```' → logprob: -18.375
    5. '<|end|>' → logprob: -19.375
    6. '۱' → logprob: -20.125
    7. '               ' → logprob: -20.1875
    8. '                   ' → logprob: -20.25
    9. '   ' → logprob: -20.4375
    10. '0' → logprob: -20.4375

Token 584: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013686807826161385
    2. '           ' → logprob: -4.513686656951904
    3. '<|end|>' → logprob: -6.763686656951904
    4. '
' → logprob: -7.388686656951904
    5. '                ' → logprob: -8.763687133789062
    6. '       ' → logprob: -8.888687133789062
    7. '                
' → logprob: -8.888687133789062
    8. '            
' → logprob: -9.513687133789062
    9. '              ' → logprob: -9.638687133789062
    10. 'elif' → logprob: -10.263687133789062

Token 585: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005050521343946457
    2. '           ' → logprob: -5.3800506591796875
    3. '                ' → logprob: -9.005050659179688
    4. '<|end|>' → logprob: -9.005050659179688
    5. '              ' → logprob: -10.130050659179688
    6. '            ' → logprob: -10.380050659179688
    7. 'elif' → logprob: -10.880050659179688
    8. '.' → logprob: -11.130050659179688
    9. ' ' → logprob: -11.505050659179688
    10. '                   ' → logprob: -11.630050659179688

Token 586: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06462545692920685
    2. '               ' → logprob: -2.8146255016326904
    3. 'elif' (adapté à ' elif') → logprob: -6.189625263214111
    4. 'if' → logprob: -8.31462574005127
    5. 'else' → logprob: -9.06462574005127
    6. ' elif' → logprob: -9.31462574005127
    7. ' if' → logprob: -9.43962574005127
    8. 'return' → logprob: -10.18962574005127
    9. '            ' → logprob: -11.18962574005127
    10. ' else' → logprob: -11.43962574005127

Token 587: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04859929531812668
    2. ' a' → logprob: -3.0485992431640625
    3. '                   ' → logprob: -11.423599243164062
    4. '               ' → logprob: -15.048599243164062
    5. '                    ' → logprob: -15.423599243164062
    6. '                ' → logprob: -15.798599243164062
    7. '                       ' → logprob: -16.048599243164062
    8. '	a' → logprob: -16.173599243164062
    9. ' ' → logprob: -17.298599243164062
    10. '           ' → logprob: -17.298599243164062

Token 588: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.375000953674316
    3. 'i' → logprob: -16.25
    4. '```' → logprob: -18.625
    5. '<|end|>' → logprob: -19.0
    6. ' [' → logprob: -19.375
    7. '[I' → logprob: -20.25
    8. '[
' → logprob: -20.5
    9. '(i' → logprob: -20.875
    10. '   ' → logprob: -20.875

Token 589: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.060728829354047775
    2. '>' → logprob: -3.4357287883758545
    3. '[i' → logprob: -3.6857287883758545
    4. '<|end|>' → logprob: -7.185729026794434
    5. ' <' → logprob: -7.685729026794434
    6. ']' → logprob: -8.685729026794434
    7. ']>' → logprob: -9.435729026794434
    8. '[' → logprob: -10.185729026794434
    9. ' ' → logprob: -10.560729026794434
    10. '<|end|>' → logprob: -10.935729026794434

Token 590: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.49057480692863464
    2. '>' → logprob: -0.990574836730957
    3. '[i' → logprob: -4.115574836730957
    4. '[' → logprob: -11.115574836730957
    5. ' ' → logprob: -11.865574836730957
    6. '<|end|>' → logprob: -12.615574836730957
    7. '>[' → logprob: -12.865574836730957
    8. '                   ' → logprob: -12.865574836730957
    9. ']>' → logprob: -13.240574836730957
    10. '&gt' → logprob: -13.490574836730957

Token 591: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12694647908210754
    2. ' b' → logprob: -2.126946449279785
    3. '1' → logprob: -11.251946449279785
    4. '           ' → logprob: -13.126946449279785
    5. '               ' → logprob: -13.501946449279785
    6. ' ' → logprob: -14.876946449279785
    7. '                   ' → logprob: -15.001946449279785
    8. '0' → logprob: -15.126946449279785
    9. 'i' → logprob: -15.626946449279785
    10. '            ' → logprob: -15.751946449279785

Token 592: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -12.87500286102295
    3. '               ' → logprob: -15.50000286102295
    4. '           ' → logprob: -16.000003814697266
    5. '```' → logprob: -16.125003814697266
    6. 'i' → logprob: -16.250003814697266
    7. '                   ' → logprob: -16.500003814697266
    8. '{i' → logprob: -18.000003814697266
    9. '[
' → logprob: -18.750003814697266
    10. '[j' → logprob: -18.750003814697266

Token 593: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8407411575317383
    2. ':' → logprob: -1.9657411575317383
    3. '               ' → logprob: -1.9657411575317383
    4. ':
' → logprob: -2.2157411575317383
    5. '                   ' → logprob: -2.5907411575317383
    6. '):' → logprob: -2.9657411575317383
    7. ')' → logprob: -3.3407411575317383
    8. '<|end|>' → logprob: -4.715741157531738
    9. '           ' → logprob: -5.965741157531738
    10. ':return' → logprob: -6.465741157531738

Token 594: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05461537465453148
    2. '1' → logprob: -3.1796152591705322
    3. '               ' → logprob: -4.554615497589111
    4. '                       ' → logprob: -7.929615497589111
    5. 'return' → logprob: -8.304615020751953
    6. '0' → logprob: -8.929615020751953
    7. '```' → logprob: -9.429615020751953
    8. '           ' → logprob: -9.554615020751953
    9. '{
' → logprob: -10.179615020751953
    10. ' return' → logprob: -10.179615020751953

Token 595: ' return' (ID: 622)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001601506257429719
    2. ' ' → logprob: -6.501601696014404
    3. '                   ' → logprob: -9.376601219177246
    4. 'return' (adapté à ' return') → logprob: -11.376601219177246
    5. '               ' → logprob: -13.501601219177246
    6. ' return' → logprob: -13.751601219177246
    7. '                       ' → logprob: -15.376601219177246
    8. '                    ' → logprob: -15.876601219177246
    9. '```' → logprob: -16.376602172851562
    10. '   ' → logprob: -17.376602172851562

Token 596: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '           ' → logprob: -20.750017166137695
    4. '               ' → logprob: -20.750017166137695
    5. '+' → logprob: -20.875017166137695
    6. '   ' → logprob: -21.375017166137695
    7. '                   ' → logprob: -21.500017166137695
    8. '  ' → logprob: -23.125017166137695
    9. '
' → logprob: -23.500017166137695
    10. '            ' → logprob: -23.875017166137695

Token 597: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -20.625001907348633
    4. '+' → logprob: -22.000001907348633
    5. '           ' → logprob: -22.125001907348633
    6. '```' → logprob: -22.250001907348633
    7. '                   ' → logprob: -22.500001907348633
    8. '               ' → logprob: -22.625001907348633
    9. '  ' → logprob: -23.125001907348633
    10. '
' → logprob: -23.125001907348633

Token 598: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35330715775489807
    2. '               ' → logprob: -1.2283071279525757
    3. 'else' → logprob: -5.478307247161865
    4. ' else' → logprob: -8.103306770324707
    5. 'return' → logprob: -8.228306770324707
    6. '```' → logprob: -11.353306770324707
    7. '                   ' → logprob: -11.603306770324707
    8. '.' → logprob: -11.728306770324707
    9. ' return' → logprob: -11.728306770324707
    10. 'elif' → logprob: -11.853306770324707

Token 599: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03514371067285538
    2. '           ' → logprob: -4.035143852233887
    3. 'else' → logprob: -4.160143852233887
    4. 'return' → logprob: -7.035143852233887
    5. ' else' → logprob: -8.910143852233887
    6. 'elif' → logprob: -9.160143852233887
    7. 'continue' → logprob: -9.410143852233887
    8. '```' → logprob: -11.410143852233887
    9. 'import' → logprob: -12.035143852233887
    10. '                   ' → logprob: -12.160143852233887

Token 600: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5987533926963806
    2. '           ' → logprob: -0.8487533926963806
    3. '               ' → logprob: -4.473753452301025
    4. ' else' → logprob: -4.848753452301025
    5. 'return' → logprob: -5.723753452301025
    6. 'continue' → logprob: -10.723752975463867
    7. '```' → logprob: -12.098752975463867
    8. ' return' → logprob: -12.348752975463867
    9. '#' → logprob: -12.723752975463867
    10. 'elif' → logprob: -12.848752975463867

Token 601: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5557701587677002
    2. ':' → logprob: -0.9307701587677002
    3. '                   ' → logprob: -3.8057701587677
    4. '               ' → logprob: -5.055769920349121
    5. '0' → logprob: -6.930769920349121
    6. 'return' → logprob: -7.180769920349121
    7. ':return' → logprob: -7.805769920349121
    8. '           ' → logprob: -7.930769920349121
    9. ' return' → logprob: -8.180769920349121
    10. '                       ' → logprob: -8.430769920349121

Token 602: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3116157352924347
    2. '0' → logprob: -1.6866157054901123
    3. 'return' → logprob: -2.8116157054901123
    4. '                   ' → logprob: -4.061615943908691
    5. ' return' → logprob: -5.686615943908691
    6. '           ' → logprob: -6.811615943908691
    7. '```' → logprob: -8.436615943908691
    8. '                       ' → logprob: -8.561615943908691
    9. ' ' → logprob: -9.061615943908691
    10. 'continue' → logprob: -9.186615943908691

Token 603: ' continue' (ID: 4901)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00579002033919096
    2. ' return' → logprob: -5.5057902336120605
    3. '0' → logprob: -6.7557902336120605
    4. 'continue' (adapté à ' continue') → logprob: -8.005789756774902
    5. '                   ' → logprob: -8.505789756774902
    6. '               ' → logprob: -12.380789756774902
    7. ' continue' → logprob: -12.880789756774902
    8. 'break' → logprob: -13.630789756774902
    9. ' ' → logprob: -13.755789756774902
    10. '                       ' → logprob: -14.380789756774902

Token 604: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07151539623737335
    2. '
' → logprob: -3.1965153217315674
    3. '            
' → logprob: -4.1965155601501465
    4. 'if' → logprob: -5.0715155601501465
    5. '#' → logprob: -6.3215155601501465
    6. '```' → logprob: -6.6965155601501465
    7. 'elif' → logprob: -7.0715155601501465
    8. 'else' → logprob: -7.5715155601501465
    9. ' if' → logprob: -7.8215155601501465
    10. 'return' → logprob: -8.071515083312988

Token 605: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17804484069347382
    2. 'if' → logprob: -2.1780447959899902
    3. '```' → logprob: -3.9280447959899902
    4. 'elif' → logprob: -4.42804479598999
    5. '#' → logprob: -5.05304479598999
    6. '
' → logprob: -5.55304479598999
    7. '            
' → logprob: -5.92804479598999
    8. 'else' → logprob: -6.05304479598999
    9. '       ' → logprob: -6.80304479598999
    10. ' if' → logprob: -7.17804479598999

Token 606: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.29078930616378784
    2. 'a' → logprob: -1.9157893657684326
    3. 'ai' → logprob: -2.9157893657684326
    4. '#' (adapté à ' #') → logprob: -3.0407893657684326
    5. '           ' → logprob: -6.7907891273498535
    6. 'al' → logprob: -8.165789604187012
    7. 'Ai' → logprob: -8.540789604187012
    8. ' if' → logprob: -8.665789604187012
    9. 'from' → logprob: -8.790789604187012
    10. 'import' → logprob: -8.915789604187012

Token 607: ' Use' (ID: 7649)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.32811546325683594
    2. '#' → logprob: -1.828115463256836
    3. 'a' → logprob: -2.578115463256836
    4. 'ai' → logprob: -3.203115463256836
    5. 'A' → logprob: -7.328115463256836
    6. 'from' → logprob: -7.953115463256836
    7. 'def' → logprob: -7.953115463256836
    8. 'Ai' → logprob: -8.203115463256836
    9. 'base' → logprob: -8.703115463256836
    10. 'ia' → logprob: -9.078115463256836

Token 608: ' recursive' (ID: 66711)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21462753415107727
    2. 'Power' → logprob: -1.7146275043487549
    3. ' Power' → logprob: -5.464627742767334
    4. '0' → logprob: -5.964627742767334
    5. '#' → logprob: -6.089627742767334
    6. ' a' → logprob: -7.214627742767334
    7. 'pow' → logprob: -7.589627742767334
    8. 'abs' → logprob: -8.089627265930176
    9. 'def' → logprob: -8.214627265930176
    10. 'math' → logprob: -8.339627265930176

Token 609: ' logic' (ID: 18485)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0513508319854736
    2. '           ' → logprob: -1.1763508319854736
    3. 'call' → logprob: -2.1763508319854736
    4. 'result' → logprob: -3.3013508319854736
    5. 'comparison' → logprob: -3.3013508319854736
    6. 'return' → logprob: -3.5513508319854736
    7. ' if' → logprob: -3.6763508319854736
    8. 'calls' → logprob: -4.3013505935668945
    9. 'def' → logprob: -4.5513505935668945
    10. 'compare' → logprob: -4.8013505935668945

Token 610: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012775443494319916
    2. ' if' → logprob: -5.637775421142578
    3. 'a' → logprob: -6.387775421142578
    4. ' to' → logprob: -6.512775421142578
    5. ' for' → logprob: -6.762775421142578
    6. ',' → logprob: -7.137775421142578
    7. 'if' → logprob: -7.262775421142578
    8. '
' → logprob: -7.512775421142578
    9. '#' → logprob: -7.637775421142578
    10. '            
' → logprob: -7.637775421142578

Token 611: ' compare' (ID: 12221)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.741523802280426
    2. 'compare' → logprob: -1.1165237426757812
    3. '           ' → logprob: -3.2415237426757812
    4. '#' → logprob: -3.3665237426757812
    5. 'evaluate' → logprob: -3.4915237426757812
    6. 'return' → logprob: -3.6165237426757812
    7. 'handle' → logprob: -3.9915237426757812
    8. 'next' → logprob: -4.366523742675781
    9. 'dec' → logprob: -4.741523742675781
    10. 'check' → logprob: -5.616523742675781

Token 612: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2090429961681366
    2. 'ai' → logprob: -2.834043025970459
    3. 'sub' → logprob: -3.459043025970459
    4. '           ' → logprob: -3.584043025970459
    5. 'if' → logprob: -4.084043025970459
    6. 'next' → logprob: -4.334043025970459
    7. 'left' → logprob: -4.959043025970459
    8. 'ex' → logprob: -4.959043025970459
    9. 'ap' → logprob: -5.459043025970459
    10. 'exp' → logprob: -5.709043025970459

Token 613: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005564567167311907
    2. 'i' → logprob: -6.2555646896362305
    3. 'a' → logprob: -6.3805646896362305
    4. '_i' → logprob: -8.13056468963623
    5. '_power' → logprob: -8.25556468963623
    6. '[' → logprob: -8.75556468963623
    7. '_sub' → logprob: -8.88056468963623
    8. ' =' → logprob: -9.00556468963623
    9. '_a' → logprob: -9.25556468963623
    10. '_tail' → logprob: -9.38056468963623

Token 614: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.173735573887825
    2. '],' → logprob: -2.4237356185913086
    3. ' +' → logprob: -3.1737356185913086
    4. ':],' → logprob: -3.6737356185913086
    5. '+i' → logprob: -6.798735618591309
    6. ']' → logprob: -7.048735618591309
    7. '[i' → logprob: -7.423735618591309
    8. ':' → logprob: -8.048735618591309
    9. ':]' → logprob: -8.923735618591309
    10. '   ' → logprob: -9.423735618591309

Token 615: '^(' (ID: 32612)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.642436683177948
    2. ' and' → logprob: -1.2674367427825928
    3. ',' → logprob: -1.7674367427825928
    4. '+' → logprob: -4.392436504364014
    5. '**' → logprob: -5.142436504364014
    6. ' +' → logprob: -7.392436504364014
    7. ' ,' → logprob: -8.017436981201172
    8. 'with' → logprob: -8.142436981201172
    9. '[i' → logprob: -8.267436981201172
    10. '           ' → logprob: -8.267436981201172

Token 616: 'rest' (ID: 7134)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3616091310977936
    2. '[a' → logprob: -1.7366091012954712
    3. 'b' → logprob: -2.7366092205047607
    4. '[b' → logprob: -3.4866092205047607
    5. '[' → logprob: -3.7366092205047607
    6. 'Power' → logprob: -5.361608982086182
    7. ' [' → logprob: -6.486608982086182
    8. '[i' → logprob: -7.486608982086182
    9. '(a' → logprob: -8.61160945892334
    10. ' a' → logprob: -8.61160945892334

Token 617: '_a' (ID: 10852)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10663606226444244
    2. '[a' → logprob: -3.6066360473632812
    3. 'a' → logprob: -3.8566360473632812
    4. '_a' → logprob: -4.106636047363281
    5. ')' → logprob: -4.106636047363281
    6. '(a' → logprob: -4.356636047363281
    7. '(i' → logprob: -5.981636047363281
    8. '[' → logprob: -6.356636047363281
    9. '           ' → logprob: -7.106636047363281
    10. ']' → logprob: -7.981636047363281

Token 618: ')' (ID: 8)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.21402621269226074
    2. ')' → logprob: -1.8390262126922607
    3. '[' → logprob: -4.21402645111084
    4. '),' → logprob: -4.83902645111084
    5. '(i' → logprob: -6.08902645111084
    6. '   ' → logprob: -6.83902645111084
    7. '```' → logprob: -7.21402645111084
    8. '+' → logprob: -7.33902645111084
    9. '[idx' → logprob: -7.58902645111084
    10. '[
' → logprob: -7.71402645111084

Token 619: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7002361416816711
    2. ',' → logprob: -1.3252360820770264
    3. '           ' → logprob: -2.2002360820770264
    4. 'and' → logprob: -2.4502360820770264
    5. ' vs' → logprob: -3.7002360820770264
    6. 'vs' → logprob: -5.3252363204956055
    7. '
' → logprob: -6.2002363204956055
    8. ' ,' → logprob: -6.7002363204956055
    9. ')' → logprob: -6.8252363204956055
    10. '       ' → logprob: -7.2002363204956055

Token 620: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023249205201864243
    2. ' b' → logprob: -3.7732491493225098
    3. '           ' → logprob: -13.023249626159668
    4. ' ' → logprob: -14.648249626159668
    5. 'a' → logprob: -14.898249626159668
    6. '   ' → logprob: -15.773249626159668
    7. '               ' → logprob: -16.14824867248535
    8. '          ' → logprob: -16.64824867248535
    9. '         ' → logprob: -16.77324867248535
    10. '       ' → logprob: -17.02324867248535

Token 621: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.0590548703912646e-05
    2. '[' → logprob: -10.750030517578125
    3. '[j' → logprob: -12.125030517578125
    4. '```' → logprob: -13.500030517578125
    5. 'i' → logprob: -14.250030517578125
    6. '[
' → logprob: -14.750030517578125
    7. '   ' → logprob: -15.375030517578125
    8. '`' → logprob: -15.375030517578125
    9. ' [' → logprob: -15.500030517578125
    10. '           ' → logprob: -15.875030517578125

Token 622: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004592468962073326
    2. ']^' → logprob: -6.004592418670654
    3. '[i' → logprob: -6.254592418670654
    4. '][' → logprob: -9.754592895507812
    5. '+' → logprob: -9.879592895507812
    6. '[' → logprob: -11.254592895507812
    7. '   ' → logprob: -11.379592895507812
    8. ']_' → logprob: -12.129592895507812
    9. '           ' → logprob: -12.254592895507812
    10. '^' → logprob: -12.504592895507812

Token 623: '^(' (ID: 32612)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.7214936017990112
    2. '^(' → logprob: -0.8464936017990112
    3. ',' → logprob: -2.846493721008301
    4. '           ' → logprob: -5.471493721008301
    5. '_power' → logprob: -5.471493721008301
    6. '^{' → logprob: -5.971493721008301
    7. '(' → logprob: -6.221493721008301
    8. '_^(' → logprob: -6.596493721008301
    9. '**' → logprob: -6.721493721008301
    10. '(
' → logprob: -7.096493721008301

Token 624: 'rest' (ID: 7134)
  Prédit: 'rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.35280460119247437
    2. 'b' → logprob: -1.2278046607971191
    3. ' rest' → logprob: -5.602804660797119
    4. ' b' → logprob: -7.477804660797119
    5. '(rest' → logprob: -10.477804183959961
    6. 'a' → logprob: -11.602804183959961
    7. '           ' → logprob: -11.852804183959961
    8. '_rest' → logprob: -11.977804183959961
    9. '       ' → logprob: -12.102804183959961
    10. '   ' → logprob: -12.227804183959961

Token 625: '_b' (ID: 1535)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.016127392649650574
    2. '_i' → logprob: -5.141127586364746
    3. '_b' → logprob: -5.641127586364746
    4. 'a' → logprob: -5.766127586364746
    5. '[i' → logprob: -5.766127586364746
    6. ')' → logprob: -9.516127586364746
    7. 'b' → logprob: -9.641127586364746
    8. '```' → logprob: -10.016127586364746
    9. '[a' → logprob: -10.516127586364746
    10. ')_' → logprob: -10.766127586364746

Token 626: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06202448159456253
    2. '):' → logprob: -3.3120245933532715
    3. ')
' → logprob: -4.6870245933532715
    4. '):
' → logprob: -4.9370245933532715
    5. '           ' → logprob: -5.5620245933532715
    6. '       ' → logprob: -5.9370245933532715
    7. '[i' → logprob: -8.562024116516113
    8. '[' → logprob: -8.937024116516113
    9. '))' → logprob: -9.687024116516113
    10. ')`' → logprob: -9.687024116516113

Token 627: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7507092356681824
    2. '       ' → logprob: -1.6257092952728271
    3. 'rest' → logprob: -1.7507092952728271
    4. 'a' → logprob: -2.750709295272827
    5. 'if' → logprob: -3.250709295272827
    6. '
' → logprob: -3.750709295272827
    7. '```' → logprob: -4.250709056854248
    8. '#' → logprob: -5.000709056854248
    9. ' if' → logprob: -6.375709056854248
    10. ' rest' → logprob: -6.750709056854248

Token 628: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' (adapté à ' rest') → logprob: -0.43618595600128174
    2. 'a' → logprob: -1.6861859560012817
    3. 'if' → logprob: -2.436185836791992
    4. '#' → logprob: -3.061185836791992
    5. 'exp' → logprob: -4.811185836791992
    6. 'ai' → logprob: -4.811185836791992
    7. 'from' → logprob: -5.186185836791992
    8. 'ra' → logprob: -5.686185836791992
    9. 'base' → logprob: -6.311185836791992
    10. 'def' → logprob: -6.311185836791992

Token 629: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0005668530357070267
    2. 'a' → logprob: -7.7505669593811035
    3. ' =' → logprob: -9.250566482543945
    4. '=' → logprob: -11.125566482543945
    5. '=_' → logprob: -11.625566482543945
    6. '       ' → logprob: -12.250566482543945
    7. '_' → logprob: -12.750566482543945
    8. '   ' → logprob: -12.875566482543945
    9. '```' → logprob: -13.375566482543945
    10. '_len' → logprob: -13.750566482543945

Token 630: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029754191637039185
    2. ' =' → logprob: -3.529754161834717
    3. ',' → logprob: -12.779754638671875
    4. '   ' → logprob: -15.279754638671875
    5. ':' → logprob: -15.779754638671875
    6. '           ' → logprob: -15.904754638671875
    7. '       ' → logprob: -16.279754638671875
    8. 'a' → logprob: -16.904754638671875
    9. '=a' → logprob: -17.279754638671875
    10. '=[]' → logprob: -17.279754638671875

Token 631: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011443293653428555
    2. 'Power' → logprob: -4.511443138122559
    3. ' a' → logprob: -8.136443138122559
    4. ' Power' → logprob: -9.761443138122559
    5. '[a' → logprob: -11.011443138122559
    6. '   ' → logprob: -12.011443138122559
    7. 'b' → logprob: -12.261443138122559
    8. '[' → logprob: -12.511443138122559
    9. '(a' → logprob: -13.136443138122559
    10. ' ' → logprob: -13.386443138122559

Token 632: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.65707261255011e-06
    2. '[' → logprob: -11.875008583068848
    3. 'i' → logprob: -14.000008583068848
    4. '[(' → logprob: -14.375008583068848
    5. '[
' → logprob: -16.500009536743164
    6. '
' → logprob: -17.125009536743164
    7. '(i' → logprob: -17.875009536743164
    8. '   ' → logprob: -17.875009536743164
    9. '[I' → logprob: -18.375009536743164
    10. 'from' → logprob: -18.625009536743164

Token 633: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00454226927831769
    2. ' +' → logprob: -5.879542350769043
    3. '[' → logprob: -6.629542350769043
    4. ':]' → logprob: -8.629542350769043
    5. '[i' → logprob: -9.504542350769043
    6. ']' → logprob: -9.754542350769043
    7. ':' → logprob: -10.004542350769043
    8. '][' → logprob: -10.379542350769043
    9. '+i' → logprob: -12.129542350769043
    10. '+]' → logprob: -12.379542350769043

Token 634: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0921942703134846e-05
    2. ':' → logprob: -12.37501049041748
    3. ' ' → logprob: -13.00001049041748
    4. '
' → logprob: -13.25001049041748
    5. '```' → logprob: -14.50001049041748
    6. '   ' → logprob: -14.75001049041748
    7. ':]' → logprob: -14.75001049041748
    8. '0' → logprob: -15.50001049041748
    9. ':]
' → logprob: -15.62501049041748
    10. '...' → logprob: -15.75001049041748

Token 635: ':]
' (ID: 61598)
  Prédit: ':]
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]
' → logprob: -0.0422181636095047
    2. ':]' → logprob: -3.6672182083129883
    3. ']
' → logprob: -4.667218208312988
    4. ':],' → logprob: -5.542218208312988
    5. ']' → logprob: -6.167218208312988
    6. ' :]
' → logprob: -8.417218208312988
    7. '],' → logprob: -9.417218208312988
    8. ':' → logprob: -10.042218208312988
    9. ':]

' → logprob: -11.667218208312988
    10. '   ' → logprob: -12.292218208312988

Token 636: '           ' (ID: 352)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.0006345203728415072
    2. ' rest' → logprob: -7.875634670257568
    3. '       ' → logprob: -8.75063419342041
    4. '           ' → logprob: -9.50063419342041
    5. '
' → logprob: -11.50063419342041
    6. ',' → logprob: -12.50063419342041
    7. '(rest' → logprob: -12.87563419342041
    8. '_rest' → logprob: -13.37563419342041
    9. '.rest' → logprob: -13.87563419342041
    10. '        
' → logprob: -14.12563419342041

Token 637: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' (adapté à ' rest') → logprob: -0.0003631137660704553
    2. ' rest' → logprob: -8.00036334991455
    3. '       ' → logprob: -10.62536334991455
    4. '           ' → logprob: -12.62536334991455
    5. '(rest' → logprob: -18.125362396240234
    6. '   ' → logprob: -18.250362396240234
    7. ' ' → logprob: -19.500362396240234
    8. '               ' → logprob: -19.750362396240234
    9. '.rest' → logprob: -19.750362396240234
    10. '```' → logprob: -19.875362396240234

Token 638: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.23106102645397186
    2. 'b' → logprob: -2.1060609817504883
    3. ':' → logprob: -3.6060609817504883
    4. '_a' → logprob: -3.8560609817504883
    5. '<|end|>' → logprob: -4.481060981750488
    6. '[i' → logprob: -5.106060981750488
    7. '<|end|>' → logprob: -5.731060981750488
    8. '_i' → logprob: -5.731060981750488
    9. '           ' → logprob: -6.231060981750488
    10. '   ' → logprob: -6.731060981750488

Token 639: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6957117319107056
    2. ' =' → logprob: -0.6957117319107056
    3. '[i' → logprob: -6.695711612701416
    4. '           ' → logprob: -7.445711612701416
    5. 'b' → logprob: -8.445712089538574
    6. '=i' → logprob: -8.695712089538574
    7. '<|end|>' → logprob: -8.820712089538574
    8. '=b' → logprob: -9.820712089538574
    9. '<|end|>' → logprob: -10.195712089538574
    10. ':' → logprob: -10.195712089538574

Token 640: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019286326132714748
    2. ' b' → logprob: -6.251928806304932
    3. '	b' → logprob: -19.626928329467773
    4. '   ' → logprob: -20.001928329467773
    5. '[b' → logprob: -21.751928329467773
    6. 'B' → logprob: -21.751928329467773
    7. '       ' → logprob: -21.876928329467773
    8. '           ' → logprob: -22.001928329467773
    9. '_b' → logprob: -22.251928329467773
    10. ' б' → logprob: -22.876928329467773

Token 641: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.310693111619912e-05
    2. 'b' → logprob: -10.875042915344238
    3. '[j' → logprob: -11.125042915344238
    4. 'i' → logprob: -12.625042915344238
    5. '[b' → logprob: -13.375042915344238
    6. '[' → logprob: -13.625042915344238
    7. '{i' → logprob: -13.750042915344238
    8. '           ' → logprob: -13.875042915344238
    9. '(i' → logprob: -14.875042915344238
    10. '[
' → logprob: -15.625042915344238

Token 642: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.9153885558771435e-06
    2. ' +' → logprob: -13.125005722045898
    3. '1' → logprob: -13.250005722045898
    4. '+i' → logprob: -13.750005722045898
    5. '+]' → logprob: -14.875005722045898
    6. 'i' → logprob: -15.500005722045898
    7. '[' → logprob: -16.0000057220459
    8. ':' → logprob: -16.3750057220459
    9. '<|end|>' → logprob: -16.6250057220459
    10. '+:' → logprob: -17.2500057220459

Token 643: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '+' → logprob: -14.000001907348633
    3. ' ' → logprob: -14.500001907348633
    4. 'i' → logprob: -14.750001907348633
    5. '```' → logprob: -17.625001907348633
    6. '...' → logprob: -17.750001907348633
    7. '<|end|>' → logprob: -18.500001907348633
    8. '   ' → logprob: -18.750001907348633
    9. '<|end|>' → logprob: -19.750001907348633
    10. 'continue' → logprob: -19.875001907348633

Token 644: ':]

' (ID: 170549)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.12836523354053497
    2. ']' → logprob: -2.1283652782440186
    3. ':]
' → logprob: -7.3783650398254395
    4. ':' → logprob: -7.3783650398254395
    5. '...]' → logprob: -9.378365516662598
    6. ' :]' → logprob: -10.503365516662598
    7. '+]' → logprob: -11.128365516662598
    8. '+' → logprob: -11.378365516662598
    9. '()]' → logprob: -11.503365516662598
    10. '`]' → logprob: -12.128365516662598

Token 645: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17965786159038544
    2. '#' → logprob: -2.5546579360961914
    3. '       ' → logprob: -2.9296579360961914
    4. 'len' → logprob: -4.929657936096191
    5. 'a' → logprob: -5.054657936096191
    6. 'pow' → logprob: -5.429657936096191
    7. 'def' → logprob: -5.929657936096191
    8. 'from' → logprob: -5.929657936096191
    9. 'ai' → logprob: -6.179657936096191
    10. '```' → logprob: -6.804657936096191

Token 646: ' r' (ID: 428)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08001307398080826
    2. '#' → logprob: -2.8300130367279053
    3. 'exp' → logprob: -5.330013275146484
    4. 'len' → logprob: -5.580013275146484
    5. 'pow' → logprob: -5.830013275146484
    6. 'a' → logprob: -6.455013275146484
    7. 'val' → logprob: -6.705013275146484
    8. 'def' → logprob: -7.080013275146484
    9. 'from' → logprob: -7.205013275146484
    10. '       ' → logprob: -8.080013275146484

Token 647: ' =' (ID: 314)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.5430874228477478
    2. 'es' → logprob: -1.2930874824523926
    3. 'eturn' → logprob: -2.4180874824523926
    4. 'a' → logprob: -3.7930874824523926
    5. '_a' → logprob: -4.293087482452393
    6. 'if' → logprob: -5.293087482452393
    7. ' =' → logprob: -5.418087482452393
    8. '=' → logprob: -5.918087482452393
    9. '#' → logprob: -6.543087482452393
    10. 'esize' → logprob: -6.668087482452393

Token 648: ' Power' (ID: 10079)
  Prédit: 'Power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Power' → logprob: -0.0001278534036828205
    2. ' Power' → logprob: -9.000127792358398
    3. 'Pow' → logprob: -12.625127792358398
    4. '0' → logprob: -15.500127792358398
    5. 'total' → logprob: -15.750127792358398
    6. '1' → logprob: -15.875127792358398
    7. 'a' → logprob: -16.0001277923584
    8. '_power' → logprob: -16.2501277923584
    9. '_P' → logprob: -16.5001277923584
    10. '   ' → logprob: -16.6251277923584

Token 649: 'Tower' (ID: 96498)
  Prédit: 'Tower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tower' → logprob: -2.696889623621246e-06
    2. '
' → logprob: -14.12500286102295
    3. 'Tow' → logprob: -14.62500286102295
    4. '```' → logprob: -15.25000286102295
    5. 'a' → logprob: -15.37500286102295
    6. ' Tower' → logprob: -15.50000286102295
    7. '   ' → logprob: -15.75000286102295
    8. 'Town' → logprob: -16.250001907348633
    9. 'Power' → logprob: -16.375001907348633
    10. 'tower' → logprob: -16.625001907348633

Token 650: 'Comparator' (ID: 45034)
  Prédit: 'Comparator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Comparator' → logprob: -2.8325677703833207e-05
    2. 'Comparer' → logprob: -11.125028610229492
    3. '.Comparator' → logprob: -11.375028610229492
    4. '.compare' → logprob: -13.625028610229492
    5. 'Compare' → logprob: -15.625028610229492
    6. '._' → logprob: -16.125028610229492
    7. '[' → logprob: -16.250028610229492
    8. 'Calculator' → logprob: -16.375028610229492
    9. '.com' → logprob: -16.500028610229492
    10. ' Comparator' → logprob: -16.875028610229492

Token 651: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.6327919960021973
    2. '_compare' → logprob: -0.7577919960021973
    3. '_com' → logprob: -10.132791519165039
    4. '.compare' → logprob: -10.757791519165039
    5. '
' → logprob: -10.882791519165039
    6. ' _' → logprob: -11.257791519165039
    7. ''_' → logprob: -11.382791519165039
    8. '_COMPARE' → logprob: -11.507791519165039
    9. '   ' → logprob: -11.632791519165039
    10. '.' → logprob: -11.632791519165039

Token 652: 'compare' (ID: 27773)
  Prédit: 'compare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compare' → logprob: -0.001041382784023881
    2. 'pow' → logprob: -7.626041412353516
    3. '_compare' → logprob: -8.876041412353516
    4. 'power' → logprob: -9.001041412353516
    5. 'cmp' → logprob: -9.126041412353516
    6. 'recursive' → logprob: -10.376041412353516
    7. 'helper' → logprob: -10.876041412353516
    8. 'log' → logprob: -11.376041412353516
    9. 'approx' → logprob: -11.626041412353516
    10. 'exp' → logprob: -11.751041412353516

Token 653: 'Power' (ID: 17027)
  Prédit: '(rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(rest' → logprob: -0.001502717612311244
    2. 'rest' → logprob: -6.501502513885498
    3. '(' → logprob: -15.376502990722656
    4. '.rest' → logprob: -16.501502990722656
    5. '(
' → logprob: -16.751502990722656
    6. '(Rest' → logprob: -17.001502990722656
    7. '```' → logprob: -17.126502990722656
    8. ' rest' → logprob: -17.626502990722656
    9. '_rest' → logprob: -18.251502990722656
    10. '[' → logprob: -19.126502990722656

Token 654: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2090061455965042
    2. 'Tower' → logprob: -1.9590061902999878
    3. '(rest' → logprob: -3.8340060710906982
    4. '(r' → logprob: -4.209006309509277
    5. '(a' → logprob: -5.584006309509277
    6. 'T' → logprob: -6.459006309509277
    7. 'rest' → logprob: -6.584006309509277
    8. ' Towers' → logprob: -6.959006309509277
    9. '       ' → logprob: -7.584006309509277
    10. ' (' → logprob: -7.959006309509277

Token 655: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.039757054299116135
    2. 'rest' → logprob: -4.414757251739502
    3. ',' → logprob: -4.789757251739502
    4. '[' → logprob: -4.914757251739502
    5. '           ' → logprob: -5.164757251739502
    6. ')[' → logprob: -6.789757251739502
    7. ',i' → logprob: -7.414757251739502
    8. ',[' → logprob: -7.789757251739502
    9. ')' → logprob: -7.914757251739502
    10. '[
' → logprob: -8.039756774902344

Token 656: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14618027210235596
    2. '][' → logprob: -2.8961801528930664
    3. '],' → logprob: -3.5211801528930664
    4. ' ,' → logprob: -3.8961801528930664
    5. ']' → logprob: -4.896180152893066
    6. '[i' → logprob: -5.146180152893066
    7. '+' → logprob: -5.521180152893066
    8. ',i' → logprob: -5.771180152893066
    9. ',
' → logprob: -5.896180152893066
    10. '],[' → logprob: -6.396180152893066

Token 657: ' rest' (ID: 2867)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7355905175209045
    2. 'rest' → logprob: -0.7355905175209045
    3. ' rest' → logprob: -3.8605904579162598
    4. ' b' → logprob: -3.9855904579162598
    5. '           ' → logprob: -6.98559045791626
    6. '          ' → logprob: -8.735590934753418
    7. 'a' → logprob: -8.735590934753418
    8. '            ' → logprob: -8.735590934753418
    9. '        ' → logprob: -9.610590934753418
    10. '         ' → logprob: -9.735590934753418

Token 658: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0037346412427723408
    2. 'a' → logprob: -6.128734588623047
    3. '_b' → logprob: -6.503734588623047
    4. 'b' → logprob: -11.253734588623047
    5. '[i' → logprob: -11.503734588623047
    6. '_i' → logprob: -11.753734588623047
    7. 'A' → logprob: -12.253734588623047
    8. '       ' → logprob: -12.628734588623047
    9. '           ' → logprob: -13.003734588623047
    10. '   ' → logprob: -13.128734588623047

Token 659: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007181499968282878
    2. ',b' → logprob: -8.375718116760254
    3. '           ' → logprob: -8.625718116760254
    4. ' ,' → logprob: -9.250718116760254
    5. ')' → logprob: -9.375718116760254
    6. ',
' → logprob: -10.125718116760254
    7. '       ' → logprob: -10.750718116760254
    8. ',)' → logprob: -11.375718116760254
    9. ',r' → logprob: -11.750718116760254
    10. '[' → logprob: -12.000718116760254

Token 660: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0029685497283935547
    2. '           ' → logprob: -5.877968788146973
    3. '               ' → logprob: -9.877968788146973
    4. ' b' → logprob: -10.002968788146973
    5. 'a' → logprob: -10.627968788146973
    6. '                   ' → logprob: -11.377968788146973
    7. '          ' → logprob: -12.252968788146973
    8. '            ' → logprob: -12.377968788146973
    9. '       ' → logprob: -12.752968788146973
    10. '         ' → logprob: -12.877968788146973

Token 661: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.292907877039397e-06
    2. 'i' → logprob: -13.37500286102295
    3. '[j' → logprob: -13.62500286102295
    4. '[
' → logprob: -16.250003814697266
    5. '[' → logprob: -16.500003814697266
    6. '```' → logprob: -16.500003814697266
    7. '{i' → logprob: -16.500003814697266
    8. '   ' → logprob: -17.750003814697266
    9. '`' → logprob: -17.750003814697266
    10. 'b' → logprob: -17.875003814697266

Token 662: '],' (ID: 2155)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.09406505525112152
    2. '+' → logprob: -2.594064950942993
    3. ',' → logprob: -4.844065189361572
    4. ',i' → logprob: -5.219065189361572
    5. '[' → logprob: -7.594065189361572
    6. '+i' → logprob: -7.844065189361572
    7. '+,' → logprob: -8.594064712524414
    8. '[++' → logprob: -9.094064712524414
    9. '[
' → logprob: -9.344064712524414
    10. ')' → logprob: -9.344064712524414

Token 663: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.0019395847339183092
    2. ' rest' → logprob: -6.25193977355957
    3. 'b' → logprob: -11.87693977355957
    4. '           ' → logprob: -12.87693977355957
    5. '               ' → logprob: -14.37693977355957
    6. '            ' → logprob: -14.87693977355957
    7. '          ' → logprob: -16.12693977355957
    8. '(rest' → logprob: -16.37693977355957
    9. '                   ' → logprob: -16.50193977355957
    10. '                ' → logprob: -16.75193977355957

Token 664: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.1160349458805285e-05
    2. 'b' → logprob: -11.875011444091797
    3. '           ' → logprob: -13.375011444091797
    4. '+' → logprob: -14.625011444091797
    5. 'B' → logprob: -14.750011444091797
    6. '_i' → logprob: -14.875011444091797
    7. '_a' → logprob: -15.000011444091797
    8. '_B' → logprob: -15.625011444091797
    9. '       ' → logprob: -15.625011444091797
    10. '_j' → logprob: -15.875011444091797

Token 665: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062301523983478546
    2. ')
' → logprob: -2.8123016357421875
    3. '       ' → logprob: -8.187301635742188
    4. '           ' → logprob: -10.562301635742188
    5. ')`
' → logprob: -11.937301635742188
    6. ',' → logprob: -12.312301635742188
    7. ')
' → logprob: -12.312301635742188
    8. ' )' → logprob: -12.562301635742188
    9. ')

' → logprob: -12.687301635742188
    10. ' )
' → logprob: -13.562301635742188

Token 666: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013681282289326191
    2. 'if' → logprob: -4.388681411743164
    3. ' if' → logprob: -6.763681411743164
    4. '          ' → logprob: -12.138681411743164
    5. '               ' → logprob: -13.013681411743164
    6. '            
' → logprob: -13.263681411743164
    7. 'return' → logprob: -13.638681411743164
    8. '       ' → logprob: -13.888681411743164
    9. '```' → logprob: -13.888681411743164
    10. '
' → logprob: -14.013681411743164

Token 667: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13453322649002075
    2. 'if' (adapté à ' if') → logprob: -2.134533166885376
    3. ' if' → logprob: -4.884533405303955
    4. 'return' → logprob: -12.009532928466797
    5. '       ' → logprob: -12.384532928466797
    6. '          ' → logprob: -13.509532928466797
    7. '               ' → logprob: -14.134532928466797
    8. ' ' → logprob: -14.884532928466797
    9. '   ' → logprob: -15.009532928466797
    10. '```' → logprob: -15.509532928466797

Token 668: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03804333135485649
    2. ' r' → logprob: -3.288043260574341
    3. '   ' → logprob: -13.538043022155762
    4. '	r' → logprob: -15.288043022155762
    5. ' ' → logprob: -16.163043975830078
    6. '  ' → logprob: -16.288043975830078
    7. '    ' → logprob: -16.288043975830078
    8. '     ' → logprob: -17.413043975830078
    9. ' ' → logprob: -17.913043975830078
    10. '           ' → logprob: -17.913043975830078

Token 669: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5486858487129211
    2. '==' → logprob: -1.4236857891082764
    3. ' !=' → logprob: -2.0486857891082764
    4. ' ==' → logprob: -3.0486857891082764
    5. '==-' → logprob: -5.6736860275268555
    6. '<' → logprob: -7.9236860275268555
    7. '<|end|>' → logprob: -8.548686027526855
    8. '=' → logprob: -8.548686027526855
    9. ')!=' → logprob: -8.923686027526855
    10. '   ' → logprob: -9.173686027526855

Token 670: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. '۰' → logprob: -19.876502990722656
    4. '  ' → logprob: -21.126502990722656
    5. 'None' → logprob: -21.126502990722656
    6. '   ' → logprob: -22.001502990722656
    7. '=' → logprob: -22.251502990722656
    8. '
' → logprob: -22.626502990722656
    9. '<|end|>' → logprob: -22.751502990722656
    10. '  
' → logprob: -22.876502990722656

Token 671: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '۰' → logprob: -18.875011444091797
    4. '=' → logprob: -19.000011444091797
    5. '```' → logprob: -20.562511444091797
    6. 'None' → logprob: -20.937511444091797
    7. '   ' → logprob: -21.000011444091797
    8. '1' → logprob: -21.187511444091797
    9. '  ' → logprob: -21.250011444091797
    10. '０' → logprob: -21.500011444091797

Token 672: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18989808857440948
    2. '               ' → logprob: -2.4398980140686035
    3. ':
' → logprob: -2.6898980140686035
    4. '           ' → logprob: -4.5648980140686035
    5. ':return' → logprob: -4.9398980140686035
    6. '<|end|>' → logprob: -8.939898490905762
    7. '                   ' → logprob: -10.189898490905762
    8. '                       ' → logprob: -10.314898490905762
    9. 'return' → logprob: -10.939898490905762
    10. '):
' → logprob: -10.939898490905762

Token 673: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.575563020305708e-05
    2. ' return' → logprob: -10.375065803527832
    3. 'return' → logprob: -11.000065803527832
    4. '           ' → logprob: -11.500065803527832
    5. '                   ' → logprob: -12.375065803527832
    6. '              ' → logprob: -13.625065803527832
    7. '                       ' → logprob: -14.750065803527832
    8. '{return' → logprob: -15.000065803527832
    9. '
' → logprob: -15.125065803527832
    10. '                
' → logprob: -15.250065803527832

Token 674: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0004723795282188803
    2. ' return' → logprob: -7.750472545623779
    3. '               ' → logprob: -10.500472068786621
    4. '           ' → logprob: -11.250472068786621
    5. '                   ' → logprob: -13.875472068786621
    6. '{return' → logprob: -16.750473022460938
    7. '	return' → logprob: -16.875473022460938
    8. '   ' → logprob: -17.500473022460938
    9. ':return' → logprob: -17.875473022460938
    10. '                       ' → logprob: -18.000473022460938

Token 675: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.7610454708337784e-05
    2. ' r' → logprob: -10.500027656555176
    3. '	r' → logprob: -19.87502670288086
    4. '           ' → logprob: -22.25002670288086
    5. '                   ' → logprob: -22.37502670288086
    6. '
' → logprob: -22.37502670288086
    7. '   ' → logprob: -22.62502670288086
    8. '               ' → logprob: -22.87502670288086
    9. '1' → logprob: -23.12502670288086
    10. ' ' → logprob: -24.12502670288086

Token 676: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5725252032279968
    2. '        
' → logprob: -1.1975252628326416
    3. '           ' → logprob: -2.6975252628326416
    4. '
' → logprob: -3.1975252628326416
    5. 'return' → logprob: -4.6975250244140625
    6. '            
' → logprob: -5.3225250244140625
    7. '    
' → logprob: -5.4475250244140625
    8. '  
' → logprob: -5.5725250244140625
    9. ' 
' → logprob: -7.0725250244140625
    10. ' return' → logprob: -7.5725250244140625

Token 677: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006524357013404369
    2. '        
' → logprob: -5.756524562835693
    3. 'return' → logprob: -5.881524562835693
    4. '
' → logprob: -8.381524085998535
    5. '           ' → logprob: -8.756524085998535
    6. ' return' → logprob: -9.256524085998535
    7. '            
' → logprob: -10.506524085998535
    8. '    
' → logprob: -11.631524085998535
    9. 'continue' → logprob: -11.631524085998535
    10. '#' → logprob: -11.881524085998535

Token 678: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.38798093795776367
    2. '       ' → logprob: -1.1379809379577637
    3. ' return' → logprob: -6.887980937957764
    4. '   ' → logprob: -9.887981414794922
    5. '        
' → logprob: -11.262981414794922
    6. '
' → logprob: -11.387981414794922
    7. '```' → logprob: -12.262981414794922
    8. '	return' → logprob: -12.762981414794922
    9. '{return' → logprob: -13.887981414794922
    10. ' ' → logprob: -13.887981414794922

Token 679: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031777136027812958
    2. ' ' → logprob: -5.753177642822266
    3. '  ' → logprob: -18.253177642822266
    4. '   ' → logprob: -18.503177642822266
    5. '-' → logprob: -19.440677642822266
    6. '۰' → logprob: -20.003177642822266
    7. ' ' → logprob: -20.003177642822266
    8. ' -' → logprob: -20.190677642822266
    9. '    ' → logprob: -20.190677642822266
    10. '(' → logprob: -20.253177642822266

Token 680: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '۰' → logprob: -18.37500762939453
    4. '   ' → logprob: -18.75000762939453
    5. '  ' → logprob: -19.81250762939453
    6. '000' → logprob: -20.75000762939453
    7. '０' → logprob: -20.87500762939453
    8. '०' → logprob: -20.93750762939453
    9. ' ' → logprob: -21.06250762939453
    10. '```' → logprob: -21.12500762939453

Token 681: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4754249155521393
    2. '@' → logprob: -0.9754248857498169
    3. '
' → logprob: -6.975424766540527
    4. '@
' → logprob: -8.975424766540527
    5. '    
' → logprob: -9.225424766540527
    6. '```' → logprob: -9.600424766540527
    7. ' @' → logprob: -9.725424766540527
    8. '_' → logprob: -11.850424766540527
    9. '        
' → logprob: -12.100424766540527
    10. '@param' → logprob: -12.225424766540527

Token 682: '   ' (ID: 271)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.01110371295362711
    2. '   ' → logprob: -4.511103630065918
    3. '
' → logprob: -11.011103630065918
    4. ' @' → logprob: -11.261103630065918
    5. '```' → logprob: -11.261103630065918
    6. '@
' → logprob: -11.636103630065918
    7. '    
' → logprob: -13.011103630065918
    8. '`' → logprob: -14.511103630065918
    9. '@@' → logprob: -15.011103630065918
    10. '        
' → logprob: -15.136103630065918

Token 683: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -9.253090865968261e-06
    2. '   ' → logprob: -11.875009536743164
    3. '@
' → logprob: -13.625009536743164
    4. ' @' → logprob: -14.000009536743164
    5. '
' → logprob: -15.875009536743164
    6. 'def' → logprob: -18.250009536743164
    7. '@@' → logprob: -19.500009536743164
    8. '```' → logprob: -19.500009536743164
    9. '@[' → logprob: -19.625009536743164
    10. '@param' → logprob: -19.750009536743164

Token 684: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -9.088346359931165e-07
    2. 'classmethod' → logprob: -14.000000953674316
    3. 'static' → logprob: -20.0
    4. '@' → logprob: -25.75
    5. 'property' → logprob: -26.125
    6. ' static' → logprob: -27.125
    7. '```' → logprob: -27.875
    8. '_static' → logprob: -29.125
    9. 'Static' → logprob: -29.125
    10. 'st' → logprob: -29.375

Token 685: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.303598552942276
    2. '   ' → logprob: -1.4285985231399536
    3. ' def' → logprob: -3.928598642349243
    4. '_def' → logprob: -6.928598403930664
    5. '
' → logprob: -7.053598403930664
    6. '(' → logprob: -8.303598403930664
    7. '_compare' → logprob: -9.303598403930664
    8. '(def' → logprob: -9.678598403930664
    9. '_power' → logprob: -9.678598403930664
    10. '(_' → logprob: -10.053598403930664

Token 686: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31557223200798035
    2. 'def' → logprob: -1.3155722618103027
    3. ' def' → logprob: -6.565572261810303
    4. '
' → logprob: -7.065572261810303
    5. '_def' → logprob: -11.190571784973145
    6. '	def' → logprob: -11.190571784973145
    7. '(' → logprob: -11.815571784973145
    8. '(def' → logprob: -12.315571784973145
    9. '    
' → logprob: -13.065571784973145
    10. '  ' → logprob: -14.565571784973145

Token 687: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -8.363617962459102e-05
    2. ' def' → logprob: -9.750083923339844
    3. '
' → logprob: -10.875083923339844
    4. '_compare' → logprob: -12.250083923339844
    5. 'compare' → logprob: -14.250083923339844
    6. '   ' → logprob: -14.500083923339844
    7. '_def' → logprob: -15.375083923339844
    8. '	def' → logprob: -16.375083923339844
    9. 'Compare' → logprob: -17.000083923339844
    10. '    
' → logprob: -18.625083923339844

Token 688: ' _' (ID: 1175)
  Prédit: '_compare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_compare' → logprob: -1.6240566083070007e-06
    2. '_power' → logprob: -13.750001907348633
    3. '_COMPARE' → logprob: -16.750001907348633
    4. '_compute' → logprob: -17.000001907348633
    5. '_continue' → logprob: -17.125001907348633
    6. 'Compare' → logprob: -17.250001907348633
    7. ' _' → logprob: -17.625001907348633
    8. '_' → logprob: -17.750001907348633
    9. 'def' → logprob: -18.250001907348633
    10. 'compare' → logprob: -18.375001907348633

Token 689: 'compare' (ID: 27773)
  Prédit: 'compare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compare' → logprob: -1.1160349458805285e-05
    2. '_compare' → logprob: -11.500011444091797
    3. '.compare' → logprob: -15.250011444091797
    4. ' compare' → logprob: -15.375011444091797
    5. '_power' → logprob: -16.125011444091797
    6. '(compare' → logprob: -16.250011444091797
    7. 'cmp' → logprob: -16.625011444091797
    8. 'def' → logprob: -17.000011444091797
    9. 'Power' → logprob: -17.000011444091797
    10. 'pow' → logprob: -17.250011444091797

Token 690: 'Power' (ID: 17027)
  Prédit: 'Power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Power' → logprob: -1.3782830137643032e-05
    2. 'power' → logprob: -11.62501335144043
    3. '_power' → logprob: -12.75001335144043
    4. 'Pow' → logprob: -14.12501335144043
    5. 'powers' → logprob: -15.62501335144043
    6. 'P' → logprob: -15.75001335144043
    7. 'pow' → logprob: -15.75001335144043
    8. '(' → logprob: -16.00001335144043
    9. '(a' → logprob: -16.12501335144043
    10. 'Exponent' → logprob: -16.25001335144043

Token 691: '(base' (ID: 25314)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.06325996667146683
    2. '(base' → logprob: -2.813260078430176
    3. '(left' → logprob: -7.313260078430176
    4. '(' → logprob: -7.813260078430176
    5. '(lhs' → logprob: -9.063260078430176
    6. '(l' → logprob: -10.188260078430176
    7. '(x' → logprob: -10.813260078430176
    8. '(
' → logprob: -10.813260078430176
    9. '(b' → logprob: -11.438260078430176
    10. '(A' → logprob: -12.813260078430176

Token 692: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06717335432767868
    2. '_a' → logprob: -3.4421732425689697
    3. 'a' → logprob: -3.8171732425689697
    4. 'A' → logprob: -5.067173480987549
    5. ',a' → logprob: -6.192173480987549
    6. '1' → logprob: -6.567173480987549
    7. '(a' → logprob: -7.567173480987549
    8. ' ,' → logprob: -8.69217300415039
    9. ',
' → logprob: -9.06717300415039
    10. ':' → logprob: -9.56717300415039

Token 693: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027694785967469215
    2. ' ,' → logprob: -8.750276565551758
    3. ':' → logprob: -9.500276565551758
    4. '   ' → logprob: -10.250276565551758
    5. ':int' → logprob: -13.000276565551758
    6. '       ' → logprob: -13.625276565551758
    7. ',int' → logprob: -14.125276565551758
    8. ',b' → logprob: -14.250276565551758
    9. '    ' → logprob: -14.500276565551758
    10. ',
' → logprob: -14.625276565551758

Token 694: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.159660890465602e-05
    2. ' int' → logprob: -9.75007152557373
    3. '[int' → logprob: -12.00007152557373
    4. 'List' → logprob: -12.25007152557373
    5. '(int' → logprob: -14.50007152557373
    6. ':int' → logprob: -14.87507152557373
    7. '   ' → logprob: -15.00007152557373
    8. '<int' → logprob: -15.50007152557373
    9. 'float' → logprob: -15.50007152557373
    10. ')' → logprob: -16.125072479248047

Token 695: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.3213025744771585e-05
    2. '   ' → logprob: -11.250033378601074
    3. ' ,' → logprob: -11.750033378601074
    4. 'rest' → logprob: -12.125033378601074
    5. ',
' → logprob: -13.125033378601074
    6. '(rest' → logprob: -13.125033378601074
    7. '       ' → logprob: -13.750033378601074
    8. '```' → logprob: -15.250033378601074
    9. ',b' → logprob: -15.375033378601074
    10. ')' → logprob: -15.875033378601074

Token 696: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.5593962073326111
    2. 'ex' → logprob: -1.5593962669372559
    3. 'rest' → logprob: -1.5593962669372559
    4. 'expo' → logprob: -5.309396266937256
    5. 'tower' → logprob: -6.684396266937256
    6. 'pow' → logprob: -7.559396266937256
    7. 'power' → logprob: -7.934396266937256
    8. ' exp' → logprob: -8.559395790100098
    9. 'tail' → logprob: -8.684395790100098
    10. '   ' → logprob: -8.809395790100098

Token 697: '_list' (ID: 4162)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.8261588215827942
    2. '1' → logprob: -1.4511587619781494
    3. 's' → logprob: -1.5761587619781494
    4. ':' → logprob: -3.2011587619781494
    5. '_rest' → logprob: -3.3261587619781494
    6. ',' → logprob: -3.8261587619781494
    7. 'ents' → logprob: -4.9511590003967285
    8. '_list' → logprob: -5.4511590003967285
    9. '2' → logprob: -5.7011590003967285
    10. 'ent' → logprob: -5.9511590003967285

Token 698: '1' (ID: 16)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.049216605722904205
    2. ',' → logprob: -3.0492165088653564
    3. '1' → logprob: -8.049216270446777
    4. ' :' → logprob: -9.549216270446777
    5. '=' → logprob: -9.674216270446777
    6. '   ' → logprob: -10.049216270446777
    7. ':list' → logprob: -10.299216270446777
    8. '=[],' → logprob: -11.049216270446777
    9. ')' → logprob: -11.299216270446777
    10. '[' → logprob: -11.299216270446777

Token 699: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4287802278995514
    2. ',' → logprob: -1.053780198097229
    3. '   ' → logprob: -10.553780555725098
    4. ' ,' → logprob: -10.553780555725098
    5. ' :' → logprob: -11.053780555725098
    6. '       ' → logprob: -12.428780555725098
    7. ':list' → logprob: -13.553780555725098
    8. '[' → logprob: -14.053780555725098
    9. ':,' → logprob: -14.303780555725098
    10. ')' → logprob: -14.303780555725098

Token 700: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -9.639096970204264e-05
    2. ' List' → logprob: -10.000096321105957
    3. 'list' → logprob: -10.000096321105957
    4. '[List' → logprob: -12.375096321105957
    5. ')' → logprob: -14.375096321105957
    6. '   ' → logprob: -15.625096321105957
    7. 'int' → logprob: -15.750096321105957
    8. '	List' → logprob: -15.875096321105957
    9. ' ' → logprob: -16.000097274780273
    10. '  ' → logprob: -17.000097274780273

Token 701: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -8.061054359131958e-06
    2. 'int' → logprob: -11.750007629394531
    3. '<int' → logprob: -16.50000762939453
    4. ']int' → logprob: -18.37500762939453
    5. ',int' → logprob: -19.12500762939453
    6. '[Int' → logprob: -19.25000762939453
    7. '=int' → logprob: -19.25000762939453
    8. '[' → logprob: -19.25000762939453
    9. ':int' → logprob: -19.50000762939453
    10. ')' → logprob: -20.37500762939453

Token 702: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.000509187753777951
    2. ',' → logprob: -7.625509262084961
    3. ' ],' → logprob: -11.125509262084961
    4. '   ' → logprob: -13.000509262084961
    5. ']' → logprob: -13.125509262084961
    6. '       ' → logprob: -14.500509262084961
    7. '>,' → logprob: -14.875509262084961
    8. ''],' → logprob: -15.250509262084961
    9. ':],' → logprob: -15.250509262084961
    10. '])' → logprob: -15.625509262084961

Token 703: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0006284446571953595
    2. ' base' → logprob: -7.375628471374512
    3. '   ' → logprob: -14.500628471374512
    4. '     ' → logprob: -15.375628471374512
    5. '           ' → logprob: -15.625628471374512
    6. '    ' → logprob: -15.625628471374512
    7. '       ' → logprob: -15.750628471374512
    8. '
' → logprob: -15.750628471374512
    9. 'exp' → logprob: -16.250627517700195
    10. '         ' → logprob: -16.375627517700195

Token 704: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009313485352322459
    2. ':' → logprob: -7.125931262969971
    3. '=' → logprob: -10.000931739807129
    4. ',' → logprob: -10.375931739807129
    5. ':int' → logprob: -10.875931739807129
    6. '```' → logprob: -11.625931739807129
    7. ' ' → logprob: -12.125931739807129
    8. '_list' → logprob: -12.625931739807129
    9. 'int' → logprob: -13.000931739807129
    10. '=None' → logprob: -13.250931739807129

Token 705: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005538671393878758
    2. ',' → logprob: -8.125554084777832
    3. ':int' → logprob: -8.500554084777832
    4. ' :' → logprob: -10.125554084777832
    5. '   ' → logprob: -11.500554084777832
    6. '[int' → logprob: -13.250554084777832
    7. ' ,' → logprob: -14.500554084777832
    8. 'int' → logprob: -14.625554084777832
    9. '<int' → logprob: -14.750554084777832
    10. '       ' → logprob: -15.250554084777832

Token 706: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.935296834039036e-06
    2. ' int' → logprob: -13.00000286102295
    3. '[int' → logprob: -14.37500286102295
    4. '   ' → logprob: -16.750003814697266
    5. 'List' → logprob: -17.125003814697266
    6. '<int' → logprob: -19.500003814697266
    7. '(int' → logprob: -19.750003814697266
    8. ' ' → logprob: -20.125003814697266
    9. '```' → logprob: -20.250003814697266
    10. '	int' → logprob: -20.375003814697266

Token 707: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.570319702499546e-05
    2. ' ,' → logprob: -11.000025749206543
    3. ',
' → logprob: -11.750025749206543
    4. ',List' → logprob: -14.750025749206543
    5. '   ' → logprob: -15.500025749206543
    6. ',int' → logprob: -15.625025749206543
    7. ')' → logprob: -16.250024795532227
    8. '<|end|>' → logprob: -17.125024795532227
    9. ':' → logprob: -17.250024795532227
    10. ',
' → logprob: -17.375024795532227

Token 708: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.0007104054093360901
    2. ' exp' → logprob: -7.250710487365723
    3. 'List' → logprob: -14.625710487365723
    4. '           ' → logprob: -18.750709533691406
    5. '       ' → logprob: -19.000709533691406
    6. 'export' → logprob: -19.250709533691406
    7. '        ' → logprob: -19.250709533691406
    8. 'int' → logprob: -19.250709533691406
    9. '(exp' → logprob: -19.250709533691406
    10. '   ' → logprob: -19.375709533691406

Token 709: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.512236498361744e-07
    2. 'list' → logprob: -15.375000953674316
    3. 'List' → logprob: -16.0
    4. '_LIST' → logprob: -16.625
    5. 'ist' → logprob: -17.5
    6. '_lists' → logprob: -17.75
    7. '```' → logprob: -18.0
    8. '_List' → logprob: -18.5
    9. 's' → logprob: -19.25
    10. '_lst' → logprob: -19.625

Token 710: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '[' → logprob: -17.0
    3. ' ' → logprob: -17.5
    4. '   ' → logprob: -17.5
    5. '```' → logprob: -17.75
    6. '２' → logprob: -18.25
    7. '۲' → logprob: -18.625
    8. '_' → logprob: -18.875
    9. '...' → logprob: -19.25
    10. ',' → logprob: -19.5

Token 711: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.537868779967539e-06
    2. ')' → logprob: -12.750008583068848
    3. '   ' → logprob: -12.875008583068848
    4. ' :' → logprob: -13.500008583068848
    5. 'List' → logprob: -14.750008583068848
    6. '2' → logprob: -15.000008583068848
    7. '[' → logprob: -15.750008583068848
    8. '1' → logprob: -15.750008583068848
    9. '):' → logprob: -16.12500762939453
    10. 'def' → logprob: -16.25000762939453

Token 712: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -5.200166469876422e-06
    2. 'int' → logprob: -12.500004768371582
    3. '[List' → logprob: -13.750004768371582
    4. ' List' → logprob: -15.000004768371582
    5. '[int' → logprob: -16.6250057220459
    6. 'list' → logprob: -18.6250057220459
    7. '   ' → logprob: -19.3750057220459
    8. '	List' → logprob: -19.6250057220459
    9. '[' → logprob: -21.0000057220459
    10. ')' → logprob: -21.2500057220459

Token 713: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0019325626781210303
    2. 'int' → logprob: -6.251932621002197
    3. '   ' → logprob: -13.501932144165039
    4. '<int' → logprob: -13.876932144165039
    5. ')' → logprob: -14.501932144165039
    6. ':int' → logprob: -14.751932144165039
    7. ']int' → logprob: -15.251932144165039
    8. '=int' → logprob: -15.751932144165039
    9. '       ' → logprob: -16.37693214416504
    10. '(int' → logprob: -16.62693214416504

Token 714: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.013245174661278725
    2. ')' → logprob: -4.388245105743408
    3. ']' → logprob: -7.263245105743408
    4. ''])' → logprob: -11.138245582580566
    5. ' ])' → logprob: -12.138245582580566
    6. '],' → logprob: -12.263245582580566
    7. '   ' → logprob: -12.513245582580566
    8. ')]' → logprob: -13.888245582580566
    9. ']):
' → logprob: -14.138245582580566
    10. '))' → logprob: -14.263245582580566

Token 715: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02739873342216015
    2. ' ->' → logprob: -4.527398586273193
    3. '->' → logprob: -5.402398586273193
    4. ')' → logprob: -5.402398586273193
    5. '       ' → logprob: -6.027398586273193
    6. '   ' → logprob: -6.152398586273193
    7. ':
' → logprob: -6.777398586273193
    8. '):' → logprob: -7.527398586273193
    9. ')->' → logprob: -7.902398586273193
    10. '(' → logprob: -9.152399063110352

Token 716: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.320199877838604e-07
    2. ' int' → logprob: -15.0
    3. '[int' → logprob: -17.875
    4. ''int' → logprob: -18.75
    5. '(int' → logprob: -18.875
    6. '	int' → logprob: -20.875
    7. 'float' → logprob: -21.125
    8. '   ' → logprob: -21.5
    9. '<int' → logprob: -21.5
    10. ''' → logprob: -21.875

Token 717: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09646561741828918
    2. ':
' → logprob: -3.096465587615967
    3. '       ' → logprob: -3.471465587615967
    4. '   ' → logprob: -5.096465587615967
    5. '):' → logprob: -5.846465587615967
    6. '(' → logprob: -5.971465587615967
    7. '):
' → logprob: -6.846465587615967
    8. '(
' → logprob: -7.221465587615967
    9. ')' → logprob: -7.596465587615967
    10. '():
' → logprob: -7.596465587615967

Token 718: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001713590754661709
    2. '```' → logprob: -8.750171661376953
    3. '        
' → logprob: -12.375171661376953
    4. ' if' → logprob: -12.875171661376953
    5. '``' → logprob: -13.000171661376953
    6. 'if' → logprob: -13.625171661376953
    7. '#' → logprob: -14.000171661376953
    8. '   ' → logprob: -14.750171661376953
    9. '           ' → logprob: -14.750171661376953
    10. '
' → logprob: -15.500171661376953

Token 719: ' """
' (ID: 7037)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02713737078011036
    2. '       ' → logprob: -3.777137279510498
    3. ' if' → logprob: -5.652137279510498
    4. '#' → logprob: -8.402137756347656
    5. '```' → logprob: -9.027137756347656
    6. 'import' → logprob: -10.902137756347656
    7. '``' → logprob: -12.652137756347656
    8. 'n' → logprob: -12.777137756347656
    9. 'indent' → logprob: -13.527137756347656
    10. '   ' → logprob: -13.777137756347656

Token 720: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04331716150045395
    2. '       ' → logprob: -3.2933170795440674
    3. '#' → logprob: -5.2933173179626465
    4. 'def' → logprob: -9.543316841125488
    5. '```' → logprob: -9.543316841125488
    6. ' if' → logprob: -9.793316841125488
    7. 'n' → logprob: -10.918316841125488
    8. '``' → logprob: -11.793316841125488
    9. 'len' → logprob: -12.668316841125488
    10. 'import' → logprob: -12.918316841125488

Token 721: ' Compare' (ID: 38200)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20916080474853516
    2. '#' → logprob: -2.459160804748535
    3. '       ' → logprob: -2.959160804748535
    4. 'def' → logprob: -3.084160804748535
    5. '"""
' → logprob: -5.334160804748535
    6. '
' → logprob: -7.834160804748535
    7. '"""' → logprob: -9.209160804748535
    8. 'If' → logprob: -9.459160804748535
    9. 'import' → logprob: -10.084160804748535
    10. ' if' → logprob: -10.084160804748535

Token 722: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.006059267558157444
    2. 'b' → logprob: -6.006059169769287
    3. 'two' → logprob: -6.006059169769287
    4. '
' → logprob: -7.631059169769287
    5. ' base' → logprob: -8.631059646606445
    6. '(base' → logprob: -9.381059646606445
    7. 'a' → logprob: -10.131059646606445
    8. 'bases' → logprob: -10.131059646606445
    9. 'def' → logprob: -10.381059646606445
    10. 'Two' → logprob: -10.506059646606445

Token 723: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007251765113323927
    2. ',' → logprob: -5.257251739501953
    3. '
' → logprob: -7.132251739501953
    4. 'base' → logprob: -7.382251739501953
    5. ',
' → logprob: -8.757251739501953
    6. ' ,' → logprob: -9.132251739501953
    7. ' and' → logprob: -9.257251739501953
    8. 'and' → logprob: -10.007251739501953
    9. '```' → logprob: -10.257251739501953
    10. ' ' → logprob: -10.757251739501953

Token 724: '^(' (ID: 32612)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004953675088472664
    2. ' and' → logprob: -8.750494956970215
    3. ',
' → logprob: -9.250494956970215
    4. 'and' → logprob: -9.500494956970215
    5. ' ,' → logprob: -9.625494956970215
    6. '```' → logprob: -10.250494956970215
    7. '
' → logprob: -10.875494956970215
    8. '==' → logprob: -12.125494956970215
    9. '       ' → logprob: -12.250494956970215
    10. '**' → logprob: -12.500494956970215

Token 725: 'exp' (ID: 8067)
  Prédit: 'exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.0007057601469568908
    2. '[' → logprob: -7.500705718994141
    3. 'base' → logprob: -9.00070571899414
    4. ' exp' → logprob: -11.12570571899414
    5. 'Power' → logprob: -13.00070571899414
    6. ')' → logprob: -13.12570571899414
    7. 'power' → logprob: -13.25070571899414
    8. '(exp' → logprob: -13.37570571899414
    9. '
' → logprob: -14.00070571899414
    10. 'ex' → logprob: -14.00070571899414

Token 726: '1' (ID: 16)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.034592388459714e-06
    2. 'list' → logprob: -12.625005722045898
    3. '1' → logprob: -13.375005722045898
    4. 'List' → logprob: -14.000005722045898
    5. '
' → logprob: -16.3750057220459
    6. '       ' → logprob: -17.0000057220459
    7. ')' → logprob: -17.1250057220459
    8. '```' → logprob: -17.3750057220459
    9. '[' → logprob: -17.7500057220459
    10. '_lists' → logprob: -18.0000057220459

Token 727: ')' (ID: 8)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.009898336604237556
    2. ',' → logprob: -5.0098981857299805
    3. '       ' → logprob: -7.1348981857299805
    4. '[' → logprob: -7.7598981857299805
    5. ')' → logprob: -7.8848981857299805
    6. '   ' → logprob: -8.00989818572998
    7. '
' → logprob: -8.00989818572998
    8. '```' → logprob: -8.00989818572998
    9. '1' → logprob: -8.38489818572998
    10. ')_' → logprob: -9.00989818572998

Token 728: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029664114117622375
    2. ':' → logprob: -7.377966403961182
    3. ',
' → logprob: -7.752966403961182
    4. '1' → logprob: -8.12796688079834
    5. 'exp' → logprob: -8.12796688079834
    6. '       ' → logprob: -8.37796688079834
    7. '```' → logprob: -8.50296688079834
    8. '   ' → logprob: -8.62796688079834
    9. ' ,' → logprob: -8.87796688079834
    10. 'def' → logprob: -9.00296688079834

Token 729: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0032305908389389515
    2. ' base' → logprob: -6.128230571746826
    3. 'exp' → logprob: -7.128230571746826
    4. '[' → logprob: -9.628231048583984
    5. '
' → logprob: -9.753231048583984
    6. '(base' → logprob: -10.003231048583984
    7. 'rest' → logprob: -10.253231048583984
    8. '   ' → logprob: -11.253231048583984
    9. '[
' → logprob: -12.753231048583984
    10. '       ' → logprob: -12.753231048583984

Token 730: '2' (ID: 17)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00885836686939001
    2. '2' → logprob: -4.8838582038879395
    3. 'list' → logprob: -7.1338582038879395
    4. '1' → logprob: -7.8838582038879395
    5. 'List' → logprob: -10.133858680725098
    6. '
' → logprob: -11.633858680725098
    7. '_' → logprob: -11.883858680725098
    8. '```' → logprob: -11.883858680725098
    9. 'base' → logprob: -13.133858680725098
    10. '[' → logprob: -13.133858680725098

Token 731: '^(' (ID: 32612)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.2396625578403473
    2. ',' → logprob: -1.614662528038025
    3. '1' → logprob: -5.3646626472473145
    4. '_' → logprob: -6.1146626472473145
    5. 'List' → logprob: -6.4896626472473145
    6. '```' → logprob: -6.7396626472473145
    7. '[' → logprob: -7.2396626472473145
    8. '(' → logprob: -7.3646626472473145
    9. ')' → logprob: -7.4896626472473145
    10. 'list' → logprob: -7.7396626472473145

Token 732: 'exp' (ID: 8067)
  Prédit: 'exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -3.011373155459296e-05
    2. ' exp' → logprob: -10.500030517578125
    3. '(exp' → logprob: -14.000030517578125
    4. 'List' → logprob: -14.125030517578125
    5. '
' → logprob: -15.500030517578125
    6. 'ex' → logprob: -15.625030517578125
    7. '[' → logprob: -15.625030517578125
    8. '2' → logprob: -15.750030517578125
    9. ')' → logprob: -16.125030517578125
    10. 'int' → logprob: -17.375030517578125

Token 733: '2' (ID: 17)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.5213274309644476e-05
    2. 'List' → logprob: -12.000015258789062
    3. 'list' → logprob: -13.375015258789062
    4. '```' → logprob: -13.500015258789062
    5. '[' → logprob: -13.750015258789062
    6. '1' → logprob: -13.875015258789062
    7. ']' → logprob: -14.250015258789062
    8. '_lists' → logprob: -14.375015258789062
    9. '_lst' → logprob: -14.500015258789062
    10. ')' → logprob: -14.750015258789062

Token 734: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.559960663318634
    2. ',' → logprob: -1.4349606037139893
    3. '):' → logprob: -1.8099606037139893
    4. '):
' → logprob: -4.684960842132568
    5. '       ' → logprob: -5.059960842132568
    6. '   ' → logprob: -5.184960842132568
    7. ':' → logprob: -6.309960842132568
    8. '),' → logprob: -6.684960842132568
    9. ')
' → logprob: -6.934960842132568
    10. '_list' → logprob: -7.434960842132568

Token 735: ' where' (ID: 1919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32135528326034546
    2. ')' → logprob: -2.3213553428649902
    3. '   ' → logprob: -2.8213553428649902
    4. ':' → logprob: -3.0713553428649902
    5. ',' → logprob: -3.1963553428649902
    6. '(' → logprob: -4.44635534286499
    7. '(
' → logprob: -5.44635534286499
    8. ' if' → logprob: -5.69635534286499
    9. '):' → logprob: -6.19635534286499
    10. ' (' → logprob: -6.82135534286499

Token 736: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.00021509946964215487
    2. '
' → logprob: -8.750215530395508
    3. ' exp' → logprob: -10.250215530395508
    4. 'base' → logprob: -11.750215530395508
    5. 'len' → logprob: -12.500215530395508
    6. '       ' → logprob: -12.875215530395508
    7. 'Power' → logprob: -13.000215530395508
    8. '(exp' → logprob: -13.500215530395508
    9. '        
' → logprob: -14.125215530395508
    10. '           ' → logprob: -14.375215530395508

Token 737: '1' (ID: 16)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0003365350130479783
    2. '_lists' → logprob: -8.500336647033691
    3. 's' → logprob: -9.625336647033691
    4. '_s' → logprob: -10.750336647033691
    5. ')_' → logprob: -11.250336647033691
    6. '_lst' → logprob: -11.875336647033691
    7. '```' → logprob: -12.625336647033691
    8. '_tokens' → logprob: -12.750336647033691
    9. '_' → logprob: -12.750336647033691
    10. ']_' → logprob: -12.875336647033691

Token 738: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19412674009799957
    2. '=' → logprob: -2.944126844406128
    3. ' is' → logprob: -3.069126844406128
    4. 'is' → logprob: -3.944126844406128
    5. ' =' → logprob: -4.194126605987549
    6. ')' → logprob: -4.444126605987549
    7. '_list' → logprob: -4.819126605987549
    8. '```' → logprob: -5.069126605987549
    9. '=[]' → logprob: -5.944126605987549
    10. 'and' → logprob: -6.194126605987549

Token 739: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.00030281138606369495
    2. ' exp' → logprob: -8.125303268432617
    3. '
' → logprob: -12.000303268432617
    4. 'ex' → logprob: -16.125303268432617
    5. '(exp' → logprob: -16.250303268432617
    6. '_' → logprob: -16.750303268432617
    7. 'List' → logprob: -16.875303268432617
    8. '_exp' → logprob: -17.000303268432617
    9. '```' → logprob: -17.125303268432617
    10. '	exp' → logprob: -17.625303268432617

Token 740: '2' (ID: 17)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0034047786612063646
    2. 'list' → logprob: -6.12840461730957
    3. 'List' → logprob: -6.75340461730957
    4. '```' → logprob: -11.37840461730957
    5. '2' → logprob: -11.62840461730957
    6. '...' → logprob: -12.25340461730957
    7. 'int' → logprob: -12.25340461730957
    8. '[]' → logprob: -12.75340461730957
    9. '``' → logprob: -12.87840461730957
    10. '=' → logprob: -12.87840461730957

Token 741: ' are' (ID: 553)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.5138341784477234
    2. ':' → logprob: -1.2638342380523682
    3. ' are' → logprob: -2.388834238052368
    4. ')' → logprob: -4.638833999633789
    5. '=' → logprob: -5.013833999633789
    6. '=[]' → logprob: -5.638833999633789
    7. 'can' → logprob: -6.263833999633789
    8. '):
' → logprob: -6.513833999633789
    9. '):' → logprob: -6.513833999633789
    10. 'could' → logprob: -7.763833999633789

Token 742: ' power' (ID: 3470)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.00018422940047457814
    2. ' exp' → logprob: -8.625184059143066
    3. 'Power' → logprob: -13.000184059143066
    4. 'List' → logprob: -14.000184059143066
    5. '[]' → logprob: -14.500184059143066
    6. ' lists' → logprob: -15.125184059143066
    7. 'lists' → logprob: -15.250184059143066
    8. '(exp' → logprob: -16.125185012817383
    9. 'power' → logprob: -16.250185012817383
    10. '[' → logprob: -17.000185012817383

Token 743: ' towers' (ID: 79040)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.17191727459430695
    2. '_lists' → logprob: -2.046917200088501
    3. '_t' → logprob: -4.42191743850708
    4. 'lists' → logprob: -4.92191743850708
    5. '[' → logprob: -5.67191743850708
    6. '[
' → logprob: -6.67191743850708
    7. '       ' → logprob: -7.54691743850708
    8. 'List' → logprob: -7.54691743850708
    9. 'Tower' → logprob: -7.54691743850708
    10. 't' → logprob: -7.54691743850708

Token 744: ' defined' (ID: 9113)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9813116788864136
    2. ':' → logprob: -1.2313116788864136
    3. '   ' → logprob: -1.8563116788864136
    4. '       ' → logprob: -2.981311798095703
    5. '.' → logprob: -3.356311798095703
    6. '(
' → logprob: -3.481311798095703
    7. '[' → logprob: -3.856311798095703
    8. '[
' → logprob: -4.606311798095703
    9. '):' → logprob: -5.231311798095703
    10. ')' → logprob: -5.481311798095703

Token 745: ' by' (ID: 656)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8357547521591187
    2. '       ' → logprob: -1.5857547521591187
    3. 'as' → logprob: -1.9607547521591187
    4. 'by' → logprob: -2.710754871368408
    5. ',' → logprob: -3.460754871368408
    6. '   ' → logprob: -4.085754871368408
    7. '[
' → logprob: -4.085754871368408
    8. 'from' → logprob: -4.585754871368408
    9. '=[
' → logprob: -4.585754871368408
    10. '[' → logprob: -4.585754871368408

Token 746: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.00012403888104017824
    2. ' exp' → logprob: -9.000123977661133
    3. 'the' → logprob: -15.000123977661133
    4. '
' → logprob: -16.500123977661133
    5. '   ' → logprob: -16.500123977661133
    6. '       ' → logprob: -16.750123977661133
    7. '(exp' → logprob: -16.875123977661133
    8. '           ' → logprob: -18.000123977661133
    9. '	exp' → logprob: -18.125123977661133
    10. '```' → logprob: -18.250123977661133

Token 747: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.4034345187828876e-05
    2. '_' → logprob: -12.12502384185791
    3. ']_' → logprob: -12.12502384185791
    4. '_lists' → logprob: -12.87502384185791
    5. '[_' → logprob: -13.37502384185791
    6. ']' → logprob: -13.50002384185791
    7. '[' → logprob: -13.75002384185791
    8. '```' → logprob: -13.87502384185791
    9. '_lst' → logprob: -14.00002384185791
    10. ' _' → logprob: -14.00002384185791

Token 748: '1' (ID: 16)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8782076239585876
    2. '1' → logprob: -1.0032076835632324
    3. '):
' → logprob: -2.0032076835632324
    4. '[' → logprob: -3.7532076835632324
    5. ')' → logprob: -4.003207683563232
    6. ':' → logprob: -4.378207683563232
    7. '       ' → logprob: -4.878207683563232
    8. '   ' → logprob: -5.003207683563232
    9. ',' → logprob: -5.128207683563232
    10. ']:' → logprob: -5.253207683563232

Token 749: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024631983251310885
    2. '   ' → logprob: -8.875246047973633
    3. ')' → logprob: -9.875246047973633
    4. ' ,' → logprob: -11.250246047973633
    5. '       ' → logprob: -11.375246047973633
    6. '):' → logprob: -11.625246047973633
    7. ',
' → logprob: -12.000246047973633
    8. '):
' → logprob: -13.000246047973633
    9. ']' → logprob: -13.125246047973633
    10. ' and' → logprob: -13.125246047973633

Token 750: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.011067868210375309
    2. ' exp' → logprob: -4.511067867279053
    3. '[' → logprob: -11.386068344116211
    4. '(exp' → logprob: -12.636068344116211
    5. '[]' → logprob: -13.511068344116211
    6. '```' → logprob: -13.511068344116211
    7. '
' → logprob: -13.636068344116211
    8. '_exp' → logprob: -14.386068344116211
    9. '`' → logprob: -15.511068344116211
    10. '	exp' → logprob: -15.761068344116211

Token 751: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.4192871175473556e-05
    2. '2' → logprob: -9.875054359436035
    3. '```' → logprob: -13.625054359436035
    4. 'List' → logprob: -14.625054359436035
    5. 'list' → logprob: -15.750054359436035
    6. '`' → logprob: -16.00005340576172
    7. '_' → logprob: -16.37505340576172
    8. '[_' → logprob: -16.37505340576172
    9. 'int' → logprob: -16.50005340576172
    10. '``' → logprob: -16.62505340576172

Token 752: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.054146721959114075
    2. '2' → logprob: -3.5541467666625977
    3. '[' → logprob: -4.054146766662598
    4. '```' → logprob: -5.554146766662598
    5. '[
' → logprob: -6.679146766662598
    6. '_' → logprob: -7.429146766662598
    7. '   ' → logprob: -8.179146766662598
    8. '1' → logprob: -8.429146766662598
    9. '``' → logprob: -9.429146766662598
    10. '
' → logprob: -9.679146766662598

Token 753: '.
' (ID: 558)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8515355587005615
    2. '       ' → logprob: -0.9765355587005615
    3. '   ' → logprob: -2.2265355587005615
    4. ':' → logprob: -3.3515355587005615
    5. ')' → logprob: -3.6015355587005615
    6. '):
' → logprob: -3.8515355587005615
    7. ',' → logprob: -5.851535797119141
    8. ':
' → logprob: -7.351535797119141
    9. '
' → logprob: -7.601535797119141
    10. '```' → logprob: -8.35153579711914

Token 754: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015229015843942761
    2. '```' → logprob: -9.000152587890625
    3. '        
' → logprob: -11.000152587890625
    4. '``' → logprob: -12.750152587890625
    5. ' if' → logprob: -12.750152587890625
    6. '           ' → logprob: -13.625152587890625
    7. ')' → logprob: -13.875152587890625
    8. '   ' → logprob: -14.125152587890625
    9. '        ' → logprob: -14.375152587890625
    10. '#' → logprob: -14.625152587890625

Token 755: ' Uses' (ID: 69986)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4788944721221924
    2. '       ' → logprob: -0.9788944721221924
    3. '
' → logprob: -5.978894233703613
    4. ' if' → logprob: -6.853894233703613
    5. '```' → logprob: -7.478894233703613
    6. '#' → logprob: -7.603894233703613
    7. '        
' → logprob: -9.478894233703613
    8. '``' → logprob: -10.478894233703613
    9. 'If' → logprob: -11.228894233703613
    10. ')' → logprob: -11.603894233703613

Token 756: ' special' (ID: 3582)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.35512083768844604
    2. 'math' → logprob: -2.105120897293091
    3. 'Power' → logprob: -2.355120897293091
    4. 'def' → logprob: -3.730120897293091
    5. 'the' → logprob: -4.230120658874512
    6. '#' → logprob: -4.355120658874512
    7. 'special' → logprob: -4.980120658874512
    8. 'float' → logprob: -4.980120658874512
    9. 'exp' → logprob: -5.980120658874512
    10. '0' → logprob: -6.355120658874512

Token 757: ' rules' (ID: 9607)
  Prédit: 'handling'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'handling' → logprob: -0.3020481765270233
    2. 'cases' → logprob: -1.5520482063293457
    3. 'logic' → logprob: -4.052048206329346
    4. 'rules' → logprob: -4.302048206329346
    5. 'c' → logprob: -4.802048206329346
    6. 'case' → logprob: -4.802048206329346
    7. '_cases' → logprob: -7.927048206329346
    8. '```' → logprob: -8.052047729492188
    9. 'care' → logprob: -8.802047729492188
    10. 't' → logprob: -9.052047729492188

Token 758: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6100466847419739
    2. ' to' → logprob: -1.985046625137329
    3. ' for' → logprob: -2.110046625137329
    4. 'for' → logprob: -2.860046625137329
    5. ':' → logprob: -3.360046625137329
    6. 'to' → logprob: -3.485046625137329
    7. ' and' → logprob: -3.735046625137329
    8. '   ' → logprob: -3.985046625137329
    9. ',' → logprob: -4.985046863555908
    10. ':
' → logprob: -5.110046863555908

Token 759: ' approxim' (ID: 116685)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.591362476348877
    2. 'import' → logprob: -1.966362476348877
    3. 'math' → logprob: -2.091362476348877
    4. 'def' → logprob: -2.466362476348877
    5. 'heur' → logprob: -3.841362476348877
    6. '#' → logprob: -4.091362476348877
    7. '
' → logprob: -4.591362476348877
    8. 'memo' → logprob: -4.966362476348877
    9. 'from' → logprob: -5.341362476348877
    10. 'helper' → logprob: -5.591362476348877

Token 760: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.2989747226238251
    2. 'ation' → logprob: -1.6739747524261475
    3. 'ates' → logprob: -2.6739747524261475
    4. 'ate' → logprob: -6.298974514007568
    5. 'ated' → logprob: -9.423974990844727
    6. 'es' → logprob: -12.673974990844727
    7. '   ' → logprob: -12.673974990844727
    8. '#' → logprob: -12.923974990844727
    9. 'ating' → logprob: -12.923974990844727
    10. 'ator' → logprob: -13.173974990844727

Token 761: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3220559358596802
    2. ':' → logprob: -2.1970558166503906
    3. ' to' → logprob: -2.3220558166503906
    4. ' for' → logprob: -3.1970558166503906
    5. '):' → logprob: -4.697055816650391
    6. ',' → logprob: -5.322055816650391
    7. ':
' → logprob: -6.072055816650391
    8. '):
' → logprob: -6.072055816650391
    9. '   ' → logprob: -6.322055816650391
    10. ')' → logprob: -6.572055816650391

Token 762: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.856408536899835e-05
    2. '        
' → logprob: -11.125028610229492
    3. '```' → logprob: -11.500028610229492
    4. '           ' → logprob: -14.000028610229492
    5. '
' → logprob: -14.750028610229492
    6. ')' → logprob: -14.875028610229492
    7. '``' → logprob: -15.000028610229492
    8. '<|end|>' → logprob: -15.125028610229492
    9. '   ' → logprob: -15.250028610229492
    10. '      ' → logprob: -15.375028610229492

Token 763: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02250082790851593
    2. 'if' → logprob: -3.89750075340271
    3. ' if' → logprob: -6.647500991821289
    4. '```' → logprob: -7.647500991821289
    5. '#' → logprob: -9.522500991821289
    6. 'import' → logprob: -10.272500991821289
    7. '``' → logprob: -10.272500991821289
    8. '        
' → logprob: -10.647500991821289
    9. '   ' → logprob: -12.272500991821289
    10. 'def' → logprob: -12.772500991821289

Token 764: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17666439712047577
    2. '#' → logprob: -1.9266643524169922
    3. 'import' → logprob: -5.051664352416992
    4. 'from' → logprob: -5.426664352416992
    5. '
' → logprob: -5.676664352416992
    6. 'def' → logprob: -6.426664352416992
    7. 'If' → logprob: -8.301664352416992
    8. '       ' → logprob: -9.176664352416992
    9. '"""
' → logprob: -10.926664352416992
    10. '```' → logprob: -11.176664352416992

Token 765: '0' (ID: 15)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2879575490951538
    2. '#' → logprob: -1.5379575490951538
    3. 'def' → logprob: -3.6629576683044434
    4. '
' → logprob: -5.162957668304443
    5. 'If' → logprob: -6.412957668304443
    6. 'from' → logprob: -6.912957668304443
    7. 'import' → logprob: -7.037957668304443
    8. '       ' → logprob: -8.787957191467285
    9. '   ' → logprob: -10.162957191467285
    10. 'return' → logprob: -10.162957191467285

Token 766: '^' (ID: 61)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5067094564437866
    2. '<|end|>' → logprob: -1.6317094564437866
    3. '**' → logprob: -2.506709575653076
    4. ',' → logprob: -2.881709575653076
    5. 'and' → logprob: -3.381709575653076
    6. ' if' → logprob: -4.506709575653076
    7. ')' → logprob: -4.631709575653076
    8. '<|end|>' → logprob: -6.506709575653076
    9. ' or' → logprob: -6.756709575653076
    10. '.' → logprob: -7.006709575653076

Token 767: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00021915239631198347
    2. '<|end|>' → logprob: -8.750219345092773
    3. ' ' → logprob: -10.250219345092773
    4. '...' → logprob: -12.000219345092773
    5. '
' → logprob: -12.125219345092773
    6. '<|end|>' → logprob: -12.375219345092773
    7. 'and' → logprob: -13.125219345092773
    8. 'if' → logprob: -13.250219345092773
    9. '=' → logprob: -13.875219345092773
    10. '#' → logprob: -14.750219345092773

Token 768: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4751700162887573
    2. ' =' → logprob: -0.9751700162887573
    3. ':' → logprob: -7.475170135498047
    4. ',' → logprob: -8.725170135498047
    5. ')' → logprob: -8.975170135498047
    6. ' is' → logprob: -9.725170135498047
    7. ' ==' → logprob: -9.850170135498047
    8. '<|end|>' → logprob: -10.350170135498047
    9. '==' → logprob: -10.475170135498047
    10. ' and' → logprob: -10.975170135498047

Token 769: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '0' → logprob: -18.62523078918457
    4. '   ' → logprob: -18.75023078918457
    5. '```' → logprob: -19.00023078918457
    6. '  ' → logprob: -19.87523078918457
    7. '-' → logprob: -20.12523078918457
    8. '`' → logprob: -20.62523078918457
    9. '       ' → logprob: -20.75023078918457
    10. ' -' → logprob: -21.25023078918457

Token 770: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '0' → logprob: -18.5
    4. '```' → logprob: -19.875
    5. '-' → logprob: -20.25
    6. '   ' → logprob: -21.625
    7. '`' → logprob: -22.0
    8. '[' → logprob: -22.0
    9. '۱' → logprob: -22.25
    10. '>' → logprob: -22.75

Token 771: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04446977376937866
    2. '
' → logprob: -4.294469833374023
    3. ':
' → logprob: -4.544469833374023
    4. ':' → logprob: -5.044469833374023
    5. ' if' → logprob: -5.544469833374023
    6. '```' → logprob: -5.544469833374023
    7. ',' → logprob: -6.544469833374023
    8. 'if' → logprob: -6.919469833374023
    9. '"""
' → logprob: -7.044469833374023
    10. '   ' → logprob: -7.794469833374023

Token 772: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.16121433675289154
    2. 'definition' → logprob: -1.9112143516540527
    3. 'the' → logprob: -7.036214351654053
    4. ' problem' → logprob: -9.661213874816895
    5. 'con' → logprob: -10.411213874816895
    6. ' definition' → logprob: -11.661213874816895
    7. '
' → logprob: -12.786213874816895
    8. 'rule' → logprob: -13.286213874816895
    9. ' convention' → logprob: -14.411213874816895
    10. ' the' → logprob: -14.536213874816895

Token 773: ' statement' (ID: 9710)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7884979248046875
    2. '_statement' → logprob: -1.5384979248046875
    3. ')' → logprob: -2.1634979248046875
    4. '       ' → logprob: -3.4134979248046875
    5. '<|end|>' → logprob: -3.4134979248046875
    6. '   ' → logprob: -3.5384979248046875
    7. '<|end|>' → logprob: -4.0384979248046875
    8. '_rule' → logprob: -4.5384979248046875
    9. '_s' → logprob: -4.6634979248046875
    10. ' _' → logprob: -4.6634979248046875

Token 774: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034038446843624115
    2. ':' → logprob: -4.909038543701172
    3. ' if' → logprob: -4.909038543701172
    4. '
' → logprob: -5.284038543701172
    5. '```' → logprob: -5.534038543701172
    6. ':
' → logprob: -5.909038543701172
    7. 'if' → logprob: -6.534038543701172
    8. ',' → logprob: -6.534038543701172
    9. '   ' → logprob: -6.909038543701172
    10. '):
' → logprob: -7.284038543701172

Token 775: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024870727211236954
    2. '```' → logprob: -6.6274871826171875
    3. '"""
' → logprob: -8.002487182617188
    4. '
' → logprob: -8.002487182617188
    5. '        
' → logprob: -8.377487182617188
    6. '``' → logprob: -9.502487182617188
    7. '"""' → logprob: -9.502487182617188
    8. '`
' → logprob: -10.752487182617188
    9. '`' → logprob: -11.127487182617188
    10. ')' → logprob: -11.377487182617188

Token 776: ' -' (ID: 533)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011439638212323189
    2. '       ' → logprob: -4.886439800262451
    3. '#' → logprob: -5.636439800262451
    4. '```' → logprob: -9.386439323425293
    5. ' if' → logprob: -9.636439323425293
    6. 'import' → logprob: -10.136439323425293
    7. 'def' → logprob: -10.386439323425293
    8. 'from' → logprob: -10.386439323425293
    9. '``' → logprob: -12.511439323425293
    10. 'exp' → logprob: -12.886439323425293

Token 777: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007710493169724941
    2. '#' → logprob: -5.0077104568481445
    3. '
' → logprob: -7.8827104568481445
    4. 'def' → logprob: -8.007710456848145
    5. 'from' → logprob: -9.007710456848145
    6. 'import' → logprob: -9.382710456848145
    7. '       ' → logprob: -10.132710456848145
    8. ' if' → logprob: -11.257710456848145
    9. 'If' → logprob: -11.382710456848145
    10. '```' → logprob: -12.007710456848145

Token 778: ' both' (ID: 2973)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.00048238897579722106
    2. 'exp' → logprob: -8.375482559204102
    3. ' base' → logprob: -8.625482559204102
    4. '0' → logprob: -10.375482559204102
    5. 'len' → logprob: -10.750482559204102
    6. 'not' → logprob: -11.250482559204102
    7. '(base' → logprob: -12.875482559204102
    8. 'ex' → logprob: -13.250482559204102
    9. 'max' → logprob: -15.375482559204102
    10. 'rest' → logprob: -15.750482559204102

Token 779: ' bases' (ID: 31148)
  Prédit: 'bases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bases' → logprob: -0.580519437789917
    2. 'base' → logprob: -0.830519437789917
    3. ' bases' → logprob: -6.330519676208496
    4. ' base' → logprob: -6.580519676208496
    5. 'are' → logprob: -7.080519676208496
    6. '==' → logprob: -8.455519676208496
    7. '0' → logprob: -8.955519676208496
    8. ' are' → logprob: -9.455519676208496
    9. 'ex' → logprob: -10.455519676208496
    10. ' ==' → logprob: -10.830519676208496

Token 780: ' and' (ID: 326)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.028279151767492294
    2. ' ==' → logprob: -4.5282793045043945
    3. 'are' → logprob: -4.7782793045043945
    4. ' are' → logprob: -5.1532793045043945
    5. '0' → logprob: -6.0282793045043945
    6. 'and' → logprob: -8.528279304504395
    7. 'in' → logprob: -9.028279304504395
    8. '```' → logprob: -9.778279304504395
    9. '==
' → logprob: -10.528279304504395
    10. ' in' → logprob: -11.153279304504395

Token 781: ' ex' (ID: 513)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.020790845155715942
    2. 'ex' → logprob: -4.270791053771973
    3. '(exp' → logprob: -5.395791053771973
    4. 'len' → logprob: -6.770791053771973
    5. 'bases' → logprob: -8.145791053771973
    6. ' exp' → logprob: -8.395791053771973
    7. 'not' → logprob: -9.395791053771973
    8. '(len' → logprob: -9.520791053771973
    9. '(' → logprob: -9.645791053771973
    10. '(ex' → logprob: -9.895791053771973

Token 782: 'ponents' (ID: 4331)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5321725606918335
    2. 'ps' → logprob: -0.9071725606918335
    3. 'ponents' → logprob: -4.782172679901123
    4. 'ponent' → logprob: -8.782172203063965
    5. 'pts' → logprob: -9.157172203063965
    6. 'xp' → logprob: -9.907172203063965
    7. 'px' → logprob: -10.157172203063965
    8. 'pt' → logprob: -10.407172203063965
    9. 'pp' → logprob: -10.532172203063965
    10. '```' → logprob: -10.532172203063965

Token 783: ' equal' (ID: 12629)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.32243984937667847
    2. ' are' → logprob: -1.3224399089813232
    3. '==' → logprob: -4.822439670562744
    4. 'equal' → logprob: -8.322440147399902
    5. '
' → logprob: -9.322440147399902
    6. 'empty' → logprob: -9.572440147399902
    7. ':
' → logprob: -9.572440147399902
    8. 'exist' → logprob: -9.947440147399902
    9. ' ==' → logprob: -9.947440147399902
    10. '):
' → logprob: -9.947440147399902

Token 784: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39536550641059875
    2. ':' → logprob: -1.6453654766082764
    3. 'and' → logprob: -3.0203654766082764
    4. ':
' → logprob: -3.0203654766082764
    5. ' and' → logprob: -3.7703654766082764
    6. '=' → logprob: -4.8953657150268555
    7. '   ' → logprob: -6.0203657150268555
    8. ':return' → logprob: -7.5203657150268555
    9. ',
' → logprob: -7.6453657150268555
    10. '==' → logprob: -7.8953657150268555

Token 785: ' towers' (ID: 79040)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.702316403388977
    2. 'return' → logprob: -0.702316403388977
    3. '           ' → logprob: -4.7023162841796875
    4. '   ' → logprob: -10.702316284179688
    5. '       ' → logprob: -12.202316284179688
    6. '          ' → logprob: -12.202316284179688
    7. '
' → logprob: -12.202316284179688
    8. ':return' → logprob: -12.452316284179688
    9. ' ' → logprob: -13.077316284179688
    10. '               ' → logprob: -13.202316284179688

Token 786: ' are' (ID: 553)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.26912811398506165
    2. 'return' → logprob: -2.1441280841827393
    3. ' are' → logprob: -2.2691280841827393
    4. ' return' → logprob: -4.894128322601318
    5. 'equal' → logprob: -6.394128322601318
    6. '=' → logprob: -6.769128322601318
    7. 'compare' → logprob: -6.769128322601318
    8. '==' → logprob: -7.019128322601318
    9. '       ' → logprob: -7.269128322601318
    10. '   ' → logprob: -7.519128322601318

Token 787: ' equal' (ID: 12629)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.04932202771306038
    2. ' equal' → logprob: -3.0493221282958984
    3. 'equ' → logprob: -8.049322128295898
    4. 'consider' → logprob: -9.424322128295898
    5. '   ' → logprob: -9.549322128295898
    6. 'ident' → logprob: -9.674322128295898
    7. 'the' → logprob: -10.174322128295898
    8. 'also' → logprob: -10.674322128295898
    9. ' identical' → logprob: -10.674322128295898
    10. ' equivalent' → logprob: -10.674322128295898

Token 788: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017477182671427727
    2. ':' → logprob: -5.017477035522461
    3. ':
' → logprob: -5.142477035522461
    4. ' if' → logprob: -6.642477035522461
    5. '           ' → logprob: -7.017477035522461
    6. '
' → logprob: -7.142477035522461
    7. '```' → logprob: -7.392477035522461
    8. 'if' → logprob: -7.517477035522461
    9. '.' → logprob: -8.267477035522461
    10. '   ' → logprob: -9.017477035522461

Token 789: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003578810952603817
    2. '
' → logprob: -6.7535786628723145
    3. ')' → logprob: -7.3785786628723145
    4. '        
' → logprob: -7.8785786628723145
    5. ' if' → logprob: -8.003579139709473
    6. '<|end|>' → logprob: -8.253579139709473
    7. '```' → logprob: -8.753579139709473
    8. '        ' → logprob: -9.253579139709473
    9. '):
' → logprob: -9.503579139709473
    10. ',' → logprob: -9.628579139709473

Token 790: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13807769119739532
    2. 'if' → logprob: -2.138077735900879
    3. ' if' → logprob: -4.638077735900879
    4. '```' → logprob: -7.013077735900879
    5. '        
' → logprob: -8.638077735900879
    6. '
' → logprob: -8.763077735900879
    7. '``' → logprob: -9.763077735900879
    8. '#' → logprob: -10.388077735900879
    9. 'import' → logprob: -11.263077735900879
    10. 'exp' → logprob: -11.638077735900879

Token 791: ' Uses' (ID: 69986)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1830541044473648
    2. '#' → logprob: -1.8080540895462036
    3. 'def' → logprob: -6.183053970336914
    4. 'import' → logprob: -7.808053970336914
    5. 'from' → logprob: -8.058053970336914
    6. '       ' → logprob: -8.308053970336914
    7. '
' → logprob: -9.183053970336914
    8. 'exp' → logprob: -9.433053970336914
    9. '```' → logprob: -10.558053970336914
    10. ' if' → logprob: -11.183053970336914

Token 792: ' heuristic' (ID: 146226)
  Prédit: 'Power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Power' → logprob: -0.19822925329208374
    2. 'import' → logprob: -1.9482293128967285
    3. 'math' → logprob: -4.0732293128967285
    4. 'def' → logprob: -4.9482293128967285
    5. 'lambda' → logprob: -5.8232293128967285
    6. ' Power' → logprob: -6.0732293128967285
    7. '#' → logprob: -6.4482293128967285
    8. 'float' → logprob: -6.4482293128967285
    9. '0' → logprob: -6.5732293128967285
    10. 'log' → logprob: -7.6982293128967285

Token 793: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9677815437316895
    2. ':' → logprob: -1.2177815437316895
    3. ' if' → logprob: -2.5927815437316895
    4. ' for' → logprob: -2.7177815437316895
    5. ' and' → logprob: -3.3427815437316895
    6. ':
' → logprob: -3.5927815437316895
    7. '   ' → logprob: -3.5927815437316895
    8. '):' → logprob: -4.0927815437316895
    9. '):
' → logprob: -4.4677815437316895
    10. 'def' → logprob: -4.4677815437316895

Token 794: ' logarith' (ID: 199902)
  Prédit: 'special'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'special' → logprob: -0.532172679901123
    2. 'approx' → logprob: -1.907172679901123
    3. 'math' → logprob: -2.407172679901123
    4. 'memo' → logprob: -3.157172679901123
    5. 'short' → logprob: -3.407172679901123
    6. 'if' → logprob: -3.782172679901123
    7. 'def' → logprob: -4.532172679901123
    8. 'mat' → logprob: -4.907172679901123
    9. '
' → logprob: -5.032172679901123
    10. '```' → logprob: -5.157172679901123

Token 795: 'mic' (ID: 30337)
  Prédit: 'arith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arith' → logprob: -1.1600595712661743
    2. 'mic' → logprob: -1.5350595712661743
    3. 'm' → logprob: -1.7850595712661743
    4. 'ic' → logprob: -2.1600594520568848
    5. 'ms' → logprob: -2.7850594520568848
    6. 'import' → logprob: -3.1600594520568848
    7. 'ics' → logprob: -3.7850594520568848
    8. '10' → logprob: -4.410059452056885
    9. '```' → logprob: -4.660059452056885
    10. '1' → logprob: -4.785059452056885

Token 796: ' comparisons' (ID: 68481)
  Prédit: 'appro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appro' → logprob: -0.7713791131973267
    2. 'compar' → logprob: -1.5213791131973267
    3. 'comparison' → logprob: -2.021378993988037
    4. ' comparisons' → logprob: -2.521378993988037
    5. 'calcul' → logprob: -3.521378993988037
    6. 'checks' → logprob: -4.521378993988037
    7. 'continu' → logprob: -4.646378993988037
    8. 'transform' → logprob: -4.771378993988037
    9. 'estim' → logprob: -4.771378993988037
    10. 'evalu' → logprob: -5.021378993988037

Token 797: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4301917552947998
    2. ':' → logprob: -1.4301917552947998
    3. '):' → logprob: -2.6801917552948
    4. ',' → logprob: -4.680191993713379
    5. ')' → logprob: -4.930191993713379
    6. ':
' → logprob: -4.930191993713379
    7. '):
' → logprob: -5.055191993713379
    8. '   ' → logprob: -5.180191993713379
    9. '.' → logprob: -6.555191993713379
    10. ' if' → logprob: -6.930191993713379

Token 798: ' avoid' (ID: 8397)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.33717790246009827
    2. 'handle' → logprob: -1.5871778726577759
    3. 'dec' → logprob: -3.0871779918670654
    4. 'return' → logprob: -4.087177753448486
    5. 'avoid' → logprob: -4.837177753448486
    6. 'compare' → logprob: -5.712177753448486
    7. 'break' → logprob: -6.587177753448486
    8. ' handle' → logprob: -6.712177753448486
    9. 'import' → logprob: -6.712177753448486
    10. 'resolve' → logprob: -7.462177753448486

Token 799: ' overflow' (ID: 28614)
  Prédit: 'overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'overflow' → logprob: -0.08050661534070969
    2. 'direct' → logprob: -3.0805065631866455
    3. 'full' → logprob: -4.580506801605225
    4. 'math' → logprob: -4.705506801605225
    5. 'float' → logprob: -5.455506801605225
    6. 'over' → logprob: -6.205506801605225
    7. 'deep' → logprob: -6.705506801605225
    8. ' overflow' → logprob: -7.080506801605225
    9. 'comput' → logprob: -7.080506801605225
    10. 'large' → logprob: -7.205506801605225

Token 800: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08423905819654465
    2. '):' → logprob: -3.5842390060424805
    3. ':' → logprob: -3.8342390060424805
    4. '   ' → logprob: -3.9592390060424805
    5. ',' → logprob: -5.0842390060424805
    6. '):
' → logprob: -5.8342390060424805
    7. ' and' → logprob: -6.9592390060424805
    8. ')' → logprob: -7.2092390060424805
    9. ':
' → logprob: -7.9592390060424805
    10. '.' → logprob: -8.33423900604248

Token 801: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007749661453999579
    2. '        
' → logprob: -8.125775337219238
    3. '```' → logprob: -8.875775337219238
    4. '
' → logprob: -9.250775337219238
    5. ' if' → logprob: -9.625775337219238
    6. '<|end|>' → logprob: -9.750775337219238
    7. ')' → logprob: -10.250775337219238
    8. 'if' → logprob: -11.250775337219238
    9. '   ' → logprob: -11.375775337219238
    10. '#' → logprob: -11.500775337219238

Token 802: ' """

' (ID: 28800)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40229567885398865
    2. 'import' → logprob: -1.777295708656311
    3. 'if' → logprob: -1.902295708656311
    4. 'from' → logprob: -4.5272955894470215
    5. '```' → logprob: -7.2772955894470215
    6. ' if' → logprob: -7.4022955894470215
    7. '#' → logprob: -8.15229606628418
    8. '
' → logprob: -9.02729606628418
    9. '        
' → logprob: -9.65229606628418
    10. '``' → logprob: -9.90229606628418

Token 803: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3182336688041687
    2. 'if' → logprob: -1.3182337284088135
    3. '```' → logprob: -5.568233489990234
    4. 'import' → logprob: -7.818233489990234
    5. ' if' → logprob: -7.818233489990234
    6. '#' → logprob: -8.443233489990234
    7. '``' → logprob: -9.693233489990234
    8. 'def' → logprob: -11.068233489990234
    9. '        
' → logprob: -11.443233489990234
    10. '   ' → logprob: -11.943233489990234

Token 804: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.026000676676630974
    2. '#' (adapté à ' #') → logprob: -3.776000738143921
    3. 'import' → logprob: -6.026000499725342
    4. 'from' → logprob: -8.2760009765625
    5. '       ' → logprob: -10.4010009765625
    6. '```' → logprob: -10.4010009765625
    7. 'def' → logprob: -11.0260009765625
    8. ' if' → logprob: -13.0260009765625
    9. '``' → logprob: -13.9010009765625
    10. '
' → logprob: -14.5260009765625

Token 805: ' Evaluate' (ID: 95819)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12802232801914215
    2. '#' → logprob: -2.1280224323272705
    3. 'def' → logprob: -7.128022193908691
    4. 'import' → logprob: -9.128022193908691
    5. 'from' → logprob: -9.128022193908691
    6. '       ' → logprob: -10.128022193908691
    7. 'tower' → logprob: -11.628022193908691
    8. 't' → logprob: -12.128022193908691
    9. '   ' → logprob: -12.628022193908691
    10. 'power' → logprob: -12.878022193908691

Token 806: ' ex' (ID: 513)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03460873290896416
    2. 'from' → logprob: -4.784608840942383
    3. 'tower' → logprob: -4.909608840942383
    4. '       ' → logprob: -5.284608840942383
    5. 'def' → logprob: -5.909608840942383
    6. 'import' → logprob: -6.284608840942383
    7. 'pt' → logprob: -6.409608840942383
    8. '#' → logprob: -6.784608840942383
    9. 'exp' → logprob: -6.784608840942383
    10. 'Power' → logprob: -6.784608840942383

Token 807: 'ponents' (ID: 4331)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.14832091331481934
    2. 'if' → logprob: -2.1483209133148193
    3. 'ponent' → logprob: -4.273321151733398
    4. 'pr' → logprob: -6.273321151733398
    5. '       ' → logprob: -6.523321151733398
    6. 'port' → logprob: -6.773321151733398
    7. 'f' → logprob: -7.273321151733398
    8. 'ponents' → logprob: -7.648321151733398
    9. '   ' → logprob: -8.523321151733398
    10. 'ps' → logprob: -8.898321151733398

Token 808: ' ends' (ID: 17095)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23736031353473663
    2. '       ' → logprob: -1.6123603582382202
    3. ' if' → logprob: -4.73736047744751
    4. 'def' → logprob: -6.86236047744751
    5. 'exp' → logprob: -7.23736047744751
    6. 'ex' → logprob: -7.48736047744751
    7. '```' → logprob: -8.362360000610352
    8. 'e' → logprob: -8.612360000610352
    9. 'import' → logprob: -9.862360000610352
    10. '#' → logprob: -10.362360000610352

Token 809: ':
' (ID: 734)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1087021604180336
    2. '       ' → logprob: -2.4837021827697754
    3. '=[]' → logprob: -4.983702182769775
    4. '=' → logprob: -5.483702182769775
    5. '   ' → logprob: -5.983702182769775
    6. ' if' → logprob: -6.108702182769775
    7. 'with' → logprob: -7.483702182769775
    8. '1' → logprob: -7.858702182769775
    9. ':' → logprob: -7.983702182769775
    10. ')' → logprob: -7.983702182769775

Token 810: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4716431200504303
    2. 'if' → logprob: -1.096643090248108
    3. '```' → logprob: -3.5966432094573975
    4. ' if' → logprob: -4.471642971038818
    5. 'exp' → logprob: -6.346642971038818
    6. 'ex' → logprob: -6.846642971038818
    7. '``' → logprob: -9.221643447875977
    8. 'idx' → logprob: -9.596643447875977
    9. 'n' → logprob: -10.346643447875977
    10. 'prev' → logprob: -10.846643447875977

Token 811: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02788170799612999
    2. 'exp' → logprob: -4.027881622314453
    3. 'from' → logprob: -6.027881622314453
    4. 'len' → logprob: -6.152881622314453
    5. '       ' → logprob: -6.527881622314453
    6. 'def' → logprob: -7.027881622314453
    7. 'e' → logprob: -7.027881622314453
    8. 'val' → logprob: -7.652881622314453
    9. 'eval' → logprob: -7.777881622314453
    10. 'import' → logprob: -7.902881622314453

Token 812: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0019517067121341825
    2. '       ' → logprob: -6.876951694488525
    3. 'exp' → logprob: -7.626951694488525
    4. 'ex' → logprob: -8.126952171325684
    5. '```' → logprob: -10.126952171325684
    6. 'idx' → logprob: -10.251952171325684
    7. ' if' → logprob: -10.876952171325684
    8. '#' → logprob: -10.876952171325684
    9. 'import' → logprob: -12.751952171325684
    10. 'len' → logprob: -12.751952171325684

Token 813: ' exponent' (ID: 51159)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.010776259936392307
    2. 'len' → logprob: -4.635776042938232
    3. 'exp' → logprob: -7.635776042938232
    4. 'base' → logprob: -8.01077651977539
    5. ' not' → logprob: -8.51077651977539
    6. '(not' → logprob: -13.88577651977539
    7. ' len' → logprob: -14.76077651977539
    8. 'ex' → logprob: -15.01077651977539
    9. 'Not' → logprob: -15.01077651977539
    10. 'rest' → logprob: -15.26077651977539

Token 814: ' empty' (ID: 8213)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5727748870849609
    2. '_list' → logprob: -1.447774887084961
    3. 's' → logprob: -2.947774887084961
    4. 'len' → logprob: -3.322774887084961
    5. '==' → logprob: -3.697774887084961
    6. '_lists' → logprob: -3.947774887084961
    7. 'list' → logprob: -4.197774887084961
    8. '_len' → logprob: -4.572774887084961
    9. 'lists' → logprob: -4.822774887084961
    10. '_' → logprob: -4.947774887084961

Token 815: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11742834001779556
    2. ' or' → logprob: -3.2424283027648926
    3. 'if' → logprob: -3.8674283027648926
    4. ' and' → logprob: -4.492428302764893
    5. ' if' → logprob: -4.492428302764893
    6. '):' → logprob: -5.617428302764893
    7. '=' → logprob: -5.617428302764893
    8. 'and' → logprob: -5.742428302764893
    9. ':
' → logprob: -5.867428302764893
    10. '==' → logprob: -5.992428302764893

Token 816: ' exponent' (ID: 51159)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.2662098705768585
    2. 'if' → logprob: -2.391209840774536
    3. 'ex' → logprob: -2.891209840774536
    4. 'return' → logprob: -3.141209840774536
    5. 'e' → logprob: -3.641209840774536
    6. ' exp' → logprob: -5.141210079193115
    7. ' if' → logprob: -5.391210079193115
    8. '       ' → logprob: -5.766210079193115
    9. ' return' → logprob: -7.141210079193115
    10. '           ' → logprob: -7.266210079193115

Token 817: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1831432431936264
    2. '=' → logprob: -2.558143138885498
    3. 's' → logprob: -3.058143138885498
    4. '1' → logprob: -4.183143138885498
    5. ' is' → logprob: -4.683143138885498
    6. '==' → logprob: -4.933143138885498
    7. ' ==' → logprob: -5.558143138885498
    8. '_list' → logprob: -6.933143138885498
    9. 'is' → logprob: -7.058143138885498
    10. '=[]' → logprob: -7.183143138885498

Token 818: ' considered' (ID: 9474)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008646951988339424
    2. '0' → logprob: -5.6336469650268555
    3. '[' → logprob: -5.6336469650268555
    4. '[]' → logprob: -6.8836469650268555
    5. ' ' → logprob: -8.633646965026855
    6. '[]
' → logprob: -9.508646965026855
    7. 'None' → logprob: -9.758646965026855
    8. 'base' → logprob: -9.883646965026855
    9. 'Power' → logprob: -11.508646965026855
    10. 'float' → logprob: -11.508646965026855

Token 819: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3177734613418579
    2. '[' → logprob: -1.317773461341858
    3. '=' → logprob: -6.317773342132568
    4. '[]' → logprob: -6.442773342132568
    5. ' [' → logprob: -8.067773818969727
    6. '0' → logprob: -8.192773818969727
    7. ' ' → logprob: -8.692773818969727
    8. ' =' → logprob: -9.442773818969727
    9. '[]
' → logprob: -10.317773818969727
    10. 'as' → logprob: -10.317773818969727

Token 820: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4333604872226715
    2. '[' → logprob: -1.0583604574203491
    3. '[]' → logprob: -5.558360576629639
    4. '=' → logprob: -8.18336009979248
    5. '0' → logprob: -8.30836009979248
    6. ' [' → logprob: -9.05836009979248
    7. '[]
' → logprob: -9.68336009979248
    8. ' ' → logprob: -10.30836009979248
    9. ' =' → logprob: -11.80836009979248
    10. ' []' → logprob: -12.05836009979248

Token 821: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6107233166694641
    2. ' if' → logprob: -1.7357232570648193
    3. ':' → logprob: -1.9857232570648193
    4. ')' → logprob: -2.9857232570648193
    5. '   ' → logprob: -3.8607232570648193
    6. 'if' → logprob: -3.9857232570648193
    7. ',' → logprob: -4.360723495483398
    8. '.' → logprob: -4.360723495483398
    9. '<|end|>' → logprob: -5.110723495483398
    10. ' and' → logprob: -5.735723495483398

Token 822: ' tower' (ID: 35225)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.13390593230724335
    2. 'definition' → logprob: -2.3839058876037598
    3. 'return' → logprob: -3.8839058876037598
    4. '1' → logprob: -5.00890588760376
    5. ' convention' → logprob: -5.88390588760376
    6. ' default' → logprob: -6.63390588760376
    7. 'def' → logprob: -7.00890588760376
    8. 'con' → logprob: -8.008906364440918
    9. ' definition' → logprob: -8.258906364440918
    10. '0' → logprob: -9.383906364440918

Token 823: ' definition' (ID: 16083)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1727025508880615
    2. ')' → logprob: -2.1727025508880615
    3. 'return' → logprob: -2.1727025508880615
    4. '[' → logprob: -2.2977025508880615
    5. '       ' → logprob: -2.6727025508880615
    6. '
' → logprob: -3.1727025508880615
    7. '.' → logprob: -3.6727025508880615
    8. ',' → logprob: -3.6727025508880615
    9. ':
' → logprob: -3.6727025508880615
    10. '   ' → logprob: -3.7977025508880615

Token 824: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46062278747558594
    2. ':' → logprob: -1.210622787475586
    3. ' if' → logprob: -3.460622787475586
    4. '   ' → logprob: -4.210622787475586
    5. ')' → logprob: -5.585622787475586
    6. '[' → logprob: -5.710622787475586
    7. 'if' → logprob: -5.960622787475586
    8. ':
' → logprob: -6.210622787475586
    9. ' :' → logprob: -6.335622787475586
    10. '.' → logprob: -6.460622787475586

Token 825: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03122108429670334
    2. 'if' → logprob: -3.6562211513519287
    3. ' if' → logprob: -5.40622091293335
    4. '```' → logprob: -8.281221389770508
    5. 'exp' → logprob: -9.281221389770508
    6. 'ex' → logprob: -10.656221389770508
    7. '+' → logprob: -11.031221389770508
    8. 'token' → logprob: -11.656221389770508
    9. '   ' → logprob: -12.281221389770508
    10. 'tokens' → logprob: -12.656221389770508

Token 826: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08407017588615417
    2. '       ' → logprob: -3.0840702056884766
    3. 'exp' → logprob: -3.4590702056884766
    4. 'ex' → logprob: -5.834070205688477
    5. ' if' → logprob: -7.834070205688477
    6. 'e' → logprob: -10.584070205688477
    7. '```' → logprob: -10.709070205688477
    8. 'def' → logprob: -12.084070205688477
    9. 'idx' → logprob: -12.584070205688477
    10. '1' → logprob: -12.959070205688477

Token 827: ' len' (ID: 4631)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.006561548914760351
    2. ' not' → logprob: -5.256561756134033
    3. 'len' → logprob: -6.631561756134033
    4. 'exp' → logprob: -12.006561279296875
    5. '   ' → logprob: -13.506561279296875
    6. ' len' → logprob: -14.506561279296875
    7. '(not' → logprob: -14.881561279296875
    8. '	not' → logprob: -15.881561279296875
    9. ' ' → logprob: -16.006561279296875
    10. 'base' → logprob: -17.506561279296875

Token 828: '(exp' (ID: 51367)
  Prédit: '(exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(exp' → logprob: -0.004079708829522133
    2. 'exp' → logprob: -5.504079818725586
    3. '_exp' → logprob: -14.879079818725586
    4. '1' → logprob: -15.129079818725586
    5. '	exp' → logprob: -15.129079818725586
    6. ' exp' → logprob: -15.504079818725586
    7. '(' → logprob: -16.629079818725586
    8. ''exp' → logprob: -16.879079818725586
    9. '=' → logprob: -17.379079818725586
    10. '(
' → logprob: -17.504079818725586

Token 829: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.703443770878948e-06
    2. '1' → logprob: -11.875007629394531
    3. 's' → logprob: -15.500007629394531
    4. 'list' → logprob: -15.750007629394531
    5. '_lists' → logprob: -16.25000762939453
    6. ')' → logprob: -16.37500762939453
    7. ')_' → logprob: -16.62500762939453
    8. '_' → logprob: -17.62500762939453
    9. '```' → logprob: -17.87500762939453
    10. 'List' → logprob: -18.25000762939453

Token 830: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004759649746119976
    2. ')' → logprob: -5.504759788513184
    3. '0' → logprob: -8.254759788513184
    4. ')==' → logprob: -8.504759788513184
    5. '==' → logprob: -9.379759788513184
    6. '2' → logprob: -9.379759788513184
    7. ' ==' → logprob: -10.629759788513184
    8. '=' → logprob: -12.379759788513184
    9. ']==' → logprob: -12.504759788513184
    10. '```' → logprob: -12.629759788513184

Token 831: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3421381711959839
    2. ')' → logprob: -1.3421381711959839
    3. ' ==' → logprob: -3.8421382904052734
    4. ')==' → logprob: -4.967138290405273
    5. ']==' → logprob: -10.592138290405273
    6. '==
' → logprob: -10.842138290405273
    7. '0' → logprob: -13.342138290405273
    8. ']' → logprob: -13.467138290405273
    9. '=' → logprob: -13.842138290405273
    10. '===' → logprob: -13.967138290405273

Token 832: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01107045728713274
    2. ' ==' → logprob: -4.511070251464844
    3. '==
' → logprob: -11.011070251464844
    4. ')==' → logprob: -13.136070251464844
    5. ']==' → logprob: -13.636070251464844
    6. '=' → logprob: -13.636070251464844
    7. '0' → logprob: -14.011070251464844
    8. '===' → logprob: -14.886070251464844
    9. '()==' → logprob: -15.136070251464844
    10. ')' → logprob: -15.886070251464844

Token 833: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '1' → logprob: -18.250003814697266
    4. '```' → logprob: -19.000003814697266
    5. '   ' → logprob: -19.375003814697266
    6. '<|end|>' → logprob: -20.375003814697266
    7. '۰' → logprob: -20.625003814697266
    8. '
' → logprob: -20.750003814697266
    9. '=' → logprob: -21.125003814697266
    10. ')' → logprob: -22.000003814697266

Token 834: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '<|end|>' → logprob: -19.125
    4. '=' → logprob: -19.25
    5. '```' → logprob: -19.375
    6. '۰' → logprob: -19.625
    7. '1' → logprob: -20.0
    8. ')' → logprob: -20.625
    9. '<|end|>' → logprob: -22.0
    10. '#' → logprob: -22.125

Token 835: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6481170058250427
    2. ':
' → logprob: -0.7731170058250427
    3. ' and' → logprob: -5.1481170654296875
    4. '           ' → logprob: -5.2731170654296875
    5. ':return' → logprob: -6.0231170654296875
    6. '       ' → logprob: -6.6481170654296875
    7. 'and' → logprob: -8.023117065429688
    8. '):
' → logprob: -9.273117065429688
    9. '   ' → logprob: -9.523117065429688
    10. ' or' → logprob: -9.648117065429688

Token 836: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6378049850463867
    2. ':
' → logprob: -1.0128049850463867
    3. ':' → logprob: -3.0128049850463867
    4. '       ' → logprob: -3.7628049850463867
    5. ' and' → logprob: -4.012804985046387
    6. '1' → logprob: -5.262804985046387
    7. ' return' → logprob: -5.762804985046387
    8. ':return' → logprob: -6.387804985046387
    9. '   ' → logprob: -6.637804985046387
    10. 'return' → logprob: -6.762804985046387

Token 837: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' (adapté à ' exp') → logprob: -0.14748425781726837
    2. 'ex' → logprob: -2.272484302520752
    3. 'return' → logprob: -4.272484302520752
    4. 'if' → logprob: -4.397484302520752
    5. 'e' → logprob: -5.897484302520752
    6. '1' → logprob: -6.272484302520752
    7. ' exp' → logprob: -6.522484302520752
    8. '       ' → logprob: -7.897484302520752
    9. 'left' → logprob: -8.272483825683594
    10. ' return' → logprob: -8.522483825683594

Token 838: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.960536539554596
    2. '=' → logprob: -0.960536539554596
    3. ' =' → logprob: -1.4605364799499512
    4. '_' → logprob: -6.085536479949951
    5. '_list' → logprob: -9.58553695678711
    6. '_=' → logprob: -10.08553695678711
    7. '_value' → logprob: -10.46053695678711
    8. '_val' → logprob: -10.83553695678711
    9. 's' → logprob: -10.96053695678711
    10. '   ' → logprob: -11.71053695678711

Token 839: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020667314529419
    2. ' =' → logprob: -2.3502066135406494
    3. ' ' → logprob: -17.10020637512207
    4. ':' → logprob: -17.60020637512207
    5. '1' → logprob: -17.72520637512207
    6. ',' → logprob: -17.85020637512207
    7. '=
' → logprob: -17.85020637512207
    8. 'return' → logprob: -18.22520637512207
    9. 's' → logprob: -18.35020637512207
    10. '_token' → logprob: -18.60020637512207

Token 840: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009551709517836571
    2. 'base' → logprob: -7.625955104827881
    3. 'float' → logprob: -8.000955581665039
    4. ' ' → logprob: -9.375955581665039
    5. 'pow' → logprob: -10.625955581665039
    6. 'power' → logprob: -11.875955581665039
    7. 'Power' → logprob: -12.125955581665039
    8. '[' → logprob: -12.875955581665039
    9. '   ' → logprob: -13.000955581665039
    10. '0' → logprob: -14.313455581665039

Token 841: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00034058792516589165
    2. 'float' → logprob: -8.125340461730957
    3. 'Power' → logprob: -11.125340461730957
    4. ' ' → logprob: -11.625340461730957
    5. 'base' → logprob: -11.625340461730957
    6. 'pow' → logprob: -11.875340461730957
    7. 'power' → logprob: -12.875340461730957
    8. '0' → logprob: -14.875340461730957
    9. '   ' → logprob: -15.125340461730957
    10. 'Float' → logprob: -15.250340461730957

Token 842: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 843: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37396878004074097
    2. 'elif' → logprob: -1.6239688396453857
    3. 'else' → logprob: -2.3739688396453857
    4. '<|end|>' → logprob: -4.373968601226807
    5. '
' → logprob: -5.873968601226807
    6. ' else' → logprob: -6.248968601226807
    7. ' elif' → logprob: -6.748968601226807
    8. 'if' → logprob: -7.248968601226807
    9. '        
' → logprob: -7.373968601226807
    10. '<|end|>' → logprob: -7.873968601226807

Token 844: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5841122269630432
    2. 'elif' → logprob: -1.4591121673583984
    3. '       ' → logprob: -1.7091121673583984
    4. ' else' → logprob: -3.7091121673583984
    5. ' elif' → logprob: -5.709112167358398
    6. '<|end|>' → logprob: -7.709112167358398
    7. '   ' → logprob: -9.084112167358398
    8. '        
' → logprob: -9.334112167358398
    9. '	elif' → logprob: -9.334112167358398
    10. ')' → logprob: -9.334112167358398

Token 845: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003062676405534148
    2. ':' → logprob: -6.128062725067139
    3. '       ' → logprob: -7.878062725067139
    4. '   ' → logprob: -8.75306224822998
    5. ':
' → logprob: -9.00306224822998
    6. '          ' → logprob: -10.25306224822998
    7. 'exp' → logprob: -10.37806224822998
    8. ',' → logprob: -11.12806224822998
    9. '	       ' → logprob: -11.12806224822998
    10. '               ' → logprob: -11.37806224822998

Token 846: '           ' (ID: 352)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.018390359356999397
    2. ' exp' → logprob: -5.14339017868042
    3. 'return' → logprob: -5.51839017868042
    4. 'import' → logprob: -5.89339017868042
    5. '       ' → logprob: -6.01839017868042
    6. '           ' → logprob: -6.14339017868042
    7. '#' → logprob: -7.89339017868042
    8. 'def' → logprob: -9.268390655517578
    9. '   ' → logprob: -9.518390655517578
    10. 'if' → logprob: -9.893390655517578

Token 847: ' #' (ID: 1069)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.012666800990700722
    2. '#' (adapté à ' #') → logprob: -4.887666702270508
    3. 'pt' → logprob: -6.887666702270508
    4. 'pow' → logprob: -7.012666702270508
    5. 'power' → logprob: -7.512666702270508
    6. 'et' → logprob: -7.637666702270508
    7. '       ' → logprob: -8.262666702270508
    8. 'tower' → logprob: -8.262666702270508
    9. 'eval' → logprob: -8.512666702270508
    10. 'if' → logprob: -8.512666702270508

Token 848: ' Compare' (ID: 38200)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.007138724904507399
    2. '#' → logprob: -6.132138729095459
    3. 'if' → logprob: -6.882138729095459
    4. 'ex' → logprob: -7.507138729095459
    5. '       ' → logprob: -7.507138729095459
    6. 'pow' → logprob: -7.882138729095459
    7. 'sub' → logprob: -8.0071382522583
    8. 'et' → logprob: -8.0071382522583
    9. 'first' → logprob: -8.3821382522583
    10. 'eval' → logprob: -8.7571382522583

Token 849: ' exponent' (ID: 51159)
  Prédit: 'Power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Power' → logprob: -0.17505432665348053
    2. 'exp' → logprob: -1.9250543117523193
    3. ' Power' → logprob: -5.675054550170898
    4. 'if' → logprob: -5.925054550170898
    5. 'return' → logprob: -6.050054550170898
    6. 'rest' → logprob: -6.550054550170898
    7. 'power' → logprob: -7.425054550170898
    8. 'pow' → logprob: -7.425054550170898
    9. 'float' → logprob: -7.800054550170898
    10. '1' → logprob: -8.050054550170898

Token 850: ' towers' (ID: 79040)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5806639194488525
    2. '=' → logprob: -1.8306639194488525
    3. '       ' → logprob: -2.3306639194488525
    4. ' =' → logprob: -2.7056639194488525
    5. 'exp' → logprob: -3.7056639194488525
    6. '_value' → logprob: -3.8306639194488525
    7. '_exp' → logprob: -4.955663681030273
    8. 'ex' → logprob: -5.205663681030273
    9. '_list' → logprob: -5.205663681030273
    10. '           ' → logprob: -5.205663681030273

Token 851: ' recursively' (ID: 130266)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5251868367195129
    2. 'exp' → logprob: -1.4001867771148682
    3. '           ' → logprob: -2.650186777114868
    4. 'if' → logprob: -3.900186777114868
    5. 'Power' → logprob: -4.025187015533447
    6. '       ' → logprob: -4.525187015533447
    7. '=' → logprob: -4.650187015533447
    8. '1' → logprob: -5.275187015533447
    9. ' =' → logprob: -5.400187015533447
    10. 'result' → logprob: -5.400187015533447

Token 852: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12473003566265106
    2. '           ' → logprob: -3.374730110168457
    3. 'exp' → logprob: -3.374730110168457
    4. 'if' → logprob: -3.749730110168457
    5. '       ' → logprob: -4.124730110168457
    6. 'result' → logprob: -5.999730110168457
    7. ' return' → logprob: -6.124730110168457
    8. ' if' → logprob: -6.999730110168457
    9. '=' → logprob: -7.124730110168457
    10. 'Power' → logprob: -7.249730110168457

Token 853: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3069264590740204
    2. 'return' → logprob: -1.9319264888763428
    3. ' return' → logprob: -3.1819264888763428
    4. '       ' → logprob: -3.5569264888763428
    5. ' if' → logprob: -4.181926250457764
    6. 'if' → logprob: -4.431926250457764
    7. 'exp' → logprob: -4.806926250457764
    8. 'ex' → logprob: -6.431926250457764
    9. 'power' → logprob: -6.431926250457764
    10. 'prev' → logprob: -6.556926250457764

Token 854: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' (adapté à ' exp') → logprob: -0.37308356165885925
    2. 'cmp' → logprob: -2.3730835914611816
    3. 'r' → logprob: -2.8730835914611816
    4. 'comp' → logprob: -2.8730835914611816
    5. 'res' → logprob: -3.3730835914611816
    6. 'e' → logprob: -4.248083591461182
    7. 'if' → logprob: -4.373083591461182
    8. 'pow' → logprob: -4.373083591461182
    9. 'power' → logprob: -5.248083591461182
    10. 'val' → logprob: -5.248083591461182

Token 855: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08013599365949631
    2. '_list' → logprob: -2.5801360607147217
    3. 'exp' → logprob: -7.955135822296143
    4. 'list' → logprob: -8.2051362991333
    5. '_value' → logprob: -9.4551362991333
    6. 'List' → logprob: -9.7051362991333
    7. '_tokens' → logprob: -9.9551362991333
    8. ' =' → logprob: -10.2051362991333
    9. '=' → logprob: -10.3301362991333
    10. '_' → logprob: -10.4551362991333

Token 856: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02054375410079956
    2. ' =' → logprob: -3.8955438137054443
    3. '=
' → logprob: -14.020544052124023
    4. ':' → logprob: -15.395544052124023
    5. 'return' → logprob: -15.770544052124023
    6. '=int' → logprob: -16.395544052124023
    7. '   ' → logprob: -16.395544052124023
    8. ',' → logprob: -16.520544052124023
    9. '=

' → logprob: -16.520544052124023
    10. '=}' → logprob: -16.520544052124023

Token 857: ' Power' (ID: 10079)
  Prédit: 'Power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Power' → logprob: -0.010143466293811798
    2. 'exp' → logprob: -4.760143280029297
    3. 'float' → logprob: -7.260143280029297
    4. ' Power' → logprob: -8.510143280029297
    5. 'pow' → logprob: -8.510143280029297
    6. 'power' → logprob: -9.260143280029297
    7. '1' → logprob: -9.885143280029297
    8. 'None' → logprob: -10.010143280029297
    9. '[' → logprob: -10.260143280029297
    10. 'Pow' → logprob: -10.385143280029297

Token 858: 'Tower' (ID: 96498)
  Prédit: 'Tower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tower' → logprob: -1.1472419600977446e-06
    2. ' Tower' → logprob: -14.125000953674316
    3. 'Tow' → logprob: -15.625000953674316
    4. '_T' → logprob: -17.000001907348633
    5. '   ' → logprob: -17.125001907348633
    6. '[' → logprob: -17.250001907348633
    7. '
' → logprob: -17.500001907348633
    8. ')' → logprob: -17.875001907348633
    9. '       ' → logprob: -17.875001907348633
    10. '_t' → logprob: -17.875001907348633

Token 859: '(exp' (ID: 51367)
  Prédit: 'Comparator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Comparator' → logprob: -6.074907287256792e-05
    2. 'com' → logprob: -10.87506103515625
    3. '.Comparator' → logprob: -11.37506103515625
    4. 'Comparer' → logprob: -11.87506103515625
    5. '_com' → logprob: -12.00006103515625
    6. 'Power' → logprob: -12.37506103515625
    7. '   ' → logprob: -12.62506103515625
    8. 'compare' → logprob: -13.87506103515625
    9. 'Calculator' → logprob: -14.25006103515625
    10. '.compare' → logprob: -14.25006103515625

Token 860: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0015297401696443558
    2. 'exp' → logprob: -6.751529693603516
    3. '           ' → logprob: -9.001529693603516
    4. '[' → logprob: -9.501529693603516
    5. 'List' → logprob: -9.876529693603516
    6. 'list' → logprob: -10.126529693603516
    7. '       ' → logprob: -10.501529693603516
    8. '   ' → logprob: -11.876529693603516
    9. '          ' → logprob: -12.126529693603516
    10. '1' → logprob: -12.376529693603516

Token 861: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.028293520212173462
    2. '2' → logprob: -3.9032936096191406
    3. '_list' → logprob: -5.528293609619141
    4. '[' → logprob: -5.903293609619141
    5. '[i' → logprob: -8.02829360961914
    6. '   ' → logprob: -8.77829360961914
    7. '```' → logprob: -9.15329360961914
    8. ')' → logprob: -9.27829360961914
    9. '       ' → logprob: -9.90329360961914
    10. '(i' → logprob: -10.02829360961914

Token 862: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.004502992611378431
    2. ')._' → logprob: -5.504502773284912
    3. '.evaluate' → logprob: -8.12950325012207
    4. '._' → logprob: -9.62950325012207
    5. ')' → logprob: -10.50450325012207
    6. '   ' → logprob: -10.87950325012207
    7. ').__' → logprob: -11.87950325012207
    8. '       ' → logprob: -13.00450325012207
    9. '.' → logprob: -13.12950325012207
    10. ' ).' → logprob: -13.50450325012207

Token 863: 'evaluate' (ID: 114439)
  Prédit: 'evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -4.127333340875339e-06
    2. '_e' → logprob: -12.625003814697266
    3. ' evaluate' → logprob: -14.625003814697266
    4. '.evaluate' → logprob: -15.250003814697266
    5. 'eval' → logprob: -17.250003814697266
    6. 'valuate' → logprob: -17.625003814697266
    7. ' ' → logprob: -18.875003814697266
    8. '
' → logprob: -18.875003814697266
    9. 'e' → logprob: -19.000003814697266
    10. 'calculate' → logprob: -19.125003814697266

Token 864: '()

' (ID: 5874)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3445327579975128
    2. '<|end|>' → logprob: -1.5945327281951904
    3. ')' → logprob: -2.5945327281951904
    4. '<|end|>' → logprob: -4.8445329666137695
    5. '        
' → logprob: -6.9695329666137695
    6. '[' → logprob: -7.3445329666137695
    7. '        ' → logprob: -7.4695329666137695
    8. '
' → logprob: -7.7195329666137695
    9. ' if' → logprob: -7.7195329666137695
    10. ' ' → logprob: -7.8445329666137695

Token 865: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020552631467580795
    2. '<|end|>' → logprob: -4.020552635192871
    3. '        
' → logprob: -7.020552635192871
    4. ' if' → logprob: -7.770552635192871
    5. ')' → logprob: -7.895552635192871
    6. '<|end|>' → logprob: -8.520552635192871
    7. '           ' → logprob: -8.645552635192871
    8. '        ' → logprob: -9.645552635192871
    9. '   ' → logprob: -9.895552635192871
    10. '
' → logprob: -10.520552635192871

Token 866: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5560920238494873
    2. ' if' → logprob: -0.9310920238494873
    3. '       ' → logprob: -3.4310920238494873
    4. '```' → logprob: -11.056092262268066
    5. 'token' → logprob: -11.056092262268066
    6. 'If' → logprob: -11.181092262268066
    7. 'exp' → logprob: -12.056092262268066
    8. '	if' → logprob: -12.181092262268066
    9. '   ' → logprob: -12.306092262268066
    10. '        
' → logprob: -12.681092262268066

Token 867: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.029751762747764587
    2. ' len' → logprob: -3.529751777648926
    3. '(len' → logprob: -13.779751777648926
    4. '	len' → logprob: -16.15475082397461
    5. '   ' → logprob: -16.40475082397461
    6. ' ' → logprob: -17.27975082397461
    7. '  ' → logprob: -17.40475082397461
    8. '[len' → logprob: -17.52975082397461
    9. '    ' → logprob: -17.90475082397461
    10. '       ' → logprob: -18.40475082397461

Token 868: '(exp' (ID: 51367)
  Prédit: '(exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(exp' → logprob: -0.008614808320999146
    2. 'exp' → logprob: -4.758615016937256
    3. ' exp' → logprob: -15.758614540100098
    4. '	exp' → logprob: -16.633615493774414
    5. ''exp' → logprob: -17.508615493774414
    6. '_exp' → logprob: -17.758615493774414
    7. '(
' → logprob: -18.133615493774414
    8. '.exp' → logprob: -18.383615493774414
    9. '(' → logprob: -18.758615493774414
    10. 'Exp' → logprob: -19.258615493774414

Token 869: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00023619852436240762
    2. 'list' → logprob: -8.375236511230469
    3. '2' → logprob: -12.375236511230469
    4. 'List' → logprob: -14.000236511230469
    5. '1' → logprob: -14.750236511230469
    6. 'exp' → logprob: -16.12523651123047
    7. '_' → logprob: -17.37523651123047
    8. 'l' → logprob: -17.50023651123047
    9. 'lst' → logprob: -17.75023651123047
    10. '```' → logprob: -17.87523651123047

Token 870: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. '1' → logprob: -14.875000953674316
    3. '   ' → logprob: -16.5
    4. '```' → logprob: -16.875
    5. '_' → logprob: -17.125
    6. '
' → logprob: -17.75
    7. ' ' → logprob: -19.0
    8. '       ' → logprob: -19.125
    9. ')' → logprob: -19.375
    10. '0' → logprob: -19.5

Token 871: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005417120410129428
    2. ')==' → logprob: -7.750541687011719
    3. '==' → logprob: -9.375541687011719
    4. ' ==' → logprob: -10.875541687011719
    5. ' )' → logprob: -12.625541687011719
    6. ']' → logprob: -13.875541687011719
    7. '   ' → logprob: -14.250541687011719
    8. ']==' → logprob: -14.250541687011719
    9. '}' → logprob: -14.250541687011719
    10. '()' → logprob: -15.125541687011719

Token 872: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.69318026304245
    2. ' ==' → logprob: -0.69318026304245
    3. ')==' → logprob: -11.193180084228516
    4. '()==' → logprob: -12.068180084228516
    5. ')' → logprob: -12.318180084228516
    6. ']==' → logprob: -12.568180084228516
    7. '=' → logprob: -13.443180084228516
    8. '<|end|>' → logprob: -13.693180084228516
    9. '==
' → logprob: -13.693180084228516
    10. '()' → logprob: -14.693180084228516

Token 873: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015860427811276168
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.625158309936523
    4. '1' → logprob: -17.875158309936523
    5. '       ' → logprob: -18.375158309936523
    6. '```' → logprob: -18.500158309936523
    7. '۰' → logprob: -19.500158309936523
    8. '           ' → logprob: -19.875158309936523
    9. '.' → logprob: -20.000158309936523
    10. '  ' → logprob: -20.000158309936523

Token 874: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -16.12504005432129
    4. '1' → logprob: -17.25004005432129
    5. '       ' → logprob: -18.37504005432129
    6. '```' → logprob: -18.87504005432129
    7. '۰' → logprob: -19.37504005432129
    8. '  ' → logprob: -19.62504005432129
    9. '           ' → logprob: -19.87504005432129
    10. '[' → logprob: -19.87504005432129

Token 875: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04988650605082512
    2. ':
' → logprob: -3.174886465072632
    3. '           ' → logprob: -5.049886703491211
    4. '==' → logprob: -8.549886703491211
    5. '=' → logprob: -9.299886703491211
    6. '{
' → logprob: -10.049886703491211
    7. '       ' → logprob: -10.549886703491211
    8. '{' → logprob: -10.799886703491211
    9. ' ==' → logprob: -10.799886703491211
    10. ')' → logprob: -11.299886703491211

Token 876: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00503462553024292
    2. 'exp' → logprob: -5.880034446716309
    3. ' exp' → logprob: -6.380034446716309
    4. '       ' → logprob: -8.255034446716309
    5. '               ' → logprob: -10.005034446716309
    6. '{
' → logprob: -10.130034446716309
    7. '1' → logprob: -10.130034446716309
    8. '   ' → logprob: -10.505034446716309
    9. '          ' → logprob: -10.630034446716309
    10. '```' → logprob: -11.005034446716309

Token 877: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' (adapté à ' exp') → logprob: -0.011088382452726364
    2. '1' → logprob: -4.5110883712768555
    3. ' exp' → logprob: -10.761088371276855
    4. '       ' → logprob: -11.636088371276855
    5. '           ' → logprob: -12.136088371276855
    6. '   ' → logprob: -13.261088371276855
    7. 'ex' → logprob: -13.511088371276855
    8. ' ' → logprob: -14.761088371276855
    9. 'ext' → logprob: -15.636088371276855
    10. '        ' → logprob: -15.636088371276855

Token 878: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5759493708610535
    2. '1' → logprob: -0.8259493708610535
    3. ' ' → logprob: -11.575949668884277
    4. '=' → logprob: -14.950949668884277
    5. ' =' → logprob: -15.450949668884277
    6. '   ' → logprob: -16.45094871520996
    7. '_' → logprob: -17.82594871520996
    8. '  ' → logprob: -18.57594871520996
    9. '```' → logprob: -19.20094871520996
    10. 'exp' → logprob: -19.57594871520996

Token 879: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602243334054947
    2. '=' → logprob: -1.9102243185043335
    3. ' ' → logprob: -16.66022491455078
    4. ' =
' → logprob: -16.91022491455078
    5. ':' → logprob: -17.78522491455078
    6. '=
' → logprob: -18.41022491455078
    7. '＝' → logprob: -18.78522491455078
    8. 's' → logprob: -18.78522491455078
    9. '<|end|>' → logprob: -18.78522491455078
    10. ')' → logprob: -18.91022491455078

Token 880: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -18.250019073486328
    4. '       ' → logprob: -20.125019073486328
    5. '```' → logprob: -20.250019073486328
    6. '  ' → logprob: -20.625019073486328
    7. '0' → logprob: -21.000019073486328
    8. '۱' → logprob: -21.125019073486328
    9. '=' → logprob: -21.500019073486328
    10. 'pow' → logprob: -21.500019073486328

Token 881: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -18.875001907348633
    4. '```' → logprob: -20.250001907348633
    5. '0' → logprob: -20.500001907348633
    6. '۱' → logprob: -20.750001907348633
    7. 'pow' → logprob: -20.875001907348633
    8. '  ' → logprob: -21.062501907348633
    9. '[' → logprob: -21.062501907348633
    10. '2' → logprob: -21.187501907348633

Token 882: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.234526127576828
    2. '<|end|>' → logprob: -1.8595261573791504
    3. 'else' → logprob: -3.1095261573791504
    4. ' else' → logprob: -5.60952615737915
    5. '<|end|>' → logprob: -6.23452615737915
    6. ')' → logprob: -7.35952615737915
    7. ',' → logprob: -7.60952615737915
    8. '=' → logprob: -7.73452615737915
    9. '        ' → logprob: -7.98452615737915
    10. '.' → logprob: -7.98452615737915

Token 883: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.275870680809021
    2. 'else' → logprob: -1.650870680809021
    3. ' else' → logprob: -3.0258708000183105
    4. '<|end|>' → logprob: -8.275870323181152
    5. '```' → logprob: -8.900870323181152
    6. '   ' → logprob: -9.025870323181152
    7. '        ' → logprob: -10.650870323181152
    8. ',' → logprob: -10.775870323181152
    9. '[' → logprob: -10.775870323181152
    10. ')' → logprob: -11.150870323181152

Token 884: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.1606617420911789
    2. '       ' → logprob: -1.9106616973876953
    3. ' else' → logprob: -7.785661697387695
    4. '   ' → logprob: -11.160661697387695
    5. ':' → logprob: -13.285661697387695
    6. ':
' → logprob: -13.535661697387695
    7. '           ' → logprob: -13.910661697387695
    8. '```' → logprob: -13.910661697387695
    9. '	else' → logprob: -14.410661697387695
    10. 'elif' → logprob: -15.035661697387695

Token 885: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24100327491760254
    2. ':' → logprob: -1.8660032749176025
    3. ':
' → logprob: -2.8660032749176025
    4. '       ' → logprob: -6.241003036499023
    5. '{
' → logprob: -8.741003036499023
    6. '```' → logprob: -8.741003036499023
    7. '               ' → logprob: -9.741003036499023
    8. '{' → logprob: -9.866003036499023
    9. '          ' → logprob: -10.491003036499023
    10. ':return' → logprob: -11.366003036499023

Token 886: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01585017889738083
    2. '```' → logprob: -4.890850067138672
    3. '#' → logprob: -5.390850067138672
    4. '       ' → logprob: -5.640850067138672
    5. 'exp' → logprob: -10.390850067138672
    6. '``' → logprob: -10.390850067138672
    7. '               ' → logprob: -11.015850067138672
    8. '
' → logprob: -11.390850067138672
    9. '   ' → logprob: -12.015850067138672
    10. '          ' → logprob: -13.015850067138672

Token 887: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' (adapté à ' exp') → logprob: -0.12924818694591522
    2. '#' → logprob: -2.1292481422424316
    3. '           ' → logprob: -6.129248142242432
    4. '       ' → logprob: -9.12924861907959
    5. ' exp' → logprob: -11.12924861907959
    6. ' #' → logprob: -11.62924861907959
    7. '   ' → logprob: -13.00424861907959
    8. '
' → logprob: -13.87924861907959
    9. '               ' → logprob: -14.37924861907959
    10. '```' → logprob: -14.50424861907959

Token 888: '2' (ID: 17)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0003712085890583694
    2. 'List' → logprob: -8.125370979309082
    3. 'list' → logprob: -9.625370979309082
    4. '1' → logprob: -11.750370979309082
    5. '2' → logprob: -14.375370979309082
    6. '_lists' → logprob: -16.3753719329834
    7. '_lst' → logprob: -16.5003719329834
    8. '       ' → logprob: -16.6253719329834
    9. '_List' → logprob: -16.8753719329834
    10. '=' → logprob: -17.0003719329834

Token 889: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931471824645996
    2. ' =' → logprob: -0.6931471824645996
    3. ' ' → logprob: -17.193147659301758
    4. ':' → logprob: -17.818147659301758
    5. ')' → logprob: -18.318147659301758
    6. '   ' → logprob: -18.693147659301758
    7. '＝' → logprob: -19.193147659301758
    8. '=
' → logprob: -19.443147659301758
    9. '.=' → logprob: -20.193147659301758
    10. '==' → logprob: -20.318147659301758

Token 890: ' Power' (ID: 10079)
  Prédit: 'Power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Power' → logprob: -1.0206720617134124e-05
    2. ' Power' → logprob: -11.50001049041748
    3. 'Pow' → logprob: -21.000009536743164
    4. 'power' → logprob: -21.875009536743164
    5. '.Power' → logprob: -22.875009536743164
    6. 'float' → logprob: -23.000009536743164
    7. '   ' → logprob: -23.500009536743164
    8. '           ' → logprob: -24.000009536743164
    9. '       ' → logprob: -24.250009536743164
    10. '_power' → logprob: -24.625009536743164

Token 891: 'Tower' (ID: 96498)
  Prédit: 'Tower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tower' → logprob: -5.200166469876422e-06
    2. 'Tow' → logprob: -12.625004768371582
    3. 'Town' → logprob: -14.250004768371582
    4. 'Torch' → logprob: -15.375004768371582
    5. ' Tower' → logprob: -15.750004768371582
    6. 'Tour' → logprob: -15.875004768371582
    7. '_T' → logprob: -16.3750057220459
    8. 'List' → logprob: -16.7500057220459
    9. 'T' → logprob: -16.7500057220459
    10. '[' → logprob: -17.5000057220459

Token 892: '(exp' (ID: 51367)
  Prédit: '(exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(exp' → logprob: -6.153795766294934e-06
    2. '.exp' → logprob: -13.000005722045898
    3. '(eval' → logprob: -13.250005722045898
    4. 'Comparator' → logprob: -14.000005722045898
    5. '.evaluate' → logprob: -14.125005722045898
    6. '.eval' → logprob: -15.750005722045898
    7. '._' → logprob: -15.875005722045898
    8. 'exp' → logprob: -16.1250057220459
    9. '.compare' → logprob: -17.1250057220459
    10. '(exc' → logprob: -17.5000057220459

Token 893: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.003084428608417511
    2. 'list' → logprob: -5.878084659576416
    3. '2' → logprob: -8.378084182739258
    4. '1' → logprob: -10.628084182739258
    5. 'List' → logprob: -10.753084182739258
    6. '[' → logprob: -13.628084182739258
    7. 'exp' → logprob: -15.003084182739258
    8. 'l' → logprob: -15.003084182739258
    9. 's' → logprob: -15.378084182739258
    10. '   ' → logprob: -15.378084182739258

Token 894: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005301350262016058
    2. '_list' → logprob: -5.255301475524902
    3. 'List' → logprob: -10.130301475524902
    4. 'list' → logprob: -10.630301475524902
    5. '[' → logprob: -13.630301475524902
    6. '1' → logprob: -14.130301475524902
    7. '   ' → logprob: -14.505301475524902
    8. 'exp' → logprob: -15.005301475524902
    9. '_' → logprob: -15.255301475524902
    10. '       ' → logprob: -15.505301475524902

Token 895: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -6.24179228907451e-05
    2. ')._' → logprob: -10.125061988830566
    3. '       ' → logprob: -11.250061988830566
    4. '   ' → logprob: -12.125061988830566
    5. ' ).' → logprob: -13.500061988830566
    6. '           ' → logprob: -13.875061988830566
    7. ')' → logprob: -14.500061988830566
    8. '        ' → logprob: -16.000062942504883
    9. ' ' → logprob: -16.000062942504883
    10. '      ' → logprob: -16.375062942504883

Token 896: 'evaluate' (ID: 114439)
  Prédit: 'evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -3.128163257315464e-07
    2. ' evaluate' → logprob: -15.75
    3. '.evaluate' → logprob: -16.0
    4. 'eval' → logprob: -18.375
    5. 'valuate' → logprob: -21.25
    6. '_e' → logprob: -22.0
    7. 'execute' → logprob: -22.75
    8. ' ' → logprob: -22.75
    9. 'Evaluate' → logprob: -23.25
    10. '_eval' → logprob: -23.375

Token 897: '()

' (ID: 5874)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12924525141716003
    2. '<|end|>' → logprob: -2.3792452812194824
    3. '
' → logprob: -3.7542452812194824
    4. '        
' → logprob: -6.129245281219482
    5. '```' → logprob: -7.129245281219482
    6. '<|end|>' → logprob: -7.379245281219482
    7. ',' → logprob: -7.504245281219482
    8. ')' → logprob: -8.004244804382324
    9. '  
' → logprob: -8.629244804382324
    10. '#' → logprob: -9.504244804382324

Token 898: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016790032386779785
    2. '```' → logprob: -4.76678991317749
    3. 'if' → logprob: -5.01678991317749
    4. '
' → logprob: -7.26678991317749
    5. 'import' → logprob: -7.89178991317749
    6. ' if' → logprob: -8.016790390014648
    7. '        
' → logprob: -9.391790390014648
    8. '``' → logprob: -11.516790390014648
    9. '#' → logprob: -11.891790390014648
    10. '   ' → logprob: -12.516790390014648

Token 899: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.029977947473526
    2. 'import' → logprob: -4.029977798461914
    3. '       ' → logprob: -5.029977798461914
    4. '#' (adapté à ' #') → logprob: -5.279977798461914
    5. ' if' → logprob: -9.904977798461914
    6. 'from' → logprob: -10.154977798461914
    7. '```' → logprob: -10.279977798461914
    8. '
' → logprob: -12.904977798461914
    9. '        
' → logprob: -14.779977798461914
    10. 'If' → logprob: -15.279977798461914

Token 900: ' Handle' (ID: 25041)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12814462184906006
    2. '#' → logprob: -2.1281447410583496
    3. 'import' → logprob: -6.87814474105835
    4. '       ' → logprob: -8.878144264221191
    5. 'from' → logprob: -10.753144264221191
    6. '
' → logprob: -10.878144264221191
    7. ' if' → logprob: -12.878144264221191
    8. '```' → logprob: -14.128144264221191
    9. '        
' → logprob: -14.253144264221191
    10. 'def' → logprob: -14.253144264221191

Token 901: ' the' (ID: 290)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4688832759857178
    2. '#' → logprob: -1.2188832759857178
    3. 'base' → logprob: -2.8438832759857178
    4. '0' → logprob: -3.9688832759857178
    5. '(base' → logprob: -7.343883514404297
    6. 'import' → logprob: -7.843883514404297
    7. '(' → logprob: -8.718883514404297
    8. ' base' → logprob: -8.843883514404297
    9. ' if' → logprob: -9.343883514404297
    10. 'special' → logprob: -9.468883514404297

Token 902: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.025302711874246597
    2. '#' → logprob: -3.7753026485443115
    3. 'import' → logprob: -6.275302886962891
    4. '       ' → logprob: -8.90030288696289
    5. '```' → logprob: -10.90030288696289
    6. ' if' → logprob: -11.77530288696289
    7. 'special' → logprob: -12.77530288696289
    8. '
' → logprob: -13.02530288696289
    9. '0' → logprob: -13.65030288696289
    10. '``' → logprob: -13.77530288696289

Token 903: '0' (ID: 15)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.062109749764204025
    2. '#' → logprob: -2.8121097087860107
    3. 'import' → logprob: -9.06210994720459
    4. '0' → logprob: -11.06210994720459
    5. '       ' → logprob: -12.56210994720459
    6. '```' → logprob: -12.93710994720459
    7. ' if' → logprob: -13.68710994720459
    8. '
' → logprob: -14.18710994720459
    9. 'from' → logprob: -14.56210994720459
    10. ' #' → logprob: -14.68710994720459

Token 904: '^' (ID: 61)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18122224509716034
    2. ' if' → logprob: -2.9312222003936768
    3. '==' → logprob: -3.4312222003936768
    4. 'and' → logprob: -3.9312222003936768
    5. '1' → logprob: -4.306222438812256
    6. 'base' → logprob: -4.431222438812256
    7. ' and' → logprob: -4.431222438812256
    8. '**' → logprob: -4.931222438812256
    9. ' ==' → logprob: -5.056222438812256
    10. 'bases' → logprob: -5.931222438812256

Token 905: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010894970037043095
    2. ' ' → logprob: -7.626089572906494
    3. 'base' → logprob: -7.876089572906494
    4. 'if' → logprob: -9.251089096069336
    5. '#' → logprob: -10.376089096069336
    6. '
' → logprob: -10.501089096069336
    7. ' base' → logprob: -10.501089096069336
    8. '1' → logprob: -11.626089096069336
    9. '```' → logprob: -12.376089096069336
    10. ' if' → logprob: -12.751089096069336

Token 906: ' case' (ID: 1890)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04530269652605057
    2. '       ' → logprob: -3.295302629470825
    3. ' if' → logprob: -5.295302867889404
    4. '
' → logprob: -6.170302867889404
    5. 'case' → logprob: -9.295302391052246
    6. ' case' → logprob: -11.295302391052246
    7. '=' → logprob: -12.545302391052246
    8. '```' → logprob: -12.545302391052246
    9. '   ' → logprob: -12.670302391052246
    10. ':' → logprob: -12.795302391052246

Token 907: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015976991271600127
    2. 'if' → logprob: -6.501597881317139
    3. ' if' → logprob: -9.37659740447998
    4. '```' → logprob: -11.50159740447998
    5. '
' → logprob: -15.00159740447998
    6. '        
' → logprob: -16.126598358154297
    7. '           ' → logprob: -17.251598358154297
    8. '      ' → logprob: -17.251598358154297
    9. '``' → logprob: -17.251598358154297
    10. '   ' → logprob: -18.126598358154297

Token 908: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.702760636806488
    2. 'if' → logprob: -1.3277606964111328
    3. 'per' → logprob: -1.7027606964111328
    4. 'specified' → logprob: -4.202760696411133
    5. ' per' → logprob: -4.827760696411133
    6. 'mentioned' → logprob: -4.952760696411133
    7. 'f' → logprob: -5.327760696411133
    8. 'des' → logprob: -5.452760696411133
    9. '1' → logprob: -5.702760696411133
    10. ' if' → logprob: -5.827760696411133

Token 909: '1' (ID: 16)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.33383217453956604
    2. '       ' → logprob: -2.583832263946533
    3. 'specified' → logprob: -2.708832263946533
    4. 'if' → logprob: -2.833832263946533
    5. '1' → logprob: -2.958832263946533
    6. 'mentioned' → logprob: -5.083832263946533
    7. 'not' → logprob: -5.458832263946533
    8. 'des' → logprob: -5.583832263946533
    9. ' per' → logprob: -5.708832263946533
    10. '           ' → logprob: -5.958832263946533

Token 910: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00625819293782115
    2. 'if' → logprob: -5.381258010864258
    3. '
' → logprob: -7.131258010864258
    4. ' if' → logprob: -7.131258010864258
    5. '        
' → logprob: -10.381258010864258
    6. '   ' → logprob: -13.256258010864258
    7. ',' → logprob: -13.756258010864258
    8. '```' → logprob: -14.006258010864258
    9. '           ' → logprob: -14.631258010864258
    10. '      ' → logprob: -14.881258010864258

Token 911: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017517358355689794
    2. '```' → logprob: -9.375175476074219
    3. 'if' → logprob: -9.875175476074219
    4. '
' → logprob: -10.750175476074219
    5. ' if' → logprob: -11.125175476074219
    6. '        
' → logprob: -13.125175476074219
    7. '``' → logprob: -14.875175476074219
    8. '           ' → logprob: -16.62517547607422
    9. '   ' → logprob: -16.87517547607422
    10. '      ' → logprob: -17.37517547607422

Token 912: ' def' (ID: 1056)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008689153008162975
    2. '       ' → logprob: -4.758688926696777
    3. ' if' → logprob: -9.508688926696777
    4. '```' → logprob: -14.758688926696777
    5. '
' → logprob: -18.133689880371094
    6. '   ' → logprob: -18.383689880371094
    7. '	if' → logprob: -18.383689880371094
    8. 'If' → logprob: -19.008689880371094
    9. '``' → logprob: -19.008689880371094
    10. '#' → logprob: -19.008689880371094

Token 913: ' val' (ID: 1459)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.2601321339607239
    2. 'handle' → logprob: -1.885132074356079
    3. 'pow' → logprob: -3.010132074356079
    4. 'safe' → logprob: -4.885132312774658
    5. 'normalize' → logprob: -5.635132312774658
    6. 'power' → logprob: -5.760132312774658
    7. 'special' → logprob: -5.885132312774658
    8. 'value' → logprob: -6.135132312774658
    9. '_zero' → logprob: -6.135132312774658
    10. 'base' → logprob: -6.385132312774658

Token 914: '(base' (ID: 25314)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0146385682746768
    2. '=' → logprob: -5.639638423919678
    3. ' =' → logprob: -5.764638423919678
    4. '(' → logprob: -6.014638423919678
    5. 'uate' → logprob: -6.014638423919678
    6. '(base' → logprob: -7.014638423919678
    7. '1' → logprob: -7.514638423919678
    8. 'ues' → logprob: -8.264638900756836
    9. '   ' → logprob: -8.514638900756836
    10. '(
' → logprob: -8.639638900756836

Token 915: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1606391966342926
    2. '):' → logprob: -2.5356392860412598
    3. '1' → logprob: -3.1606392860412598
    4. '(base' → logprob: -3.9106392860412598
    5. '):
' → logprob: -5.66063928604126
    6. ')' → logprob: -6.41063928604126
    7. 'base' → logprob: -8.160638809204102
    8. '=' → logprob: -8.160638809204102
    9. '   ' → logprob: -8.410638809204102
    10. '(' → logprob: -8.660638809204102

Token 916: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.6351349949836731
    2. 'ex' → logprob: -0.7601349949836731
    3. ' exponent' → logprob: -6.510135173797607
    4. 'expo' → logprob: -7.510135173797607
    5. ' exp' → logprob: -7.760135173797607
    6. '   ' → logprob: -10.63513469696045
    7. 'e' → logprob: -11.38513469696045
    8. ')' → logprob: -12.38513469696045
    9. ' expo' → logprob: -12.51013469696045
    10. '       ' → logprob: -12.51013469696045

Token 917: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5761083960533142
    2. '):' → logprob: -0.8261083960533142
    3. '):
' → logprob: -9.7011079788208
    4. ')' → logprob: -10.0761079788208
    5. ':' → logprob: -10.5761079788208
    6. '1' → logprob: -10.8261079788208
    7. '   ' → logprob: -11.5761079788208
    8. ',' → logprob: -12.7011079788208
    9. '_base' → logprob: -12.9511079788208
    10. '):

' → logprob: -13.4511079788208

Token 918: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43073680996894836
    2. '           ' → logprob: -1.930736780166626
    3. ' if' → logprob: -2.180736780166626
    4. ':' → logprob: -3.055736780166626
    5. 'if' → logprob: -3.555736780166626
    6. ':
' → logprob: -5.180737018585205
    7. '        ' → logprob: -5.430737018585205
    8. '        
' → logprob: -6.430737018585205
    9. '(' → logprob: -7.055737018585205
    10. '               ' → logprob: -7.180737018585205

Token 919: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12888482213020325
    2. ' if' → logprob: -2.128884792327881
    3. '       ' → logprob: -6.378884792327881
    4. 'return' → logprob: -8.753885269165039
    5. '           ' → logprob: -9.628885269165039
    6. '   ' → logprob: -10.503885269165039
    7. ' return' → logprob: -12.753885269165039
    8. '               ' → logprob: -13.503885269165039
    9. ' ' → logprob: -13.628885269165039
    10. '	if' → logprob: -13.878885269165039

Token 920: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.006715967319905758
    2. ' base' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.256715774536133
    4. '(base' → logprob: -15.631715774536133
    5. '	base' → logprob: -16.381715774536133
    6. ' ' → logprob: -16.506715774536133
    7. 'Base' → logprob: -17.256715774536133
    8. '_base' → logprob: -18.006715774536133
    9. '    ' → logprob: -18.881715774536133
    10. '
' → logprob: -19.131715774536133

Token 921: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20143049955368042
    2. ' ==' → logprob: -1.7014305591583252
    3. '==
' → logprob: -11.326430320739746
    4. ')==' → logprob: -12.826430320739746
    5. '=' → logprob: -14.326430320739746
    6. ']==' → logprob: -14.576430320739746
    7. '```' → logprob: -14.826430320739746
    8. '()==' → logprob: -14.826430320739746
    9. '===' → logprob: -15.951430320739746
    10. ',' → logprob: -16.451431274414062

Token 922: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '<|end|>' → logprob: -18.62500762939453
    4. '۰' → logprob: -19.00000762939453
    5. '=' → logprob: -19.75000762939453
    6. '```' → logprob: -19.87500762939453
    7. '   ' → logprob: -20.12500762939453
    8. 'zero' → logprob: -20.75000762939453
    9. '
' → logprob: -21.12500762939453
    10. '1' → logprob: -21.18750762939453

Token 923: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '۰' → logprob: -17.750001907348633
    4. '1' → logprob: -19.125001907348633
    5. 'base' → logprob: -19.750001907348633
    6. '০' → logprob: -20.437501907348633
    7. 'zero' → logprob: -20.437501907348633
    8. '=' → logprob: -20.500001907348633
    9. '[' → logprob: -20.562501907348633
    10. '```' → logprob: -20.625001907348633

Token 924: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.06196925416588783
    2. ' and' → logprob: -2.81196928024292
    3. '           ' → logprob: -13.811968803405762
    4. '	and' → logprob: -15.186968803405762
    5. '   ' → logprob: -15.811968803405762
    6. '               ' → logprob: -16.561969757080078
    7. ':
' → logprob: -16.686969757080078
    8. ' ' → logprob: -17.061969757080078
    9. '       ' → logprob: -17.936969757080078
    10. ' и' → logprob: -18.561969757080078

Token 925: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -6.659005157416686e-05
    2. ' exp' → logprob: -9.625066757202148
    3. '(exp' → logprob: -14.875066757202148
    4. '   ' → logprob: -17.37506675720215
    5. '	exp' → logprob: -18.00006675720215
    6. '           ' → logprob: -18.50006675720215
    7. ' ' → logprob: -18.62506675720215
    8. 'ex' → logprob: -18.75006675720215
    9. 'base' → logprob: -19.12506675720215
    10. '       ' → logprob: -19.62506675720215

Token 926: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1269480586051941
    2. ' ==' → logprob: -2.126948118209839
    3. ')==' → logprob: -11.376948356628418
    4. '<|end|>' → logprob: -12.626948356628418
    5. ']==' → logprob: -13.251948356628418
    6. '=' → logprob: -13.626948356628418
    7. '==
' → logprob: -13.876948356628418
    8. '()==' → logprob: -14.876948356628418
    9. '===' → logprob: -15.126948356628418
    10. '<|end|>' → logprob: -15.376948356628418

Token 927: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '   ' → logprob: -18.250179290771484
    4. '۰' → logprob: -18.312679290771484
    5. '00' → logprob: -19.375179290771484
    6. '  ' → logprob: -19.562679290771484
    7. '```' → logprob: -20.187679290771484
    8. 'zero' → logprob: -20.312679290771484
    9. '০' → logprob: -20.625179290771484
    10. '٠' → logprob: -20.687679290771484

Token 928: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '۰' → logprob: -18.750001907348633
    4. '   ' → logprob: -20.500001907348633
    5. '<|end|>' → logprob: -21.125001907348633
    6. 'zero' → logprob: -21.500001907348633
    7. '```' → logprob: -21.625001907348633
    8. '০' → logprob: -21.625001907348633
    9. '[' → logprob: -21.812501907348633
    10. '00' → logprob: -21.875001907348633

Token 929: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.015429669059813023
    2. '               ' → logprob: -4.765429496765137
    3. ':' → logprob: -5.015429496765137
    4. '):
' → logprob: -9.265429496765137
    5. '           ' → logprob: -10.140429496765137
    6. ':return' → logprob: -11.015429496765137
    7. 'return' → logprob: -12.640429496765137
    8. ':
' → logprob: -14.265429496765137
    9. ',' → logprob: -14.390429496765137
    10. '():
' → logprob: -14.765429496765137

Token 930: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0033933715894818306
    2. ':
' → logprob: -6.253393173217773
    3. ' return' → logprob: -7.753393173217773
    4. ':' → logprob: -7.878393173217773
    5. 'return' → logprob: -8.128393173217773
    6. '           ' → logprob: -8.253393173217773
    7. ':return' → logprob: -9.753393173217773
    8. '):
' → logprob: -11.128393173217773
    9. '	           ' → logprob: -12.628393173217773
    10. '              ' → logprob: -13.003393173217773

Token 931: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003737018210813403
    2. ' return' → logprob: -5.753736972808838
    3. '               ' → logprob: -7.503736972808838
    4. '           ' → logprob: -11.878737449645996
    5. '1' → logprob: -14.753737449645996
    6. '   ' → logprob: -14.753737449645996
    7. '	return' → logprob: -15.628737449645996
    8. '                   ' → logprob: -16.37873649597168
    9. '
' → logprob: -16.50373649597168
    10. ':return' → logprob: -17.37873649597168

Token 932: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '   ' → logprob: -20.125
    4. 'float' → logprob: -20.875
    5. '۱' → logprob: -23.25
    6. '           ' → logprob: -23.5
    7. '       ' → logprob: -23.75
    8. '１' → logprob: -24.125
    9. '```' → logprob: -24.375
    10. '`' → logprob: -24.5

Token 933: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '   ' → logprob: -19.0
    4. 'float' → logprob: -19.5
    5. '۱' → logprob: -21.125
    6. '１' → logprob: -22.25
    7. '```' → logprob: -22.25
    8. '`' → logprob: -22.625
    9. '       ' → logprob: -23.1875
    10. 'pow' → logprob: -23.4375

Token 934: '.' (ID: 13)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5493277311325073
    2. '
' → logprob: -0.9243277311325073
    3. '<|end|>' → logprob: -4.424327850341797
    4. '.' → logprob: -5.299327850341797
    5. '       ' → logprob: -5.549327850341797
    6. '            
' → logprob: -6.674327850341797
    7. '0' → logprob: -7.299327850341797
    8. ',' → logprob: -8.049327850341797
    9. 'return' → logprob: -8.299327850341797
    10. '  
' → logprob: -8.299327850341797

Token 935: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.0
    3. 'return' → logprob: -19.25
    4. '```' → logprob: -20.125
    5. ')' → logprob: -21.5
    6. '.' → logprob: -21.625
    7. 'def' → logprob: -21.75
    8. '       ' → logprob: -22.125
    9. '
' → logprob: -22.25
    10. '   ' → logprob: -22.375

Token 936: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015919883735477924
    2. '
' → logprob: -6.87659215927124
    3. 'return' → logprob: -8.251591682434082
    4. ' return' → logprob: -9.251591682434082
    5. '            
' → logprob: -9.251591682434082
    6. ',' → logprob: -10.126591682434082
    7. '          ' → logprob: -11.126591682434082
    8. ' 
' → logprob: -11.876591682434082
    9. '		' → logprob: -12.126591682434082
    10. '       ' → logprob: -12.126591682434082

Token 937: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022987050469964743
    2. '
' → logprob: -6.252298831939697
    3. 'return' → logprob: -8.252298355102539
    4. '       ' → logprob: -10.252298355102539
    5. ' return' → logprob: -10.627298355102539
    6. '            
' → logprob: -11.252298355102539
    7. ' 
' → logprob: -11.502298355102539
    8. '               ' → logprob: -12.502298355102539
    9. ',' → logprob: -12.502298355102539
    10. ' if' → logprob: -12.752298355102539

Token 938: ' try' (ID: 2075)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3450903296470642
    2. 'if' → logprob: -1.470090389251709
    3. 'return' → logprob: -3.720090389251709
    4. '           ' → logprob: -3.845090389251709
    5. '       ' → logprob: -4.345090389251709
    6. ' return' → logprob: -5.845090389251709
    7. 'elif' → logprob: -8.22008991241455
    8. ' elif' → logprob: -9.47008991241455
    9. '
' → logprob: -9.97008991241455
    10. '        
' → logprob: -11.09508991241455

Token 939: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3237933814525604
    2. ':
' → logprob: -1.4487934112548828
    3. '               ' → logprob: -3.198793411254883
    4. ':return' → logprob: -7.448793411254883
    5. '           ' → logprob: -8.698793411254883
    6. '):
' → logprob: -10.073793411254883
    7. '       ' → logprob: -10.698793411254883
    8. '   ' → logprob: -11.198793411254883
    9. 'return' → logprob: -11.448793411254883
    10. ' :' → logprob: -11.448793411254883

Token 940: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08029431104660034
    2. ':' → logprob: -2.955294370651245
    3. ':
' → logprob: -3.830294370651245
    4. 'return' → logprob: -6.705294132232666
    5. ':return' → logprob: -6.955294132232666
    6. '           ' → logprob: -7.580294132232666
    7. ' return' → logprob: -8.205294609069824
    8. '                   ' → logprob: -8.955294609069824
    9. '	           ' → logprob: -9.455294609069824
    10. '              ' → logprob: -9.955294609069824

Token 941: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.45449596643447876
    2. 'return' → logprob: -1.204495906829834
    3. ' return' → logprob: -2.829495906829834
    4. '               ' → logprob: -5.579495906829834
    5. ' import' → logprob: -6.704495906829834
    6. '                   ' → logprob: -7.454495906829834
    7. '{return' → logprob: -8.204496383666992
    8. 'from' → logprob: -8.329496383666992
    9. '{
' → logprob: -9.954496383666992
    10. '	return' → logprob: -10.204496383666992

Token 942: ' For' (ID: 2214)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7237977981567383
    2. 'return' → logprob: -0.7237977981567383
    3. '               ' → logprob: -4.098797798156738
    4. ' return' → logprob: -4.473797798156738
    5. 'if' → logprob: -7.098797798156738
    6. ' import' → logprob: -7.223797798156738
    7. ' if' → logprob: -9.098797798156738
    8. '                   ' → logprob: -9.098797798156738
    9. 'from' → logprob: -9.098797798156738
    10. '           ' → logprob: -9.348797798156738

Token 943: ' large' (ID: 4410)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.07345443218946457
    2. 'import' → logprob: -3.6984543800354004
    3. 'exp' → logprob: -3.9484543800354004
    4. ' base' → logprob: -4.0734543800354
    5. 'math' → logprob: -5.0734543800354
    6. '0' → logprob: -6.1984543800354
    7. 'abs' → logprob: -7.9484543800354
    8. ' math' → logprob: -8.198454856872559
    9. 'float' → logprob: -8.573454856872559
    10. 'ex' → logprob: -9.073454856872559

Token 944: ' ex' (ID: 513)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.43461689352989197
    2. 'import' → logprob: -1.8096169233322144
    3. 'ex' → logprob: -2.184616804122925
    4. ' base' → logprob: -3.309616804122925
    5. 'exp' → logprob: -3.434616804122925
    6. 'pow' → logprob: -5.809617042541504
    7. 'bases' → logprob: -7.059617042541504
    8. 'value' → logprob: -7.309617042541504
    9. '(base' → logprob: -7.559617042541504
    10. ' import' → logprob: -7.809617042541504

Token 945: 'ponents' (ID: 4331)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0554613433778286
    2. 'ponent' → logprob: -3.4304614067077637
    3. 'ponents' → logprob: -3.9304614067077637
    4. 'ps' → logprob: -7.305461406707764
    5. 'pow' → logprob: -8.055460929870605
    6. 'base' → logprob: -8.305460929870605
    7. '**' → logprob: -8.555460929870605
    8. 'port' → logprob: -9.180460929870605
    9. '```' → logprob: -9.430460929870605
    10. 'import' → logprob: -9.930460929870605

Token 946: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33682188391685486
    2. '               ' → logprob: -1.4618219137191772
    3. ' return' → logprob: -3.5868217945098877
    4. 'import' → logprob: -4.211822032928467
    5. 'return' → logprob: -5.086822032928467
    6. ' if' → logprob: -6.211822032928467
    7. '                   ' → logprob: -6.586822032928467
    8. ' ,' → logprob: -7.336822032928467
    9. ' import' → logprob: -7.336822032928467
    10. ',
' → logprob: -8.211821556091309

Token 947: ' use' (ID: 1199)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.18730708956718445
    2. ' return' → logprob: -2.562307119369507
    3. ' import' → logprob: -2.687307119369507
    4. 'return' → logprob: -4.062306880950928
    5. ' if' → logprob: -5.687306880950928
    6. '               ' → logprob: -6.187306880950928
    7. ' math' → logprob: -6.187306880950928
    8. '                   ' → logprob: -7.562306880950928
    9. 'math' → logprob: -8.437307357788086
    10. 'if' → logprob: -9.187307357788086

Token 948: ' logs' (ID: 35408)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3901638090610504
    2. 'math' → logprob: -1.140163779258728
    3. 'log' → logprob: -6.515163898468018
    4. ' math' → logprob: -7.390163898468018
    5. 'float' → logprob: -7.765163898468018
    6. 'base' → logprob: -7.890163898468018
    7. 'pow' → logprob: -8.26516342163086
    8. 'max' → logprob: -9.89016342163086
    9. 'from' → logprob: -10.89016342163086
    10. ' import' → logprob: -10.89016342163086

Token 949: ' to' (ID: 316)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2741227447986603
    2. '               ' → logprob: -1.899122714996338
    3. 'return' → logprob: -4.024122714996338
    4. '(base' → logprob: -4.274122714996338
    5. '(math' → logprob: -4.399122714996338
    6. '           ' → logprob: -4.899122714996338
    7. ' import' → logprob: -5.149122714996338
    8. '                   ' → logprob: -5.399122714996338
    9. ' return' → logprob: -5.399122714996338
    10. ' if' → logprob: -5.399122714996338

Token 950: ' compare' (ID: 12221)
  Prédit: 'avoid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'avoid' → logprob: -0.39740264415740967
    2. 'handle' → logprob: -2.147402763366699
    3. 'estimate' → logprob: -2.772402763366699
    4. 'compare' → logprob: -2.897402763366699
    5. 'return' → logprob: -3.647402763366699
    6. 'import' → logprob: -3.897402763366699
    7. 'approx' → logprob: -3.897402763366699
    8. 'compute' → logprob: -4.647402763366699
    9. 'calculate' → logprob: -5.022402763366699
    10. 'prevent' → logprob: -5.272402763366699

Token 951: ' size' (ID: 2349)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.021312033757567406
    2. '               ' → logprob: -4.521312236785889
    3. ' import' → logprob: -5.521312236785889
    4. 'return' → logprob: -5.896312236785889
    5. ' return' → logprob: -6.771312236785889
    6. ' if' → logprob: -6.771312236785889
    7. 'if' → logprob: -8.02131175994873
    8. '                   ' → logprob: -8.89631175994873
    9. ' (' → logprob: -9.14631175994873
    10. '           ' → logprob: -9.27131175994873

Token 952: ' instead' (ID: 7665)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02560277469456196
    2. 'import' → logprob: -3.7756028175354004
    3. ',' → logprob: -7.2756028175354
    4. '           ' → logprob: -7.7756028175354
    5. ' import' → logprob: -8.150602340698242
    6. ' return' → logprob: -9.150602340698242
    7. '<|end|>' → logprob: -9.275602340698242
    8. 'return' → logprob: -9.400602340698242
    9. '                   ' → logprob: -9.650602340698242
    10. '                ' → logprob: -9.775602340698242

Token 953: ' of' (ID: 328)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.234577015042305
    2. '           ' → logprob: -1.9845770597457886
    3. 'import' → logprob: -2.984576940536499
    4. 'return' → logprob: -5.359577178955078
    5. 'instead' → logprob: -5.359577178955078
    6. 'except' → logprob: -5.484577178955078
    7. '
' → logprob: -6.859577178955078
    8. ',' → logprob: -6.859577178955078
    9. '                   ' → logprob: -6.984577178955078
    10. 'if' → logprob: -7.234577178955078

Token 954: ' numbers' (ID: 8663)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.41521191596984863
    2. 'direct' → logprob: -1.5402119159698486
    3. ' direct' → logprob: -3.0402119159698486
    4. 'comput' → logprob: -4.1652116775512695
    5. 'overflow' → logprob: -4.7902116775512695
    6. 'exp' → logprob: -5.0402116775512695
    7. 'float' → logprob: -5.1652116775512695
    8. 'raising' → logprob: -5.2902116775512695
    9. 'power' → logprob: -5.2902116775512695
    10. '**' → logprob: -5.4152116775512695

Token 955: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03142591565847397
    2. 'import' → logprob: -3.531425952911377
    3. '           ' → logprob: -7.281425952911377
    4. '                   ' → logprob: -8.156425476074219
    5. ' import' → logprob: -8.906425476074219
    6. 'return' → logprob: -8.906425476074219
    7. ',' → logprob: -9.156425476074219
    8. ' if' → logprob: -9.906425476074219
    9. 'except' → logprob: -9.906425476074219
    10. ' return' → logprob: -10.031425476074219

Token 956: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019056905061006546
    2. 'import' → logprob: -4.769056797027588
    3. '           ' → logprob: -5.144056797027588
    4. 'return' → logprob: -5.769056797027588
    5. ' return' → logprob: -7.894056797027588
    6. '
' → logprob: -8.269057273864746
    7. ':
' → logprob: -8.644057273864746
    8. '{
' → logprob: -9.394057273864746
    9. ')' → logprob: -9.519057273864746
    10. '                   ' → logprob: -9.644057273864746

Token 957: ' if' (ID: 538)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.024798139929771423
    2. 'return' → logprob: -4.2747979164123535
    3. 'from' → logprob: -5.2747979164123535
    4. ' import' → logprob: -6.2747979164123535
    5. ' return' → logprob: -6.6497979164123535
    6. '                   ' → logprob: -7.2747979164123535
    7. 'if' (adapté à ' if') → logprob: -7.2747979164123535
    8. ' if' → logprob: -7.7747979164123535
    9. ' from' → logprob: -8.649798393249512
    10. '               ' → logprob: -8.774798393249512

Token 958: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.008860021829605103
    2. 'exp' → logprob: -5.258860111236572
    3. ' base' → logprob: -5.633860111236572
    4. '(base' → logprob: -10.883859634399414
    5. ' exp' → logprob: -11.508859634399414
    6. 'ex' → logprob: -12.133859634399414
    7. '   ' → logprob: -12.258859634399414
    8. ' ' → logprob: -13.508859634399414
    9. '	base' → logprob: -13.758859634399414
    10. '0' → logprob: -14.758859634399414

Token 959: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.40016821026802063
    2. '==' → logprob: -1.5251681804656982
    3. ' <=' → logprob: -2.4001681804656982
    4. '<=' → logprob: -3.9001681804656982
    5. '>' → logprob: -7.650168418884277
    6. ' >' → logprob: -7.650168418884277
    7. ' <' → logprob: -8.775168418884277
    8. '<' → logprob: -10.400168418884277
    9. ' ' → logprob: -10.525168418884277
    10. ')' → logprob: -11.400168418884277

Token 960: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009637462790124118
    2. ' ' → logprob: -7.0009636878967285
    3. '1' → logprob: -9.875964164733887
    4. '=' → logprob: -15.813464164733887
    5. '   ' → logprob: -15.875964164733887
    6. '[' → logprob: -16.75096321105957
    7. '  ' → logprob: -17.06346321105957
    8. '۰' → logprob: -17.06346321105957
    9. '```' → logprob: -17.06346321105957
    10. 'base' → logprob: -17.06346321105957

Token 961: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.125005722045898
    3. '1' → logprob: -14.500005722045898
    4. '۰' → logprob: -18.6250057220459
    5. '```' → logprob: -19.3750057220459
    6. '   ' → logprob: -19.3750057220459
    7. '[' → logprob: -19.8125057220459
    8. '=' → logprob: -19.8750057220459
    9. '>' → logprob: -20.3750057220459
    10. 'base' → logprob: -20.4375057220459

Token 962: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2687893211841583
    2. ':
' → logprob: -1.893789291381836
    3. 'and' → logprob: -3.268789291381836
    4. '               ' → logprob: -3.518789291381836
    5. '           ' → logprob: -4.518789291381836
    6. ':' → logprob: -5.643789291381836
    7. '                   ' → logprob: -6.518789291381836
    8. ',' → logprob: -7.393789291381836
    9. ':return' → logprob: -8.268789291381836
    10. ' or' → logprob: -8.393789291381836

Token 963: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10109993815422058
    2. ':
' → logprob: -2.851099967956543
    3. '                   ' → logprob: -3.851099967956543
    4. ':' → logprob: -5.101099967956543
    5. ' return' → logprob: -5.101099967956543
    6. ' and' → logprob: -5.851099967956543
    7. '           ' → logprob: -7.476099967956543
    8. 'return' → logprob: -7.851099967956543
    9. ':return' → logprob: -8.226099967956543
    10. ' :
' → logprob: -8.726099967956543

Token 964: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02365328185260296
    2. 'return' (adapté à ' return') → logprob: -3.773653268814087
    3. '                   ' → logprob: -8.273653030395508
    4. ' return' → logprob: -9.273653030395508
    5. ' ' → logprob: -10.148653030395508
    6. '               ' → logprob: -11.273653030395508
    7. 'if' → logprob: -12.273653030395508
    8. '                       ' → logprob: -13.898653030395508
    9. '   ' → logprob: -14.773653030395508
    10. '           ' → logprob: -15.273653030395508

Token 965: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000158842682139948
    2. ' ' → logprob: -8.75015926361084
    3. 'float' → logprob: -16.000158309936523
    4. '   ' → logprob: -16.750158309936523
    5. '  ' → logprob: -17.375158309936523
    6. '1' → logprob: -17.500158309936523
    7. '     ' → logprob: -18.750158309936523
    8. '-' → logprob: -18.875158309936523
    9. '۰' → logprob: -19.125158309936523
    10. ' ' → logprob: -19.437658309936523

Token 966: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.875000953674316
    3. 'float' → logprob: -15.375000953674316
    4. '1' → logprob: -16.5
    5. '-' → logprob: -16.8125
    6. '۰' → logprob: -17.6875
    7. '   ' → logprob: -18.0
    8. '.' → logprob: -18.5625
    9. 'return' → logprob: -18.6875
    10. 'base' → logprob: -19.1875

Token 967: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.2664456789934775e-06
    2. '.
' → logprob: -13.750000953674316
    3. '<|end|>' → logprob: -16.750001907348633
    4. '0' → logprob: -17.750001907348633
    5. '               ' → logprob: -18.125001907348633
    6. ' .' → logprob: -18.250001907348633
    7. '           ' → logprob: -19.375001907348633
    8. '.,' → logprob: -19.375001907348633
    9. '**' → logprob: -19.750001907348633
    10. '<|end|>' → logprob: -19.875001907348633

Token 968: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '```' → logprob: -18.875
    3. 'return' → logprob: -19.5
    4. 'float' → logprob: -20.375
    5. 'value' → logprob: -21.375
    6. ' ' → logprob: -21.5
    7. '.' → logprob: -21.625
    8. '۰' → logprob: -21.75
    9. '`' → logprob: -21.875
    10. '   ' → logprob: -22.375

Token 969: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3361039161682129
    2. '
' → logprob: -1.961103916168213
    3. '           ' → logprob: -1.961103916168213
    4. '            
' → logprob: -6.211103916168213
    5. '                
' → logprob: -7.586103916168213
    6. ',' → logprob: -8.086103439331055
    7. 'return' → logprob: -8.211103439331055
    8. '<|end|>' → logprob: -8.461103439331055
    9. '
' → logprob: -8.836103439331055
    10. '	           ' → logprob: -9.461103439331055

Token 970: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8036735653877258
    2. '           ' → logprob: -1.053673505783081
    3. '
' → logprob: -1.678673505783081
    4. '            
' → logprob: -5.17867374420166
    5. ' 
' → logprob: -5.80367374420166
    6. 'return' → logprob: -6.30367374420166
    7. ' return' → logprob: -6.67867374420166
    8. '                
' → logprob: -6.92867374420166
    9. ' if' → logprob: -7.30367374420166
    10. ',' → logprob: -7.67867374420166

Token 971: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5004475116729736
    2. 'if' (adapté à ' if') → logprob: -2.0004475116729736
    3. '               ' → logprob: -2.1254475116729736
    4. 'import' → logprob: -2.3754475116729736
    5. 'return' → logprob: -4.1254472732543945
    6. ' import' → logprob: -4.2504472732543945
    7. ' return' → logprob: -4.2504472732543945
    8. '           ' → logprob: -7.5004472732543945
    9. '
' → logprob: -8.625447273254395
    10. 'log' → logprob: -9.000447273254395

Token 972: ' exp' (ID: 2794)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.166705921292305
    2. 'exp' → logprob: -1.9167059659957886
    3. ' base' → logprob: -5.166706085205078
    4. ' exp' → logprob: -7.541706085205078
    5. '(base' → logprob: -9.041706085205078
    6. 'ex' → logprob: -10.416706085205078
    7. 'abs' → logprob: -11.166706085205078
    8. 'log' → logprob: -11.541706085205078
    9. '(exp' → logprob: -11.541706085205078
    10. '   ' → logprob: -12.166706085205078

Token 973: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3980826139450073
    2. '==' → logprob: -1.3980826139450073
    3. ' <=' → logprob: -3.023082733154297
    4. '<=' → logprob: -4.398082733154297
    5. ' <' → logprob: -4.398082733154297
    6. '<' → logprob: -5.648082733154297
    7. ' >' → logprob: -5.773082733154297
    8. '>' → logprob: -7.023082733154297
    9. ' ' → logprob: -8.648082733154297
    10. ' >=' → logprob: -8.648082733154297

Token 974: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13513116538524628
    2. '709' → logprob: -2.8851311206817627
    3. '700' → logprob: -3.7601311206817627
    4. '100' → logprob: -3.8851311206817627
    5. '50' → logprob: -4.010131359100342
    6. '20' → logprob: -5.135131359100342
    7. '0' → logprob: -7.135131359100342
    8. '90' → logprob: -7.385131359100342
    9. '30' → logprob: -8.135130882263184
    10. '900' → logprob: -8.260130882263184

Token 975: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012040284462273121
    2. '100' → logprob: -5.262040138244629
    3. '50' → logprob: -6.387040138244629
    4. '20' → logprob: -6.387040138244629
    5. '709' → logprob: -6.637040138244629
    6. '700' → logprob: -6.887040138244629
    7. '9' → logprob: -7.762040138244629
    8. '900' → logprob: -8.012040138244629
    9. '0' → logprob: -8.887040138244629
    10. '30' → logprob: -9.637040138244629

Token 976: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2262841910123825
    2. '9' → logprob: -1.601284146308899
    3. '09' → logprob: -7.226284027099609
    4. '8' → logprob: -9.97628402709961
    5. '009' → logprob: -10.72628402709961
    6. '+' → logprob: -11.47628402709961
    7. ' ' → logprob: -11.47628402709961
    8. '000' → logprob: -11.85128402709961
    9. '   ' → logprob: -11.97628402709961
    10. '```' → logprob: -11.97628402709961

Token 977: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.8206473871250637e-05
    2. '8' → logprob: -11.750028610229492
    3. '10' → logprob: -12.000028610229492
    4. '6' → logprob: -12.250028610229492
    5. '-' → logprob: -12.750028610229492
    6. '09' → logprob: -13.375028610229492
    7. '7' → logprob: -13.875028610229492
    8. '+' → logprob: -14.000028610229492
    9. '12' → logprob: -14.000028610229492
    10. '```' → logprob: -14.250028610229492

Token 978: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11334311962127686
    2. ':' → logprob: -3.1133432388305664
    3. '               ' → logprob: -3.6133432388305664
    4. '                   ' → logprob: -3.7383432388305664
    5. '           ' → logprob: -4.863343238830566
    6. ':return' → logprob: -6.738343238830566
    7. '):
' → logprob: -7.238343238830566
    8. ' :
' → logprob: -7.613343238830566
    9. '                       ' → logprob: -7.988343238830566
    10. ' and' → logprob: -8.238343238830566

Token 979: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7851464748382568
    2. '               ' → logprob: -1.2851464748382568
    3. ':
' → logprob: -1.6601464748382568
    4. ':' → logprob: -3.035146474838257
    5. ' return' → logprob: -4.160146713256836
    6. ':return' → logprob: -5.410146713256836
    7. '           ' → logprob: -5.535146713256836
    8. ' :
' → logprob: -6.910146713256836
    9. '):
' → logprob: -7.410146713256836
    10. '                ' → logprob: -7.535146713256836

Token 980: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' (adapté à ' exp') → logprob: -0.1975267380475998
    2. 'return' → logprob: -2.072526693344116
    3. '1' → logprob: -3.447526693344116
    4. 'import' → logprob: -4.072526931762695
    5. 'math' → logprob: -6.822526931762695
    6. '10' → logprob: -7.322526931762695
    7. ' return' → logprob: -7.447526931762695
    8. ' exp' → logprob: -7.447526931762695
    9. 'log' → logprob: -7.697526931762695
    10. 'ex' → logprob: -7.697526931762695

Token 981: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193077325820923
    2. ' =' → logprob: -1.5019307136535645
    3. ',' → logprob: -15.251931190490723
    4. '=
' → logprob: -15.501931190490723
    5. '=int' → logprob: -15.626931190490723
    6. 'import' → logprob: -16.001930236816406
    7. '   ' → logprob: -16.001930236816406
    8. '<|end|>' → logprob: -16.376930236816406
    9. '           ' → logprob: -16.626930236816406
    10. ' ' → logprob: -16.751930236816406

Token 982: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.12501335144043
    4. 'float' → logprob: -16.75001335144043
    5. 'int' → logprob: -18.00001335144043
    6. '  ' → logprob: -18.37501335144043
    7. '    ' → logprob: -19.37501335144043
    8. '           ' → logprob: -19.62501335144043
    9. '     ' → logprob: -20.50001335144043
    10. '       ' → logprob: -20.75001335144043

Token 983: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. 'float' → logprob: -16.375
    4. '   ' → logprob: -18.375
    5. 'int' → logprob: -18.875
    6. '100' → logprob: -20.0
    7. '```' → logprob: -20.125
    8. 'pow' → logprob: -21.0625
    9. '[' → logprob: -21.625
    10. '۱' → logprob: -21.8125

Token 984: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0003374886582605541
    2. '000' → logprob: -8.000337600708008
    3. '0' → logprob: -14.375337600708008
    4. '.' → logprob: -14.875337600708008
    5. '_' → logprob: -15.500337600708008
    6. '009' → logprob: -15.500337600708008
    7. '```' → logprob: -15.875337600708008
    8. '           ' → logprob: -16.250337600708008
    9. '9' → logprob: -16.375337600708008
    10. '   ' → logprob: -16.625337600708008

Token 985: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.1008713702030946e-06
    2. '09' → logprob: -13.875001907348633
    3. '```' → logprob: -15.562501907348633
    4. '
' → logprob: -15.625001907348633
    5. 'nine' → logprob: -16.000001907348633
    6. 'e' → logprob: -16.312501907348633
    7. '+' → logprob: -16.437501907348633
    8. '-' → logprob: -16.625001907348633
    9. '0' → logprob: -17.062501907348633
    10. '8' → logprob: -17.312501907348633

Token 986: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013352400856092572
    2. '           ' → logprob: -7.376335144042969
    3. '<|end|>' → logprob: -8.251335144042969
    4. '                
' → logprob: -9.001335144042969
    5. 'return' → logprob: -9.876335144042969
    6. ')' → logprob: -9.876335144042969
    7. '
' → logprob: -10.001335144042969
    8. '                   ' → logprob: -10.001335144042969
    9. '       ' → logprob: -10.501335144042969
    10. ' return' → logprob: -11.501335144042969

Token 987: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09994101524353027
    2. '                   ' → logprob: -3.2249410152435303
    3. ')' → logprob: -3.3499410152435303
    4. ' 
' → logprob: -4.849941253662109
    5. '           ' → logprob: -5.349941253662109
    6. '       ' → logprob: -6.724941253662109
    7. ' ' → logprob: -6.724941253662109
    8. ' return' → logprob: -7.349941253662109
    9. ' ' → logprob: -7.349941253662109
    10. '                ' → logprob: -7.349941253662109

Token 988: ' return' (ID: 622)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1525598019361496
    2. '               ' → logprob: -2.402559757232666
    3. 'return' (adapté à ' return') → logprob: -3.277559757232666
    4. 'from' → logprob: -4.902559757232666
    5. ' return' → logprob: -5.777559757232666
    6. ' import' → logprob: -6.027559757232666
    7. ' from' → logprob: -8.152560234069824
    8. '                   ' → logprob: -11.027560234069824
    9. '           ' → logprob: -11.777560234069824
    10. '	return' → logprob: -11.777560234069824

Token 989: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0014909347519278526
    2. 'pow' → logprob: -7.501491069793701
    3. 'float' → logprob: -7.501491069793701
    4. ' base' → logprob: -7.876491069793701
    5. '(base' → logprob: -12.626490592956543
    6. 'math' → logprob: -13.376490592956543
    7. '   ' → logprob: -15.501490592956543
    8. ' float' → logprob: -15.626490592956543
    9. ' pow' → logprob: -15.876490592956543
    10. '	base' → logprob: -16.75149154663086

Token 990: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.04858805239200592
    2. '**' → logprob: -3.0485880374908447
    3. ' **
' → logprob: -15.048587799072266
    4. ' **)' → logprob: -16.298587799072266
    5. ' *' → logprob: -16.673587799072266
    6. '```' → logprob: -16.673587799072266
    7. '*' → logprob: -17.173587799072266
    8. '**
' → logprob: -17.298587799072266
    9. ' ' → logprob: -17.298587799072266
    10. '
' → logprob: -18.048587799072266

Token 991: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.00012356207298580557
    2. ' exp' → logprob: -9.000123977661133
    3. 'float' → logprob: -16.375123977661133
    4. '(exp' → logprob: -19.000123977661133
    5. 'int' → logprob: -20.375123977661133
    6. '   ' → logprob: -20.500123977661133
    7. '	exp' → logprob: -20.750123977661133
    8. ' ' → logprob: -21.375123977661133
    9. '
' → logprob: -21.750123977661133
    10. '0' → logprob: -21.875123977661133

Token 992: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003336814232170582
    2. 'except' → logprob: -6.7533369064331055
    3. '<|end|>' → logprob: -6.7533369064331055
    4. '       ' → logprob: -7.7533369064331055
    5. ')' → logprob: -9.003336906433105
    6. '
' → logprob: -9.128336906433105
    7. '<|end|>' → logprob: -9.503336906433105
    8. ' except' → logprob: -9.628336906433105
    9. '            
' → logprob: -9.628336906433105
    10. ',' → logprob: -10.628336906433105

Token 993: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014391618315130472
    2. 'except' → logprob: -6.626439094543457
    3. ' except' → logprob: -10.251439094543457
    4. '               ' → logprob: -10.251439094543457
    5. '
' → logprob: -11.251439094543457
    6. '       ' → logprob: -11.626439094543457
    7. '            
' → logprob: -12.251439094543457
    8. 'val' → logprob: -13.001439094543457
    9. 'return' → logprob: -13.126439094543457
    10. 'import' → logprob: -13.376439094543457

Token 994: ' except' (ID: 6384)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07406720519065857
    2. 'except' (adapté à ' except') → logprob: -2.6990671157836914
    3. ' except' → logprob: -6.199067115783691
    4. '       ' → logprob: -6.324067115783691
    5. '	except' → logprob: -9.199067115783691
    6. '
' → logprob: -9.574067115783691
    7. '               ' → logprob: -9.824067115783691
    8. 'return' → logprob: -10.699067115783691
    9. '	       ' → logprob: -11.199067115783691
    10. ',' → logprob: -12.074067115783691

Token 995: ' Overflow' (ID: 129860)
  Prédit: 'Overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Overflow' → logprob: -0.05040964484214783
    2. '(' → logprob: -3.3004095554351807
    3. 'Value' → logprob: -4.80040979385376
    4. '(Value' → logprob: -5.92540979385376
    5. ' Overflow' → logprob: -7.17540979385376
    6. ':' → logprob: -7.92540979385376
    7. '(Exception' → logprob: -9.175409317016602
    8. 'Exception' → logprob: -9.300409317016602
    9. '(Type' → logprob: -10.175409317016602
    10. ' (' → logprob: -11.550409317016602

Token 996: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: 0.0
    2. 'error' → logprob: -17.75
    3. '_error' → logprob: -20.5
    4. 'Erro' → logprob: -21.25
    5. 'rror' → logprob: -21.375
    6. '
' → logprob: -21.75
    7. ' Error' → logprob: -22.625
    8. 'Warning' → logprob: -22.75
    9. 'Er' → logprob: -22.875
    10. 'E' → logprob: -23.25

Token 997: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021215060725808144
    2. ':
' → logprob: -4.021214962005615
    3. '           ' → logprob: -6.271214962005615
    4. ' as' → logprob: -7.146214962005615
    5. '               ' → logprob: -8.146215438842773
    6. ',' → logprob: -10.021215438842773
    7. ' :' → logprob: -11.396215438842773
    8. ':return' → logprob: -12.021215438842773
    9. '            ' → logprob: -12.146215438842773
    10. '):' → logprob: -12.396215438842773

Token 998: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11057791113853455
    2. '           ' → logprob: -2.8605778217315674
    3. 'return' → logprob: -3.2355778217315674
    4. ' return' → logprob: -4.8605780601501465
    5. 'import' → logprob: -9.485577583312988
    6. ':return' → logprob: -9.860577583312988
    7. '                ' → logprob: -10.110577583312988
    8. '            ' → logprob: -10.610577583312988
    9. '
' → logprob: -10.610577583312988
    10. '{return' → logprob: -10.735577583312988

Token 999: ' return' (ID: 622)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4834482967853546
    2. 'return' (adapté à ' return') → logprob: -0.9834482669830322
    3. 'from' → logprob: -5.108448505401611
    4. 'float' → logprob: -5.733448505401611
    5. ' return' → logprob: -11.358448028564453
    6. 'pow' → logprob: -11.733448028564453
    7. 'base' → logprob: -12.108448028564453
    8. '
' → logprob: -12.983448028564453
    9. ' import' → logprob: -12.983448028564453
    10. '   ' → logprob: -12.983448028564453

Token 1000: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -4.127333340875339e-06
    2. '1' → logprob: -12.875003814697266
    3. '(float' → logprob: -14.125003814697266
    4. ' float' → logprob: -14.875003814697266
    5. 'base' → logprob: -15.750003814697266
    6. 'pow' → logprob: -15.875003814697266
    7. 'math' → logprob: -17.250003814697266
    8. '   ' → logprob: -17.250003814697266
    9. '=float' → logprob: -17.625003814697266
    10. '0' → logprob: -17.750003814697266

Token 1001: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.5999202132225037
    2. ''in' → logprob: -0.8499202132225037
    3. ''' → logprob: -4.474920272827148
    4. '"' → logprob: -5.099920272827148
    5. ''ex' → logprob: -5.724920272827148
    6. ''h' → logprob: -7.474920272827148
    7. ''ins' → logprob: -7.599920272827148
    8. '("' → logprob: -8.224920272827148
    9. ''s' → logprob: -8.599920272827148
    10. ''inc' → logprob: -8.599920272827148

Token 1002: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.04707561433315277
    2. ''' → logprob: -3.5470755100250244
    3. 'inf' → logprob: -4.2970757484436035
    4. '"' → logprob: -5.7970757484436035
    5. ''ex' → logprob: -8.297075271606445
    6. ''ins' → logprob: -9.297075271606445
    7. ''inc' → logprob: -10.547075271606445
    8. ''h' → logprob: -10.922075271606445
    9. ''im' → logprob: -10.922075271606445
    10. '('' → logprob: -11.047075271606445

Token 1003: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.47413045167922974
    2. ')' → logprob: -0.9741304516792297
    3. '')
' → logprob: -10.599130630493164
    4. '           ' → logprob: -11.974130630493164
    5. '       ' → logprob: -12.224130630493164
    6. ')
' → logprob: -12.224130630493164
    7. '")' → logprob: -12.349130630493164
    8. '}' → logprob: -13.224130630493164
    9. ' )' → logprob: -13.724130630493164
    10. '`)' → logprob: -14.224130630493164

Token 1004: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04504917934536934
    2. '        
' → logprob: -3.1700491905212402
    3. '
' → logprob: -6.79504919052124
    4. '<|end|>' → logprob: -7.42004919052124
    5. 'import' → logprob: -9.420048713684082
    6. '```' → logprob: -10.045048713684082
    7. '        

' → logprob: -10.170048713684082
    8. '        
        
' → logprob: -10.670048713684082
    9. '        ' → logprob: -10.670048713684082
    10. '<|end|>' → logprob: -11.295048713684082

Token 1005: ' #' (ID: 1069)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.34761372208595276
    2. 'log' → logprob: -1.5976136922836304
    3. '       ' → logprob: -3.34761381149292
    4. 'v' → logprob: -3.59761381149292
    5. 'lhs' → logprob: -4.72261381149292
    6. 'if' → logprob: -5.09761381149292
    7. 'value' → logprob: -5.22261381149292
    8. '#' (adapté à ' #') → logprob: -6.34761381149292
    9. 'left' → logprob: -6.84761381149292
    10. 'exp' → logprob: -6.97261381149292

Token 1006: ' Because' (ID: 13602)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05489695072174072
    2. '#' → logprob: -3.804896831512451
    3. 'val' → logprob: -3.929896831512451
    4. 'log' → logprob: -4.804896831512451
    5. 'v' → logprob: -5.804896831512451
    6. 'value' → logprob: -9.80489730834961
    7. '
' → logprob: -10.05489730834961
    8. 'vl' → logprob: -10.30489730834961
    9. 'try' → logprob: -10.42989730834961
    10. '   ' → logprob: -10.80489730834961

Token 1007: ' direct' (ID: 2823)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.02047613449394703
    2. 'val' → logprob: -4.520476341247559
    3. '(base' → logprob: -4.895476341247559
    4. 'exp' → logprob: -7.145476341247559
    5. 'abs' → logprob: -7.645476341247559
    6. '       ' → logprob: -8.270476341247559
    7. '(' → logprob: -9.020476341247559
    8. '           ' → logprob: -10.145476341247559
    9. '0' → logprob: -10.395476341247559
    10. '   ' → logprob: -10.395476341247559

Token 1008: ' calculation' (ID: 40722)
  Prédit: 'comparison'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comparison' → logprob: -0.24760444462299347
    2. 'val' → logprob: -2.4976043701171875
    3. 'compare' → logprob: -2.6226043701171875
    4. 'value' → logprob: -3.4976043701171875
    5. 'power' → logprob: -4.6226043701171875
    6. 'pow' → logprob: -4.7476043701171875
    7. 'values' → logprob: -5.3726043701171875
    8. 'evaluation' → logprob: -6.1226043701171875
    9. 'compar' → logprob: -6.2476043701171875
    10. 'return' → logprob: -6.2476043701171875

Token 1009: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.35298341512680054
    2. 'of' → logprob: -1.4779834747314453
    3. 'may' → logprob: -4.102983474731445
    4. ' is' → logprob: -4.602983474731445
    5. '       ' → logprob: -4.727983474731445
    6. '           ' → logprob: -4.852983474731445
    7. 'can' → logprob: -5.102983474731445
    8. ' of' → logprob: -5.352983474731445
    9. '   ' → logprob: -5.727983474731445
    10. 'was' → logprob: -6.602983474731445

Token 1010: ' impossible' (ID: 19786)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.12478508055210114
    2. 'unst' → logprob: -2.6247851848602295
    3. 'not' → logprob: -4.49978494644165
    4. 'in' → logprob: -4.49978494644165
    5. 'un' → logprob: -4.87478494644165
    6. 'often' → logprob: -4.87478494644165
    7. 'likely' → logprob: -6.12478494644165
    8. 'pr' → logprob: -6.37478494644165
    9. 'danger' → logprob: -7.12478494644165
    10. 'd' → logprob: -7.99978494644165

Token 1011: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01168616022914648
    2. ',' → logprob: -4.636686325073242
    3. 'if' → logprob: -6.761686325073242
    4. ' if' → logprob: -7.886686325073242
    5. 'import' → logprob: -8.761686325073242
    6. 'and' → logprob: -10.261686325073242
    7. ' and' → logprob: -10.261686325073242
    8. 'for' → logprob: -10.261686325073242
    9. '        
' → logprob: -10.886686325073242
    10. 'due' → logprob: -11.136686325073242

Token 1012: ' large' (ID: 4410)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.05691107362508774
    2. 'very' → logprob: -3.556910991668701
    3. 'both' → logprob: -4.181910991668701
    4. 'comparison' → logprob: -6.181910991668701
    5. 'compar' → logprob: -6.556910991668701
    6. 'bases' → logprob: -6.681910991668701
    7. 'big' → logprob: -6.806910991668701
    8. 'power' → logprob: -6.931910991668701
    9. 'pow' → logprob: -6.931910991668701
    10. 'the' → logprob: -7.056910991668701

Token 1013: ':
' (ID: 734)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.7290757894515991
    2. 'bases' → logprob: -1.2290757894515991
    3. 'base' → logprob: -2.1040759086608887
    4. 'numbers' → logprob: -2.9790759086608887
    5. 'powers' → logprob: -3.3540759086608887
    6. '   ' → logprob: -5.729075908660889
    7. 'exp' → logprob: -5.854075908660889
    8. '       ' → logprob: -5.854075908660889
    9. '#' → logprob: -5.979075908660889
    10. 'values' → logprob: -6.229075908660889

Token 1014: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07819362729787827
    2. 'if' → logprob: -3.0781936645507812
    3. 'log' → logprob: -4.453193664550781
    4. 'import' → logprob: -4.578193664550781
    5. '
' → logprob: -5.578193664550781
    6. ' if' → logprob: -7.078193664550781
    7. '        
' → logprob: -7.578193664550781
    8. '```' → logprob: -7.578193664550781
    9. 'try' → logprob: -8.328193664550781
    10. 'val' → logprob: -8.328193664550781

Token 1015: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7951776385307312
    2. '       ' → logprob: -0.9201776385307312
    3. 'log' → logprob: -2.045177698135376
    4. 'import' → logprob: -4.920177459716797
    5. 'val' → logprob: -4.920177459716797
    6. '#' (adapté à ' #') → logprob: -6.170177459716797
    7. '   ' → logprob: -7.545177459716797
    8. 'pow' → logprob: -7.545177459716797
    9. 'try' → logprob: -7.795177459716797
    10. 'v' → logprob: -7.920177459716797

Token 1016: ' Instead' (ID: 21050)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3926900625228882
    2. 'log' → logprob: -1.7676900625228882
    3. '       ' → logprob: -3.1426901817321777
    4. 'try' → logprob: -3.3926901817321777
    5. '#' → logprob: -3.5176901817321777
    6. 'import' → logprob: -3.6426901817321777
    7. 'val' → logprob: -4.267690181732178
    8. 'from' → logprob: -5.642690181732178
    9. 'pow' → logprob: -7.017690181732178
    10. 'v' → logprob: -7.267690181732178

Token 1017: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32518091797828674
    2. 'of' → logprob: -1.5751808881759644
    3. 'import' → logprob: -2.700181007385254
    4. ' of' → logprob: -6.825181007385254
    5. '
' → logprob: -7.700181007385254
    6. 'use' → logprob: -7.825181007385254
    7. '   ' → logprob: -8.200181007385254
    8. '#' → logprob: -8.325181007385254
    9. 'if' → logprob: -8.450181007385254
    10. ',' → logprob: -8.700181007385254

Token 1018: ' compare' (ID: 12221)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.7273242473602295
    2. 'if' → logprob: -1.1023242473602295
    3. 'import' → logprob: -1.8523242473602295
    4. 'from' → logprob: -4.727324485778809
    5. '       ' → logprob: -4.977324485778809
    6. '#' → logprob: -4.977324485778809
    7. 'val' → logprob: -6.227324485778809
    8. 'try' → logprob: -6.727324485778809
    9. 'ln' → logprob: -7.477324485778809
    10. 'v' → logprob: -7.977324485778809

Token 1019: ' using' (ID: 2360)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.07319454103708267
    2. 'base' → logprob: -3.0731945037841797
    3. 'log' → logprob: -4.69819450378418
    4. 'from' → logprob: -5.57319450378418
    5. 'pow' → logprob: -5.69819450378418
    6. '(base' → logprob: -6.32319450378418
    7. 'if' → logprob: -6.94819450378418
    8. 'a' → logprob: -7.07319450378418
    9. 'exp' → logprob: -7.44819450378418
    10. ' base' → logprob: -7.57319450378418

Token 1020: ' logarith' (ID: 199902)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.12877553701400757
    2. 'exp' → logprob: -2.7537755966186523
    3. 'math' → logprob: -3.1287755966186523
    4. 'log' → logprob: -4.753775596618652
    5. 'ex' → logprob: -6.128775596618652
    6. 'base' → logprob: -6.503775596618652
    7. 'val' → logprob: -8.128775596618652
    8. 'pow' → logprob: -8.753775596618652
    9. '
' → logprob: -8.878775596618652
    10. 'from' → logprob: -9.003775596618652

Token 1021: 'm' (ID: 76)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5876030325889587
    2. 'arith' → logprob: -1.5876030921936035
    3. '(base' → logprob: -2.5876030921936035
    4. 'val' → logprob: -3.3376030921936035
    5. ')' → logprob: -3.9626030921936035
    6. 'a' → logprob: -4.3376030921936035
    7. 'if' → logprob: -4.4626030921936035
    8. 's' → logprob: -4.5876030921936035
    9. 'base' → logprob: -4.7126030921936035
    10. '_val' → logprob: -4.8376030921936035

Token 1022: ' rules' (ID: 9607)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3736555576324463
    2. '1' → logprob: -2.1236555576324463
    3. 'import' → logprob: -2.4986555576324463
    4. 'if' → logprob: -2.7486555576324463
    5. ' if' → logprob: -4.498655319213867
    6. '
' → logprob: -5.248655319213867
    7. '(base' → logprob: -5.248655319213867
    8. 'return' → logprob: -5.498655319213867
    9. '           ' → logprob: -5.748655319213867
    10. '   ' → logprob: -6.123655319213867

Token 1023: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3409966230392456
    2. 'import' → logprob: -1.5909966230392456
    3. ' if' → logprob: -3.090996742248535
    4. 'if' → logprob: -3.840996742248535
    5. ':' → logprob: -5.840996742248535
    6. ')' → logprob: -6.215996742248535
    7. ',' → logprob: -6.340996742248535
    8. '
' → logprob: -6.465996742248535
    9. ' import' → logprob: -6.465996742248535
    10. '(' → logprob: -6.715996742248535

Token 1024: ' val' (ID: 1459)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5624175667762756
    2. 'if' → logprob: -1.3124175071716309
    3. '       ' → logprob: -2.062417507171631
    4. 'from' → logprob: -4.062417507171631
    5. ' if' → logprob: -4.562417507171631
    6. '```' → logprob: -6.312417507171631
    7. ' import' → logprob: -6.937417507171631
    8. '
' → logprob: -7.062417507171631
    9. 'log' → logprob: -7.562417507171631
    10. 'return' → logprob: -7.937417507171631

Token 1025: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.32144784927368164
    2. '(base' → logprob: -2.0714478492736816
    3. ' =' → logprob: -2.1964478492736816
    4. 'base' → logprob: -4.571447849273682
    5. '=' → logprob: -4.571447849273682
    6. '_base' → logprob: -5.446447849273682
    7. 'a' → logprob: -5.946447849273682
    8. 'val' → logprob: -6.696447849273682
    9. 's' → logprob: -6.821447849273682
    10. ' :=' → logprob: -6.946447849273682

Token 1026: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5160613059997559
    2. '=' → logprob: -1.2660613059997559
    3. 'import' → logprob: -2.391061305999756
    4. '1' → logprob: -3.641061305999756
    5. ',' → logprob: -7.391061305999756
    6. ')' → logprob: -7.891061305999756
    7. '_base' → logprob: -7.891061305999756
    8. ' import' → logprob: -8.016061782836914
    9. '```' → logprob: -8.016061782836914
    10. '
' → logprob: -8.141061782836914

Token 1027: ' base' (ID: 3611)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.03855432942509651
    2. ' exp' → logprob: -3.6635544300079346
    3. 'math' → logprob: -4.7885541915893555
    4. ' math' → logprob: -6.1635541915893555
    5. 'import' → logprob: -7.9135541915893555
    6. 'base' → logprob: -7.9135541915893555
    7. ' base' → logprob: -8.288554191589355
    8. 'log' → logprob: -8.413554191589355
    9. 'ex' → logprob: -8.663554191589355
    10. '   ' → logprob: -8.913554191589355

Token 1028: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005018498282879591
    2. 'val' → logprob: -6.630018711090088
    3. '**' → logprob: -7.255018711090088
    4. '
' → logprob: -7.380018711090088
    5. 'base' → logprob: -7.505018711090088
    6. 'import' → logprob: -7.755018711090088
    7. ')' → logprob: -7.880018711090088
    8. '```' → logprob: -8.00501823425293
    9. '   ' → logprob: -8.75501823425293
    10. 'log' → logprob: -9.00501823425293

Token 1029: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.2443864941596985
    2. 'import' → logprob: -2.9943864345550537
    3. ' **' → logprob: -3.1193864345550537
    4. ')' → logprob: -3.2443864345550537
    5. '```' → logprob: -4.119386672973633
    6. 'log' → logprob: -4.369386672973633
    7. '1' → logprob: -4.369386672973633
    8. ',' → logprob: -5.119386672973633
    9. ' ' → logprob: -5.494386672973633
    10. '>' → logprob: -5.744386672973633

Token 1030: 'exp' (ID: 8067)
  Prédit: 'exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.020747773349285126
    2. ' exp' → logprob: -4.645747661590576
    3. '(exp' → logprob: -5.395747661590576
    4. 'base' → logprob: -6.520747661590576
    5. '(base' → logprob: -7.145747661590576
    6. ' (' → logprob: -7.145747661590576
    7. ' base' → logprob: -7.270747661590576
    8. ')' → logprob: -7.270747661590576
    9. '```' → logprob: -8.145748138427734
    10. '(' → logprob: -8.270748138427734

Token 1031: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0760081335902214
    2. ')' → logprob: -3.8260080814361572
    3. '
' → logprob: -4.326008319854736
    4. 'val' → logprob: -4.826008319854736
    5. '_' → logprob: -5.451008319854736
    6. '   ' → logprob: -5.826008319854736
    7. '`' → logprob: -5.951008319854736
    8. '**' → logprob: -6.201008319854736
    9. ')
' → logprob: -6.201008319854736
    10. '```' → logprob: -6.326008319854736

Token 1032: ' >' (ID: 1424)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.652769923210144
    2. 'if' → logprob: -2.2777700424194336
    3. '
' → logprob: -2.4027700424194336
    4. '       ' → logprob: -2.4027700424194336
    5. '1' → logprob: -3.0277700424194336
    6. ' *' → logprob: -3.0277700424194336
    7. '**' → logprob: -3.4027700424194336
    8. 'import' → logprob: -3.5277700424194336
    9. 'val' → logprob: -5.152770042419434
    10. ',' → logprob: -5.152770042419434

Token 1033: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.0081164836883545
    2. 'exp' → logprob: -1.2581164836883545
    3. 'base' → logprob: -1.8831164836883545
    4. '(base' → logprob: -2.5081164836883545
    5. 'log' → logprob: -3.7581164836883545
    6. ' base' → logprob: -4.133116722106934
    7. 'math' → logprob: -4.258116722106934
    8. 'import' → logprob: -4.508116722106934
    9. ' val' → logprob: -4.633116722106934
    10. 'float' → logprob: -4.883116722106934

Token 1034: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1351328343153
    2. '1' → logprob: -2.2601327896118164
    3. 'val' → logprob: -4.635132789611816
    4. 'base' → logprob: -4.760132789611816
    5. 'al' → logprob: -7.260132789611816
    6. '   ' → logprob: -7.385132789611816
    7. '
' → logprob: -7.885132789611816
    8. '(base' → logprob: -8.260132789611816
    9. '_base' → logprob: -8.385132789611816
    10. '```' → logprob: -8.510132789611816

Token 1035: ' =' (ID: 314)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0566325187683105
    2. ' if' → logprob: -1.5566325187683105
    3. '**' → logprob: -1.6816325187683105
    4. 'if' → logprob: -2.5566325187683105
    5. '```' → logprob: -3.8066325187683105
    6. '           ' → logprob: -3.9316325187683105
    7. 'import' → logprob: -4.0566325187683105
    8. '   ' → logprob: -4.1816325187683105
    9. 'val' → logprob: -4.1816325187683105
    10. '       ' → logprob: -4.1816325187683105

Token 1036: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.06011154130101204
    2. ' base' → logprob: -3.0601115226745605
    3. '(base' → logprob: -4.9351115226745605
    4. 'log' → logprob: -6.8101115226745605
    5. 'import' → logprob: -7.1851115226745605
    6. 'exp' → logprob: -7.3101115226745605
    7. 'val' → logprob: -7.5601115226745605
    8. 'pow' → logprob: -8.060111999511719
    9. 'float' → logprob: -8.185111999511719
    10. 'math' → logprob: -8.185111999511719

Token 1037: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011074943467974663
    2. '1' → logprob: -4.511075019836426
    3. '
' → logprob: -10.886075019836426
    4. '```' → logprob: -12.761075019836426
    5. '   ' → logprob: -13.136075019836426
    6. 'base' → logprob: -14.011075019836426
    7. '_' → logprob: -14.761075019836426
    8. '

' → logprob: -14.886075019836426
    9. '_base' → logprob: -15.261075019836426
    10. ' ' → logprob: -15.261075019836426

Token 1038: '^' (ID: 61)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.34018421173095703
    2. '**' → logprob: -1.965184211730957
    3. '1' → logprob: -2.965184211730957
    4. '*' → logprob: -3.340184211730957
    5. '```' → logprob: -3.965184211730957
    6. '   ' → logprob: -5.090184211730957
    7. ' *' → logprob: -5.090184211730957
    8. ' exp' → logprob: -5.215184211730957
    9. '#' → logprob: -5.590184211730957
    10. '
' → logprob: -5.965184211730957

Token 1039: 'exp' (ID: 8067)
  Prédit: 'exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -3.452426608419046e-05
    2. ' exp' → logprob: -10.75003433227539
    3. '(exp' → logprob: -11.87503433227539
    4. 'log' → logprob: -13.25003433227539
    5. 'float' → logprob: -13.37503433227539
    6. '(' → logprob: -14.50003433227539
    7. '```' → logprob: -14.75003433227539
    8. '
' → logprob: -15.00003433227539
    9. 'pow' → logprob: -15.37503433227539
    10. '.exp' → logprob: -15.87503433227539

Token 1040: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001084971008822322
    2. 'exp' → logprob: -7.126084804534912
    3. '2' → logprob: -8.62608528137207
    4. 'onent' → logprob: -10.62608528137207
    5. 'val' → logprob: -10.62608528137207
    6. '
' → logprob: -10.75108528137207
    7. '0' → logprob: -12.25108528137207
    8. 'ponent' → logprob: -12.37608528137207
    9. 'r' → logprob: -12.87608528137207
    10. ')' → logprob: -12.87608528137207

Token 1041: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7197736501693726
    2. ' if' → logprob: -1.4697736501693726
    3. '
' → logprob: -2.219773769378662
    4. 'if' → logprob: -2.344773769378662
    5. 'import' → logprob: -2.594773769378662
    6. '        
' → logprob: -6.969773769378662
    7. ',' → logprob: -7.594773769378662
    8. '   ' → logprob: -7.719773769378662
    9. 'log' → logprob: -7.969773769378662
    10. ')' → logprob: -8.469773292541504

Token 1042: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15746340155601501
    2. ' if' → logprob: -2.657463312149048
    3. 'if' → logprob: -2.907463312149048
    4. 'import' → logprob: -4.532463550567627
    5. '
' → logprob: -5.532463550567627
    6. ')' → logprob: -6.032463550567627
    7. '```' → logprob: -6.032463550567627
    8. ',' → logprob: -8.282463073730469
    9. '`' → logprob: -8.782463073730469
    10. ')
' → logprob: -9.032463073730469

Token 1043: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11932092905044556
    2. 'import' → logprob: -2.494320869445801
    3. 'if' → logprob: -3.744320869445801
    4. '
' → logprob: -6.119320869445801
    5. '```' → logprob: -6.619320869445801
    6. ' if' → logprob: -6.744320869445801
    7. 'from' → logprob: -7.494320869445801
    8. 'log' → logprob: -7.744320869445801
    9. 'val' → logprob: -8.8693208694458
    10. '        
' → logprob: -9.2443208694458

Token 1044: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007946164114400744
    2. 'import' → logprob: -7.500794410705566
    3. '
' → logprob: -9.750794410705566
    4. ' if' → logprob: -9.875794410705566
    5. '```' → logprob: -9.875794410705566
    6. '        
' → logprob: -10.125794410705566
    7. 'if' → logprob: -10.625794410705566
    8. '`' → logprob: -12.125794410705566
    9. '``' → logprob: -13.375794410705566
    10. '        ' → logprob: -13.750794410705566

Token 1045: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14225821197032928
    2. 'if' → logprob: -2.6422581672668457
    3. 'import' → logprob: -3.5172581672668457
    4. ' if' → logprob: -3.7672581672668457
    5. '
' → logprob: -5.392258167266846
    6. '        
' → logprob: -6.767258167266846
    7. '#' (adapté à ' #') → logprob: -7.017258167266846
    8. 'val' → logprob: -7.642258167266846
    9. 'try' → logprob: -7.892258167266846
    10. 'log' → logprob: -8.142258644104004

Token 1046: ' log' (ID: 2142)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.240507572889328
    2. '       ' → logprob: -1.9905076026916504
    3. 'import' → logprob: -2.8655076026916504
    4. '#' → logprob: -4.61550760269165
    5. '
' → logprob: -5.49050760269165
    6. 'log' → logprob: -5.61550760269165
    7. 'val' → logprob: -7.11550760269165
    8. ' if' → logprob: -7.11550760269165
    9. 'try' → logprob: -8.115507125854492
    10. 'from' → logprob: -8.365507125854492

Token 1047: '(val' (ID: 17391)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.20606690645217896
    2. 'val' → logprob: -2.206066846847534
    3. '10' → logprob: -3.206066846847534
    4. '_base' → logprob: -4.456067085266113
    5. '_value' → logprob: -4.456067085266113
    6. '1' → logprob: -4.831067085266113
    7. 'base' → logprob: -6.581067085266113
    8. '_' → logprob: -6.956067085266113
    9. 'arith' → logprob: -7.956067085266113
    10. '(base' → logprob: -8.081067085266113

Token 1048: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05071710795164108
    2. ')' → logprob: -4.050716876983643
    3. '_val' → logprob: -4.300716876983643
    4. '10' → logprob: -4.925716876983643
    5. '_base' → logprob: -5.925716876983643
    6. 'val' → logprob: -6.050716876983643
    7. 'arith' → logprob: -6.050716876983643
    8. '(base' → logprob: -6.550716876983643
    9. 'base' → logprob: -7.675716876983643
    10. '_' → logprob: -7.675716876983643

Token 1049: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6130418181419373
    2. '1' → logprob: -0.8630418181419373
    3. '(base' → logprob: -3.738041877746582
    4. '(val' → logprob: -5.488041877746582
    5. 'val' → logprob: -5.613041877746582
    6. '   ' → logprob: -6.113041877746582
    7. 'base' → logprob: -7.988041877746582
    8. ')
' → logprob: -8.363041877746582
    9. ',' → logprob: -8.363041877746582
    10. '       ' → logprob: -8.488041877746582

Token 1050: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4615827202796936
    2. '=' → logprob: -1.7115826606750488
    3. '1' → logprob: -2.336582660675049
    4. '(base' → logprob: -2.836582660675049
    5. ')' → logprob: -4.461582660675049
    6. 'base' → logprob: -4.836582660675049
    7. '   ' → logprob: -5.461582660675049
    8. ' base' → logprob: -6.461582660675049
    9. '```' → logprob: -6.586582660675049
    10. ',' → logprob: -6.586582660675049

Token 1051: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.0017603866290301085
    2. ' exp' → logprob: -7.376760482788086
    3. 'math' → logprob: -7.501760482788086
    4. 'ex' → logprob: -8.251760482788086
    5. '       ' → logprob: -8.376760482788086
    6. ' exponent' → logprob: -11.126760482788086
    7. 'float' → logprob: -11.251760482788086
    8. '   ' → logprob: -11.376760482788086
    9. ' math' → logprob: -11.501760482788086
    10. '        ' → logprob: -11.501760482788086

Token 1052: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20817948877811432
    2. 'val' → logprob: -2.708179473876953
    3. '(base' → logprob: -2.958179473876953
    4. 'base' → logprob: -3.708179473876953
    5. 'arith' → logprob: -4.708179473876953
    6. 'exp' → logprob: -4.958179473876953
    7. ' base' → logprob: -5.458179473876953
    8. ' *' → logprob: -5.708179473876953
    9. '_val' → logprob: -5.833179473876953
    10. '(val' → logprob: -5.958179473876953

Token 1053: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.018320145085453987
    2. '*' → logprob: -4.018320083618164
    3. ')' → logprob: -8.893320083618164
    4. '   ' → logprob: -11.393320083618164
    5. ' ' → logprob: -12.018320083618164
    6. '*np' → logprob: -12.893320083618164
    7. '1' → logprob: -13.268320083618164
    8. '       ' → logprob: -13.268320083618164
    9. '```' → logprob: -13.393320083618164
    10. ')*' → logprob: -13.518320083618164

Token 1054: ' log' (ID: 2142)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.632914125919342
    2. '(math' → logprob: -0.882914125919342
    3. 'import' → logprob: -3.8829140663146973
    4. ' math' → logprob: -4.132914066314697
    5. '(' → logprob: -4.632914066314697
    6. ' (' → logprob: -4.882914066314697
    7. '(
' → logprob: -7.757914066314697
    8. '(log' → logprob: -8.257914543151855
    9. 'log' → logprob: -8.507914543151855
    10. 'cmath' → logprob: -8.882914543151855

Token 1055: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.030559800565242767
    2. 'base' → logprob: -3.780559778213501
    3. '(' → logprob: -5.65556001663208
    4. '10' → logprob: -5.90556001663208
    5. ' base' → logprob: -7.03056001663208
    6. '(
' → logprob: -9.155559539794922
    7. '_base' → logprob: -10.405559539794922
    8. ' (' → logprob: -10.530559539794922
    9. '(abs' → logprob: -12.655559539794922
    10. 'arith' → logprob: -12.905559539794922

Token 1056: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004524111747741699
    2. 'base' → logprob: -6.129524230957031
    3. '(base' → logprob: -6.504524230957031
    4. ')' → logprob: -7.254524230957031
    5. '   ' → logprob: -10.629524230957031
    6. ' base' → logprob: -10.754524230957031
    7. '_' → logprob: -11.004524230957031
    8. '10' → logprob: -11.129524230957031
    9. ')
' → logprob: -11.504524230957031
    10. '2' → logprob: -11.504524230957031

Token 1057: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3424314260482788
    2. ')
' → logprob: -1.5924314260482788
    3. '       ' → logprob: -2.4674315452575684
    4. ' )
' → logprob: -7.717431545257568
    5. ' )' → logprob: -7.967431545257568
    6. '   ' → logprob: -8.09243106842041
    7. '1' → logprob: -8.71743106842041
    8. '           ' → logprob: -9.71743106842041
    9. ')`
' → logprob: -10.09243106842041
    10. ')`' → logprob: -10.21743106842041

Token 1058: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14114591479301453
    2. ' if' → logprob: -2.141145944595337
    3. '
' → logprob: -4.766145706176758
    4. ')' → logprob: -5.766145706176758
    5. ')
' → logprob: -6.891145706176758
    6. 'if' → logprob: -7.141145706176758
    7. ' +' → logprob: -8.641145706176758
    8. '           ' → logprob: -8.891145706176758
    9. ',' → logprob: -10.016145706176758
    10. '\n' → logprob: -10.266145706176758

Token 1059: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3895019292831421
    2. '       ' → logprob: -1.264501929283142
    3. 'if' → logprob: -4.139502048492432
    4. '
' → logprob: -4.264502048492432
    5. ')' → logprob: -5.139502048492432
    6. ')
' → logprob: -6.264502048492432
    7. '1' → logprob: -7.764502048492432
    8. '```' → logprob: -8.514501571655273
    9. ' and' → logprob: -8.639501571655273
    10. ',' → logprob: -8.639501571655273

Token 1060: ' log' (ID: 2142)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.46533721685409546
    2. '       ' → logprob: -1.2153372764587402
    3. 'if' → logprob: -3.2153372764587402
    4. 'log' → logprob: -4.34033727645874
    5. ' log' → logprob: -4.84033727645874
    6. 'return' → logprob: -5.59033727645874
    7. ' return' → logprob: -5.71533727645874
    8. '
' → logprob: -6.59033727645874
    9. 'import' → logprob: -6.71533727645874
    10. ')' → logprob: -7.09033727645874

Token 1061: '(val' (ID: 17391)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.2973082959651947
    2. '_val' → logprob: -1.672308325767517
    3. '(val' → logprob: -3.2973082065582275
    4. '(base' → logprob: -3.7973082065582275
    5. 'base' → logprob: -5.172308444976807
    6. '_base' → logprob: -6.422308444976807
    7. '1' → logprob: -7.047308444976807
    8. '2' → logprob: -7.422308444976807
    9. ' val' → logprob: -8.297307968139648
    10. '10' → logprob: -8.547307968139648

Token 1062: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.27146661281585693
    2. '2' → logprob: -1.521466612815857
    3. 'val' → logprob: -4.5214667320251465
    4. 'base' → logprob: -5.3964667320251465
    5. '(base' → logprob: -6.2714667320251465
    6. ')' → logprob: -7.3964667320251465
    7. '(val' → logprob: -7.3964667320251465
    8. 's' → logprob: -7.7714667320251465
    9. '
' → logprob: -9.646466255187988
    10. '_val' → logprob: -9.646466255187988

Token 1063: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013452880375552922
    2. '1' → logprob: -9.750134468078613
    3. ' )' → logprob: -10.125134468078613
    4. '   ' → logprob: -10.750134468078613
    5. ')=' → logprob: -12.000134468078613
    6. '2' → logprob: -12.625134468078613
    7. '#' → logprob: -13.875134468078613
    8. '=' → logprob: -14.250134468078613
    9. '[' → logprob: -14.500134468078613
    10. '    ' → logprob: -15.125134468078613

Token 1064: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10913226008415222
    2. '=' → logprob: -2.3591322898864746
    3. ')' → logprob: -4.734132289886475
    4. ')=' → logprob: -10.109131813049316
    5. '        ' → logprob: -11.234131813049316
    6. ' )' → logprob: -11.359131813049316
    7. '       ' → logprob: -11.734131813049316
    8. ' ' → logprob: -12.234131813049316
    9. '   ' → logprob: -12.359131813049316
    10. '    ' → logprob: -13.109131813049316

Token 1065: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.07903707027435303
    2. ' exp' → logprob: -2.5790371894836426
    3. '       ' → logprob: -9.079036712646484
    4. '        ' → logprob: -10.704036712646484
    5. '(exp' → logprob: -12.329036712646484
    6. '           ' → logprob: -12.704036712646484
    7. '	exp' → logprob: -14.329036712646484
    8. '   ' → logprob: -14.704036712646484
    9. '         ' → logprob: -14.829036712646484
    10. '.exp' → logprob: -15.079036712646484

Token 1066: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '1' → logprob: -17.625
    3. '
' → logprob: -18.5
    4. '   ' → logprob: -19.5
    5. 'exp' → logprob: -19.875
    6. ' ' → logprob: -20.0
    7. '₂' → logprob: -20.25
    8. '２' → logprob: -20.5
    9. '```' → logprob: -20.625
    10. 'base' → logprob: -20.75

Token 1067: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.010032298043370247
    2. ')' → logprob: -5.0100321769714355
    3. '1' → logprob: -7.3850321769714355
    4. '       ' → logprob: -7.5100321769714355
    5. '*' → logprob: -7.7600321769714355
    6. '   ' → logprob: -7.7600321769714355
    7. ' ' → logprob: -8.135032653808594
    8. '        ' → logprob: -8.260032653808594
    9. ' =' → logprob: -8.635032653808594
    10. '           ' → logprob: -9.260032653808594

Token 1068: ' log' (ID: 2142)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.38168856501579285
    2. 'math' → logprob: -1.3816885948181152
    3. ' math' → logprob: -3.0066885948181152
    4. ' log' → logprob: -4.131688594818115
    5. 'import' → logprob: -7.506688594818115
    6. '(math' → logprob: -9.881688117980957
    7. '(log' → logprob: -11.256688117980957
    8. 'base' → logprob: -12.381688117980957
    9. ' import' → logprob: -12.631688117980957
    10. ' (' → logprob: -13.631688117980957

Token 1069: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -6.511406809295295e-06
    2. 'base' → logprob: -12.250006675720215
    3. '10' → logprob: -14.125006675720215
    4. ' base' → logprob: -14.125006675720215
    5. '(' → logprob: -16.6250057220459
    6. '(abs' → logprob: -16.8750057220459
    7. ' (' → logprob: -17.8750057220459
    8. ';base' → logprob: -17.8750057220459
    9. '	base' → logprob: -18.0000057220459
    10. '
' → logprob: -18.6250057220459

Token 1070: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0038418753538280725
    2. '(base' → logprob: -6.503841876983643
    3. '10' → logprob: -6.878841876983643
    4. ' base' → logprob: -7.378841876983643
    5. 'base' → logprob: -7.628841876983643
    6. ')' → logprob: -9.503841400146484
    7. '1' → logprob: -9.753841400146484
    8. ')
' → logprob: -11.003841400146484
    9. ' ' → logprob: -11.503841400146484
    10. '```' → logprob: -11.503841400146484

Token 1071: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8009258508682251
    2. ')' → logprob: -1.175925850868225
    3. ')
' → logprob: -1.425925850868225
    4. '):
' → logprob: -6.6759257316589355
    5. '   ' → logprob: -8.800926208496094
    6. '
' → logprob: -8.925926208496094
    7. '):' → logprob: -9.550926208496094
    8. ')

' → logprob: -9.550926208496094
    9. ')**' → logprob: -9.675926208496094
    10. ')\' → logprob: -9.675926208496094

Token 1072: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047245606780052185
    2. '\n' → logprob: -3.672245502471924
    3. 'import' → logprob: -4.422245502471924
    4. ')' → logprob: -6.422245502471924
    5. '
' → logprob: -6.422245502471924
    6. '```' → logprob: -6.922245502471924
    7. '(' → logprob: -7.297245502471924
    8. '        
' → logprob: -7.422245502471924
    9. ')
' → logprob: -7.922245502471924
    10. '\' → logprob: -8.297245979309082

Token 1073: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04159216955304146
    2. 'import' → logprob: -3.4165921211242676
    3. '
' → logprob: -5.166592121124268
    4. '\n' → logprob: -6.791592121124268
    5. '        
' → logprob: -7.791592121124268
    6. 'if' → logprob: -9.291592597961426
    7. ')
' → logprob: -9.666592597961426
    8. '```' → logprob: -9.791592597961426
    9. ' if' → logprob: -9.916592597961426
    10. ',' → logprob: -10.041592597961426

Token 1074: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08032511174678802
    2. 'import' → logprob: -2.580325126647949
    3. '        
' → logprob: -7.205325126647949
    4. '
' → logprob: -7.955325126647949
    5. ' import' → logprob: -8.58032512664795
    6. 'return' → logprob: -10.45532512664795
    7. '\n' → logprob: -10.70532512664795
    8. ' 
' → logprob: -11.45532512664795
    9. '```' → logprob: -11.58032512664795
    10. '    
' → logprob: -11.83032512664795

Token 1075: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.04211222007870674
    2. '       ' → logprob: -3.292112112045288
    3. '
' → logprob: -6.542112350463867
    4. 'if' → logprob: -6.917112350463867
    5. ' import' → logprob: -7.042112350463867
    6. 'from' → logprob: -8.292112350463867
    7. ' if' → logprob: -8.292112350463867
    8. '        
' → logprob: -8.917112350463867
    9. 'try' → logprob: -9.917112350463867
    10. ' 
' → logprob: -11.042112350463867

Token 1076: ' Compare' (ID: 38200)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.013767355121672153
    2. '       ' → logprob: -4.763767242431641
    3. 'if' → logprob: -6.138767242431641
    4. '
' → logprob: -6.513767242431641
    5. 'from' → logprob: -7.013767242431641
    6. ' import' → logprob: -7.888767242431641
    7. 'try' → logprob: -9.01376724243164
    8. ' if' → logprob: -9.63876724243164
    9. '#' → logprob: -11.26376724243164
    10. '        
' → logprob: -11.88876724243164

Token 1077: ' log' (ID: 2142)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.16825321316719055
    2. 'exp' → logprob: -2.543253183364868
    3. 'log' → logprob: -3.668253183364868
    4. 'val' → logprob: -3.918253183364868
    5. '(exp' → logprob: -4.043253421783447
    6. 'from' → logprob: -5.168253421783447
    7. 'pow' → logprob: -6.543253421783447
    8. '(log' → logprob: -6.793253421783447
    9. '1' → logprob: -7.043253421783447
    10. '
' → logprob: -7.543253421783447

Token 1078: '(val' (ID: 17391)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.9070925116539001
    2. 's' → logprob: -1.407092571258545
    3. '10' → logprob: -1.907092571258545
    4. '_val' → logprob: -2.782092571258545
    5. 'import' → logprob: -3.157092571258545
    6. '(base' → logprob: -3.282092571258545
    7. 'arith' → logprob: -3.407092571258545
    8. '(val' → logprob: -4.657092571258545
    9. 'base' → logprob: -5.532092571258545
    10. '_base' → logprob: -5.782092571258545

Token 1079: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0566537380218506
    2. 's' → logprob: -1.4316537380218506
    3. '(val' → logprob: -1.4316537380218506
    4. 'arith' → logprob: -2.6816537380218506
    5. '(base' → logprob: -3.1816537380218506
    6. ')' → logprob: -3.8066537380218506
    7. '10' → logprob: -4.18165397644043
    8. '(' → logprob: -4.55665397644043
    9. 'val' → logprob: -5.93165397644043
    10. '(value' → logprob: -6.05665397644043

Token 1080: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04404085502028465
    2. '1' → logprob: -3.7940409183502197
    3. '       ' → logprob: -4.419040679931641
    4. ')
' → logprob: -5.919040679931641
    5. '),' → logprob: -6.419040679931641
    6. ',' → logprob: -6.419040679931641
    7. ' )' → logprob: -6.794040679931641
    8. '   ' → logprob: -6.919040679931641
    9. 'val' → logprob: -9.04404067993164
    10. ')+' → logprob: -9.66904067993164

Token 1081: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9636297225952148
    2. '1' → logprob: -1.7136297225952148
    3. ' and' → logprob: -2.088629722595215
    4. 'import' → logprob: -2.213629722595215
    5. ')' → logprob: -2.463629722595215
    6. ' if' → logprob: -3.088629722595215
    7. ',' → logprob: -4.213629722595215
    8. 'and' → logprob: -4.213629722595215
    9. '   ' → logprob: -4.713629722595215
    10. '[' → logprob: -5.088629722595215

Token 1082: ' log' (ID: 2142)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.0004306692280806601
    2. ' log' → logprob: -7.750430583953857
    3. '(log' → logprob: -18.750431060791016
    4. ' ' → logprob: -21.250431060791016
    5. '	log' → logprob: -22.250431060791016
    6. '       ' → logprob: -22.375431060791016
    7. '   ' → logprob: -22.625431060791016
    8. '.log' → logprob: -23.000431060791016
    9. '
' → logprob: -23.125431060791016
    10. 'val' → logprob: -23.375431060791016

Token 1083: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.011400643736124039
    2. 'val' → logprob: -4.6364006996154785
    3. '(log' → logprob: -6.6364006996154785
    4. 'log' → logprob: -8.13640022277832
    5. '[val' → logprob: -11.63640022277832
    6. '10' → logprob: -12.01140022277832
    7. '
' → logprob: -12.26140022277832
    8. '(' → logprob: -12.76140022277832
    9. '```' → logprob: -12.76140022277832
    10. ',val' → logprob: -12.88640022277832

Token 1084: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.021173743531107903
    2. '(val' → logprob: -4.14617395401001
    3. '1' → logprob: -5.64617395401001
    4. '(log' → logprob: -6.64617395401001
    5. 'val' → logprob: -8.771173477172852
    6. 'log' → logprob: -9.396173477172852
    7. '[val' → logprob: -10.271173477172852
    8. ')' → logprob: -11.896173477172852
    9. '
' → logprob: -12.896173477172852
    10. '   ' → logprob: -13.396173477172852

Token 1085: ')' (ID: 8)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1102352142333984
    2. ')' → logprob: -1.2352352142333984
    3. '):
' → logprob: -1.6102352142333984
    4. ')
' → logprob: -1.8602352142333984
    5. '):' → logprob: -3.8602352142333984
    6. '):

' → logprob: -6.610235214233398
    7. ')

' → logprob: -7.985235214233398
    8. '):
' → logprob: -8.610235214233398
    9. 'import' → logprob: -8.985235214233398
    10. '   ' → logprob: -9.235235214233398

Token 1086: ' carefully' (ID: 18455)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5432278513908386
    2. '       ' → logprob: -1.0432279109954834
    3. '
' → logprob: -2.9182279109954834
    4. ':' → logprob: -5.418227672576904
    5. ',' → logprob: -6.043227672576904
    6. ' import' → logprob: -6.543227672576904
    7. ':
' → logprob: -6.918227672576904
    8. '\n' → logprob: -7.293227672576904
    9. ' if' → logprob: -7.543227672576904
    10. '   ' → logprob: -7.793227672576904

Token 1087: ' considering' (ID: 17227)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21356038749217987
    2. 'import' → logprob: -1.7135603427886963
    3. '
' → logprob: -4.713560581207275
    4. ':' → logprob: -6.963560581207275
    5. ' import' → logprob: -7.338560581207275
    6. ',' → logprob: -7.588560581207275
    7. ':
' → logprob: -7.838560581207275
    8. '        
' → logprob: -8.588560104370117
    9. ' if' → logprob: -9.713560104370117
    10. ')' → logprob: -9.838560104370117

Token 1088: ' bases' (ID: 31148)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -1.1406582593917847
    2. '0' → logprob: -1.6406582593917847
    3. 'the' → logprob: -1.7656582593917847
    4. 'base' → logprob: -2.015658378601074
    5. ' math' → logprob: -2.765658378601074
    6. 'import' → logprob: -3.140658378601074
    7. 'special' → logprob: -4.140658378601074
    8. ' the' → logprob: -4.515658378601074
    9. ' base' → logprob: -4.640658378601074
    10. 'possible' → logprob: -4.640658378601074

Token 1089: ' might' (ID: 3572)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.04480893164873123
    2. ':' → logprob: -4.544808864593506
    3. '       ' → logprob: -4.544808864593506
    4. ' if' → logprob: -4.669808864593506
    5. ' and' → logprob: -5.544808864593506
    6. ',' → logprob: -6.169808864593506
    7. ' import' → logprob: -6.419808864593506
    8. ':
' → logprob: -6.919808864593506
    9. 'if' → logprob: -7.169808864593506
    10. '           ' → logprob: -7.544808864593506

Token 1090: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.37795811891555786
    2. 'be' → logprob: -1.252958059310913
    3. '==' → logprob: -4.127958297729492
    4. '<=' → logprob: -4.502958297729492
    5. ' ==' → logprob: -6.877958297729492
    6. ' <=' → logprob: -7.502958297729492
    7. '```' → logprob: -9.627958297729492
    8. ' have' → logprob: -10.002958297729492
    9. 'have' → logprob: -10.002958297729492
    10. '0' → logprob: -10.877958297729492

Token 1091: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0030927436891943216
    2. '<=' → logprob: -6.3780927658081055
    3. ' ' → logprob: -7.1280927658081055
    4. 'zero' → logprob: -8.003092765808105
    5. ' zero' → logprob: -8.753092765808105
    6. '```' → logprob: -10.128092765808105
    7. ' <=' → logprob: -10.753092765808105
    8. '=' → logprob: -11.878092765808105
    9. 'less' → logprob: -12.253092765808105
    10. '==' → logprob: -12.253092765808105

Token 1092: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002246365649625659
    2. '<=' → logprob: -6.502246379852295
    3. 'zero' → logprob: -7.752246379852295
    4. '1' → logprob: -9.002245903015137
    5. ' ' → logprob: -9.752245903015137
    6. '=' → logprob: -10.127245903015137
    7. '==' → logprob: -10.627245903015137
    8. ' zero' → logprob: -11.127245903015137
    9. '```' → logprob: -11.377245903015137
    10. 'less' → logprob: -11.502245903015137

Token 1093: '.

' (ID: 364)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3051641583442688
    2. '       ' → logprob: -1.430164098739624
    3. ' import' → logprob: -4.555164337158203
    4. '
' → logprob: -4.680164337158203
    5. ':' → logprob: -6.930164337158203
    6. ':
' → logprob: -7.805164337158203
    7. ' if' → logprob: -7.930164337158203
    8. ',' → logprob: -7.930164337158203
    9. '        
' → logprob: -8.055164337158203
    10. ' and' → logprob: -8.430164337158203

Token 1094: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37237638235092163
    2. 'import' → logprob: -1.6223764419555664
    3. '
' → logprob: -2.4973764419555664
    4. '\n' → logprob: -3.7473764419555664
    5. '        
' → logprob: -5.747376441955566
    6. ' import' → logprob: -6.747376441955566
    7. ' 
' → logprob: -6.997376441955566
    8. '\' → logprob: -8.122376441955566
    9. '```' → logprob: -8.372376441955566
    10. '(' → logprob: -8.747376441955566

Token 1095: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.18737094104290009
    2. '       ' → logprob: -1.8123708963394165
    3. '
' → logprob: -5.187370777130127
    4. ' import' → logprob: -6.812370777130127
    5. 'from' → logprob: -7.312370777130127
    6. '        
' → logprob: -8.687371253967285
    7. ' from' → logprob: -10.437371253967285
    8. 'try' → logprob: -10.687371253967285
    9. 'if' → logprob: -11.937371253967285
    10. ' 
' → logprob: -12.312371253967285

Token 1096: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.001170225441455841
    2. ' math' → logprob: -6.7511701583862305
    3. 'cmath' → logprob: -19.751171112060547
    4. '.math' → logprob: -21.126171112060547
    5. '(math' → logprob: -21.126171112060547
    6. '_math' → logprob: -21.501171112060547
    7. '   ' → logprob: -22.126171112060547
    8. '
' → logprob: -23.001171112060547
    9. '       ' → logprob: -23.501171112060547
    10. 'mat' → logprob: -24.251171112060547

Token 1097: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05245046690106392
    2. '        
' → logprob: -3.30245041847229
    3. '       ' → logprob: -4.302450656890869
    4. ' 
' → logprob: -8.302450180053711
    5. '
        
' → logprob: -9.302450180053711
    6. '

' → logprob: -9.427450180053711
    7. ' if' → logprob: -9.677450180053711
    8. '    
' → logprob: -9.802450180053711
    9. '<|end|>' → logprob: -10.302450180053711
    10. '       
' → logprob: -10.427450180053711

Token 1098: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7210257649421692
    2. '
' → logprob: -1.0960257053375244
    3. '        
' → logprob: -1.7210257053375244
    4. '       
' → logprob: -9.096025466918945
    5. '```' → logprob: -9.346025466918945
    6. '    
' → logprob: -9.721025466918945
    7. ' 
' → logprob: -9.971025466918945
    8. 'import' → logprob: -10.221025466918945
    9. '            
' → logprob: -10.221025466918945
    10. '        

' → logprob: -10.221025466918945

Token 1099: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1703721284866333
    2. 'if' → logprob: -2.0453720092773438
    3. 'log' → logprob: -4.045372009277344
    4. '        
' → logprob: -5.795372009277344
    5. 'try' → logprob: -5.920372009277344
    6. '
' → logprob: -6.045372009277344
    7. ' if' → logprob: -6.420372009277344
    8. '#' (adapté à ' #') → logprob: -10.420372009277344
    9. 'import' → logprob: -11.795372009277344
    10. '       
' → logprob: -11.920372009277344

Token 1100: ' Handle' (ID: 25041)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005464978516101837
    2. '       ' → logprob: -5.380465030670166
    3. '#' → logprob: -8.005464553833008
    4. '
' → logprob: -8.630464553833008
    5. 'log' → logprob: -8.880464553833008
    6. 'try' → logprob: -9.255464553833008
    7. ' if' → logprob: -9.505464553833008
    8. 'def' → logprob: -11.255464553833008
    9. '        
' → logprob: -12.255464553833008
    10. '```' → logprob: -13.505464553833008

Token 1101: ' ' (ID: 220)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.5690701603889465
    2. ' base' → logprob: -1.1940701007843018
    3. '(base' → logprob: -2.0690701007843018
    4. '0' → logprob: -6.069070339202881
    5. ' (' → logprob: -6.444070339202881
    6. '(' → logprob: -7.694070339202881
    7. ' ' → logprob: -9.819069862365723
    8. '
' → logprob: -9.819069862365723
    9. '((' → logprob: -10.069069862365723
    10. '(
' → logprob: -10.319069862365723

Token 1102: '0' (ID: 15)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.004457178059965372
    2. '(base' → logprob: -5.504456996917725
    3. '0' → logprob: -8.504457473754883
    4. ' base' → logprob: -9.004457473754883
    5. '(' → logprob: -11.129457473754883
    6. '
' → logprob: -11.504457473754883
    7. '   ' → logprob: -11.754457473754883
    8. 'math' → logprob: -12.129457473754883
    9. '((' → logprob: -13.254457473754883
    10. ' (' → logprob: -13.629457473754883

Token 1103: '^' (ID: 61)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.511071503162384
    2. ' if' → logprob: -1.6360714435577393
    3. ' bases' → logprob: -2.1360714435577393
    4. ' base' → logprob: -3.6360714435577393
    5. 'if' → logprob: -3.8860714435577393
    6. 'bases' → logprob: -4.511071681976318
    7. 'and' → logprob: -5.511071681976318
    8. ' ==' → logprob: -5.636071681976318
    9. '   ' → logprob: -5.761071681976318
    10. 'base' → logprob: -5.886071681976318

Token 1104: 'exp' (ID: 8067)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2007883671903983e-05
    2. ' ' → logprob: -11.125021934509277
    3. '1' → logprob: -12.875021934509277
    4. 'base' → logprob: -13.125021934509277
    5. ')' → logprob: -14.625021934509277
    6. '```' → logprob: -15.125021934509277
    7. '
' → logprob: -15.250021934509277
    8. '#' → logprob: -15.375021934509277
    9. '{' → logprob: -15.500021934509277
    10. '2' → logprob: -15.625021934509277

Token 1105: ' cases' (ID: 7911)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053843460977077484
    2. ' if' → logprob: -3.6788434982299805
    3. '1' → logprob: -4.1788434982299805
    4. 'if' → logprob: -5.1788434982299805
    5. '
' → logprob: -6.5538434982299805
    6. ' and' → logprob: -6.9288434982299805
    7. ':
' → logprob: -6.9288434982299805
    8. ' =' → logprob: -7.4288434982299805
    9. '=' → logprob: -7.6788434982299805
    10. '        
' → logprob: -7.8038434982299805

Token 1106: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008582198061048985
    2. ' if' → logprob: -7.375858306884766
    3. 'if' → logprob: -9.000858306884766
    4. '
' → logprob: -9.500858306884766
    5. '        
' → logprob: -10.375858306884766
    6. ',' → logprob: -14.250858306884766
    7. '```' → logprob: -14.500858306884766
    8. '           ' → logprob: -15.000858306884766
    9. '       
' → logprob: -15.375858306884766
    10. '   ' → logprob: -16.500858306884766

Token 1107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001035787514410913
    2. 'if' → logprob: -7.126035690307617
    3. ' if' → logprob: -8.376035690307617
    4. '```' → logprob: -15.001035690307617
    5. '   ' → logprob: -15.751035690307617
    6. '
' → logprob: -15.751035690307617
    7. '           ' → logprob: -16.376035690307617
    8. '        
' → logprob: -16.501035690307617
    9. 'import' → logprob: -17.001035690307617
    10. '      ' → logprob: -18.501035690307617

Token 1108: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12863287329673767
    2. '       ' → logprob: -2.1286327838897705
    3. ' if' → logprob: -6.37863302230835
    4. '   ' → logprob: -12.503632545471191
    5. '
' → logprob: -13.628632545471191
    6. 'for' → logprob: -14.878632545471191
    7. '        
' → logprob: -15.253632545471191
    8. '```' → logprob: -15.503632545471191
    9. ' ' → logprob: -16.503633499145508
    10. '	if' → logprob: -17.128633499145508

Token 1109: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -7.52919222577475e-05
    2. ' base' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.375075340270996
    4. '(base' → logprob: -16.62507438659668
    5. '       ' → logprob: -17.12507438659668
    6. '           ' → logprob: -17.25007438659668
    7. '0' → logprob: -18.00007438659668
    8. '     ' → logprob: -19.37507438659668
    9. '
' → logprob: -19.37507438659668
    10. '	base' → logprob: -19.75007438659668

Token 1110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005005090497434139
    2. ' ==' → logprob: -5.8800048828125
    3. '==' → logprob: -6.1300048828125
    4. '   ' → logprob: -12.5050048828125
    5. '```' → logprob: -12.6300048828125
    6. '==
' → logprob: -12.7550048828125
    7. '_' → logprob: -12.8800048828125
    8. ' ' → logprob: -13.1300048828125
    9. '
' → logprob: -13.2550048828125
    10. '0' → logprob: -13.8800048828125

Token 1111: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931667923927307
    2. ' ==' → logprob: -0.6931667923927307
    3. '==
' → logprob: -11.193166732788086
    4. ')==' → logprob: -13.318166732788086
    5. '```' → logprob: -13.943166732788086
    6. ']==' → logprob: -14.193166732788086
    7. '<=' → logprob: -14.318166732788086
    8. ')' → logprob: -14.943166732788086
    9. '=' → logprob: -15.068166732788086
    10. ' ' → logprob: -15.443166732788086

Token 1112: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015860427811276168
    2. ' ' → logprob: -8.750158309936523
    3. '1' → logprob: -16.875158309936523
    4. '=' → logprob: -18.250158309936523
    5. '
' → logprob: -18.375158309936523
    6. '   ' → logprob: -18.625158309936523
    7. '       ' → logprob: -18.875158309936523
    8. '```' → logprob: -19.000158309936523
    9. '           ' → logprob: -19.375158309936523
    10. '  ' → logprob: -19.375158309936523

Token 1113: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1888679839321412e-05
    2. ' ' → logprob: -10.750021934509277
    3. '1' → logprob: -15.750021934509277
    4. 'base' → logprob: -15.750021934509277
    5. '   ' → logprob: -17.12502098083496
    6. '
' → logprob: -17.12502098083496
    7. '       ' → logprob: -17.68752098083496
    8. '  ' → logprob: -18.25002098083496
    9. '۰' → logprob: -18.31252098083496
    10. '```' → logprob: -18.50002098083496

Token 1114: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.46888965368270874
    2. ' and' → logprob: -1.0938897132873535
    3. '       ' → logprob: -3.5938897132873535
    4. '           ' → logprob: -5.4688897132873535
    5. 'and' → logprob: -5.5938897132873535
    6. ':' → logprob: -5.7188897132873535
    7. '   ' → logprob: -7.7188897132873535
    8. ' or' → logprob: -9.343889236450195
    9. ':return' → logprob: -9.968889236450195
    10. ' ' → logprob: -10.843889236450195

Token 1115: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.39689043164253235
    2. 'base' → logprob: -1.14689040184021
    3. '(exp' → logprob: -5.271890640258789
    4. '(base' → logprob: -5.521890640258789
    5. '(' → logprob: -7.646890640258789
    6. ' exp' → logprob: -9.146890640258789
    7. ' (' → logprob: -9.271890640258789
    8. ' base' → logprob: -9.646890640258789
    9. '((' → logprob: -10.646890640258789
    10. 'not' → logprob: -11.146890640258789

Token 1116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.29807278513908386
    2. '_list' → logprob: -1.7980728149414062
    3. '2' → logprob: -2.9230728149414062
    4. ' ==' → logprob: -3.9230728149414062
    5. '==' → logprob: -4.048072814941406
    6. '   ' → logprob: -7.923072814941406
    7. ' !=' → logprob: -9.173072814941406
    8. '       ' → logprob: -9.173072814941406
    9. '!=' → logprob: -9.173072814941406
    10. 'List' → logprob: -9.423072814941406

Token 1117: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759784579277039
    2. '==' → logprob: -0.8259784579277039
    3. '==
' → logprob: -11.07597827911377
    4. ')==' → logprob: -12.07597827911377
    5. ' ==
' → logprob: -12.82597827911377
    6. ']==' → logprob: -13.20097827911377
    7. '<|end|>' → logprob: -13.20097827911377
    8. ' ' → logprob: -13.45097827911377
    9. ' !=' → logprob: -13.45097827911377
    10. '=' → logprob: -13.57597827911377

Token 1118: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020902375399600714
    2. ' ' → logprob: -8.500208854675293
    3. '1' → logprob: -12.250208854675293
    4. '۰' → logprob: -16.06270980834961
    5. '   ' → logprob: -16.37520980834961
    6. '=' → logprob: -16.81270980834961
    7. '  ' → logprob: -16.87520980834961
    8. '```' → logprob: -16.93770980834961
    9. '<|end|>' → logprob: -17.00020980834961
    10. '[' → logprob: -17.12520980834961

Token 1119: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -11.750008583068848
    3. '1' → logprob: -14.875008583068848
    4. '۰' → logprob: -18.12500762939453
    5. '[' → logprob: -18.75000762939453
    6. '=' → logprob: -18.81250762939453
    7. '   ' → logprob: -19.00000762939453
    8. '<|end|>' → logprob: -19.25000762939453
    9. '```' → logprob: -19.25000762939453
    10. '
' → logprob: -19.31250762939453

Token 1120: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7304385900497437
    2. ':' → logprob: -0.9804385900497437
    3. '           ' → logprob: -1.9804385900497437
    4. '       ' → logprob: -5.605438709259033
    5. ':return' → logprob: -6.855438709259033
    6. ' and' → logprob: -8.605438232421875
    7. '               ' → logprob: -9.605438232421875
    8. ' or' → logprob: -9.855438232421875
    9. '):
' → logprob: -11.105438232421875
    10. '   ' → logprob: -11.355438232421875

Token 1121: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00027968952781520784
    2. '               ' → logprob: -9.125279426574707
    3. ' return' → logprob: -9.500279426574707
    4. 'return' → logprob: -10.375279426574707
    5. ':
' → logprob: -10.500279426574707
    6. ':' → logprob: -11.000279426574707
    7. '       ' → logprob: -11.625279426574707
    8. '          ' → logprob: -13.000279426574707
    9. '            ' → logprob: -13.875279426574707
    10. ':return' → logprob: -14.000279426574707

Token 1122: ' val' (ID: 1459)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.33902809023857117
    2. ' return' → logprob: -1.3390281200408936
    3. '1' → logprob: -4.0890278816223145
    4. '           ' → logprob: -5.3390278816223145
    5. 'val' (adapté à ' val') → logprob: -6.7140278816223145
    6. '0' → logprob: -6.9640278816223145
    7. ' ' → logprob: -7.2140278816223145
    8. ' val' → logprob: -7.5890278816223145
    9. 'if' → logprob: -9.464028358459473
    10. ' if' → logprob: -9.464028358459473

Token 1123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4695245027542114
    2. ' =' → logprob: -1.3445245027542114
    3. '=' → logprob: -2.219524383544922
    4. 'return' → logprob: -5.844524383544922
    5. '_return' → logprob: -7.344524383544922
    6. '           ' → logprob: -7.719524383544922
    7. '(' → logprob: -7.844524383544922
    8. '_val' → logprob: -8.469524383544922
    9. '_result' → logprob: -9.094524383544922
    10. '_' → logprob: -9.344524383544922

Token 1124: '_ln' (ID: 135809)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005235648714005947
    2. ' =' → logprob: -5.25523567199707
    3. ',' → logprob: -13.25523567199707
    4. '=
' → logprob: -18.13023567199707
    5. '==' → logprob: -18.38023567199707
    6. '           ' → logprob: -18.38023567199707
    7. ')' → logprob: -18.88023567199707
    8. 'return' → logprob: -19.25523567199707
    9. '   ' → logprob: -19.50523567199707
    10. ' ' → logprob: -19.75523567199707

Token 1125: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759530663490295
    2. ' =' → logprob: -0.8259530663490295
    3. ',' → logprob: -11.450953483581543
    4. '       ' → logprob: -13.700953483581543
    5. ')' → logprob: -14.700953483581543
    6. '        ' → logprob: -15.200953483581543
    7. ':' → logprob: -15.325953483581543
    8. '   ' → logprob: -15.575953483581543
    9. ' ' → logprob: -15.700953483581543
    10. '=None' → logprob: -15.825953483581543

Token 1126: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00036799011286348104
    2. 'float' → logprob: -8.125368118286133
    3. 'math' → logprob: -9.875368118286133
    4. ' ' → logprob: -11.000368118286133
    5. 'None' → logprob: -14.125368118286133
    6. '1' → logprob: -14.125368118286133
    7. '-' → logprob: -14.500368118286133
    8. ' float' → logprob: -14.750368118286133
    9. ' math' → logprob: -15.250368118286133
    10. 'import' → logprob: -15.375368118286133

Token 1127: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008105047047138214
    2. 'float' → logprob: -4.883105278015137
    3. 'math' → logprob: -7.633105278015137
    4. '-' → logprob: -12.133105278015137
    5. ' ' → logprob: -13.008105278015137
    6. '1' → logprob: -13.383105278015137
    7. 'None' → logprob: -13.508105278015137
    8. 'val' → logprob: -13.883105278015137
    9. ' float' → logprob: -13.883105278015137
    10. '(' → logprob: -14.508105278015137

Token 1128: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4944003224372864
    2. '       ' → logprob: -1.1194002628326416
    3. '.' → logprob: -2.8694002628326416
    4. 'else' → logprob: -5.619400501251221
    5. ' else' → logprob: -6.744400501251221
    6. ' if' → logprob: -7.619400501251221
    7. '
' → logprob: -8.494400024414062
    8. 'if' → logprob: -8.494400024414062
    9. '.
' → logprob: -8.619400024414062
    10. '<|end|>' → logprob: -8.744400024414062

Token 1129: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002876676619052887
    2. '5' → logprob: -5.8778767585754395
    3. '
' → logprob: -11.127876281738281
    4. '1' → logprob: -11.127876281738281
    5. '       ' → logprob: -11.502876281738281
    6. '   ' → logprob: -11.877876281738281
    7. '```' → logprob: -11.877876281738281
    8. 'math' → logprob: -12.377876281738281
    9. ' ' → logprob: -12.627876281738281
    10. 'log' → logprob: -13.502876281738281

Token 1130: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2959030866622925
    2. '       ' → logprob: -1.4209030866622925
    3. 'else' → logprob: -4.545903205871582
    4. ' else' → logprob: -6.295903205871582
    5. 'elif' → logprob: -6.795903205871582
    6. '        
' → logprob: -7.795903205871582
    7. '<|end|>' → logprob: -8.920903205871582
    8. '   ' → logprob: -9.045903205871582
    9. '    
' → logprob: -9.295903205871582
    10. ' 
' → logprob: -9.295903205871582

Token 1131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030179468914866447
    2. '
' → logprob: -4.280179500579834
    3. 'elif' → logprob: -4.280179500579834
    4. ' elif' → logprob: -7.155179500579834
    5. 'else' → logprob: -7.530179500579834
    6. '<|end|>' → logprob: -8.655179023742676
    7. '\n' → logprob: -8.905179023742676
    8. ' else' → logprob: -9.405179023742676
    9. '```' → logprob: -9.405179023742676
    10. '        
' → logprob: -9.655179023742676

Token 1132: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.49365490674972534
    2. '       ' → logprob: -1.4936549663543701
    3. ' else' → logprob: -1.8686549663543701
    4. 'elif' (adapté à ' elif') → logprob: -4.618654727935791
    5. ' elif' → logprob: -7.118654727935791
    6. '
' → logprob: -11.49365520477295
    7. '```' → logprob: -11.86865520477295
    8. '   ' → logprob: -11.99365520477295
    9. '\
' → logprob: -12.74365520477295
    10. '	else' → logprob: -12.86865520477295

Token 1133: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.026614811271429062
    2. ' base' → logprob: -3.7766149044036865
    3. 'exp' → logprob: -5.901614665985107
    4. 'ex' → logprob: -8.776615142822266
    5. 'val' → logprob: -8.901615142822266
    6. '0' → logprob: -9.526615142822266
    7. '           ' → logprob: -9.651615142822266
    8. 'math' → logprob: -9.901615142822266
    9. '       ' → logprob: -10.526615142822266
    10. '   ' → logprob: -10.526615142822266

Token 1134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011594036914175376
    2. '==' → logprob: -9.375116348266602
    3. ' ==' → logprob: -11.250116348266602
    4. '2' → logprob: -12.000116348266602
    5. '```' → logprob: -12.000116348266602
    6. ' ' → logprob: -13.000116348266602
    7. '_' → logprob: -14.125116348266602
    8. '0' → logprob: -14.750116348266602
    9. '==
' → logprob: -15.000116348266602
    10. '
' → logprob: -15.000116348266602

Token 1135: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22549845278263092
    2. '==' → logprob: -1.6004984378814697
    3. ' !=' → logprob: -11.22549819946289
    4. '```' → logprob: -11.22549819946289
    5. '>' → logprob: -11.35049819946289
    6. '0' → logprob: -11.85049819946289
    7. '==
' → logprob: -11.85049819946289
    8. '   ' → logprob: -11.97549819946289
    9. '<' → logprob: -12.35049819946289
    10. ' <' → logprob: -12.47549819946289

Token 1136: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001692315679974854
    2. '1' → logprob: -6.501692295074463
    3. ' ' → logprob: -8.626692771911621
    4. '   ' → logprob: -12.751692771911621
    5. '```' → logprob: -13.439192771911621
    6. '[' → logprob: -14.126692771911621
    7. '=' → logprob: -14.376692771911621
    8. 'import' → logprob: -14.501692771911621
    9. '{
' → logprob: -14.689192771911621
    10. '  ' → logprob: -14.939192771911621

Token 1137: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.980854959692806e-05
    2. ' ' → logprob: -9.750069618225098
    3. '1' → logprob: -11.500069618225098
    4. '   ' → logprob: -15.562569618225098
    5. 'from' → logprob: -15.875069618225098
    6. '[' → logprob: -16.062570571899414
    7. '>' → logprob: -16.187570571899414
    8. 'import' → logprob: -16.312570571899414
    9. '۰' → logprob: -16.312570571899414
    10. '```' → logprob: -16.500070571899414

Token 1138: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11351203173398972
    2. 'and' → logprob: -3.1135120391845703
    3. ' and' → logprob: -3.4885120391845703
    4. ':' → logprob: -3.8635120391845703
    5. '       ' → logprob: -5.23851203918457
    6. '   ' → logprob: -5.86351203918457
    7. '           ' → logprob: -6.23851203918457
    8. ' or' → logprob: -7.98851203918457
    9. 'or' → logprob: -8.48851203918457
    10. ':return' → logprob: -8.48851203918457

Token 1139: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0037683742120862007
    2. ':
' → logprob: -6.628768444061279
    3. '       ' → logprob: -7.503768444061279
    4. '               ' → logprob: -7.753768444061279
    5. ' =' → logprob: -8.378767967224121
    6. ':' → logprob: -8.503767967224121
    7. 'return' → logprob: -8.628767967224121
    8. ' return' → logprob: -8.628767967224121
    9. '
' → logprob: -9.753767967224121
    10. '	       ' → logprob: -9.753767967224121

Token 1140: ' val' (ID: 1459)
  Prédit: '-val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-val' → logprob: -0.8600907325744629
    2. 'float' → logprob: -0.9850907325744629
    3. '-' → logprob: -1.985090732574463
    4. '0' → logprob: -3.235090732574463
    5. 'val' (adapté à ' val') → logprob: -3.735090732574463
    6. '-f' → logprob: -7.110090732574463
    7. ' float' → logprob: -7.735090732574463
    8. '           ' → logprob: -8.235090255737305
    9. ' ' → logprob: -8.360090255737305
    10. '   ' → logprob: -8.735090255737305

Token 1141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005307526444084942
    2. '_ln' → logprob: -8.000531196594238
    3. '0' → logprob: -9.750531196594238
    4. '_val' → logprob: -10.000531196594238
    5. '=' → logprob: -10.375531196594238
    6. ' =' → logprob: -11.125531196594238
    7. '
' → logprob: -11.625531196594238
    8. '_' → logprob: -11.750531196594238
    9. 'val' → logprob: -11.875531196594238
    10. '```' → logprob: -12.500531196594238

Token 1142: '_ln' (ID: 135809)
  Prédit: '_ln'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ln' → logprob: -0.04186680540442467
    2. '=' → logprob: -3.7918667793273926
    3. ' =' → logprob: -4.041866779327393
    4. '_' → logprob: -8.04186725616455
    5. '=_' → logprob: -8.54186725616455
    6. '_ls' → logprob: -9.79186725616455
    7. '_ll' → logprob: -10.41686725616455
    8. '_l' → logprob: -10.54186725616455
    9. '_=' → logprob: -10.66686725616455
    10. '   ' → logprob: -10.66686725616455

Token 1143: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008623793721199036
    2. ' =' → logprob: -4.7586236000061035
    3. '=-' → logprob: -11.633624076843262
    4. '=float' → logprob: -15.383624076843262
    5. '=
' → logprob: -17.133623123168945
    6. '           ' → logprob: -17.383623123168945
    7. '       ' → logprob: -17.508623123168945
    8. '   ' → logprob: -18.383623123168945
    9. '         ' → logprob: -18.383623123168945
    10. ' ' → logprob: -18.633623123168945

Token 1144: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.42212238907814026
    2. '-' → logprob: -1.4221223592758179
    3. '-f' → logprob: -2.2971224784851074
    4. ' float' → logprob: -7.047122478485107
    5. '-m' → logprob: -7.172122478485107
    6. '0' → logprob: -7.797122478485107
    7. '=float' → logprob: -9.29712200164795
    8. '-fl' → logprob: -9.79712200164795
    9. ' -' → logprob: -9.92212200164795
    10. '-value' → logprob: -10.54712200164795

Token 1145: '('-' (ID: 33343)
  Prédit: '('-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('-' → logprob: -0.048633236438035965
    2. ''-' → logprob: -3.048633337020874
    3. '"-' → logprob: -10.673633575439453
    4. '("-' → logprob: -11.173633575439453
    5. '-' → logprob: -12.548633575439453
    6. '(' → logprob: -12.798633575439453
    7. '(-' → logprob: -13.173633575439453
    8. '('' → logprob: -15.923633575439453
    9. '’-' → logprob: -16.798633575439453
    10. '(
' → logprob: -16.923633575439453

Token 1146: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0009888652712106705
    2. 'math' → logprob: -7.375988960266113
    3. ''' → logprob: -8.250988960266113
    4. ''in' → logprob: -9.375988960266113
    5. 'in' → logprob: -11.250988960266113
    6. 'float' → logprob: -14.625988960266113
    7. ''s' → logprob: -14.625988960266113
    8. '100' → logprob: -14.750988960266113
    9. '_inf' → logprob: -15.000988960266113
    10. '-inf' → logprob: -15.000988960266113

Token 1147: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.014769898727536201
    2. '')' → logprob: -4.264770030975342
    3. '       ' → logprob: -7.639770030975342
    4. ')
' → logprob: -9.639769554138184
    5. ')' → logprob: -10.639769554138184
    6. '           ' → logprob: -11.514769554138184
    7. ')')
' → logprob: -11.639769554138184
    8. '')
' → logprob: -12.139769554138184
    9. ' ')
' → logprob: -12.139769554138184
    10. ''' → logprob: -13.264769554138184

Token 1148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12730351090431213
    2. 'else' → logprob: -2.6273036003112793
    3. ' else' → logprob: -3.7523036003112793
    4. 'elif' → logprob: -3.8773036003112793
    5. ' elif' → logprob: -5.877303600311279
    6. '
' → logprob: -9.502303123474121
    7. '<|end|>' → logprob: -10.002303123474121
    8. '           ' → logprob: -10.252303123474121
    9. ')' → logprob: -10.377303123474121
    10. '   ' → logprob: -10.502303123474121

Token 1149: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4755479097366333
    2. '       ' → logprob: -1.1005479097366333
    3. ' else' → logprob: -3.3505477905273438
    4. 'elif' → logprob: -4.600547790527344
    5. ' elif' → logprob: -7.350547790527344
    6. '   ' → logprob: -12.475547790527344
    7. '           ' → logprob: -13.225547790527344
    8. 'import' → logprob: -13.475547790527344
    9. ')' → logprob: -13.850547790527344
    10. '```' → logprob: -13.850547790527344

Token 1150: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7869372367858887
    2. '           ' → logprob: -0.9119372367858887
    3. ':
' → logprob: -2.0369372367858887
    4. '       ' → logprob: -4.536937236785889
    5. ' =' → logprob: -7.911937236785889
    6. ' if' → logprob: -8.161937713623047
    7. ',' → logprob: -8.161937713623047
    8. 'import' → logprob: -8.786937713623047
    9. '=' → logprob: -9.161937713623047
    10. ' and' → logprob: -9.286937713623047

Token 1151: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3912409245967865
    2. ' val' → logprob: -1.2662409543991089
    3. '       ' → logprob: -3.6412408351898193
    4. '               ' → logprob: -5.641241073608398
    5. 'val' → logprob: -5.766241073608398
    6. '        ' → logprob: -5.766241073608398
    7. ' math' → logprob: -6.641241073608398
    8. ' ' → logprob: -7.016241073608398
    9. '            ' → logprob: -7.391241073608398
    10. ' try' → logprob: -7.516241073608398

Token 1152: ' try' (ID: 2075)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.030818453058600426
    2. 'exp' → logprob: -4.030818462371826
    3. ' val' → logprob: -5.155818462371826
    4. 'try' (adapté à ' try') → logprob: -5.280818462371826
    5. '           ' → logprob: -7.155818462371826
    6. 'import' → logprob: -7.405818462371826
    7. 'math' → logprob: -9.030817985534668
    8. 'if' → logprob: -9.155817985534668
    9. 'log' → logprob: -9.905817985534668
    10. ' exp' → logprob: -11.030817985534668

Token 1153: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8252885937690735
    2. '               ' → logprob: -0.8252885937690735
    3. ':
' → logprob: -2.9502885341644287
    4. ' math' → logprob: -3.7002885341644287
    5. '           ' → logprob: -3.9502885341644287
    6. '(math' → logprob: -5.200288772583008
    7. 'import' → logprob: -5.450288772583008
    8. '            ' → logprob: -5.450288772583008
    9. ':return' → logprob: -5.575288772583008
    10. ' (' → logprob: -6.200288772583008

Token 1154: '               ' (ID: 506)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.39897850155830383
    2. '               ' → logprob: -1.8989784717559814
    3. 'val' → logprob: -2.1489784717559814
    4. '           ' → logprob: -2.8989784717559814
    5. '            ' → logprob: -6.0239787101745605
    6. 'import' → logprob: -6.8989787101745605
    7. '             ' → logprob: -7.6489787101745605
    8. '       ' → logprob: -7.7739787101745605
    9. '                ' → logprob: -7.7739787101745605
    10. ' import' → logprob: -7.8989787101745605

Token 1155: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.20979492366313934
    2. ' val' → logprob: -1.7097948789596558
    3. 'exp' → logprob: -5.584794998168945
    4. 'math' → logprob: -5.834794998168945
    5. '               ' → logprob: -7.334794998168945
    6. 'import' → logprob: -7.584794998168945
    7. ' math' → logprob: -7.834794998168945
    8. '           ' → logprob: -10.084794998168945
    9. ' exp' → logprob: -10.459794998168945
    10. '                   ' → logprob: -11.334794998168945

Token 1156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04105456545948982
    2. '_ln' → logprob: -3.2910544872283936
    3. '=' → logprob: -7.291054725646973
    4. '           ' → logprob: -7.541054725646973
    5. '=_' → logprob: -7.916054725646973
    6. ' =' → logprob: -8.041054725646973
    7. '_' → logprob: -8.666054725646973
    8. 'ln' → logprob: -8.916054725646973
    9. '```' → logprob: -9.166054725646973
    10. ')' → logprob: -9.166054725646973

Token 1157: '_ln' (ID: 135809)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7147197127342224
    2. '_ln' → logprob: -0.7147197127342224
    3. ' =' → logprob: -3.964719772338867
    4. '_log' → logprob: -7.089719772338867
    5. '=_' → logprob: -7.339719772338867
    6. '_' → logprob: -8.714719772338867
    7. '_l' → logprob: -9.214719772338867
    8. '   ' → logprob: -9.464719772338867
    9. 'ln' → logprob: -9.589719772338867
    10. '
' → logprob: -9.839719772338867

Token 1158: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693147599697113
    2. ' =' → logprob: -0.693147599697113
    3. ')' → logprob: -16.068147659301758
    4. '           ' → logprob: -16.693147659301758
    5. '   ' → logprob: -17.193147659301758
    6. '=float' → logprob: -17.193147659301758
    7. '               ' → logprob: -17.693147659301758
    8. ' ' → logprob: -17.693147659301758
    9. '```' → logprob: -17.693147659301758
    10. '            ' → logprob: -18.068147659301758

Token 1159: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -2.9160102712921798e-05
    2. 'ex' → logprob: -10.750029563903809
    3. 'math' → logprob: -12.250029563903809
    4. ' exp' → logprob: -13.000029563903809
    5. '           ' → logprob: -14.875029563903809
    6. 'import' → logprob: -16.375028610229492
    7. '   ' → logprob: -16.625028610229492
    8. '               ' → logprob: -17.250028610229492
    9. 'float' → logprob: -17.750028610229492
    10. '       ' → logprob: -17.875028610229492

Token 1160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00039135036058723927
    2. '   ' → logprob: -9.500391006469727
    3. '           ' → logprob: -9.625391006469727
    4. 'import' → logprob: -10.125391006469727
    5. 'math' → logprob: -10.500391006469727
    6. '       ' → logprob: -11.125391006469727
    7. '**' → logprob: -11.250391006469727
    8. '                   ' → logprob: -11.250391006469727
    9. '```' → logprob: -11.250391006469727
    10. '               ' → logprob: -11.250391006469727

Token 1161: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.31328216195106506
    2. '*' → logprob: -1.3132821321487427
    3. 'import' → logprob: -12.563282012939453
    4. '           ' → logprob: -12.688282012939453
    5. '               ' → logprob: -12.938282012939453
    6. ' ' → logprob: -13.313282012939453
    7. '   ' → logprob: -13.438282012939453
    8. '*Math' → logprob: -13.813282012939453
    9. '*object' → logprob: -13.813282012939453
    10. ' ' → logprob: -13.813282012939453

Token 1162: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.001049838843755424
    2. ' math' → logprob: -6.876049995422363
    3. '(math' → logprob: -11.001049995422363
    4. 'Math' → logprob: -16.126049041748047
    5. 'import' → logprob: -16.251049041748047
    6. '.math' → logprob: -16.751049041748047
    7. 'log' → logprob: -17.126049041748047
    8. 'max' → logprob: -18.376049041748047
    9. 'cmath' → logprob: -18.501049041748047
    10. '\xf0\x9d' → logprob: -18.751049041748047

Token 1163: '.log' (ID: 2659)
  Prédit: '.log'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.log' → logprob: -0.04862256348133087
    2. 'log' → logprob: -3.0486226081848145
    3. ' log' → logprob: -11.048622131347656
    4. 'import' → logprob: -11.923622131347656
    5. '"log' → logprob: -12.173622131347656
    6. '_log' → logprob: -12.298622131347656
    7. '(log' → logprob: -14.173622131347656
    8. 'math' → logprob: -14.548622131347656
    9. '.' → logprob: -14.673622131347656
    10. '```' → logprob: -15.298622131347656

Token 1164: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.00408647395670414
    2. 'base' → logprob: -5.504086494445801
    3. ' base' → logprob: -12.5040864944458
    4. '(' → logprob: -13.0040864944458
    5. '(
' → logprob: -13.5040864944458
    6. '10' → logprob: -14.1290864944458
    7. '2' → logprob: -17.379085540771484
    8. '	base' → logprob: -18.879085540771484
    9. '
' → logprob: -19.004085540771484
    10. '1' → logprob: -19.129085540771484

Token 1165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012448744382709265
    2. '(base' → logprob: -6.876245021820068
    3. 'base' → logprob: -8.87624454498291
    4. ')' → logprob: -10.00124454498291
    5. '(' → logprob: -11.00124454498291
    6. '10' → logprob: -13.37624454498291
    7. '```' → logprob: -13.62624454498291
    8. ' base' → logprob: -13.75124454498291
    9. '
' → logprob: -13.87624454498291
    10. '_' → logprob: -14.00124454498291

Token 1166: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1604670286178589
    2. ')
' → logprob: -1.9104670286178589
    3. '           ' → logprob: -8.785467147827148
    4. '               ' → logprob: -9.660467147827148
    5. '       ' → logprob: -11.160467147827148
    6. ' )' → logprob: -12.285467147827148
    7. ' )
' → logprob: -12.410467147827148
    8. ')
' → logprob: -13.035467147827148
    9. ')

' → logprob: -15.285467147827148
    10. '                   ' → logprob: -15.785467147827148

Token 1167: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0671892911195755
    2. '<|end|>' → logprob: -3.1921892166137695
    3. '           ' → logprob: -4.1921892166137695
    4. '<|end|>' → logprob: -5.8171892166137695
    5. ')' → logprob: -6.4421892166137695
    6. '
' → logprob: -6.6921892166137695
    7. '\n' → logprob: -6.9421892166137695
    8. '               ' → logprob: -7.9421892166137695
    9. 'except' → logprob: -8.31718921661377
    10. '#' → logprob: -8.44218921661377

Token 1168: ' except' (ID: 6384)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28611716628074646
    2. 'except' (adapté à ' except') → logprob: -1.5361171960830688
    3. ' except' → logprob: -3.7861170768737793
    4. '       ' → logprob: -4.536117076873779
    5. '	except' → logprob: -8.786117553710938
    6. '               ' → logprob: -10.161117553710938
    7. '	       ' → logprob: -12.161117553710938
    8. ',' → logprob: -12.786117553710938
    9. ')' → logprob: -13.036117553710938
    10. '   ' → logprob: -13.161117553710938

Token 1169: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.04861121252179146
    2. '(Value' → logprob: -3.0486111640930176
    3. '(' → logprob: -11.173611640930176
    4. ' Value' → logprob: -12.423611640930176
    5. 'Exception' → logprob: -13.048611640930176
    6. 'Overflow' → logprob: -13.548611640930176
    7. 'Domain' → logprob: -14.298611640930176
    8. 'Zero' → logprob: -14.423611640930176
    9. '(value' → logprob: -14.923611640930176
    10. 'Arithmetic' → logprob: -14.923611640930176

Token 1170: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.8789383830153383e-05
    2. 'rror' → logprob: -11.625019073486328
    3. 'Value' → logprob: -12.000019073486328
    4. 'error' → logprob: -14.125019073486328
    5. 'LError' → logprob: -14.250019073486328
    6. '	Error' → logprob: -14.375019073486328
    7. 'SError' → logprob: -14.750019073486328
    8. '_error' → logprob: -15.125019073486328
    9. '[' → logprob: -15.750019073486328
    10. ' Error' → logprob: -15.875019073486328

Token 1171: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1515282690525055
    2. '               ' → logprob: -2.7765283584594727
    3. '           ' → logprob: -2.9015283584594727
    4. ':
' → logprob: -4.401528358459473
    5. '<|end|>' → logprob: -5.401528358459473
    6. ')' → logprob: -6.276528358459473
    7. '):' → logprob: -6.401528358459473
    8. ':return' → logprob: -7.526528358459473
    9. '):
' → logprob: -7.776528358459473
    10. '<|end|>' → logprob: -8.151528358459473

Token 1172: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015530710807070136
    2. ':' → logprob: -7.751553058624268
    3. ':
' → logprob: -8.001553535461426
    4. '           ' → logprob: -8.126553535461426
    5. '                ' → logprob: -8.251553535461426
    6. ' as' → logprob: -10.126553535461426
    7. '            ' → logprob: -10.376553535461426
    8. ':return' → logprob: -10.376553535461426
    9. '              ' → logprob: -10.751553535461426
    10. ')' → logprob: -11.001553535461426

Token 1173: ' #' (ID: 1069)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.13513022661209106
    2. ' float' → logprob: -2.1351301670074463
    3. 'return' → logprob: -5.135130405426025
    4. ' return' → logprob: -6.885130405426025
    5. '               ' → logprob: -7.010130405426025
    6. '0' → logprob: -9.135129928588867
    7. '           ' → logprob: -9.135129928588867
    8. '-' → logprob: -9.635129928588867
    9. 'val' → logprob: -10.885129928588867
    10. '                ' → logprob: -11.885129928588867

Token 1174: ' log' (ID: 2142)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.01473594643175602
    2. 'return' → logprob: -4.264736175537109
    3. 'float' → logprob: -8.26473617553711
    4. '#' → logprob: -9.26473617553711
    5. 'if' → logprob: -9.26473617553711
    6. '0' → logprob: -9.88973617553711
    7. ' val' → logprob: -10.01473617553711
    8. '           ' → logprob: -10.88973617553711
    9. 'import' → logprob: -12.63973617553711
    10. ' return' → logprob: -12.76473617553711

Token 1175: '(' (ID: 7)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.41391488909721375
    2. '(' → logprob: -1.5389149188995361
    3. '(base' → logprob: -3.038914918899536
    4. '0' → logprob: -3.288914918899536
    5. 'base' → logprob: -4.788914680480957
    6. '1' → logprob: -5.163914680480957
    7. '(float' → logprob: -5.288914680480957
    8. '_val' → logprob: -5.538914680480957
    9. '(
' → logprob: -5.538914680480957
    10. 'float' → logprob: -5.663914680480957

Token 1176: '0' (ID: 15)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.043648719787597656
    2. '0' → logprob: -3.1686487197875977
    3. '(base' → logprob: -7.668648719787598
    4. 'val' → logprob: -9.918648719787598
    5. '(' → logprob: -10.043648719787598
    6. ' base' → logprob: -10.418648719787598
    7. 'abs' → logprob: -11.043648719787598
    8. ')' → logprob: -11.168648719787598
    9. '
' → logprob: -11.543648719787598
    10. 'max' → logprob: -12.293648719787598

Token 1177: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007175540085881948
    2. '):
' → logprob: -8.500717163085938
    3. ')
' → logprob: -8.875717163085938
    4. '               ' → logprob: -9.125717163085938
    5. ')=' → logprob: -9.500717163085938
    6. ')==' → logprob: -9.625717163085938
    7. ' or' → logprob: -10.625717163085938
    8. '           ' → logprob: -10.750717163085938
    9. ' is' → logprob: -11.500717163085938
    10. '                   ' → logprob: -11.500717163085938

Token 1178: ' impossible' (ID: 19786)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21567539870738983
    2. ':
' → logprob: -2.2156753540039062
    3. ')' → logprob: -3.5906753540039062
    4. '                   ' → logprob: -4.340675354003906
    5. ':' → logprob: -4.715675354003906
    6. '):
' → logprob: -4.715675354003906
    7. ' =' → logprob: -5.465675354003906
    8. ' or' → logprob: -5.465675354003906
    9. '           ' → logprob: -5.590675354003906
    10. '=' → logprob: -5.590675354003906

Token 1179: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03665892779827118
    2. '           ' → logprob: -3.536659002304077
    3. ':
' → logprob: -6.036658763885498
    4. ' or' → logprob: -6.786658763885498
    5. '
' → logprob: -6.911658763885498
    6. 'return' → logprob: -7.536658763885498
    7. ',' → logprob: -7.536658763885498
    8. ':' → logprob: -8.161659240722656
    9. ' return' → logprob: -8.411659240722656
    10. ' and' → logprob: -8.661659240722656

Token 1180: ' but' (ID: 889)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7149096727371216
    2. '               ' → logprob: -1.2149096727371216
    3. ' return' → logprob: -1.7149096727371216
    4. '           ' → logprob: -4.089909553527832
    5. 'float' → logprob: -4.964909553527832
    6. 'val' → logprob: -5.089909553527832
    7. ' val' → logprob: -5.964909553527832
    8. '0' → logprob: -7.339909553527832
    9. ' float' → logprob: -7.589909553527832
    10. 'import' → logprob: -8.714909553527832

Token 1181: ' handled' (ID: 29594)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3125693202018738
    2. ' return' → logprob: -2.0625693798065186
    3. 'val' → logprob: -2.4375693798065186
    4. '               ' → logprob: -4.1875691413879395
    5. ' val' → logprob: -4.1875691413879395
    6. '0' → logprob: -4.8125691413879395
    7. 'base' → logprob: -5.4375691413879395
    8. '1' → logprob: -5.6875691413879395
    9. 'if' → logprob: -6.1875691413879395
    10. '#' → logprob: -6.5625691413879395

Token 1182: ' above' (ID: 5151)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4577859938144684
    2. 'previous' → logprob: -2.3327860832214355
    3. 'by' → logprob: -2.7077860832214355
    4. 'here' → logprob: -3.5827860832214355
    5. 'else' → logprob: -3.5827860832214355
    6. ' earlier' → logprob: -3.7077860832214355
    7. 'above' → logprob: -3.8327860832214355
    8. '           ' → logprob: -4.0827860832214355
    9. 'below' → logprob: -4.3327860832214355
    10. ' here' → logprob: -4.3327860832214355

Token 1183: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05310703441500664
    2. '           ' → logprob: -3.0531070232391357
    3. ',' → logprob: -6.678107261657715
    4. '       ' → logprob: -6.803107261657715
    5. '
' → logprob: -6.928107261657715
    6. ')' → logprob: -8.178107261657715
    7. ' and' → logprob: -8.678107261657715
    8. ' or' → logprob: -8.803107261657715
    9. '```' → logprob: -9.428107261657715
    10. 'return' → logprob: -9.678107261657715

Token 1184: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011895274743437767
    2. '           ' → logprob: -4.511895179748535
    3. ' return' → logprob: -8.136895179748535
    4. '```' → logprob: -8.511895179748535
    5. '       ' → logprob: -8.636895179748535
    6. ',' → logprob: -9.886895179748535
    7. 'return' → logprob: -11.011895179748535
    8. ' except' → logprob: -11.011895179748535
    9. '                   ' → logprob: -11.011895179748535
    10. ')' → logprob: -11.011895179748535

Token 1185: ' val' (ID: 1459)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.861303985118866
    2. 'val' (adapté à ' val') → logprob: -1.1113040447235107
    3. 'float' → logprob: -1.4863040447235107
    4. ' return' → logprob: -4.861303806304932
    5. '               ' → logprob: -4.986303806304932
    6. ' val' → logprob: -5.236303806304932
    7. ' float' → logprob: -6.486303806304932
    8. '-val' → logprob: -8.61130428314209
    9. '           ' → logprob: -8.98630428314209
    10. '0' → logprob: -8.98630428314209

Token 1186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. '=' → logprob: -14.12500286102295
    3. '           ' → logprob: -14.62500286102295
    4. '2' → logprob: -14.87500286102295
    5. ' =' → logprob: -15.12500286102295
    6. '
' → logprob: -15.25000286102295
    7. '   ' → logprob: -16.500001907348633
    8. ')' → logprob: -16.875001907348633
    9. '       ' → logprob: -16.875001907348633
    10. 'alue' → logprob: -16.875001907348633

Token 1187: '_ln' (ID: 135809)
  Prédit: '_ln'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ln' → logprob: -0.0319209098815918
    2. '=' → logprob: -3.781920909881592
    3. '=_' → logprob: -5.406920909881592
    4. ' =' → logprob: -5.531920909881592
    5. '_ll' → logprob: -9.65692138671875
    6. '```' → logprob: -10.53192138671875
    7. '=-' → logprob: -10.65692138671875
    8. '   ' → logprob: -11.65692138671875
    9. '           ' → logprob: -11.78192138671875
    10. '_l' → logprob: -12.15692138671875

Token 1188: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07893749326467514
    2. ' =' → logprob: -2.578937530517578
    3. '           ' → logprob: -10.703937530517578
    4. '               ' → logprob: -10.953937530517578
    5. '                   ' → logprob: -13.078937530517578
    6. '=None' → logprob: -13.328937530517578
    7. '            ' → logprob: -13.953937530517578
    8. '=
' → logprob: -14.453937530517578
    9. '=-' → logprob: -14.703937530517578
    10. ')' → logprob: -14.703937530517578

Token 1189: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -3.166338137816638e-05
    2. ' float' → logprob: -10.500031471252441
    3. '-' → logprob: -13.750031471252441
    4. '        ' → logprob: -14.000031471252441
    5. '           ' → logprob: -14.750031471252441
    6. '	float' → logprob: -15.125031471252441
    7. '               ' → logprob: -15.125031471252441
    8. '   ' → logprob: -15.125031471252441
    9. '       ' → logprob: -15.250031471252441
    10. '         ' → logprob: -16.125032424926758

Token 1190: '('-' (ID: 33343)
  Prédit: '('-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('-' → logprob: -0.018485281616449356
    2. ''-' → logprob: -4.018485069274902
    3. '('' → logprob: -8.018485069274902
    4. '("-' → logprob: -13.268485069274902
    5. ''' → logprob: -13.768485069274902
    6. '['' → logprob: -13.893485069274902
    7. '(' → logprob: -14.143485069274902
    8. '(
' → logprob: -14.643485069274902
    9. '
' → logprob: -15.268485069274902
    10. '"-' → logprob: -15.768485069274902

Token 1191: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -4.320199877838604e-07
    2. '-inf' → logprob: -14.75
    3. ' inf' → logprob: -18.125
    4. ''' → logprob: -18.25
    5. 'float' → logprob: -18.875
    6. '.inf' → logprob: -18.875
    7. 'math' → logprob: -19.0
    8. ''in' → logprob: -19.625
    9. '100' → logprob: -19.875
    10. '_inf' → logprob: -20.125

Token 1192: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.13692881166934967
    2. '')
' → logprob: -2.3869287967681885
    3. '       ' → logprob: -3.5119287967681885
    4. ')' → logprob: -5.761929035186768
    5. '')

' → logprob: -6.011929035186768
    6. '           ' → logprob: -7.636929035186768
    7. '')
' → logprob: -9.63692855834961
    8. '               ' → logprob: -10.51192855834961
    9. ')')
' → logprob: -11.26192855834961
    10. ')
' → logprob: -11.51192855834961

Token 1193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006427380722016096
    2. '
' → logprob: -8.000642776489258
    3. '```' → logprob: -8.875642776489258
    4. '        
' → logprob: -9.500642776489258
    5. '           ' → logprob: -10.250642776489258
    6. 'if' → logprob: -10.750642776489258
    7. ' if' → logprob: -11.000642776489258
    8. '<|end|>' → logprob: -11.875642776489258
    9. '   ' → logprob: -12.875642776489258
    10. 'elif' → logprob: -13.250642776489258

Token 1194: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20248261094093323
    2. 'if' (adapté à ' if') → logprob: -1.7024825811386108
    3. '
' → logprob: -6.9524827003479
    4. ' if' → logprob: -9.702482223510742
    5. '```' → logprob: -10.202482223510742
    6. '        
' → logprob: -11.827482223510742
    7. '   ' → logprob: -12.577482223510742
    8. 'try' → logprob: -13.577482223510742
    9. '           ' → logprob: -13.577482223510742
    10. 'elif' → logprob: -15.452482223510742

Token 1195: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.005234002135694027
    2. ' base' → logprob: -5.2552337646484375
    3. '   ' → logprob: -16.505233764648438
    4. '(base' → logprob: -18.005233764648438
    5. ' ' → logprob: -18.630233764648438
    6. '	base' → logprob: -18.755233764648438
    7. '           ' → logprob: -18.880233764648438
    8. 'Base' → logprob: -19.255233764648438
    9. '       ' → logprob: -19.630233764648438
    10. '_base' → logprob: -20.255233764648438

Token 1196: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. '1' → logprob: -14.750000953674316
    3. '   ' → logprob: -16.5
    4. '
' → logprob: -16.75
    5. ' ' → logprob: -17.5
    6. '```' → logprob: -18.0
    7. '_' → logprob: -18.5
    8. '       ' → logprob: -18.625
    9. '₂' → logprob: -18.9375
    10. '۲' → logprob: -19.3125

Token 1197: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023245826363563538
    2. '==' → logprob: -3.7732458114624023
    3. ' ' → logprob: -16.52324676513672
    4. '==
' → logprob: -16.52324676513672
    5. '```' → logprob: -17.02324676513672
    6. ' ==
' → logprob: -17.39824676513672
    7. ']==' → logprob: -17.39824676513672
    8. '   ' → logprob: -18.39824676513672
    9. ')==' → logprob: -18.52324676513672
    10. '==-' → logprob: -19.52324676513672

Token 1198: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013263145228847861
    2. ' ' → logprob: -6.626326084136963
    3. '   ' → logprob: -15.501326560974121
    4. '       ' → logprob: -17.251325607299805
    5. '  ' → logprob: -17.501325607299805
    6. '           ' → logprob: -17.501325607299805
    7. '<|end|>' → logprob: -18.251325607299805
    8. '۰' → logprob: -18.501325607299805
    9. '        ' → logprob: -18.751325607299805
    10. '[' → logprob: -18.751325607299805

Token 1199: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.250030517578125
    4. '       ' → logprob: -17.875030517578125
    5. '1' → logprob: -18.875030517578125
    6. '           ' → logprob: -18.875030517578125
    7. '  ' → logprob: -19.250030517578125
    8. '۰' → logprob: -19.250030517578125
    9. 'import' → logprob: -20.187530517578125
    10. '2' → logprob: -20.312530517578125

Token 1200: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2519724369049072
    2. 'and' → logprob: -1.5019724369049072
    3. ':
' → logprob: -10.626972198486328
    4. '           ' → logprob: -12.126972198486328
    5. '       ' → logprob: -12.501972198486328
    6. ':' → logprob: -13.126972198486328
    7. '   ' → logprob: -13.251972198486328
    8. '        ' → logprob: -13.376972198486328
    9. '==' → logprob: -13.501972198486328
    10. ' ' → logprob: -14.001972198486328

Token 1201: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.4741162061691284
    2. ' exp' → logprob: -0.9741162061691284
    3. '(exp' → logprob: -11.099116325378418
    4. 'ex' → logprob: -11.224116325378418
    5. '0' → logprob: -13.474116325378418
    6. 'export' → logprob: -14.099116325378418
    7. '	exp' → logprob: -14.161616325378418
    8. '           ' → logprob: -14.224116325378418
    9. 'import' → logprob: -14.286616325378418
    10. '   ' → logprob: -14.661616325378418

Token 1202: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008631349541246891
    2. '1' → logprob: -4.758631229400635
    3. '```' → logprob: -12.008631706237793
    4. ' ' → logprob: -12.633631706237793
    5. '   ' → logprob: -13.008631706237793
    6. '_' → logprob: -13.133631706237793
    7. '
' → logprob: -14.133631706237793
    8. '==' → logprob: -14.383631706237793
    9. 'exp' → logprob: -14.883631706237793
    10. '=' → logprob: -14.883631706237793

Token 1203: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2519318461418152
    2. '==' → logprob: -1.50193190574646
    3. ']==' → logprob: -14.001932144165039
    4. ')==' → logprob: -14.626932144165039
    5. ' ' → logprob: -14.751932144165039
    6. '==
' → logprob: -15.126932144165039
    7. '```' → logprob: -15.376932144165039
    8. '[' → logprob: -15.751932144165039
    9. '   ' → logprob: -16.75193214416504
    10. ' ==
' → logprob: -16.87693214416504

Token 1204: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021853535436093807
    2. ' ' → logprob: -6.127185344696045
    3. '   ' → logprob: -16.252185821533203
    4. '[' → logprob: -17.439685821533203
    5. '  ' → logprob: -17.439685821533203
    6. '1' → logprob: -17.439685821533203
    7. '           ' → logprob: -17.502185821533203
    8. '...' → logprob: -17.627185821533203
    9. '۰' → logprob: -17.939685821533203
    10. '```' → logprob: -18.314685821533203

Token 1205: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043102685594931245
    2. ' ' → logprob: -7.750431060791016
    3. '   ' → logprob: -16.250431060791016
    4. '==' → logprob: -17.125431060791016
    5. '[' → logprob: -17.250431060791016
    6. '  ' → logprob: -17.375431060791016
    7. '=' → logprob: -17.937931060791016
    8. '1' → logprob: -17.937931060791016
    9. '           ' → logprob: -18.312931060791016
    10. '       ' → logprob: -18.375431060791016

Token 1206: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0269676446914673
    2. '==' → logprob: -1.4019676446914673
    3. ' ==' → logprob: -1.6519676446914673
    4. ':
' → logprob: -2.0269675254821777
    5. ':' → logprob: -2.7769675254821777
    6. '       ' → logprob: -5.276967525482178
    7. '=' → logprob: -5.776967525482178
    8. ' =' → logprob: -7.026967525482178
    9. '          ' → logprob: -7.901967525482178
    10. ',' → logprob: -9.401968002319336

Token 1207: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011139007983729243
    2. '```' → logprob: -8.001113891601562
    3. ' val' → logprob: -8.376113891601562
    4. '               ' → logprob: -8.501113891601562
    5. 'val' → logprob: -9.251113891601562
    6. '       ' → logprob: -9.751113891601562
    7. '0' → logprob: -10.001113891601562
    8. '            ' → logprob: -10.251113891601562
    9. '
' → logprob: -10.876113891601562
    10. '{
' → logprob: -11.251113891601562

Token 1208: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.014337553642690182
    2. ' val' → logprob: -4.514337539672852
    3. '0' → logprob: -5.889337539672852
    4. '       ' → logprob: -7.639337539672852
    5. '           ' → logprob: -10.389337539672852
    6. ' ' → logprob: -14.014337539672852
    7. '	val' → logprob: -14.014337539672852
    8. '        ' → logprob: -14.264337539672852
    9. '_val' → logprob: -14.639337539672852
    10. '   ' → logprob: -15.639337539672852

Token 1209: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0024769625160843134
    2. '1' → logprob: -6.002477169036865
    3. 'val' → logprob: -14.877476692199707
    4. ' ' → logprob: -15.002476692199707
    5. '   ' → logprob: -15.002476692199707
    6. '```' → logprob: -15.877476692199707
    7. '=' → logprob: -16.377477645874023
    8. '
' → logprob: -16.752477645874023
    9. '_val' → logprob: -16.752477645874023
    10. '_' → logprob: -17.377477645874023

Token 1210: '_ln' (ID: 135809)
  Prédit: '_ln'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ln' → logprob: -4.3226136767771095e-05
    2. '_ll' → logprob: -11.125042915344238
    3. '```' → logprob: -11.625042915344238
    4. '_' → logprob: -12.875042915344238
    5. '_ls' → logprob: -12.875042915344238
    6. '=' → logprob: -13.125042915344238
    7. '_lin' → logprob: -13.250042915344238
    8. '_lp' → logprob: -13.375042915344238
    9. '=_' → logprob: -14.250042915344238
    10. '_li' → logprob: -14.250042915344238

Token 1211: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602257490158081
    2. ' =' → logprob: -1.910225749015808
    3. '```' → logprob: -14.660225868225098
    4. ')' → logprob: -14.785225868225098
    5. '           ' → logprob: -15.410225868225098
    6. '       ' → logprob: -15.910225868225098
    7. '=None' → logprob: -16.41022491455078
    8. '        ' → logprob: -16.78522491455078
    9. '=True' → logprob: -16.78522491455078
    10. ',' → logprob: -16.78522491455078

Token 1212: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. '   ' → logprob: -18.126502990722656
    4. '           ' → logprob: -18.376502990722656
    5. '۰' → logprob: -18.626502990722656
    6. '        ' → logprob: -19.001502990722656
    7. '       ' → logprob: -19.126502990722656
    8. ' ' → logprob: -19.251502990722656
    9. '=' → logprob: -19.626502990722656
    10. '```' → logprob: -19.689002990722656

Token 1213: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.87500762939453
    4. 'float' → logprob: -16.87500762939453
    5. '۰' → logprob: -18.62500762939453
    6. 'val' → logprob: -18.81250762939453
    7. '-' → logprob: -19.93750762939453
    8. '       ' → logprob: -20.12500762939453
    9. '  ' → logprob: -20.18750762939453
    10. '           ' → logprob: -20.25000762939453

Token 1214: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -7.896309739408025e-07
    2. '       ' → logprob: -15.375000953674316
    3. '<|end|>' → logprob: -15.750000953674316
    4. ' .' → logprob: -15.875000953674316
    5. '           ' → logprob: -16.5
    6. '        ' → logprob: -16.875
    7. '<|end|>' → logprob: -16.875
    8. '.
' → logprob: -17.125
    9. '```' → logprob: -17.375
    10. '
' → logprob: -18.0

Token 1215: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '<|end|>' → logprob: -19.625
    3. ' ' → logprob: -20.25
    4. '       ' → logprob: -20.5
    5. '   ' → logprob: -20.875
    6. '```' → logprob: -21.25
    7. 'float' → logprob: -21.625
    8. ')' → logprob: -22.25
    9. 'python' → logprob: -22.375
    10. '<|end|>' → logprob: -22.875

Token 1216: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04528878256678581
    2. 'else' → logprob: -3.2952888011932373
    3. 'elif' → logprob: -5.170288562774658
    4. '<|end|>' → logprob: -7.170288562774658
    5. ' else' → logprob: -7.545288562774658
    6. '```' → logprob: -9.545289039611816
    7. ' elif' → logprob: -9.920289039611816
    8. '   ' → logprob: -10.045289039611816
    9. '
' → logprob: -10.545289039611816
    10. '<|end|>' → logprob: -11.170289039611816

Token 1217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018932949751615524
    2. 'else' → logprob: -6.751893520355225
    3. 'elif' → logprob: -7.251893520355225
    4. '```' → logprob: -11.751893043518066
    5. ' else' → logprob: -12.876893043518066
    6. ' elif' → logprob: -13.501893043518066
    7. '   ' → logprob: -14.251893043518066
    8. '           ' → logprob: -14.376893043518066
    9. '<|end|>' → logprob: -14.626893043518066
    10. '	' → logprob: -15.501893043518066

Token 1218: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01625148579478264
    2. 'elif' (adapté à ' elif') → logprob: -4.516251564025879
    3. 'else' → logprob: -5.266251564025879
    4. ' elif' → logprob: -10.891251564025879
    5. ' else' → logprob: -12.141251564025879
    6. '   ' → logprob: -13.141251564025879
    7. '           ' → logprob: -13.891251564025879
    8. '```' → logprob: -16.391250610351562
    9. 'elseif' → logprob: -16.766250610351562
    10. '      ' → logprob: -16.891250610351562

Token 1219: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.038042064756155014
    2. ' base' → logprob: -3.2880420684814453
    3. '(base' → logprob: -14.788042068481445
    4. '   ' → logprob: -16.788042068481445
    5. 'Base' → logprob: -16.913042068481445
    6. '	base' → logprob: -17.038042068481445
    7. '_base' → logprob: -17.913042068481445
    8. '           ' → logprob: -18.413042068481445
    9. 'b' → logprob: -18.913042068481445
    10. ' ' → logprob: -19.163042068481445

Token 1220: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. '1' → logprob: -14.125000953674316
    3. '```' → logprob: -18.125
    4. ' ' → logprob: -18.375
    5. '
' → logprob: -19.5
    6. '   ' → logprob: -19.875
    7. '==' → logprob: -19.875
    8. '_' → logprob: -20.25
    9. '₂' → logprob: -20.625
    10. '۲' → logprob: -20.875

Token 1221: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2519403100013733
    2. '==' → logprob: -1.5019402503967285
    3. '==
' → logprob: -12.626940727233887
    4. '[' → logprob: -13.001940727233887
    5. ' ' → logprob: -14.001940727233887
    6. ']==' → logprob: -14.126940727233887
    7. '```' → logprob: -14.126940727233887
    8. '   ' → logprob: -14.376940727233887
    9. '==-' → logprob: -14.876940727233887
    10. '=' → logprob: -15.126940727233887

Token 1222: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003603990189731121
    2. ' ' → logprob: -5.628603935241699
    3. '   ' → logprob: -13.3786039352417
    4. 'float' → logprob: -14.2536039352417
    5. '1' → logprob: -15.0036039352417
    6. '  ' → logprob: -15.3786039352417
    7. '           ' → logprob: -15.8786039352417
    8. '    ' → logprob: -16.128604888916016
    9. '     ' → logprob: -16.191104888916016
    10. 'import' → logprob: -16.253604888916016

Token 1223: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.000017166137695
    3. 'float' → logprob: -16.187517166137695
    4. '   ' → logprob: -17.187517166137695
    5. '1' → logprob: -17.750017166137695
    6. '۰' → logprob: -17.750017166137695
    7. 'import' → logprob: -18.125017166137695
    8. '```' → logprob: -18.812517166137695
    9. 'zero' → logprob: -18.875017166137695
    10. '[' → logprob: -19.062517166137695

Token 1224: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.41022852063179016
    2. '           ' → logprob: -1.1602284908294678
    3. ':' → logprob: -3.9102284908294678
    4. '       ' → logprob: -6.535228729248047
    5. '   ' → logprob: -6.910228729248047
    6. '==' → logprob: -8.785228729248047
    7. '          ' → logprob: -9.285228729248047
    8. '            ' → logprob: -10.035228729248047
    9. '):
' → logprob: -10.285228729248047
    10. '               ' → logprob: -10.285228729248047

Token 1225: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.3199920178740285e-05
    2. 'val' → logprob: -11.375022888183594
    3. '               ' → logprob: -12.625022888183594
    4. '```' → logprob: -12.875022888183594
    5. ' val' → logprob: -13.250022888183594
    6. '          ' → logprob: -14.125022888183594
    7. '   ' → logprob: -14.375022888183594
    8. '{
' → logprob: -14.375022888183594
    9. '       ' → logprob: -14.500022888183594
    10. ':' → logprob: -14.625022888183594

Token 1226: ' val' (ID: 1459)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00014740281039848924
    2. ' float' → logprob: -9.125147819519043
    3. '           ' → logprob: -10.500147819519043
    4. 'val' (adapté à ' val') → logprob: -11.500147819519043
    5. '	float' → logprob: -15.125147819519043
    6. '       ' → logprob: -15.500147819519043
    7. '        ' → logprob: -16.250146865844727
    8. '   ' → logprob: -17.000146865844727
    9. '         ' → logprob: -17.000146865844727
    10. '<float' → logprob: -17.125146865844727

Token 1227: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018208740220870823
    2. '1' → logprob: -8.625182151794434
    3. 'val' → logprob: -14.000182151794434
    4. '=' → logprob: -15.250182151794434
    5. '           ' → logprob: -15.375182151794434
    6. '   ' → logprob: -15.625182151794434
    7. '                   ' → logprob: -15.875182151794434
    8. '_val' → logprob: -16.000181198120117
    9. ' ' → logprob: -16.125181198120117
    10. '
' → logprob: -16.250181198120117

Token 1228: '_ln' (ID: 135809)
  Prédit: '_ln'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ln' → logprob: -1.2352385965641588e-05
    2. 'ln' → logprob: -12.125012397766113
    3. '_ll' → logprob: -12.875012397766113
    4. '=' → logprob: -13.500012397766113
    5. ' =' → logprob: -13.875012397766113
    6. 'Ln' → logprob: -14.875012397766113
    7. '-ln' → logprob: -15.125012397766113
    8. '_l' → logprob: -15.500012397766113
    9. '_ls' → logprob: -15.625012397766113
    10. 'LN' → logprob: -15.625012397766113

Token 1229: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693166732788086
    2. ' =' → logprob: -2.126931667327881
    3. '=float' → logprob: -12.876932144165039
    4. '           ' → logprob: -14.001932144165039
    5. 'float' → logprob: -16.62693214416504
    6. '        ' → logprob: -17.12693214416504
    7. '            ' → logprob: -17.87693214416504
    8. '       ' → logprob: -18.12693214416504
    9. '         ' → logprob: -18.37693214416504
    10. '=
' → logprob: -18.75193214416504

Token 1230: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -3.547789674485102e-05
    2. ' float' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.250036239624023
    4. '-' → logprob: -17.875036239624023
    5. '	float' → logprob: -18.875036239624023
    6. '<float' → logprob: -19.875036239624023
    7. 'f' → logprob: -19.875036239624023
    8. 'flo' → logprob: -19.875036239624023
    9. '=float' → logprob: -19.875036239624023
    10. '.float' → logprob: -20.375036239624023

Token 1231: '('-' (ID: 33343)
  Prédit: '('-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('-' → logprob: -0.0001261845463886857
    2. ''-' → logprob: -9.000125885009766
    3. '(' → logprob: -13.875125885009766
    4. '("-' → logprob: -14.250125885009766
    5. '(float' → logprob: -14.875125885009766
    6. '('' → logprob: -15.000125885009766
    7. 'float' → logprob: -15.125125885009766
    8. '(
' → logprob: -16.500125885009766
    9. '('-',' → logprob: -17.125125885009766
    10. '-' → logprob: -17.125125885009766

Token 1232: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.9361264946837764e-07
    2. '-inf' → logprob: -16.125
    3. ' inf' → logprob: -20.375
    4. 'float' → logprob: -20.5
    5. '.inf' → logprob: -21.5
    6. '-' → logprob: -22.0
    7. '1' → logprob: -22.125
    8. '_inf' → logprob: -22.875
    9. 'int' → logprob: -23.125
    10. 'math' → logprob: -23.125

Token 1233: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2640165686607361
    2. '       ' → logprob: -1.7640166282653809
    3. '')' → logprob: -3.264016628265381
    4. ')
' → logprob: -4.014016628265381
    5. '')
' → logprob: -5.639016628265381
    6. '):
' → logprob: -7.889016628265381
    7. ''):
' → logprob: -8.264016151428223
    8. '<|end|>' → logprob: -9.264016151428223
    9. '```' → logprob: -11.014016151428223
    10. '
' → logprob: -11.639016151428223

Token 1234: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011635733768343925
    2. 'else' → logprob: -4.511635780334473
    3. ' else' → logprob: -7.636635780334473
    4. '```' → logprob: -9.261635780334473
    5. '           ' → logprob: -12.261635780334473
    6. '   ' → logprob: -13.761635780334473
    7. 'elif' → logprob: -14.136635780334473
    8. '<|end|>' → logprob: -14.136635780334473
    9. 'Else' → logprob: -14.386635780334473
    10. ')' → logprob: -14.511635780334473

Token 1235: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6944599747657776
    2. 'else' (adapté à ' else') → logprob: -0.6944599747657776
    3. ' else' → logprob: -6.694459915161133
    4. '```' → logprob: -9.694459915161133
    5. '           ' → logprob: -12.444459915161133
    6. 'elif' → logprob: -12.569459915161133
    7. '
' → logprob: -13.819459915161133
    8. '   ' → logprob: -13.944459915161133
    9. '<|end|>' → logprob: -14.194459915161133
    10. '	else' → logprob: -14.319459915161133

Token 1236: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4958471953868866
    2. ':' → logprob: -1.370847225189209
    3. ':
' → logprob: -1.995847225189209
    4. '       ' → logprob: -6.995847225189209
    5. ',' → logprob: -10.12084674835205
    6. '               ' → logprob: -10.24584674835205
    7. '[' → logprob: -10.24584674835205
    8. '{
' → logprob: -10.37084674835205
    9. '```' → logprob: -10.49584674835205
    10. '{' → logprob: -10.87084674835205

Token 1237: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002257783431559801
    2. '               ' → logprob: -6.127257823944092
    3. 'try' → logprob: -10.752257347106934
    4. '       ' → logprob: -11.002257347106934
    5. '{
' → logprob: -11.377257347106934
    6. '            ' → logprob: -12.127257347106934
    7. '                   ' → logprob: -12.252257347106934
    8. '```' → logprob: -12.377257347106934
    9. '          ' → logprob: -13.252257347106934
    10. ' try' → logprob: -13.377257347106934

Token 1238: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' (adapté à ' try') → logprob: -9.710618905955926e-05
    2. '           ' → logprob: -9.500097274780273
    3. ' try' → logprob: -10.750097274780273
    4. '       ' → logprob: -15.000097274780273
    5. '	try' → logprob: -15.875097274780273
    6. 'val' → logprob: -16.000097274780273
    7. '               ' → logprob: -16.000097274780273
    8. '```' → logprob: -16.000097274780273
    9. 'import' → logprob: -17.750097274780273
    10. '_try' → logprob: -18.750097274780273

Token 1239: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29915231466293335
    2. ':' → logprob: -1.4241523742675781
    3. ':
' → logprob: -4.674152374267578
    4. '{' → logprob: -5.799152374267578
    5. '           ' → logprob: -5.924152374267578
    6. '{
' → logprob: -6.799152374267578
    7. ':return' → logprob: -7.174152374267578
    8. '{return' → logprob: -8.049152374267578
    9. '```' → logprob: -8.674152374267578
    10. 'return' → logprob: -9.424152374267578

Token 1240: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0023687512148171663
    2. ':' → logprob: -6.877368927001953
    3. '{return' → logprob: -7.377368927001953
    4. '{' → logprob: -7.752368927001953
    5. '           ' → logprob: -9.127368927001953
    6. '{
' → logprob: -9.627368927001953
    7. ':
' → logprob: -10.127368927001953
    8. ':return' → logprob: -10.627368927001953
    9. '                   ' → logprob: -11.627368927001953
    10. 'return' → logprob: -11.752368927001953

Token 1241: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.0011787971016019583
    2. ' val' → logprob: -6.751178741455078
    3. '           ' → logprob: -11.751178741455078
    4. 'import' → logprob: -14.376178741455078
    5. '               ' → logprob: -16.126178741455078
    6. '	val' → logprob: -19.251178741455078
    7. 'exp' → logprob: -20.001178741455078
    8. '(val' → logprob: -20.251178741455078
    9. '_val' → logprob: -21.126178741455078
    10. ',val' → logprob: -21.251178741455078

Token 1242: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0046412344090640545
    2. '1' → logprob: -5.379641056060791
    3. 'import' → logprob: -12.25464153289795
    4. '   ' → logprob: -13.12964153289795
    5. '           ' → logprob: -13.12964153289795
    6. '```' → logprob: -13.25464153289795
    7. 'exp' → logprob: -13.37964153289795
    8. '                   ' → logprob: -13.50464153289795
    9. '               ' → logprob: -13.50464153289795
    10. '
' → logprob: -13.75464153289795

Token 1243: '_ln' (ID: 135809)
  Prédit: '_ln'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ln' → logprob: -0.00011653638648567721
    2. 'Ln' → logprob: -9.250116348266602
    3. 'ln' → logprob: -12.500116348266602
    4. '```' → logprob: -12.875116348266602
    5. '           ' → logprob: -13.125116348266602
    6. '_ll' → logprob: -13.500116348266602
    7. '_log' → logprob: -13.750116348266602
    8. '=' → logprob: -13.750116348266602
    9. '_' → logprob: -13.750116348266602
    10. '_l' → logprob: -13.750116348266602

Token 1244: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931586861610413
    2. ' =' → logprob: -0.6931586861610413
    3. ')' → logprob: -12.068159103393555
    4. '           ' → logprob: -12.693159103393555
    5. '               ' → logprob: -13.443159103393555
    6. '```' → logprob: -15.693159103393555
    7. '            ' → logprob: -15.943159103393555
    8. ' ' → logprob: -16.318159103393555
    9. ')=' → logprob: -16.693159103393555
    10. '                ' → logprob: -16.818159103393555

Token 1245: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.029786361381411552
    2. ' exp' → logprob: -3.5297863483428955
    3. '           ' → logprob: -10.404786109924316
    4. 'ex' → logprob: -12.654786109924316
    5. '               ' → logprob: -14.029786109924316
    6. '	exp' → logprob: -14.779786109924316
    7. '(exp' → logprob: -14.779786109924316
    8. '            ' → logprob: -15.529786109924316
    9. 'export' → logprob: -15.654786109924316
    10. '        ' → logprob: -16.279787063598633

Token 1246: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.372294698550832e-06
    2. '1' → logprob: -12.125009536743164
    3. 'exp' → logprob: -12.500009536743164
    4. '_exp' → logprob: -16.250009536743164
    5. '(exp' → logprob: -17.500009536743164
    6. '```' → logprob: -17.625009536743164
    7. '_' → logprob: -18.500009536743164
    8. '...' → logprob: -18.500009536743164
    9. '[' → logprob: -18.500009536743164
    10. '   ' → logprob: -18.500009536743164

Token 1247: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.007611481938511133
    2. '*' → logprob: -4.882611274719238
    3. 'import' → logprob: -12.257611274719238
    4. '               ' → logprob: -15.632611274719238
    5. '           ' → logprob: -15.882611274719238
    6. ' ' → logprob: -16.257612228393555
    7. ' ' → logprob: -16.257612228393555
    8. '**' → logprob: -17.007612228393555
    9. '*object' → logprob: -17.257612228393555
    10. '#' → logprob: -17.507612228393555

Token 1248: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0009115827269852161
    2. ' math' → logprob: -7.000911712646484
    3. 'Math' → logprob: -16.875911712646484
    4. '(math' → logprob: -17.500911712646484
    5. 'import' → logprob: -17.625911712646484
    6. '.math' → logprob: -20.750911712646484
    7. 'm' → logprob: -21.375911712646484
    8. 'cmath' → logprob: -21.875911712646484
    9. 'log' → logprob: -22.000911712646484
    10. '_math' → logprob: -22.250911712646484

Token 1249: '.log' (ID: 2659)
  Prédit: '.log'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.log' → logprob: -2.8087270038668066e-05
    2. 'log' → logprob: -10.500027656555176
    3. 'import' → logprob: -14.500027656555176
    4. '"log' → logprob: -18.000028610229492
    5. '.' → logprob: -18.125028610229492
    6. ' log' → logprob: -18.375028610229492
    7. '```' → logprob: -19.250028610229492
    8. '.math' → logprob: -19.625028610229492
    9. '	log' → logprob: -19.750028610229492
    10. '(log' → logprob: -19.750028610229492

Token 1250: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -4.320199877838604e-07
    2. 'base' → logprob: -14.75
    3. '(' → logprob: -16.875
    4. '(
' → logprob: -18.875
    5. ' (' → logprob: -20.0
    6. ' base' → logprob: -20.125
    7. '(b' → logprob: -21.125
    8. '```' → logprob: -22.875
    9. '(abs' → logprob: -23.125
    10. '/base' → logprob: -23.375

Token 1251: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007700792048126459
    2. '(base' → logprob: -5.0077009201049805
    3. '(' → logprob: -7.0077009201049805
    4. 'base' → logprob: -9.88270092010498
    5. '```' → logprob: -11.13270092010498
    6. ' base' → logprob: -12.00770092010498
    7. '1' → logprob: -13.25770092010498
    8. '[' → logprob: -13.63270092010498
    9. ' ' → logprob: -14.00770092010498
    10. '   ' → logprob: -14.25770092010498

Token 1252: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09226731210947037
    2. ')
' → logprob: -2.5922672748565674
    3. '           ' → logprob: -4.3422675132751465
    4. '               ' → logprob: -8.592267036437988
    5. '       ' → logprob: -9.342267036437988
    6. ')
' → logprob: -13.217267036437988
    7. '):
' → logprob: -13.592267036437988
    8. ')return' → logprob: -13.967267036437988
    9. ' )' → logprob: -14.217267036437988
    10. ')

' → logprob: -14.592267036437988

Token 1253: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.038272593170404434
    2. '               ' → logprob: -3.4132726192474365
    3. '<|end|>' → logprob: -6.538272380828857
    4. ')' → logprob: -7.038272380828857
    5. '       ' → logprob: -7.038272380828857
    6. 'except' → logprob: -7.413272380828857
    7. ' except' → logprob: -8.038272857666016
    8. '<|end|>' → logprob: -8.538272857666016
    9. '```' → logprob: -8.788272857666016
    10. '[' → logprob: -10.038272857666016

Token 1254: ' except' (ID: 6384)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22371713817119598
    2. 'except' (adapté à ' except') → logprob: -1.9737170934677124
    3. '               ' → logprob: -2.973717212677002
    4. ' except' → logprob: -5.098717212677002
    5. ')' → logprob: -5.973717212677002
    6. '       ' → logprob: -6.973717212677002
    7. '<|end|>' → logprob: -8.098716735839844
    8. '```' → logprob: -8.723716735839844
    9. '          ' → logprob: -10.223716735839844
    10. '#' → logprob: -10.223716735839844

Token 1255: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -2.45848218582978e-06
    2. '(Value' → logprob: -13.25000286102295
    3. ' Value' → logprob: -14.25000286102295
    4. '_value' → logprob: -18.000001907348633
    5. '	Value' → logprob: -18.375001907348633
    6. '_Value' → logprob: -19.750001907348633
    7. '<Value' → logprob: -19.750001907348633
    8. '.Value' → logprob: -20.625001907348633
    9. 'value' → logprob: -20.875001907348633
    10. 'import' → logprob: -21.625001907348633

Token 1256: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.03804619982838631
    2. 'Value' → logprob: -3.28804612159729
    3. '(Value' → logprob: -12.663045883178711
    4. '.Value' → logprob: -14.538045883178711
    5. 'error' → logprob: -15.288045883178711
    6. 'rror' → logprob: -15.788045883178711
    7. '	Value' → logprob: -16.16304588317871
    8. 'value' → logprob: -16.53804588317871
    9. '<Value' → logprob: -16.66304588317871
    10. '[' → logprob: -16.91304588317871

Token 1257: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12207956612110138
    2. ':
' → logprob: -2.372079610824585
    3. ':' → logprob: -3.872079610824585
    4. ' as' → logprob: -8.122079849243164
    5. ':return' → logprob: -8.747079849243164
    6. '           ' → logprob: -9.122079849243164
    7. '=' → logprob: -9.997079849243164
    8. '              ' → logprob: -10.122079849243164
    9. '[' → logprob: -10.622079849243164
    10. '):
' → logprob: -10.622079849243164

Token 1258: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007004613056778908
    2. 'float' → logprob: -5.132004737854004
    3. 'return' → logprob: -7.507004737854004
    4. '           ' → logprob: -7.757004737854004
    5. '0' → logprob: -10.632004737854004
    6. '              ' → logprob: -10.632004737854004
    7. ' float' → logprob: -11.007004737854004
    8. '                ' → logprob: -12.257004737854004
    9. ' return' → logprob: -12.257004737854004
    10. '			' → logprob: -12.257004737854004

Token 1259: ' val' (ID: 1459)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.4978497624397278
    2. '               ' → logprob: -1.247849702835083
    3. '           ' → logprob: -2.372849702835083
    4. ' float' → logprob: -4.622849941253662
    5. 'val' (adapté à ' val') → logprob: -6.247849941253662
    6. ' val' → logprob: -11.372849464416504
    7. '            ' → logprob: -11.622849464416504
    8. '              ' → logprob: -11.622849464416504
    9. '          ' → logprob: -12.122849464416504
    10. '0' → logprob: -12.247849464416504

Token 1260: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.372294698550832e-06
    2. '1' → logprob: -12.125009536743164
    3. '                   ' → logprob: -13.500009536743164
    4. '           ' → logprob: -14.375009536743164
    5. '                  ' → logprob: -14.625009536743164
    6. '   ' → logprob: -14.750009536743164
    7. '              ' → logprob: -15.125009536743164
    8. '               ' → logprob: -15.750009536743164
    9. '          ' → logprob: -15.875009536743164
    10. '_val' → logprob: -16.375009536743164

Token 1261: '_ln' (ID: 135809)
  Prédit: '_ln'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ln' → logprob: -0.0002942287246696651
    2. ''_' → logprob: -8.37529468536377
    3. '_' → logprob: -10.75029468536377
    4. '-ln' → logprob: -11.50029468536377
    5. '```' → logprob: -12.12529468536377
    6. 'ln' → logprob: -12.12529468536377
    7. '_l' → logprob: -12.25029468536377
    8. 'Ln' → logprob: -12.87529468536377
    9. '_-' → logprob: -13.00029468536377
    10. '_ll' → logprob: -13.12529468536377

Token 1262: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018159780651330948
    2. ' =' → logprob: -4.018159866333008
    3. '           ' → logprob: -12.268159866333008
    4. '=float' → logprob: -12.268159866333008
    5. '               ' → logprob: -15.393159866333008
    6. '            ' → logprob: -15.643159866333008
    7. '                   ' → logprob: -17.643159866333008
    8. 'val' → logprob: -17.768159866333008
    9. '        ' → logprob: -17.893159866333008
    10. '       ' → logprob: -18.018159866333008

Token 1263: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -7.226628895296017e-06
    2. ' float' → logprob: -11.875007629394531
    3. '               ' → logprob: -16.50000762939453
    4. '           ' → logprob: -16.87500762939453
    5. '        ' → logprob: -17.62500762939453
    6. '   ' → logprob: -17.87500762939453
    7. '	float' → logprob: -18.50000762939453
    8. '       ' → logprob: -19.25000762939453
    9. '            ' → logprob: -19.25000762939453
    10. '         ' → logprob: -19.50000762939453

Token 1264: '('-' (ID: 33343)
  Prédit: '('-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('-' → logprob: -0.0031840058509260416
    2. ''-' → logprob: -5.753183841705322
    3. 'float' → logprob: -12.62818431854248
    4. '("-' → logprob: -13.50318431854248
    5. '(float' → logprob: -14.75318431854248
    6. '(-' → logprob: -14.87818431854248
    7. '('' → logprob: -15.12818431854248
    8. '(' → logprob: -15.25318431854248
    9. '('-',' → logprob: -15.75318431854248
    10. '-' → logprob: -16.503183364868164

Token 1265: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0007102862582542002
    2. '-inf' → logprob: -7.250710487365723
    3. 'float' → logprob: -15.250710487365723
    4. '1' → logprob: -16.500709533691406
    5. ''-' → logprob: -18.125709533691406
    6. 'math' → logprob: -18.125709533691406
    7. ' inf' → logprob: -18.875709533691406
    8. '3' → logprob: -19.875709533691406
    9. '6' → logprob: -20.250709533691406
    10. '.inf' → logprob: -20.250709533691406

Token 1266: '')

' (ID: 9735)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0745265483856201
    2. ')' → logprob: -1.3245265483856201
    3. ')
' → logprob: -1.4495265483856201
    4. ')

' → logprob: -2.82452654838562
    5. '')
' → logprob: -2.94952654838562
    6. '')

' → logprob: -3.44952654838562
    7. '')' → logprob: -4.324526786804199
    8. '           ' → logprob: -7.699526786804199
    9. '               ' → logprob: -8.3245267868042
    10. ')
' → logprob: -8.6995267868042

Token 1267: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007255369564518332
    2. '```' → logprob: -7.375725746154785
    3. '        
' → logprob: -10.250725746154785
    4. '
' → logprob: -10.250725746154785
    5. '<|end|>' → logprob: -11.625725746154785
    6. 'if' → logprob: -11.875725746154785
    7. ' if' → logprob: -12.250725746154785
    8. '   ' → logprob: -12.875725746154785
    9. '           ' → logprob: -13.875725746154785
    10. '``' → logprob: -14.250725746154785

Token 1268: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12719781696796417
    2. 'if' (adapté à ' if') → logprob: -2.127197742462158
    3. ' if' → logprob: -8.252198219299316
    4. '```' → logprob: -12.127198219299316
    5. '   ' → logprob: -12.752198219299316
    6. '
' → logprob: -15.627198219299316
    7. '           ' → logprob: -16.127197265625
    8. '        
' → logprob: -16.252197265625
    9. '      ' → logprob: -16.377197265625
    10. '	if' → logprob: -16.502197265625

Token 1269: ' abs' (ID: 8443)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0031912627164274454
    2. 'abs' → logprob: -5.7531914710998535
    3. ' val' → logprob: -11.253190994262695
    4. ' abs' → logprob: -14.878190994262695
    5. 'math' → logprob: -15.753190994262695
    6. '   ' → logprob: -16.628190994262695
    7. '(val' → logprob: -18.503190994262695
    8. '	val' → logprob: -18.628190994262695
    9. ' ' → logprob: -19.503190994262695
    10. '  ' → logprob: -19.628190994262695

Token 1270: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -8.895480277715251e-06
    2. '(' → logprob: -12.000008583068848
    3. 'val' → logprob: -13.625008583068848
    4. '((' → logprob: -13.875008583068848
    5. '[val' → logprob: -15.375008583068848
    6. ',val' → logprob: -16.125009536743164
    7. ' (' → logprob: -16.500009536743164
    8. ' val' → logprob: -16.500009536743164
    9. '(value' → logprob: -17.250009536743164
    10. '(pow' → logprob: -18.750009536743164

Token 1271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00044127836008556187
    2. '(val' → logprob: -7.875441074371338
    3. 'val' → logprob: -10.000441551208496
    4. '_val' → logprob: -11.625441551208496
    5. '[val' → logprob: -13.125441551208496
    6. '(' → logprob: -13.375441551208496
    7. '```' → logprob: -14.125441551208496
    8. ' val' → logprob: -14.375441551208496
    9. '_' → logprob: -15.250441551208496
    10. ',val' → logprob: -15.250441551208496

Token 1272: '_ln' (ID: 135809)
  Prédit: '_ln'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ln' → logprob: -1.1994775377388578e-05
    2. 'ln' → logprob: -12.250012397766113
    3. '1' → logprob: -12.750012397766113
    4. '```' → logprob: -13.750012397766113
    5. '-ln' → logprob: -14.250012397766113
    6. '_val' → logprob: -14.250012397766113
    7. '_len' → logprob: -15.250012397766113
    8. '_ll' → logprob: -15.500012397766113
    9. '_li' → logprob: -15.625012397766113
    10. '
' → logprob: -15.750012397766113

Token 1273: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5785613059997559
    2. '-' → logprob: -0.8285613059997559
    3. '-val' → logprob: -6.828561305999756
    4. ')' → logprob: -6.953561305999756
    5. '<' → logprob: -8.578561782836914
    6. ' <' → logprob: -9.328561782836914
    7. '[' → logprob: -9.328561782836914
    8. '<|end|>' → logprob: -9.578561782836914
    9. '   ' → logprob: -10.453561782836914
    10. '>' → logprob: -11.328561782836914

Token 1274: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.676292231422849e-05
    2. ' val' → logprob: -11.000017166137695
    3. '0' → logprob: -21.000017166137695
    4. '[val' → logprob: -21.125017166137695
    5. '(val' → logprob: -21.250017166137695
    6. '	val' → logprob: -21.375017166137695
    7. '       ' → logprob: -21.500017166137695
    8. '_val' → logprob: -22.000017166137695
    9. '.val' → logprob: -23.125017166137695
    10. '           ' → logprob: -23.125017166137695

Token 1275: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '   ' → logprob: -20.125
    4. 'val' → logprob: -20.125
    5. '２' → logprob: -21.75
    6. '```' → logprob: -21.875
    7. '
' → logprob: -22.0
    8. '۲' → logprob: -22.25
    9. '₂' → logprob: -22.625
    10. '1' → logprob: -22.625

Token 1276: '_ln' (ID: 135809)
  Prédit: '_ln'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ln' → logprob: -2.816093228830141e-06
    2. 'ln' → logprob: -13.12500286102295
    3. 'Ln' → logprob: -14.75000286102295
    4. '-ln' → logprob: -15.37500286102295
    5. '_l' → logprob: -16.750001907348633
    6. '_ls' → logprob: -17.375001907348633
    7. '   ' → logprob: -18.375001907348633
    8. '```' → logprob: -18.750001907348633
    9. '_ll' → logprob: -18.875001907348633
    10. '[' → logprob: -19.375001907348633

Token 1277: ')' (ID: 8)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2650314271450043
    2. ')' → logprob: -2.140031337738037
    3. '>' → logprob: -2.265031337738037
    4. ' <' → logprob: -5.140031337738037
    5. ')>' → logprob: -5.515031337738037
    6. '[' → logprob: -7.890031337738037
    7. ' )' → logprob: -8.515031814575195
    8. '<|end|>' → logprob: -8.515031814575195
    9. ' <=' → logprob: -8.890031814575195
    10. '           ' → logprob: -9.140031814575195

Token 1278: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.08262187987565994
    2. '<' → logprob: -3.0826218128204346
    3. ' <=' → logprob: -3.8326218128204346
    4. ' >' → logprob: -4.582622051239014
    5. '<|end|>' → logprob: -7.457622051239014
    6. '>' → logprob: -7.832622051239014
    7. '<=' → logprob: -7.957622051239014
    8. '[' → logprob: -9.082621574401855
    9. '<|end|>' → logprob: -11.207621574401855
    10. '           ' → logprob: -11.207621574401855

Token 1279: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -15.375
    3. '   ' → logprob: -18.0
    4. 'e' → logprob: -18.5
    5. ' ' → logprob: -18.75
    6. '-' → logprob: -18.875
    7. '
' → logprob: -19.25
    8. '2' → logprob: -19.625
    9. '(' → logprob: -20.875
    10. '5' → logprob: -20.875

Token 1280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -15.375
    3. '-' → logprob: -17.875
    4. 'e' → logprob: -18.0
    5. '   ' → logprob: -18.5
    6. ' ' → logprob: -19.0
    7. '2' → logprob: -20.0
    8. '10' → logprob: -20.5
    9. '#' → logprob: -20.875
    10. '5' → logprob: -20.875

Token 1281: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0003365350130479783
    2. '-' → logprob: -8.000336647033691
    3. '-e' → logprob: -14.250336647033691
    4. 'E' → logprob: -14.750336647033691
    5. '1' → logprob: -17.000335693359375
    6. '
' → logprob: -17.875335693359375
    7. '0' → logprob: -18.125335693359375
    8. '           ' → logprob: -18.750335693359375
    9. '```' → logprob: -18.750335693359375
    10. '.e' → logprob: -19.000335693359375

Token 1282: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.128163257315464e-07
    2. '9' → logprob: -16.125
    3. '{-' → logprob: -17.375
    4. '```' → logprob: -17.375
    5. 'e' → logprob: -17.875
    6. '10' → logprob: -18.125
    7. '_' → logprob: -18.5
    8. '6' → logprob: -18.5
    9. '12' → logprob: -18.625
    10. '8' → logprob: -18.875

Token 1283: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.42993611097335815
    2. '9' → logprob: -1.429936170578003
    3. '10' → logprob: -2.304936170578003
    4. '14' → logprob: -5.304935932159424
    5. '15' → logprob: -5.929935932159424
    6. '8' → logprob: -6.054935932159424
    7. '7' → logprob: -8.429936408996582
    8. '6' → logprob: -9.429936408996582
    9. '13' → logprob: -9.429936408996582
    10. '11' → logprob: -12.179936408996582

Token 1284: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00646607531234622
    2. ':return' → logprob: -5.881465911865234
    3. ':
' → logprob: -6.256465911865234
    4. '           ' → logprob: -6.381465911865234
    5. ' and' → logprob: -11.006465911865234
    6. '       ' → logprob: -11.756465911865234
    7. 'and' → logprob: -12.256465911865234
    8. 'return' → logprob: -12.381465911865234
    9. ':
' → logprob: -13.006465911865234
    10. '               ' → logprob: -13.506465911865234

Token 1285: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00032259183353744447
    2. 'return' → logprob: -8.125322341918945
    3. ' return' → logprob: -11.125322341918945
    4. '               ' → logprob: -11.750322341918945
    5. '	       ' → logprob: -14.125322341918945
    6. '          ' → logprob: -14.250322341918945
    7. '		' → logprob: -14.375322341918945
    8. 'if' → logprob: -14.875322341918945
    9. '{return' → logprob: -15.000322341918945
    10. '   ' → logprob: -15.000322341918945

Token 1286: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.015701744705438614
    2. 'if' → logprob: -4.265701770782471
    3. '           ' → logprob: -6.515701770782471
    4. ' return' → logprob: -10.140701293945312
    5. '               ' → logprob: -11.640701293945312
    6. '#' (adapté à ' #') → logprob: -12.515701293945312
    7. ' if' → logprob: -13.140701293945312
    8. '       ' → logprob: -13.765701293945312
    9. '   ' → logprob: -14.265701293945312
    10. 'for' → logprob: -14.265701293945312

Token 1287: ' Almost' (ID: 53304)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14388392865657806
    2. '#' → logprob: -2.2688839435577393
    3. 'return' → logprob: -3.5188839435577393
    4. 'import' → logprob: -8.01888370513916
    5. 'try' → logprob: -8.51888370513916
    6. '           ' → logprob: -9.01888370513916
    7. 'from' → logprob: -9.39388370513916
    8. '       ' → logprob: -9.76888370513916
    9. 'exp' → logprob: -9.76888370513916
    10. 'rest' → logprob: -10.64388370513916

Token 1288: ' equal' (ID: 12629)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0008341663633473217
    2. 'equal' → logprob: -7.250833988189697
    3. ' return' → logprob: -10.000834465026855
    4. '0' → logprob: -10.000834465026855
    5. '           ' → logprob: -10.500834465026855
    6. '1' → logprob: -12.750834465026855
    7. 'if' → logprob: -14.000834465026855
    8. '#' → logprob: -14.125834465026855
    9. '               ' → logprob: -15.125834465026855
    10. '
' → logprob: -15.125834465026855

Token 1289: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007172697689384222
    2. ' if' → logprob: -5.382172584533691
    3. '               ' → logprob: -6.882172584533691
    4. ' return' → logprob: -7.132172584533691
    5. 'return' → logprob: -7.882172584533691
    6. 'if' → logprob: -8.507172584533691
    7. '       ' → logprob: -10.007172584533691
    8. '   ' → logprob: -10.257172584533691
    9. ' and' → logprob: -11.007172584533691
    10. ',' → logprob: -11.132172584533691

Token 1290: ' fallback' (ID: 66264)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4463960826396942
    2. 'if' → logprob: -1.3213961124420166
    3. '#' → logprob: -2.4463961124420166
    4. '           ' → logprob: -5.4463958740234375
    5. 'exp' → logprob: -7.4463958740234375
    6. 'a' → logprob: -7.5713958740234375
    7. 'rest' → logprob: -7.5713958740234375
    8. '       ' → logprob: -8.696395874023438
    9. 'base' → logprob: -8.696395874023438
    10. 'n' → logprob: -9.321395874023438

Token 1291: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6114490628242493
    2. '           ' → logprob: -1.6114490032196045
    3. 'to' → logprob: -1.7364490032196045
    4. 'return' → logprob: -3.3614490032196045
    5. ' if' → logprob: -3.9864490032196045
    6. 'if' → logprob: -4.861449241638184
    7. ':return' → logprob: -5.236449241638184
    8. ' return' → logprob: -5.361449241638184
    9. ':' → logprob: -5.736449241638184
    10. '=' → logprob: -5.861449241638184

Token 1292: ' lex' (ID: 37772)
  Prédit: 'Power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Power' → logprob: -0.4193159341812134
    2. 'a' → logprob: -2.044315814971924
    3. '#' → logprob: -2.919315814971924
    4. '0' → logprob: -3.169315814971924
    5. '(a' → logprob: -3.669315814971924
    6. '1' → logprob: -3.794315814971924
    7. 'lex' → logprob: -3.919315814971924
    8. '(' → logprob: -4.044315814971924
    9. '-' → logprob: -4.169315814971924
    10. 'exp' → logprob: -6.044315814971924

Token 1293: ' order' (ID: 2569)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0172903537750244
    2. '       ' → logprob: -1.5172903537750244
    3. '
' → logprob: -2.0172903537750244
    4. 'if' → logprob: -2.0172903537750244
    5. 'order' → logprob: -2.2672903537750244
    6. 'return' → logprob: -4.392290115356445
    7. 'for' → logprob: -4.892290115356445
    8. ' order' → logprob: -5.392290115356445
    9. ' if' → logprob: -5.642290115356445
    10. 'ical' → logprob: -5.642290115356445

Token 1294: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.043964534997940063
    2. 'if' → logprob: -4.043964385986328
    3. ' if' → logprob: -4.543964385986328
    4. 'return' → logprob: -4.918964385986328
    5. '       ' → logprob: -6.043964385986328
    6. ':' → logprob: -6.918964385986328
    7. '               ' → logprob: -7.168964385986328
    8. '1' → logprob: -7.293964385986328
    9. 'for' → logprob: -7.793964385986328
    10. ' return' → logprob: -7.793964385986328

Token 1295: ' bases' (ID: 31148)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.2773064970970154
    2. '[' → logprob: -2.02730655670166
    3. 'base' → logprob: -2.90230655670166
    4. 'a' → logprob: -3.77730655670166
    5. '[a' → logprob: -4.40230655670166
    6. 'str' → logprob: -4.40230655670166
    7. '[str' → logprob: -5.15230655670166
    8. 'rest' → logprob: -7.52730655670166
    9. '(exp' → logprob: -7.52730655670166
    10. '(base' → logprob: -7.90230655670166

Token 1296: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028394922614097595
    2. ':' → logprob: -4.77839469909668
    3. '
' → logprob: -5.02839469909668
    4. ':
' → logprob: -5.77839469909668
    5. ' if' → logprob: -5.77839469909668
    6. ' and' → logprob: -6.40339469909668
    7. '       ' → logprob: -6.40339469909668
    8. ',' → logprob: -6.52839469909668
    9. ' for' → logprob: -7.40339469909668
    10. '               ' → logprob: -8.15339469909668

Token 1297: ' ex' (ID: 513)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.019566014409065247
    2. '[' → logprob: -4.519566059112549
    3. 'ex' → logprob: -4.894566059112549
    4. '1' → logprob: -8.26956558227539
    5. 'rest' → logprob: -8.51956558227539
    6. '[]' → logprob: -8.64456558227539
    7. '(' → logprob: -9.51956558227539
    8. '(exp' → logprob: -10.26956558227539
    9. '([' → logprob: -10.64456558227539
    10. '   ' → logprob: -10.64456558227539

Token 1298: 'ponents' (ID: 4331)
  Prédit: 'ponents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponents' → logprob: -0.18606340885162354
    2. 'ps' → logprob: -2.061063289642334
    3. 'p' → logprob: -3.186063289642334
    4. 'ponent' → logprob: -7.061063289642334
    5. 'pens' → logprob: -9.686063766479492
    6. 'pos' → logprob: -10.436063766479492
    7. 'pressions' → logprob: -10.561063766479492
    8. 'pons' → logprob: -10.936063766479492
    9. 'prs' → logprob: -10.936063766479492
    10. 'parts' → logprob: -11.311063766479492

Token 1299: ' lists' (ID: 19471)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029858088120818138
    2. '       ' → logprob: -3.654858112335205
    3. ' if' → logprob: -6.279858112335205
    4. 'if' → logprob: -8.029857635498047
    5. '               ' → logprob: -8.404857635498047
    6. ':' → logprob: -8.404857635498047
    7. ',' → logprob: -8.529857635498047
    8. '
' → logprob: -9.154857635498047
    9. '<|end|>' → logprob: -9.279857635498047
    10. ' and' → logprob: -9.404857635498047

Token 1300: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.042741548269987106
    2. '
' → logprob: -3.667741537094116
    3. ':' → logprob: -5.167741775512695
    4. '       ' → logprob: -5.542741775512695
    5. ':
' → logprob: -5.917741775512695
    6. ',' → logprob: -6.792741775512695
    7. ' if' → logprob: -7.167741775512695
    8. '            
' → logprob: -7.917741775512695
    9. ' and' → logprob: -8.042741775512695
    10. '               ' → logprob: -8.667741775512695

Token 1301: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007146179676055908
    2. ' if' → logprob: -5.38214635848999
    3. '       ' → logprob: -6.75714635848999
    4. 'if' → logprob: -7.13214635848999
    5. '               ' → logprob: -8.382145881652832
    6. ' for' → logprob: -9.007145881652832
    7. 'return' → logprob: -9.882145881652832
    8. '```' → logprob: -9.882145881652832
    9. 'for' → logprob: -10.257145881652832
    10. ' return' → logprob: -10.882145881652832

Token 1302: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.25881949067115784
    2. 'for' → logprob: -1.5088194608688354
    3. 'return' → logprob: -5.008819580078125
    4. 'i' → logprob: -9.133819580078125
    5. '           ' → logprob: -10.258819580078125
    6. '       ' → logprob: -11.133819580078125
    7. '#' → logprob: -11.258819580078125
    8. 'a' → logprob: -11.758819580078125
    9. 'from' → logprob: -13.008819580078125
    10. ' if' → logprob: -13.508819580078125

Token 1303: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0574345737695694
    2. 'a' → logprob: -3.557434558868408
    3. 'exp' → logprob: -4.057434558868408
    4. '(base' → logprob: -4.807434558868408
    5. '[' → logprob: -7.432434558868408
    6. '(a' → logprob: -7.557434558868408
    7. '(exp' → logprob: -8.557435035705566
    8. '[a' → logprob: -8.807435035705566
    9. 'rest' → logprob: -8.932435035705566
    10. 'len' → logprob: -9.307435035705566

Token 1304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' <' → logprob: -14.750001907348633
    3. ' ' → logprob: -14.750001907348633
    4. '```' → logprob: -15.125001907348633
    5. '<' → logprob: -15.375001907348633
    6. '==' → logprob: -16.625001907348633
    7. 'a' → logprob: -17.000001907348633
    8. ' ==' → logprob: -17.000001907348633
    9. '2' → logprob: -17.125001907348633
    10. '   ' → logprob: -17.750001907348633

Token 1305: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5242525935173035
    2. ' <' → logprob: -0.8992525935173035
    3. '==' → logprob: -7.774252414703369
    4. ' ==' → logprob: -7.774252414703369
    5. ',' → logprob: -9.524252891540527
    6. '>' → logprob: -9.774252891540527
    7. '<int' → logprob: -10.024252891540527
    8. ' >' → logprob: -10.274252891540527
    9. '[' → logprob: -11.399252891540527
    10. '<b' → logprob: -11.649252891540527

Token 1306: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.004078401252627373
    2. ' base' → logprob: -5.504078388214111
    3. 'Base' → logprob: -17.504077911376953
    4. '   ' → logprob: -19.254077911376953
    5. '	base' → logprob: -19.754077911376953
    6. '_base' → logprob: -19.879077911376953
    7. '0' → logprob: -20.004077911376953
    8. '(base' → logprob: -20.129077911376953
    9. '```' → logprob: -20.379077911376953
    10. ' ' → logprob: -20.629077911376953

Token 1307: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00017982252757064998
    2. '1' → logprob: -8.6251802444458
    3. '```' → logprob: -15.6251802444458
    4. ' ' → logprob: -17.000179290771484
    5. '   ' → logprob: -17.250179290771484
    6. '
' → logprob: -17.625179290771484
    7. '_' → logprob: -18.625179290771484
    8. '``' → logprob: -19.750179290771484
    9. '       ' → logprob: -20.500179290771484
    10. '`' → logprob: -20.625179290771484

Token 1308: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5885664224624634
    2. ':' → logprob: -1.2135664224624634
    3. '               ' → logprob: -1.9635664224624634
    4. ':return' → logprob: -5.463566303253174
    5. '           ' → logprob: -5.838566303253174
    6. '):
' → logprob: -9.713566780090332
    7. 'return' → logprob: -9.963566780090332
    8. 'and' → logprob: -10.713566780090332
    9. '                       ' → logprob: -10.963566780090332
    10. ' and' → logprob: -11.088566780090332

Token 1309: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014371353900060058
    2. ':
' → logprob: -7.876437187194824
    3. ' return' → logprob: -7.876437187194824
    4. 'return' → logprob: -7.876437187194824
    5. '           ' → logprob: -9.376437187194824
    6. '```' → logprob: -9.376437187194824
    7. ':' → logprob: -10.001437187194824
    8. ':return' → logprob: -10.376437187194824
    9. '   ' → logprob: -11.001437187194824
    10. '                   ' → logprob: -11.001437187194824

Token 1310: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0003436872211750597
    2. ' return' → logprob: -8.250343322753906
    3. '                   ' → logprob: -10.000343322753906
    4. '               ' → logprob: -10.250343322753906
    5. '   ' → logprob: -14.625343322753906
    6. '```' → logprob: -14.875343322753906
    7. '
' → logprob: -15.125343322753906
    8. ':return' → logprob: -15.375343322753906
    9. '	return' → logprob: -15.750343322753906
    10. '           ' → logprob: -15.875343322753906

Token 1311: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.128163257315464e-07
    2. ' -' → logprob: -15.5
    3. '           ' → logprob: -18.375
    4. '```' → logprob: -18.375
    5. '               ' → logprob: -20.125
    6. '                   ' → logprob: -20.75
    7. '
' → logprob: -21.375
    8. '1' → logprob: -21.75
    9. '   ' → logprob: -23.0
    10. '−' → logprob: -23.5

Token 1312: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.75
    3. '```' → logprob: -22.5
    4. '۱' → logprob: -22.625
    5. '2' → logprob: -22.75
    6. '१' → logprob: -23.375
    7. '১' → logprob: -23.75
    8. '   ' → logprob: -23.875
    9. '１' → logprob: -24.0
    10. '<|end|>' → logprob: -24.6875

Token 1313: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005238025914877653
    2. '
' → logprob: -5.505238056182861
    3. '```' → logprob: -7.755238056182861
    4. '       ' → logprob: -8.130237579345703
    5. '               ' → logprob: -8.505237579345703
    6. 'elif' → logprob: -9.005237579345703
    7. '<|end|>' → logprob: -10.130237579345703
    8. ')' → logprob: -11.380237579345703
    9. '\n' → logprob: -11.630237579345703
    10. '   ' → logprob: -12.005237579345703

Token 1314: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010596063220873475
    2. 'elif' → logprob: -6.876059532165527
    3. 'return' → logprob: -11.751059532165527
    4. '```' → logprob: -12.001059532165527
    5. '               ' → logprob: -12.251059532165527
    6. ' elif' → logprob: -12.501059532165527
    7. 'else' → logprob: -13.126059532165527
    8. '       ' → logprob: -14.126059532165527
    9. '		' → logprob: -15.126059532165527
    10. 'if' → logprob: -15.501059532165527

Token 1315: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014772837981581688
    2. 'elif' (adapté à ' elif') → logprob: -4.264772891998291
    3. 'if' → logprob: -7.889772891998291
    4. ' elif' → logprob: -8.889772415161133
    5. ' if' → logprob: -9.889772415161133
    6. 'return' → logprob: -10.764772415161133
    7. '       ' → logprob: -11.764772415161133
    8. 'else' → logprob: -11.889772415161133
    9. '```' → logprob: -12.014772415161133
    10. '               ' → logprob: -13.139772415161133

Token 1316: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.002475777640938759
    2. ' base' → logprob: -6.002475738525391
    3. '(base' → logprob: -17.62747573852539
    4. '	base' → logprob: -17.87747573852539
    5. '   ' → logprob: -18.62747573852539
    6. 'Base' → logprob: -19.00247573852539
    7. '           ' → logprob: -19.50247573852539
    8. 'b' → logprob: -19.62747573852539
    9. ' ' → logprob: -19.62747573852539
    10. '_base' → logprob: -19.87747573852539

Token 1317: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1269487887620926
    2. '1' → logprob: -2.126948833465576
    3. ' ' → logprob: -11.126948356628418
    4. '```' → logprob: -12.626948356628418
    5. '   ' → logprob: -14.001948356628418
    6. 'base' → logprob: -14.376948356628418
    7. '>' → logprob: -14.626948356628418
    8. ' >' → logprob: -15.126948356628418
    9. '           ' → logprob: -15.626948356628418
    10. '       ' → logprob: -15.876948356628418

Token 1318: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.029750952497124672
    2. ' >' → logprob: -3.5297510623931885
    3. '<' → logprob: -15.40475082397461
    4. '>`' → logprob: -17.40475082397461
    5. '>b' → logprob: -17.90475082397461
    6. '```' → logprob: -18.15475082397461
    7. '>
' → logprob: -18.15475082397461
    8. ' <' → logprob: -18.15475082397461
    9. '()>' → logprob: -18.27975082397461
    10. ' ' → logprob: -18.27975082397461

Token 1319: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.2526497542858124
    2. ' base' → logprob: -1.5026497840881348
    3. '1' → logprob: -7.252649784088135
    4. '   ' → logprob: -12.502649307250977
    5. '(base' → logprob: -12.627649307250977
    6. ' ' → logprob: -13.002649307250977
    7. '           ' → logprob: -14.002649307250977
    8. '	base' → logprob: -14.877649307250977
    9. '0' → logprob: -15.252649307250977
    10. '               ' → logprob: -15.377649307250977

Token 1320: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.25244972109794617
    2. 'base' → logprob: -1.5024497509002686
    3. ' base' → logprob: -7.6274495124816895
    4. ' ' → logprob: -11.127449989318848
    5. '   ' → logprob: -11.877449989318848
    6. '```' → logprob: -12.252449989318848
    7. '(base' → logprob: -12.627449989318848
    8. '>' → logprob: -13.502449989318848
    9. '
' → logprob: -14.002449989318848
    10. 'b' → logprob: -15.252449989318848

Token 1321: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25338077545166016
    2. ':' → logprob: -1.7533807754516602
    3. ':
' → logprob: -3.12838077545166
    4. ':return' → logprob: -5.75338077545166
    5. '           ' → logprob: -6.00338077545166
    6. '<|end|>' → logprob: -7.75338077545166
    7. '1' → logprob: -9.12838077545166
    8. '```' → logprob: -9.25338077545166
    9. 'return' → logprob: -9.87838077545166
    10. ',' → logprob: -9.87838077545166

Token 1322: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003267639840487391
    2. ':' → logprob: -9.000327110290527
    3. '```' → logprob: -9.500327110290527
    4. ':
' → logprob: -10.250327110290527
    5. '           ' → logprob: -10.500327110290527
    6. ' return' → logprob: -11.125327110290527
    7. 'return' → logprob: -11.250327110290527
    8. ':return' → logprob: -11.375327110290527
    9. '                   ' → logprob: -11.875327110290527
    10. '                       ' → logprob: -12.625327110290527

Token 1323: ' return' (ID: 622)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.021142227575182915
    2. '               ' → logprob: -4.64614200592041
    3. ' ' → logprob: -5.14614200592041
    4. 'return' (adapté à ' return') → logprob: -5.52114200592041
    5. ' return' → logprob: -6.52114200592041
    6. '0' → logprob: -11.14614200592041
    7. '           ' → logprob: -12.39614200592041
    8. '   ' → logprob: -12.77114200592041
    9. '                   ' → logprob: -13.89614200592041
    10. '              ' → logprob: -14.02114200592041

Token 1324: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001170225441455841
    2. ' ' → logprob: -6.7511701583862305
    3. '   ' → logprob: -20.126171112060547
    4. '           ' → logprob: -20.751171112060547
    5. '  ' → logprob: -21.001171112060547
    6. '+' → logprob: -21.126171112060547
    7. '
' → logprob: -21.501171112060547
    8. '```' → logprob: -22.126171112060547
    9. ' ' → logprob: -22.251171112060547
    10. '۱' → logprob: -23.126171112060547

Token 1325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '   ' → logprob: -22.875
    4. '+' → logprob: -23.875
    5. '           ' → logprob: -23.875
    6. '```' → logprob: -24.25
    7. '۱' → logprob: -26.0
    8. '  ' → logprob: -26.125
    9. '       ' → logprob: -26.25
    10. '                   ' → logprob: -26.25

Token 1326: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0035513662733137608
    2. 'else' → logprob: -5.753551483154297
    3. ' else' → logprob: -8.003551483154297
    4. 'elif' → logprob: -10.628551483154297
    5. '		' → logprob: -12.503551483154297
    6. '
' → logprob: -12.503551483154297
    7. '               ' → logprob: -13.003551483154297
    8. ' elif' → logprob: -13.878551483154297
    9. 'return' → logprob: -13.878551483154297
    10. '\
' → logprob: -14.003551483154297

Token 1327: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018546124920248985
    2. 'else' → logprob: -4.018546104431152
    3. ' else' → logprob: -8.143546104431152
    4. 'elif' → logprob: -9.393546104431152
    5. '```' → logprob: -11.393546104431152
    6. '       ' → logprob: -12.268546104431152
    7. '               ' → logprob: -13.018546104431152
    8. ' elif' → logprob: -13.643546104431152
    9. 'return' → logprob: -13.893546104431152
    10. '		' → logprob: -14.018546104431152

Token 1328: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.10809492319822311
    2. '           ' → logprob: -2.3580949306488037
    3. 'elif' → logprob: -4.858094692230225
    4. ' else' → logprob: -9.983095169067383
    5. '```' → logprob: -10.483095169067383
    6. 'if' → logprob: -11.233095169067383
    7. '       ' → logprob: -12.733095169067383
    8. ' elif' → logprob: -14.108095169067383
    9. '               ' → logprob: -14.608095169067383
    10. '
' → logprob: -16.233095169067383

Token 1329: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7791146039962769
    2. ':
' → logprob: -1.4041146039962769
    3. '           ' → logprob: -1.7791146039962769
    4. '               ' → logprob: -2.4041147232055664
    5. '       ' → logprob: -3.6541147232055664
    6. ' and' → logprob: -5.779114723205566
    7. ' if' → logprob: -6.279114723205566
    8. '<|end|>' → logprob: -6.279114723205566
    9. ',' → logprob: -6.654114723205566
    10. '	       ' → logprob: -7.779114723205566

Token 1330: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015997884795069695
    2. ' if' → logprob: -4.890997886657715
    3. '           ' → logprob: -5.265997886657715
    4. 'if' → logprob: -6.390997886657715
    5. '       ' → logprob: -7.265997886657715
    6. 'return' → logprob: -8.140997886657715
    7. '```' → logprob: -8.265997886657715
    8. ' return' → logprob: -9.390997886657715
    9. '   ' → logprob: -10.140997886657715
    10. '0' → logprob: -10.265997886657715

Token 1331: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05282391980290413
    2. '#' (adapté à ' #') → logprob: -3.427824020385742
    3. 'pass' → logprob: -4.802824020385742
    4. 'return' → logprob: -5.177824020385742
    5. 'for' → logprob: -5.552824020385742
    6. 'exp' → logprob: -7.302824020385742
    7. '           ' → logprob: -8.177824020385742
    8. '               ' → logprob: -8.802824020385742
    9. ' if' → logprob: -9.677824020385742
    10. '       ' → logprob: -10.677824020385742

Token 1332: ' rec' (ID: 1369)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03208126872777939
    2. '#' → logprob: -4.282081127166748
    3. 'return' → logprob: -5.282081127166748
    4. 'r' → logprob: -5.407081127166748
    5. 'for' → logprob: -5.532081127166748
    6. 'exp' → logprob: -6.157081127166748
    7. 'cmp' → logprob: -6.907081127166748
    8. 'comp' → logprob: -8.532081604003906
    9. 'result' → logprob: -8.532081604003906
    10. 'res' → logprob: -8.532081604003906

Token 1333: ' compare' (ID: 12221)
  Prédit: 'ursion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.7826290726661682
    2. 'ursive' → logprob: -1.2826290130615234
    3. 'ur' → logprob: -2.4076290130615234
    4. 'urse' → logprob: -2.7826290130615234
    5. '       ' → logprob: -3.6576290130615234
    6. 'ursively' → logprob: -3.6576290130615234
    7. 'urs' → logprob: -4.907629013061523
    8. 'ursor' → logprob: -4.907629013061523
    9. 'urn' → logprob: -5.157629013061523
    10. 'urrent' → logprob: -5.157629013061523

Token 1334: ' exponent' (ID: 51159)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0872798040509224
    2. '               ' → logprob: -3.212279796600342
    3. ' return' → logprob: -3.837279796600342
    4. 'if' → logprob: -4.337279796600342
    5. '           ' → logprob: -5.462279796600342
    6. ' if' → logprob: -5.587279796600342
    7. 'r' → logprob: -8.3372802734375
    8. 'result' → logprob: -8.7122802734375
    9. '       ' → logprob: -8.9622802734375
    10. 'for' → logprob: -9.8372802734375

Token 1335: ' towers' (ID: 79040)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0776491165161133
    2. 'exp' → logprob: -1.4526491165161133
    3. '_list' → logprob: -1.5776491165161133
    4. '1' → logprob: -2.3276491165161133
    5. '_lists' → logprob: -3.3276491165161133
    6. 'lists' → logprob: -3.5776491165161133
    7. '           ' → logprob: -3.7026491165161133
    8. 'return' → logprob: -4.452649116516113
    9. ' if' → logprob: -5.077649116516113
    10. '               ' → logprob: -5.452649116516113

Token 1336: ' lex' (ID: 37772)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08675803244113922
    2. 'return' → logprob: -2.7117581367492676
    3. ' return' → logprob: -5.086758136749268
    4. '       ' → logprob: -5.586758136749268
    5. '                   ' → logprob: -5.961758136749268
    6. ' if' → logprob: -6.086758136749268
    7. 'if' → logprob: -7.336758136749268
    8. ' for' → logprob: -8.21175765991211
    9. '```' → logprob: -8.46175765991211
    10. '           ' → logprob: -8.58675765991211

Token 1337: ' order' (ID: 2569)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.44013309478759766
    2. 'ically' → logprob: -1.4401330947875977
    3. 'ographically' → logprob: -2.5651330947875977
    4. 'order' → logprob: -3.4401330947875977
    5. '       ' → logprob: -5.315133094787598
    6. '           ' → logprob: -6.440133094787598
    7. 'ical' → logprob: -7.565133094787598
    8. 'p' → logprob: -7.690133094787598
    9. 'ographical' → logprob: -7.815133094787598
    10. 'if' → logprob: -7.940133094787598

Token 1338: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4717383086681366
    2. '               ' → logprob: -1.721738338470459
    3. 'return' → logprob: -1.971738338470459
    4. 'if' → logprob: -3.221738338470459
    5. ' if' → logprob: -4.346738338470459
    6. ' return' → logprob: -5.971738338470459
    7. 'for' → logprob: -6.721738338470459
    8. '       ' → logprob: -7.471738338470459
    9. ' for' → logprob: -7.596738338470459
    10. '```' → logprob: -8.3467378616333

Token 1339: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5879727602005005
    2. '           ' → logprob: -0.8379727602005005
    3. ' if' → logprob: -5.337972640991211
    4. '                   ' → logprob: -5.837972640991211
    5. '```' → logprob: -5.962972640991211
    6. 'return' → logprob: -7.712972640991211
    7. ' return' → logprob: -7.962972640991211
    8. '       ' → logprob: -8.212972640991211
    9. 'if' → logprob: -8.212972640991211
    10. ' for' → logprob: -9.087972640991211

Token 1340: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7626534700393677
    2. 'return' → logprob: -1.2626534700393677
    3. 'if' (adapté à ' if') → logprob: -1.5126534700393677
    4. 'r' → logprob: -3.887653350830078
    5. 'i' → logprob: -6.387653350830078
    6. 'exp' → logprob: -6.512653350830078
    7. 'result' → logprob: -6.637653350830078
    8. 'res' → logprob: -6.762653350830078
    9. '       ' → logprob: -6.762653350830078
    10. '           ' → logprob: -6.887653350830078

Token 1341: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.1058136448264122
    2. 'len' → logprob: -2.48081374168396
    3. 'Power' → logprob: -4.105813503265381
    4. 'not' → logprob: -9.855813980102539
    5. '(exp' → logprob: -10.355813980102539
    6. ' exp' → logprob: -10.730813980102539
    7. ' Power' → logprob: -10.730813980102539
    8. '(len' → logprob: -10.855813980102539
    9. 'tuple' → logprob: -10.855813980102539
    10. 'power' → logprob: -11.355813980102539

Token 1342: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.07081829756498337
    2. '1' → logprob: -2.6958181858062744
    3. 'list' → logprob: -7.0708184242248535
    4. '[' → logprob: -12.320817947387695
    5. '2' → logprob: -12.445817947387695
    6. 'len' → logprob: -12.445817947387695
    7. 'List' → logprob: -12.695817947387695
    8. '```' → logprob: -12.820817947387695
    9. '_len' → logprob: -13.070817947387695
    10. '0' → logprob: -13.070817947387695

Token 1343: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. '
' → logprob: -14.00000286102295
    3. '```' → logprob: -14.87500286102295
    4. '0' → logprob: -15.56250286102295
    5. '   ' → logprob: -15.87500286102295
    6. 'len' → logprob: -16.125001907348633
    7. '_' → logprob: -16.187501907348633
    8. ' ' → logprob: -16.187501907348633
    9. 'def' → logprob: -16.875001907348633
    10. 'list' → logprob: -16.937501907348633

Token 1344: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1173388734459877
    2. ' <' → logprob: -2.2423388957977295
    3. '<len' → logprob: -6.36733865737915
    4. '==' → logprob: -7.36733865737915
    5. '<n' → logprob: -7.74233865737915
    6. '[' → logprob: -8.367339134216309
    7. '<b' → logprob: -8.617339134216309
    8. ' ==' → logprob: -8.617339134216309
    9. '<p' → logprob: -8.617339134216309
    10. '<i' → logprob: -8.742339134216309

Token 1345: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.0015023599844425917
    2. ' exp' → logprob: -6.501502513885498
    3. '           ' → logprob: -18.251502990722656
    4. '(exp' → logprob: -18.751502990722656
    5. '	exp' → logprob: -19.001502990722656
    6. '.exp' → logprob: -21.126502990722656
    7. '            ' → logprob: -21.251502990722656
    8. '_exp' → logprob: -21.626502990722656
    9. '        ' → logprob: -21.626502990722656
    10. '               ' → logprob: -22.126502990722656

Token 1346: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00425754627212882
    2. '2' → logprob: -5.754257678985596
    3. 'list' → logprob: -7.004257678985596
    4. '1' → logprob: -8.754257202148438
    5. 'List' → logprob: -11.254257202148438
    6. 'exp' → logprob: -15.004257202148438
    7. '```' → logprob: -16.504257202148438
    8. '   ' → logprob: -17.129257202148438
    9. '       ' → logprob: -18.504257202148438
    10. '_LIST' → logprob: -19.004257202148438

Token 1347: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.36574100604048e-06
    2. '1' → logprob: -12.500004768371582
    3. '```' → logprob: -15.625004768371582
    4. '
' → logprob: -15.750004768371582
    5. 'ist' → logprob: -16.000003814697266
    6. '_list' → logprob: -17.000003814697266
    7. 'exp' → logprob: -17.000003814697266
    8. '_' → logprob: -17.125003814697266
    9. '   ' → logprob: -17.125003814697266
    10. 'list' → logprob: -17.750003814697266

Token 1348: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.579883873462677
    2. '               ' → logprob: -1.2048838138580322
    3. ':' → logprob: -2.4548838138580322
    4. ':return' → logprob: -3.5798838138580322
    5. '                   ' → logprob: -4.329884052276611
    6. '           ' → logprob: -4.454884052276611
    7. 'return' → logprob: -7.079884052276611
    8. '):
' → logprob: -8.204883575439453
    9. '                       ' → logprob: -8.329883575439453
    10. ' return' → logprob: -9.329883575439453

Token 1349: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.15714682638645172
    2. '               ' → logprob: -2.03214693069458
    3. 'return' → logprob: -4.65714693069458
    4. ':return' → logprob: -6.15714693069458
    5. '                       ' → logprob: -6.90714693069458
    6. ' return' → logprob: -7.78214693069458
    7. ':' → logprob: -8.032146453857422
    8. '   ' → logprob: -8.157146453857422
    9. ':
' → logprob: -8.407146453857422
    10. '           ' → logprob: -8.657146453857422

Token 1350: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00017922651022672653
    2. ' return' → logprob: -8.750179290771484
    3. '                   ' → logprob: -11.625179290771484
    4. '               ' → logprob: -12.500179290771484
    5. '           ' → logprob: -13.250179290771484
    6. '   ' → logprob: -13.375179290771484
    7. '```' → logprob: -13.375179290771484
    8. '	return' → logprob: -13.625179290771484
    9. '                       ' → logprob: -14.000179290771484
    10. '
' → logprob: -14.750179290771484

Token 1351: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9361264946837764e-07
    2. ' -' → logprob: -15.875
    3. '1' → logprob: -18.625
    4. '           ' → logprob: -19.25
    5. '                   ' → logprob: -19.625
    6. '               ' → logprob: -21.125
    7. '                       ' → logprob: -22.875
    8. '   ' → logprob: -23.0
    9. '```' → logprob: -23.25
    10. '
' → logprob: -23.5

Token 1352: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '2' → logprob: -21.0
    4. '```' → logprob: -21.0
    5. '<|end|>' → logprob: -21.625
    6. '۱' → logprob: -21.75
    7. '   ' → logprob: -22.0
    8. '१' → logprob: -22.25
    9. '১' → logprob: -22.3125
    10. '11' → logprob: -22.5

Token 1353: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00027897433028556406
    2. 'elif' → logprob: -8.875279426574707
    3. '           ' → logprob: -9.125279426574707
    4. '```' → logprob: -10.875279426574707
    5. 'return' → logprob: -12.500279426574707
    6. '<|end|>' → logprob: -13.000279426574707
    7. 'else' → logprob: -13.375279426574707
    8. '                   ' → logprob: -14.000279426574707
    9. '       ' → logprob: -14.250279426574707
    10. '			' → logprob: -14.625279426574707

Token 1354: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003404687449801713
    2. 'elif' → logprob: -8.625340461730957
    3. '```' → logprob: -9.250340461730957
    4. 'else' → logprob: -10.500340461730957
    5. '           ' → logprob: -11.000340461730957
    6. 'return' → logprob: -11.125340461730957
    7. '                   ' → logprob: -13.250340461730957
    8. '       ' → logprob: -13.375340461730957
    9. ' elif' → logprob: -14.000340461730957
    10. ' else' → logprob: -14.625340461730957

Token 1355: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.48034897446632385
    2. 'elif' (adapté à ' elif') → logprob: -0.9803489446640015
    3. '```' → logprob: -5.980349063873291
    4. '           ' → logprob: -6.355349063873291
    5. ' elif' → logprob: -6.730349063873291
    6. '                   ' → logprob: -7.230349063873291
    7. 'return' → logprob: -10.730348587036133
    8. 'else' → logprob: -11.105348587036133
    9. '              ' → logprob: -11.980348587036133
    10. '             ' → logprob: -12.480348587036133

Token 1356: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -9.221884101862088e-05
    2. ' exp' → logprob: -9.375092506408691
    3. '           ' → logprob: -11.875092506408691
    4. '(exp' → logprob: -15.625092506408691
    5. '               ' → logprob: -16.125091552734375
    6. '       ' → logprob: -17.375091552734375
    7. '          ' → logprob: -17.625091552734375
    8. '	exp' → logprob: -17.875091552734375
    9. '                   ' → logprob: -18.375091552734375
    10. '        ' → logprob: -18.625091552734375

Token 1357: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.9981420336989686e-05
    2. 'exp' → logprob: -11.375020027160645
    3. '[' → logprob: -12.875020027160645
    4. '1' → logprob: -13.000020027160645
    5. '2' → logprob: -13.000020027160645
    6. 'List' → logprob: -14.625020027160645
    7. '(exp' → logprob: -15.500020027160645
    8. '_lists' → logprob: -15.875020027160645
    9. '_LIST' → logprob: -15.875020027160645
    10. '```' → logprob: -16.500019073486328

Token 1358: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10022241622209549
    2. '1' → logprob: -2.35022234916687
    3. '```' → logprob: -12.60022258758545
    4. ' ' → logprob: -12.97522258758545
    5. '[' → logprob: -13.22522258758545
    6. '_list' → logprob: -13.35022258758545
    7. 'exp' → logprob: -13.35022258758545
    8. 'List' → logprob: -13.72522258758545
    9. '
' → logprob: -14.47522258758545
    10. '>' → logprob: -14.47522258758545

Token 1359: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.018151583150029182
    2. ' >' → logprob: -4.018151760101318
    3. '[' → logprob: -13.76815128326416
    4. ' ' → logprob: -16.268152236938477
    5. '   ' → logprob: -16.518152236938477
    6. '>[' → logprob: -16.518152236938477
    7. ']>' → logprob: -16.768152236938477
    8. ')>' → logprob: -16.893152236938477
    9. '>b' → logprob: -16.893152236938477
    10. '[]>' → logprob: -17.143152236938477

Token 1360: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.02394418604671955
    2. ' exp' → logprob: -3.773944139480591
    3. '1' → logprob: -7.27394437789917
    4. ' ' → logprob: -13.023943901062012
    5. '(exp' → logprob: -13.898943901062012
    6. '[' → logprob: -15.148943901062012
    7. '	exp' → logprob: -15.148943901062012
    8. '           ' → logprob: -15.398943901062012
    9. '-' → logprob: -15.523943901062012
    10. '-exp' → logprob: -15.773943901062012

Token 1361: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.012564040720462799
    2. 'exp' → logprob: -4.512564182281494
    3. '1' → logprob: -7.262564182281494
    4. '2' → logprob: -7.387564182281494
    5. '[' → logprob: -9.762563705444336
    6. ' ' → logprob: -10.262563705444336
    7. ' exp' → logprob: -10.512563705444336
    8. 'List' → logprob: -10.637563705444336
    9. '```' → logprob: -11.512563705444336
    10. '   ' → logprob: -11.762563705444336

Token 1362: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00033713103039190173
    2. '_list' → logprob: -8.000337600708008
    3. '[' → logprob: -14.250337600708008
    4. '1' → logprob: -15.125337600708008
    5. '_' → logprob: -15.250337600708008
    6. '   ' → logprob: -15.875337600708008
    7. 'List' → logprob: -16.125337600708008
    8. '```' → logprob: -16.125337600708008
    9. 'list' → logprob: -16.250337600708008
    10. '
' → logprob: -16.375337600708008

Token 1363: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7085326313972473
    2. ':' → logprob: -0.9585326313972473
    3. '               ' → logprob: -2.4585325717926025
    4. '                   ' → logprob: -3.7085325717926025
    5. '                       ' → logprob: -4.583532810211182
    6. ':return' → logprob: -5.708532810211182
    7. '           ' → logprob: -8.333532333374023
    8. '):
' → logprob: -9.583532333374023
    9. '                    ' → logprob: -10.458532333374023
    10. '                     ' → logprob: -10.583532333374023

Token 1364: '                   ' (ID: 699)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.1867763251066208
    2. '                   ' → logprob: -2.1867763996124268
    3. '               ' → logprob: -3.6867763996124268
    4. ':' → logprob: -3.6867763996124268
    5. ':return' → logprob: -5.686776161193848
    6. ':
' → logprob: -6.436776161193848
    7. '```' → logprob: -6.686776161193848
    8. 'return' → logprob: -7.436776161193848
    9. ' return' → logprob: -8.561776161193848
    10. '                               ' → logprob: -8.561776161193848

Token 1365: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5769438147544861
    2. '1' → logprob: -0.8269438147544861
    3. ' return' → logprob: -7.076943874359131
    4. '                   ' → logprob: -9.326943397521973
    5. '                       ' → logprob: -10.326943397521973
    6. ' ' → logprob: -10.451943397521973
    7. '   ' → logprob: -12.951943397521973
    8. '               ' → logprob: -13.326943397521973
    9. '                           ' → logprob: -14.076943397521973
    10. '           ' → logprob: -14.076943397521973

Token 1366: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -20.6250057220459
    4. '
' → logprob: -21.0000057220459
    5. '           ' → logprob: -21.6250057220459
    6. '                   ' → logprob: -22.1250057220459
    7. '  ' → logprob: -23.5000057220459
    8. '+' → logprob: -23.7500057220459
    9. '               ' → logprob: -23.8750057220459
    10. '                       ' → logprob: -23.8750057220459

Token 1367: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '   ' → logprob: -22.375
    4. '  ' → logprob: -24.625
    5. '```' → logprob: -24.75
    6. '           ' → logprob: -25.125
    7. '+' → logprob: -25.5
    8. '                   ' → logprob: -25.75
    9. '۱' → logprob: -25.75
    10. '
' → logprob: -25.875

Token 1368: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008893339894711971
    2. 'else' → logprob: -4.8838934898376465
    3. '           ' → logprob: -7.0088934898376465
    4. ' else' → logprob: -8.383893013000488
    5. '```' → logprob: -9.508893013000488
    6. 'return' → logprob: -9.758893013000488
    7. '                   ' → logprob: -11.508893013000488
    8. '       ' → logprob: -12.633893013000488
    9. '{
' → logprob: -13.133893013000488
    10. '			' → logprob: -13.383893013000488

Token 1369: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04967304691672325
    2. 'else' → logprob: -3.174673080444336
    3. '```' → logprob: -5.299673080444336
    4. 'return' → logprob: -6.549673080444336
    5. '           ' → logprob: -9.049673080444336
    6. ' else' → logprob: -9.424673080444336
    7. '{return' → logprob: -11.799673080444336
    8. '       ' → logprob: -12.049673080444336
    9. '                   ' → logprob: -12.049673080444336
    10. '``' → logprob: -12.924673080444336

Token 1370: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6345237493515015
    2. '               ' → logprob: -0.8845237493515015
    3. 'return' → logprob: -2.884523868560791
    4. ' else' → logprob: -7.259523868560791
    5. '```' → logprob: -9.134523391723633
    6. '           ' → logprob: -9.384523391723633
    7. '{
' → logprob: -10.134523391723633
    8. '{return' → logprob: -10.384523391723633
    9. '                   ' → logprob: -10.634523391723633
    10. ' return' → logprob: -11.509523391723633

Token 1371: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -1.058575987815857
    2. ':
' → logprob: -1.183575987815857
    3. '0' → logprob: -2.1835761070251465
    4. '               ' → logprob: -2.5585761070251465
    5. ':' → logprob: -2.6835761070251465
    6. 'return' → logprob: -3.3085761070251465
    7. '                   ' → logprob: -3.5585761070251465
    8. ':return' → logprob: -4.0585761070251465
    9. ' return' → logprob: -6.0585761070251465
    10. '           ' → logprob: -7.0585761070251465

Token 1372: '                   ' (ID: 699)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6971774697303772
    2. '0' → logprob: -0.8221774697303772
    3. '                       ' → logprob: -3.4471774101257324
    4. '               ' → logprob: -4.072177410125732
    5. '                   ' → logprob: -4.572177410125732
    6. ' return' → logprob: -6.447177410125732
    7. '```' → logprob: -7.447177410125732
    8. '           ' → logprob: -7.697177410125732
    9. '{return' → logprob: -8.19717788696289
    10. '                           ' → logprob: -9.32217788696289

Token 1373: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16085684299468994
    2. '0' → logprob: -1.91085684299469
    3. ' return' → logprob: -7.4108567237854
    4. '                   ' → logprob: -10.660857200622559
    5. ' ' → logprob: -13.785857200622559
    6. '                       ' → logprob: -13.910857200622559
    7. '	return' → logprob: -14.035857200622559
    8. '           ' → logprob: -14.410857200622559
    9. '   ' → logprob: -14.785857200622559
    10. '               ' → logprob: -15.285857200622559

Token 1374: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '                   ' → logprob: -22.375001907348633
    4. '           ' → logprob: -23.000001907348633
    5. '۰' → logprob: -23.875001907348633
    6. '   ' → logprob: -24.000001907348633
    7. '                       ' → logprob: -24.000001907348633
    8. '               ' → logprob: -24.000001907348633
    9. '                                   ' → logprob: -24.875001907348633
    10. '                               ' → logprob: -25.125001907348633

Token 1375: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -20.375
    3. '۰' → logprob: -21.75
    4. '000' → logprob: -25.375
    5. '٠' → logprob: -25.375
    6. '०' → logprob: -25.625
    7. '０' → logprob: -26.0
    8. '00' → logprob: -26.25
    9. '০' → logprob: -26.5
    10. '           ' → logprob: -27.0

Token 1376: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011832371354103088
    2. '<|end|>' → logprob: -4.511832237243652
    3. '```' → logprob: -8.011832237243652
    4. '           ' → logprob: -8.761832237243652
    5. 'return' → logprob: -9.511832237243652
    6. '               ' → logprob: -10.136832237243652
    7. '
' → logprob: -10.261832237243652
    8. '        
' → logprob: -10.636832237243652
    9. '        ' → logprob: -10.636832237243652
    10. ')' → logprob: -11.011832237243652

Token 1377: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012880703434348106
    2. 'return' → logprob: -9.875128746032715
    3. '```' → logprob: -10.125128746032715
    4. '
' → logprob: -10.875128746032715
    5. '        
' → logprob: -12.250128746032715
    6. 'if' → logprob: -12.250128746032715
    7. '<|end|>' → logprob: -12.375128746032715
    8. '           ' → logprob: -13.625128746032715
    9. 'elif' → logprob: -14.125128746032715
    10. '               ' → logprob: -14.500128746032715

Token 1378: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017183588352054358
    2. 'if' (adapté à ' if') → logprob: -9.750171661376953
    3. 'return' → logprob: -10.000171661376953
    4. '-' → logprob: -10.250171661376953
    5. ' if' → logprob: -11.375171661376953
    6. '<|end|>' → logprob: -12.000171661376953
    7. '[' → logprob: -12.500171661376953
    8. '```' → logprob: -12.750171661376953
    9. '   ' → logprob: -13.000171661376953
    10. '           ' → logprob: -13.750171661376953

Token 1379: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.005233882926404476
    2. ' val' → logprob: -5.2552337646484375
    3. '   ' → logprob: -18.255233764648438
    4. '(val' → logprob: -18.630233764648438
    5. '	val' → logprob: -18.755233764648438
    6. '_val' → logprob: -19.130233764648438
    7. '           ' → logprob: -19.880233764648438
    8. '       ' → logprob: -20.130233764648438
    9. ' ' → logprob: -20.255233764648438
    10. '  ' → logprob: -20.380233764648438

Token 1380: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -16.625
    3. ')' → logprob: -17.5
    4. '_' → logprob: -17.75
    5. '>' → logprob: -17.875
    6. ' ' → logprob: -18.0
    7. '```' → logprob: -18.125
    8. '<' → logprob: -19.5
    9. '１' → logprob: -19.75
    10. '_val' → logprob: -19.75

Token 1381: '_ln' (ID: 135809)
  Prédit: '_ln'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ln' → logprob: -9.639096970204264e-05
    2. '>' → logprob: -9.750096321105957
    3. '_' → logprob: -11.250096321105957
    4. '<_' → logprob: -12.000096321105957
    5. '_lt' → logprob: -12.375096321105957
    6. '<' → logprob: -12.750096321105957
    7. '_ll' → logprob: -13.000096321105957
    8. '_li' → logprob: -13.625096321105957
    9. ' >' → logprob: -13.750096321105957
    10. ' <' → logprob: -14.000096321105957

Token 1382: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07249553501605988
    2. ' >' → logprob: -3.072495460510254
    3. '<' → logprob: -3.947495460510254
    4. '>' → logprob: -5.447495460510254
    5. '<|end|>' → logprob: -12.197495460510254
    6. '[' → logprob: -13.322495460510254
    7. ' ' → logprob: -13.947495460510254
    8. '```' → logprob: -13.947495460510254
    9. ' ' → logprob: -14.447495460510254
    10. '   ' → logprob: -14.572495460510254

Token 1383: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.3868713676929474
    2. 'val' → logprob: -1.136871337890625
    3. '_val' → logprob: -15.761871337890625
    4. '	val' → logprob: -16.761871337890625
    5. '(val' → logprob: -17.011871337890625
    6. '0' → logprob: -17.261871337890625
    7. '       ' → logprob: -18.136871337890625
    8. '.val' → logprob: -18.761871337890625
    9. '[val' → logprob: -18.761871337890625
    10. ',val' → logprob: -19.136871337890625

Token 1384: '2' (ID: 17)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5769495964050293
    2. '2' → logprob: -0.8269495964050293
    3. '_val' → logprob: -7.576949596405029
    4. ' val' → logprob: -7.701949596405029
    5. '1' → logprob: -10.951950073242188
    6. '(val' → logprob: -11.451950073242188
    7. '[val' → logprob: -11.576950073242188
    8. '```' → logprob: -12.576950073242188
    9. '	val' → logprob: -12.826950073242188
    10. '   ' → logprob: -14.326950073242188

Token 1385: '_ln' (ID: 135809)
  Prédit: '_ln'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ln' → logprob: -1.3856492842023727e-06
    2. 'ln' → logprob: -14.625000953674316
    3. '_ll' → logprob: -15.250000953674316
    4. '_ls' → logprob: -15.875000953674316
    5. '```' → logprob: -15.875000953674316
    6. '   ' → logprob: -16.000001907348633
    7. '1' → logprob: -17.000001907348633
    8. '-ln' → logprob: -17.125001907348633
    9. '_l' → logprob: -17.125001907348633
    10. '_lin' → logprob: -17.500001907348633

Token 1386: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21970361471176147
    2. '           ' → logprob: -2.0947036743164062
    3. ':
' → logprob: -2.9697036743164062
    4. ':return' → logprob: -3.8447036743164062
    5. '       ' → logprob: -7.219703674316406
    6. '               ' → logprob: -8.094703674316406
    7. '<|end|>' → logprob: -9.219703674316406
    8. ' return' → logprob: -9.969703674316406
    9. 'return' → logprob: -10.094703674316406
    10. ')' → logprob: -10.219703674316406

Token 1387: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015181333583313972
    2. 'return' → logprob: -9.875151634216309
    3. ':' → logprob: -10.250151634216309
    4. ':
' → logprob: -10.375151634216309
    5. '               ' → logprob: -11.250151634216309
    6. ' return' → logprob: -11.875151634216309
    7. ':return' → logprob: -11.875151634216309
    8. '```' → logprob: -13.000151634216309
    9. '		' → logprob: -13.750151634216309
    10. '{
' → logprob: -14.250151634216309

Token 1388: ' return' (ID: 622)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7758057117462158
    2. '           ' → logprob: -1.2758057117462158
    3. 'return' (adapté à ' return') → logprob: -1.5258057117462158
    4. ' return' → logprob: -3.275805711746216
    5. '               ' → logprob: -5.525805473327637
    6. ' ' → logprob: -7.025805473327637
    7. '0' → logprob: -9.150805473327637
    8. '   ' → logprob: -9.650805473327637
    9. ':return' → logprob: -9.775805473327637
    10. '```' → logprob: -9.775805473327637

Token 1389: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '           ' → logprob: -18.25
    4. '   ' → logprob: -21.5
    5. '       ' → logprob: -22.25
    6. '               ' → logprob: -23.0
    7. '```' → logprob: -23.5
    8. '
' → logprob: -24.0
    9. '                   ' → logprob: -24.75
    10. '                       ' → logprob: -25.625

Token 1390: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '```' → logprob: -24.0
    4. '   ' → logprob: -24.125
    5. '           ' → logprob: -25.125
    6. '       ' → logprob: -26.125
    7. '۱' → logprob: -27.25
    8. '  ' → logprob: -27.375
    9. '１' → logprob: -27.5
    10. '
' → logprob: -28.125

Token 1391: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07802505791187286
    2. '<|end|>' → logprob: -2.7030251026153564
    3. 'else' → logprob: -5.078024864196777
    4. ' else' → logprob: -6.953024864196777
    5. '        
' → logprob: -8.453024864196777
    6. '```' → logprob: -8.953024864196777
    7. '   ' → logprob: -9.203024864196777
    8. '        ' → logprob: -9.203024864196777
    9. '           ' → logprob: -9.453024864196777
    10. '<|end|>' → logprob: -9.953024864196777

Token 1392: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016702996799722314
    2. '        
' → logprob: -7.5016703605651855
    3. '```' → logprob: -7.6266703605651855
    4. 'else' → logprob: -8.001669883728027
    5. '           ' → logprob: -9.876669883728027
    6. '
' → logprob: -10.376669883728027
    7. '   ' → logprob: -10.376669883728027
    8. '  
' → logprob: -10.751669883728027
    9. '        ' → logprob: -10.876669883728027
    10. '<|end|>' → logprob: -11.001669883728027

Token 1393: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056870970875024796
    2. 'else' (adapté à ' else') → logprob: -2.931870937347412
    3. ' else' → logprob: -6.306870937347412
    4. 'return' → logprob: -9.55687141418457
    5. '```' → logprob: -10.30687141418457
    6. 'elif' → logprob: -11.30687141418457
    7. '   ' → logprob: -11.43187141418457
    8. '<|end|>' → logprob: -12.18187141418457
    9. '	' → logprob: -12.30687141418457
    10. '        
' → logprob: -12.43187141418457

Token 1394: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6693915128707886
    2. '-' → logprob: -1.0443915128707886
    3. ' -' → logprob: -2.044391632080078
    4. 'return' → logprob: -5.419391632080078
    5. ' return' → logprob: -7.294391632080078
    6. ':return' → logprob: -7.919391632080078
    7. '          ' → logprob: -8.044391632080078
    8. '               ' → logprob: -8.919391632080078
    9. ':
' → logprob: -8.919391632080078
    10. '   ' → logprob: -9.419391632080078

Token 1395: '           ' (ID: 352)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0003864630125463009
    2. '           ' → logprob: -8.625386238098145
    3. 'return' → logprob: -8.750386238098145
    4. ' -' → logprob: -10.000386238098145
    5. ' return' → logprob: -13.625386238098145
    6. '```' → logprob: -14.375386238098145
    7. '       ' → logprob: -14.625386238098145
    8. '          ' → logprob: -15.250386238098145
    9. '-return' → logprob: -15.625386238098145
    10. '               ' → logprob: -15.750386238098145

Token 1396: ' return' (ID: 622)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001652796781854704
    2. 'return' (adapté à ' return') → logprob: -8.750164985656738
    3. '           ' → logprob: -12.000164985656738
    4. ' -' → logprob: -14.500164985656738
    5. ' return' → logprob: -16.625165939331055
    6. '          ' → logprob: -17.000165939331055
    7. '       ' → logprob: -17.250165939331055
    8. '-return' → logprob: -18.000165939331055
    9. '   ' → logprob: -18.625165939331055
    10. '```' → logprob: -18.875165939331055

Token 1397: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. ' -' → logprob: -19.5
    3. '           ' → logprob: -24.875
    4. '−' → logprob: -25.25
    5. '\-' → logprob: -25.375
    6. '```' → logprob: -25.5
    7. '       ' → logprob: -25.875
    8. '0' → logprob: -26.125
    9. '   ' → logprob: -26.5
    10. '1' → logprob: -26.875

Token 1398: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -21.875
    3. '0' → logprob: -22.0
    4. '１' → logprob: -22.625
    5. '```' → logprob: -22.625
    6. 'val' → logprob: -23.375
    7. '۱' → logprob: -23.875
    8. '_' → logprob: -24.5
    9. '+' → logprob: -24.625
    10. '"""' → logprob: -24.75

Token 1399: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1400: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1401: ' Tower' (ID: 37994)
  Prédit: 'Power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Power' → logprob: -0.49921876192092896
    2. 'Solution' → logprob: -0.999218761920929
    3. 'Sorted' → logprob: -4.624218940734863
    4. ' Solution' → logprob: -5.749218940734863
    5. 'List' → logprob: -6.124218940734863
    6. 'Exponent' → logprob: -6.249218940734863
    7. ' Power' → logprob: -6.499218940734863
    8. 'Solver' → logprob: -7.249218940734863
    9. 'Comparer' → logprob: -7.374218940734863
    10. 'Sequence' → logprob: -7.624218940734863

Token 1402: 'Sorter' (ID: 127233)
  Prédit: 'Sorter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sorter' → logprob: -0.6091289520263672
    2. ':
' → logprob: -1.6091289520263672
    3. ':' → logprob: -1.7341289520263672
    4. '(' → logprob: -4.734128952026367
    5. 'List' → logprob: -4.859128952026367
    6. 'Builder' → logprob: -4.984128952026367
    7. '(list' → logprob: -5.359128952026367
    8. 'Comparer' → logprob: -5.359128952026367
    9. 'Sequence' → logprob: -5.484128952026367
    10. '(List' → logprob: -5.484128952026367

Token 1403: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08026493340730667
    2. ':
' → logprob: -2.5802650451660156
    3. '(P' → logprob: -7.580265045166016
    4. '```' → logprob: -7.830265045166016
    5. '<|end|>' → logprob: -8.705265045166016
    6. ':

' → logprob: -8.705265045166016
    7. '(' → logprob: -10.205265045166016
    8. '   ' → logprob: -10.955265045166016
    9. ':def' → logprob: -11.080265045166016
    10. '(object' → logprob: -11.580265045166016

Token 1404: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006856981664896011
    2. '```' → logprob: -5.756856918334961
    3. ':' → logprob: -6.256856918334961
    4. 'def' → logprob: -6.881856918334961
    5. ':
' → logprob: -8.256856918334961
    6. 'class' → logprob: -8.756856918334961
    7. '    
' → logprob: -8.756856918334961
    8. '<|end|>' → logprob: -10.256856918334961
    9. 'classmethod' → logprob: -10.756856918334961
    10. '
' → logprob: -10.756856918334961

Token 1405: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7041110396385193
    2. 'def' → logprob: -0.7041110396385193
    3. '@' → logprob: -4.829111099243164
    4. 'staticmethod' → logprob: -6.704111099243164
    5. ' def' → logprob: -7.329111099243164
    6. '```' → logprob: -7.829111099243164
    7. '
' → logprob: -8.204111099243164
    8. 'class' → logprob: -8.579111099243164
    9. 'classmethod' → logprob: -9.079111099243164
    10. '    
' → logprob: -10.579111099243164

Token 1406: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035474441945552826
    2. 'class' → logprob: -4.0354743003845215
    3. 'def' → logprob: -4.4104743003845215
    4. 'classmethod' → logprob: -6.2854743003845215
    5. 'staticmethod' → logprob: -6.6604743003845215
    6. '```' → logprob: -6.9104743003845215
    7. '
' → logprob: -8.28547477722168
    8. 'object' → logprob: -8.41047477722168
    9. ':
' → logprob: -9.28547477722168
    10. ':' → logprob: -9.53547477722168

Token 1407: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0390034057199955
    2. 'def' → logprob: -3.539003372192383
    3. 'class' → logprob: -4.789003372192383
    4. '"""
' → logprob: -7.414003372192383
    5. '
' → logprob: -9.539003372192383
    6. '```' → logprob: -10.039003372192383
    7. 'classmethod' → logprob: -10.289003372192383
    8. ' def' → logprob: -10.289003372192383
    9. '``' → logprob: -10.414003372192383
    10. 'staticmethod' → logprob: -10.664003372192383

Token 1408: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29024580121040344
    2. 'def' → logprob: -1.415245771408081
    3. ' def' → logprob: -5.29024600982666
    4. 'staticmethod' → logprob: -6.91524600982666
    5. 'class' → logprob: -7.04024600982666
    6. '  ' → logprob: -7.54024600982666
    7. 'pp' → logprob: -8.41524600982666
    8. '    ' → logprob: -8.54024600982666
    9. 'classmethod' → logprob: -8.66524600982666
    10. ' ' → logprob: -8.66524600982666

Token 1409: ' responsible' (ID: 10908)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2110694795846939
    2. ':
' → logprob: -1.9610694646835327
    3. ':' → logprob: -3.5860695838928223
    4. ' to' → logprob: -4.836069583892822
    5. 'to' → logprob: -4.836069583892822
    6. 'def' → logprob: -6.336069583892822
    7. 'for' → logprob: -6.836069583892822
    8. '  ' → logprob: -6.961069583892822
    9. '```' → logprob: -7.586069583892822
    10. ' for' → logprob: -7.711069583892822

Token 1410: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6589434742927551
    2. 'for' → logprob: -0.7839434742927551
    3. ' for' → logprob: -3.9089434146881104
    4. 'def' → logprob: -5.5339436531066895
    5. '  ' → logprob: -7.4089436531066895
    6. 'to' → logprob: -8.158943176269531
    7. '(' → logprob: -8.783943176269531
    8. 'class' → logprob: -8.783943176269531
    9. '    ' → logprob: -9.033943176269531
    10. '(
' → logprob: -9.158943176269531

Token 1411: ' sorting' (ID: 51375)
  Prédit: 'sorting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorting' → logprob: -0.0025214420165866613
    2. ' sorting' → logprob: -6.002521514892578
    3. 'def' → logprob: -10.877521514892578
    4. 'provid' → logprob: -11.127521514892578
    5. 'sort' → logprob: -11.502521514892578
    6. 'implement' → logprob: -14.002521514892578
    7. 'ordering' → logprob: -14.877521514892578
    8. '   ' → logprob: -15.127521514892578
    9. '```' → logprob: -16.252521514892578
    10. 'efficient' → logprob: -16.502521514892578

Token 1412: ' arrays' (ID: 38774)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -1.047379732131958
    2. 'lists' → logprob: -1.547379732131958
    3. 't' → logprob: -2.047379732131958
    4. '   ' → logprob: -2.172379732131958
    5. 'objects' → logprob: -3.297379732131958
    6. '[List' → logprob: -3.297379732131958
    7. ':
' → logprob: -3.672379732131958
    8. '[
' → logprob: -3.797379732131958
    9. '
' → logprob: -3.797379732131958
    10. 'Power' → logprob: -4.047379493713379

Token 1413: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48799487948417664
    2. 'of' → logprob: -0.987994909286499
    3. ' of' → logprob: -4.36299467086792
    4. '[List' → logprob: -7.48799467086792
    5. ':
' → logprob: -8.737995147705078
    6. '[' → logprob: -9.487995147705078
    7. ':' → logprob: -9.987995147705078
    8. '```' → logprob: -10.112995147705078
    9. '
' → logprob: -10.487995147705078
    10. '):
' → logprob: -10.612995147705078

Token 1414: ' integers' (ID: 54912)
  Prédit: 'Power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Power' → logprob: -0.00612727552652359
    2. 'List' → logprob: -5.13112735748291
    3. 'lists' → logprob: -8.88112735748291
    4. 'power' → logprob: -10.50612735748291
    5. 'int' → logprob: -11.38112735748291
    6. ' Power' → logprob: -12.13112735748291
    7. 'list' → logprob: -12.50612735748291
    8. 'Lists' → logprob: -12.63112735748291
    9. 'bases' → logprob: -13.13112735748291
    10. 'powers' → logprob: -13.63112735748291

Token 1415: ' into' (ID: 1511)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15129823982715607
    2. '
' → logprob: -2.6512982845306396
    3. 'according' → logprob: -3.5262982845306396
    4. 'based' → logprob: -3.7762982845306396
    5. '```' → logprob: -4.7762980461120605
    6. ' according' → logprob: -5.9012980461120605
    7. 'using' → logprob: -6.4012980461120605
    8. 'that' → logprob: -6.7762980461120605
    9. 'represent' → logprob: -7.2762980461120605
    10. ' based' → logprob: -7.2762980461120605

Token 1416: ' sequences' (ID: 45665)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.552893877029419
    2. 'Power' → logprob: -0.927893877029419
    3. 'List' → logprob: -3.927893877029419
    4. 'ascending' → logprob: -5.80289363861084
    5. 'powers' → logprob: -6.42789363861084
    6. 't' → logprob: -6.42789363861084
    7. 'lists' → logprob: -6.92789363861084
    8. 'the' → logprob: -7.30289363861084
    9. ' power' → logprob: -7.92789363861084
    10. 'int' → logprob: -8.30289363861084

Token 1417: ' that' (ID: 484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028971899300813675
    2. 'that' → logprob: -4.7789716720581055
    3. 'of' → logprob: -5.0289716720581055
    4. ' of' → logprob: -5.4039716720581055
    5. ' that' → logprob: -6.0289716720581055
    6. 'according' → logprob: -6.1539716720581055
    7. ' according' → logprob: -6.2789716720581055
    8. 'based' → logprob: -7.1539716720581055
    9. '
' → logprob: -7.5289716720581055
    10. '```' → logprob: -8.153971672058105

Token 1418: ' maximize' (ID: 44207)
  Prédit: 'represent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'represent' → logprob: -0.17525893449783325
    2. '   ' → logprob: -2.5502588748931885
    3. 'form' → logprob: -3.8002588748931885
    4. 'maximize' → logprob: -4.050259113311768
    5. 'raise' → logprob: -4.800259113311768
    6. 'are' → logprob: -4.800259113311768
    7. '```' → logprob: -5.300259113311768
    8. ' represent' → logprob: -5.425259113311768
    9. '"""
' → logprob: -5.925259113311768
    10. 's' → logprob: -6.050259113311768

Token 1419: ' the' (ID: 290)
  Prédit: 'their'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'their' → logprob: -0.5928125381469727
    2. 'the' → logprob: -0.8428125381469727
    3. '   ' → logprob: -5.092812538146973
    4. 'power' → logprob: -5.842812538146973
    5. 'strict' → logprob: -6.467812538146973
    6. ' their' → logprob: -7.217812538146973
    7. 'compar' → logprob: -7.342812538146973
    8. 'lex' → logprob: -7.467812538146973
    9. 'ascending' → logprob: -7.467812538146973
    10. '```' → logprob: -7.467812538146973

Token 1420: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.47533556818962097
    2. 'result' → logprob: -1.9753355979919434
    3. 'value' → logprob: -2.1003355979919434
    4. 'Power' → logprob: -2.8503355979919434
    5. '"' → logprob: -4.600335597991943
    6. 'values' → logprob: -4.975335597991943
    7. 'ex' → logprob: -5.100335597991943
    8. 'Tower' → logprob: -5.350335597991943
    9. 'final' → logprob: -5.350335597991943
    10. 'lex' → logprob: -5.475335597991943

Token 1421: ' tower' (ID: 35225)
  Prédit: 'tower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tower' → logprob: -0.41595616936683655
    2. 't' → logprob: -1.1659561395645142
    3. '   ' → logprob: -3.9159562587738037
    4. 'Tower' → logprob: -5.790956020355225
    5. '_t' → logprob: -6.040956020355225
    6. 'expression' → logprob: -7.040956020355225
    7. ' tower' → logprob: -7.290956020355225
    8. '       ' → logprob: -7.415956020355225
    9. '
' → logprob: -8.540956497192383
    10. '```' → logprob: -8.540956497192383

Token 1422: ' result' (ID: 1534)
  Prédit: 'express'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'express' → logprob: -0.9440140128135681
    2. 'expression' → logprob: -1.069014072418213
    3. 'size' → logprob: -2.319014072418213
    4. 'height' → logprob: -2.944014072418213
    5. 'length' → logprob: -3.819014072418213
    6. 'def' → logprob: -3.819014072418213
    7. 'value' → logprob: -4.069014072418213
    8. '   ' → logprob: -4.194014072418213
    9. 'values' → logprob: -4.944014072418213
    10. 's' → logprob: -5.069014072418213

Token 1423: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004124823026359081
    2. '```' → logprob: -5.629124641418457
    3. 'and' → logprob: -9.254124641418457
    4. 'according' → logprob: -9.504124641418457
    5. 'based' → logprob: -9.629124641418457
    6. 's' → logprob: -10.129124641418457
    7. 'def' → logprob: -10.254124641418457
    8. ' according' → logprob: -10.254124641418457
    9. 'by' → logprob: -10.629124641418457
    10. ':' → logprob: -10.754124641418457

Token 1424: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004959543235599995
    2. 'and' → logprob: -6.629959583282471
    3. '```' → logprob: -7.254959583282471
    4. 'based' → logprob: -7.379959583282471
    5. 'pres' → logprob: -7.629959583282471
    6. 'allow' → logprob: -7.879959583282471
    7. 'def' → logprob: -8.379959106445312
    8. 'en' → logprob: -8.504959106445312
    9. 'ens' → logprob: -8.754959106445312
    10. 'which' → logprob: -8.879959106445312

Token 1425: ' following' (ID: 3992)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002035584067925811
    2. 'and' → logprob: -6.877035617828369
    3. 'allow' → logprob: -8.377035140991211
    4. 'based' → logprob: -8.502035140991211
    5. 'using' → logprob: -9.252035140991211
    6. 'pres' → logprob: -9.502035140991211
    7. ' allowing' → logprob: -9.752035140991211
    8. 'which' → logprob: -9.752035140991211
    9. 'making' → logprob: -10.127035140991211
    10. ' preserving' → logprob: -10.752035140991211

Token 1426: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.05947543680667877
    2. ' the' → logprob: -3.5594754219055176
    3. '   ' → logprob: -3.6844754219055176
    4. 'their' → logprob: -5.684475421905518
    5. '"""
' → logprob: -8.434475898742676
    6. 'power' → logprob: -8.434475898742676
    7. ' their' → logprob: -8.934475898742676
    8. '       ' → logprob: -10.059475898742676
    9. ' given' → logprob: -10.309475898742676
    10. 'given' → logprob: -10.559475898742676

Token 1427: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.14131692051887512
    2. 'rules' → logprob: -2.8913168907165527
    3. 'criteria' → logprob: -3.1413168907165527
    4. 'power' → logprob: -4.391316890716553
    5. 'given' → logprob: -4.891316890716553
    6. 'same' → logprob: -6.016316890716553
    7. 'specified' → logprob: -6.266316890716553
    8. 'logic' → logprob: -6.391316890716553
    9. 'custom' → logprob: -6.641316890716553
    10. 'specific' → logprob: -6.766316890716553

Token 1428: ' rules' (ID: 9607)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.6138243079185486
    2. '   ' → logprob: -0.8638243079185486
    3. 'statement' → logprob: -3.9888243675231934
    4. ' statement' → logprob: -4.363824367523193
    5. '_statement' → logprob: -6.863824367523193
    6. ''' → logprob: -6.988824367523193
    7. '
' → logprob: -7.113824367523193
    8. '"""
' → logprob: -7.613824367523193
    9. 'definition' → logprob: -7.863824367523193
    10. '```' → logprob: -7.988824367523193

Token 1429: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045532457530498505
    2. ':' → logprob: -3.170532464981079
    3. '.' → logprob: -6.2955322265625
    4. '
' → logprob: -8.2955322265625
    5. ':
' → logprob: -9.0455322265625
    6. ',' → logprob: -9.4205322265625
    7. '):' → logprob: -9.9205322265625
    8. '```' → logprob: -9.9205322265625
    9. '):
' → logprob: -10.7955322265625
    10. 'and' → logprob: -10.9205322265625

Token 1430: ' tie' (ID: 22244)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4150062799453735
    2. 'compar' → logprob: -2.040006160736084
    3. 'comparison' → logprob: -2.165006160736084
    4. 'com' → logprob: -2.165006160736084
    5. 'constraints' → logprob: -2.165006160736084
    6. 'criteria' → logprob: -2.665006160736084
    7. 'min' → logprob: -3.165006160736084
    8. 'implement' → logprob: -4.040006160736084
    9. 'ordering' → logprob: -4.415006160736084
    10. 'behavior' → logprob: -4.415006160736084

Token 1431: '-break' (ID: 62263)
  Prédit: '_break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_break' → logprob: -0.23065626621246338
    2. '-break' → logprob: -2.605656147003174
    3. '-breaking' → logprob: -2.730656147003174
    4. '   ' → logprob: -3.480656147003174
    5. 'break' → logprob: -3.730656147003174
    6. 'breaker' → logprob: -4.730656147003174
    7. 'breaking' → logprob: -6.355656147003174
    8. '```' → logprob: -7.480656147003174
    9. ' breaker' → logprob: -7.980656147003174
    10. '       ' → logprob: -8.480656623840332

Token 1432: 'ers' (ID: 409)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0006111674592830241
    2. 'rs' → logprob: -8.000611305236816
    3. '-break' → logprob: -10.000611305236816
    4. 's' → logprob: -10.000611305236816
    5. 'rk' → logprob: -10.125611305236816
    6. 'aker' → logprob: -10.500611305236816
    7. '   ' → logprob: -10.875611305236816
    8. 'reak' → logprob: -11.000611305236816
    9. 'er' → logprob: -11.125611305236816
    10. '       ' → logprob: -11.375611305236816

Token 1433: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027574431151151657
    2. ':' → logprob: -3.7775745391845703
    3. ':
' → logprob: -5.65257453918457
    4. '```' → logprob: -7.77757453918457
    5. '.' → logprob: -8.40257453918457
    6. '
' → logprob: -10.15257453918457
    7. '):
' → logprob: -10.40257453918457
    8. ',' → logprob: -10.77757453918457
    9. 'def' → logprob: -10.90257453918457
    10. '<|end|>' → logprob: -11.27757453918457

Token 1434: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4330291748046875
    2. '```' → logprob: -1.6830291748046875
    3. '
' → logprob: -1.8080291748046875
    4. '    
' → logprob: -6.5580291748046875
    5. '``' → logprob: -8.933029174804688
    6. 'def' → logprob: -9.433029174804688
    7. '

' → logprob: -11.558029174804688
    8. 'class' → logprob: -11.558029174804688
    9. '   
' → logprob: -12.558029174804688
    10. '  
' → logprob: -12.683029174804688

Token 1435: ' """

' (ID: 28800)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33322060108184814
    2. '   ' → logprob: -1.3332206010818481
    3. '```' → logprob: -4.333220481872559
    4. 'def' → logprob: -5.083220481872559
    5. '    
' → logprob: -7.958220481872559
    6. ' def' → logprob: -10.958220481872559
    7. '"""' → logprob: -11.083220481872559
    8. '

' → logprob: -11.208220481872559
    9. ')' → logprob: -11.458220481872559
    10. '``' → logprob: -11.583220481872559

Token 1436: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028390629217028618
    2. 'def' → logprob: -4.278390407562256
    3. '```' → logprob: -4.278390407562256
    4. '
' → logprob: -9.278390884399414
    5. ' def' → logprob: -9.778390884399414
    6. '    
' → logprob: -9.778390884399414
    7. 'class' → logprob: -10.528390884399414
    8. '``' → logprob: -11.403390884399414
    9. 'indent' → logprob: -11.903390884399414
    10. '  ' → logprob: -13.153390884399414

Token 1437: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.057013195008039474
    2. '@' → logprob: -3.5570132732391357
    3. '   ' → logprob: -3.6820132732391357
    4. 'staticmethod' → logprob: -6.432013034820557
    5. ' def' → logprob: -9.682013511657715
    6. '
' → logprob: -11.057013511657715
    7. 'classmethod' → logprob: -11.307013511657715
    8. '```' → logprob: -11.432013511657715
    9. 'static' → logprob: -12.182013511657715
    10. '__' → logprob: -13.432013511657715

Token 1438: ' __' (ID: 2516)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.018735451623797417
    2. 'init' → logprob: -4.018735408782959
    3. 'classmethod' → logprob: -7.518735408782959
    4. '__' → logprob: -10.143735885620117
    5. 'def' → logprob: -13.393735885620117
    6. 'static' → logprob: -15.018735885620117
    7. '_' → logprob: -15.143735885620117
    8. ' __' → logprob: -15.268735885620117
    9. 'property' → logprob: -15.268735885620117
    10. '_init' → logprob: -15.518735885620117

Token 1439: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.842555426876061e-06
    2. '_init' → logprob: -12.375004768371582
    3. '__' → logprob: -15.000004768371582
    4. 'call' → logprob: -16.0000057220459
    5. ' init' → logprob: -16.8750057220459
    6. '```' → logprob: -17.3750057220459
    7. '_' → logprob: -18.5000057220459
    8. '`' → logprob: -19.5000057220459
    9. '(init' → logprob: -19.7500057220459
    10. 'new' → logprob: -19.8750057220459

Token 1440: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018880628049373627
    2. '__(' → logprob: -4.143880844116211
    3. '(' → logprob: -6.268880844116211
    4. ' (' → logprob: -7.893880844116211
    5. '__(
' → logprob: -8.518880844116211
    6. ':' → logprob: -9.143880844116211
    7. '(
' → logprob: -9.893880844116211
    8. 'self' → logprob: -10.018880844116211
    9. '   ' → logprob: -10.143880844116211
    10. '__' → logprob: -10.143880844116211

Token 1441: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.376848902320489e-05
    2. ' self' → logprob: -9.875093460083008
    3. '
' → logprob: -10.625093460083008
    4. '(self' → logprob: -12.000093460083008
    5. '   ' → logprob: -12.125093460083008
    6. ')' → logprob: -12.875093460083008
    7. '       ' → logprob: -13.000093460083008
    8. '):
' → logprob: -15.000093460083008
    9. '	self' → logprob: -15.125093460083008
    10. 'def' → logprob: -15.125093460083008

Token 1442: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018092949176207185
    2. 'self' → logprob: -6.376809120178223
    3. '(self' → logprob: -9.751809120178223
    4. '       ' → logprob: -10.876809120178223
    5. '   ' → logprob: -11.376809120178223
    6. ',self' → logprob: -11.376809120178223
    7. ',
' → logprob: -12.751809120178223
    8. ' ,' → logprob: -13.251809120178223
    9. ' self' → logprob: -14.501809120178223
    10. ' (' → logprob: -14.751809120178223

Token 1443: ' array' (ID: 2644)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -1.1977721452713013
    2. 'arr' → logprob: -1.5727721452713013
    3. 'bases' → logprob: -1.6977721452713013
    4. 'self' → logprob: -2.0727720260620117
    5. 'nums' → logprob: -2.5727720260620117
    6. 'values' → logprob: -3.0727720260620117
    7. 'sequence' → logprob: -3.9477720260620117
    8. 'array' → logprob: -4.572772026062012
    9. 'items' → logprob: -5.197772026062012
    10. 'lst' → logprob: -5.197772026062012

Token 1444: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09245914965867996
    2. '):
' → logprob: -2.467459201812744
    3. '):' → logprob: -6.342459201812744
    4. '   ' → logprob: -7.092459201812744
    5. '       ' → logprob: -7.092459201812744
    6. ')' → logprob: -10.592458724975586
    7. '):
' → logprob: -10.842458724975586
    8. ':
' → logprob: -11.092458724975586
    9. ' :' → logprob: -11.342458724975586
    10. ',' → logprob: -12.342458724975586

Token 1445: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -3.881560041918419e-05
    2. ' List' → logprob: -10.500039100646973
    3. 'int' → logprob: -12.375039100646973
    4. '   ' → logprob: -13.000039100646973
    5. 'list' → logprob: -13.375039100646973
    6. 'self' → logprob: -13.375039100646973
    7. '       ' → logprob: -14.250039100646973
    8. ')' → logprob: -14.625039100646973
    9. '[List' → logprob: -14.625039100646973
    10. '           ' → logprob: -16.875038146972656

Token 1446: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0002625278721097857
    2. 'int' → logprob: -8.250262260437012
    3. '<int' → logprob: -14.250262260437012
    4. '=int' → logprob: -14.625262260437012
    5. '):
' → logprob: -17.125263214111328
    6. '   ' → logprob: -17.125263214111328
    7. ':int' → logprob: -17.375263214111328
    8. ']int' → logprob: -17.875263214111328
    9. ',int' → logprob: -18.375263214111328
    10. ' int' → logprob: -18.625263214111328

Token 1447: ']):
' (ID: 51989)
  Prédit: ']):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.11246432363986969
    2. ']):' → logprob: -2.612464427947998
    3. ']' → logprob: -3.737464427947998
    4. '])' → logprob: -5.237464427947998
    5. '):
' → logprob: -6.237464427947998
    6. ')' → logprob: -6.737464427947998
    7. '   ' → logprob: -8.11246395111084
    8. '):' → logprob: -8.61246395111084
    9. '       ' → logprob: -9.23746395111084
    10. '']):
' → logprob: -10.11246395111084

Token 1448: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015355738578364253
    2. 'self' → logprob: -6.501535415649414
    3. '   ' → logprob: -10.876535415649414
    4. ' self' → logprob: -11.251535415649414
    5. 'def' → logprob: -14.501535415649414
    6. '      ' → logprob: -15.376535415649414
    7. '(self' → logprob: -15.626535415649414
    8. ',' → logprob: -16.251535415649414
    9. '           ' → logprob: -16.251535415649414
    10. '     ' → logprob: -16.501535415649414

Token 1449: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.000912774819880724
    2. '       ' → logprob: -7.000912666320801
    3. ' self' → logprob: -13.6259126663208
    4. '   ' → logprob: -16.375913619995117
    5. '	self' → logprob: -17.500913619995117
    6. '[self' → logprob: -19.500913619995117
    7. '```' → logprob: -20.000913619995117
    8. '
' → logprob: -20.375913619995117
    9. '(self' → logprob: -20.625913619995117
    10. '﻿' → logprob: -21.125913619995117

Token 1450: '.array' (ID: 14557)
  Prédit: '.array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.array' → logprob: -0.00017970333283301443
    2. 'array' → logprob: -8.750179290771484
    3. '.' → logprob: -11.625179290771484
    4. '   ' → logprob: -13.125179290771484
    5. '.arr' → logprob: -13.125179290771484
    6. '=array' → logprob: -13.125179290771484
    7. '.original' → logprob: -13.625179290771484
    8. '.data' → logprob: -14.000179290771484
    9. '.sorted' → logprob: -14.125179290771484
    10. '_array' → logprob: -14.625179290771484

Token 1451: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5246614217758179
    2. ' =' → logprob: -1.0246614217758179
    3. ')' → logprob: -3.8996615409851074
    4. '   ' → logprob: -4.899661540985107
    5. '.' → logprob: -5.024661540985107
    6. ':' → logprob: -5.649661540985107
    7. '       ' → logprob: -5.774661540985107
    8. '<|end|>' → logprob: -6.024661540985107
    9. '[:]' → logprob: -6.649661540985107
    10. ',' → logprob: -6.649661540985107

Token 1452: ' array' (ID: 2644)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -7.994086627149954e-05
    2. ' array' → logprob: -9.500080108642578
    3. 'list' → logprob: -12.250080108642578
    4. '[' → logprob: -15.875080108642578
    5. '[array' → logprob: -16.500080108642578
    6. '[]' → logprob: -16.625080108642578
    7. '   ' → logprob: -17.375080108642578
    8. ' list' → logprob: -19.000080108642578
    9. '[]
' → logprob: -19.250080108642578
    10. '	array' → logprob: -20.375080108642578

Token 1453: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42980751395225525
    2. '
' → logprob: -1.0548075437545776
    3. 'def' → logprob: -7.679807662963867
    4. '    
' → logprob: -7.804807662963867
    5. '<|end|>' → logprob: -9.179807662963867
    6. '

' → logprob: -9.804807662963867
    7. '       ' → logprob: -10.679807662963867
    8. '        
' → logprob: -11.179807662963867
    9. '<|end|>' → logprob: -11.429807662963867
    10. '```' → logprob: -12.179807662963867

Token 1454: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005311308428645134
    2. 'def' → logprob: -5.380311489105225
    3. '
' → logprob: -7.505311489105225
    4. '    
' → logprob: -9.880311012268066
    5. '```' → logprob: -10.005311012268066
    6. ' def' → logprob: -10.505311012268066
    7. '<|end|>' → logprob: -12.005311012268066
    8. '        
' → logprob: -12.880311012268066
    9. '       ' → logprob: -13.255311012268066
    10. 'from' → logprob: -13.505311012268066

Token 1455: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0005654225824400783
    2. '   ' → logprob: -7.500565528869629
    3. ' def' → logprob: -11.875565528869629
    4. '
' → logprob: -12.125565528869629
    5. '	def' → logprob: -17.375564575195312
    6. '    
' → logprob: -17.625564575195312
    7. '```' → logprob: -17.875564575195312
    8. ' ' → logprob: -19.875564575195312
    9. 'class' → logprob: -19.875564575195312
    10. '_def' → logprob: -20.125564575195312

Token 1456: ' get' (ID: 717)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.00919399969279766
    2. 'get' → logprob: -5.2591938972473145
    3. 'sorted' → logprob: -6.2591938972473145
    4. ' sort' → logprob: -6.5091938972473145
    5. '_sort' → logprob: -7.7591938972473145
    6. '_sorted' → logprob: -10.009194374084473
    7. ' get' → logprob: -10.384194374084473
    8. 'def' → logprob: -10.509194374084473
    9. ' sorted' → logprob: -11.759194374084473
    10. 'solve' → logprob: -13.009194374084473

Token 1457: '_max' (ID: 13731)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.0012290386948734522
    2. 'sorted' → logprob: -7.0012288093566895
    3. '   ' → logprob: -9.251229286193848
    4. '_best' → logprob: -9.751229286193848
    5. '_sequence' → logprob: -9.751229286193848
    6. '_max' → logprob: -9.876229286193848
    7. '_order' → logprob: -10.876229286193848
    8. '_sort' → logprob: -11.251229286193848
    9. '_power' → logprob: -12.876229286193848
    10. '_next' → logprob: -13.126229286193848

Token 1458: '_t' (ID: 838)
  Prédit: '_sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.041022416204214096
    2. '_sorted' → logprob: -3.666022300720215
    3. '_' → logprob: -5.666022300720215
    4. '_order' → logprob: -5.916022300720215
    5. '_array' → logprob: -6.166022300720215
    6. 'imized' → logprob: -6.291022300720215
    7. '_power' → logprob: -6.916022300720215
    8. '_t' → logprob: -7.541022300720215
    9. '_arr' → logprob: -7.791022300720215
    10. '_code' → logprob: -7.916022300720215

Token 1459: 'ower' (ID: 1611)
  Prédit: 'ower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ower' → logprob: -0.0004275699320714921
    2. 'owers' → logprob: -8.25042724609375
    3. '_sequence' → logprob: -9.75042724609375
    4. 'owered' → logprob: -9.75042724609375
    5. 'sequence' → logprob: -11.12542724609375
    6. '_sorted' → logprob: -11.37542724609375
    7. 'o' → logprob: -11.37542724609375
    8. 'tower' → logprob: -12.87542724609375
    9. 'ow' → logprob: -13.50042724609375
    10. 'owering' → logprob: -13.75042724609375

Token 1460: '_sequence' (ID: 55606)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004128861241042614
    2. '_sequence' → logprob: -5.629128932952881
    3. '_order' → logprob: -7.879128932952881
    4. '(' → logprob: -10.004128456115723
    5. 'self' → logprob: -10.004128456115723
    6. '   ' → logprob: -10.879128456115723
    7. '_expression' → logprob: -11.504128456115723
    8. '_sorted' → logprob: -12.129128456115723
    9. '       ' → logprob: -12.504128456115723
    10. '_list' → logprob: -12.629128456115723

Token 1461: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.610702363715973e-06
    2. '(' → logprob: -12.125009536743164
    3. 'self' → logprob: -13.375009536743164
    4. '       ' → logprob: -13.375009536743164
    5. '   ' → logprob: -13.875009536743164
    6. '(
' → logprob: -17.250009536743164
    7. ' (' → logprob: -17.250009536743164
    8. 'def' → logprob: -18.375009536743164
    9. '
' → logprob: -19.000009536743164
    10. '(s' → logprob: -19.000009536743164

Token 1462: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28733712434768677
    2. '(self' → logprob: -1.412337064743042
    3. 'self' → logprob: -6.162337303161621
    4. '):
' → logprob: -6.162337303161621
    5. '   ' → logprob: -7.412337303161621
    6. '       ' → logprob: -7.537337303161621
    7. '):' → logprob: -8.037337303161621
    8. '()' → logprob: -8.037337303161621
    9. '())' → logprob: -10.037337303161621
    10. ')->' → logprob: -10.287337303161621

Token 1463: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003839597338810563
    2. '       ' → logprob: -8.125384330749512
    3. 'self' → logprob: -10.125384330749512
    4. '   ' → logprob: -10.750384330749512
    5. '(' → logprob: -10.875384330749512
    6. '```' → logprob: -12.875384330749512
    7. '[self' → logprob: -13.625384330749512
    8. '(
' → logprob: -13.875384330749512
    9. 'def' → logprob: -14.625384330749512
    10. '->' → logprob: -14.750384330749512

Token 1464: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0009142052149400115
    2. ' List' → logprob: -7.000914096832275
    3. 'list' → logprob: -13.625914573669434
    4. 'int' → logprob: -14.250914573669434
    5. '[List' → logprob: -15.125914573669434
    6. 'None' → logprob: -15.375914573669434
    7. '   ' → logprob: -15.750914573669434
    8. 'sorted' → logprob: -16.125913619995117
    9. 'Sorted' → logprob: -16.500913619995117
    10. '	List' → logprob: -17.375913619995117

Token 1465: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -2.339278580620885e-06
    2. 'int' → logprob: -13.000001907348633
    3. '<int' → logprob: -18.000001907348633
    4. '[Int' → logprob: -18.250001907348633
    5. '(int' → logprob: -18.750001907348633
    6. '   ' → logprob: -20.375001907348633
    7. '[' → logprob: -21.250001907348633
    8. '       ' → logprob: -21.750001907348633
    9. '```' → logprob: -21.875001907348633
    10. '[
' → logprob: -22.750001907348633

Token 1466: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.011873251758515835
    2. ']' → logprob: -5.011873245239258
    3. ']:' → logprob: -5.761873245239258
    4. '):
' → logprob: -6.761873245239258
    5. '       ' → logprob: -8.136873245239258
    6. '():
' → logprob: -8.636873245239258
    7. '(self' → logprob: -8.636873245239258
    8. '   ' → logprob: -9.511873245239258
    9. ']:
' → logprob: -9.761873245239258
    10. ']
' → logprob: -10.636873245239258

Token 1467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.7120533811976202e-05
    2. '```' → logprob: -11.750017166137695
    3. '
' → logprob: -12.000017166137695
    4. '        
' → logprob: -12.875017166137695
    5. '`' → logprob: -16.125017166137695
    6. 'return' → logprob: -16.250017166137695
    7. '           ' → logprob: -16.500017166137695
    8. '   ' → logprob: -17.000017166137695
    9. '``' → logprob: -17.125017166137695
    10. 'self' → logprob: -17.375017166137695

Token 1468: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10452692955732346
    2. 'from' → logprob: -2.354526996612549
    3. 'sorted' → logprob: -5.854526996612549
    4. 'import' → logprob: -6.729526996612549
    5. 'if' → logprob: -8.60452651977539
    6. '```' → logprob: -10.85452651977539
    7. 'def' → logprob: -11.10452651977539
    8. 'arr' → logprob: -11.97952651977539
    9. ' from' → logprob: -12.35452651977539
    10. '#' → logprob: -12.35452651977539

Token 1469: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012475410767365247
    2. 'from' → logprob: -9.62512493133545
    3. 'if' → logprob: -10.62512493133545
    4. 'sorted' → logprob: -10.62512493133545
    5. 'def' → logprob: -12.50012493133545
    6. '   ' → logprob: -13.00012493133545
    7. '```' → logprob: -13.00012493133545
    8. 'import' → logprob: -13.75012493133545
    9. '           ' → logprob: -15.87512493133545
    10. '#' → logprob: -15.87512493133545

Token 1470: ' Returns' (ID: 9609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13210248947143555
    2. 'from' → logprob: -2.8821024894714355
    3. 'sorted' → logprob: -3.2571024894714355
    4. 'import' → logprob: -4.2571024894714355
    5. 'def' → logprob: -4.7571024894714355
    6. '#' → logprob: -5.5071024894714355
    7. 'if' → logprob: -6.8821024894714355
    8. 'arr' → logprob: -8.007102966308594
    9. '   ' → logprob: -8.007102966308594
    10. 'array' → logprob: -8.257102966308594

Token 1471: ' the' (ID: 290)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.004439612850546837
    2. ' sorted' → logprob: -5.754439830780029
    3. 'self' → logprob: -7.004439830780029
    4. '       ' → logprob: -8.004439353942871
    5. '   ' → logprob: -11.004439353942871
    6. ' self' → logprob: -13.879439353942871
    7. '(sorted' → logprob: -13.879439353942871
    8. '.sorted' → logprob: -15.129439353942871
    9. '[]' → logprob: -16.129440307617188
    10. '           ' → logprob: -16.254440307617188

Token 1472: ' rearr' (ID: 98785)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.0015396231319755316
    2. ' sorted' → logprob: -6.501539707183838
    3. '   ' → logprob: -10.75153923034668
    4. '(sorted' → logprob: -12.25153923034668
    5. '.sorted' → logprob: -13.00153923034668
    6. 'max' → logprob: -13.00153923034668
    7. 'result' → logprob: -13.37653923034668
    8. '
' → logprob: -13.75153923034668
    9. '       ' → logprob: -13.87653923034668
    10. 'def' → logprob: -14.00153923034668

Token 1473: 'anged' (ID: 5717)
  Prédit: 'anged'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anged' → logprob: -0.003455975791439414
    2. 'angement' → logprob: -5.753456115722656
    3. '   ' → logprob: -9.003456115722656
    4. 'r' → logprob: -9.753456115722656
    5. '       ' → logprob: -10.253456115722656
    6. '```' → logprob: -11.128456115722656
    7. 'ang' → logprob: -11.628456115722656
    8. 'ged' → logprob: -11.753456115722656
    9. '``' → logprob: -12.253456115722656
    10. 'ed' → logprob: -12.378456115722656

Token 1474: ' list' (ID: 1562)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06617289036512375
    2. 'array' → logprob: -3.5661728382110596
    3. 'sorted' → logprob: -4.066173076629639
    4. '[self' → logprob: -5.066173076629639
    5. 'sequence' → logprob: -5.066173076629639
    6. '[
' → logprob: -6.191173076629639
    7. 'list' → logprob: -6.816173076629639
    8. 'result' → logprob: -7.066173076629639
    9. '       ' → logprob: -7.316173076629639
    10. '(self' → logprob: -7.941173076629639

Token 1475: ' that' (ID: 484)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.102320671081543
    2. '       ' → logprob: -1.477320671081543
    3. '(sorted' → logprob: -1.602320671081543
    4. 'sorted' → logprob: -2.477320671081543
    5. '(
' → logprob: -2.602320671081543
    6. '()' → logprob: -2.852320671081543
    7. '()
' → logprob: -4.727320671081543
    8. ' sorted' → logprob: -5.352320671081543
    9. '(' → logprob: -6.852320671081543
    10. ' of' → logprob: -6.852320671081543

Token 1476: ' yields' (ID: 59684)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1912117749452591
    2. ' maxim' → logprob: -1.8162118196487427
    3. '       ' → logprob: -5.191211700439453
    4. 'sort' → logprob: -5.566211700439453
    5. ',' → logprob: -7.816211700439453
    6. 'sorted' → logprob: -8.066211700439453
    7. '   ' → logprob: -8.441211700439453
    8. 'def' → logprob: -8.441211700439453
    9. ' sorts' → logprob: -8.566211700439453
    10. '
' → logprob: -8.941211700439453

Token 1477: ' the' (ID: 290)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.5307296514511108
    2. 'max' → logprob: -1.0307296514511108
    3. 'self' → logprob: -3.7807297706604004
    4. ' sorted' → logprob: -4.4057297706604
    5. '       ' → logprob: -4.5307297706604
    6. '   ' → logprob: -5.7807297706604
    7. ' max' → logprob: -6.2807297706604
    8. ' the' → logprob: -6.4057297706604
    9. ' self' → logprob: -6.7807297706604
    10. 'the' → logprob: -7.0307297706604

Token 1478: ' maximal' (ID: 65414)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -0.3767052888870239
    2. 'max' → logprob: -1.876705288887024
    3. 'largest' → logprob: -1.876705288887024
    4. 'highest' → logprob: -5.001705169677734
    5. 'great' → logprob: -7.876705169677734
    6. 'sorted' → logprob: -8.501705169677734
    7. 'Power' → logprob: -9.251705169677734
    8. 'lex' → logprob: -10.001705169677734
    9. '
' → logprob: -10.126705169677734
    10. '```' → logprob: -10.376705169677734

Token 1479: ' right' (ID: 1849)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.32905831933021545
    2. 'self' → logprob: -1.704058289527893
    3. 'result' → logprob: -2.5790584087371826
    4. 'value' → logprob: -5.4540581703186035
    5. ' power' → logprob: -5.7040581703186035
    6. '
' → logprob: -5.8290581703186035
    7. '```' → logprob: -5.8290581703186035
    8. '[self' → logprob: -6.2040581703186035
    9. 'tower' → logprob: -6.2040581703186035
    10. 'possible' → logprob: -6.7040581703186035

Token 1480: '-ass' (ID: 44229)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2115957885980606
    2. '   ' → logprob: -1.9615957736968994
    3. '_ass' → logprob: -4.8365960121154785
    4. '_power' → logprob: -4.9615960121154785
    5. 'most' → logprob: -5.2115960121154785
    6. '-ass' → logprob: -5.4615960121154785
    7. 'to' → logprob: -5.7115960121154785
    8. '           ' → logprob: -5.9615960121154785
    9. '_pow' → logprob: -5.9615960121154785
    10. '```' → logprob: -5.9615960121154785

Token 1481: 'oci' (ID: 3212)
  Prédit: 'oci'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oci' → logprob: -0.1305605173110962
    2. 'ociate' → logprob: -2.2555603981018066
    3. 'ociated' → logprob: -4.630560398101807
    4. 'oc' → logprob: -5.380560398101807
    5. '```' → logprob: -6.380560398101807
    6. '   ' → logprob: -7.630560398101807
    7. 'ociation' → logprob: -7.630560398101807
    8. '       ' → logprob: -7.880560398101807
    9. '    ' → logprob: -10.255560874938965
    10. '=' → logprob: -11.130560874938965

Token 1482: 'ative' (ID: 1799)
  Prédit: 'ative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.008649553172290325
    2. 'ated' → logprob: -4.7586493492126465
    3. '   ' → logprob: -10.633649826049805
    4. 'a' → logprob: -12.758649826049805
    5. 'ate' → logprob: -13.008649826049805
    6. '**' → logprob: -13.883649826049805
    7. '```' → logprob: -14.008649826049805
    8. '
' → logprob: -14.133649826049805
    9. 'at' → logprob: -14.258649826049805
    10. 'e' → logprob: -14.508649826049805

Token 1483: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.003030475229024887
    2. ' power' → logprob: -6.128030300140381
    3. 'expression' → logprob: -7.503030300140381
    4. 'result' → logprob: -8.378030776977539
    5. 'value' → logprob: -10.628030776977539
    6. 'evaluation' → logprob: -11.128030776977539
    7. '
' → logprob: -11.878030776977539
    8. 'ex' → logprob: -12.628030776977539
    9. '   ' → logprob: -13.003030776977539
    10. '_power' → logprob: -13.128030776977539

Token 1484: ' tower' (ID: 35225)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.06651236116886139
    2. '   ' → logprob: -3.6915123462677
    3. 'tower' → logprob: -3.9415123462677
    4. '       ' → logprob: -4.441512584686279
    5. ' tower' → logprob: -5.566512584686279
    6. ' ' → logprob: -6.691512584686279
    7. '```' → logprob: -7.316512584686279
    8. '  ' → logprob: -8.191512107849121
    9. '
' → logprob: -8.191512107849121
    10. '_' → logprob: -8.191512107849121

Token 1485: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04099667817354202
    2. '(self' → logprob: -4.290996551513672
    3. 'expression' → logprob: -4.540996551513672
    4. '```' → logprob: -6.415996551513672
    5. ',' → logprob: -6.540996551513672
    6. ' by' → logprob: -6.665996551513672
    7. 'result' → logprob: -6.665996551513672
    8. ' expression' → logprob: -6.790996551513672
    9. '_expression' → logprob: -6.790996551513672
    10. 'by' → logprob: -7.040996551513672

Token 1486: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001507405104348436
    2. '
' → logprob: -10.000150680541992
    3. '```' → logprob: -10.000150680541992
    4. '        
' → logprob: -10.625150680541992
    5. '           ' → logprob: -10.750150680541992
    6. 'return' → logprob: -12.875150680541992
    7. '      ' → logprob: -13.125150680541992
    8. '        ' → logprob: -13.250150680541992
    9. '   ' → logprob: -13.375150680541992
    10. '"""' → logprob: -13.875150680541992

Token 1487: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00044401636114344
    2. 'sorted' → logprob: -8.250444412231445
    3. '           ' → logprob: -9.750444412231445
    4. ' sorted' → logprob: -10.500444412231445
    5. '"""' → logprob: -11.000444412231445
    6. '```' → logprob: -11.250444412231445
    7. 'return' → logprob: -11.375444412231445
    8. 'self' → logprob: -11.750444412231445
    9. '   ' → logprob: -11.750444412231445
    10. '        ' → logprob: -11.750444412231445

Token 1488: ' tie' (ID: 22244)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.2507084310054779
    2. 'self' → logprob: -2.0007083415985107
    3. 'reverse' → logprob: -3.1257083415985107
    4. ' key' → logprob: -4.37570858001709
    5. '       ' → logprob: -4.75070858001709
    6. 'sorted' → logprob: -4.75070858001709
    7. 'len' → logprob: -4.87570858001709
    8. '   ' → logprob: -5.87570858001709
    9. 'tie' → logprob: -8.25070858001709
    10. ' self' → logprob: -8.62570858001709

Token 1489: '-breaking' (ID: 100161)
  Prédit: '_break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_break' → logprob: -0.6701467633247375
    2. '       ' → logprob: -1.1701467037200928
    3. '-break' → logprob: -2.5451467037200928
    4. '-breaking' → logprob: -3.2951467037200928
    5. 'breaker' → logprob: -3.6701467037200928
    6. 'break' → logprob: -4.045146942138672
    7. '   ' → logprob: -4.545146942138672
    8. 'breaking' → logprob: -5.295146942138672
    9. '           ' → logprob: -6.795146942138672
    10. ' breaker' → logprob: -7.295146942138672

Token 1490: ' on' (ID: 402)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.08319190889596939
    2. 'by' → logprob: -3.2081918716430664
    3. ' based' → logprob: -3.7081918716430664
    4. 'based' → logprob: -5.333191871643066
    5. '_by' → logprob: -6.208191871643066
    6. ' rules' → logprob: -6.583191871643066
    7. '       ' → logprob: -6.833191871643066
    8. '   ' → logprob: -7.583191871643066
    9. ' logic' → logprob: -7.583191871643066
    10. ' that' → logprob: -7.708191871643066

Token 1491: ' lex' (ID: 37772)
  Prédit: 'lex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lex' → logprob: -0.31073901057243347
    2. ' lex' → logprob: -1.8107390403747559
    3. 'length' → logprob: -2.560739040374756
    4. 'the' → logprob: -4.310739040374756
    5. 'len' → logprob: -5.310739040374756
    6. 'self' → logprob: -5.935739040374756
    7. ' length' → logprob: -6.310739040374756
    8. '   ' → logprob: -6.435739040374756
    9. 'standard' → logprob: -7.310739040374756
    10. ' the' → logprob: -8.310738563537598

Token 1492: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.7922871708869934
    2. '       ' → logprob: -0.7922871708869934
    3. '   ' → logprob: -2.6672871112823486
    4. 'ographical' → logprob: -4.542287349700928
    5. 'ographic' → logprob: -6.042287349700928
    6. 'order' → logprob: -6.042287349700928
    7. ' order' → logprob: -6.542287349700928
    8. 'ical' → logprob: -6.667287349700928
    9. '           ' → logprob: -7.167287349700928
    10. '
' → logprob: -7.417287349700928

Token 1493: 'ographical' (ID: 44118)
  Prédit: 'ographical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ographical' → logprob: -0.06558168679475784
    2. 'ographic' → logprob: -2.815581798553467
    3. 'ographically' → logprob: -5.690581798553467
    4. 'graph' → logprob: -9.190581321716309
    5. 'graphic' → logprob: -10.065581321716309
    6. 'order' → logprob: -10.565581321716309
    7. 'al' → logprob: -10.690581321716309
    8. '   ' → logprob: -11.065581321716309
    9. 'ography' → logprob: -11.815581321716309
    10. 'o' → logprob: -12.565581321716309

Token 1494: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.07898353040218353
    2. ' order' → logprob: -2.5789835453033447
    3. 'ordering' → logprob: -10.078983306884766
    4. '_order' → logprob: -10.703983306884766
    5. ' ordering' → logprob: -11.203983306884766
    6. '(order' → logprob: -11.203983306884766
    7. ')' → logprob: -14.078983306884766
    8. '	order' → logprob: -14.953983306884766
    9. '   ' → logprob: -15.203983306884766
    10. 'sort' → logprob: -15.453983306884766

Token 1495: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026210423558950424
    2. '.' → logprob: -5.401210308074951
    3. '(self' → logprob: -5.401210308074951
    4. ':
' → logprob: -5.651210308074951
    5. '.
' → logprob: -6.026210308074951
    6. '
' → logprob: -6.401210308074951
    7. '```' → logprob: -6.401210308074951
    8. ' by' → logprob: -6.776210308074951
    9. ':' → logprob: -7.026210308074951
    10. ',' → logprob: -7.401210308074951

Token 1496: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003630954073742032
    2. '
' → logprob: -5.753631114959717
    3. '```' → logprob: -7.753631114959717
    4. '        
' → logprob: -10.753630638122559
    5. '
' → logprob: -13.628630638122559
    6. '   ' → logprob: -14.503630638122559
    7. '``' → logprob: -15.628630638122559
    8. '    
' → logprob: -15.753630638122559
    9. '           ' → logprob: -15.878630638122559
    10. '  
' → logprob: -16.503631591796875

Token 1497: ' """

' (ID: 28800)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007961660739965737
    2. '
' → logprob: -7.750796318054199
    3. 'from' → logprob: -8.2507963180542
    4. '```' → logprob: -10.1257963180542
    5. 'import' → logprob: -10.2507963180542
    6. 'sorted' → logprob: -10.7507963180542
    7. 'def' → logprob: -13.0007963180542
    8. 'if' → logprob: -13.1257963180542
    9. '   ' → logprob: -13.7507963180542
    10. '        
' → logprob: -14.6257963180542

Token 1498: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023393364972434938
    2. '```' → logprob: -8.50023365020752
    3. 'from' → logprob: -11.12523365020752
    4. 'import' → logprob: -11.25023365020752
    5. 'sorted' → logprob: -13.25023365020752
    6. '   ' → logprob: -14.87523365020752
    7. '``' → logprob: -15.50023365020752
    8. 'def' → logprob: -16.375234603881836
    9. 'return' → logprob: -17.125234603881836
    10. 'tokens' → logprob: -17.375234603881836

Token 1499: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.1446833461523056
    2. 'sorted' → logprob: -2.269683361053467
    3. '       ' → logprob: -4.644683361053467
    4. 'return' → logprob: -4.769683361053467
    5. 'import' → logprob: -5.019683361053467
    6. 'self' → logprob: -6.269683361053467
    7. 'def' → logprob: -6.644683361053467
    8. 'arr' → logprob: -7.019683361053467
    9. 'array' → logprob: -7.144683361053467
    10. '   ' → logprob: -7.144683361053467

Token 1500: ' We' (ID: 1416)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.08388406038284302
    2. 'sorted' → logprob: -3.3338840007781982
    3. '       ' → logprob: -4.458884239196777
    4. 'import' → logprob: -4.708884239196777
    5. 'n' → logprob: -4.958884239196777
    6. 'arr' → logprob: -5.083884239196777
    7. '#' → logprob: -6.083884239196777
    8. 'self' → logprob: -6.333884239196777
    9. 'array' → logprob: -6.333884239196777
    10. 'def' → logprob: -6.458884239196777

Token 1501: ' cannot' (ID: 6284)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02003549411892891
    2. 'from' → logprob: -4.895035266876221
    3. 'def' → logprob: -5.770035266876221
    4. ' =' → logprob: -5.895035266876221
    5. 'import' → logprob: -6.020035266876221
    6. '_sorted' → logprob: -6.645035266876221
    7. '   ' → logprob: -6.895035266876221
    8. '=' → logprob: -7.520035266876221
    9. 'sorted' → logprob: -7.770035266876221
    10. 'array' → logprob: -8.645035743713379

Token 1502: ' simply' (ID: 6462)
  Prédit: ' simply'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' simply' → logprob: -1.132490873336792
    2. '       ' → logprob: -1.882490873336792
    3. 'sort' → logprob: -1.882490873336792
    4. 'sim' → logprob: -2.007490873336792
    5. 'use' → logprob: -2.757490873336792
    6. ' use' → logprob: -3.007490873336792
    7. 'import' → logprob: -3.007490873336792
    8. ' sort' → logprob: -3.507490873336792
    9. '   ' → logprob: -3.882490873336792
    10. '
' → logprob: -4.382491111755371

Token 1503: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.01858392544090748
    2. 'use' → logprob: -4.26858377456665
    3. 'just' → logprob: -6.51858377456665
    4. 'sim' → logprob: -6.64358377456665
    5. '       ' → logprob: -7.01858377456665
    6. '   ' → logprob: -7.76858377456665
    7. 'do' → logprob: -9.518584251403809
    8. 're' → logprob: -9.768584251403809
    9. 'sorted' → logprob: -10.018584251403809
    10. 'compare' → logprob: -10.393584251403809

Token 1504: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48034390807151794
    2. 'self' → logprob: -1.8553439378738403
    3. '(self' → logprob: -1.9803439378738403
    4. 'with' → logprob: -3.355343818664551
    5. 'using' → logprob: -3.480343818664551
    6. 'key' → logprob: -4.980343818664551
    7. 'def' → logprob: -5.355343818664551
    8. 'by' → logprob: -5.730343818664551
    9. '(
' → logprob: -6.480343818664551
    10. 'import' → logprob: -6.730343818664551

Token 1505: ' value' (ID: 1432)
  Prédit: 'fun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.2887541651725769
    2. 'lambda' → logprob: -1.5387542247772217
    3. 'self' → logprob: -3.4137542247772217
    4. 'Power' → logprob: -6.538753986358643
    5. 'cmp' → logprob: -7.538753986358643
    6. ' functools' → logprob: -7.788753986358643
    7. 'partial' → logprob: -7.788753986358643
    8. 'len' → logprob: -8.6637544631958
    9. '
' → logprob: -9.5387544631958
    10. 'Fun' → logprob: -10.1637544631958

Token 1506: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09808379411697388
    2. ',' → logprob: -3.098083734512329
    3. '=' → logprob: -3.973083734512329
    4. 'def' → logprob: -4.848083972930908
    5. ' =' → logprob: -5.348083972930908
    6. '(self' → logprob: -5.723083972930908
    7. ',
' → logprob: -5.973083972930908
    8. 'import' → logprob: -6.348083972930908
    9. '
' → logprob: -6.473083972930908
    10. 'self' → logprob: -6.598083972930908

Token 1507: ' naive' (ID: 105687)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0910032987594604
    2. 'def' → logprob: -2.09100341796875
    3. 'custom' → logprob: -2.21600341796875
    4. 'lambda' → logprob: -2.34100341796875
    5. 'length' → logprob: -2.34100341796875
    6. 'fun' → logprob: -2.96600341796875
    7. 'frequency' → logprob: -3.21600341796875
    8. 'len' → logprob: -3.59100341796875
    9. 'reverse' → logprob: -3.84100341796875
    10. 'import' → logprob: -3.84100341796875

Token 1508: ' comparator' (ID: 96166)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8158513903617859
    2. 'key' → logprob: -1.3158514499664307
    3. '=' → logprob: -2.4408514499664307
    4. '=lambda' → logprob: -2.9408514499664307
    5. 'lambda' → logprob: -3.4408514499664307
    6. '#' → logprob: -3.5658514499664307
    7. 'reverse' → logprob: -4.190851211547852
    8. '       ' → logprob: -4.315851211547852
    9. 'comparison' → logprob: -4.315851211547852
    10. 'descending' → logprob: -4.940851211547852

Token 1509: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002955399686470628
    2. ',' → logprob: -8.500295639038086
    3. 'import' → logprob: -10.500295639038086
    4. 'from' → logprob: -10.625295639038086
    5. '        
' → logprob: -11.000295639038086
    6. '
' → logprob: -11.625295639038086
    7. '.' → logprob: -12.500295639038086
    8. '.sort' → logprob: -12.875295639038086
    9. 'def' → logprob: -13.375295639038086
    10. 'return' → logprob: -13.875295639038086

Token 1510: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033452557399868965
    2. 'from' → logprob: -5.753345489501953
    3. 'import' → logprob: -9.253345489501953
    4. '```' → logprob: -10.378345489501953
    5. '
' → logprob: -10.753345489501953
    6. 'return' → logprob: -11.628345489501953
    7. 'def' → logprob: -11.878345489501953
    8. 'sorted' → logprob: -13.128345489501953
    9. ' from' → logprob: -14.503345489501953
    10. '   ' → logprob: -14.628345489501953

Token 1511: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5838460922241211
    2. 'from' → logprob: -0.8338460922241211
    3. 'import' → logprob: -5.333846092224121
    4. 'sorted' → logprob: -6.333846092224121
    5. 'def' → logprob: -6.833846092224121
    6. '#' (adapté à ' #') → logprob: -9.958846092224121
    7. 'n' → logprob: -10.083846092224121
    8. 'return' → logprob: -10.333846092224121
    9. 'result' → logprob: -10.833846092224121
    10. '   ' → logprob: -11.458846092224121

Token 1512: ' Instead' (ID: 21050)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.516817569732666
    2. '       ' → logprob: -1.016817569732666
    3. 'def' → logprob: -4.266817569732666
    4. 'import' → logprob: -4.641817569732666
    5. 'sorted' → logprob: -4.641817569732666
    6. 'return' → logprob: -4.891817569732666
    7. 'array' → logprob: -8.141817092895508
    8. '#' → logprob: -8.266817092895508
    9. 'n' → logprob: -8.391817092895508
    10. 'result' → logprob: -9.641817092895508

Token 1513: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010429323883727193
    2. 'import' → logprob: -7.12604284286499
    3. ',' → logprob: -9.001043319702148
    4. 'from' → logprob: -10.001043319702148
    5. '
' → logprob: -10.626043319702148
    6. '        
' → logprob: -11.001043319702148
    7. ':' → logprob: -12.001043319702148
    8. 'sorted' → logprob: -12.501043319702148
    9. 'self' → logprob: -12.876043319702148
    10. 'def' → logprob: -13.001043319702148

Token 1514: ' apply' (ID: 6096)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.24896632134914398
    2. 'self' → logprob: -1.8739663362503052
    3. '       ' → logprob: -3.3739662170410156
    4. 'import' → logprob: -4.623966217041016
    5. 'def' → logprob: -4.623966217041016
    6. '#' → logprob: -5.123966217041016
    7. 'sorted' → logprob: -5.373966217041016
    8. 'result' → logprob: -7.373966217041016
    9. 'power' → logprob: -7.623966217041016
    10. 'n' → logprob: -7.748966217041016

Token 1515: ' a' (ID: 261)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.10554692149162292
    2. 'from' → logprob: -2.3555469512939453
    3. 'import' → logprob: -6.480546951293945
    4. 'fun' → logprob: -6.730546951293945
    5. 'self' → logprob: -6.855546951293945
    6. 'Power' → logprob: -6.980546951293945
    7. 'custom' → logprob: -8.355546951293945
    8. 'def' → logprob: -8.605546951293945
    9. 'cmp' → logprob: -9.980546951293945
    10. 'key' → logprob: -10.105546951293945

Token 1516: ' custom' (ID: 2602)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9479054808616638
    2. 'sorted' → logprob: -0.9479054808616638
    3. 'custom' → logprob: -1.9479055404663086
    4. 'def' → logprob: -2.5729055404663086
    5. 'key' → logprob: -6.322905540466309
    6. 'import' → logprob: -6.322905540466309
    7. 'fun' → logprob: -6.947905540466309
    8. 'sort' → logprob: -7.197905540466309
    9. 'cmp' → logprob: -8.447905540466309
    10. 'stable' → logprob: -8.572905540466309

Token 1517: ' comparator' (ID: 96166)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.6482831835746765
    2. 'key' → logprob: -2.1482832431793213
    3. 'from' → logprob: -2.1482832431793213
    4. 'def' → logprob: -2.3982832431793213
    5. 'sorted' → logprob: -2.6482832431793213
    6. '.sort' → logprob: -3.0232832431793213
    7. 'import' → logprob: -4.648283004760742
    8. '_key' → logprob: -4.773283004760742
    9. '       ' → logprob: -5.273283004760742
    10. ' key' → logprob: -5.898283004760742

Token 1518: ' implementing' (ID: 36838)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6231243014335632
    2. 'from' → logprob: -1.623124361038208
    3. 'def' → logprob: -2.123124361038208
    4. 'import' → logprob: -2.248124361038208
    5. 'key' → logprob: -4.248124122619629
    6. ' key' → logprob: -5.623124122619629
    7. 'sorted' → logprob: -5.623124122619629
    8. ',' → logprob: -5.998124122619629
    9. '_key' → logprob: -6.123124122619629
    10. ' =' → logprob: -6.123124122619629

Token 1519: ' the' (ID: 290)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.06065130606293678
    2. 'Power' → logprob: -3.1856513023376465
    3. 'self' → logprob: -4.8106513023376465
    4. 'fun' → logprob: -5.6856513023376465
    5. 'cmp' → logprob: -6.0606513023376465
    6. 'key' → logprob: -6.5606513023376465
    7. '           ' → logprob: -7.4356513023376465
    8. '(lambda' → logprob: -7.5606513023376465
    9. '=lambda' → logprob: -8.185651779174805
    10. 'Key' → logprob: -8.560651779174805

Token 1520: ' Power' (ID: 10079)
  Prédit: '_power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.7991387248039246
    2. 'Power' → logprob: -2.1741387844085693
    3. '_compare' → logprob: -2.2991387844085693
    4. '_logic' → logprob: -2.5491387844085693
    5. '_key' → logprob: -2.7991387844085693
    6. 'compare' → logprob: -2.9241387844085693
    7. 'key' → logprob: -3.2991387844085693
    8. '__' → logprob: -3.9241387844085693
    9. 'cmp' → logprob: -4.29913854598999
    10. 'logic' → logprob: -4.79913854598999

Token 1521: 'Tower' (ID: 96498)
  Prédit: 'Tower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tower' → logprob: -4.961759259458631e-06
    2. '       ' → logprob: -13.000004768371582
    3. ' Tower' → logprob: -13.750004768371582
    4. '   ' → logprob: -15.000004768371582
    5. 'Tow' → logprob: -15.250004768371582
    6. '_T' → logprob: -15.375004768371582
    7. 'Tour' → logprob: -15.625004768371582
    8. '           ' → logprob: -16.0000057220459
    9. '#' → logprob: -16.0000057220459
    10. '
' → logprob: -16.5000057220459

Token 1522: 'Comparator' (ID: 45034)
  Prédit: 'Comparator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Comparator' → logprob: -7.421908958349377e-05
    2. '.Comparator' → logprob: -9.87507438659668
    3. 'Comparer' → logprob: -11.75007438659668
    4. '   ' → logprob: -12.25007438659668
    5. '_com' → logprob: -12.62507438659668
    6. '       ' → logprob: -12.62507438659668
    7. '
' → logprob: -13.50007438659668
    8. 'Sorter' → logprob: -14.50007438659668
    9. 'com' → logprob: -15.12507438659668
    10. '#' → logprob: -15.37507438659668

Token 1523: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17031553387641907
    2. '().' → logprob: -3.2953155040740967
    3. 'import' → logprob: -3.4203155040740967
    4. ',' → logprob: -3.6703155040740967
    5. '   ' → logprob: -4.920315742492676
    6. ')' → logprob: -4.920315742492676
    7. 'def' → logprob: -5.045315742492676
    8. '()
' → logprob: -5.045315742492676
    9. '
' → logprob: -5.170315742492676
    10. '()' → logprob: -5.545315742492676

Token 1524: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16609615087509155
    2. 'from' → logprob: -1.9160962104797363
    3. 'return' → logprob: -5.541096210479736
    4. 'import' → logprob: -6.666096210479736
    5. '```' → logprob: -7.791096210479736
    6. 'sorted' → logprob: -9.041095733642578
    7. 'def' → logprob: -9.791095733642578
    8. '   ' → logprob: -10.291095733642578
    9. ' from' → logprob: -10.916095733642578
    10. '
' → logprob: -11.416095733642578

Token 1525: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.20524974167346954
    2. '       ' → logprob: -1.7052497863769531
    3. 'sorted' → logprob: -6.205249786376953
    4. 'return' → logprob: -6.830249786376953
    5. 'import' → logprob: -7.330249786376953
    6. 'def' → logprob: -9.830249786376953
    7. ' from' → logprob: -11.955249786376953
    8. '   ' → logprob: -12.080249786376953
    9. 'self' → logprob: -13.205249786376953
    10. '#' (adapté à ' #') → logprob: -13.205249786376953

Token 1526: ' We'll' (ID: 46830)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.012081152759492397
    2. 'sorted' → logprob: -5.387081146240234
    3. 'import' → logprob: -5.512081146240234
    4. 'self' → logprob: -6.512081146240234
    5. '       ' → logprob: -6.762081146240234
    6. 'return' → logprob: -8.137081146240234
    7. 'def' → logprob: -8.137081146240234
    8. '#' → logprob: -9.887081146240234
    9. 'arr' → logprob: -10.387081146240234
    10. '   ' → logprob: -10.512081146240234

Token 1527: ' generate' (ID: 10419)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.043975938111543655
    2. 'import' → logprob: -3.668975830078125
    3. 'sorted' → logprob: -4.168975830078125
    4. 'return' → logprob: -7.043975830078125
    5. '       ' → logprob: -7.293975830078125
    6. 'self' → logprob: -8.793975830078125
    7. 'array' → logprob: -8.918975830078125
    8. ' from' → logprob: -9.418975830078125
    9. 'sort' → logprob: -9.668975830078125
    10. 'def' → logprob: -10.543975830078125

Token 1528: ' all' (ID: 722)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.1906558871269226
    2. 'sorted' → logprob: -1.9406559467315674
    3. 'import' → logprob: -3.8156559467315674
    4. 'all' → logprob: -4.940655708312988
    5. '       ' → logprob: -8.440655708312988
    6. 'per' → logprob: -8.690655708312988
    7. 'def' → logprob: -8.940655708312988
    8. 'self' → logprob: -8.940655708312988
    9. 'list' → logprob: -10.565655708312988
    10. '   ' → logprob: -10.565655708312988

Token 1529: ' permutations' (ID: 174595)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.11153623461723328
    2. 'import' → logprob: -2.4865362644195557
    3. 'from' → logprob: -4.111536026000977
    4. ' permutations' → logprob: -5.611536026000977
    5. 'possible' → logprob: -6.736536026000977
    6. '       ' → logprob: -6.986536026000977
    7. 'perm' → logprob: -9.861536026000977
    8. 'sub' → logprob: -10.361536026000977
    9. 'sorted' → logprob: -10.361536026000977
    10. ' from' → logprob: -10.736536026000977

Token 1530: ' is' (ID: 382)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5862628221511841
    2. 'import' → logprob: -1.836262822151184
    3. ',' → logprob: -2.4612627029418945
    4. '       ' → logprob: -2.7112627029418945
    5. '.' → logprob: -3.5862627029418945
    6. 'from' → logprob: -4.0862627029418945
    7. '[:]' → logprob: -4.3362627029418945
    8. '[::-' → logprob: -4.4612627029418945
    9. '()
' → logprob: -4.5862627029418945
    10. ':' → logprob: -4.5862627029418945

Token 1531: ' impossible' (ID: 19786)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.34029948711395264
    2. 'orted' → logprob: -2.090299606323242
    3. ' sorted' → logprob: -2.090299606323242
    4. 'not' → logprob: -4.090299606323242
    5. 'sorted' → logprob: -5.090299606323242
    6. ' None' → logprob: -5.465299606323242
    7. '       ' → logprob: -6.090299606323242
    8. 'n't' → logprob: -6.090299606323242
    9. '_sorted' → logprob: -6.340299606323242
    10. 'None' → logprob: -6.340299606323242

Token 1532: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6853059530258179
    2. '       ' → logprob: -1.6853059530258179
    3. ' because' → logprob: -2.8103060722351074
    4. '.' → logprob: -3.0603060722351074
    5. 'import' → logprob: -3.0603060722351074
    6. ',
' → logprob: -3.6853060722351074
    7. ' due' → logprob: -3.8103060722351074
    8. '
' → logprob: -4.310306072235107
    9. 'from' → logprob: -4.435306072235107
    10. '.
' → logprob: -4.560306072235107

Token 1533: 'N' (ID: 45)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7144591808319092
    2. 'import' → logprob: -1.4644591808319092
    3. ')' → logprob: -2.464459180831909
    4. '#' → logprob: -2.839459180831909
    5. '
' → logprob: -3.714459180831909
    6. ' because' → logprob: -3.964459180831909
    7. ' due' → logprob: -4.214459419250488
    8. 'due' → logprob: -4.589459419250488
    9. 'because' → logprob: -4.964459419250488
    10. '...' → logprob: -5.089459419250488

Token 1534: ' up' (ID: 869)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9120008945465088
    2. '       ' → logprob: -1.0370008945465088
    3. '=' → logprob: -1.9120008945465088
    4. ' =' → logprob: -3.412000894546509
    5. '[' → logprob: -4.28700065612793
    6. ' import' → logprob: -5.03700065612793
    7. 'from' → logprob: -5.28700065612793
    8. '_' → logprob: -5.41200065612793
    9. '**' → logprob: -5.66200065612793
    10. '   ' → logprob: -5.66200065612793

Token 1535: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.1964096575975418
    2. 'ntil' → logprob: -2.4464097023010254
    3. '   ' → logprob: -3.6964097023010254
    4. '=' → logprob: -3.6964097023010254
    5. '       ' → logprob: -4.821409702301025
    6. '_to' → logprob: -4.946409702301025
    7. ' to' → logprob: -4.946409702301025
    8. 'n' → logprob: -5.071409702301025
    9. 'pto' → logprob: -5.196409702301025
    10. '>' → logprob: -6.071409702301025

Token 1536: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.25227242708206177
    2. '12' → logprob: -2.127272367477417
    3. '20' → logprob: -2.877272367477417
    4. '100' → logprob: -4.252272605895996
    5. '8' → logprob: -4.502272605895996
    6. '9' → logprob: -4.877272605895996
    7. 'len' → logprob: -4.877272605895996
    8. '15' → logprob: -5.627272605895996
    9. '11' → logprob: -7.127272605895996
    10. '50' → logprob: -7.252272605895996

Token 1537: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2095431089401245
    2. '12' → logprob: -2.459543228149414
    3. '20' → logprob: -2.959543228149414
    4. '100' → logprob: -3.959543228149414
    5. '9' → logprob: -4.209543228149414
    6. '8' → logprob: -4.709543228149414
    7. 'len' → logprob: -5.209543228149414
    8. '15' → logprob: -6.334543228149414
    9. '50' → logprob: -7.209543228149414
    10. '11' → logprob: -8.209543228149414

Token 1538: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5704216361045837
    2. '       ' → logprob: -1.1954216957092285
    3. ')' → logprob: -3.0704216957092285
    4. '.' → logprob: -3.9454216957092285
    5. ',
' → logprob: -4.1954216957092285
    6. ' because' → logprob: -4.8204216957092285
    7. '
' → logprob: -4.9454216957092285
    8. ' and' → logprob: -5.0704216957092285
    9. '),' → logprob: -5.3204216957092285
    10. 'import' → logprob: -5.4454216957092285

Token 1539: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013024098239839077
    2. 'from' → logprob: -5.13802433013916
    3. '
' → logprob: -5.76302433013916
    4. 'import' → logprob: -6.26302433013916
    5. '        
' → logprob: -6.76302433013916
    6. ',' → logprob: -8.51302433013916
    7. 'sort' → logprob: -9.01302433013916
    8. '#' → logprob: -9.13802433013916
    9. '.sort' → logprob: -9.26302433013916
    10. ' from' → logprob: -9.76302433013916

Token 1540: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27621224522590637
    2. 'from' → logprob: -1.526212215423584
    3. 'import' → logprob: -4.276212215423584
    4. '
' → logprob: -4.901212215423584
    5. ' from' → logprob: -7.026212215423584
    6. '#' (adapté à ' #') → logprob: -7.026212215423584
    7. 'sorted' → logprob: -8.526212692260742
    8. '        
' → logprob: -8.901212692260742
    9. 'sort' → logprob: -8.901212692260742
    10. '```' → logprob: -9.151212692260742

Token 1541: ' Instead' (ID: 21050)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5318084359169006
    2. 'from' → logprob: -1.0318083763122559
    3. 'import' → logprob: -3.031808376312256
    4. 'sorted' → logprob: -5.281808376312256
    5. '#' → logprob: -6.781808376312256
    6. 'def' → logprob: -7.031808376312256
    7. '```' → logprob: -8.781808853149414
    8. '
' → logprob: -8.906808853149414
    9. ' from' → logprob: -8.906808853149414
    10. 'sort' → logprob: -9.156808853149414

Token 1542: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08990178257226944
    2. 'import' → logprob: -2.5899016857147217
    3. 'from' → logprob: -5.214901924133301
    4. '
' → logprob: -6.589901924133301
    5. 'sort' → logprob: -6.964901924133301
    6. 'def' → logprob: -6.964901924133301
    7. 'return' → logprob: -7.714901924133301
    8. ':' → logprob: -7.714901924133301
    9. ',' → logprob: -7.964901924133301
    10. 'we' → logprob: -8.2149019241333

Token 1543: ' Sort' (ID: 25945)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.035471681505441666
    2. 'import' → logprob: -4.2854719161987305
    3. '       ' → logprob: -4.4104719161987305
    4. '
' → logprob: -5.1604719161987305
    5. 'def' → logprob: -6.4104719161987305
    6. 'sorted' → logprob: -7.0354719161987305
    7. '#' → logprob: -7.9104719161987305
    8. ' from' → logprob: -8.78547191619873
    9. 'self' → logprob: -9.41047191619873
    10. '```' → logprob: -10.03547191619873

Token 1544: ' using' (ID: 2360)
  Prédit: '(key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.46365296840667725
    2. 'key' → logprob: -1.8386529684066772
    3. '       ' → logprob: -2.338653087615967
    4. '(self' → logprob: -2.838653087615967
    5. '(
' → logprob: -4.213653087615967
    6. 'self' → logprob: -4.338653087615967
    7. '(reverse' → logprob: -4.463653087615967
    8. 'with' → logprob: -4.588653087615967
    9. 'using' → logprob: -5.088653087615967
    10. 'reverse' → logprob: -7.588653087615967

Token 1545: ' Power' (ID: 10079)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.1204104945063591
    2. 'sorted' → logprob: -2.745410442352295
    3. 'Power' → logprob: -3.245410442352295
    4. 'fun' → logprob: -5.120410442352295
    5. 'custom' → logprob: -6.370410442352295
    6. 'cmp' → logprob: -6.620410442352295
    7. 'lambda' → logprob: -7.995410442352295
    8. 'import' → logprob: -8.620410919189453
    9. 'Key' → logprob: -8.745410919189453
    10. 'reverse' → logprob: -8.995410919189453

Token 1546: 'Tower' (ID: 96498)
  Prédit: 'Tower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tower' → logprob: -2.696889623621246e-06
    2. 'Tow' → logprob: -13.87500286102295
    3. '
' → logprob: -14.75000286102295
    4. ' Tower' → logprob: -15.50000286102295
    5. '_T' → logprob: -15.50000286102295
    6. 'To' → logprob: -15.75000286102295
    7. 'Town' → logprob: -16.000001907348633
    8. 'Tour' → logprob: -16.250001907348633
    9. '```' → logprob: -16.250001907348633
    10. '   ' → logprob: -16.875001907348633

Token 1547: 'Comparator' (ID: 45034)
  Prédit: 'Comparator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Comparator' → logprob: -0.0005637573776766658
    2. '.Comparator' → logprob: -8.500563621520996
    3. '       ' → logprob: -9.125563621520996
    4. '   ' → logprob: -9.625563621520996
    5. 'Comparer' → logprob: -9.750563621520996
    6. '           ' → logprob: -10.125563621520996
    7. ')' → logprob: -11.000563621520996
    8. '
' → logprob: -11.500563621520996
    9. 'com' → logprob: -11.500563621520996
    10. 'Key' → logprob: -11.875563621520996

Token 1548: ' based' (ID: 4122)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5175009965896606
    2. '(key' → logprob: -1.1425009965896606
    3. 'key' → logprob: -2.892500877380371
    4. '(self' → logprob: -4.392500877380371
    5. '(reverse' → logprob: -5.017500877380371
    6. '(
' → logprob: -6.517500877380371
    7. '(' → logprob: -6.642500877380371
    8. 'def' → logprob: -6.642500877380371
    9. '(sorted' → logprob: -6.642500877380371
    10. 'reverse' → logprob: -6.767500877380371

Token 1549: ' comparator' (ID: 96166)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.29761895537376404
    2. 'on' → logprob: -1.4226189851760864
    3. '=' → logprob: -5.297618865966797
    4. '   ' → logprob: -5.547618865966797
    5. ' key' → logprob: -5.672618865966797
    6. '=lambda' → logprob: -6.672618865966797
    7. '       ' → logprob: -7.422618865966797
    8. ' on' → logprob: -7.422618865966797
    9. '_key' → logprob: -7.797618865966797
    10. ')' → logprob: -8.172618865966797

Token 1550: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03173349052667618
    2. '(key' → logprob: -3.906733512878418
    3. 'key' → logprob: -5.656733512878418
    4. ',' → logprob: -6.281733512878418
    5. '(self' → logprob: -6.781733512878418
    6. '(reverse' → logprob: -7.406733512878418
    7. 'import' → logprob: -7.531733512878418
    8. 'with' → logprob: -7.531733512878418
    9. 'def' → logprob: -7.906733512878418
    10. '
' → logprob: -8.031733512878418

Token 1551: ' functools' (ID: 142636)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.0003819332632701844
    2. 'reverse' → logprob: -8.250381469726562
    3. ' key' → logprob: -9.875381469726562
    4. 'fun' → logprob: -10.000381469726562
    5. 'import' → logprob: -11.250381469726562
    6. 'cmp' → logprob: -11.625381469726562
    7. '
' → logprob: -14.125381469726562
    8. 'from' → logprob: -14.250381469726562
    9. 'custom' → logprob: -15.625381469726562
    10. 'sorted' → logprob: -16.250381469726562

Token 1552: '.c' (ID: 1081)
  Prédit: 'cmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmp' → logprob: -0.03166177496314049
    2. '_cmp' → logprob: -4.1566619873046875
    3. '.c' → logprob: -4.4066619873046875
    4. 'from' → logprob: -6.2816619873046875
    5. ' cmp' → logprob: -7.4066619873046875
    6. 'import' → logprob: -8.406661987304688
    7. '_key' → logprob: -8.531661987304688
    8. 'key' → logprob: -9.156661987304688
    9. '```' → logprob: -9.781661987304688
    10. '_from' → logprob: -10.531661987304688

Token 1553: 'mp' (ID: 2211)
  Prédit: 'mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.0020123831927776337
    2. 'om' → logprob: -6.252012252807617
    3. 'cmp' → logprob: -10.502012252807617
    4. 'omp' → logprob: -10.502012252807617
    5. 'm' → logprob: -10.627012252807617
    6. 'mpr' → logprob: -12.877012252807617
    7. 'import' → logprob: -14.252012252807617
    8. 'mpl' → logprob: -15.127012252807617
    9. '```' → logprob: -15.252012252807617
    10. '_cmp' → logprob: -15.252012252807617

Token 1554: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.05731683596968651
    2. '_key' → logprob: -2.932316780090332
    3. 'key' → logprob: -6.682316780090332
    4. '_from' → logprob: -8.057316780090332
    5. '_cmp' → logprob: -8.057316780090332
    6. 'from' → logprob: -8.557316780090332
    7. 'cmp' → logprob: -8.807316780090332
    8. 'import' → logprob: -10.682316780090332
    9. '_tool' → logprob: -10.807316780090332
    10. '_sort' → logprob: -10.932316780090332

Token 1555: '_key' (ID: 6724)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.0015340241370722651
    2. '_key' → logprob: -6.5015339851379395
    3. 'cmp' → logprob: -12.001534461975098
    4. '
' → logprob: -12.126534461975098
    5. 'Key' → logprob: -12.376534461975098
    6. '```' → logprob: -12.376534461975098
    7. ' key' → logprob: -13.126534461975098
    8. 'func' → logprob: -13.501534461975098
    9. '-key' → logprob: -13.626534461975098
    10. 'import' → logprob: -13.876534461975098

Token 1556: '

' (ID: 279)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3589867055416107
    2. '       ' → logprob: -1.858986735343933
    3. 'import' → logprob: -2.2339866161346436
    4. '(self' → logprob: -4.983986854553223
    5. 'key' → logprob: -5.233986854553223
    6. '(sorted' → logprob: -5.483986854553223
    7. '(key' → logprob: -5.483986854553223
    8. 'return' → logprob: -5.733986854553223
    9. '
' → logprob: -5.983986854553223
    10. '(' → logprob: -6.483986854553223

Token 1557: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1181567832827568
    2. 'from' → logprob: -2.743156671524048
    3. 'import' → logprob: -3.868156671524048
    4. ',' → logprob: -3.868156671524048
    5. '   ' → logprob: -6.243156909942627
    6. ')' → logprob: -7.243156909942627
    7. '(' → logprob: -7.368156909942627
    8. 'key' → logprob: -7.868156909942627
    9. '```' → logprob: -7.868156909942627
    10. ' from' → logprob: -8.618156433105469

Token 1558: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' (adapté à ' from') → logprob: -0.2570394277572632
    2. '       ' → logprob: -1.5070394277572632
    3. 'import' → logprob: -6.132039546966553
    4. ' from' → logprob: -6.507039546966553
    5. 'return' → logprob: -6.632039546966553
    6. 'key' → logprob: -10.132039070129395
    7. 'fun' → logprob: -10.882039070129395
    8. ',' → logprob: -11.007039070129395
    9. '```' → logprob: -11.007039070129395
    10. '        
' → logprob: -12.257039070129395

Token 1559: ' functools' (ID: 142636)
  Prédit: 'fun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.0007100477814674377
    2. ' functools' → logprob: -7.2507100105285645
    3. 'func' → logprob: -19.125709533691406
    4. 'collections' → logprob: -19.250709533691406
    5. '_fun' → logprob: -19.250709533691406
    6. 'fn' → logprob: -19.750709533691406
    7. 'import' → logprob: -20.625709533691406
    8. 'ft' → logprob: -20.875709533691406
    9. 'cmp' → logprob: -21.000709533691406
    10. 'f' → logprob: -21.125709533691406

Token 1560: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.10116049647331238
    2. ' import' → logprob: -2.3511605262756348
    3. '.' → logprob: -7.976160526275635
    4. '_import' → logprob: -8.101160049438477
    5. '.import' → logprob: -8.851160049438477
    6. '	import' → logprob: -9.476160049438477
    7. '._' → logprob: -10.351160049438477
    8. ' ' → logprob: -11.351160049438477
    9. ',' → logprob: -11.851160049438477
    10. '_' → logprob: -12.226160049438477

Token 1561: ' cmp' (ID: 57822)
  Prédit: 'cmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmp' → logprob: -6.2729995988775045e-06
    2. ' cmp' → logprob: -12.000006675720215
    3. 'import' → logprob: -17.3750057220459
    4. '_cmp' → logprob: -17.6250057220459
    5. 'cm' → logprob: -18.7500057220459
    6. 'fun' → logprob: -20.0000057220459
    7. 'partial' → logprob: -20.5000057220459
    8. 'Cmp' → logprob: -21.0000057220459
    9. 'CMP' → logprob: -21.8750057220459
    10. 'comp' → logprob: -22.0000057220459

Token 1562: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -3.173704271830502e-06
    2. 'import' → logprob: -14.37500286102295
    3. '_
' → logprob: -14.75000286102295
    4. 'to' → logprob: -14.75000286102295
    5. '_t' → logprob: -14.87500286102295
    6. '=_' → logprob: -15.00000286102295
    7. 't' → logprob: -15.50000286102295
    8. '_' → logprob: -15.75000286102295
    9. '_func' → logprob: -16.125003814697266
    10. ' _' → logprob: -16.125003814697266

Token 1563: '_key' (ID: 6724)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -1.5094070477061905e-05
    2. '_key' → logprob: -11.125015258789062
    3. 'k' → logprob: -15.500015258789062
    4. 'def' → logprob: -17.250015258789062
    5. '
' → logprob: -18.000015258789062
    6. '   ' → logprob: -18.125015258789062
    7. ' key' → logprob: -18.750015258789062
    8. 'import' → logprob: -18.750015258789062
    9. 'Key' → logprob: -19.250015258789062
    10. '```' → logprob: -19.500015258789062

Token 1564: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21264921128749847
    2. '
' → logprob: -1.7126492261886597
    3. 'key' → logprob: -4.587649345397949
    4. 'sorted' → logprob: -7.962649345397949
    5. 'return' → logprob: -8.08764934539795
    6. '        
' → logprob: -9.08764934539795
    7. ' key' → logprob: -9.96264934539795
    8. 'def' → logprob: -10.21264934539795
    9. 'self' → logprob: -10.33764934539795
    10. '   ' → logprob: -10.58764934539795

Token 1565: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005192370619624853
    2. '
' → logprob: -6.005192279815674
    3. 'key' → logprob: -6.005192279815674
    4. 'return' → logprob: -8.630192756652832
    5. '   ' → logprob: -10.380192756652832
    6. 'sorted' → logprob: -11.005192756652832
    7. ' key' → logprob: -11.880192756652832
    8. '        
' → logprob: -12.255192756652832
    9. 'def' → logprob: -12.880192756652832
    10. 'sort' → logprob: -13.255192756652832

Token 1566: ' def' (ID: 1056)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.4004478454589844
    2. 'self' → logprob: -1.4004478454589844
    3. 'return' → logprob: -2.7754478454589844
    4. '       ' → logprob: -4.150447845458984
    5. 'sorted' → logprob: -5.900447845458984
    6. 'cmp' → logprob: -6.025447845458984
    7. 'def' (adapté à ' def') → logprob: -9.025447845458984
    8. '#' → logprob: -10.025447845458984
    9. 'com' → logprob: -10.400447845458984
    10. '   ' → logprob: -10.775447845458984

Token 1567: ' cmp' (ID: 57822)
  Prédit: 'cmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmp' → logprob: -0.5813730955123901
    2. 'compare' → logprob: -0.8313730955123901
    3. 'com' → logprob: -5.83137321472168
    4. 'comp' → logprob: -6.20637321472168
    5. 'key' → logprob: -8.58137321472168
    6. 'power' → logprob: -9.58137321472168
    7. 'custom' → logprob: -9.83137321472168
    8. ' cmp' → logprob: -9.83137321472168
    9. ' comparator' → logprob: -9.95637321472168
    10. ' compare' → logprob: -10.83137321472168

Token 1568: '_func' (ID: 22252)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3955863118171692
    2. '_' → logprob: -1.6455862522125244
    3. '_T' → logprob: -2.8955862522125244
    4. '_to' → logprob: -4.0205864906311035
    5. '_(' → logprob: -4.3955864906311035
    6. '(x' → logprob: -4.5205864906311035
    7. '_P' → logprob: -5.0205864906311035
    8. '_t' → logprob: -5.0205864906311035
    9. '(_' → logprob: -5.0205864906311035
    10. '_power' → logprob: -5.6455864906311035

Token 1569: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0002774246677290648
    2. '(x' → logprob: -8.250277519226074
    3. '(self' → logprob: -11.750277519226074
    4. '(left' → logprob: -12.375277519226074
    5. '(lhs' → logprob: -12.750277519226074
    6. '(t' → logprob: -15.125277519226074
    7. '(prev' → logprob: -15.375277519226074
    8. '(l' → logprob: -16.375276565551758
    9. '   ' → logprob: -16.500276565551758
    10. 'a' → logprob: -16.625276565551758

Token 1570: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002771593863144517
    2. ',x' → logprob: -6.377771377563477
    3. ' ,' → logprob: -7.502771377563477
    4. ',y' → logprob: -7.752771377563477
    5. ',v' → logprob: -11.502771377563477
    6. ',a' → logprob: -11.627771377563477
    7. '_,' → logprob: -11.627771377563477
    8. ',k' → logprob: -11.877771377563477
    9. ',next' → logprob: -11.877771377563477
    10. ',n' → logprob: -12.002771377563477

Token 1571: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0040785204619169235
    2. ' y' → logprob: -5.504078388214111
    3. '   ' → logprob: -17.754077911376953
    4. ' ' → logprob: -19.754077911376953
    5. '	y' → logprob: -19.754077911376953
    6. '  ' → logprob: -19.879077911376953
    7. '
' → logprob: -20.629077911376953
    8. '    ' → logprob: -20.629077911376953
    9. 'y's' → logprob: -22.379077911376953
    10. '       ' → logprob: -22.754077911376953

Token 1572: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16224078834056854
    2. '):
' → logprob: -1.912240743637085
    3. ')' → logprob: -6.787240982055664
    4. ',' → logprob: -7.162240982055664
    5. ':' → logprob: -9.537240982055664
    6. '):
' → logprob: -11.162240982055664
    7. '):

' → logprob: -11.537240982055664
    8. '   ' → logprob: -11.787240982055664
    9. '       ' → logprob: -12.537240982055664
    10. ' ):' → logprob: -13.162240982055664

Token 1573: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1808449625968933
    2. '       ' → logprob: -1.805845022201538
    3. ' if' → logprob: -8.055845260620117
    4. '   ' → logprob: -8.305845260620117
    5. ' return' → logprob: -8.805845260620117
    6. '               ' → logprob: -9.055845260620117
    7. ':' → logprob: -9.430845260620117
    8. ',' → logprob: -9.555845260620117
    9. '	       ' → logprob: -11.055845260620117
    10. '          ' → logprob: -11.180845260620117

Token 1574: ' comp' (ID: 1050)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6041451096534729
    2. 'return' → logprob: -0.9791451096534729
    3. 'a' → logprob: -3.104145050048828
    4. 'if' → logprob: -4.354145050048828
    5. 'pt' → logprob: -4.854145050048828
    6. 'pc' → logprob: -5.729145050048828
    7. 'r' → logprob: -5.854145050048828
    8. '   ' → logprob: -6.229145050048828
    9. 'res' → logprob: -6.854145050048828
    10. ' return' → logprob: -7.729145050048828

Token 1575: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4309813678264618
    2. ' =' → logprob: -1.9309813976287842
    3. 'ar' → logprob: -2.055981397628784
    4. 'arer' → logprob: -3.055981397628784
    5. 'are' → logprob: -4.430981159210205
    6. '=
' → logprob: -5.055981159210205
    7. 'ares' → logprob: -5.930981159210205
    8. 'ared' → logprob: -6.805981159210205
    9. 'ose' → logprob: -6.930981159210205
    10. '   ' → logprob: -7.055981159210205

Token 1576: ' Power' (ID: 10079)
  Prédit: 'Power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Power' → logprob: -5.88418151892256e-05
    2. ' Power' → logprob: -9.750059127807617
    3. '-' → logprob: -15.500059127807617
    4. '-P' → logprob: -16.250059127807617
    5. 'Pow' → logprob: -16.625059127807617
    6. '           ' → logprob: -16.750059127807617
    7. '1' → logprob: -17.750059127807617
    8. '-power' → logprob: -18.750059127807617
    9. '               ' → logprob: -19.000059127807617
    10. ' -' → logprob: -19.125059127807617

Token 1577: 'Tower' (ID: 96498)
  Prédit: 'Tower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tower' → logprob: -4.0722858102526516e-05
    2. '_T' → logprob: -10.375041007995605
    3. ' Tower' → logprob: -12.625041007995605
    4. 'Tow' → logprob: -13.375041007995605
    5. '   ' → logprob: -13.750041007995605
    6. '_t' → logprob: -14.125041007995605
    7. '_' → logprob: -14.250041007995605
    8. '           ' → logprob: -15.250041007995605
    9. 'Tour' → logprob: -15.375041007995605
    10. '
' → logprob: -15.375041007995605

Token 1578: 'Comparator' (ID: 45034)
  Prédit: 'Comparator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Comparator' → logprob: -2.069664333248511e-05
    2. 'Comparer' → logprob: -11.500020980834961
    3. '.Comparator' → logprob: -12.000020980834961
    4. 'com' → logprob: -12.625020980834961
    5. '   ' → logprob: -15.750020980834961
    6. '.com' → logprob: -15.875020980834961
    7. 'Compar' → logprob: -16.37502098083496
    8. 'Converter' → logprob: -16.62502098083496
    9. '(x' → logprob: -16.75002098083496
    10. ' Comparator' → logprob: -16.75002098083496

Token 1579: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.6331557631492615
    2. '(x' → logprob: -0.7581557631492615
    3. '.compare' → logprob: -9.133155822753906
    4. '_cmp' → logprob: -9.258155822753906
    5. '.' → logprob: -9.383155822753906
    6. 'Comparator' → logprob: -10.008155822753906
    7. '.com' → logprob: -10.258155822753906
    8. '_' → logprob: -10.258155822753906
    9. '.Comparator' → logprob: -10.633155822753906
    10. 'cmp' → logprob: -10.883155822753906

Token 1580: 'compare' (ID: 27773)
  Prédit: 'compare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compare' → logprob: -5.512236498361744e-07
    2. '_compare' → logprob: -15.125000953674316
    3. '.compare' → logprob: -16.0
    4. ' compare' → logprob: -16.875
    5. '(compare' → logprob: -17.0
    6. 'cmp' → logprob: -19.375
    7. '
' → logprob: -20.875
    8. 'Power' → logprob: -22.375
    9. 'combine' → logprob: -22.5
    10. 'Compare' → logprob: -22.5

Token 1581: '([' (ID: 5194)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.08483705669641495
    2. 'x' → logprob: -2.584836959838867
    3. '([' → logprob: -5.209836959838867
    4. '(' → logprob: -8.459836959838867
    5. '[x' → logprob: -8.959836959838867
    6. 'list' → logprob: -9.959836959838867
    7. '[' → logprob: -11.209836959838867
    8. '(list' → logprob: -11.209836959838867
    9. '(
' → logprob: -11.834836959838867
    10. '```' → logprob: -12.334836959838867

Token 1582: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9361264946837764e-07
    2. ' x' → logprob: -17.375
    3. '   ' → logprob: -17.625
    4. '           ' → logprob: -17.75
    5. '       ' → logprob: -18.625
    6. ']' → logprob: -19.125
    7. ')x' → logprob: -19.25
    8. 'y' → logprob: -19.5
    9. '(x' → logprob: -19.875
    10. ')' → logprob: -20.125

Token 1583: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18516220152378082
    2. '],' → logprob: -2.310162305831909
    3. ',y' → logprob: -2.810162305831909
    4. '],[' → logprob: -4.68516206741333
    5. '           ' → logprob: -9.060162544250488
    6. '       ' → logprob: -9.310162544250488
    7. ' ,' → logprob: -9.310162544250488
    8. 'y' → logprob: -11.560162544250488
    9. '   ' → logprob: -11.810162544250488
    10. '               ' → logprob: -11.935162544250488

Token 1584: ' [' (ID: 723)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.00014716439181938767
    2. ' [' → logprob: -8.875146865844727
    3. '[' → logprob: -12.125146865844727
    4. '       ' → logprob: -13.750146865844727
    5. '           ' → logprob: -14.750146865844727
    6. '   ' → logprob: -15.875146865844727
    7. '[Y' → logprob: -16.750146865844727
    8. '         ' → logprob: -16.875146865844727
    9. '[[' → logprob: -17.250146865844727
    10. '        ' → logprob: -18.125146865844727

Token 1585: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0001848254178185016
    2. '[y' → logprob: -8.625185012817383
    3. '[' → logprob: -12.875185012817383
    4. ' y' → logprob: -13.000185012817383
    5. '   ' → logprob: -16.375185012817383
    6. '           ' → logprob: -16.500185012817383
    7. ' [' → logprob: -16.500185012817383
    8. '       ' → logprob: -17.125185012817383
    9. '(y' → logprob: -17.375185012817383
    10. 'y's' → logprob: -17.375185012817383

Token 1586: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.9660285711288452
    2. '])
' → logprob: -1.0910285711288452
    3. ')' → logprob: -2.0910286903381348
    4. ')
' → logprob: -2.0910286903381348
    5. '           ' → logprob: -3.3410286903381348
    6. '       ' → logprob: -7.341028690338135
    7. '])
' → logprob: -9.216028213500977
    8. ')
' → logprob: -9.466028213500977
    9. '               ' → logprob: -9.966028213500977
    10. ')]' → logprob: -10.716028213500977

Token 1587: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003520277969073504
    2. '
' → logprob: -8.500351905822754
    3. ' return' → logprob: -10.125351905822754
    4. '          ' → logprob: -10.500351905822754
    5. 'return' → logprob: -10.875351905822754
    6. '<|end|>' → logprob: -11.625351905822754
    7. ':' → logprob: -11.750351905822754
    8. '       ' → logprob: -11.750351905822754
    9. '            
' → logprob: -11.875351905822754
    10. '               ' → logprob: -12.125351905822754

Token 1588: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00045700959162786603
    2. 'return' → logprob: -8.625456809997559
    3. '       ' → logprob: -8.875456809997559
    4. '               ' → logprob: -10.125456809997559
    5. ' return' → logprob: -10.375456809997559
    6. 'if' → logprob: -10.500456809997559
    7. ' if' → logprob: -11.125456809997559
    8. '          ' → logprob: -11.750456809997559
    9. '   ' → logprob: -11.875456809997559
    10. '
' → logprob: -13.000456809997559

Token 1589: ' _' (ID: 1175)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11991999298334122
    2. '           ' → logprob: -2.369920015335083
    3. 'if' → logprob: -4.369919776916504
    4. ' return' → logprob: -5.119919776916504
    5. '               ' → logprob: -7.744919776916504
    6. ' if' → logprob: -7.869919776916504
    7. '
' → logprob: -9.744919776916504
    8. '                   ' → logprob: -12.244919776916504
    9. '          ' → logprob: -12.744919776916504
    10. '                       ' → logprob: -12.994919776916504

Token 1590: 'compare' (ID: 27773)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.24028046429157257
    2. 'compare' → logprob: -1.9902805089950562
    3. 'if' → logprob: -3.4902803897857666
    4. 'cmp' → logprob: -3.6152803897857666
    5. 'comp' → logprob: -4.615280628204346
    6. 'def' → logprob: -6.365280628204346
    7. '       ' → logprob: -6.615280628204346
    8. 'func' → logprob: -7.240280628204346
    9. '_return' → logprob: -7.490280628204346
    10. '-' → logprob: -7.615280628204346

Token 1591: ' returns' (ID: 7377)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.556658148765564
    2. ' if' → logprob: -2.0566582679748535
    3. 'return' → logprob: -2.1816582679748535
    4. '           ' → logprob: -2.3066582679748535
    5. '       ' → logprob: -4.4316582679748535
    6. '-' → logprob: -4.4316582679748535
    7. ' return' → logprob: -4.8066582679748535
    8. '=' → logprob: -4.9316582679748535
    9. ',' → logprob: -5.0566582679748535
    10. '          ' → logprob: -5.0566582679748535

Token 1592: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.17126016318798065
    2. 'comp' → logprob: -2.296260118484497
    3. '1' → logprob: -3.046260118484497
    4. '0' → logprob: -5.671260356903076
    5. '-comp' → logprob: -6.421260356903076
    6. '           ' → logprob: -6.796260356903076
    7. ' -' → logprob: -6.796260356903076
    8. '(comp' → logprob: -7.046260356903076
    9. ' comp' → logprob: -7.296260356903076
    10. ' ' → logprob: -8.421259880065918

Token 1593: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0802738870552275e-05
    2. '           ' → logprob: -12.12501049041748
    3. ' ' → logprob: -12.37501049041748
    4. 'return' → logprob: -14.25001049041748
    5. '0' → logprob: -16.000011444091797
    6. 'cmp' → logprob: -17.000011444091797
    7. '       ' → logprob: -17.125011444091797
    8. '
' → logprob: -17.250011444091797
    9. '          ' → logprob: -17.375011444091797
    10. ',' → logprob: -17.500011444091797

Token 1594: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.014138355851173401
    2. ',' → logprob: -4.764138221740723
    3. 'if' → logprob: -5.264138221740723
    4. '           ' → logprob: -8.264138221740723
    5. ' ' → logprob: -10.764138221740723
    6. '<|end|>' → logprob: -11.639138221740723
    7. '          ' → logprob: -11.889138221740723
    8. '
' → logprob: -12.264138221740723
    9. '            ' → logprob: -12.389138221740723
    10. ' ,' → logprob: -12.389138221740723

Token 1595: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0055943261831998825
    2. 'comp' → logprob: -5.380594253540039
    3. ' x' → logprob: -7.380594253540039
    4. '1' → logprob: -8.380594253540039
    5. 'y' → logprob: -10.005594253540039
    6. 'cmp' → logprob: -10.380594253540039
    7. '-' → logprob: -10.505594253540039
    8. ' comp' → logprob: -11.380594253540039
    9. ' -' → logprob: -13.880594253540039
    10. '           ' → logprob: -13.880594253540039

Token 1596: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.062133047729730606
    2. '<' → logprob: -2.8121330738067627
    3. '<x' → logprob: -9.312132835388184
    4. ',' → logprob: -10.937132835388184
    5. ' ' → logprob: -11.437132835388184
    6. ' >' → logprob: -11.562132835388184
    7. '<w' → logprob: -12.562132835388184
    8. '.' → logprob: -12.562132835388184
    9. '>' → logprob: -12.687132835388184
    10. ')' → logprob: -13.062132835388184

Token 1597: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -7.672236824873835e-05
    2. ' y' → logprob: -9.500076293945312
    3. '1' → logprob: -13.750076293945312
    4. '           ' → logprob: -14.500076293945312
    5. '   ' → logprob: -16.125076293945312
    6. '       ' → logprob: -17.750076293945312
    7. ' ' → logprob: -17.875076293945312
    8. 'x' → logprob: -18.000076293945312
    9. '         ' → logprob: -18.500076293945312
    10. '               ' → logprob: -18.500076293945312

Token 1598: ' but' (ID: 889)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6999619603157043
    2. '           ' → logprob: -0.6999619603157043
    3. 'else' → logprob: -5.324962139129639
    4. ' else' → logprob: -7.074962139129639
    5. 'elif' → logprob: -7.824962139129639
    6. ',
' → logprob: -8.07496166229248
    7. '
' → logprob: -9.07496166229248
    8. 'return' → logprob: -9.44996166229248
    9. '          ' → logprob: -10.19996166229248
    10. '               ' → logprob: -10.19996166229248

Token 1599: ' we' (ID: 581)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.30347347259521484
    2. ' ' → logprob: -1.4284734725952148
    3. ' return' → logprob: -4.803473472595215
    4. 'return' → logprob: -4.928473472595215
    5. '           ' → logprob: -6.178473472595215
    6. '-' → logprob: -6.928473472595215
    7. 'comp' → logprob: -7.303473472595215
    8. '0' → logprob: -7.428473472595215
    9. ' x' → logprob: -7.803473472595215
    10. ' comp' → logprob: -7.928473472595215

Token 1600: ' want' (ID: 1682)
  Prédit: ' want'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' want' → logprob: -0.7423954606056213
    2. 'want' → logprob: -1.2423954010009766
    3. 'return' → logprob: -1.9923954010009766
    4. 'need' → logprob: -2.4923954010009766
    5. ' need' → logprob: -4.617395401000977
    6. ' return' → logprob: -5.742395401000977
    7. 'should' → logprob: -6.492395401000977
    8. '   ' → logprob: -8.117395401000977
    9. 'reverse' → logprob: -8.242395401000977
    10. '       ' → logprob: -8.242395401000977

Token 1601: ' descending' (ID: 89489)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2337731420993805
    2. '1' → logprob: -1.608773112297058
    3. '-y' → logprob: -5.108773231506348
    4. '-comp' → logprob: -6.983773231506348
    5. 'y' → logprob: -7.858773231506348
    6. ' -' → logprob: -7.983773231506348
    7. '(' → logprob: -8.983773231506348
    8. ' ' → logprob: -9.358773231506348
    9. '-c' → logprob: -9.608773231506348
    10. '+' → logprob: -9.733773231506348

Token 1602: ' order' (ID: 2569)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09016324579715729
    2. 'return' → logprob: -2.965163230895996
    3. ' return' → logprob: -4.340163230895996
    4. ':' → logprob: -4.465163230895996
    5. ':return' → logprob: -5.840163230895996
    6. ',
' → logprob: -6.465163230895996
    7. ' order' → logprob: -6.715163230895996
    8. ' ,' → logprob: -6.840163230895996
    9. ' if' → logprob: -7.340163230895996
    10. 'order' → logprob: -7.340163230895996

Token 1603: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29470938444137573
    2. '           ' → logprob: -1.7947094440460205
    3. 'return' → logprob: -2.9197094440460205
    4. '   ' → logprob: -4.669709205627441
    5. ' return' → logprob: -4.919709205627441
    6. '       ' → logprob: -5.044709205627441
    7. ',
' → logprob: -5.294709205627441
    8. ' if' → logprob: -5.794709205627441
    9. ':' → logprob: -7.169709205627441
    10. ':return' → logprob: -7.169709205627441

Token 1604: 'max' (ID: 3228)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7160587906837463
    2. '1' → logprob: -0.9660587906837463
    3. ' return' → logprob: -2.8410587310791016
    4. '-' → logprob: -2.8410587310791016
    5. '           ' → logprob: -5.341058731079102
    6. ' -' → logprob: -5.591058731079102
    7. ' ' → logprob: -5.966058731079102
    8. ')' → logprob: -6.966058731079102
    9. '+' → logprob: -7.841058731079102
    10. ',' → logprob: -8.091058731079102

Token 1605: ' tower' (ID: 35225)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7507867813110352
    2. ')' → logprob: -1.3757867813110352
    3. '           ' → logprob: -2.625786781311035
    4. 'return' → logprob: -3.000786781311035
    5. '),' → logprob: -3.625786781311035
    6. '       ' → logprob: -3.875786781311035
    7. 'def' → logprob: -4.125786781311035
    8. '=' → logprob: -4.500786781311035
    9. '               ' → logprob: -5.125786781311035
    10. '>' → logprob: -5.125786781311035

Token 1606: ' first' (ID: 1577)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6099552512168884
    2. ')
' → logprob: -1.7349553108215332
    3. '),' → logprob: -1.9849553108215332
    4. ')' → logprob: -3.234955310821533
    5. '           ' → logprob: -3.609955310821533
    6. ' if' → logprob: -3.609955310821533
    7. 'return' → logprob: -4.734955310821533
    8. ' return' → logprob: -4.984955310821533
    9. '):
' → logprob: -4.984955310821533
    10. ':' → logprob: -5.234955310821533

Token 1607: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04896259680390358
    2. ',' → logprob: -3.2989625930786133
    3. 'return' → logprob: -5.048962593078613
    4. ')
' → logprob: -6.798962593078613
    5. ')' → logprob: -7.173962593078613
    6. '
' → logprob: -7.798962593078613
    7. '),' → logprob: -8.048962593078613
    8. '       ' → logprob: -8.048962593078613
    9. ' return' → logprob: -8.298962593078613
    10. '-' → logprob: -8.548962593078613

Token 1608: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00200203456915915
    2. 'return' → logprob: -7.127002239227295
    3. ' return' → logprob: -7.127002239227295
    4. ' if' → logprob: -8.377001762390137
    5. '   ' → logprob: -9.002001762390137
    6. 'if' → logprob: -10.627001762390137
    7. '       ' → logprob: -11.752001762390137
    8. '               ' → logprob: -12.752001762390137
    9. ' ' → logprob: -13.752001762390137
    10. '```' → logprob: -13.752001762390137

Token 1609: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5169500112533569
    2. 'return' (adapté à ' return') → logprob: -1.516950011253357
    3. 'if' → logprob: -1.766950011253357
    4. ' if' → logprob: -4.5169501304626465
    5. ' return' → logprob: -6.0169501304626465
    6. '               ' → logprob: -10.016949653625488
    7. '   ' → logprob: -11.391949653625488
    8. '       ' → logprob: -11.516949653625488
    9. '
' → logprob: -13.766949653625488
    10. '```' → logprob: -13.766949653625488

Token 1610: ' -' (ID: 533)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1611: 'comp' (ID: 3697)
  Prédit: 'comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -15.875
    3. ' comp' → logprob: -16.375
    4. '(comp' → logprob: -16.5
    5. '	comp' → logprob: -17.25
    6. 'cmp' → logprob: -18.5
    7. '   ' → logprob: -21.375
    8. '.comp' → logprob: -22.0
    9. 'com' → logprob: -22.25
    10. '           ' → logprob: -22.75

Token 1612: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1613: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035130828619003296
    2. '<|end|>' → logprob: -4.285130977630615
    3. 'return' → logprob: -4.660130977630615
    4. '        
' → logprob: -5.535130977630615
    5. ' return' → logprob: -6.285130977630615
    6. '   ' → logprob: -6.285130977630615
    7. ')' → logprob: -6.410130977630615
    8. '  
' → logprob: -7.535130977630615
    9. '
' → logprob: -7.535130977630615
    10. '    
' → logprob: -8.035130500793457

Token 1614: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1202019453048706
    2. '       ' → logprob: -2.37020206451416
    3. 'self' → logprob: -4.12020206451416
    4. 'sorted' → logprob: -5.74520206451416
    5. '
' → logprob: -8.49520206451416
    6. ' return' → logprob: -9.49520206451416
    7. '```' → logprob: -10.12020206451416
    8. '   ' → logprob: -11.24520206451416
    9. '        
' → logprob: -11.87020206451416
    10. 'result' → logprob: -12.62020206451416

Token 1615: ' Sort' (ID: 25945)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4147253632545471
    2. 'sorted' → logprob: -1.1647253036499023
    3. 'self' → logprob: -3.6647253036499023
    4. '       ' → logprob: -6.414725303649902
    5. 'result' → logprob: -8.664725303649902
    6. 'from' → logprob: -10.164725303649902
    7. 'key' → logprob: -12.289725303649902
    8. '   ' → logprob: -12.914725303649902
    9. ' return' → logprob: -13.414725303649902
    10. '#' → logprob: -14.039725303649902

Token 1616: ' using' (ID: 2360)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3539014160633087
    2. 'return' → logprob: -1.8539013862609863
    3. 'sorted' → logprob: -2.2289013862609863
    4. '       ' → logprob: -3.6039013862609863
    5. 'reverse' → logprob: -5.228901386260986
    6. 'key' → logprob: -7.728901386260986
    7. 'result' → logprob: -8.103901863098145
    8. '(sorted' → logprob: -8.353901863098145
    9. ' self' → logprob: -10.353901863098145
    10. ' return' → logprob: -10.603901863098145

Token 1617: ' cmp' (ID: 57822)
  Prédit: 'cmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmp' → logprob: -0.03434718772768974
    2. 'sorted' → logprob: -3.5343472957611084
    3. 'self' → logprob: -5.534347057342529
    4. 'key' → logprob: -7.534347057342529
    5. ' cmp' → logprob: -9.534347534179688
    6. '       ' → logprob: -10.784347534179688
    7. 'sort' → logprob: -12.659347534179688
    8. '
' → logprob: -12.909347534179688
    9. '   ' → logprob: -13.159347534179688
    10. ' sorted' → logprob: -14.534347534179688

Token 1618: '_func' (ID: 22252)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0037559019401669502
    2. '_key' → logprob: -6.128756046295166
    3. 'key' → logprob: -7.253756046295166
    4. '_func' → logprob: -7.753756046295166
    5. 'to' → logprob: -8.628755569458008
    6. '=' → logprob: -8.753755569458008
    7. '       ' → logprob: -10.503755569458008
    8. '   ' → logprob: -10.753755569458008
    9. 'func' → logprob: -10.753755569458008
    10. '(key' → logprob: -11.503755569458008

Token 1619: ' then' (ID: 1815)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.9555145502090454
    2. '       ' → logprob: -1.2055145502090454
    3. 'self' → logprob: -1.2055145502090454
    4. 'return' → logprob: -4.455514430999756
    5. 'sorted' → logprob: -7.330514430999756
    6. ')' → logprob: -7.455514430999756
    7. '(' → logprob: -7.455514430999756
    8. '(sorted' → logprob: -7.705514430999756
    9. ',' → logprob: -7.830514430999756
    10. ' =' → logprob: -7.955514430999756

Token 1620: ' resolve' (ID: 14062)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31488120555877686
    2. 'return' → logprob: -1.5648812055587769
    3. 'sorted' → logprob: -2.8148813247680664
    4. '       ' → logprob: -7.314881324768066
    5. '
' → logprob: -8.064881324768066
    6. 'key' → logprob: -10.189881324768066
    7. 'result' → logprob: -10.689881324768066
    8. ' self' → logprob: -10.939881324768066
    9. 'reverse' → logprob: -11.189881324768066
    10. '```' → logprob: -11.314881324768066

Token 1621: ' ties' (ID: 35664)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5115858316421509
    2. '       ' → logprob: -2.1365857124328613
    3. 'return' → logprob: -2.3865857124328613
    4. 'sorted' → logprob: -2.7615857124328613
    5. '   ' → logprob: -3.2615857124328613
    6. 'reverse' → logprob: -3.7615857124328613
    7. 'lex' → logprob: -4.636585712432861
    8. '```' → logprob: -4.761585712432861
    9. '
' → logprob: -4.886585712432861
    10. 'key' → logprob: -5.011585712432861

Token 1622: ' lex' (ID: 37772)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0233702659606934
    2. '       ' → logprob: -1.0233702659606934
    3. '(self' → logprob: -1.8983702659606934
    4. 'self' → logprob: -2.5233702659606934
    5. 'with' → logprob: -4.648370265960693
    6. '<|end|>' → logprob: -5.398370265960693
    7. '```' → logprob: -5.523370265960693
    8. '=self' → logprob: -5.648370265960693
    9. ' with' → logprob: -5.648370265960693
    10. '=' → logprob: -5.898370265960693

Token 1623: ' order' (ID: 2569)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.4699685573577881
    2. '       ' → logprob: -1.094968557357788
    3. 'order' → logprob: -5.094968795776367
    4. ' order' → logprob: -5.094968795776367
    5. '   ' → logprob: -5.344968795776367
    6. '           ' → logprob: -5.844968795776367
    7. 'sort' → logprob: -6.094968795776367
    8. ')' → logprob: -6.219968795776367
    9. 'ical' → logprob: -6.219968795776367
    10. '```' → logprob: -6.469968795776367

Token 1624: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04048439487814903
    2. ',' → logprob: -4.290484428405762
    3. '_sorted' → logprob: -5.040484428405762
    4. ' =' → logprob: -5.290484428405762
    5. '.sort' → logprob: -5.415484428405762
    6. 'self' → logprob: -5.540484428405762
    7. 'sorted' → logprob: -7.165484428405762
    8. '=' → logprob: -7.290484428405762
    9. '(self' → logprob: -7.290484428405762
    10. ')' → logprob: -7.290484428405762

Token 1625: ' resulting' (ID: 20547)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0272319316864014
    2. 'case' → logprob: -1.6522319316864014
    3. 'the' → logprob: -2.0272319316864014
    4. 'place' → logprob: -2.1522319316864014
    5. '```' → logprob: -3.2772319316864014
    6. 'lambda' → logprob: -3.4022319316864014
    7. 'a' → logprob: -3.7772319316864014
    8. 'array' → logprob: -3.9022319316864014
    9. 'key' → logprob: -4.1522321701049805
    10. 'def' → logprob: -4.2772321701049805

Token 1626: ' sequence' (ID: 16281)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8646627068519592
    2. 'sequence' → logprob: -1.4896626472473145
    3. 'array' → logprob: -1.6146626472473145
    4. 'order' → logprob: -2.8646626472473145
    5. 'def' → logprob: -4.1146626472473145
    6. 'se' → logprob: -4.8646626472473145
    7. 'positions' → logprob: -4.9896626472473145
    8. 'lambda' → logprob: -5.1146626472473145
    9. 'sorted' → logprob: -5.1146626472473145
    10. ' order' → logprob: -5.1146626472473145

Token 1627: ' per' (ID: 777)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4960234463214874
    2. ',' → logprob: -1.246023416519165
    3. ')' → logprob: -3.121023416519165
    4. 'self' → logprob: -4.121023654937744
    5. ')
' → logprob: -4.371023654937744
    6. '```' → logprob: -4.371023654937744
    7. '.sort' → logprob: -5.371023654937744
    8. ',
' → logprob: -6.246023654937744
    9. ').' → logprob: -6.496023654937744
    10. '),' → logprob: -6.496023654937744

Token 1628: ' problem' (ID: 4792)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.2824113368988037
    2. 'self' → logprob: -2.1574113368988037
    3. '```' → logprob: -2.1574113368988037
    4. 'def' → logprob: -2.5324113368988037
    5. 'key' → logprob: -2.7824113368988037
    6. 'reverse' → logprob: -2.9074113368988037
    7. 'array' → logprob: -3.0324113368988037
    8. 'sorted' → logprob: -3.4074113368988037
    9. 'lambda' → logprob: -3.7824113368988037
    10. 'a' → logprob: -3.7824113368988037

Token 1629: ' statement' (ID: 9710)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5841323137283325
    2. '.sort' → logprob: -1.7091323137283325
    3. '=' → logprob: -2.334132194519043
    4. '```' → logprob: -2.959132194519043
    5. ' =' → logprob: -3.209132194519043
    6. ',' → logprob: -4.209132194519043
    7. '=True' → logprob: -4.584132194519043
    8. '.' → logprob: -4.959132194519043
    9. '[::-' → logprob: -4.959132194519043
    10. ':' → logprob: -5.084132194519043

Token 1630: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01788640022277832
    2. ',' → logprob: -4.642886161804199
    3. 'self' → logprob: -6.017886161804199
    4. '_sorted' → logprob: -6.767886161804199
    5. 'sorted' → logprob: -7.017886161804199
    6. '.sort' → logprob: -7.017886161804199
    7. '```' → logprob: -7.517886161804199
    8. ' =' → logprob: -7.767886161804199
    9. ')' → logprob: -7.767886161804199
    10. '        
' → logprob: -8.2678861618042

Token 1631: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010585333220660686
    2. 'sorted' → logprob: -7.626058578491211
    3. '```' → logprob: -8.501058578491211
    4. 'return' → logprob: -9.126058578491211
    5. '
' → logprob: -9.126058578491211
    6. 'self' → logprob: -9.626058578491211
    7. '        
' → logprob: -10.501058578491211
    8. ' sorted' → logprob: -10.876058578491211
    9. '_sorted' → logprob: -10.876058578491211
    10. ',' → logprob: -11.751058578491211

Token 1632: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05772143602371216
    2. 'sorted' → logprob: -3.6827213764190674
    3. 'return' → logprob: -3.9327213764190674
    4. '
' → logprob: -4.6827216148376465
    5. 'result' → logprob: -7.1827216148376465
    6. 'self' → logprob: -7.3077216148376465
    7. '```' → logprob: -7.9327216148376465
    8. ' sorted' → logprob: -9.182721138000488
    9. '_sorted' → logprob: -9.557721138000488
    10. '        
' → logprob: -10.057721138000488

Token 1633: ' Actually' (ID: 50557)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6965590119361877
    2. '       ' → logprob: -0.9465590119361877
    3. 'sorted' → logprob: -2.196558952331543
    4. 'self' → logprob: -6.446558952331543
    5. 'result' → logprob: -7.321558952331543
    6. '```' → logprob: -9.321558952331543
    7. '
' → logprob: -10.946558952331543
    8. 'res' → logprob: -11.071558952331543
    9. '_sorted' → logprob: -11.071558952331543
    10. '#' → logprob: -11.571558952331543

Token 1634: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.38946446776390076
    2. '       ' → logprob: -1.2644644975662231
    3. 'from' → logprob: -4.014464378356934
    4. 'sorted' → logprob: -4.639464378356934
    5. 'we' → logprob: -5.764464378356934
    6. 'import' → logprob: -6.639464378356934
    7. ':' → logprob: -6.639464378356934
    8. '
' → logprob: -6.639464378356934
    9. ',' → logprob: -6.764464378356934
    10. 'return' → logprob: -7.139464378356934

Token 1635: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3439701199531555
    2. 'sorted' → logprob: -1.8439700603485107
    3. '#' → logprob: -2.0939700603485107
    4. '       ' → logprob: -5.21897029876709
    5. 'result' → logprob: -6.34397029876709
    6. 'key' → logprob: -7.34397029876709
    7. 'return' → logprob: -7.59397029876709
    8. 'sequence' → logprob: -8.09397029876709
    9. 'def' → logprob: -8.21897029876709
    10. 'seq' → logprob: -8.34397029876709

Token 1636: ' problem' (ID: 4792)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.788128137588501
    2. 'sorted' → logprob: -1.413128137588501
    3. 'def' → logprob: -1.913128137588501
    4. 'result' → logprob: -2.663128137588501
    5. '#' → logprob: -3.163128137588501
    6. 'self' → logprob: -4.288127899169922
    7. ' array' → logprob: -4.913127899169922
    8. 'rest' → logprob: -5.413127899169922
    9. 'key' → logprob: -5.663127899169922
    10. 'final' → logprob: -5.788127899169922

Token 1637: ' says' (ID: 5003)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33288851380348206
    2. '   ' → logprob: -2.582888603210449
    3. 'def' → logprob: -3.082888603210449
    4. 'sort' → logprob: -3.457888603210449
    5. '#' → logprob: -3.957888603210449
    6. 'import' → logprob: -4.207888603210449
    7. 'is' → logprob: -4.332888603210449
    8. ':' → logprob: -4.332888603210449
    9. ' is' → logprob: -4.332888603210449
    10. '_sort' → logprob: -5.332888603210449

Token 1638: ' that' (ID: 484)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5867665410041809
    2. 'we' → logprob: -1.8367664813995361
    3. '#' → logprob: -1.9617664813995361
    4. '       ' → logprob: -3.336766481399536
    5. 'that' → logprob: -3.336766481399536
    6. '   ' → logprob: -3.961766481399536
    7. '"' → logprob: -4.586766719818115
    8. 'to' → logprob: -4.711766719818115
    9. 'just' → logprob: -5.211766719818115
    10. 'def' → logprob: -5.211766719818115

Token 1639: ' among' (ID: 6200)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9136252999305725
    2. 'self' → logprob: -1.0386252403259277
    3. 'sorted' → logprob: -2.0386252403259277
    4. '       ' → logprob: -2.9136252403259277
    5. 'return' → logprob: -3.6636252403259277
    6. '
' → logprob: -4.788625240325928
    7. 'the' → logprob: -5.163625240325928
    8. 'def' → logprob: -5.538625240325928
    9. 'result' → logprob: -5.913625240325928
    10. '   ' → logprob: -6.038625240325928

Token 1640: ' maximal' (ID: 65414)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.3877817988395691
    2. 'se' → logprob: -1.3877818584442139
    3. 't' → logprob: -4.137781620025635
    4. 'all' → logprob: -4.262781620025635
    5. 'elements' → logprob: -4.387781620025635
    6. 'numbers' → logprob: -4.637781620025635
    7. 'duplicates' → logprob: -5.137781620025635
    8. 'arrays' → logprob: -5.387781620025635
    9. 'def' → logprob: -5.887781620025635
    10. 'the' → logprob: -7.012781620025635

Token 1641: ' sequences' (ID: 45665)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.01914041116833687
    2. ' sequences' → logprob: -5.019140243530273
    3. 'self' → logprob: -5.269140243530273
    4. '#' → logprob: -5.894140243530273
    5. 'sequence' → logprob: -6.519140243530273
    6. 't' → logprob: -6.644140243530273
    7. 'def' → logprob: -7.769140243530273
    8. '   ' → logprob: -7.894140243530273
    9. 'sorted' → logprob: -8.144140243530273
    10. 'from' → logprob: -8.894140243530273

Token 1642: ' tie' (ID: 22244)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12998495995998383
    2. '       ' → logprob: -2.3799848556518555
    3. '#' → logprob: -4.7549848556518555
    4. 'the' → logprob: -4.8799848556518555
    5. ',
' → logprob: -5.7549848556518555
    6. ':' → logprob: -6.0049848556518555
    7. '.sort' → logprob: -6.3799848556518555
    8. 'we' → logprob: -6.5049848556518555
    9. 'sorted' → logprob: -6.6299848556518555
    10. ':
' → logprob: -7.6299848556518555

Token 1643: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5800061225891113
    2. '-break' → logprob: -1.8300061225891113
    3. 'break' → logprob: -1.8300061225891113
    4. '_break' → logprob: -2.4550061225891113
    5. 'breaker' → logprob: -5.330006122589111
    6. '           ' → logprob: -5.455006122589111
    7. '        ' → logprob: -5.455006122589111
    8. '-breaking' → logprob: -5.580006122589111
    9. 'def' → logprob: -6.080006122589111
    10. ')' → logprob: -6.330006122589111

Token 1644: ' tower' (ID: 35225)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.33673322200775146
    2. 'value' → logprob: -2.336733341217041
    3. 'values' → logprob: -2.711733341217041
    4. 'size' → logprob: -3.211733341217041
    5. 'lex' → logprob: -3.461733341217041
    6. 'terms' → logprob: -4.211733341217041
    7. 'elements' → logprob: -5.461733341217041
    8. '   ' → logprob: -5.461733341217041
    9. 't' → logprob: -5.961733341217041
    10. 'sort' → logprob: -6.086733341217041

Token 1645: ' value' (ID: 1432)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -2.142976999282837
    2. ',' → logprob: -2.267976999282837
    3. 'sort' → logprob: -2.267976999282837
    4. 'def' → logprob: -2.517976999282837
    5. '   ' → logprob: -2.642976999282837
    6. 'result' → logprob: -2.642976999282837
    7. 'ordering' → logprob: -2.767976999282837
    8. '_sort' → logprob: -2.892976999282837
    9. '       ' → logprob: -3.017976999282837
    10. 'order' → logprob: -3.142976999282837

Token 1646: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05290420353412628
    2. ',' → logprob: -3.3029041290283203
    3. '
' → logprob: -4.67790412902832
    4. ',
' → logprob: -6.05290412902832
    5. 'def' → logprob: -8.05290412902832
    6. ':
' → logprob: -8.05290412902832
    7. '#' → logprob: -8.17790412902832
    8. '.sort' → logprob: -8.17790412902832
    9. '.
' → logprob: -8.42790412902832
    10. 'import' → logprob: -8.42790412902832

Token 1647: ' pick' (ID: 5230)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8479864001274109
    2. '       ' → logprob: -0.8479864001274109
    3. 'we' → logprob: -2.9729864597320557
    4. 'the' → logprob: -2.9729864597320557
    5. 'return' → logprob: -3.3479864597320557
    6. 'self' → logprob: -6.472986221313477
    7. '           ' → logprob: -6.597986221313477
    8. 'sort' → logprob: -7.472986221313477
    9. ' the' → logprob: -7.972986221313477
    10. ' we' → logprob: -8.097986221313477

Token 1648: ' lex' (ID: 37772)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.2582164704799652
    2. 'lex' → logprob: -1.6332165002822876
    3. ' lex' → logprob: -4.008216381072998
    4. ' the' → logprob: -4.508216381072998
    5. '```' → logprob: -7.133216381072998
    6. '   ' → logprob: -7.258216381072998
    7. '#' → logprob: -7.633216381072998
    8. '       ' → logprob: -8.258216857910156
    9. 'x' → logprob: -8.633216857910156
    10. ' lexi' → logprob: -9.133216857910156

Token 1649: ' smallest' (ID: 42173)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1299358606338501
    2. 'ic' → logprob: -3.1299357414245605
    3. 'sort' → logprob: -3.1299357414245605
    4. '           ' → logprob: -4.6299357414245605
    5. ' sort' → logprob: -5.6299357414245605
    6. '   ' → logprob: -5.8799357414245605
    7. '.sort' → logprob: -6.0049357414245605
    8. ')' → logprob: -6.1299357414245605
    9. '_sort' → logprob: -6.2549357414245605
    10. ' order' → logprob: -6.5049357414245605

Token 1650: ' sequence' (ID: 16281)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007279337849467993
    2. 'sorted' → logprob: -5.757279396057129
    3. 'result' → logprob: -6.882279396057129
    4. ')
' → logprob: -7.382279396057129
    5. ')' → logprob: -7.507279396057129
    6. 'sequence' → logprob: -7.757279396057129
    7. '```' → logprob: -7.882279396057129
    8. 'def' → logprob: -8.507279396057129
    9. '#' → logprob: -8.507279396057129
    10. '_sorted' → logprob: -8.882279396057129

Token 1651: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029407329857349396
    2. '
' → logprob: -6.127940654754639
    3. '```' → logprob: -7.877940654754639
    4. '        
' → logprob: -8.627941131591797
    5. 'sorted' → logprob: -9.002941131591797
    6. 'from' → logprob: -10.752941131591797
    7. '#' → logprob: -11.752941131591797
    8. '_sorted' → logprob: -12.002941131591797
    9. 'import' → logprob: -12.252941131591797
    10. 'def' → logprob: -12.252941131591797

Token 1652: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004685137886554003
    2. '
' → logprob: -5.379684925079346
    3. 'sorted' → logprob: -10.754685401916504
    4. '```' → logprob: -10.754685401916504
    5. '        
' → logprob: -11.004685401916504
    6. '   ' → logprob: -13.879685401916504
    7. ' sorted' → logprob: -13.879685401916504
    8. 'from' → logprob: -14.004685401916504
    9. 'import' → logprob: -14.254685401916504
    10. '_sorted' → logprob: -14.504685401916504

Token 1653: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06233870983123779
    2. '
' → logprob: -2.8123388290405273
    3. 'sorted' → logprob: -8.187338829040527
    4. '        
' → logprob: -9.937338829040527
    5. '```' → logprob: -10.937338829040527
    6. 'from' → logprob: -11.687338829040527
    7. 'result' → logprob: -12.562338829040527
    8. '   ' → logprob: -12.687338829040527
    9. '_sorted' → logprob: -12.812338829040527
    10. 'import' → logprob: -12.812338829040527

Token 1654: ' Sorting' (ID: 152134)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10885496437549591
    2. 'sorted' → logprob: -2.3588550090789795
    3. 'result' → logprob: -5.7338547706604
    4. '#' → logprob: -5.7338547706604
    5. 'sequence' → logprob: -6.9838547706604
    6. 'from' → logprob: -8.108855247497559
    7. 'seq' → logprob: -8.483855247497559
    8. 'import' → logprob: -8.608855247497559
    9. 'res' → logprob: -8.858855247497559
    10. '
' → logprob: -9.358855247497559

Token 1655: ' ascending' (ID: 75564)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.12404655665159225
    2. 'self' → logprob: -2.874046564102173
    3. '       ' → logprob: -3.624046564102173
    4. '(
' → logprob: -4.124046325683594
    5. 'def' → logprob: -5.749046325683594
    6. 'key' → logprob: -6.249046325683594
    7. ' =' → logprob: -6.374046325683594
    8. '   ' → logprob: -6.374046325683594
    9. 'with' → logprob: -6.499046325683594
    10. 'is' → logprob: -6.874046325683594

Token 1656: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14088283479213715
    2. '(self' → logprob: -2.765882730484009
    3. ' =' → logprob: -3.765882730484009
    4. ',' → logprob: -4.640882968902588
    5. '[::-' → logprob: -5.640882968902588
    6. '(reverse' → logprob: -5.765882968902588
    7. '.reverse' → logprob: -5.765882968902588
    8. 'def' → logprob: -5.890882968902588
    9. ':
' → logprob: -6.015882968902588
    10. 'reverse' → logprob: -6.140882968902588

Token 1657: ' cmp' (ID: 57822)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06307049095630646
    2. 'lambda' → logprob: -2.93807053565979
    3. 'key' → logprob: -5.688070297241211
    4. 'x' → logprob: -6.188070297241211
    5. 'reverse' → logprob: -6.938070297241211
    6. ')' → logprob: -8.563070297241211
    7. 'Power' → logprob: -8.563070297241211
    8. '
' → logprob: -8.813070297241211
    9. 'cmp' → logprob: -8.813070297241211
    10. ' self' → logprob: -8.813070297241211

Token 1658: '_func' (ID: 22252)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5297613739967346
    2. '(self' → logprob: -1.2797613143920898
    3. ' =' → logprob: -2.52976131439209
    4. ')
' → logprob: -4.27976131439209
    5. ')' → logprob: -4.65476131439209
    6. ',' → logprob: -5.40476131439209
    7. '):
' → logprob: -5.52976131439209
    8. 'self' → logprob: -5.77976131439209
    9. 'def' → logprob: -5.90476131439209
    10. '
' → logprob: -6.52976131439209

Token 1659: ' implements' (ID: 8227)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6873775124549866
    2. '       ' → logprob: -0.8123775124549866
    3. 'self' → logprob: -3.812377452850342
    4. '(reverse' → logprob: -4.937377452850342
    5. ' =' → logprob: -5.687377452850342
    6. 'return' → logprob: -5.937377452850342
    7. '(' → logprob: -6.062377452850342
    8. 'reverse' → logprob: -6.187377452850342
    9. 'def' → logprob: -6.187377452850342
    10. '(sorted' → logprob: -6.437377452850342

Token 1660: ' sorting' (ID: 51375)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.13217590749263763
    2. 'a' → logprob: -3.007175922393799
    3. 'that' → logprob: -3.007175922393799
    4. 'correct' → logprob: -5.257175922393799
    5. 'stable' → logprob: -5.257175922393799
    6. 'cmp' → logprob: -6.132175922393799
    7. 'this' → logprob: -6.132175922393799
    8. 'x' → logprob: -6.257175922393799
    9. 'lambda' → logprob: -6.507175922393799
    10. '#' → logprob: -6.507175922393799

Token 1661: ' descending' (ID: 89489)
  Prédit: '(reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -1.1514145135879517
    2. ',' → logprob: -1.7764145135879517
    3. '(self' → logprob: -1.7764145135879517
    4. '.reverse' → logprob: -2.901414394378662
    5. 'reverse' → logprob: -3.026414394378662
    6. '_reverse' → logprob: -3.276414394378662
    7. '(
' → logprob: -3.276414394378662
    8. '       ' → logprob: -3.401414394378662
    9. '(key' → logprob: -3.901414394378662
    10. '.' → logprob: -4.151414394378662

Token 1662: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002876676619052887
    2. '
' → logprob: -7.0028767585754395
    3. ',' → logprob: -8.002876281738281
    4. '[::-' → logprob: -8.252876281738281
    5. '```' → logprob: -8.627876281738281
    6. '()
' → logprob: -8.752876281738281
    7. '(' → logprob: -9.127876281738281
    8. ' =' → logprob: -9.252876281738281
    9. '(self' → logprob: -9.502876281738281
    10. '        
' → logprob: -9.627876281738281

Token 1663: ' tower' (ID: 35225)
  Prédit: 'cmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cmp' → logprob: -0.12218886613845825
    2. 'Power' → logprob: -3.1221888065338135
    3. 'lambda' → logprob: -3.4971888065338135
    4. 'value' → logprob: -3.8721888065338135
    5. 'key' → logprob: -4.747189044952393
    6. 'x' → logprob: -4.872189044952393
    7. 'comp' → logprob: -6.622189044952393
    8. 'Value' → logprob: -7.997189044952393
    9. 'power' → logprob: -8.247188568115234
    10. '
' → logprob: -8.372188568115234

Token 1664: ' value' (ID: 1432)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5949789881706238
    2. ']' → logprob: -2.2199790477752686
    3. '(self' → logprob: -2.2199790477752686
    4. '```' → logprob: -3.5949790477752686
    5. '.' → logprob: -3.8449790477752686
    6. '(reverse' → logprob: -3.9699790477752686
    7. '   ' → logprob: -3.9699790477752686
    8. ')' → logprob: -4.3449788093566895
    9. '[::-' → logprob: -4.3449788093566895
    10. ' =' → logprob: -4.8449788093566895

Token 1665: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002649144036695361
    2. '
' → logprob: -6.377649307250977
    3. ')
' → logprob: -8.002649307250977
    4. '        
' → logprob: -8.252649307250977
    5. ')' → logprob: -9.127649307250977
    6. 'return' → logprob: -10.502649307250977
    7. ',' → logprob: -10.627649307250977
    8. '   ' → logprob: -10.877649307250977
    9. '()
' → logprob: -10.877649307250977
    10. '```' → logprob: -10.877649307250977

Token 1666: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9122535586357117
    2. ' reverse' → logprob: -1.0372536182403564
    3. ' key' → logprob: -2.0372536182403564
    4. 'reverse' → logprob: -2.6622536182403564
    5. ' but' → logprob: -4.287253379821777
    6. ' then' → logprob: -4.537253379821777
    7. ' so' → logprob: -5.037253379821777
    8. ' and' → logprob: -5.162253379821777
    9. 'key' → logprob: -6.662253379821777
    10. ',' → logprob: -6.787253379821777

Token 1667: ' lex' (ID: 37772)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12484200298786163
    2. 'return' → logprob: -2.4998419284820557
    3. '       ' → logprob: -3.8748419284820557
    4. 'sorted' → logprob: -4.749842166900635
    5. 'result' → logprob: -5.624842166900635
    6. 'sequence' → logprob: -6.499842166900635
    7. ' #' → logprob: -8.874841690063477
    8. 'final' → logprob: -9.124841690063477
    9. 'the' → logprob: -9.374841690063477
    10. ' return' → logprob: -9.374841690063477

Token 1668: ' order' (ID: 2569)
  Prédit: ' smallest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' smallest' → logprob: -0.4185664653778076
    2. ' smaller' → logprob: -1.9185664653778076
    3. '_func' → logprob: -3.0435664653778076
    4. ' _' → logprob: -3.6685664653778076
    5. '_small' → logprob: -3.6685664653778076
    6. '```' → logprob: -3.6685664653778076
    7. ')' → logprob: -4.043566703796387
    8. '       ' → logprob: -5.168566703796387
    9. 'small' → logprob: -5.543566703796387
    10. 'import' → logprob: -5.543566703796387

Token 1669: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0381505489349365
    2. '       ' → logprob: -1.2881505489349365
    3. '=' → logprob: -2.2881505489349365
    4. '=True' → logprob: -2.6631505489349365
    5. 'def' → logprob: -3.4131505489349365
    6. ',' → logprob: -3.9131505489349365
    7. '   ' → logprob: -3.9131505489349365
    8. ' is' → logprob: -4.038150787353516
    9. '):
' → logprob: -4.288150787353516
    10. ' should' → logprob: -4.413150787353516

Token 1670: ' automatically' (ID: 14188)
  Prédit: 'pres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pres' → logprob: -0.34125834703445435
    2. 'handled' → logprob: -2.9662582874298096
    3. 'ens' → logprob: -3.2162582874298096
    4. 'used' → logprob: -3.3412582874298096
    5. 'maint' → logprob: -3.3412582874298096
    6. 'implicitly' → logprob: -3.9662582874298096
    7. 'natur' → logprob: -4.091258525848389
    8. 'gu' → logprob: -4.591258525848389
    9. '       ' → logprob: -4.591258525848389
    10. '           ' → logprob: -4.841258525848389

Token 1671: ' preserved' (ID: 59936)
  Prédit: 'pres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pres' → logprob: -0.5592876672744751
    2. 'handled' → logprob: -1.684287667274475
    3. 'ens' → logprob: -2.0592875480651855
    4. ' preserved' → logprob: -3.0592875480651855
    5. 'consider' → logprob: -3.4342875480651855
    6. 'maint' → logprob: -4.4342875480651855
    7. 'res' → logprob: -5.1842875480651855
    8. ' respected' → logprob: -5.5592875480651855
    9. ' handled' → logprob: -5.9342875480651855
    10. '   ' → logprob: -6.4342875480651855

Token 1672: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18536187708377838
    2. ',' → logprob: -2.185361862182617
    3. ')' → logprob: -4.310361862182617
    4. ')
' → logprob: -4.685361862182617
    5. '<|end|>' → logprob: -4.810361862182617
    6. '        
' → logprob: -4.935361862182617
    7. ',
' → logprob: -5.060361862182617
    8. '
' → logprob: -5.185361862182617
    9. ' in' → logprob: -6.935361862182617
    10. '[::-' → logprob: -7.310361862182617

Token 1673: ' stable' (ID: 22105)
  Prédit: 'stable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stable' → logprob: -0.028215529397130013
    2. 'sorted' → logprob: -4.528215408325195
    3. 'sort' → logprob: -4.653215408325195
    4. 'the' → logprob: -5.028215408325195
    5. 'case' → logprob: -7.653215408325195
    6. 'Python' → logprob: -9.403215408325195
    7. ' stable' → logprob: -9.528215408325195
    8. 'a' → logprob: -9.903215408325195
    9. 'sorting' → logprob: -9.903215408325195
    10. 'python' → logprob: -10.278215408325195

Token 1674: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.0005734055885113776
    2. ' sort' → logprob: -8.25057315826416
    3. '_sort' → logprob: -9.25057315826416
    4. 'sorting' → logprob: -9.37557315826416
    5. 'sorted' → logprob: -9.37557315826416
    6. '=True' → logprob: -10.25057315826416
    7. ' sorting' → logprob: -12.50057315826416
    8. ')' → logprob: -12.75057315826416
    9. ' manner' → logprob: -14.25057315826416
    10. 'order' → logprob: -14.37557315826416

Token 1675: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02666715905070305
    2. '
' → logprob: -3.7766671180725098
    3. ')
' → logprob: -6.90166711807251
    4. '        
' → logprob: -7.02666711807251
    5. ',' → logprob: -7.27666711807251
    6. ')' → logprob: -8.526667594909668
    7. '.sort' → logprob: -9.276667594909668
    8. ',
' → logprob: -9.526667594909668
    9. '[::-' → logprob: -9.776667594909668
    10. '

' → logprob: -10.401667594909668

Token 1676: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010010129772126675
    2. '
' → logprob: -7.126000881195068
    3. 'sorted' → logprob: -9.126001358032227
    4. '```' → logprob: -9.626001358032227
    5. '        
' → logprob: -11.626001358032227
    6. '   ' → logprob: -12.626001358032227
    7. 'result' → logprob: -12.751001358032227
    8. ' sorted' → logprob: -13.626001358032227
    9. 'sort' → logprob: -13.751001358032227
    10. 'return' → logprob: -13.751001358032227

Token 1677: ' sorted' (ID: 20099)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7562202215194702
    2. 'self' → logprob: -1.5062202215194702
    3. 'return' → logprob: -1.7562202215194702
    4. 'sorted' (adapté à ' sorted') → logprob: -2.0062203407287598
    5. 'result' → logprob: -6.63122034072876
    6. ' self' → logprob: -9.756219863891602
    7. ' sorted' → logprob: -9.881219863891602
    8. '```' → logprob: -10.131219863891602
    9. '
' → logprob: -10.256219863891602
    10. 'import' → logprob: -10.756219863891602

Token 1678: '_arr' (ID: 25121)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0041158003732562065
    2. 'self' → logprob: -5.629115581512451
    3. '(
' → logprob: -7.879115581512451
    4. '=self' → logprob: -9.87911605834961
    5. '(' → logprob: -10.50411605834961
    6. ' =' → logprob: -11.00411605834961
    7. '   ' → logprob: -11.25411605834961
    8. '[self' → logprob: -11.87911605834961
    9. '=' → logprob: -12.12911605834961
    10. '```' → logprob: -12.37911605834961

Token 1679: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023333296179771423
    2. ' =' → logprob: -3.7733333110809326
    3. '=self' → logprob: -9.898333549499512
    4. '(sorted' → logprob: -10.523333549499512
    5. '(self' → logprob: -11.898333549499512
    6. '       ' → logprob: -13.148333549499512
    7. '_sorted' → logprob: -15.023333549499512
    8. '=list' → logprob: -15.148333549499512
    9. '   ' → logprob: -15.273333549499512
    10. '=[]' → logprob: -15.523333549499512

Token 1680: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -4.36574100604048e-06
    2. ' sorted' → logprob: -12.750004768371582
    3. '       ' → logprob: -13.750004768371582
    4. '   ' → logprob: -14.750004768371582
    5. '(sorted' → logprob: -19.625003814697266
    6. '           ' → logprob: -20.625003814697266
    7. '.sorted' → logprob: -20.875003814697266
    8. 'self' → logprob: -23.375003814697266
    9. '    ' → logprob: -23.375003814697266
    10. '  ' → logprob: -23.500003814697266

Token 1681: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.632542913896032e-05
    2. '(
' → logprob: -10.250046730041504
    3. '(' → logprob: -11.625046730041504
    4. 'self' → logprob: -13.250046730041504
    5. '       ' → logprob: -16.500045776367188
    6. '   ' → logprob: -17.875045776367188
    7. ' self' → logprob: -18.875045776367188
    8. '[self' → logprob: -18.875045776367188
    9. '=self' → logprob: -19.000045776367188
    10. '	self' → logprob: -19.625045776367188

Token 1682: '.array' (ID: 14557)
  Prédit: '.array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.array' → logprob: -0.0037183654494583607
    2. 'self' → logprob: -5.878718376159668
    3. 'array' → logprob: -7.378718376159668
    4. '.arr' → logprob: -9.128718376159668
    5. '=array' → logprob: -9.628718376159668
    6. '   ' → logprob: -10.128718376159668
    7. ',' → logprob: -11.128718376159668
    8. '=self' → logprob: -11.503718376159668
    9. '_array' → logprob: -11.503718376159668
    10. ' self' → logprob: -12.003718376159668

Token 1683: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002827700227499008
    2. ',key' → logprob: -5.8778276443481445
    3. ' ,' → logprob: -11.752827644348145
    4. ')' → logprob: -11.877827644348145
    5. ',
' → logprob: -12.127827644348145
    6. 'key' → logprob: -13.252827644348145
    7. '   ' → logprob: -15.252827644348145
    8. ')
' → logprob: -15.377827644348145
    9. '(),' → logprob: -16.25282859802246
    10. '       ' → logprob: -16.25282859802246

Token 1684: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.0005396892665885389
    2. 'reverse' → logprob: -8.000539779663086
    3. ' key' → logprob: -8.500539779663086
    4. '   ' → logprob: -14.750539779663086
    5. 'cmp' → logprob: -16.000539779663086
    6. ',key' → logprob: -16.125539779663086
    7. '(key' → logprob: -16.250539779663086
    8. '       ' → logprob: -16.625539779663086
    9. '           ' → logprob: -16.750539779663086
    10. ' reverse' → logprob: -16.875539779663086

Token 1685: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1472419600977446e-06
    2. '=lambda' → logprob: -14.000000953674316
    3. 'cmp' → logprob: -15.375000953674316
    4. '=
' → logprob: -17.375001907348633
    5. '=cut' → logprob: -18.375001907348633
    6. ' =' → logprob: -18.625001907348633
    7. '   ' → logprob: -19.250001907348633
    8. '       ' → logprob: -19.875001907348633
    9. 'from' → logprob: -20.375001907348633
    10. 'import' → logprob: -20.750001907348633

Token 1686: 'cmp' (ID: 15231)
  Prédit: 'cmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmp' → logprob: -5.512236498361744e-07
    2. ' cmp' → logprob: -15.500000953674316
    3. '=' → logprob: -16.125
    4. 'cm' → logprob: -16.375
    5. '   ' → logprob: -17.375
    6. '       ' → logprob: -18.5
    7. 'lambda' → logprob: -19.0
    8. '           ' → logprob: -19.5
    9. '         ' → logprob: -19.75
    10. '
' → logprob: -19.75

Token 1687: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -5.512236498361744e-07
    2. 'to' → logprob: -15.125000953674316
    3. '_TO' → logprob: -16.75
    4. 'To' → logprob: -16.875
    5. 't' → logprob: -17.125
    6. '_t' → logprob: -17.875
    7. '_func' → logprob: -18.125
    8. '_key' → logprob: -18.125
    9. '   ' → logprob: -18.25
    10. 's' → logprob: -18.5

Token 1688: '_key' (ID: 6724)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.07889407873153687
    2. '_key' → logprob: -2.5788941383361816
    3. 'ey' → logprob: -12.453893661499023
    4. ' key' → logprob: -16.453893661499023
    5. '(key' → logprob: -16.453893661499023
    6. '```' → logprob: -16.453893661499023
    7. '-key' → logprob: -17.453893661499023
    8. 'k' → logprob: -17.453893661499023
    9. '	key' → logprob: -17.453893661499023
    10. 'import' → logprob: -17.828893661499023

Token 1689: '(c' (ID: 2410)
  Prédit: 'cmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cmp' → logprob: -0.0038326175417751074
    2. 'lambda' → logprob: -5.628832817077637
    3. 'Power' → logprob: -9.003832817077637
    4. '(lambda' → logprob: -9.253832817077637
    5. ' cmp' → logprob: -12.753832817077637
    6. '=lambda' → logprob: -12.878832817077637
    7. 'cm' → logprob: -13.003832817077637
    8. ')' → logprob: -14.003832817077637
    9. '       ' → logprob: -14.003832817077637
    10. '_cmp' → logprob: -14.128832817077637

Token 1690: 'mp' (ID: 2211)
  Prédit: 'mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.0003066222125198692
    2. 'omp' → logprob: -8.625307083129883
    3. 'om' → logprob: -9.875307083129883
    4. 'cmp' → logprob: -11.125307083129883
    5. '_power' → logprob: -11.250307083129883
    6. 'p' → logprob: -11.500307083129883
    7. 'pm' → logprob: -12.250307083129883
    8. 'm' → logprob: -12.250307083129883
    9. '_mp' → logprob: -12.375307083129883
    10. 'Power' → logprob: -12.500307083129883

Token 1691: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -3.786196975852363e-05
    2. '_' → logprob: -10.500038146972656
    3. ')' → logprob: -12.500038146972656
    4. '_to' → logprob: -13.250038146972656
    5. 'func' → logprob: -13.375038146972656
    6. ')_' → logprob: -13.750038146972656
    7. '_FUNC' → logprob: -14.500038146972656
    8. '_)' → logprob: -15.375038146972656
    9. '_fun' → logprob: -15.375038146972656
    10. '))' → logprob: -15.625038146972656

Token 1692: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3340097963809967
    2. ')' → logprob: -1.3340097665786743
    3. ',' → logprob: -3.959009885787964
    4. '),' → logprob: -6.584009647369385
    5. '))
' → logprob: -9.959010124206543
    6. ')
' → logprob: -11.334010124206543
    7. '       ' → logprob: -12.709010124206543
    8. ')))' → logprob: -13.209010124206543
    9. '   ' → logprob: -13.459010124206543
    10. ')`' → logprob: -13.959010124206543

Token 1693: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19790706038475037
    2. 'return' → logprob: -1.8229070901870728
    3. '
' → logprob: -4.572906970977783
    4. '        
' → logprob: -5.822906970977783
    5. '[::-' → logprob: -6.197906970977783
    6. ' return' → logprob: -6.697906970977783
    7. ',' → logprob: -7.947906970977783
    8. ')
' → logprob: -8.447907447814941
    9. ')' → logprob: -8.697907447814941
    10. '[]
' → logprob: -8.822907447814941

Token 1694: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009710881859064102
    2. '       ' → logprob: -4.759710788726807
    3. 'if' → logprob: -7.384710788726807
    4. '#' (adapté à ' #') → logprob: -8.384711265563965
    5. '
' → logprob: -9.259711265563965
    6. 'for' → logprob: -9.509711265563965
    7. 'i' → logprob: -9.884711265563965
    8. ' return' → logprob: -11.759711265563965
    9. '```' → logprob: -11.759711265563965
    10. '        
' → logprob: -12.759711265563965

Token 1695: ' For' (ID: 2214)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01871345564723015
    2. '#' → logprob: -4.143713474273682
    3. 'if' → logprob: -6.643713474273682
    4. '       ' → logprob: -6.893713474273682
    5. 'for' → logprob: -8.518712997436523
    6. 'from' → logprob: -9.768712997436523
    7. 'import' → logprob: -10.768712997436523
    8. 'def' → logprob: -11.393712997436523
    9. 'n' → logprob: -11.518712997436523
    10. '   ' → logprob: -11.643712997436523

Token 1696: ' possible' (ID: 4149)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07365654408931732
    2. 'equal' → logprob: -3.6986565589904785
    3. 'seq' → logprob: -4.4486565589904785
    4. 'st' → logprob: -4.9486565589904785
    5. 'arr' → logprob: -4.9486565589904785
    6. 'stable' → logprob: -5.4486565589904785
    7. 'idx' → logprob: -6.1986565589904785
    8. 'se' → logprob: -6.1986565589904785
    9. 'len' → logprob: -6.4486565589904785
    10. 'same' → logprob: -6.4486565589904785

Token 1697: ' duplicates' (ID: 91135)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20042085647583008
    2. '_duplicates' → logprob: -2.70042085647583
    3. 'tie' → logprob: -3.57542085647583
    4. 'duplicates' → logprob: -4.45042085647583
    5. '_duplicate' → logprob: -4.82542085647583
    6. 't' → logprob: -4.82542085647583
    7. 'len' → logprob: -5.20042085647583
    8. '_same' → logprob: -5.20042085647583
    9. '_small' → logprob: -5.45042085647583
    10. '_t' → logprob: -5.45042085647583

Token 1698: ' creating' (ID: 9278)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.721049427986145
    2. 'i' → logprob: -1.596049427986145
    3. '
' → logprob: -2.0960493087768555
    4. 'from' → logprob: -2.2210493087768555
    5. 'if' → logprob: -3.8460493087768555
    6. 'for' → logprob: -3.9710493087768555
    7. 'count' → logprob: -4.5960493087768555
    8. 'counts' → logprob: -5.0960493087768555
    9. 'prev' → logprob: -5.2210493087768555
    10. '#' → logprob: -5.2210493087768555

Token 1699: ' same' (ID: 2684)
  Prédit: 'runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'runs' → logprob: -0.3963187634944916
    2. 'equal' → logprob: -2.3963186740875244
    3. 'i' → logprob: -3.1463186740875244
    4. 'blocks' → logprob: -3.5213186740875244
    5. 'groups' → logprob: -3.6463186740875244
    6. '#' → logprob: -4.0213189125061035
    7. 'prefix' → logprob: -4.1463189125061035
    8. 'tie' → logprob: -4.1463189125061035
    9. 'possible' → logprob: -4.7713189125061035
    10. 'conf' → logprob: -4.7713189125061035

Token 1700: ' power' (ID: 3470)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.727488100528717
    2. 'values' → logprob: -1.3524880409240723
    3. 'tower' → logprob: -2.7274880409240723
    4. 'sorted' → logprob: -2.8524880409240723
    5. 't' → logprob: -2.9774880409240723
    6. 'elements' → logprob: -3.7274880409240723
    7. 'result' → logprob: -4.102488040924072
    8. 'sequence' → logprob: -4.727488040924072
    9. 'se' → logprob: -4.977488040924072
    10. 'prefix' → logprob: -5.352488040924072

Token 1701: ' tower' (ID: 35225)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7059868574142456
    2. '_t' → logprob: -1.7059868574142456
    3. '       ' → logprob: -1.9559868574142456
    4. 'tower' → logprob: -2.830986976623535
    5. 'sorted' → logprob: -3.330986976623535
    6. '   ' → logprob: -3.330986976623535
    7. '_sorted' → logprob: -3.455986976623535
    8. 'arr' → logprob: -5.455986976623535
    9. '#' → logprob: -5.705986976623535
    10. 's' → logprob: -5.830986976623535

Token 1702: ' value' (ID: 1432)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47212690114974976
    2. '#' → logprob: -2.0971269607543945
    3. 'from' → logprob: -2.8471269607543945
    4. 'result' → logprob: -3.2221269607543945
    5. ',' → logprob: -3.3471269607543945
    6. '```' → logprob: -3.4721269607543945
    7. 'i' → logprob: -3.7221269607543945
    8. 'def' → logprob: -4.2221269607543945
    9. 'prev' → logprob: -5.0971269607543945
    10. 'while' → logprob: -5.0971269607543945

Token 1703: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9330326914787292
    2. 'i' → logprob: -1.433032751083374
    3. '
' → logprob: -1.558032751083374
    4. 'for' → logprob: -2.558032751083374
    5. '#' → logprob: -3.058032751083374
    6. 'from' → logprob: -4.558032512664795
    7. 'def' → logprob: -5.308032512664795
    8. ',' → logprob: -5.683032512664795
    9. 'while' → logprob: -5.683032512664795
    10. 'if' → logprob: -5.808032512664795

Token 1704: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02150060050189495
    2. '#' → logprob: -4.521500587463379
    3. 'i' → logprob: -4.896500587463379
    4. ' i' → logprob: -7.146500587463379
    5. '```' → logprob: -7.271500587463379
    6. '
' → logprob: -7.396500587463379
    7. 'index' → logprob: -8.146500587463379
    8. 'for' → logprob: -8.646500587463379
    9. '``' → logprob: -9.771500587463379
    10. 'idx' → logprob: -10.021500587463379

Token 1705: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5977912545204163
    2. '#' (adapté à ' #') → logprob: -1.0977911949157715
    3. '       ' → logprob: -2.4727911949157715
    4. '
' → logprob: -4.8477911949157715
    5. 'for' → logprob: -4.8477911949157715
    6. 'from' → logprob: -5.2227911949157715
    7. 'sorted' → logprob: -5.4727911949157715
    8. 'index' → logprob: -5.9727911949157715
    9. 'idx' → logprob: -6.5977911949157715
    10. 'def' → logprob: -7.5977911949157715

Token 1706: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11329107731580734
    2. 'i' → logprob: -2.488291025161743
    3. '       ' → logprob: -4.113291263580322
    4. 'start' → logprob: -6.363291263580322
    5. 'from' → logprob: -6.613291263580322
    6. 'idx' → logprob: -6.988291263580322
    7. 'for' → logprob: -7.113291263580322
    8. 'def' → logprob: -7.363291263580322
    9. 'index' → logprob: -7.363291263580322
    10. 'group' → logprob: -7.738291263580322

Token 1707: ' might' (ID: 3572)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.32718586921691895
    2. 'return' → logprob: -2.077185869216919
    3. 'def' → logprob: -2.952185869216919
    4. 'need' → logprob: -4.20218563079834
    5. 'try' → logprob: -4.32718563079834
    6. 'continue' → logprob: -4.45218563079834
    7. '
' → logprob: -4.45218563079834
    8. '       ' → logprob: -4.95218563079834
    9. 'group' → logprob: -4.95218563079834
    10. '   ' → logprob: -5.20218563079834

Token 1708: ' want' (ID: 1682)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9618702530860901
    2. '#' → logprob: -1.5868701934814453
    3. 'need' → logprob: -2.0868701934814453
    4. 'def' → logprob: -2.9618701934814453
    5. 'sort' → logprob: -2.9618701934814453
    6. 'return' → logprob: -3.2118701934814453
    7. '
' → logprob: -3.4618701934814453
    8. '```' → logprob: -3.5868701934814453
    9. 'res' → logprob: -3.7118701934814453
    10. 'group' → logprob: -4.711870193481445

Token 1709: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.3469139039516449
    2. '       ' → logprob: -1.7219139337539673
    3. 'from' → logprob: -3.2219138145446777
    4. 'def' → logprob: -3.9719138145446777
    5. 'for' → logprob: -3.9719138145446777
    6. 'i' → logprob: -4.096913814544678
    7. '
' → logprob: -4.596913814544678
    8. ' to' → logprob: -5.346913814544678
    9. '#' → logprob: -5.471913814544678
    10. 'return' → logprob: -8.096914291381836

Token 1710: ' verify' (ID: 14866)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9061439633369446
    2. 'from' → logprob: -1.0311439037322998
    3. 'i' → logprob: -2.1561439037323
    4. 'for' → logprob: -2.6561439037323
    5. 'group' → logprob: -3.4061439037323
    6. 'def' → logprob: -4.531144142150879
    7. 'res' → logprob: -6.406144142150879
    8. 'final' → logprob: -6.656144142150879
    9. 'import' → logprob: -6.781144142150879
    10. 'pass' → logprob: -7.406144142150879

Token 1711: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6071451902389526
    2. '#' → logprob: -1.9821451902389526
    3. '       ' → logprob: -2.357145309448242
    4. 'for' → logprob: -2.857145309448242
    5. 'i' → logprob: -2.982145309448242
    6. '```' → logprob: -3.107145309448242
    7. 'from' → logprob: -3.357145309448242
    8. 'prev' → logprob: -4.732145309448242
    9. 'sorted' → logprob: -4.982145309448242
    10. '
' → logprob: -5.107145309448242

Token 1712: ' this' (ID: 495)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.44455280900001526
    2. 'sorted' → logprob: -1.3195527791976929
    3. 'any' → logprob: -3.3195528984069824
    4. 'all' → logprob: -3.4445528984069824
    5. ' any' → logprob: -5.069552898406982
    6. 'i' → logprob: -5.194552898406982
    7. ' len' → logprob: -5.944552898406982
    8. ' all' → logprob: -5.944552898406982
    9. '#' → logprob: -7.069552898406982
    10. 'the' → logprob: -7.319552898406982

Token 1713: ' sorted' (ID: 20099)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.31445953249931335
    2. '_sorted' → logprob: -2.8144595623016357
    3. 'sorted' → logprob: -2.9394595623016357
    4. ' is' → logprob: -3.5644595623016357
    5. '```' → logprob: -3.5644595623016357
    6. 'can' → logprob: -4.189459323883057
    7. 'sequence' → logprob: -4.189459323883057
    8. '#' → logprob: -4.439459323883057
    9. 'would' → logprob: -4.564459323883057
    10. 'def' → logprob: -4.939459323883057

Token 1714: ' sequence' (ID: 16281)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.003754590405151248
    2. 'arr' → logprob: -5.628754615783691
    3. 'sorted' → logprob: -9.753754615783691
    4. '_array' → logprob: -10.253754615783691
    5. 'sequence' → logprob: -10.753754615783691
    6. '_sorted' → logprob: -11.253754615783691
    7. 'array' → logprob: -11.503754615783691
    8. 'list' → logprob: -12.753754615783691
    9. '_seq' → logprob: -13.128754615783691
    10. '_' → logprob: -13.128754615783691

Token 1715: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.3542207181453705
    2. '```' → logprob: -2.7292206287384033
    3. ' is' → logprob: -3.1042206287384033
    4. '   ' → logprob: -3.1042206287384033
    5. '.sort' → logprob: -3.2292206287384033
    6. '       ' → logprob: -3.2292206287384033
    7. '#' → logprob: -4.229220867156982
    8. ' =' → logprob: -5.229220867156982
    9. 'def' → logprob: -5.229220867156982
    10. 'needs' → logprob: -5.354220867156982

Token 1716: ' lex' (ID: 37772)
  Prédit: 'already'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'already' → logprob: -0.263095885515213
    2. 'the' → logprob: -2.3880958557128906
    3. 'optimal' → logprob: -2.3880958557128906
    4. 'not' → logprob: -4.263095855712891
    5. 'minimal' → logprob: -4.763095855712891
    6. 'lex' → logprob: -4.888095855712891
    7. 'correct' → logprob: -5.013095855712891
    8. 'stable' → logprob: -6.013095855712891
    9. 'optimized' → logprob: -6.388095855712891
    10. ' already' → logprob: -6.513095855712891

Token 1717: ' minimal' (ID: 19957)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ic' → logprob: -1.4342658519744873
    2. 'sm' → logprob: -1.8092658519744873
    3. '```' → logprob: -2.0592658519744873
    4. 'sorted' → logprob: -2.3092658519744873
    5. '       ' → logprob: -2.4342658519744873
    6. 'small' → logprob: -2.8092658519744873
    7. '_sm' → logprob: -2.9342658519744873
    8. ' smaller' → logprob: -2.9342658519744873
    9. 'ically' → logprob: -3.0592658519744873
    10. '_small' → logprob: -3.8092658519744873

Token 1718: ' maximal' (ID: 65414)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39906448125839233
    2. '
' → logprob: -1.149064540863037
    3. '#' → logprob: -5.649064540863037
    4. 'for' → logprob: -5.899064540863037
    5. 'return' → logprob: -6.024064540863037
    6. '```' → logprob: -7.149064540863037
    7. 'if' → logprob: -7.774064540863037
    8. '

' → logprob: -7.899064540863037
    9. 'from' → logprob: -8.024064064025879
    10. '        
' → logprob: -8.274064064025879

Token 1719: ' solution' (ID: 7578)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08206713199615479
    2. '
' → logprob: -2.7070670127868652
    3. '#' → logprob: -5.207067012786865
    4. 'return' → logprob: -5.707067012786865
    5. 'for' → logprob: -6.457067012786865
    6. '```' → logprob: -7.457067012786865
    7. '        
' → logprob: -8.207067489624023
    8. 'if' → logprob: -8.457067489624023
    9. 'from' → logprob: -8.957067489624023
    10. 'def' → logprob: -8.957067489624023

Token 1720: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.825169563293457
    2. 'return' → logprob: -1.325169563293457
    3. '       ' → logprob: -1.700169563293457
    4. '#' → logprob: -3.075169563293457
    5. 'i' → logprob: -3.325169563293457
    6. 'for' → logprob: -4.200169563293457
    7. 'from' → logprob: -4.825169563293457
    8. 'if' → logprob: -5.450169563293457
    9. 'import' → logprob: -6.575169563293457
    10. 'def' → logprob: -7.075169563293457

Token 1721: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005935193970799446
    2. '
' → logprob: -5.380935192108154
    3. '```' → logprob: -6.755935192108154
    4. 'for' → logprob: -9.880935668945312
    5. 'i' → logprob: -10.380935668945312
    6. '        
' → logprob: -10.755935668945312
    7. 'return' → logprob: -11.255935668945312
    8. '#' → logprob: -11.880935668945312
    9. '``' → logprob: -11.880935668945312
    10. '   ' → logprob: -12.755935668945312

Token 1722: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7008118033409119
    2. '       ' → logprob: -0.7008118033409119
    3. '#' (adapté à ' #') → logprob: -6.450811862945557
    4. 'for' → logprob: -6.575811862945557
    5. 'from' → logprob: -6.825811862945557
    6. 'i' → logprob: -6.825811862945557
    7. '```' → logprob: -6.825811862945557
    8. 'if' → logprob: -7.200811862945557
    9. 'return' → logprob: -8.575811386108398
    10. 'import' → logprob: -8.950811386108398

Token 1723: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47578129172325134
    2. '
' → logprob: -0.9757813215255737
    3. '#' → logprob: -6.850781440734863
    4. '        
' → logprob: -8.725781440734863
    5. 'from' → logprob: -9.100781440734863
    6. '```' → logprob: -9.225781440734863
    7. 'if' → logprob: -9.475781440734863
    8. 'i' → logprob: -9.975781440734863
    9. 'for' → logprob: -9.975781440734863
    10. 'return' → logprob: -10.225781440734863

Token 1724: ' sorting' (ID: 51375)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13663966953754425
    2. 'i' → logprob: -2.7616395950317383
    3. 'def' → logprob: -3.3866395950317383
    4. '       ' → logprob: -3.7616395950317383
    5. 'n' → logprob: -6.511639595031738
    6. 'return' → logprob: -6.761639595031738
    7. 'from' → logprob: -6.886639595031738
    8. '
' → logprob: -6.886639595031738
    9. '   ' → logprob: -7.636639595031738
    10. 'for' → logprob: -7.636639595031738

Token 1725: ' method' (ID: 2595)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9325874447822571
    2. ' is' → logprob: -2.1825873851776123
    3. '_arr' → logprob: -2.3075873851776123
    4. 'arr' → logprob: -2.8075873851776123
    5. 'sorted' → logprob: -2.8075873851776123
    6. 'is' → logprob: -3.0575873851776123
    7. 'def' → logprob: -3.3075873851776123
    8. 'result' → logprob: -3.6825873851776123
    9. ' =' → logprob: -3.6825873851776123
    10. '```' → logprob: -4.307587623596191

Token 1726: ' picks' (ID: 37120)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8692817091941833
    2. '#' → logprob: -0.9942817091941833
    3. '```' → logprob: -3.244281768798828
    4. 'is' → logprob: -3.369281768798828
    5. ' =' → logprob: -3.494281768798828
    6. '=' → logprob: -3.744281768798828
    7. '   ' → logprob: -4.119281768798828
    8. ' is' → logprob: -4.119281768798828
    9. 'sorted' → logprob: -4.869281768798828
    10. 'should' → logprob: -5.244281768798828

Token 1727: ' one' (ID: 1001)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7534157037734985
    2. 'sorted' → logprob: -0.8784157037734985
    3. 'duplicates' → logprob: -2.628415584564209
    4. 'that' → logprob: -4.503415584564209
    5. 'from' → logprob: -4.878415584564209
    6. 'stable' → logprob: -5.128415584564209
    7. 'out' → logprob: -6.128415584564209
    8. '#' → logprob: -6.253415584564209
    9. 'them' → logprob: -6.378415584564209
    10. ' the' → logprob: -6.753415584564209

Token 1728: ' maximal' (ID: 65414)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03383852541446686
    2. 'return' → logprob: -3.9088385105133057
    3. '```' → logprob: -5.283838748931885
    4. '
' → logprob: -5.408838748931885
    5. '#' → logprob: -7.408838748931885
    6. ':
' → logprob: -7.658838748931885
    7. ' return' → logprob: -8.033838272094727
    8. ',' → logprob: -8.408838272094727
    9. '   ' → logprob: -8.783838272094727
    10. ';' → logprob: -8.908838272094727

Token 1729: ' solution' (ID: 7578)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.27666306495666504
    2. '_sequence' → logprob: -2.401663064956665
    3. '_arr' → logprob: -3.276663064956665
    4. '```' → logprob: -3.526663064956665
    5. '_sorted' → logprob: -3.776663064956665
    6. '       ' → logprob: -4.276662826538086
    7. 'sorted' → logprob: -4.651662826538086
    8. 'arr' → logprob: -4.776662826538086
    9. '   ' → logprob: -5.026662826538086
    10. '_result' → logprob: -5.026662826538086

Token 1730: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002386472187936306
    2. 'return' → logprob: -6.127386569976807
    3. '```' → logprob: -9.002386093139648
    4. '
' → logprob: -9.877386093139648
    5. ' return' → logprob: -11.627386093139648
    6. '        
' → logprob: -12.127386093139648
    7. ',' → logprob: -12.377386093139648
    8. '   ' → logprob: -13.127386093139648
    9. '``' → logprob: -14.252386093139648
    10. '           ' → logprob: -14.252386093139648

Token 1731: ' lex' (ID: 37772)
  Prédit: 'stable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stable' → logprob: -0.6893162131309509
    2. 'minimal' → logprob: -0.9393162131309509
    3. 'the' → logprob: -2.6893162727355957
    4. 'st' → logprob: -4.439316272735596
    5. 'a' → logprob: -4.939316272735596
    6. 'duplicates' → logprob: -5.439316272735596
    7. 'sorted' → logprob: -5.564316272735596
    8. '#' → logprob: -6.689316272735596
    9. 'this' → logprob: -6.939316272735596
    10. 'correct' → logprob: -7.064316272735596

Token 1732: ' smallest' (ID: 42173)
  Prédit: 'small'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -1.328963041305542
    2. ' minimal' → logprob: -1.453963041305542
    3. 'minimal' → logprob: -1.703963041305542
    4. ' smallest' → logprob: -1.953963041305542
    5. '```' → logprob: -2.828963041305542
    6. '_small' → logprob: -3.078963041305542
    7. 'ic' → logprob: -3.953963041305542
    8. 'ical' → logprob: -4.328963279724121
    9. ' small' → logprob: -5.078963279724121
    10. ' smaller' → logprob: -5.328963279724121

Token 1733: ' due' (ID: 5192)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.8372541666030884
    2. 'order' → logprob: -0.9622541666030884
    3. 'possible' → logprob: -3.212254047393799
    4. ' order' → logprob: -3.337254047393799
    5. '```' → logprob: -3.337254047393799
    6. 'first' → logprob: -3.587254047393799
    7. 'ordering' → logprob: -5.087254047393799
    8. ' sequence' → logprob: -5.087254047393799
    9. 'continu' → logprob: -5.462254047393799
    10. 'return' → logprob: -5.587254047393799

Token 1734: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0030811019241809845
    2. ' to' → logprob: -6.378081321716309
    3. '       ' → logprob: -7.753081321716309
    4. '```' → logprob: -8.128081321716309
    5. '   ' → logprob: -8.253081321716309
    6. '_to' → logprob: -8.878081321716309
    7. 'sequence' → logprob: -10.128081321716309
    8. '``' → logprob: -10.128081321716309
    9. 'order' → logprob: -10.253081321716309
    10. 'To' → logprob: -10.878081321716309

Token 1735: ' stable' (ID: 22105)
  Prédit: 'stable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stable' → logprob: -0.012235313653945923
    2. 'st' → logprob: -5.012235164642334
    3. 'sorted' → logprob: -5.262235164642334
    4. 'the' → logprob: -8.387235641479492
    5. 'Python' → logprob: -10.637235641479492
    6. 'sort' → logprob: -10.637235641479492
    7. '#' → logprob: -10.637235641479492
    8. 'sorting' → logprob: -11.012235641479492
    9. 'T' → logprob: -13.762235641479492
    10. '   ' → logprob: -14.012235641479492

Token 1736: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.003274802351370454
    2. 'sorting' → logprob: -6.003274917602539
    3. '_sort' → logprob: -7.878274917602539
    4. ' sort' → logprob: -8.378274917602539
    5. '=True' → logprob: -8.878274917602539
    6. 'sorted' → logprob: -11.253274917602539
    7. 'stable' → logprob: -11.628274917602539
    8. ' sorting' → logprob: -11.628274917602539
    9. '```' → logprob: -11.878274917602539
    10. '   ' → logprob: -13.128274917602539

Token 1737: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004008826334029436
    2. '
' → logprob: -6.129008769989014
    3. 'return' → logprob: -6.504008769989014
    4. '<|end|>' → logprob: -9.754009246826172
    5. '.' → logprob: -9.879009246826172
    6. ',' → logprob: -10.004009246826172
    7. '        
' → logprob: -10.254009246826172
    8. ' return' → logprob: -11.004009246826172
    9. '```' → logprob: -11.004009246826172
    10. ' and' → logprob: -11.129009246826172

Token 1738: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032477048225700855
    2. 'return' → logprob: -5.7532477378845215
    3. '```' → logprob: -10.128247261047363
    4. '
' → logprob: -10.503247261047363
    5. '   ' → logprob: -13.628247261047363
    6. ' return' → logprob: -14.003247261047363
    7. '        
' → logprob: -14.878247261047363
    8. 'import' → logprob: -16.12824821472168
    9. '           ' → logprob: -16.75324821472168
    10. '``' → logprob: -17.12824821472168

Token 1739: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16027773916721344
    2. '       ' → logprob: -1.9102777242660522
    3. '
' → logprob: -10.410277366638184
    4. ' return' → logprob: -11.285277366638184
    5. '```' → logprob: -11.660277366638184
    6. '   ' → logprob: -13.410277366638184
    7. '#' → logprob: -14.660277366638184
    8. '        
' → logprob: -15.535277366638184
    9. 'sorted' → logprob: -16.9102783203125
    10. 'import' → logprob: -17.0352783203125

Token 1740: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -9.639096970204264e-05
    2. ' sorted' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.375097274780273
    4. 'list' → logprob: -16.750097274780273
    5. '(sorted' → logprob: -17.625097274780273
    6. '[' → logprob: -18.500097274780273
    7. '.sorted' → logprob: -18.500097274780273
    8. '[]' → logprob: -21.375097274780273
    9. '_sorted' → logprob: -21.750097274780273
    10. '       ' → logprob: -21.875097274780273

Token 1741: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.00010235115041723475
    2. 'sorted' → logprob: -9.375102043151855
    3. 'ed' → logprob: -11.125102043151855
    4. 'arr' → logprob: -13.625102043151855
    5. 'd' → logprob: -14.625102043151855
    6. '(sorted' → logprob: -14.750102043151855
    7. '_sorted' → logprob: -15.250102043151855
    8. 'ted' → logprob: -15.250102043151855
    9. 'Arr' → logprob: -16.500102996826172
    10. '[]' → logprob: -17.500102996826172

Token 1742: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1743: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1744: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0014478564262390137
    2. 'main' → logprob: -7.626447677612305
    3. ' solve' → logprob: -7.751447677612305
    4. ' sort' → logprob: -8.251447677612305
    5. ' max' → logprob: -8.876447677612305
    6. ' solution' → logprob: -10.376447677612305
    7. ' process' → logprob: -10.751447677612305
    8. ' example' → logprob: -10.876447677612305
    9. 'sort' → logprob: -11.376447677612305
    10. ' power' → logprob: -11.751447677612305

Token 1745: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.006719163153320551
    2. '():
' → logprob: -5.00671911239624
    3. '()' → logprob: -13.006719589233398
    4. ' ():' → logprob: -14.381719589233398
    5. '():
' → logprob: -14.506719589233398
    6. '():

' → logprob: -14.881719589233398
    7. '(argv' → logprob: -16.7567195892334
    8. '()>' → logprob: -18.1317195892334
    9. '(args' → logprob: -18.7567195892334
    10. '(' → logprob: -18.7567195892334

Token 1746: '   ' (ID: 271)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.25149866938591003
    2. '   ' → logprob: -1.7514986991882324
    3. '```' → logprob: -3.2514986991882324
    4. ' import' → logprob: -4.626498699188232
    5. 'array' → logprob: -8.751498222351074
    6. '``' → logprob: -10.126498222351074
    7. 'input' → logprob: -10.626498222351074
    8. '    
' → logprob: -10.626498222351074
    9. '
' → logprob: -10.626498222351074
    10. '	import' → logprob: -10.626498222351074

Token 1747: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.004717414733022451
    2. ' import' → logprob: -6.0047173500061035
    3. '   ' → logprob: -6.1297173500061035
    4. '```' → logprob: -9.879717826843262
    5. 'from' → logprob: -11.754717826843262
    6. 'n' → logprob: -13.504717826843262
    7. '	import' → logprob: -13.504717826843262
    8. ' from' → logprob: -16.754716873168945
    9. 'input' → logprob: -16.754716873168945
    10. ' n' → logprob: -17.129716873168945

Token 1748: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.3544423381972592e-05
    2. ' sys' → logprob: -11.25001335144043
    3. '=sys' → logprob: -14.50001335144043
    4. 'math' → logprob: -17.87501335144043
    5. '(sys' → logprob: -18.87501335144043
    6. '	sys' → logprob: -19.50001335144043
    7. '```' → logprob: -19.62501335144043
    8. 'io' → logprob: -21.37501335144043
    9. '
' → logprob: -21.50001335144043
    10. '_sys' → logprob: -21.62501335144043

Token 1749: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4522131681442261
    2. 'input' → logprob: -1.577213168144226
    3. '
' → logprob: -2.2022132873535156
    4. 'line' → logprob: -4.077213287353516
    5. 'for' → logprob: -4.077213287353516
    6. 'data' → logprob: -5.452213287353516
    7. 'n' → logprob: -5.702213287353516
    8. 'lines' → logprob: -5.827213287353516
    9. '```' → logprob: -6.952213287353516
    10. '    
' → logprob: -7.577213287353516

Token 1750: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2035304456949234
    2. 'input' → logprob: -1.7035304307937622
    3. '
' → logprob: -6.828530311584473
    4. '```' → logprob: -7.703530311584473
    5. 'data' → logprob: -7.828530311584473
    6. ' input' → logprob: -10.078530311584473
    7. 'n' → logprob: -10.203530311584473
    8. '    
' → logprob: -10.453530311584473
    9. 'for' → logprob: -11.078530311584473
    10. 'lines' → logprob: -11.078530311584473

Token 1751: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5780659317970276
    2. 'input' → logprob: -0.8280659317970276
    3. 'data' → logprob: -6.703065872192383
    4. '
' → logprob: -8.078065872192383
    5. 'lines' → logprob: -8.328065872192383
    6. '```' → logprob: -8.703065872192383
    7. ' input' → logprob: -9.953065872192383
    8. 'for' → logprob: -10.078065872192383
    9. 'line' → logprob: -10.453065872192383
    10. 'n' → logprob: -10.453065872192383

Token 1752: '.set' (ID: 1230)
  Prédit: '.stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.2896178066730499
    2. '.stdout' → logprob: -1.6646177768707275
    3. '.argv' → logprob: -3.0396177768707275
    4. '.exit' → logprob: -4.414618015289307
    5. '.' → logprob: -6.914618015289307
    6. '.stderr' → logprob: -7.164618015289307
    7. '.readline' → logprob: -8.914617538452148
    8. '   ' → logprob: -8.914617538452148
    9. '.std' → logprob: -10.039617538452148
    10. 'import' → logprob: -10.539617538452148

Token 1753: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -6.885492621222511e-05
    2. 'set' → logprob: -10.500068664550781
    3. 'limit' → logprob: -11.125068664550781
    4. 'stdin' → logprob: -11.625068664550781
    5. 'trace' → logprob: -12.000068664550781
    6. 'exit' → logprob: -12.125068664550781
    7. 'stdout' → logprob: -13.125068664550781
    8. 'import' → logprob: -13.625068664550781
    9. 'ex' → logprob: -14.500068664550781
    10. 'Rec' → logprob: -14.750068664550781

Token 1754: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.024193348363041878
    2. 'rec' → logprob: -4.399193286895752
    3. 'limit' → logprob: -5.024193286895752
    4. 'set' → logprob: -5.524193286895752
    5. 'size' → logprob: -8.77419376373291
    6. 'ursively' → logprob: -9.27419376373291
    7. 'ault' → logprob: -9.52419376373291
    8. 'et' → logprob: -9.52419376373291
    9. 'ursive' → logprob: -9.77419376373291
    10. 'curse' → logprob: -9.89919376373291

Token 1755: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -5.512236498361744e-07
    2. 'depth' → logprob: -15.000000953674316
    3. '_limit' → logprob: -16.25
    4. ' limit' → logprob: -16.875
    5. 'lim' → logprob: -19.25
    6. 'Limit' → logprob: -19.875
    7. 'limits' → logprob: -20.0
    8. 'error' → logprob: -20.625
    9. '```' → logprob: -20.875
    10. '(limit' → logprob: -21.125

Token 1756: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.583550642360933e-05
    2. '10' → logprob: -10.875036239624023
    3. '=' → logprob: -12.000036239624023
    4. '100' → logprob: -12.125036239624023
    5. '   ' → logprob: -13.125036239624023
    6. ' (' → logprob: -13.125036239624023
    7. ' =' → logprob: -14.875036239624023
    8. '(
' → logprob: -15.250036239624023
    9. '(int' → logprob: -15.375036239624023
    10. '1' → logprob: -16.000036239624023

Token 1757: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00012654215970542282
    2. '100' → logprob: -9.000126838684082
    3. '200' → logprob: -13.000126838684082
    4. '300' → logprob: -14.250126838684082
    5. '500' → logprob: -16.625125885009766
    6. 'int' → logprob: -16.625125885009766
    7. '150' → logprob: -17.500125885009766
    8. '1' → logprob: -18.000125885009766
    9. '400' → logprob: -18.250125885009766
    10. '250' → logprob: -19.250125885009766

Token 1758: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0012861868599429727
    2. '7' → logprob: -7.376286029815674
    3. '000' → logprob: -7.501286029815674
    4. '6' → logprob: -9.251286506652832
    5. '00' → logprob: -11.751286506652832
    6. '5' → logprob: -13.376286506652832
    7. '```' → logprob: -14.251286506652832
    8. '0' → logprob: -14.876286506652832
    9. ' **' → logprob: -15.501286506652832
    10. '8' → logprob: -15.626286506652832

Token 1759: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0017798993503674865
    2. '9' → logprob: -6.501780033111572
    3. '8' → logprob: -8.251779556274414
    4. '6' → logprob: -11.001779556274414
    5. '**' → logprob: -21.376779556274414
    6. '+' → logprob: -21.501779556274414
    7. '```' → logprob: -22.126779556274414
    8. '
' → logprob: -22.876779556274414
    9. '10' → logprob: -23.251779556274414
    10. '(' → logprob: -23.501779556274414

Token 1760: ')

' (ID: 1029)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3170311748981476
    2. ')' → logprob: -1.8170311450958252
    3. ')
' → logprob: -2.317031145095825
    4. '
' → logprob: -4.567031383514404
    5. '    
' → logprob: -8.567030906677246
    6. '```' → logprob: -10.942030906677246
    7. ',' → logprob: -11.942030906677246
    8. ')
' → logprob: -12.942030906677246
    9. '):
' → logprob: -13.317030906677246
    10. 'import' → logprob: -13.442030906677246

Token 1761: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024113181978464127
    2. 'n' → logprob: -4.024113178253174
    3. 'input' → logprob: -5.149113178253174
    4. 'data' → logprob: -9.149113655090332
    5. '```' → logprob: -11.274113655090332
    6. 'def' → logprob: -12.149113655090332
    7. ' n' → logprob: -12.899113655090332
    8. 'for' → logprob: -13.024113655090332
    9. '	n' → logprob: -13.024113655090332
    10. 'import' → logprob: -13.149113655090332

Token 1762: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.024983955547213554
    2. '   ' → logprob: -3.7749838829040527
    3. 'input' (adapté à ' input') → logprob: -6.524983882904053
    4. '```' → logprob: -8.899984359741211
    5. ' n' → logprob: -9.399984359741211
    6. 'N' → logprob: -11.274984359741211
    7. 'data' → logprob: -11.524984359741211
    8. 't' → logprob: -11.524984359741211
    9. '	n' → logprob: -11.524984359741211
    10. '``' → logprob: -13.274984359741211

Token 1763: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14496129751205444
    2. '_line' → logprob: -2.519961357116699
    3. '().' → logprob: -3.144961357116699
    4. '_tokens' → logprob: -5.644961357116699
    5. '_token' → logprob: -6.144961357116699
    6. '()
' → logprob: -6.394961357116699
    7. '_data' → logprob: -6.644961357116699
    8. '_lines' → logprob: -7.394961357116699
    9. '()[' → logprob: -7.644961357116699
    10. '_' → logprob: -7.894961357116699

Token 1764: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03850134089589119
    2. ' input' → logprob: -3.288501262664795
    3. 'sys' → logprob: -8.038501739501953
    4. 'lambda' → logprob: -9.038501739501953
    5. ' sys' → logprob: -11.288501739501953
    6. '=input' → logprob: -13.288501739501953
    7. ' lambda' → logprob: -13.413501739501953
    8. 'open' → logprob: -14.538501739501953
    9. '	input' → logprob: -15.038501739501953
    10. '
' → logprob: -15.288501739501953

Token 1765: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3202391266822815
    2. '.readline' → logprob: -1.4452390670776367
    3. '().' → logprob: -3.5702390670776367
    4. '.stdin' → logprob: -5.195239067077637
    5. '.
' → logprob: -5.820239067077637
    6. '.)' → logprob: -7.695239067077637
    7. '.read' → logprob: -7.820239067077637
    8. '.\' → logprob: -8.945239067077637
    9. '.readlines' → logprob: -9.445239067077637
    10. ')' → logprob: -9.820239067077637

Token 1766: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00015264409012161195
    2. '.' → logprob: -9.000152587890625
    3. '.readlines' → logprob: -11.375152587890625
    4. '().' → logprob: -12.125152587890625
    5. '.read' → logprob: -12.250152587890625
    6. '.stdin' → logprob: -12.750152587890625
    7. 'read' → logprob: -13.750152587890625
    8. '.buffer' → logprob: -14.125152587890625
    9. '
' → logprob: -14.125152587890625
    10. ' readline' → logprob: -14.750152587890625

Token 1767: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5341537594795227
    2. 'n' → logprob: -1.034153699874878
    3. '
' → logprob: -2.909153699874878
    4. '(n' → logprob: -6.784153938293457
    5. 't' → logprob: -6.909153938293457
    6. '```' → logprob: -7.034153938293457
    7. 'N' → logprob: -8.534153938293457
    8. '    
' → logprob: -8.784153938293457
    9. '()
' → logprob: -8.909153938293457
    10. ' n' → logprob: -9.034153938293457

Token 1768: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2131548523902893
    2. 'n' → logprob: -1.7131547927856445
    3. '
' → logprob: -4.5881547927856445
    4. 'num' → logprob: -7.8381547927856445
    5. '(n' → logprob: -7.8381547927856445
    6. 't' → logprob: -7.9631547927856445
    7. '```' → logprob: -8.838154792785645
    8. 'N' → logprob: -9.588154792785645
    9. '    
' → logprob: -9.713154792785645
    10. '()
' → logprob: -10.338154792785645

Token 1769: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002776823937892914
    2. '   ' → logprob: -6.002776622772217
    3. 't' → logprob: -8.502777099609375
    4. '
' → logprob: -9.502777099609375
    5. 'N' (adapté à ' N') → logprob: -11.377777099609375
    6. '```' → logprob: -11.627777099609375
    7. '_n' → logprob: -14.002777099609375
    8. ' n' → logprob: -14.252777099609375
    9. '    
' → logprob: -14.377777099609375
    10. 'T' → logprob: -14.502777099609375

Token 1770: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2574580907821655
    2. ' =' → logprob: -1.5074580907821655
    3. '   ' → logprob: -5.632458209991455
    4. ',' → logprob: -6.632458209991455
    5. ')' → logprob: -8.507457733154297
    6. '=int' → logprob: -8.882457733154297
    7. '=
' → logprob: -10.507457733154297
    8. '    ' → logprob: -10.632457733154297
    9. '()' → logprob: -10.882457733154297
    10. '       ' → logprob: -10.882457733154297

Token 1771: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014163628220558167
    2. ' int' → logprob: -4.264163494110107
    3. '[int' → logprob: -16.639163970947266
    4. '(int' → logprob: -18.139163970947266
    5. '=int' → logprob: -18.139163970947266
    6. 'len' → logprob: -18.264163970947266
    7. '<int' → logprob: -18.514163970947266
    8. '
' → logprob: -18.889163970947266
    9. '   ' → logprob: -18.889163970947266
    10. ' ' → logprob: -19.264163970947266

Token 1772: '(input' (ID: 10054)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6275452971458435
    2. '(input' → logprob: -0.8775452971458435
    3. 'input' → logprob: -3.1275453567504883
    4. '()
' → logprob: -5.377545356750488
    5. '(' → logprob: -7.002545356750488
    6. '())' → logprob: -7.127545356750488
    7. '().' → logprob: -10.002545356750488
    8. '(
' → logprob: -10.502545356750488
    9. ' input' → logprob: -11.002545356750488
    10. '=input' → logprob: -11.752545356750488

Token 1773: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.014371869154274464
    2. '()' → logprob: -5.014371871948242
    3. '())
' → logprob: -5.514371871948242
    4. '().' → logprob: -5.639371871948242
    5. ')' → logprob: -10.764371871948242
    6. '()
' → logprob: -11.389371871948242
    7. ' ())' → logprob: -12.514371871948242
    8. '(' → logprob: -12.639371871948242
    9. '())

' → logprob: -13.889371871948242
    10. '()[' → logprob: -14.389371871948242

Token 1774: '   ' (ID: 271)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.031363874673843384
    2. 'array' → logprob: -3.7813639640808105
    3. 'A' → logprob: -5.5313639640808105
    4. '   ' → logprob: -5.7813639640808105
    5. 'a' → logprob: -6.9063639640808105
    6. 'sequence' → logprob: -11.531363487243652
    7. 'data' → logprob: -11.906363487243652
    8. '    
' → logprob: -12.406363487243652
    9. 'numbers' → logprob: -12.406363487243652
    10. 'values' → logprob: -12.531363487243652

Token 1775: ' A' (ID: 355)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.007101201452314854
    2. 'array' → logprob: -5.007101058959961
    3. 'A' (adapté à ' A') → logprob: -8.507101058959961
    4. 'a' → logprob: -8.757101058959961
    5. 'sequence' → logprob: -11.632101058959961
    6. '   ' → logprob: -12.132101058959961
    7. 'numbers' → logprob: -12.132101058959961
    8. 'seq' → logprob: -13.257101058959961
    9. '```' → logprob: -13.382101058959961
    10. ' arr' → logprob: -14.257101058959961

Token 1776: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16186974942684174
    2. ' =' → logprob: -1.911869764328003
    3. '[]' → logprob: -7.536869525909424
    4. '[' → logprob: -7.786869525909424
    5. '   ' → logprob: -7.786869525909424
    6. '.' → logprob: -10.036870002746582
    7. '[:]' → logprob: -10.161870002746582
    8. ',' → logprob: -10.286870002746582
    9. '_' → logprob: -10.411870002746582
    10. ')' → logprob: -10.536870002746582

Token 1777: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.9650025428272784e-05
    2. ' list' → logprob: -10.250040054321289
    3. '[list' → logprob: -12.500040054321289
    4. '[' → logprob: -14.750040054321289
    5. '=list' → logprob: -17.12504005432129
    6. '	list' → logprob: -19.37504005432129
    7. '(list' → logprob: -19.62504005432129
    8. ':list' → logprob: -19.75004005432129
    9. '[int' → logprob: -20.00004005432129
    10. '[]' → logprob: -20.00004005432129

Token 1778: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.9361264946837764e-07
    2. ' int' → logprob: -16.75
    3. '
' → logprob: -18.375
    4. '```' → logprob: -19.625
    5. ']int' → logprob: -19.625
    6. 'input' → logprob: -19.75
    7. '*' → logprob: -20.375
    8. '(int' → logprob: -20.75
    9. '   ' → logprob: -21.0
    10. '0' → logprob: -21.0

Token 1779: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.20403896272182465
    2. 'input' → logprob: -1.7040389776229858
    3. '()' → logprob: -6.204039096832275
    4. '()]' → logprob: -7.954039096832275
    5. '().' → logprob: -9.329038619995117
    6. '=input' → logprob: -9.704038619995117
    7. ' input' → logprob: -10.454038619995117
    8. '(x' → logprob: -10.579038619995117
    9. '(' → logprob: -10.954038619995117
    10. '()
' → logprob: -12.204038619995117

Token 1780: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06219231337308884
    2. '()' → logprob: -3.06219220161438
    3. '().' → logprob: -4.312192440032959
    4. '()]' → logprob: -10.0621919631958
    5. '())
' → logprob: -10.6871919631958
    6. ')' → logprob: -10.8121919631958
    7. '()
' → logprob: -10.8121919631958
    8. '()),' → logprob: -13.4371919631958
    9. ' ())' → logprob: -14.5621919631958
    10. '()]
' → logprob: -15.5621919631958

Token 1781: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13376787304878235
    2. '().' → logprob: -2.88376784324646
    3. ' for' → logprob: -3.13376784324646
    4. 'for' → logprob: -3.88376784324646
    5. '   ' → logprob: -6.258768081665039
    6. ')' → logprob: -6.508768081665039
    7. '.strip' → logprob: -7.008768081665039
    8. '.rstrip' → logprob: -8.008768081665039
    9. ']' → logprob: -9.133768081665039
    10. '.readline' → logprob: -9.383768081665039

Token 1782: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0001987722353078425
    2. '_i' → logprob: -8.625198364257812
    3. '_
' → logprob: -12.125198364257812
    4. '_line' → logprob: -12.250198364257812
    5. '_in' → logprob: -13.125198364257812
    6. '_tokens' → logprob: -13.375198364257812
    7. ' _' → logprob: -13.750198364257812
    8. '_n' → logprob: -14.375198364257812
    9. 'i' → logprob: -14.500198364257812
    10. '_token' → logprob: -14.625198364257812

Token 1783: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0048871771432459354
    2. ' in' → logprob: -5.379887104034424
    3. '_range' → logprob: -9.129887580871582
    4. '_i' → logprob: -9.254887580871582
    5. ' _' → logprob: -10.754887580871582
    6. '_in' → logprob: -11.629887580871582
    7. 'in' → logprob: -11.754887580871582
    8. ' range' → logprob: -11.754887580871582
    9. 'i' → logprob: -12.379887580871582
    10. 'range' → logprob: -12.754887580871582

Token 1784: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0034648904111236334
    2. ' range' → logprob: -6.253464698791504
    3. '_' → logprob: -6.503464698791504
    4. '_range' → logprob: -10.253464698791504
    5. '_A' → logprob: -14.253464698791504
    6. 'A' → logprob: -15.128464698791504
    7. '	range' → logprob: -15.503464698791504
    8. '_i' → logprob: -16.12846565246582
    9. '
' → logprob: -16.62846565246582
    10. 'i' → logprob: -16.87846565246582

Token 1785: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.01815556176006794
    2. 'N' → logprob: -4.018155574798584
    3. '	N' → logprob: -12.768155097961426
    4. '(' → logprob: -13.518155097961426
    5. '_N' → logprob: -13.893155097961426
    6. ' N' → logprob: -15.268155097961426
    7. '   ' → logprob: -16.143156051635742
    8. '<N' → logprob: -16.518156051635742
    9. '()' → logprob: -17.393156051635742
    10. ',N' → logprob: -17.518156051635742

Token 1786: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.018431439995765686
    2. ']' → logprob: -4.018431663513184
    3. '   ' → logprob: -9.018431663513184
    4. ')]
' → logprob: -9.518431663513184
    5. ')' → logprob: -10.393431663513184
    6. '])' → logprob: -10.518431663513184
    7. ']
' → logprob: -11.393431663513184
    8. '])]' → logprob: -11.768431663513184
    9. '()]' → logprob: -12.143431663513184
    10. ')])' → logprob: -13.643431663513184

Token 1787: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13707558810710907
    2. 'sorted' → logprob: -2.387075662612915
    3. 'result' → logprob: -3.762075662612915
    4. 'sort' → logprob: -4.762075424194336
    5. 'ts' → logprob: -6.887075424194336
    6. '
' → logprob: -7.262075424194336
    7. ' sorter' → logprob: -7.262075424194336
    8. ' sorted' → logprob: -7.887075424194336
    9. '    
' → logprob: -8.012075424194336
    10. 'sequence' → logprob: -8.137075424194336

Token 1788: ' sorter' (ID: 174966)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.06504254043102264
    2. 'ts' → logprob: -3.065042495727539
    3. 'sorted' → logprob: -4.815042495727539
    4. 'tower' → logprob: -5.690042495727539
    5. '   ' → logprob: -6.065042495727539
    6. 'result' → logprob: -6.690042495727539
    7. 't' → logprob: -7.940042495727539
    8. 'arr' → logprob: -8.440042495727539
    9. 'TS' → logprob: -8.690042495727539
    10. 'solver' → logprob: -9.190042495727539

Token 1789: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4821808338165283
    2. '=' → logprob: -0.9821808338165283
    3. '   ' → logprob: -5.482180595397949
    4. '.sort' → logprob: -5.982180595397949
    5. '       ' → logprob: -7.232180595397949
    6. '_sorted' → logprob: -8.98218059539795
    7. 'sort' → logprob: -9.10718059539795
    8. '```' → logprob: -9.48218059539795
    9. '=
' → logprob: -9.60718059539795
    10. '(sort' → logprob: -9.73218059539795

Token 1790: ' Tower' (ID: 37994)
  Prédit: 'Tower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tower' → logprob: -9.627176768844947e-05
    2. ' Tower' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.00009536743164
    4. 'Tour' → logprob: -18.00009536743164
    5. 'Tank' → logprob: -19.00009536743164
    6. 'Torch' → logprob: -19.12509536743164
    7. 'Town' → logprob: -19.25009536743164
    8. 'Tiger' → logprob: -19.75009536743164
    9. 'Tunnel' → logprob: -20.25009536743164
    10. 'Tree' → logprob: -20.25009536743164

Token 1791: 'Sorter' (ID: 127233)
  Prédit: 'Sorter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sorter' → logprob: -1.8193366486229934e-05
    2. 'sort' → logprob: -11.000018119812012
    3. '   ' → logprob: -14.125018119812012
    4. 'Sor' → logprob: -15.125018119812012
    5. '
' → logprob: -16.250019073486328
    6. ' sorter' → logprob: -16.250019073486328
    7. 'Sizer' → logprob: -16.625019073486328
    8. 's' → logprob: -17.375019073486328
    9. 'sorted' → logprob: -17.500019073486328
    10. '       ' → logprob: -17.500019073486328

Token 1792: '(A' (ID: 10706)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.49680450558662415
    2. '(A' → logprob: -0.9968044757843018
    3. 'A' → logprob: -4.246804714202881
    4. '   ' → logprob: -5.746804714202881
    5. '(sort' → logprob: -6.121804714202881
    6. 'sorted' → logprob: -6.246804714202881
    7. '
' → logprob: -8.246804237365723
    8. 'arr' → logprob: -8.746804237365723
    9. '(sorted' → logprob: -9.121804237365723
    10. '(
' → logprob: -9.746804237365723

Token 1793: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4182756245136261
    2. ')
' → logprob: -1.1682755947113037
    3. '   ' → logprob: -3.6682755947113037
    4. ').' → logprob: -5.418275833129883
    5. '.get' → logprob: -8.168275833129883
    6. '.sorted' → logprob: -8.168275833129883
    7. '.sort' → logprob: -8.418275833129883
    8. '(sorted' → logprob: -9.668275833129883
    9. 'sorted' → logprob: -9.793275833129883
    10. '[' → logprob: -11.793275833129883

Token 1794: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.11339006572961807
    2. '   ' → logprob: -2.3633899688720703
    3. 'res' → logprob: -4.61338996887207
    4. 'sorted' → logprob: -6.36338996887207
    5. 'sequence' → logprob: -7.11338996887207
    6. 'ans' → logprob: -8.86338996887207
    7. 'print' → logprob: -8.98838996887207
    8. 'seq' → logprob: -9.11338996887207
    9. 'max' → logprob: -9.48838996887207
    10. 'output' → logprob: -9.48838996887207

Token 1795: ' ans' (ID: 3345)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.025290386751294136
    2. 'res' → logprob: -3.7752904891967773
    3. 'sorted' → logprob: -6.525290489196777
    4. 'ans' (adapté à ' ans') → logprob: -8.275290489196777
    5. 'sequence' → logprob: -9.025290489196777
    6. 'max' → logprob: -9.150290489196777
    7. 'answer' → logprob: -10.150290489196777
    8. 'seq' → logprob: -10.275290489196777
    9. 'print' → logprob: -12.150290489196777
    10. 'best' → logprob: -12.150290489196777

Token 1796: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6445233225822449
    2. '=' → logprob: -0.8945233225822449
    3. '   ' → logprob: -2.7695233821868896
    4. '.' → logprob: -7.0195231437683105
    5. '.get' → logprob: -7.2695231437683105
    6. '_sorted' → logprob: -7.2695231437683105
    7. '.sorted' → logprob: -8.019523620605469
    8. '=get' → logprob: -8.019523620605469
    9. '_sequence' → logprob: -8.894523620605469
    10. '_ans' → logprob: -9.519523620605469

Token 1797: ' sorter' (ID: 174966)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.0009207503753714263
    2. ' sorter' → logprob: -7.00092077255249
    3. ' sort' → logprob: -11.750920295715332
    4. 'sorted' → logprob: -13.625920295715332
    5. '(sort' → logprob: -16.37592124938965
    6. '	sort' → logprob: -17.12592124938965
    7. '   ' → logprob: -17.37592124938965
    8. '```' → logprob: -17.75092124938965
    9. 'solver' → logprob: -18.25092124938965
    10. '.sort' → logprob: -18.62592124938965

Token 1798: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.001599844777956605
    2. 'get' → logprob: -6.7515997886657715
    3. '   ' → logprob: -9.25160026550293
    4. '.' → logprob: -9.37660026550293
    5. '
' → logprob: -9.50160026550293
    6. '.sort' → logprob: -10.00160026550293
    7. ' =' → logprob: -10.50160026550293
    8. '```' → logprob: -10.62660026550293
    9. '       ' → logprob: -11.12660026550293
    10. 'sorted' → logprob: -11.50160026550293

Token 1799: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0004307884373702109
    2. 'max' → logprob: -7.750430583953857
    3. 'Max' → logprob: -16.750431060791016
    4. 'amax' → logprob: -18.375431060791016
    5. '[max' → logprob: -19.000431060791016
    6. '(max' → logprob: -19.000431060791016
    7. 'maximum' → logprob: -19.375431060791016
    8. '_MAX' → logprob: -19.375431060791016
    9. '```' → logprob: -19.625431060791016
    10. ' max' → logprob: -19.625431060791016

Token 1800: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -2.5776860184123507e-06
    2. 'tower' → logprob: -13.50000286102295
    3. 't' → logprob: -14.37500286102295
    4. 'max' → logprob: -15.62500286102295
    5. 'arr' → logprob: -15.87500286102295
    6. 'Tower' → logprob: -16.750001907348633
    7. '_' → logprob: -17.500001907348633
    8. '_max' → logprob: -17.625001907348633
    9. '```' → logprob: -17.875001907348633
    10. '_arr' → logprob: -18.250001907348633

Token 1801: 'ower' (ID: 1611)
  Prédit: 'ower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ower' → logprob: -0.13374723494052887
    2. '_t' → logprob: -2.2587473392486572
    3. 'tower' → logprob: -3.8837473392486572
    4. 't' → logprob: -9.633747100830078
    5. 'ow' → logprob: -10.633747100830078
    6. 'OWER' → logprob: -12.133747100830078
    7. 'o' → logprob: -12.383747100830078
    8. '   ' → logprob: -12.508747100830078
    9. 'tow' → logprob: -12.633747100830078
    10. 'Tower' → logprob: -12.633747100830078

Token 1802: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.00020652047533076257
    2. 'sequence' → logprob: -8.50020694732666
    3. 'Sequence' → logprob: -12.87520694732666
    4. '_SEQUENCE' → logprob: -15.25020694732666
    5. '   ' → logprob: -16.625205993652344
    6. 'sequ' → logprob: -17.250205993652344
    7. ' sequence' → logprob: -18.000205993652344
    8. '[' → logprob: -18.375205993652344
    9. '```' → logprob: -18.500205993652344
    10. '       ' → logprob: -18.625205993652344

Token 1803: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20485371351242065
    2. 'print' → logprob: -1.7048537731170654
    3. '
' → logprob: -6.079853534698486
    4. 'for' → logprob: -7.079853534698486
    5. '```' → logprob: -8.204854011535645
    6. ' print' → logprob: -11.329854011535645
    7. '    
' → logprob: -11.579854011535645
    8. '[' → logprob: -13.079854011535645
    9. '``' → logprob: -13.204854011535645
    10. ' for' → logprob: -13.454854011535645

Token 1804: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16405139863491058
    2. 'for' → logprob: -1.9140514135360718
    3. 'print' → logprob: -5.664051532745361
    4. '```' → logprob: -8.164051055908203
    5. ' for' → logprob: -9.789051055908203
    6. '
' → logprob: -12.664051055908203
    7. '    
' → logprob: -12.664051055908203
    8. '``' → logprob: -13.414051055908203
    9. '`' → logprob: -13.914051055908203
    10. '<|end|>' → logprob: -13.914051055908203

Token 1805: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.048666052520275116
    2. 'print' → logprob: -3.048666000366211
    3. '   ' → logprob: -9.548666000366211
    4. '
' → logprob: -12.298666000366211
    5. '```' → logprob: -13.048666000366211
    6. ' for' → logprob: -14.298666000366211
    7. '``' → logprob: -16.92366600036621
    8. ' print' → logprob: -18.17366600036621
    9. '    
' → logprob: -19.04866600036621
    10. 'import' → logprob: -19.17366600036621

Token 1806: ' v' (ID: 323)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.013968393206596375
    2. 'a' → logprob: -4.763968467712402
    3. 'num' → logprob: -5.263968467712402
    4. 'val' → logprob: -9.513968467712402
    5. 'v' → logprob: -9.513968467712402
    6. ' x' → logprob: -12.013968467712402
    7. 'i' → logprob: -12.513968467712402
    8. 'item' → logprob: -12.638968467712402
    9. 'ans' → logprob: -12.888968467712402
    10. 'value' → logprob: -13.888968467712402

Token 1807: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01105359848588705
    2. 'in' → logprob: -4.511053562164307
    3. 'v' → logprob: -12.636054039001465
    4. 'n' → logprob: -13.636054039001465
    5. ' ' → logprob: -14.011054039001465
    6. 'i' → logprob: -15.136054039001465
    7. '   ' → logprob: -16.13605308532715
    8. '  ' → logprob: -17.26105308532715
    9. ' ' → logprob: -17.38605308532715
    10. '	in' → logprob: -17.51105308532715

Token 1808: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: 0.0
    2. ' ans' → logprob: -17.5
    3. '(ans' → logprob: -18.0
    4. '   ' → logprob: -21.25
    5. '	ans' → logprob: -21.625
    6. '
' → logprob: -21.75
    7. 'answer' → logprob: -21.75
    8. '_ans' → logprob: -22.5
    9. 'print' → logprob: -23.75
    10. 'ANS' → logprob: -24.625

Token 1809: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03283056244254112
    2. ':' → logprob: -4.282830715179443
    3. ':
' → logprob: -5.032830715179443
    4. ',' → logprob: -5.657830715179443
    5. ' in' → logprob: -5.782830715179443
    6. '   ' → logprob: -6.782830715179443
    7. 'v' → logprob: -7.032830715179443
    8. 'in' → logprob: -7.407830715179443
    9. '):
' → logprob: -7.407830715179443
    10. '):' → logprob: -7.657830715179443

Token 1810: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20277436077594757
    2. '       ' → logprob: -1.7027744054794312
    3. '```' → logprob: -7.327774524688721
    4. '   ' → logprob: -7.452774524688721
    5. ' print' → logprob: -9.327774047851562
    6. '``' → logprob: -11.452774047851562
    7. '
' → logprob: -11.577774047851562
    8. ' ' → logprob: -12.577774047851562
    9. 'printf' → logprob: -13.202774047851562
    10. '	print' → logprob: -13.327774047851562

Token 1811: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.531315314830863e-06
    2. '       ' → logprob: -13.250003814697266
    3. ' print' → logprob: -13.500003814697266
    4. '   ' → logprob: -15.750003814697266
    5. '```' → logprob: -15.750003814697266
    6. '
' → logprob: -19.625003814697266
    7. '	print' → logprob: -19.750003814697266
    8. '``' → logprob: -20.250003814697266
    9. '           ' → logprob: -21.000003814697266
    10. 'printf' → logprob: -21.250003814697266

Token 1812: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.04858771339058876
    2. 'v' → logprob: -3.0485877990722656
    3. '(' → logprob: -15.798587799072266
    4. '	v' → logprob: -17.423587799072266
    5. ' v' → logprob: -17.923587799072266
    6. '(
' → logprob: -18.173587799072266
    7. ')v' → logprob: -18.173587799072266
    8. '```' → logprob: -18.173587799072266
    9. '$v' → logprob: -20.173587799072266
    10. '_v' → logprob: -20.548587799072266

Token 1813: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.869017852295656e-06
    2. ')
' → logprob: -12.125006675720215
    3. '   ' → logprob: -14.000006675720215
    4. '       ' → logprob: -15.375006675720215
    5. ')v' → logprob: -16.50000762939453
    6. ' )' → logprob: -16.62500762939453
    7. '())' → logprob: -16.87500762939453
    8. ')`' → logprob: -17.25000762939453
    9. '),' → logprob: -17.37500762939453
    10. '')' → logprob: -17.62500762939453

Token 1814: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.24071039259433746
    2. '<|end|>' → logprob: -1.7407103776931763
    3. '```' → logprob: -3.740710496902466
    4. '#' → logprob: -4.365710258483887
    5. ' if' → logprob: -6.615710258483887
    6. '<|end|>' → logprob: -8.240710258483887
    7. '
' → logprob: -8.490710258483887
    8. ')' → logprob: -9.990710258483887
    9. '...' → logprob: -9.990710258483887
    10. 'If' → logprob: -10.115710258483887

Token 1815: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00861528143286705
    2. ' __' → logprob: -4.758615493774414
    3. 'name' → logprob: -14.883615493774414
    4. '___' → logprob: -15.883615493774414
    5. '_name' → logprob: -16.008615493774414
    6. '_' → logprob: -16.383615493774414
    7. '```' → logprob: -16.883615493774414
    8. '__
' → logprob: -17.758615493774414
    9. '/__' → logprob: -18.008615493774414
    10. 'True' → logprob: -18.133615493774414

Token 1816: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.051772769540548325
    2. '==' → logprob: -3.3017728328704834
    3. ' ==' → logprob: -4.801772594451904
    4. '=="' → logprob: -5.801772594451904
    5. '```' → logprob: -6.926772594451904
    6. 'name' → logprob: -7.551772594451904
    7. '=='' → logprob: -8.426773071289062
    8. 'if' → logprob: -8.426773071289062
    9. '==
' → logprob: -8.676773071289062
    10. '__
' → logprob: -9.926773071289062

Token 1817: '__' (ID: 771)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7103501558303833
    2. '__' → logprob: -0.7103501558303833
    3. '=="' → logprob: -4.335350036621094
    4. '=='' → logprob: -6.210350036621094
    5. ' ==' → logprob: -6.335350036621094
    6. '```' → logprob: -9.460350036621094
    7. '==
' → logprob: -10.085350036621094
    8. '__.__' → logprob: -11.585350036621094
    9. '"' → logprob: -11.710350036621094
    10. '===' → logprob: -11.710350036621094

Token 1818: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05837047100067139
    2. ' ==' → logprob: -3.433370590209961
    3. '=="' → logprob: -4.058370590209961
    4. '=='' → logprob: -5.183370590209961
    5. '__' → logprob: -6.558370590209961
    6. '==
' → logprob: -9.183370590209961
    7. '.__' → logprob: -12.933370590209961
    8. '===' → logprob: -13.308370590209961
    9. '=' → logprob: -13.808370590209961
    10. '```' → logprob: -13.808370590209961

Token 1819: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4741378426551819
    2. ''' → logprob: -0.9741378426551819
    3. '__' → logprob: -9.724138259887695
    4. ' "__' → logprob: -14.974138259887695
    5. ''name' → logprob: -15.349138259887695
    6. '"name' → logprob: -15.724138259887695
    7. '   ' → logprob: -16.099138259887695
    8. ' '__' → logprob: -16.474138259887695
    9. '"user' → logprob: -17.224138259887695
    10. ''m' → logprob: -17.349138259887695

Token 1820: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6400760412216187
    2. 'main' → logprob: -1.1400760412216187
    3. ''' → logprob: -2.265076160430908
    4. '"' → logprob: -3.015076160430908
    5. '___' → logprob: -10.89007568359375
    6. '____' → logprob: -11.14007568359375
    7. '```' → logprob: -11.14007568359375
    8. 'Main' → logprob: -12.01507568359375
    9. '_main' → logprob: -12.14007568359375
    10. '__":
' → logprob: -12.39007568359375

Token 1821: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.03739839047193527
    2. '__' → logprob: -3.787398338317871
    3. '__':
' → logprob: -4.287398338317871
    4. '():
' → logprob: -9.287398338317871
    5. '__
' → logprob: -10.412398338317871
    6. '">
' → logprob: -10.537398338317871
    7. '__:' → logprob: -10.787398338317871
    8. ':' → logprob: -11.037398338317871
    9. '__()
' → logprob: -11.162398338317871
    10. '==' → logprob: -11.287398338317871

Token 1822: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.012155230157077312
    2. '   ' → logprob: -4.512155055999756
    3. '	main' → logprob: -7.262155055999756
    4. ' main' → logprob: -8.262155532836914
    5. '_main' → logprob: -9.137155532836914
    6. '(main' → logprob: -11.262155532836914
    7. '```' → logprob: -11.887155532836914
    8. '    
' → logprob: -12.262155532836914
    9. '<|end|>' → logprob: -12.262155532836914
    10. '_MAIN' → logprob: -13.637155532836914

Token 1823: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.0
    3. '   ' → logprob: -17.25
    4. '	main' → logprob: -18.875
    5. 'import' → logprob: -23.25
    6. '(main' → logprob: -23.625
    7. '.main' → logprob: -23.875
    8. '_main' → logprob: -24.375
    9. '```' → logprob: -26.25
    10. '
' → logprob: -26.375

Token 1824: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1822
Tokens correctement prédits (1ère position, stricte): 616
Tokens correctement prédits (1ère position, avec adaptation): 673
Tokens correctement prédits (top 10): 1314
Précision stricte (1ère position): 33.81%
Précision adaptée (1ère position): 36.94%
Précision (top 10): 72.12%
================================================================================
