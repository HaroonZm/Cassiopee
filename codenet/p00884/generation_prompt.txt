En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
#!/usr/bin/env python3

import sys
import math
import re
from bisect import bisect_right as br
from bisect import bisect_left as bl
sys.setrecursionlimit(1000000)
from heapq import heappush, heappop,heappushpop
from collections import defaultdict
from itertools import accumulate
from collections import Counter
from collections import deque
from operator import itemgetter
from itertools import permutations
mod = 10**9 + 7
inf = float('inf')
def I(): return int(sys.stdin.readline())
def LI(): return list(map(int,sys.stdin.readline().split()))

while 1:
    n = I()
    if n == 0:
        quit()
    f = defaultdict(dict)
    t = defaultdict(lambda : False)
    ch = defaultdict(lambda : False)
    stack = []
    for i in range(n):
        x = input()[:-1].split(':')
        y = x[1].split(',')
        x = x[0]
        for j in y:
            f[x][j] = 1
            if i != 0:
                continue
            stack.append(j)
    ans = 0
    while stack:
        x = stack.pop()
        if ch[x]:
            continue
        ch[x] = True
        if len(f[x]) == 0 and not t[x]:
            ans += 1
            t[x] = True
            continue
        for i,j in f[x].items():
            stack.append(i)
    print(ans)
```