Voici un énoncé de problème :

博士が愛した２進数
「君の靴のサイズはいくつかね」
初対面の私に、いきなり博士は尋ねました。
「 23.5 です」
「ほお、実にきりのいい数字だ。2 の 4 乗に 2 の 2 乗と 2 の 1 乗と 2 の 0 乗と 2 の -1 乗を 加えた数だ」
続けて博士は尋ねました。
「君、身長はいくつかね」
「はい、158.1 です」
博士は腕組みをして目を閉じました。しばらくの沈黙の後、口を開きました。
「ナァ~」
その後一緒に過ごした時間の中で、博士の行動がだんだん理解できるようになりました。
まず、 私が博士の求めに応じて実数を言います。実数が整数部 8 桁以内で小数部 4 桁以内の 2 進数で表される場合、博士は 2 進数への変換結果を満足げに語ります。そうでない場合、悲しげに「ナァ~」 と鳴きます。これは、私が負の実数を言うまで繰り返されるのです。
さて、博士は年齢とともにだんだんに長い計算が難しくなってきました。そこで、みなさんが博士に代わって、実数を入力し 2 進数に変換・出力するプログラムを作ってあげてください。ただし、2 進表現が制限桁数 (整数部 8 桁以内 + 小数部 4 桁以内) に収まらない場合は、NA (半角英字) を出力してください。入力される実数は整数部 8 桁以内、小数部 4 桁以内に収まるものとし、出力する 2 進表現は整数部 8 桁、小数部 4 桁で出力してください。
Input
複数のデータセットの並びが入力として与えられます。入力の終わりは負の実数ひとつの行で示されます。
各データセットとして１つの実数
n
が１行に与えられます。
データセットの数は 1200 を超えません。
Output
入力データセットごとに 2 進数への変換結果を出力します。
Sample Input
23.5
158.1
-1.0
Output for the Sample Input
00010111.1000
NA


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
"""
http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0220

"""
import sys
from sys import stdin
input = stdin.readline

def solve(f):
    if f >= 256.0:
        return 'NA'
    f *= 16
    int_f = int(f)
    if f != int_f:
        return 'NA'
    bin_f = bin(int_f)[2:]
    fraction_p = bin_f[-4:]
    integer_p = bin_f[:-4]
    return integer_p.zfill(8) + '.' + fraction_p.zfill(4)

def main(args):
    while True:
        f = float(input())
        if f < 0.0:
            break
        result = solve(f)
        print(result)

if __name__ == '__main__':
    main(sys.argv[1:])
```