Voici un énoncé de problème :

日本の暦
「西暦」は西洋から輸入された概念ですが、日本には暦上の年を表す方法として「元号」に年を付けて識別する和暦という概念があります。例えば今年は西暦なら２０１６年ですが、和暦なら平成２８年です。どちらもよく使われる年の表現方法ですが、ある年の西暦がわかっていても和暦で何年かわからない、またはその逆の状況を経験したことはありませんか？
西暦で年が与えられたとき和暦の年を、和暦で年が与えられたとき西暦の年を出力するプログラムを作成せよ。ただし、西暦と和暦の対応は、簡単のため以下のようにする。
西暦
和暦
１８６８年から１９１１年
明治元年から明治４４年
１９１２年から１９２５年
大正元年から大正１４年
１９２６年から１９８８年
昭和元年から昭和６３年
１９８９年から２０１６年
平成元年から平成２８年
Input
入力は以下の形式で与えられる。
E
Y
入力は１行からなり、
E
(0 ≤
E
≤ 4) は与えられる暦の種類、
Y
はその暦での年であり、
E
が 0 のときは西暦
Y
(1868 ≤
Y
≤ 2016)年、1 のときは和暦の明治
Y
(1 ≤
Y
≤ 44)年、2 のときは和暦の大正
Y
(1 ≤
Y
≤ 14)年、3 のときは和暦の昭和
Y
(1 ≤
Y
≤ 63)年、4 のときは和暦の平成
Y
(1 ≤
Y
≤ 28)年を表す。
Output
西暦ならば和暦に、和暦ならば西暦に変換した結果を、１行に出力する。ただし、西暦を和暦に変換した結果は、明治なら文字「M」、大正なら文字「T」、昭和なら文字「S」、平成なら文字「H」を先頭に付けて出力する。
Sample Input 1
0 2015
Sample Output 1
H27
Sample Input 2
0 1912
Sample Output 2
T1
Sample Input 3
2 1
Sample Output 3
1912
Sample Input 4
4 28
Sample Output 4
2016


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
def wa(y):
  if y <= 1911:
    return "M" + str(y - 1867)
  elif y  <= 1925:
    return "T" + str(y - 1911)
  elif y <= 1988:
    return "S" + str(y - 1925)
  else:
    return "H" + str(y - 1988)
def sei(e, y):
  if e == 1:
    return y + 1867
  elif e == 2:
    return y + 1911
  elif e == 3:
    return y + 1925
  else:
    return y + 1988 
e, y = map(int, input().split())
if e == 0:
  print(wa(y))
else:
  print(sei(e, y))
```