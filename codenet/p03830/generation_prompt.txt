Voici un énoncé de problème :

Score :
300
points
Problem Statement
You are given an integer
N
.
Find the number of the positive divisors of
N!
, modulo
10^9+7
.
Constraints
1≤N≤10^3
Input
The input is given from Standard Input in the following format:
N
Output
Print the number of the positive divisors of
N!
, modulo
10^9+7
.
Sample Input 1
3
Sample Output 1
4
There are four divisors of
3!
=6
:
1
,
2
,
3
and
6
. Thus, the output should be
4
.
Sample Input 2
6
Sample Output 2
30
Sample Input 3
1000
Sample Output 3
972926972


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
import math
import collections

# 0以上整数x「未満」の素数をリストに格納して返す
def primes(x):
    if x < 2: return []

    primes = [i for i in range(x)]
    primes[1] = 0 # 1は素数ではない

    # エラトステネスのふるい
    for prime in primes:
        if prime > math.sqrt(x): break
        if prime == 0: continue
        for non_prime in range(2 * prime, x, prime): primes[non_prime] = 0

    return [prime for prime in primes if prime != 0]

p = primes(1000)
dic = collections.defaultdict(int)
N = int(input())
mod = 10**9 +7
for i in range(1, N+1):
    for j in p:
        while i % j == 0:
            dic[j] += 1
            i = i // j
    ans = 1
for c in dic.values():
    ans *= (c+1)
    ans %= mod
print(ans)
```