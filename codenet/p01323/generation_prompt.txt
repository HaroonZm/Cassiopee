En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
def kesu(x, s, c, h):
    global n
    if (x[0] - 1, x[1]) not in s and a[x[0] - 1][x[1]] == c:
        s.add((x[0] - 1, x[1]))
        kesu((x[0] - 1, x[1]), s, c, h + 1) 
    if (x[0] + 1, x[1]) not in s and a[x[0] + 1][x[1]] == c:
        s.add((x[0] + 1, x[1]))
        kesu((x[0] + 1, x[1]), s, c, h + 1) 
    if (x[0], x[1] - 1) not in s and a[x[0]][x[1] - 1] == c:
        s.add((x[0], x[1] - 1))
        kesu((x[0], x[1] - 1), s, c, h + 1) 
    if (x[0], x[1] + 1) not in s and a[x[0]][x[1] + 1] == c:
        s.add((x[0], x[1] + 1))
        kesu((x[0], x[1] + 1), s, c, h + 1)
    if h == 0 and len(s) > 3:
        for i in s:a[i[0]][i[1]] = "."
        n |= s

def otosu():
    for i in range(1,12)[::-1]:
        for j in range(1, 7):
            n = 0
            while i + n < 12:
                if a[i + n][j] != "." and a[i + n + 1][j] == ".":
                    a[i + n][j], a[i + n + 1][j] = a[i + n + 1][j], a[i + n][j]
                    n += 1
                else:break
                

for _ in range(int(input())):
    a = [["." for _ in range(8)]] + [["."] + list(input()) + ["."] for _ in range(12)] + [["." for _ in range(8)]]
    rensa = 0
    while 1:
        n = set()
        for i in range(1, 13):
            for j in range(1, 7):
                if a[i][j] in ("RGBYP"):
                    kesu((i, j), set(), a[i][j], 0)
        if n == set():break
        else:
            rensa += 1
            for i in range(1, 13):
                for j in range(1, 7):
                    if a[i][j] == "O":
                        if (i - 1, j) in n or (i + 1, j) in n or (i, j - 1) in n or (i, j + 1) in n:a[i][j] = "."
        otosu()
    print(rensa)
```