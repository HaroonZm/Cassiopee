Voici un énoncé de problème :

Maximum Sum Sequence II
与えられた整数の行列
a
1,1
a
1,2
...
a
1,n
a
2,1
a
2,2
...
a
2,n
:
a
n,1
a
n,2
...
a
n, n
で、縦・横方向に１つ以上連続した項（部分行列）の和の最大値を出力して終了するプログラムを作成して下さい。
Input
入力データは以下の形式で与えられます。
n
a
1,1
a
1,2
...
a
1,n
a
2,1
a
2,2
...
a
2,n
:
a
n,1
a
n,2
...
a
n, n
n
は 1 以上 100 以下、
a
i,j
は -10000 以上 10000 以下です。
Output
最大値を 1 行に出力して下さい。
Sample Input 1
3
1 -2 3
-4 5 6
7 8 -9
Output for the Sample Input 1
16
この入力の場合、以下の部分行列の項の和が最大となります。
-4 5
7 8
Sample Input 2
4
1 3 -9 2
2 7 -1 5
-8 3 2 -1
5 0 -3 1
Output for the Sample Input 2
15
この入力の場合、以下の部分行列の項の和が最大となります。
7 -1 5
3 2 -1


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
def x():
    m=-10**9
    for i in N:
        p=[0]*n
        for j in range(i,n):
            for k in N:
                p[k]+=l[k][j]
            m=max(P(p),m)
    return m

def P(a):
    m,c=-10**5,0
    for x in N:
        c+=a[x]
        m=max(c,m)
        if c<0:
            c=0
    return m

n=int(raw_input())
N=range(n)
l=[]
for i in N:
    l.append(map(int,raw_input().split()))
print x()
```