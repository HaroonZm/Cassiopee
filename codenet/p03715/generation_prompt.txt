Voici un énoncé de problème :

Score :
400
points
Problem Statement
There is a bar of chocolate with a height of
H
blocks and a width of
W
blocks.
Snuke is dividing this bar into exactly three pieces.
He can only cut the bar along borders of blocks, and the shape of each piece must be a rectangle.
Snuke is trying to divide the bar as evenly as possible.
More specifically, he is trying to minimize
S_{max}
-
S_{min}
, where
S_{max}
is the area (the number of blocks contained) of the largest piece, and
S_{min}
is the area of the smallest piece.
Find the minimum possible value of
S_{max} - S_{min}
.
Constraints
2 ≤ H, W ≤ 10^5
Input
Input is given from Standard Input in the following format:
H
W
Output
Print the minimum possible value of
S_{max} - S_{min}
.
Sample Input 1
3 5
Sample Output 1
0
In the division below,
S_{max} - S_{min} = 5 - 5 = 0
.
Sample Input 2
4 5
Sample Output 2
2
In the division below,
S_{max} - S_{min} = 8 - 6 = 2
.
Sample Input 3
5 5
Sample Output 3
4
In the division below,
S_{max} - S_{min} = 10 - 6 = 4
.
Sample Input 4
100000 2
Sample Output 4
1
Sample Input 5
100000 100000
Sample Output 5
50000


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
import sys

h,w=map(int,input().split())

ans=10**10

S=[]

if h%3==0 or w%3==0:
  print(0)
  sys.exit()

for h1 in [h//3,(h//3)+1]:
  if ((h-h1)*w)%2==0:
    S.append([h1*w,((h-h1)*w)//2,((h-h1)*w)//2])
  else:
    S.append([h1*w,((h-h1)//2)*w,((h-h1)//2+1)*w])
    S.append([h1*w,(w//2)*(h-h1),(w//2+1)*(h-h1)])

for w1 in [w//3,(w//3)+1]:
  if ((w-w1)*h)%2==0:
    S.append([w1*h,((w-w1)*h)//2,((w-w1)*h)//2])
  else:
    S.append([w1*h,((w-w1)//2)*h,((w-w1)//2+1)*h])
    S.append([w1*h,(h//2)*(w-w1),(h//2+1)*(w-w1)])

for si in S:
  ans=min(ans,max(si)-min(si))

print(ans)
```