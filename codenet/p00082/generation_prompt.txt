Voici un énoncé de problème :

メリーゴーランド
遊園地にあるメリーゴーランドはご存じでしょう。大きな円盤の上に馬や馬車などの乗り物が固定されていて、円盤が回転すると同時に乗り物が上下に揺れる、定番の遊具です。ある遊園地のメリーゴーランドは、４人乗りの馬車が２台、２人乗りの車２台、１人乗りの馬が４台、計８台の乗り物が図１のような順序で備えられています。そして、遊園地においでのお客様は、図１に示す乗り場０〜７のどこかで待つようになっています。
この遊園地のメリーゴーランドは、かならず乗り物が乗り場にぴったりと合う位置に停止します。そして、０〜７のそれぞれで待っているお客さまは、目の前にとまった乗り物に乗ることになっています。急いで他の乗り場へ移動してそこから乗るということはできません。効率よく、お客さまにたのしんでいただくためには、メリーゴーランドの停止する位置をうまく調整して、乗れないお客さまをできるだけ少なくするようにしなければなりません。
乗り場０〜７で待っているお客さまの人数を読み込んで、どの位置にどの乗り物が来るように止めれば乗れないお客さまが最も少なくなるかを出力するプログラムを作成してください。
入力
入力は複数のデータセットからなります。各データセットは以下の形式で与えられます。
p
0
p
1
p
2
p
3
p
4
p
5
p
6
p
7
乗り場 0, 1, ..., 7 で待っているお客様の人数を表す整数
p
0
,
p
1
,... ,
p
7
( 0 ≤
p
i
≤ 10,000) が空白区切りで１行に与えられます。
出力
メリーゴーランドの乗り物の馬車を 4、車を 2、馬を 1 で表すこととします。乗り場 0, 1, ... , 7 にとめる乗り物を、それぞれ
c
0
,
c
1
,...,
c
7
とします。データセットごとに、
c
0
,
c
1
,...,
c
7
を空白区切りで 1 行に出力します。
なお、乗れなくなるお客さまが最小となるとめ方が複数ある場合は、
c
0
c
1
c
2
c
3
c
4
c
5
c
6
c
7
を 8 桁の整数
V
とみなし、
V
が最小となるとめ方を選ぶものとします。
データセットの数は 100 を超えません。
Sample Input
2 3 1 4 0 1 0 1
4 2 3 2 2 2 1 1
Output for the Sample Input
1 4 1 4 1 2 1 2
4 1 4 1 2 1 2 1


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
mgr = [4, 1, 4, 1, 2, 1, 2, 1]

while True:
    try:
        p = list(map(int, input().split(' ')))
        v = []
        for i in range(8):
            q = mgr[i:] + mgr[:i]
            sum_v = sum(p) - sum(p[j]-q[j] if p[j]-q[j] >= 0 else 0 for j in range(8))
            v.append(sum_v)
        if v.count(max(v)) > 1:
            mv = max(v)
            ans = []
            for i in range(8):
                if v[i] == mv:
                    ans.append(int("".join(map(str, mgr[i:] + mgr[:i]))))
            print(" ".join(list(str(min(ans)))))
        else:
            i = v.index(max(v))
            print(" ".join(map(str, mgr[i:] + mgr[:i])))
    except:
        break
```