Voici un énoncé de problème :

Score :
300
points
Problem Statement
Given is a string
S
consisting of lowercase English letters. Find the maximum positive integer
K
that satisfies the following condition:
There exists a partition of
S
into
K
non-empty strings
S=S_1S_2...S_K
such that
S_i \neq S_{i+1}
(
1 \leq i \leq K-1
).
Here
S_1S_2...S_K
represents the concatenation of
S_1,S_2,...,S_K
in this order.
Constraints
1 \leq |S| \leq 2 \times 10^5
S
consists of lowercase English letters.
Input
Input is given from Standard Input in the following format:
S
Output
Print the maximum positive integer
K
that satisfies the condition.
Sample Input 1
aabbaa
Sample Output 1
4
We can, for example, divide
S
into four strings
aa
,
b
,
ba
, and
a
.
Sample Input 2
aaaccacabaababc
Sample Output 2
12


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
s = input()
count = 1
tmp = s[0]
i = 1
while i < len(s):
    if tmp != s[i]:
        count += 1
        tmp = s[i]
        i += 1
    elif i == len(s) - 1:
        break
    else:
        count += 1
        tmp = s[i] + s[i+1]
        i += 2
print(count)
```