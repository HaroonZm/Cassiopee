Voici un énoncé de problème :

Square Route
スクウェア・ルート
English text is not available in this practice contest.
このたび新しい豪邸を建てることを決めた大富豪の品田氏は，どの街に新邸を建てようかと悩んでいる．実は，品田氏は正方形がとても好きという変わった人物であり，そのため少しでも正方形の多い街に住みたいと思っている．
品田氏は，碁盤目状に道路の整備された街の一覧を手に入れて，それぞれの街について，道路により形作られる正方形の個数を数えることにした．ところが，道と道の間隔は一定とは限らないため，手作業で正方形を数えるのは大変である．そこであなたには，碁盤目状の道路の情報が与えられたときに，正方形の個数を数えるプログラムを書いて欲しい．
Input
入力は複数のデータセットから構成されており，各データセットは以下のような構成になっている．
N
M
h
1
h
2
...
h
N
w
1
w
2
...
w
M
1 行目には 2 つの正の整数
N
,
M
(1 ≦
N
,
M
≦ 1500) が与えられる．続く
N
行
h
1
,
h
2
, ...,
h
N
(1 ≦
h
i
≦ 1000）は，道路と道路の南北方向の間隔を表す．ここで
h
i
は北から
i
番目の道路と北から
i
+ 1 番目の道路の間隔である．同様に，続く
M
行
w
1
, ...,
w
M
(1 ≦
w
i
≦ 1000）は，道路と道路の東西方向の間隔を表す．ここで
w
i
は西から
i
番目の道路と西から
i
+ 1 番目の道路の間隔である．道路自体の幅は十分細いため考慮する必要はない．
図 D-1: 最初のデータセット
N
=
M
= 0 は入力の終端を示しており，データセットには含めない．
Output
各データセットに対して，正方形の個数を 1 行に出力しなさい．たとえば，Sample Input の最初のデータセットにおいては，以下のとおり 6 個の正方形を含むので，このデータセットに対する出力は 6 となる．
図 D-2: 最初のデータセットに含まれる正方形
Sample Input
3 3
1
1
4
2
3
1
1 2
10
10
10
0 0
Output for the Sample Input
6
2


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
while True:
    n, m = [int(_) for _ in raw_input().split()]
    if n == m == 0:
        break

    h = [int(raw_input()) for _ in xrange(n)]
    w = [int(raw_input()) for _ in xrange(m)]

    hs = {}

    for i in xrange(n):
        h0 = 0
        for j in xrange(i, n):
            h0 += h[j]
            hs[h0] = hs.get(h0, 0) + 1

    ans = 0

    for i in xrange(m):
        w0 = 0
        for j in xrange(i, m):
            w0 += w[j]
            ans += hs.get(w0, 0)

    print(ans)
```