Voici un énoncé de problème :

Score :
400
points
Problem Statement
Snuke has a string
S
consisting of three kinds of letters:
a
,
b
and
c
.
He has a phobia for palindromes, and wants to permute the characters in
S
so that
S
will not contain a palindrome of length
2
or more as a substring. Determine whether this is possible.
Constraints
1 \leq |S| \leq 10^5
S
consists of
a
,
b
and
c
.
Input
Input is given from Standard Input in the following format:
S
Output
If the objective is achievable, print
YES
; if it is unachievable, print
NO
.
Sample Input 1
abac
Sample Output 1
YES
As it stands now,
S
contains a palindrome
aba
, but we can permute the characters to get
acba
, for example, that does not contain a palindrome of length
2
or more.
Sample Input 2
aba
Sample Output 2
NO
Sample Input 3
babacccabab
Sample Output 3
YES


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
s=input()
l=len(s)
cnt1=0
cnt2=0
cnt3=0
for i in range(l):
  if s[i]=='a':
    cnt1+=1
  elif s[i]=='b':
    cnt2+=1
  elif s[i]=='c':
    cnt3+=1
if max(cnt1,cnt2,cnt3)==1:
  print('YES')
elif cnt1==0 or cnt2==0 or cnt3==0:
  print('NO')
elif max(cnt1,cnt2,cnt3)-min(cnt1,cnt2,cnt3)<=1:
  print('YES')
else:
  print('NO')
```