Voici un énoncé de problème :

Score :
600
points
Problem Statement
Find the number of sequences of length
K
consisting of positive integers such that the product of any two adjacent elements is at most
N
, modulo
10^9+7
.
Constraints
1\leq N\leq 10^9
1
2\leq K\leq 100
(fixed at 21:33 JST)
N
and
K
are integers.
Input
Input is given from Standard Input in the following format:
N
K
Output
Print the number of sequences, modulo
10^9+7
.
Sample Input 1
3 2
Sample Output 1
5
(1,1)
,
(1,2)
,
(1,3)
,
(2,1)
, and
(3,1)
satisfy the condition.
Sample Input 2
10 3
Sample Output 2
147
Sample Input 3
314159265 35
Sample Output 3
457397712


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
def main():
    import sys
    from math import sqrt
    input = sys.stdin.readline

    mod = 1000000007
    N, K = map(int, input().split())
    n = int(sqrt(N))
    dp = [[0] * (2*n+1) for _ in range(K+1)]
    dp[0][1] = 1

    num = [0] * (n+1)
    for i in range(1, n):
        num[i] = N // i - N // (i+1)
    num[n] = N // n - n

    for i in range(K):
        cs = dp[i][:n+1]
        cs2 = dp[i][n+1:]
        for j in range(1, n+1):
            cs[j] = (cs[j] + cs[j-1])%mod
        for j in range(1, n):
            cs2[j] = (cs2[j] + cs2[j-1])%mod
        for j in range(1, n+1):
            dp[i+1][-j] = (cs[j] * num[j])%mod
            dp[i+1][j] = (cs2[-j] + cs[n])%mod
    ans = 0
    for a in dp[-1]:
        ans = (ans + a)%mod
    print(ans)

if __name__ == '__main__':
    main()
```