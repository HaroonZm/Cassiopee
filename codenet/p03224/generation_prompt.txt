Voici un énoncé de problème :

Score :
500
points
Problem Statement
You are given an integer
N
. Determine if there exists a tuple of subsets of
\{1,2,...N\}
,
(S_1,S_2,...,S_k)
, that satisfies the following conditions:
Each of the integers
1,2,...,N
is contained in exactly two of the sets
S_1,S_2,...,S_k
.
Any two of the sets
S_1,S_2,...,S_k
have exactly one element in common.
If such a tuple exists, construct one such tuple.
Constraints
1 \leq N \leq 10^5
N
is an integer.
Input
Input is given from Standard Input in the following format:
N
Output
If a tuple of subsets of
\{1,2,...N\}
that satisfies the conditions does not exist, print
No
.
If such a tuple exists, print
Yes
first, then print such subsets in the following format:
k
|S_1|
S_{1,1}
S_{1,2}
...
S_{1,|S_1|}
:
|S_k|
S_{k,1}
S_{k,2}
...
S_{k,|S_k|}
where
S_i={S_{i,1},S_{i,2},...,S_{i,|S_i|}}
.
If there are multiple such tuples, any of them will be accepted.
Sample Input 1
3
Sample Output 1
Yes
3
2 1 2
2 3 1
2 2 3
It can be seen that
(S_1,S_2,S_3)=(\{1,2\},\{3,1\},\{2,3\})
satisfies the conditions.
Sample Input 2
4
Sample Output 2
No


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
from itertools import combinations
from math import sqrt
n=int(input())

k=int(sqrt(2*n))+1

if(k*(k-1)==2*n):
    res=[[0 for _ in range(k-1)] for _ in range(k)]
    num=[0 for _ in range(k)]
    for i,pair in enumerate(combinations(range(k),2)):
        for a in pair:
            res[a][num[a]]=i+1
            num[a]+=1

    print('Yes')
    print(k)
    for row in res:
        print(k-1,end=' ')
        for e in row:
            print(e,end=' ')
        print('')
else:
    print('No')
```