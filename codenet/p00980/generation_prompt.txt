En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
#!/usr/bin/python3

import os
import sys

def main():
    W, D, N = read_ints()
    M = [tuple(read_ints()) for _ in range(N)]
    ans = solve(W, D, N, M)
    if ans is None:
        print('No')
    else:
        print(ans)

def solve(W, D, N, M):
    INF = 999
    H = [[INF] * W for _ in range(D)]

    hmap = {}
    for h in range(-210, 101):
        hmap[h] = set()

    for x, y, z in M:
        x -= 1
        y -= 1
        hmap[z].add((x, y))
        H[y][x] = z

    for h in range(100, -210, -1):
        for x, y in hmap[h]:
            if H[y][x] == INF:
                H[y][x] = h
            elif H[y][x] > h:
                continue

            for dx, dy in ((1, 0), (-1, 0), (0, 1), (0, -1)):
                nx = x + dx
                ny = y + dy
                if nx < 0 or nx >= W or ny < 0 or ny >= D:
                    continue
                if H[ny][nx] < h - 1:
                    return None
                if H[ny][nx] == INF:
                    hmap[h - 1].add((nx, ny))

    return sum([sum(r) for r in H])

###############################################################################

DEBUG = 'DEBUG' in os.environ

def inp():
    return sys.stdin.readline().rstrip()

def read_int():
    return int(inp())

def read_ints():
    return [int(e) for e in inp().split()]

def dprint(*value, sep=' ', end='\n'):
    if DEBUG:
        print(*value, sep=sep, end=end)

if __name__ == '__main__':
    main()
```