En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
import heapq
from collections import deque
from enum import Enum
import sys
import math
from _heapq import heappush, heappop
import copy
from test.support import _MemoryWatchdog

BIG_NUM = 2000000000
HUGE_NUM = 99999999999999999
MOD = 1000000007
EPS = 0.000000001
sys.setrecursionlimit(100000)

MIN = 0
MAX = 20
SIZE = 21

N = int(input())
dp = [[0]*SIZE for _ in range(N-1)]

table = list(map(int,input().split()))

dp[0][table[0]] = 1

for i in range(1,N-1):
    for k in range(MIN,MAX+1):
        if dp[i-1][k] == 0:
            continue
        if k+table[i] <= MAX:
            dp[i][k+table[i]] += dp[i-1][k]
        if k-table[i] >= MIN:
            dp[i][k-table[i]] += dp[i-1][k]

print("%d"%(dp[N-2][table[N-1]]))
```