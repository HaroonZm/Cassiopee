En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
import sys
sys.setrecursionlimit(10**7)

def run():
  V, E = map(int, input().split())
  if V == 1: exit()
  g = {}
  for e in range(E):
    A, B = map(int, input().split())
    g.setdefault(B, []).append(A)
    g.setdefault(A, []).append(B)
  order = [0]*V
  count = 0
  art = []
  def dfs(now, prev):
    nonlocal count
    fcount = artflag = 0
    count += 1
    low_p = order[now-1] = count
    for nxt in g[now]:
      if nxt == prev:
        continue
      if order[nxt-1] == 0:
        nxt_low_p = dfs(nxt, now)
        artflag |= nxt_low_p >= order[now-1]
        low_p = min(low_p, nxt_low_p)
        fcount += 1
      else:
        low_p = min(low_p, order[nxt-1])
    if (prev == -1 and fcount > 1) or (prev != -1 and artflag):
      art.append(now)
    return low_p
  dfs(1, -1)
  for a in sorted(art):
    print(a)
  
if __name__ == '__main__':
  run()
```