En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
INF = 100000
while True:
  n = int(input())
  if not n: break
  lst = [int(input()) for _ in range(n)]

  def check(x):
    c1 = c2 = lst[x]
    l = r = x
    b = 0
    for i in range(r, n):
      if lst[i] != c2:
        r = i - 1
        break
    else:
      r = n - 1

    for i in range(l, -1, -1):
      if lst[i] != c1:
        l = i + 1
        break
    else:
      l = 0

    if r - l - b < 3:
      return n
    else:
      b = r - l

    while l > 0 and r < n - 1:
      c1 = lst[l - 1]
      c2 = lst[r + 1]
      if c1 != c2:
        break
      else:
        for i in range(r + 1,n):
          if lst[i] != c2:
            r = i - 1
            break
        else:
          r = n - 1
           
        for i in range(l - 1, -1, -1):
          if lst[i] != c1:
            l = i + 1
            break
        else:
          l = 0

        if r - l - b < 4:
          break
        else:
          b = r - l
    return n - (b + 1)

  ans = INF
  for i in range(n):
    lst[i] = (lst[i] + 1) % 3 + 1
    ans = min(ans, check(i))
    lst[i] = (lst[i] + 1) % 3 + 1
    ans = min(ans, check(i))
    lst[i] = (lst[i] + 1) % 3 + 1
  print(ans)
```