Voici un énoncé de problème :

凸
n
角形の面積
凸
n
角形（すべての頂点の内角が 180 度未満である多角形、要するにへこんでいない多角形のこと）の頂点の座標を読んで、その面積を出力するプログラムを作成してください。頂点には辺のつながりの順序に従って頂点 1、頂点 2、頂点 3、‥‥頂点
n
という名前がついています。
ただし、
n
は 3 以上 20 以下とします。また、次の、三角形の 3 辺の長さ
a, b, c
から面積
S
を求める公式を使ってもかまいません。
入力
入力は以下の形式で与えられます。
x
1
,
y
1
x
2
,
y
2
:
x
n
,
y
n
x
i
,
y
i
はそれぞれ頂点
i
の
x
座標,
y
座標を表す実数です。
出力
面積
S
（実数）を１行に出力します。
出力は 0.000001 以下の誤差を含んでもかまいません。
Sample Input
0.0,0.0
0.0,1.0
1.0,1.0
2.0,0.0
1.0,-1.0
Output for the Sample Input
2.500000


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
import sys
from math import sqrt, hypot

def _hypot(p1, p2):
    return hypot(p2[0]-p1[0], p2[1]-p1[1])

def heron(p1, p2, p3):
    e1, e2, e3 = _hypot(p1, p2), _hypot(p2, p3), _hypot(p1, p3)
    z = (e1+e2+e3)/2
    return sqrt(z*(z-e1)*(z-e2)*(z-e3))

a = [tuple(map(float, l.split(","))) for l in sys.stdin]
result = 0
for p1, p2 in zip(a[1:], a[2:]):
    result += heron(a[0], p1, p2)
print(result)
```