Voici un énoncé de problème :

Score:
300
points
Problem Statement
Find the minimum prime number greater than or equal to
X
.
Notes
A prime number is an integer greater than
1
that cannot be evenly divided by any positive integer except
1
and itself.
For example,
2
,
3
, and
5
are prime numbers, while
4
and
6
are not.
Constraints
2 \le X \le 10^5
All values in input are integers.
Input
Input is given from Standard Input in the following format:
X
Output
Print the minimum prime number greater than or equal to
X
.
Sample Input 1
20
Sample Output 1
23
The minimum prime number greater than or equal to
20
is
23
.
Sample Input 2
2
Sample Output 2
2
X
itself can be a prime number.
Sample Input 3
99992
Sample Output 3
100003


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
def P(n):#素数判定のアルゴリズム(O(√n))
    if type(n)!=int:raise TypeError#自然数以外はエラーを返す
    if n<1:raise ValueError#1未満は定義域を外れています
    if n==1:return -1#1は素数でも合成数でもないので負数を返す
    if n%2==0and n!=2:return 2#高速化用に2を別で判定
    a=3
    while a*a<n:#nの平方根以下のすべての奇数で割れるか判定
        if n%a==0:return a#割り切れたら最小の素因数を返す
        a+=2#奇数のみの判定なので偶数を飛ばせる
    return 0#割れなかったら(素数なら)0を返す
import math
a=int(input())
while P(a):a+=1
print(a)
```