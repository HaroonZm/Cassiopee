Voici un énoncé de problème :

Advanced Algorithm Class
In the advanced algorithm class, n
2
students sit in n rows and
n columns. One day, a professor who teaches this subject comes into the class, asks the shortest student in each row to lift up his left hand, and the tallest student in each column to lift up his right hand.
What is the height of the student whose both hands are up ? The student will
become a target for professor’s questions.
Given the size of the class, and the height of the students in the class, you
have to print the height of the student who has both his hands up in the class.
Input
The input will consist of several cases. the first line of each case will be n(0 < n < 100), the number of rows and columns in the class. It will then
be followed by a n-by-n matrix, each row of the matrix appearing on a single
line. Note that the elements of the matrix may not be necessarily distinct. The
input will be terminated by the case n = 0.
Output
For each input case, you have to print the height of the student in the class
whose both hands are up. If there is no such student, then print 0 for that case.
Sample Input
3
1 2 3
4 5 6
7 8 9
3
1 2 3
7 8 9
4 5 6
0
Output for the Sample Input
7
7


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
while 1:
	n=input()
	if n==0:break
	s=[map(int,raw_input().split()) for i in range(n)]
	sh=set([min(s[i]) for i in range(n)])
	tl=set([max([s[j][i] for j in range(n)]) for i in range(n)])
	print list(sh&tl)[0] if len(sh&tl)>0 else 0
```