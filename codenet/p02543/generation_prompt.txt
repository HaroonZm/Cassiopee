En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
import sys
readline = sys.stdin.readline

INF = 10**18+3

N, K = map(int, input().split())
X = list(map(int, readline().split())) + [INF]

left = [None]*N
r = 0

for i in range(N):
    while r < N and X[r+1] - X[i] < K:
        r += 1
    left[i] = (r, i)
left = [left]
nb = N.bit_length()
for _ in range(nb):
    res = [None]*N
    for idx in range(N):
        r, i = left[-1][idx]
        if r >= N-1:
            res[idx] = (N, None)
        else:
            r1, i1 = left[-1][r+1]
            if r1 == N:
                res[idx] = (N, None)
            else:    
                res[idx] = (r1, i+i1)
    left.append(res)

right = [None]*N
l = N-1

for i in range(N-1, -1, -1):
    while 0 < l and X[i] - X[l-1] < K:
        l -= 1
    right[i] = (l, i)
right = [right]
for _ in range(nb):
    res = [None]*N
    for idx in range(N):
        l, i = right[-1][idx]
        if l <= 0:
            res[idx] = (-1, None)
        else:
            l1, i1 = right[-1][l-1]
            if l1 == -1:
                res[idx] = (-1, None)
            else:    
                res[idx] = (l1, i+i1)
    right.append(res)

Q = int(readline())
Ans = [None]*Q
for qu in range(Q):
    l, r = map(int, readline().split())
    l -= 1

    vn = l
    li = 0
    ml = 0
    for j in range(nb-1, -1, -1):
        vf, ix = left[j][vn]
        if vf < r:
            vn = vf+1
            li += ix
            ml += 1<<j
        if vn >= r:
            break
    if vn < r:
        ml += 1
        li += vn
        
    
    
    l -= 1
    r -= 1
    vn = r
    ri = 0
    mr = 0
    for j in range(nb-1, -1, -1):
        vf, ix = right[j][vn]
        if l < vf:
            vn = vf-1
            ri += ix
            mr += 1<<j
        if vn <= l:
            break
    if l < vn:
        mr += 1
        ri += vn
        
    Ans[qu] = ri-li + ml

print('\n'.join(map(str, Ans)))
```