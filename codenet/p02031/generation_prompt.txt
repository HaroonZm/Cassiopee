Voici un énoncé de problème :

B: 括弧を語る数 / Parentheses Number
問題
以下のように 正しい括弧列 を定めます。
空文字列は正しい括弧列である
正しい括弧列
S
に対して
(
S
)
は正しい括弧列である
正しい括弧列
S
,
T
に対して
ST
は正しい括弧列である
ここで、正しい括弧列に対して以下のような規則で順列を対応付けます。
i
番目の
閉じ括弧
が
j
番目の
開き括弧
に対応しているとき、 数列の
i
番目の値は
j
である。
長さ
n
の順列
P = ( p_1, p_2,
$\ldots$
, p_n )
が与えられるので、 それに対応する括弧列を復元してください。
ただし、順列に対応する括弧列が存在しない場合は
:(
を出力してください。
入力形式
n
p_1
p_2
$\ldots$
p_n
1 行目に順列の項数
n
が与えられる。
2 行目に順列
p_1, p_2,
$\ldots$
, p_i,
$\ldots$
, p_n
が空白区切りで与えられる。
制約
1 \leq n \leq 10^5
1 \leq p_i \leq n
入力は全て整数である。
P = ( p_1, p_2,
$\ldots$
, p_n )
は順列である。
出力形式
順列に対応する括弧列を出力してください。
そのような括弧列が存在しない場合は
:(
を出力してください。
入力例1
2
2 1
出力例1
(())
入力例2
10
1 2 3 4 5 6 7 8 9 10
出力例2
()()()()()()()()()()
入力例3
3
3 1 2
出力例3
:(


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
n = int(input())
a = list(map(int,input().split()))
cnt = 0
ans = ''
st = list()
for x in a:
    while cnt < x:
        ans += '('
        cnt += 1
        st.append(cnt)
    if st[-1] == x:
        st.pop()
        ans += ')'
    else:
        ans = ':('
        break
print(ans)
```