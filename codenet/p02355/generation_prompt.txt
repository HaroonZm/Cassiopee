Voici un énoncé de problème :

The Smallest Window II
For a given array $a_1, a_2, a_3, ... , a_N$ of $N$ elements and an integer $K$, find the smallest sub-array size (smallest window length) where the elements in the sub-array contains all integers in range [$1, 2, ..., K$]. If there is no such sub-array, report 0.
Constraints
$1 \leq N \leq 10^5$
$1 \leq K \leq 10^5$
$1 \leq a_i \leq 10^5$
Input
The input is given in the following format.
$N$ $K$
$a_1$ $a_2$ ... $a_N$
Output
Print the smallest sub-array size in a line.
Sample Input 1
6 2
4 1 2 1 3 5
Sample Output 1
2
Sample Input 2
6 3
4 1 2 1 3 5
Sample Output 2
3
Sample Input 3
3 4
1 2 3
Sample Output 3
0


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
n, k = map(int, input().split())
aa = list(map(int, input().split()))
cnts = [0] * (k + 1)
ans = 1e6
existing = 0
r = 0
for l in range(n - k + 1):
    while r < n and existing < k:
        a = aa[r]
        if a <= k:
            cnts[a] += 1
            if cnts[a] == 1:
                existing += 1
        r += 1
    if k == existing:
        ans = min(ans, r - l)
    a = aa[l]
    if a <= k:
        cnts[a] -= 1
        if cnts[a] == 0:
            existing -= 1

print(ans if ans < 1e6 else 0)
```