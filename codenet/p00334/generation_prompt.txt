Voici un énoncé de problème :

形状データ処理
コンピュータグラフィクスでは、三次元の形状を表現する方法として、ポリゴンモデルが使われます。ポリゴンモデルとは、頂点座標と、それらの頂点のつなぎ方を与えて面を作るモデルです。
一般のポリゴンモデルでは、任意の多角形を扱えますが、今回は三角形からなるポリゴンモデルを考えることにします。任意のポリゴンモデルは三角形を表す面情報の集まりとして表すことができます。
一つの面情報は、３つの頂点を並べて表します。ただし、並び方が異なるだけで同じ３点からなる場合は、同じ面情報を表すことにします。例えば、下図の四面体で、頂点１,２,３を繋いでできる面は、頂点２,３,１や、頂点３,２,１などのように表すこともできます。このように、同じ面情報が複数あると無駄になるので、１つにまとめてしまった方が良いでしょう。
面情報が与えられたとき、重複した面を無くすために消さなければならない面情報の個数を求めるプログラムを作成せよ。
Input
入力は以下の形式で与えられる。
N
p
11
p
12
p
13
p
21
p
22
p
23
:
p
N1
p
N2
p
N3
１行目に、ポリゴンモデルの面情報の数
N
(1 ≤
N
≤ 1000) が与えられる。続く
N
行に、
i
番目の面を作るために使う頂点の番号
p
ij
(1 ≤
p
ij
≤ 1000) が与えられる。ただし、一つの面について、同じ頂点を２度以上使うことはない（
p
i1
≠
p
i2
かつ
p
i2
≠
p
i3
かつ
p
i1
≠
p
i3
である）。
Output
重複した面を無くすために消さなければならない面情報の個数を１行に出力する。
Sample Input 1
4
1 3 2
1 2 4
1 4 3
2 3 4
Sample Output 1
0
Sample Input 2
6
1 3 2
1 2 4
1 4 3
2 3 4
3 2 1
2 3 1
Sample Output 2
2
入出力例２では、１つ目と５つ目と６つ目の面は頂点1, 3, 2を使って三角形を作っていて、点の順番が異なるだけなので重複している。つまり、重複した面のうち２つの面を消せば重複した面は無くなる。


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
N=int(input())
A=[]
for _ in range(0,N):
	a=list(map(int,input().split()))
	a.sort()
	if A.count(a)==0:
		A.append(a)

print(N-len(A))
```