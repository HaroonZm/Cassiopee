Voici un énoncé de problème :

Score :
1000
points
Problem Statement
Takahashi and Aoki are going to together construct a sequence of integers.
First, Takahashi will provide a sequence of integers
a
, satisfying all of the following conditions:
The length of
a
is
N
.
Each element in
a
is an integer between
1
and
K
, inclusive.
a
is a
palindrome
, that is, reversing the order of elements in
a
will result in the same sequence as the original.
Then, Aoki will perform the following operation an arbitrary number of times:
Move the first element in
a
to the end of
a
.
How many sequences
a
can be obtained after this procedure, modulo
10^9+7
?
Constraints
1≤N≤10^9
1≤K≤10^9
Input
The input is given from Standard Input in the following format:
N
K
Output
Print the number of the sequences
a
that can be obtained after the procedure, modulo
10^9+7
.
Sample Input 1
4 2
Sample Output 1
6
The following six sequences can be obtained:
(1, 1, 1, 1)
(1, 1, 2, 2)
(1, 2, 2, 1)
(2, 2, 1, 1)
(2, 1, 1, 2)
(2, 2, 2, 2)
Sample Input 2
1 10
Sample Output 2
10
Sample Input 3
6 3
Sample Output 3
75
Sample Input 4
1000000000 1000000000
Sample Output 4
875699961


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
N, K = map(int, input().split())
MOD = 10 ** 9 + 7
i = 1
M = N
div = []
while i * i <= N:
    if N % i == 0:
        div.append(i)
        if N // i != i:
            div.append(N // i)
    i += 1

div = sorted(div)
N1 = len(div)
num = [0] * (N1 + 1)
ans = 0
for i in range(N1):
    num[i] = pow(K, (div[i] + 1) // 2, MOD)
    for j in range(i):
        if div[i] % div[j] == 0:
            num[i] = num[i] - num[j] + MOD
            num[i] %= MOD

    if div[i] % 2 == 0:
        ans += div[i] * num[i] // 2
        ans %= MOD
    else:
        ans += div[i] * num[i]
        ans %= MOD

print(ans)
```