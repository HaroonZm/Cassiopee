Voici un énoncé de problème :

Score :
300
points
Problem Statement
You are given an array
A
of length
N
.
Your task is to divide it into several contiguous subarrays.
Here, all subarrays obtained must be sorted in either non-decreasing or non-increasing order.
At least how many subarrays do you need to divide
A
into?
Constraints
1 \leq N \leq 10^5
1 \leq A_i \leq 10^9
Each
A_i
is an integer.
Input
Input is given from Standard Input in the following format:
N
A_1
A_2
...
A_N
Output
Print the minimum possible number of subarrays after division of
A
.
Sample Input 1
6
1 2 3 2 2 1
Sample Output 1
2
One optimal solution is to divide the array into
[1,2,3]
and
[2,2,1]
.
Sample Input 2
9
1 2 1 2 1 2 1 2 1
Sample Output 2
5
Sample Input 3
7
1 2 3 2 1 999999999 1000000000
Sample Output 3
3


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
n = int(input())
a = list(map(int, input().split()))

cnt = 0
flag = 0
for i in range(n - 1):
    if flag == 0:
        if a[i] < a[i + 1]:
            flag = 1
        elif a[i] > a[i + 1]:
            flag = -1
    elif flag == 1:
        if a[i] < a[i + 1]:
            flag = 1
        elif a[i] > a[i + 1]:
            flag = 0
            cnt += 1
    elif flag == -1:
        if a[i] > a[i + 1]:
            flag = -1
        if a[i] < a[i + 1]:
            flag = 0
            cnt += 1
print(cnt + 1)
```