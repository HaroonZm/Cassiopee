Voici un énoncé de problème :

Problem B:
平安京ウォーキング
平安京は、道が格子状になっている町として知られている。
平安京に住んでいるねこのホクサイは、パトロールのために毎日自宅から町はずれの秘密の場所まで行かなければならない。しかし、毎日同じ道を通るのは飽きるし、後を付けられる危険もあるので、ホクサイはできるだけ毎日異なる経路を使いたい。その一方で、ホクサイは面倒臭がりなので、目的地から遠ざかるような道は通りたくない。
平安京のあちこちの道にはマタタビが落ちていて、ホクサイはマタタビが落ちている道を通ることができない。そのような道を通るとめろめろになってしまうからである。幸いなことに、交差点にはマタタビは落ちていない。
ホクサイは、自宅から秘密の場所までの可能な経路の数を知りたい。ここで、ホクサイの自宅は (0, 0) にあり、秘密の場所は(
g
x
,
g
y
)にある。道は
x
=
i
(
i
は整数),
y
=
j
(
j
は整数) に格子状に敷かれている。
Input
入力の1行目には、秘密の場所の座標 (
g
x
,
g
y
) が与えられる。これらはいずれも1以上15以下の整数で、空白1個で区切られて与えられる。 2行目にはマタタビが落ちている区間の数
p
(0 ≤
p
≤ 100) が与えられ、続く
p
行にはマタタビが落ちている区間が1行に1区間ずつ与えられる。
p
個の区間は互いに異なる。 1区間は
x
1
y
1
x
2
y
2
の形で表され、(
x
1
,
y
1
) と (
x
2
,
y
2
) を端点とする、
x
軸または
y
軸に平行な長さ1の線分である。
x
1
,
x
2
は [0,
g
x
] の範囲にあり、
y
1
,
y
2
は [0,
g
y
] の範囲にある。
Output
可能な経路の数を出力せよ。可能な経路が1つもない場合は "Miserable Hokusai!" と1行に出力せよ。
Notes on Submission
上記形式で複数のデータセットが与えられます。入力データの 1 行目にデータセットの数が与えられます。各データセットに対する出力を上記形式で順番に出力するプログラムを作成して下さい。
Sample Input
4
2 2
0
1 1
2
0 0 0 1
0 0 1 0
4 3
4
1 0 0 0
3 3 4 3
4 1 4 0
0 2 0 3
15 15
0
Output for the Sample Input
6
Miserable Hokusai!
5
155117520


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
n=int(input())
for i in range(n):
    x,y=map(int,input().split())
    l=[[0 for i in range(y+1)] for j in range(x+1)]
    m=int(input())
    l1=[]#マタタビの落ちている区間のリスト
    if m!=0:
        for j in range(m):
            l2=list(map(int,input().split()))
            l1.append(l2)
    for i in range(1,x+1):
        if [i,0,i-1,0] in l1 or [i-1,0,i,0] in l1:
          break
        l[i][0]=1
    for i in range(1,y+1):
        if [0,i,0,i-1] in l1 or [0,i-1,0,i] in l1:
          break
        l[0][i]=1
    for i in range(1,y+1):
        for j in range(1,x+1):#2重ループで各点の到達方法の場合の数を記録
            if ([j,i-1,j,i] in l1 or [j,i,j,i-1] in l1) and ([j,i,j-1,i] in l1 or [j-1,i,j,i] in l1):
                l[j][i]=0
            elif ([j,i,j-1,i] in l1 or [j-1,i,j,i] in l1):
                l[j][i]=l[j][i-1]
            elif ([j,i-1,j,i] in l1 or [j,i,j,i-1] in l1):#マタタビの落ちている区間は除く
                l[j][i]=l[j-1][i]
            else:
                l[j][i]=l[j-1][i]+l[j][i-1]
    if l[x][y]==0:
      print("Miserable Hokusai!")
    else:
      print(l[x][y])
```