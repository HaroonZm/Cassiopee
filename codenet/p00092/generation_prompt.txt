Voici un énoncé de problème :

正方形探索
縦に
n
行、横に
n
列並べられた、合計
n × n
のマス目があります。いくつかのマス目には印がついています。各マス目の印の状態を読み込み、印のついていないマス目だけからなる最大の正方形の辺の長さを出力として表示するプログラムを作成してください。
たとえば各データセットで以下のようなデータが与えられます。
10
...*....**
..........
**....**..
........*.
..*.......
..........
.*........
..........
....*..***
.*....*...
入力データの一行が、一行のマス目を表現します。入力データの文字列のうち、.（ピリオド）は印のついていないマス目、*（アスタリスク）は印のついているマス目を示しています。
上記の例では、下図の 0 で示される正方形が最大となります。
...*....**
..........
**....**..
...00000*.
..*00000..
...00000..
.*.00000..
...00000..
....*..***
.*....*...
よって、5 と出力すれば正解になります。
なお、すべてのマス目に印がついている場合には、0 を出力してください。
Input
上記形式で複数のデータセットが与えられます。
n
が 0 のとき入力の最後とします。
n
は 1000 以下とします。入力データの文字列には、ピリオド、アスタリスク、改行以外の文字は含まれません。データセットの数は 50 を超えません。
Output
各データセットに対し、最大の正方形の辺の長さ（整数）を１行に出力して下さい。
Sample Input
10
...*....**
..........
**....**..
........*.
..*.......
..........
.*........
..........
....*..***
.*....*...
10
****.*****
*..*.*....
****.*....
*....*....
*....*****
..........
****.*****
*..*...*..
****...*..
*..*...*..
0
Output for the Sample Input
5
3


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
# don't know good 参考:http://judge.u-aizu.ac.jp/onlinejudge/review.jsp?rid=2954794#1

table = [''] * 1002
dp = [[0] * 1002 for i in range(1002)]

while 1:
	n = int(input())
	if n == 0: break
	for r in range(n): table[r] = input()
	ans = 0
	
	for r in range(n):
		for c in range(n):
			if table[r][c] == '*': dp[r][c] = 0
			else :
				t = dp[r-1][c-1]
				if dp[r  ][c-1] < t: t = dp[r  ][c-1];
				if dp[r-1][c  ] < t: t = dp[r-1][c  ];
				t += 1
				dp[r][c] = t
				if t > ans: ans = t
	print(ans)
```