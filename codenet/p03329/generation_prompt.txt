Voici un énoncé de problème :

Score :
300
points
Problem Statement
To make it difficult to withdraw money, a certain bank allows its customers to withdraw only one of the following amounts in one operation:
1
yen (the currency of Japan)
6
yen,
6^2(=36)
yen,
6^3(=216)
yen, ...
9
yen,
9^2(=81)
yen,
9^3(=729)
yen, ...
At least how many operations are required to withdraw exactly
N
yen in total?
It is not allowed to re-deposit the money you withdrew.
Constraints
1 \leq N \leq 100000
N
is an integer.
Input
Input is given from Standard Input in the following format:
N
Output
If at least
x
operations are required to withdraw exactly
N
yen in total, print
x
.
Sample Input 1
127
Sample Output 1
4
By withdrawing
1
yen,
9
yen,
36(=6^2)
yen and
81(=9^2)
yen, we can withdraw
127
yen in four operations.
Sample Input 2
3
Sample Output 2
3
By withdrawing
1
yen three times, we can withdraw
3
yen in three operations.
Sample Input 3
44852
Sample Output 3
16


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
import sys
read = sys.stdin.read
readlines = sys.stdin.readlines
def main():
    n = int(input())
    nums = []
    n6 = 6
    while n6 <= n:
        nums.append(n6)
        n6 = n6 * 6
    n9 = 9
    while n9 <= n:
        nums.append(n9)
        n9 = n9 * 9
    nums.sort(reverse=True)
    dp = [i for i in range(2 * n + 1)]
    for num in nums:
        for j1 in range(n + 1):
            dp[j1+num] = min(dp[j1+num], dp[j1] + 1)
    print(dp[n])

if __name__ == '__main__':
    main()
```