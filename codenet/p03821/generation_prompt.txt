Voici un énoncé de problème :

Score :
300
points
Problem Statement
There are an integer sequence
A_1,...,A_N
consisting of
N
terms, and
N
buttons.
When the
i
-th
(1 ≦ i ≦ N)
button is pressed, the values of the
i
terms from the first through the
i
-th are all incremented by
1
.
There is also another integer sequence
B_1,...,B_N
. Takahashi will push the buttons some number of times so that for every
i
,
A_i
will be a multiple of
B_i
.
Find the minimum number of times Takahashi will press the buttons.
Constraints
All input values are integers.
1 ≦ N ≦ 10^5
0 ≦ A_i ≦ 10^9(1 ≦ i ≦ N)
1 ≦ B_i ≦ 10^9(1 ≦ i ≦ N)
Input
The input is given from Standard Input in the following format:
N
A_1
B_1
:
A_N
B_N
Output
Print an integer representing the minimum number of times Takahashi will press the buttons.
Sample Input 1
3
3 5
2 7
9 4
Sample Output 1
7
Press the first button twice, the second button twice and the third button three times.
Sample Input 2
7
3 1
4 1
5 9
2 6
5 3
5 8
9 7
Sample Output 2
22


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
"""
Nは10**5以下。O(N)なら通る
"""

N = int(input())
A = []
B = []
for i in range(N):
    s = list(map(int, input().split()))
    A.append(s[0])
    B.append(s[1])

count = 0
for i in reversed(range(N)):
    if (count + A[i]) % B[i] == 0:
        continue
    else:
        s = B[i] - (count + A[i]) % B[i]
        count += s

print(count)
```