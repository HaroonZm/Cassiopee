En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
"""
Schedule
http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0595

"""
import sys

from collections import Counter
from itertools import product

def solve(n, data):
    status = Counter({(1, 0, 0): 1})
    for ch in data:
        u = Counter()
        for j, o, i in product((0, 1), repeat=3):
            if {'J': j, 'O': o, 'I': i}[ch]:
                for k, v in status.items():
                    pj, po, pi = k
                    if any([(j and pj), (o and po), (i and pi)]):
                        u[(j, o, i)] += v
        status = Counter({k: v % 10007 for k, v in u.items()})
    return sum(status.values()) % 10007

def main(args):
    n = int(input())
    data = input()
    ans = solve(n, data)
    print(ans)

if __name__ == '__main__':
    main(sys.argv[1:])
```