Voici un énoncé de problème :

Circumscribed Circle of A Triangle.
Write a program which prints the central coordinate $(p_x, p_y)$ and the radius $r$ of a circumscribed circle of a triangle which is constructed by three points $(x_1, y_1)$, $(x_2, y_2)$ and $(x_3, y_3)$ on the plane surface.
Input
Input consists of several datasets. In the first line, the number of datasets $n$ is given. Each dataset consists of:
$x_1$ $y_1$ $x_2$ $y_2$ $x_3$ $y_3$
in a line. All the input are real numbers.
Output
For each dataset, print $p_x$, $p_y$ and $r$ separated by a space in a line. Print the solution to three places of decimals. Round off the solution to three decimal places.
Constraints
$-100 \leq x_1, y_1, x_2, y_2, x_3, y_3 \leq 100$
$ n \leq 20$
Sample Input
1
0.0 0.0 2.0 0.0 2.0 2.0
Output for the Sample Input
1.000 1.000 1.414


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
def calc(l):
	A1=2*(l[1][0]-l[0][0])
	B1=2*(l[1][1]-l[0][1])
	C1=l[0][0]**2-l[1][0]**2+l[0][1]**2-l[1][1]**2
	A2=2*(l[2][0]-l[0][0])
	B2=2*(l[2][1]-l[0][1])
	C2=l[0][0]**2-l[2][0]**2+l[0][1]**2-l[2][1]**2
	X=(B1*C2-B2*C1)/(A1*B2-A2*B1)
	Y=(C1*A2-C2*A1)/(A1*B2-A2*B1)
	R=((X-l[0][0])**2+(Y-l[0][1])**2)**0.5
	return tuple(map(round, [X,Y,R], [3]*3))
l=[zip(*[iter(map(float,raw_input().split()))]*2) for i in range(input())]
for ll in l:
	print "%.3f %.3f %.3f"%(calc(ll))
```