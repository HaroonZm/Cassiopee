Voici un énoncé de problème :

Coin Changing Problem
Find the minimum number of coins to make change for
n
cents using coins of denominations
d
1
,
d
2
,..,
d
m
. The coins can be used any number of times.
Input
n
m
d
1
d
2
...
d
m
Two integers
n
and
m
are given in the first line. The available denominations are given in the second line.
Output
Print the minimum number of coins in a line.
Constraints
1 ≤
n
≤ 50000
1 ≤
m
≤ 20
1 ≤ denomination ≤ 10000
The denominations are all different and contain 1.
Sample Input 1
55 4
1 5 10 50
Sample Output 1
2
Sample Input 2
15 6
1 2 7 8 12 50
Sample Output 2
2
Sample Input 3
65 6
1 2 7 8 12 50
Sample Output 3
3


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
INF = 10 ** 18
n, m = map(int, input().split())
c = list(map(int, input().split()))
dp = [INF] * (n + 1)
dp[0] = 0
for i in range(m):
    for j in range(c[i], n + 1):
        dp[j] = min(dp[j], dp[j - c[i]] + 1)

print(dp[n])
```