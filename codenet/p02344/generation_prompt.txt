Voici un énoncé de problème :

Weighted Union Find Trees
There is a sequence $A = a_0, a_1, ..., a_{n-1}$. You are given the following information and questions.
relate$(x, y, z)$: $a_y$ is greater than $a_x$ by $z$
diff$(x, y)$: report the difference between $a_x$ and $a_y$ $(a_y - a_x)$
Input
$n \; q$
$query_1$
$query_2$
:
$query_q$
In the first line, $n$ and $q$ are given. Then, $q$ information/questions are given in the following format.
0 $x \; y\; z$
or
1 $x \; y$
where '
0
' of the first digit denotes the relate information and '
1
' denotes the diff question.
Output
For each diff question, print the difference between $a_x$ and $a_y$ $(a_y - a_x)$.
Constraints
$2 \leq n \leq 100,000$
$1 \leq q \leq 200,000$
$0 \leq x, y < n$
$x \ne y$
$0 \leq z \leq 10000$
There are no inconsistency in the given information
Sample Input
5 6
0 0 2 5
0 1 2 3
1 0 1
1 1 3
0 1 4 8
1 0 4
Sample Output
2
?
10


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
line = input()
n, q = list(map(int, line.split()))
rel = {}
for i in range(0, n):
    rel[i] = []
parent = [i for i in range(0, n)]
rank = [0] * n
weight = [0] * n

def find(x):
    if parent[x] == x:
        return x
    else:
        y = find(parent[x])
        weight[x] += weight[parent[x]]
        parent[x] = y
        return y

def union(x, y, w):
    rx = find(x)
    ry = find(y)
    if rank[rx] < rank[ry]:
        parent[rx] = ry
        weight[rx] = w - weight[x] + weight[y]
    else:
        parent[ry] = rx
        weight[ry] = - w - weight[y] + weight[x]
        if rank[rx] == rank[ry]:
            rank[rx] += 1

def same(x, y):
    return find(x) == find(y)

def diff(x, y):
    return weight[x] - weight[y]

for _ in range(0, q):
    line = input()
    query = list(map(int, line.split()))
    if query[0] == 0:
        x, y, z = query[1:]
        union(x, y, z)
    elif query[0] == 1:
        x, y = query[1:]
        if same(x, y):
            print(diff(x, y))
        else:
            print("?")
```