Voici un énoncé de problème :

実数既約分数化
実数のうち、小数部が循環するものと有限桁のものは分数として表すことができます。
分数で表すことができる実数が与えられたとき、その実数と等しい既約分数（それ以上約分できない分数）を出力するプログラムを作成せよ。
Input
入力は以下の形式で与えられる。
str
１行に、変換したい実数を表す文字列
str
が与えられる。実数の値は 0 より大きい。文字列は数字か「.」、「(」、「)」を含む、長さが 3 以上 8 以下の文字列である。「.」は小数点、「(」は数字の循環の始まり、「)」は数字の循環の終わりを示す。整数部にも小数部にも、必ず１桁以上の数字が与えられるとする。ただし、循環小数が与えられた場合、文字列は以下の条件を満たす。
循環の始まりと終わりのペアは、小数点の右側に一度だけ現れる。
循環の終わりを示す「)」は、文字列の末尾に現れる。
循環の始まりと終わりの間には、必ず１桁以上の数字が与えられる。
Output
実数を既約分数で表した形式（分子の整数に続けて「/」区切りで分母の整数を並べたもの）で出力する。
Sample Input 1
0.(3)
Sample Output 1
1/3
Sample Input 2
1.0
Sample Output 2
1/1
Sample Input 3
5.2(143)
Sample Output 3
52091/9990
Sample Input 4
0.0739
Sample Output 4
739/10000


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
from math import gcd

s = input()
x, y = s.split(".")
if "(" in s:
  da = y.index("(")
  db = y.index(")") - 1
  ya, b = y.split("(")
  lb = len(b) - 1
  a = int(x + ya)
  b = int(b[:-1])
  deco = a * (10 ** db - 10 ** (db - lb)) + b * 10 ** da
  nume = 10 ** da * (10 ** db - 10 ** (db - lb))
  div = gcd(deco, nume)
  print(deco // div, nume // div, sep="/")
else:
  da = len(y)
  a = int(x + y)
  deco = a
  nume = 10 ** da
  div = gcd(deco, nume)
  print(deco // div, nume // div, sep="/")
```