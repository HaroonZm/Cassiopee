Voici un énoncé de problème :

Score :
300
points
Problem Statement
There are
3N
participants in
AtCoder Group Contest
.
The
strength
of the
i
-th participant is represented by an integer
a_i
.
They will form
N
teams, each consisting of three participants.
No participant may belong to multiple teams.
The strength of a team is defined as the second largest strength among its members.
For example, a team of participants of strength
1
,
5
,
2
has a strength
2
, and a team of three participants of strength
3
,
2
,
3
has a strength
3
.
Find the maximum possible sum of the strengths of
N
teams.
Constraints
1 ≤ N ≤ 10^5
1 ≤ a_i ≤ 10^{9}
a_i
are integers.
Input
Input is given from Standard Input in the following format:
N
a_1
a_2
...
a_{3N}
Output
Print the answer.
Sample Input 1
2
5 2 8 5 1 5
Sample Output 1
10
The following is one formation of teams that maximizes the sum of the strengths of teams:
Team
1
: consists of the first, fourth and fifth participants.
Team
2
: consists of the second, third and sixth participants.
Sample Input 2
10
1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000
Sample Output 2
10000000000
The sum of the strengths can be quite large.


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
N = int(input())
a = list(map(int, input().split()))

a.sort(reverse=True)
ans = 0
for i in range(1, len(a)-N):
    if i % 2 == 1:
        # print(a[i])
        ans += a[i]
print(ans)
```