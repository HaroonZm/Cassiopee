Voici un énoncé de problème :

Problem B:
Moonlight Farm
あなたは大人気webゲーム「ムーンライト牧場」に熱中している．このゲームの目的は，畑で作物を育て，それらを売却して収入を得て，その収入によって牧場を大きくしていくことである．
あなたは速く畑を大きくしたいと考えた．そこで手始めにゲーム中で育てることのできる作物を，時間あたりの収入効率にもとづいて並べることにした．
作物を育てるには種を買わなければならない．ここで作物
i
の種の名前は
L
i
，値段は
P
i
でそれぞれ与えられる．畑に種を植えると時間
A
i
後に芽が出る．芽が出てから時間
B
i
後に若葉が出る．若葉が出てから時間
C
i
後に葉が茂る．葉が茂ってから時間
D
i
後に花が咲く．花が咲いてから時間
E
i
後に実が成る．一つの種から
F
i
個の実が成り，それらの実は一つあたり
S
i
の価格で売れる．一部の作物は多期作であり，計
M
i
回実をつける．単期作の場合は
M
i
= 1で表される．多期作の作物は，
M
i
回目の実が成るまでは，実が成ったあと葉に戻る．ある種に対する収入は，その種から成った全ての実を売った金額から，種の値段を引いた値である．また，その種の収入効率は，その収入を，種を植えてから全ての実が成り終わるまでの時間で割った値である．
あなたの仕事は，入力として与えられる作物の情報に対して，それらを収入効率の降順に並べ替えて出力するプログラムを書くことである．
Input
入力はデータセットの列であり，各データセットは次のような形式で与えられる．
N
L
1
P
1
A
1
B
1
C
1
D
1
E
1
F
1
S
1
M
1
L
2
P
2
A
2
B
2
C
2
D
2
E
2
F
2
S
2
M
2
...
L
N
P
N
A
N
B
N
C
N
D
N
E
N
F
N
S
N
M
N
一行目はデータセットに含まれる作物の数
N
である (1 ≤ N ≤ 50)．
これに続く
N
行には，各行に一つの作物の情報が含まれる．各変数の意味は問題文中で述べた通りである．作物の名前
L
i
はアルファベット小文字のみからなる20文字以内の文字列であり，また 1 ≤
P
i
,
A
i
,
B
i
,
C
i
,
D
i
,
E
i
,
F
i
,
S
i
≤ 100, 1 ≤
M
i
≤ 5である．一つのケース内に同一の名前を持つ作物は存在しないと仮定して良い．
入力の終りはゼロを一つだけ含む行で表される．
Output
各データセットについて，各行に一つ，作物の名前を収入効率の降順に出力せよ．収入効率が同じ作物に対しては，それらの名前を辞書順の昇順に出力せよ．
各データセットの出力の後には“#”のみからなる1行を出力すること．
Sample Input
5
apple 1 1 1 1 1 1 1 10 1
banana 1 2 2 2 2 2 1 10 1
carrot 1 2 2 2 2 2 1 10 2
durian 1 3 3 3 3 3 1 10 1
eggplant 1 3 3 3 3 3 1 100 1
4
enoki 1 3 3 3 3 3 1 10 1
tomato 1 3 3 3 3 3 1 10 1
potato 1 3 3 3 3 3 1 10 1
onion 1 3 3 3 3 3 1 10 1
3
a 10 1 1 1 1 1 1 10 1
b 10 2 2 2 2 2 2 10 1
c 10 2 2 2 2 2 2 10 1
0
Output for the Sample Input
eggplant
apple
carrot
banana
durian
#
enoki
onion
potato
tomato
#
b
c
a
#


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
while 1:
	n = input()
	if n == 0: break
	ans = []
	for i in range(n):
		inp = raw_input().split()
		P,A,B,C,D,E,F,S,M = map(int,inp[1:])
		ans.append([inp[0],(M*F*S-P)*1.0/(A+B+C+(D+E)*M)])
	ans = sorted(sorted(ans), key = lambda x:x[1], reverse = True)
	for k,v in ans: print k
	print "#"
```