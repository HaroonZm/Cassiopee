En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
from collections import deque    

n,m=map(int,input().split())
abx=[[0]*(n+2) for i in range(n+2)]
for i in range(m):
    ai,bi,xi=map(int,input().split())
    abx[ai][bi]=max(abx[ai][bi],xi)

pp=[[0]*(n+2) for i in range(n+2)]
for j in range(1,n+2):
    dq=deque()
    for i in range(j,n+2):
        if abx[i][j]>0:
            dq.append([i,abx[i][j]])
    iiii=j-1
    while len(dq):
        ii,xi=dq.popleft()
        if ii+xi>iiii:
            for iii in range(max(ii,iiii+1),ii+xi+1):
                pp[iii][j]=iii-ii+1
                iiii=iii            
icnt=0        
for i in range(1,n+1):
    for j in range(1,i+1):
        abij=pp[i][j-1]-1
        pp[i][j]=max(pp[i][j],abij)
        if pp[i][j]>0:
            icnt+=1

print(icnt)
```