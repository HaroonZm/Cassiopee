Voici un énoncé de problème :

Score :
300
points
Problem Statement
There are
N
integers,
A_1, A_2, ..., A_N
, written on the blackboard.
You will choose one of them and replace it with an integer of your choice between
1
and
10^9
(inclusive), possibly the same as the integer originally written.
Find the maximum possible greatest common divisor of the
N
integers on the blackboard after your move.
Constraints
All values in input are integers.
2 \leq N \leq 10^5
1 \leq A_i \leq 10^9
Output
Input is given from Standard Input in the following format:
N
A_1
A_2
...
A_N
Output
Print the maximum possible greatest common divisor of the
N
integers on the blackboard after your move.
Sample Input 1
3
7 6 8
Sample Output 1
2
If we replace
7
with
4
, the greatest common divisor of the three integers on the blackboard will be
2
, which is the maximum possible value.
Sample Input 2
3
12 15 18
Sample Output 2
6
Sample Input 3
2
1000000000 1000000000
Sample Output 3
1000000000
We can replace an integer with itself.


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
import fractions
import functools

def main():
    n = int(input())
    a = [int(t)for t in input().split()]

    a_gcd = functools.reduce(fractions.gcd,a)
    a = [x//a_gcd for x in a]
    
    a_rev = a[::-1]

    lgcd = [0]
    rgcd = [0]
    for i in range(n):
        l = fractions.gcd(a[i],lgcd[i])
        r = fractions.gcd(a_rev[i],rgcd[i])
        lgcd.append(l)
        rgcd.append(r)

    rgcd = rgcd[::-1]
    g = [fractions.gcd(lgcd[i],rgcd[i+1]) for i in range(n)]
    
    print(max(g)*a_gcd)
    
    
if __name__ == "__main__":
    main()
```