Voici un énoncé de problème :

Score :
200
points
Problem Statement
We have a board with
H
horizontal rows and
W
vertical columns of squares.
There is a bishop at the top-left square on this board.
How many squares can this bishop reach by zero or more movements?
Here the bishop can only move diagonally.
More formally, the bishop can move from the square at the
r_1
-th row (from the top) and the
c_1
-th column (from the left) to the square at the
r_2
-th row and the
c_2
-th column if and only if exactly one of the following holds:
r_1 + c_1 = r_2 + c_2
r_1 - c_1 = r_2 - c_2
For example, in the following figure, the bishop can move to any of the red squares in one move:
Constraints
1 \leq H, W \leq 10^9
All values in input are integers.
Input
Input is given from Standard Input in the following format:
H \ W
Output
Print the number of squares the bishop can reach.
Sample Input 1
4 5
Sample Output 1
10
The bishop can reach the cyan squares in the following figure:
Sample Input 2
7 3
Sample Output 2
11
The bishop can reach the cyan squares in the following figure:
Sample Input 3
1000000000 1000000000
Sample Output 3
500000000000000000


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
h,w=map(int,input().split())
print(-(-h*w//2) if h*w>=h+w else 1)
```