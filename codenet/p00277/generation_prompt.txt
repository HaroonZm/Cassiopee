Voici un énoncé de problème :

プログラミングコンテスト
白虎大学では毎年プログラミングコンテストが開催されています。チームの総数をNとしたとき、チームには1からNのチームIDがそれぞれ割り当てられています。コンテストは全てのチームの得点が0の状態から開始し、L秒間連続して行われます。
今年のコンテストは、テレビで中継されることになりました。コンテストの間テレビに映るのは、その時点で最も得点の高いチームだけです。ただし、該当するチームが複数いるときは、その中でチームIDの一番小さいチームが映ります。映すべきチームが変わると、瞬時にカメラが切り替わります。
あなたはコンテストのログを入手しました。ログには、あるチームの得点が変化した時のレコードがすべて含まれています。各レコードは「チーム
d
がコンテスト開始
t
秒後の時点で
x
点獲得した」という形式で与えられています。なお、減点される場合もあるので、現在の得点が0より小さくなることもあります。
コンテストのログを入力とし、コンテスト開始から終了までの間にテレビに映った時間が最も長いチームのIDを報告するプログラムを作成してください。
入力
入力は1つのデータセットからなる。入力は以下の形式で与えられる。
N
R
L
d
1
t
1
x
1
d
2
t
2
x
2
:
d
R
t
R
x
R
１行目は３つの整数からなる。
N
(2 ≤
N
≤ 100000)はチーム数、
R
(0 ≤
R
≤ 1000000)はログに含まれるレコードの数である。
L
(1 ≤
L
≤ 1000000)はコンテストの時間（長さ）を表す。続く
R
行に各レコードの情報が与えられる。各レコードはチーム
d
i
(1 ≤
d
i
≤
N
)がコンテスト開始
t
i
(0 <
t
i
<
L
)秒後の時点で
x
i
(-1000 ≤
x
i
≤ 1000)点獲得あるいは減点されたことを示す。ただし、
t
i
,
x
i
は整数であり、
t
i-1
≤
t
i
である。
出力
コンテスト開始から終了までの間にテレビに映った時間が最も長いチームのIDを１行に出力する。ただし、最も長いチームが複数あるときは、その中でチームIDの一番小さいチームを出力する。
入力例 1
3 4 600
3 100 5
1 200 10
2 400 20
3 500 20
出力例 1
1
入力例 2
3 5 600
3 100 5
1 200 10
2 300 30
1 400 -8
2 400 -27
出力例 2
3


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
import sys
f = sys.stdin

n, r, l = map(int, f.readline().split())

appearance = [0] * n
point = [0] * n

top = 0
pre_t = 0
for line in f:
    d, t, x = map(int, line.split())
    d -= 1 # 0-index?????????
    
    appearance[top] += t - pre_t
    pre_t = t
    
    point[d] += x
    if 0 < x and top != d:
        if point[top] < point[d]:
            top = d
        elif point[top] == point[d] and d < top:
            top = d
    elif x < 0 and top == d:
        top = point.index(max(point))

appearance[top] += l - pre_t

print(1 + appearance.index(max(appearance)))
```