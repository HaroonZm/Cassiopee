Voici un énoncé de problème :

Score :
700
points
Problem Statement
Takahashi is playing with
N
cards.
The
i
-th card has an integer
X_i
on it.
Takahashi is trying to create as many pairs of cards as possible satisfying one of the following conditions:
The integers on the two cards are the same.
The sum of the integers on the two cards is a multiple of
M
.
Find the maximum number of pairs that can be created.
Note that a card cannot be used in more than one pair.
Constraints
2≦N≦10^5
1≦M≦10^5
1≦X_i≦10^5
Input
The input is given from Standard Input in the following format:
N
M
X_1
X_2
...
X_N
Output
Print the maximum number of pairs that can be created.
Sample Input 1
7 5
3 1 4 1 5 9 2
Sample Output 1
3
Three pairs
(3,2), (1,4)
and
(1,9)
can be created.
It is possible to create pairs
(3,2)
and
(1,1)
, but the number of pairs is not maximized with this.
Sample Input 2
15 10
1 5 6 10 11 11 11 20 21 25 25 26 99 99 99
Sample Output 2
6


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
import sys
from collections import Counter
input = sys.stdin.readline

N, M = map(int, input().split())
uni, dup = [0]*M, [0]*M
for k, v in Counter(map(int, input().split())).items():
    uni[k % M] += v % 2
    dup[k % M] += v - (v & 1)

ans = (uni[0] + dup[0]) // 2

for i in range(1, (M+1)//2):
    x = min(uni[i], uni[M-i])
    y = min(uni[i]-x, dup[M-i])
    z = min(uni[M-i]-x, dup[i])
    ans += x + y + z + (dup[M-i]-y)//2 + (dup[i]-z)//2

if M % 2 == 0:
    ans += (uni[M//2] + dup[M//2]) // 2

print(ans)
```