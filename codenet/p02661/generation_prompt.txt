Voici un énoncé de problème :

Score :
500
points
Problem Statement
There are
N
integers
X_1, X_2, \cdots, X_N
, and we know that
A_i \leq X_i \leq B_i
.
Find the number of different values that the median of
X_1, X_2, \cdots, X_N
can take.
Notes
The median of
X_1, X_2, \cdots, X_N
is defined as follows. Let
x_1, x_2, \cdots, x_N
be the result of sorting
X_1, X_2, \cdots, X_N
in ascending order.
If
N
is odd, the median is
x_{(N+1)/2}
;
if
N
is even, the median is
(x_{N/2} + x_{N/2+1}) / 2
.
Constraints
2 \leq N \leq 2 \times 10^5
1 \leq A_i \leq B_i \leq 10^9
All values in input are integers.
Input
Input is given from Standard Input in the following format:
N
A_1
B_1
A_2
B_2
:
A_N
B_N
Output
Print the answer.
Sample Input 1
2
1 2
2 3
Sample Output 1
3
If
X_1 = 1
and
X_2 = 2
, the median is
\frac{3}{2}
;
if
X_1 = 1
and
X_2 = 3
, the median is
2
;
if
X_1 = 2
and
X_2 = 2
, the median is
2
;
if
X_1 = 2
and
X_2 = 3
, the median is
\frac{5}{2}
.
Thus, the median can take three values:
\frac{3}{2}
,
2
, and
\frac{5}{2}
.
Sample Input 2
3
100 100
10 10000
1 1000000000
Sample Output 2
9991


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
n = int(input())

AB = []
for _ in range(n):
    ab = tuple(map(int, input().split()))
    AB.append(ab)

AB_A = sorted(AB, key=lambda x: x[0])
AB_B = sorted(AB, key=lambda x: x[1])

if n%2==1:
    sa, sb = AB_A[n//2]
    la, lb = AB_B[n//2]
    print(lb - sa + 1)
else:
    sal, sbl = AB_A[n//2-1]
    sar, sbr = AB_A[n//2]

    lal, lbl = AB_B[n//2-1]
    lar, lbr = AB_B[n//2]
    print((lbl + lbr) - (sal + sar) +1)
```