Voici un énoncé de problème :

Extraordinary Girl (I)
She is an extraordinary girl. She works for a library. Since she is young
and cute, she is forced to do a lot of laborious jobs. The most annoying job
for her is to put returned books into shelves, carrying them by a cart. The
cart is large enough to carry many books, but too heavy for her. Since she
is delicate, she wants to walk as short as possible when doing this job.
The library has 4N shelves (1 <= N <= 10000), three main passages, and
N + 1 sub passages. Each shelf is numbered between 1 to 4N as shown in
Figure 1. Horizontal dashed lines correspond to main passages, while vertical
dashed lines correspond to sub passages. She starts to return books from the
position with white circle in the figure and ends at the position with black
circle. For simplicity, assume she can only stop at either the middle of shelves
or the intersection of passages. At the middle of shelves, she put books with
the same ID as the shelves. For example, when she stops at the middle of
shelf 2 and 3, she can put books with ID 2 and 3.
Since she is so lazy that she doesn’t want to memorize a complicated
route, she only walks main passages in forward direction (see an arrow in
Figure 1). The walk from an intersection to its adjacent intersections takes 1
cost. It means the walk from the middle of shelves to its adjacent intersection,
and vice versa, takes 0.5 cost. You, as only a programmer amoung her friends,
are to help her compute the minimum possible cost she takes to put all books
in the shelves.
Input
The first line of input contains the number of test cases, T . Then T test
cases follow. Each test case consists of two lines. The first line contains the
number N , and the second line contains 4N characters, either Y or N . Y in
n-th position means there are some books with ID n, and N means no book
with ID n.
Output
The output should consists of T lines, each of which contains one integer,
the minimum possible cost, for each test case.
Sample Input
2
2
YNNNNYYY
4
NYNNYYNNNYNYYNNN
Output for the Sample Input
6
9


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
#!/usr/bin/env python

from collections import deque
import itertools as it
import sys
import math

sys.setrecursionlimit(10000000)

T = input()

for loop in range(T):
    N = input()
    S = raw_input()
    S1 = 'N' + S[:N * 2] + 'N'
    S2 = 'N' + S[N * 2:] + 'N'
    sx1 = sx2 = 100000
    gx1 = gx2 = -1
    ans = 0
    for i in range(N + 1):
        if S1[i * 2] == 'Y' or S1[i * 2 + 1] == 'Y':
            ans += 1
            sx1 = min(sx1, i)
            gx1 = i
        if S2[i * 2] == 'Y' or S2[i * 2 + 1] == 'Y':
            ans += 1
            sx2 = min(sx2, i)
            gx2 = i
    if sx1 > sx2:
        ans += 1
    if gx1 < gx2:
        ans += 1
    print N + ans
```