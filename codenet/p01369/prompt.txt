Voici un énoncé de problème :

koukyoukoukokukikou
English text is not available in this practice contest.
ACM-ICPC を愛する誰もが手から喉が出るほど欲しがるもの， それが Accepted．
略して AC． しかし， 実のところ， それが通じるのはごく限られた人たちだけで， 世間一般には "koukyoukoukokukikou" の略称に過ぎない．
ところで， 一般的なキーボードのキー配置(図A-1)をQWERTY配列と呼ぶのに対し， それとは別のDvorak配列と呼ばれるキー配置も考案されている．
Dvorak配列ではよく使われるキーがホームポジションにあるので， より速くタイプできると T氏(仮) は強硬に主張している．
図A-1 QWERTY配列
その T 氏(仮)はこの文字列を見ていてあることに気付いた． "koukyoukoukokukikou" は Dvorak 配列を使うと片手だけでタイプできることに．
しかし， 同時に残念な事実にも気付いた． QWERTY 配列でも片手だけでタイプできるのだ．
T 氏(仮)は他に Dvorak 配列を使うと片手だけでタイプできる文字列がないか興味を持った．
しかし， できれば QWERTY 配列を使ったときに片手だけでタイプできて欲しくない．
そのために， 各文字列に対して， QWERTY 配列で文字をタイプするときに使う手が入れ替わる回数を求めるプログラムを作ることにした．
そういえば， T 氏(仮)は QWERTY 配列をほとんど忘れてしまっていたのであった． 代わりにプログラムを書いてあげるとしよう．
なお， QWERTY 配列でそれぞれのキーが左右どちらの手でタイプされるものなのかわからなくなったときは， 下の図A-2を参照すればよいだろう．
図A-2 それぞれの手でタイプされる範囲
Input
入力は各行にタイプする手が入れ替わる回数をカウントすべき文字列が1個ずつ含まれる．
文字列はアルファベット小文字のみからなっていて32文字以下である．
入力の終わりは"#"のみからなる行で示される． この"#"はカウントする対象の文字列ではない．
Output
入力された各文字列について整数を1つずつ各行に出力せよ．
出力すべき整数は， QWERTY 配列を使ったときに， 文字をタイプする手が入れ替わる回数である．
出力に余計な文字を含めてはいけない．
Sample Input
koukyoukoukokukikou
abrakadabra
acmicpc
japaque
helloworld
#
Output for the Sample Input
0
2
4
5
7
