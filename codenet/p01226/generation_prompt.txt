En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
dx = [-1, 0, 1, 0]
dy = [0, -1, 0, 1]
tanks = "<^>v"
flat = "."
brick = "*"
iron = "#"
water = "-"

case = input()
for t in xrange(case):
    h, w = map(int, raw_input().split())
    m = [list(raw_input()) for i in xrange(h)]
    n = input()
    s = raw_input()
    x, y = 0, 0
    d = 0
    for i in xrange(h):
        for j in xrange(w):
            if m[i][j] in tanks:
                x = j
                y = i
                d = tanks.index(m[i][j])
                m[i][j] = flat
    for comm in s:
        if comm=="U":
            d = 1
            if y>0 and m[y-1][x]==flat:
                y -= 1
        elif comm=="D":
            d = 3
            if y<h-1 and m[y+1][x]==flat:
                y += 1
        elif comm=="L":
            d = 0
            if x>0 and m[y][x-1]==flat:
                x -= 1
        elif comm=="R":
            d = 2
            if x<w-1 and m[y][x+1]==flat:
                x += 1
        else:
            # "S"
            nx = x + dx[d]
            ny = y + dy[d]
            while 0<=nx<=w-1 and 0<=ny<=h-1:
                obj = m[ny][nx]
                if obj==brick:
                    m[ny][nx] = flat
                    break
                elif obj==iron:
                    break
                nx += dx[d]
                ny += dy[d]
    m[y][x] = tanks[d]
    for i in xrange(h):
        print "".join(m[i])
    if t<case-1:
        print
```