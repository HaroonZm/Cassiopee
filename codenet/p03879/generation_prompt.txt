Voici un énoncé de problème :

Score :
500
points
Problem Statement
Snuke received a triangle as a birthday present.
The coordinates of the three vertices were
(x_1, y_1)
,
(x_2, y_2)
, and
(x_3, y_3)
.
He wants to draw two circles with the same radius inside the triangle such that the two circles do not overlap (but they may touch).
Compute the maximum possible radius of the circles.
Constraints
0 ≤ x_i, y_i ≤ 1000
The coordinates are integers.
The three points are not on the same line.
Input
The input is given from Standard Input in the following format:
x_1
y_1
x_2
y_2
x_3
y_3
Output
Print the maximum possible radius of the circles.
The absolute error or the relative error must be at most
10^{-9}
.
Sample Input 1
0 0
1 1
2 0
Sample Output 1
0.292893218813
Sample Input 2
3 1
1 5
4 9
Sample Output 2
0.889055514217


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
x0,y0=map(int,input().split())
x1,y1=map(int,input().split())
x2,y2=map(int,input().split())
def make_dist(i,j,k,l):
    return ((i-k)**2+(j-l)**2)**0.5
a=y1-y2
b=x2-x1
c=x1*y2-y1*x2
d12=make_dist(x1,y1,x2,y2)
d01=make_dist(x0,y0,x1,y1)
d02=make_dist(x0,y0,x2,y2)
S_double=d12*abs(a*x0+b*y0+c)/(make_dist(a,b,0,0))
r=S_double/(d01+d02+d12)
d=max(d01,d02,d12)
ans=d*r/(2*r+d)
print(ans)
```