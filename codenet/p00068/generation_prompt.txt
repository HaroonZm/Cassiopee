En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
import sys

def calc_hull(d,direction):
    maxcos0 = {"r":-1.0,"l":1.0}
    hull = [d[0]]
    p = d[0]
    while True:
        maxcos = maxcos0[direction]
        for i in xrange(1,len(d)):
            if d[i][1] < p[1]  or d[i] == p: continue
            v = [ d[i][0]-p[0] , d[i][1]-p[1] ]
            c = v[0]/(v[0]**2+v[1]**2)**0.5
            if c >= maxcos and direction == "r":
                maxcos = c
                q = d[i]
            if c <= maxcos and direction == "l":
                maxcos = c
                q = d[i]
        p = q
        hull.append(q)
        if q == d[-1]: break
    return hull

while True:
    n = int(raw_input())
    if n == 0: break
    d = []
    for t in xrange(n):
        d.append(map(float,raw_input().split(",")))
    d.sort(key = lambda x:x[1])
    print len(d) - ( len( calc_hull(d,"r") + calc_hull(d,"l") ) - 2)
```