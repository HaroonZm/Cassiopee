Voici un énoncé de problème :

Score :
300
points
Problem Statement
You are given three integers
A
,
B
and
C
. Find the minimum number of operations required to make
A
,
B
and
C
all equal by repeatedly performing the following two kinds of operations in any order:
Choose two among
A
,
B
and
C
, then increase both by
1
.
Choose one among
A
,
B
and
C
, then increase it by
2
.
It can be proved that we can always make
A
,
B
and
C
all equal by repeatedly performing these operations.
Constraints
0 \leq A,B,C \leq 50
All values in input are integers.
Input
Input is given from Standard Input in the following format:
A
B
C
Output
Print the minimum number of operations required to make
A
,
B
and
C
all equal.
Sample Input 1
2 5 4
Sample Output 1
2
We can make
A
,
B
and
C
all equal by the following operations:
Increase
A
and
C
by
1
. Now,
A
,
B
,
C
are
3
,
5
,
5
, respectively.
Increase
A
by
2
. Now,
A
,
B
,
C
are
5
,
5
,
5
, respectively.
Sample Input 2
2 6 3
Sample Output 2
5
Sample Input 3
31 41 5
Sample Output 3
23


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
import sys
import fractions
input=sys.stdin.readline

a = list(map(int, input().split()))

k = 0
while True:
    if a[0] == a[1] == a[2]:
        break
    a.sort()
    if a[1] == a[2]:
        a[0] += 2
        k += 1
    else:
        a[0] += 1
        a[1] += 1
        k += 1
print(k)
```