Voici un énoncé de problème :

鉄道路線II
わたしの住む街には、図のような
N
個の駅からなる円環状の鉄道路線があります。この路線の各駅には 0 から
N
-1 までの番号が順番に割り当てられていて、隣の駅まで100 円で移動することができます。移動はどちらの方向にでも可能です。
わたしはこの路線上のいくつかの駅で買い物をしたいと思っています。そこで、プログラムを作成して移動費を計算することにしました。ある駅を始点として、買い物をするすべての駅を訪問する最小の費用（円）を求めるプログラムを作成してください。ただし、同じ駅を何度訪問しても良く、どのような順番で駅を訪問しても構いません。
入力
入力は以下の形式で与えられる。
N
M
p
d
1
d
2
:
d
M
1行目に駅の数
N
(2 ≤
N
≤ 100000)、買い物をする駅の数
M
(1 ≤
M
≤ 10000 かつ
M
<
N
)、出発する駅の番号
p
(0 ≤
p
≤
N
-1) が与えられる。続く
M
行に買い物をする駅の番号
d
i
(0 ≤
d
i
≤
N
-1) が与えられる。ただし、
d
i
は全て異なり、
p
もまたどの
d
i
とも異なるものとする。
出力
最小の費用を１行に出力する。
入出力例
入力例１
5 4 0
1
2
3
4
出力例１
400
入力例２
7 2 1
6
2
出力例２
400


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
import itertools as ite
import math

INF = 10 ** 18

N, M, p = map(int, raw_input().split())
ls = []
for i in range(M):
    ls.append((input() - p) % N)
ls = sorted(ls)
ans = min(ls[-1], N - ls[0])
for i in range(M - 1):
    len1 = ls[i]
    len2 = N - ls[i + 1]
    ans = min(ans, len1 * 2 + len2, len2 * 2 + len1)
print ans * 100
```