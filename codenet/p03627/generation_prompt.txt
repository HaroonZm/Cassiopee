Voici un énoncé de problème :

Score :
300
points
Problem Statement
We have
N
sticks with negligible thickness.
The length of the
i
-th stick is
A_i
.
Snuke wants to select four different sticks from these sticks and form a rectangle (including a square), using the sticks as its sides.
Find the maximum possible area of the rectangle.
Constraints
4 \leq N \leq 10^5
1 \leq A_i \leq 10^9
A_i
is an integer.
Input
Input is given from Standard Input in the following format:
N
A_1
A_2
...
A_N
Output
Print the maximum possible area of the rectangle.
If no rectangle can be formed, print
0
.
Sample Input 1
6
3 1 2 4 2 1
Sample Output 1
2
1 \times 2
rectangle can be formed.
Sample Input 2
4
1 2 3 4
Sample Output 2
0
No rectangle can be formed.
Sample Input 3
10
3 3 3 3 4 4 4 5 5 5
Sample Output 3
20


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
from collections import Counter

n = int(input())
a = list(map(int, input().split()))

c = Counter(a)

c_list = list(c.items())

#print(c_list)

tmp_list = []
for tmp in c_list:
    if tmp[1] >= 2:
        tmp_list.append(tmp)

tmp_list.sort(reverse=True, key=lambda x: x[0])

if len(tmp_list) == 0 or (len(tmp_list) == 1 and tmp_list[0][1] < 4):
    print(0)
else:
    if tmp_list[0][1] < 4:
        print(tmp_list[0][0]*tmp_list[1][0])
    else:
        print(tmp_list[0][0]**2)
```