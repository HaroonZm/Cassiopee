N, M = map(int, input().split())
S = input()[::-1]

"""
スタートから貪欲に考えようとすると
「最短で行くために大きい目を出したい」と
「辞書順最小のために小さい目を出したい」が共存してやりづらい

ゴールから貪欲に考える（出来るだけ多く戻る）と考えると
「最短で行くために大きい目を出したい」と
「辞書順最小のために、最後の手を出来るだけ小さくしたい
 -> 後ろから考えて、大きい目を出せば良い」となり
貪欲に解ける
"""
# 出した目の値（逆順）
ans = []
# 現在の位置（ゴールを0、スタートをNとする）
now = 0

while True:
    # Mだとオーバーしてしまう場合(ちょうど終わる場合も含む)
    # 最後の目を記録して終了
    if now + M >= N:
        ans.append(N - now)
        break

    # Mマス進むと仮定する
    step = M
    # 行き先がゲームオーバーなら、stepをデクリメント
    while S[now + step] == '1':
        step -= 1
        # step = M,M-1,...,1がダメならこれ以上進めないので終了
        if step == 0:
            print(-1)
            exit()

    now += step
    ans.append(step)

print(*ans[::-1])