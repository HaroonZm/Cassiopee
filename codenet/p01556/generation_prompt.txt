Voici un énoncé de problème :

Convex-Cut
N個の頂点からなる凸多角形が与えられる。各頂点の座標は反時計周りに(X
1
, Y
1
), (X
2
,Y
2
), ……, (X
N
, Y
N
)で表わされる。
点Pを通るどのような直線で凸多角形を切断しても、切断後に得られる2つの凸多角形の面積が等しいような点Pの座標を求めよ。
Input
入力は以下の形式で与えられる。
N
X
1
Y
1
X
2
Y
2
……
X
N
Y
N
Constraints
入力は全て整数である
3 ≤ N ≤ 50
0 ≤ |X
i
|, |Y
i
| ≤ 1000000
入力の多角形は単純な凸多角形である。
出力は、出力座標を(X, Y)、厳密解を(cX, cY)とした時にmax(|X-cX|, |Y-cY|) ≤ 0.0001を満たす必要がある
Output
問題文の条件を満たす点があるのならば、その点の座標を
X Y
の形式で出力せよ。
点が存在しない場合は"NA"と1行に出力せよ。
Sample Input 1
4
100 100
0 100
0 0
100 0
以下の図に対応する。
Output for the Sample Input 1
50.00000 50.00000
Sample Input 2
3
100 100
0 100
0 0
Output for the Sample Input 2
NA
以下の図に対応する。


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
N = input()
lst = []

for i in range(N):
    X, Y = map(int, raw_input().split())
    lst.append((X, Y))

if N % 2 != 0:
    print "NA"
    exit()

ansx = lst[0][0] + lst[N / 2][0]
ansy = lst[0][1] + lst[N / 2][1]

for i in range(N / 2):
    x = lst[i][0] + lst[i + N / 2][0]
    y = lst[i][1] + lst[i + N / 2][1]
    if x != ansx or y != ansy:
        print "NA"
        exit()

print str(ansx / 2.0) + " " + str(ansy / 2.0)
```