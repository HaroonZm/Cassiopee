En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
import sys
input = sys.stdin.readline

import numpy as np

# 可換なら6回周期。6個計算すると、交換子で共役とったものだとわかる。

N,K = map(int,input().split())

P,Q = [np.array(input().split(), dtype=np.int32) for _ in range(2)]

P -= 1
Q -= 1

def inv(a):
    x = np.empty_like(a)
    x[a] = np.arange(len(x))
    return x

def mult_inv(a,b):
    # ab^{-1}
    c = np.empty_like(a)
    c[b] = a
    return c

def mult(a,b):
    return mult_inv(a,inv(b))

def power(a,n):
    if n == 0:
        return np.arange(len(a))
    x = power(a,n//2)
    x = mult(x,x)
    return mult(a,x) if n&1 else x

A = [P,Q]
for _ in range(4):
    A.append(mult_inv(A[-1],A[-2]))

q,r = divmod(K-1,6)
QP_Q_P = mult(mult_inv(mult_inv(Q,P),Q),P)
left = power(QP_Q_P,q)
right = inv(left)
answer = mult(mult(left, A[r]), right) + 1

print(' '.join(answer.astype(str)))
```