Voici un énoncé de problème :

Baseball Simulation
Ichiro likes baseball and has decided to write a program which simulates baseball.
The program reads events in an inning and prints score in that inning. There are only three events as follows:
Single hit
put a runner on the first base.
the runner in the first base advances to the second base and the runner in the second base advances to the third base.
the runner in the third base advances to the home base (and go out of base) and a point is added to the score.
Home run
all the runners on base advance to the home base.
points are added to the score by an amount equal to the number of the runners plus one.
Out
The number of outs is increased by 1.
The runners and the score remain stationary.
The inning ends with three-out.
Ichiro decided to represent these events using "HIT", "HOMERUN" and "OUT", respectively.
Write a program which reads events in an inning and prints score in that inning. You can assume that the number of events is less than or equal to 100.
Input
The input consists of several datasets. In the first line, the number of datasets
n
is given. Each dataset consists of a list of events (strings) in an inning.
Output
For each dataset, prints the score in the corresponding inning.
Sample Input
2
HIT
OUT
HOMERUN
HIT
HIT
HOMERUN
HIT
OUT
HIT
HIT
HIT
HIT
OUT
HIT
HIT
OUT
HIT
OUT
OUT
Output for the Sample Input
7
0


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
event = []
inning = int(input())

NONE   = 0b000
FIRST  = 0b001
SECOND = 0b010
THIRD  = 0b100

runner = NONE
currentInning = 0
score = 0
outCount = 0
inningScore = []

while currentInning < inning:
    data = input()
    if data == "HIT":
        if (runner & THIRD) == THIRD:
            score += 1
            runner &= ~THIRD
        runner = runner << 1
        runner |= FIRST
    elif data == "OUT":
        outCount += 1

    elif data == "HOMERUN":
        if (runner & THIRD) == THIRD:
            score += 1
        if (runner & SECOND) == SECOND:
            score += 1
        if (runner & FIRST) == FIRST:
            score += 1
        score += 1
        runner = NONE
    
    if outCount == 3:
        inningScore.append(score)
        currentInning += 1
        outCount = 0
        score = 0
        runner = NONE

for i in range(inning):
    print(inningScore[i])
```