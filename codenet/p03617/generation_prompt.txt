Voici un énoncé de problème :

Score :
300
points
Problem Statement
You've come to your favorite store Infinitesco to buy some ice tea.
The store sells ice tea in bottles of different volumes at different costs.
Specifically, a
0.25
-liter bottle costs
Q
yen, a
0.5
-liter bottle costs
H
yen, a
1
-liter bottle costs
S
yen, and a
2
-liter bottle costs
D
yen.
The store has an infinite supply of bottles of each type.
You want to buy exactly
N
liters of ice tea. How many yen do you have to spend?
Constraints
1 \leq Q, H, S, D \leq 10^8
1 \leq N \leq 10^9
All input values are integers.
Input
Input is given from Standard Input in the following format:
Q
H
S
D
N
Output
Print the smallest number of yen you have to spend to buy exactly
N
liters of ice tea.
Sample Input 1
20 30 70 90
3
Sample Output 1
150
Buy one
2
-liter bottle and two
0.5
-liter bottles. You'll get
3
liters for
90 + 30 + 30 = 150
yen.
Sample Input 2
10000 1000 100 10
1
Sample Output 2
100
Even though a
2
-liter bottle costs just
10
yen, you need only
1
liter.
Thus, you have to buy a
1
-liter bottle for
100
yen.
Sample Input 3
10 100 1000 10000
1
Sample Output 3
40
Now it's better to buy four
0.25
-liter bottles for
10 + 10 + 10 + 10 = 40
yen.
Sample Input 4
12345678 87654321 12345678 87654321
123456789
Sample Output 4
1524157763907942


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
q,h,s,d = map(int,input().split())
lis = [1, 2, 4, 8]
score = [q,h,s,d]
n = int(input())
all_s = 4*n

tmp_li = [8*q,4*h,2*s,d]
tmp_2 = tmp_li[:]
tmp_2.sort()

jun = []
for t in tmp_2:
    jun.append(tmp_li.index(t))
#print('tmp_li',tmp_li,'tmp_2',tmp_2,'jun',jun,'lis',lis)
#[3, 1, 2, 0]

ans = 0
for j in jun:
    a = all_s // lis[j]
    b = all_s % lis[j]
    #print(all_s,a,b,lis[j])
    all_s -= a*lis[j]
    ans += score[j]*a
print(ans)
```