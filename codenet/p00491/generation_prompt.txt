Voici un énoncé de problème :

パスタ (Pasta)
問題
あなたはパスタが大好物であり，毎日，晩御飯にパスタを作って食べている．あなたはトマトソース，クリームソース，バジルソースの 3 種類のパスタを作ることができる．
N 日間の晩御飯の予定を考えることにした．それぞれの日に 3 種類のパスタから 1 種類を選ぶ．ただし，同じパスタが続くと飽きてしまうので，3 日以上連続して同じパスタを選んではいけない．また，N 日のうちの K 日分のパスタはすでに決めてある．
入力として N の値と，K 日分のパスタの情報が与えられたとき，条件をみたす予定が何通りあるかを 10000 で割った余りを求めるプログラムを作成せよ．
入力
入力は K + 1 行からなる．
1 行目には 2 つの整数 N, K (3 ≦ N ≦ 100，1 ≦ K ≦ N) が空白を区切りとして書かれている．
1 + i 行目 (1 ≦ i ≦ K) には 2 つの整数 A
i
, B
i
(1 ≦ A
i
≦ N，1 ≦ B
i
≦ 3) が空白を区切りとして書かれている．これは，A
i
日目のパスタはすでに決まっており，B
i
= 1 のときはトマトソースであり，B
i
= 2 のときはクリームソースであり，B
i
= 3 のときはバジルソースであることを表す．A
i
(1 ≦ i ≦ K) は全て異なる．与えられる入力データにおいて，条件をみたす予定は 1 通り以上あることが保証されている．
出力
条件をみたす予定が何通りあるかを 10000 で割った余りを 1 行で出力せよ．
入出力例
入力例 1
5 3
3 1
1 1
4 2
出力例 1
6
入出力例 1 において，あなたは 5 日間の予定を考える．1 日目と 3 日目はトマトソースであり，4 日目はクリームソースである．また，3 日以上連続して同じパスタを選んではいけない．これらの条件をみたす予定は 6 通りある．
1日目
2日目
3日目
4日目
5日目
予定 1
1
2
1
2
1
予定 2
1
2
1
2
2
予定 3
1
2
1
2
3
予定 4
1
3
1
2
1
予定 5
1
3
1
2
2
予定 6
1
3
1
2
3
この表では，1 はトマトソースを，2 はクリームソースを，3 はバジルソースを表す．
入力例 2
20 5
10 2
4 3
12 1
13 2
9 1
出力例 2
2640
入出力例 2 において，条件をみたす予定は全部で 4112640 通りある．それを 10000 で割った余りである 2640 を出力する．
問題文と自動審判に使われるデータは、
情報オリンピック日本委員会
が作成し公開している問題文と採点用テストデータです。


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
n, k = map(int, input().split())
rules = [map(int, input().split()) for _ in range(k)]

ans = [[0,1,1,1,1,1,1] for _ in range(n+1)]

dic = [0, [0,1,0,0,1,0,0], [0,0,1,0,0,1,0], [0,0,0,1,0,0,1]]
for [d, p] in rules:
    ans[d] = list(dic[p])

ans[1][4] = 0
ans[1][5] = 0
ans[1][6] = 0

for d in range(2, n+1):
    ans[d][1] = ans[d][1] * (ans[d-1][2] + ans[d-1][3] + ans[d-1][5] + ans[d-1][6])
    ans[d][2] = ans[d][2] * (ans[d-1][1] + ans[d-1][3] + ans[d-1][4] + ans[d-1][6])
    ans[d][3] = ans[d][3] * (ans[d-1][1] + ans[d-1][2] + ans[d-1][4] + ans[d-1][5])
    ans[d][4] = ans[d][4] *  ans[d-1][1]
    ans[d][5] = ans[d][5] *  ans[d-1][2]
    ans[d][6] = ans[d][6] *  ans[d-1][3]

print(sum(ans[n]) % 10000)
```