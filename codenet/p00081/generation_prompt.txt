Voici un énoncé de problème :

線対称
平面上の異なる 3 点
P1(x1,y1)
,
P2(x2,y2)
,
Q(xq,yq)
の座標の組を読み込んで、点
P1
点
P2
を通る直線を対称軸として点
Q
と線対称の位置にある点
R(x,y)
を出力するプログラムを作成してください。なお、点
Q
は、その対称軸上にないものとします。
入力
入力は複数のデータセットからなります。各データセットは以下の形式で与えられます。
x1
,
y1
,
x2
,
y2
,
xq
,
yq
x1
,
y1
,
x2
,
y2
,
xq
,
yq
(-100 以上 100 以下の実数) がカンマ区切りで１行に与えられます。
データセットの数は 50 を超えない。
出力
データセットごとに、
x
,
y
を空白区切りで 1 行に出力する。出力は実数で 0.0001 以下の誤差を含んでもよい。
Sample Input
1.0,0.0,-1.0,0.0,1.0,1.0
1.0,0.0,0.0,-1.0,3.0,0.0
0.0,1.0,0.0,-1.0,1.0,1.0
Output for the Sample Input
1.000000 -1.000000
1.000000 2.000000
-1.000000 1.000000


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
def rot(x, y, t):
    v = [0.0, 0.0]
    v[0] = ((1-t**2)*x+2*t*y)/(t**2+1)
    v[1] = (2*t*x+(t**2-1)*y)/(t**2+1)
    return v
import sys
v=[0.0,0.0]
for line in sys.stdin:
    ipt = line.split(',')
    x = [float(ipt[i]) for i in range(0,6,2)]
    y = [float(ipt[j]) for j in range(1,6,2)]
    if x[1]!=x[0]:
        v = rot(x[2]-x[0],y[2]-y[0],(y[1]-y[0])/(x[1]-x[0]))
        v[0]+=x[0]; v[1]+=y[0];
    else:
        v = [-x[2], y[2]]
    print "%.6f %.6f"%(0.0+v[0],0.0+v[1])
```