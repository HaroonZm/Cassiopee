Voici un énoncé de problème :

Coin Combination Problem
You have 4 bags A, B, C and D each of which includes
N
coins (there are totally
4N
coins). Values of the coins in each bag are
a
i
,
b
i
,
c
i
and
d
i
respectively.
Find the number of combinations that result when you choose one coin from each bag (totally
4
coins) in such a way that the total value of the coins is
V
. You should distinguish the coins in a bag.
Constraints
1 ≤
N
≤ 1000
1 ≤
a
i
,
b
i
,
c
i
,
d
i
≤ 10
16
1 ≤
V
≤ 10
16
All input values are given in integers
Input
The input is given in the following format.
N
V
a
1
a
2
...
a
N
b
1
b
2
...
b
N
c
1
c
2
...
c
N
d
1
d
2
...
d
N
Output
Print the number of combinations in a line.
Sample Input 1
3 14
3 1 2
4 8 2
1 2 3
7 3 2
Sample Output 1
9
Sample Input 2
5 4
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
Sample Output 2
625


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
N, V = (int(x) for x in input().split())
A = [int(x) for x in input().split()]
B = [int(x) for x in input().split()]
C = [int(x) for x in input().split()]
D = [int(x) for x in input().split()]

AB = {}
for a in A:
    for b in B:
        AB.setdefault(a + b, 0)
        AB[a + b] += 1

CD = {}
for c in C:
    for d in D:
        CD.setdefault(c + d, 0)
        CD[c + d] += 1

ans = 0
for ab in AB.keys():
    if V - ab in CD:
        ans += AB[ab] * CD[V - ab]

print(ans)
```