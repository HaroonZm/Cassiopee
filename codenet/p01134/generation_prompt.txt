En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
def make_line(line_str):
    x1, y1, x2, y2 = map(int, line_str.split())
    return (x1 + 1j * y1, x2 + 1j * y2)

def cross_point(l1, l2):
    (p1, p2), (p3, p4) = l1, l2
    v34, v12, v23, v31 = p4 - p3, p2 - p1, p3 - p2, p1 - p3
    s1 = v34.real * v31.imag - v34.imag * v31.real
    s2 = v34.real * v23.imag - v34.imag * v23.real
    if s1 + s2 == 0:
        return None
    rt = s1 / (s1 + s2)
    if 0 < rt < 1:
        cp = (p1 + v12 * rt) * 1e10
        return (int(cp.real), int(cp.imag))
    else:
        return None

while True:
    n = int(input())
    if not n: break
    lines = [make_line(input()) for _ in range(n)]

    num_crossed = 0
    for i, line in enumerate(lines):
        crossed = set(cross_point(line, l) for l in lines[:i])
        crossed.discard(None)
        num_crossed += len(crossed)

    print(1 + n + num_crossed)
```