Voici un énoncé de problème :

勢力の予想
信夫くんと静夫くんは長方形の島で領地を取り合うゲームをしています。下の図①のように、島全体は格子状に区切られた正方形の区画でできており、区画にはそこから生じる損得が整数で示されています。
このゲームでは１つの駒を動かして領地の境界線を決めていきます。ゲーム開始時、駒は島の北西端にあります（図①）。この駒を島の南東端まで動かしていったときの駒の軌跡が領地の境界線となります。二人のプレーヤーは交互に駒を動かします。駒は南隣の格子点か東隣の格子点にのみ動かすことができます（図②）。駒が島の端に到達した場合は、南か東のうち動かせる方向に動かします。駒が南東端に到達したらゲーム終了です。
ゲーム終了後の境界線から北東側の領域が先攻プレーヤーの領域、南西側の領域が後攻プレーヤーの領
域です（図③）。各プレーヤーの領域内に含まれる、区画から生じる損得の合計がそのプレーヤーのス
コアとなります。二人ともゲームにはかなり慣れており、最終的に自分のスコアから相手のスコアをひ
いた値が一番大きくなるように正確に駒を動かします。
島の大きさとそれぞれの区画から生じる損得が与えられたとき、ゲーム終了時の結果を計算するプログラムを作成せよ。結果は、信夫くんと静夫くんのスコアの差の絶対値とする。
Input
入力は以下の形式で与えられる。
W
H
s
1,1
s
1,2
...
s
1,W
s
2,1
s
2,2
...
s
2,W
:
s
H,1
s
H,2
...
s
H,W
１行目に島に含まれる東西方向と南北方向の区画の数
W
,
H
(1 ≤
W
,
H
≤ 1000) が与えられる。続く
H
行に
i
行
j
列目の区画から生じる損得
s
i,j
(-1000 ≤
s
i,j
≤ 1000) が与えられる。ただし、
i
の値が増加する方向を南、
j
の値が増加する方向を東とする。
Output
信夫くんと静夫くんのスコアの差の絶対値を１行に出力する。
Sample Input 1
2 1
-2 1
Sample Output 1
1
Sample Input 2
2 2
2 -3
3 -1
Sample Output 2
3
Sample Input 3
5 4
5 3 2 -5 2
2 -4 2 8 -4
2 3 -7 6 7
3 -4 10 -3 -3
Sample Output 3
5


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
import sys
sys.setrecursionlimit(10**7)
w, h = map(int, input().split())
S = [list(map(int, input().split())) for i in range(h)]
SW = [[0]*w for i in range(h)]
SH = [[0]*w for i in range(h)]
for i in range(h):
    cnt = 0
    for j in range(w-1, -1, -1):
        cnt += S[i][j]
        SW[i][j] = cnt
for j in range(w):
    cnt = 0
    for i in range(h-1, -1, -1):
        cnt += S[i][j]
        SH[i][j] = cnt
memo = {}
def dfs(x, y):
    if (x, y) in memo:
        return memo[x, y]
    if x == w or y == h:
        return 0
    if (x+y) % 2 == 0:
        # first
        res = max(dfs(x+1, y) - SH[y][x], dfs(x, y+1) + SW[y][x])
    else:
        # second
        res = min(dfs(x+1, y) - SH[y][x], dfs(x, y+1) + SW[y][x])
    memo[x, y] = res
    return res
print(abs(dfs(0, 0)))
```