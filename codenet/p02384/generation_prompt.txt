Voici un énoncé de problème :

Dice II
Construct a dice from a given sequence of integers in the same way as
Dice I
.
You are given integers on the top face and the front face after the dice was rolled in the same way as
Dice I
. Write a program to print an integer on the right side face.
Input
In the first line, six integers assigned to faces are given in ascending order of their corresponding labels.
In the second line, the number of questions $q$ is given.
In the following $q$ lines, $q$ questions are given. Each question consists of two integers on the top face and the front face respectively.
Output
For each question, print the integer on the right side face.
Constraints
$0 \leq $ the integer assigned to a face $ \leq 100$
The integers are all different
$1 \leq q \leq 24$
Sample Input
1 2 3 4 5 6
3
6 5
1 3
3 2
Sample Output
3
5
6


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
def North(dice):
    w = dice[0]
    dice[0] = dice[1]
    dice[1] = dice[5]
    dice[5] = dice[4]
    dice[4] = w
    return dice
def East(dice):
    w = Dice[1]
    dice[1] = dice[2]
    dice[2] = dice[4]
    dice[4] = dice[3]
    dice[3] = w
    return dice

def West(dice):
    w = dice[0]
    dice[0] = dice[2]
    dice[2] = dice[5]
    dice[5] = dice[3]
    dice[3] = w
    return dice

maxloop = 4
Ncnt = 0
Ecnt = 0
Wcnt = 0

Dice = input().split()
q = int(input())

CopyDice = Dice

for i1 in range(q):
    Nloop = True
    Eloop = True
    Wloop = True
    Ncnt = 0
    Ecnt = 0
    Wcnt = 0
    I = input().split()
    top = I[0]
    front = I[1]
    while Eloop:
        while Nloop:
            while Wloop:
                if Dice[0] == top and Dice[1] == front:
                    print(Dice[2])
                    Nloop = False
                    Eloop = False
                    Wloop = False
                    break
                Dice = West(Dice)
                Wcnt += 1
                if Wcnt == maxloop:
                    Wloop = False
            Dice = North(Dice)
            Wcnt = 0
            Wloop = True
            Ncnt += 1
            if Ncnt == maxloop:
                Nloop = False
        Dice = East(Dice)
        Ncnt = 0
        Nloop = True
        Ecnt += 1
        if Ecnt == maxloop:
            Eloop = False
    Dice = CopyDice
```