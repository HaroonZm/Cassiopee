Voici un énoncé de problème :

The Maximum Number of Overlaps
Given a set of $N$ axis-aligned rectangular seals, find the number of overlapped seals on the region which has the maximum number of overlapped seals.
Input
The input is given in the following format.
$N$
$x1_1$ $y1_1$ $x2_1$ $y2_1$
$x1_2$ $y1_2$ $x2_2$ $y2_2$
:
$x1_N$ $y1_N$ $x2_N$ $y2_N$
($x1_i, y1_i$) and ($x2_i, y2_i$) are the coordinates of the top-left and the bottom-right corner of the $i$-th seal respectively.
Constraints
$ 1 \leq N \leq 100000 $
$ 0 \leq x1_i < x2_i \leq 1000 $
$ 0 \leq y1_i < y2_i \leq 1000 $
$ x1_i, y1_i, x2_i, y2_i$ are given in integers
Output
Print the maximum number of overlapped seals in a line.
Sample Input 1
2
0 0 3 2
2 1 4 3
Sample Output 1
2
Sample Input 2
2
0 0 2 2
2 0 4 2
Sample Output 2
1
Sample Input 3
3
0 0 2 2
0 0 2 2
0 0 2 2
Sample Output 3
3


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
from itertools import accumulate
import sys
input = sys.stdin.buffer.readline
sys.setrecursionlimit(10 ** 7)

N = int(input())
grid = [[0] * 1002 for _ in range(1002)]
for _ in range(N):
    x, y, xx, yy = map(int, input().split())
    grid[x][y] += 1
    grid[x][yy] -= 1
    grid[xx][y] -= 1
    grid[xx][yy] += 1

for i in range(1002):
    grid[i] = list(accumulate(grid[i]))
for i in range(1001):
    for j in range(1002):
        grid[i + 1][j] += grid[i][j]

ans = max(max(x) for x in grid)
print(ans)
```