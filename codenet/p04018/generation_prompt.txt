Voici un énoncé de problème :

Score :
900
points
Problem Statement
Let
x
be a string of length at least
1
.
We will call
x
a
good
string, if for any string
y
and any integer
k (k \geq 2)
, the string obtained by concatenating
k
copies of
y
is different from
x
.
For example,
a
,
bbc
and
cdcdc
are good strings, while
aa
,
bbbb
and
cdcdcd
are not.
Let
w
be a string of length at least
1
.
For a sequence
F=(\,f_1,\,f_2,\,...,\,f_m)
consisting of
m
elements,
we will call
F
a
good representation
of
w
, if the following conditions are both satisfied:
For any
i \, (1 \leq i \leq m)
,
f_i
is a good string.
The string obtained by concatenating
f_1,\,f_2,\,...,\,f_m
in this order, is
w
.
For example, when
w=
aabb
, there are five good representations of
w
:
(
aabb
)
(
a
,
abb
)
(
aab
,
b
)
(
a
,
ab
,
b
)
(
a
,
a
,
b
,
b
)
Among the good representations of
w
, the ones with the smallest number of elements are called the
best representations
of
w
.
For example, there are only one best representation of
w=
aabb
:
(
aabb
)
.
You are given a string
w
. Find the following:
the number of elements of a best representation of
w
the number of the best representations of
w
, modulo
1000000007 \, (=10^9+7)
(It is guaranteed that a good representation of
w
always exists.)
Constraints
1 \leq |w| \leq 500000 \, (=5 \times 10^5)
w
consists of lowercase letters (
a
-
z
).
Partial Score
400
points will be awarded for passing the test set satisfying
1 \leq |w| \leq 4000
.
Input
The input is given from Standard Input in the following format:
w
Output
Print
2
lines.
In the first line, print the number of elements of a best representation of
w
.
In the second line, print the number of the best representations of
w
, modulo
1000000007
.
Sample Input 1
aab
Sample Output 1
1
1
Sample Input 2
bcbc
Sample Output 2
2
3
In this case, there are
3
best representations of
2
elements:
(
b
,
cbc
)
(
bc
,
bc
)
(
bcb
,
c
)
Sample Input 3
ddd
Sample Output 3
3
1


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
import sys
read = sys.stdin.buffer.read
readline = sys.stdin.buffer.readline
readlines = sys.stdin.buffer.readlines

W = read().rstrip()

N = len(W)

def Z_algorithm(S):
    # 共通接頭辞の長さを返す
    N=len(S)
    arr = [0]*N
    arr[0] = N
    i,j = 1,0
    while i<N:
        while i+j<N and S[j]==S[i+j]:
            j += 1
        arr[i]=j
        if not j:
            i += 1
            continue
        k = 1
        while i+k<N and k+arr[k]<j:
            arr[i+k] = arr[k]
            k += 1
        i += k; j -= k
    return arr

def is_periodic_left(W):
    Z = Z_algorithm(W)
    is_periodic = [False] * N
    for p in range(1,N//2 + 10):
        for i in range(p,N,p):
            if Z[i] >= p:
                is_periodic[p + i - 1] = True
            else:
                break
    return is_periodic

L = is_periodic_left(W)
R = is_periodic_left(W[::-1])[::-1]

if not L[-1]:
    answer = (1,1)
elif len(set(W)) == 1:
    answer = (N,1)
else:
    x = sum(not(x or y) for x,y in zip(L,R[1:]))
    answer = (2,x)
print('\n'.join(map(str,answer)))
```