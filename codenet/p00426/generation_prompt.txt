En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
def solve():
    from sys import stdin
    f_i = stdin
    
    def rec(i):
        if i == 0:
            return 0
        
        tray = cups[n - i]
        if tray == 'A':
            return rec(i - 1)
        elif tray == 'B':
            return 2 * 3 ** (i - 1) - 1 - rec(i - 1)
        else:
            return rec(i - 1) + 2 * 3 ** (i - 1)
    
    while True:
        n, m = map(int, f_i.readline().split())
        if n == 0:
            break
        
        cups = [None] * n
        for tray in 'ABC':
            itr = map(int, f_i.readline().split())
            next(itr)
            for i in itr:
                cups[i-1] = tray
        
        num = rec(n)
        ans = min(num, 3 ** n - 1 - num)
        if ans <= m:
            print(ans)
        else:
            print(-1)

solve()
```