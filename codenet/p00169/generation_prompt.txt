Voici un énoncé de problème :

ブラックジャック
ブラックジャックはカジノで行われるカードゲームの一種で、1 〜 13 までの数が書かれたカードを使ってゲームが行われます。各カードの点数は次のように決まっています。
1 は 1 点あるいは 11 点
2 から 9 までは、書かれている数の通りの点数
10 から 13 までは、10 点
このゲームには親を含めた何人かの参加者がおり、それぞれが何枚かのカードの組を持っています。このカードの組のことを手と呼びます。手の点数はカードの点数の合計です。その計算は次のように行うものとします。
カードの点数の合計が 21 より大きくなるときは、手の点数を 0 点とする
カードの点数として、1 は 1 点と計算しても 11 点と計算してもよいが、手の点数が最大となる方を選ぶこととする
配られたカードの情報を入力とし、手の点数を出力するプログラムを作成してください。
Input
複数のデータセットの並びが入力として与えられます。入力の終わりはゼロひとつの行で示されます。
各データセットは以下の形式で与えられます。
c
1
c
2
...
c
n
１行に
i
番目のカードに書かれている整数
c
i
(1 ≤
c
i
≤ 13) が空白区切りで１行に与えられます。カードの数
n
は 100 を超えません。
データセットの数は 200 を超えません。
Output
データセットごとに手の点数を１行に出力します。
Sample Input
1
7 7 7
7 7 8
12 1
10 1 1
0
Output for the Sample Input
11
21
0
21
12


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
def solve():
    c = list(map(int, input().split()))
    c = [min(10, e) for e in c]
    
    if c == [0]:
        return 1
    if len(c) > 21:
        print(0)
        return 0
    else:
        ans = 0
        for bit in range(1 << len(c)):
            s = 0
            for i in range(len(c)):
                if c[i] != 1:
                    s += c[i]
                else:
                    if bit >> i & 1:
                        s += 11
                    else:
                        s += 1
            if s <= 21:
                ans = max(ans, s)
        print(ans)
        return 0

def main():
    while solve() == 0:
        pass

if __name__ == '__main__':
    main()
```