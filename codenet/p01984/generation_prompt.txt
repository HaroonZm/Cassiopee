Voici un énoncé de problème :

短歌数
願はくは 花の下にて 春死なむ そのきさらぎの 望月のころ
これは，西行法師が詠んだとされる，有名な短歌の一つである．
短歌は，日本において古くから親しまれている和歌の一種であり，その多くは 5・7・5・7・7 の五句三十一音からなる．
ところで，57577 という数は，5 と 7 の二種類の数字からなる．
このような，十進表記がちょうど二種類の数字からなる正の整数を，短歌数と呼ぶことにする．
例えば，10, 12, 57577, 25252 などは短歌数であるが，5, 11, 123, 20180701 などは短歌数ではない．
正の整数
N
が与えられる．
N
番目に小さい短歌数を求めよ．
Input
入力は最大で 100 個のデータセットからなる．各データセットは次の形式で表される．
N
整数
N
は
1 ≤ N ≤ 10
18
を満たす．
入力の終わりは 1 つのゼロからなる行で表される．
Output
各データセットについて，
N
番目に小さい短歌数を 1 行に出力せよ．
Sample Input
1
2
3
390
1124
1546
314159265358979323
0
Output for the Sample Input
10
12
13
2020
25252
57577
7744444777744474777777774774744777747477444774744744


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
N = int(input())
while N:
    l = 2
    N -= 1
    while N >= ((1<<(l - 1)) - 1)*81:
        N -= ((1<<(l - 1)) - 1)*81
        l += 1
    s = N // (((1<<(l - 1)) - 1)*9) + 1
    N %= ((1<<(l - 1)) - 1)*9
    t = -1
    ans = str(s)
    #print("N = ", N)
    while t < 0:
        for i in range(s):
            if(N >= (1<<(l - 2))):
                N -= (1<<(l - 2))
            else:
                t = i
                break

        if t >= 0:
            continue

        if N >= ((1<<(l - 2)) - 1)*9:
            N -= ((1<<(l - 2)) - 1)*9
            for i in range(s+1, 10):
                if N >= (1<<(l-2)):
                    N -= (1<<(l-2))
                else:
                    t = i
                    break
        else:
            l -= 1
            ans += str(s)
    #print("N = ", N)
    ans += str(t)
    if s > t:
        b = bin(N)[2:]
        ans_ = str(t)*(l - 1 - len(b))
        C = [str(t), str(s)]
    else:
        b = bin(N)[2:]
        ans_ = str(s)*(l - 1 - len(b))
        C = [str(s), str(t)]

    for i in range(len(b)):
        ans_ += C[int(b[i])]
    print(ans+ans_[1:])
    N = int(input())
```