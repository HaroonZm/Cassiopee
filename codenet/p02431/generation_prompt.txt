Voici un énoncé de problème :

Vector
For a dynamic array $A = \{a_0, a_1, ...\}$ of integers, perform a sequence of the following operations:
pushBack($x$): add element $x$ at the end of $A$
randomAccess($p$):print element $a_p$
popBack(): delete the last element of $A$
$A$ is a 0-origin array and it is empty in the initial state.
Input
The input is given in the following format.
$q$
$query_1$
$query_2$
:
$query_q$
Each query $query_i$ is given by
0 $x$
or
1 $p$
or
2
where the first digits
0
,
1
and
2
represent pushBack, randomAccess and popBack operations respectively.
randomAccess and popBack operations will not be given for an empty array.
Output
For each randomAccess, print $a_p$ in a line.
Constraints
$1 \leq q \leq 200,000$
$0 \leq p < $ the size of $A$
$-1,000,000,000 \leq x \leq 1,000,000,000$
Sample Input 1
8
0 1
0 2
0 3
2
0 4
1 0
1 1
1 2
Sample Output 1
1
2
4


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
end = 0
ans = [0]
def pushBack(x):
    global end, ans
    ans[end] = x
    end += 1
    if end >= len(ans):
        ans.append(0)

def randomAccess(p):
    global ans
    print(ans[int(p)])

def popBack():
    global end
    end -= 1

q = int(input())
for i in range(q):
    query = list(input().split())
    if query[0] == "0":
        pushBack(query[1])
    elif query[0] == "1":
        randomAccess(query[1])
    else:
        popBack()
```