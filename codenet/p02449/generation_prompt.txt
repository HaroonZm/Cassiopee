Voici un énoncé de problème :

Permutation
For given a sequence $A = \{a_0, a_1, ..., a_{n-1}\}$, print the previous permutation and the next permutation in lexicographic order.
Input
A sequence is given in the following format.
$n$
$a_0 \; a_1 \; ... \; a_{n-1}$
Output
Print the previous permutation, the given sequence and the next permutation in the 1st, 2nd and 3rd lines respectively.
Separate adjacency elements by a space character. Note that if there is no permutation, print nothing in the corresponding line.
Constraints
$1 \leq n \leq 9$
$a_i$ consist of $1, 2, ..., n$
Sample Input 1
3
2 1 3
Sample Output 1
1 3 2
2 1 3
2 3 1
Sample Input 2
3
3 2 1
Sample Output 2
3 1 2
3 2 1


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
import itertools
n = input()
a = tuple(map(int, input().split()))
p = sorted(list(itertools.permutations(a)))

i = p.index(a)

if i > 0:
    print(*p[i-1])
print(*p[i])
if i < len(p)-1:
    print(*p[i+1])
```