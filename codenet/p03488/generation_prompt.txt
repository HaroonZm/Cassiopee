Voici un énoncé de problème :

Score :
500
points
Problem Statement
A robot is put at the origin in a two-dimensional plane.
Initially, the robot is facing in the positive
x
-axis direction.
This robot will be given an instruction sequence
s
.
s
consists of the following two kinds of letters, and will be executed in order from front to back.
F
: Move in the current direction by distance
1
.
T
: Turn
90
degrees, either clockwise or counterclockwise.
The objective of the robot is to be at coordinates
(x, y)
after all the instructions are executed.
Determine whether this objective is achievable.
Constraints
s
consists of
F
and
T
.
1 \leq |s| \leq 8
000
x
and
y
are integers.
|x|, |y| \leq |s|
Input
Input is given from Standard Input in the following format:
s
x
y
Output
If the objective is achievable, print
Yes
; if it is not, print
No
.
Sample Input 1
FTFFTFFF
4 2
Sample Output 1
Yes
The objective can be achieved by, for example, turning counterclockwise in the first
T
and turning clockwise in the second
T
.
Sample Input 2
FTFFTFFF
-2 -2
Sample Output 2
Yes
The objective can be achieved by, for example, turning clockwise in the first
T
and turning clockwise in the second
T
.
Sample Input 3
FF
1 0
Sample Output 3
No
Sample Input 4
TF
1 0
Sample Output 4
No
Sample Input 5
FFTTFF
0 0
Sample Output 5
Yes
The objective can be achieved by, for example, turning counterclockwise in the first
T
and turning counterclockwise in the second
T
.
Sample Input 6
TTTT
1 0
Sample Output 6
No


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
import sys
read=sys.stdin.read
readline=sys.stdin.readline

def isinsums(x,lst):
  s=sum(lst)
  t=(s+x)//2
  if s==0 and x==0:
    return True
  if (s-x)%2 or t<0:
    return False
  t=(s+x)//2
  m1=(1<<(t+1))-1
  m2=1<<t
  sums=0
  for e in lst:
    sums=(sums|(1+sums)<<e)&m1
  sums|=1
  if (sums)&m2>0:
    return True
  return False

s=readline().strip()
x,y=map(int,readline().split())

s=s.replace('TF','T F')
s=s.replace('FT','F T')
bs=s.split()
if bs[0][0]=='F':
  x-=len(bs[0])
  del bs[0]

xy=[[],[]]
f=0
for i,e in enumerate(bs):
  if not i%2:
    l=len(e)
  else:
    f^=l%2
    xy[f].append(len(e))
if isinsums(x,xy[0]) and isinsums(y,xy[1]):
  print('Yes')
else:
  print('No')
```