Voici un énoncé de problème :

B - ライオン
あなたは動物園に来てライオンを見ている。
この動物園には
n
個のライオンのオリがある。
あなたはライオンが全部で何頭いるのか知りたくなったのだが、
一人で数えるのは大変だ。
そこで近くにいた動物園の来園者
m
人に協力してもらうことにした。
ライオンのオリは、それぞれ
1
番から
n
番までの数字がついており、
順番に並んでいる。
一つのオリには
0
頭以上
x
頭以下のライオンがいる。
m
人の来園者で
i
番目の人
(1 ≤ i ≤ m)
には
l_i
番から
r_i
番までの
両端を含むすべてのオリのライオンの数の総和を数えてもらった。
この情報を元に、
1
から
n
各オリの中のライオンの数を求めることにした。
入力形式
入力は以下の形式で与えられる
n
x
m
l_1
r_1
s_1
...
l_m
r_m
s_m
1行目は3つの整数
n
x
m
で、
それぞれオリの数、一つのオリの中のライオンの最大の数、
数えるのに協力した人の数である。
2行目から続く
m
行は各行3つの整数で、
それぞれ
i
番目の人が数えた結果
l_i
r_i
s_i
である。
l_i
番から
r_i
番までのオリのライオンを数えたら
合計
s_i
頭いたことを表している。
出力形式
数えてもらった結果が全て正しいとして、
1
から
n
の
各オリの中のライオンの数を空白区切りの
n
個の整数で出力せよ。
そのような答が複数あるときは、
ライオンの数の合計が最大になるものをどれでも良いので一つ出力せよ。
条件を満たすライオンの配置が一つもないときは
-1
を出力せよ。
制約
1 ≤ n ≤ 6
1 ≤ x ≤ 10
1 ≤ m ≤ 10
1 ≤ l_i ≤ r_i ≤ n
0 ≤ s_i ≤ 60
入力値はすべて整数である。
入出力例
入力例 1
3 5 1
1 2 5
出力例 1
2 3 5
その他"4 1 5"や"0 5 5"なども正しい出力である。
入力例 2
4 5 2
1 3 15
3 4 3
出力例 2
-1
条件を満たすライオンの配置が一つもないときは
-1
を出力せよ。


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
from itertools import product
n, x, m = map(int, raw_input().split())
h = [map(int, raw_input().split()) for i in xrange(m)]
ans = [-1]
for p in product(range(x+1), repeat=n):
    for l, r, s in h:
        if s != sum(p[l-1:r]): break
    else:
        if sum(ans) < sum(p): ans = p
print" ".join(map(str, ans))
```