En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
import itertools,bisect
cubes = [n**3 for n in xrange(1,1111)]
num = []
for n,m in itertools.combinations_with_replacement(cubes,2):
    num.append(n+m)
num.sort()
while True:
    z_cube = input()**3
    if z_cube == 0:
        break
    print z_cube-num[bisect.bisect(num,z_cube)-1]
```