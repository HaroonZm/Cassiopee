Voici un énoncé de problème :

Score :
100
points
Problem Statement
Decades have passed since the beginning of AtCoder Beginner Contest.
The contests are labeled as
ABC001
,
ABC002
,
...
from the first round, but after the
999
-th round
ABC999
, a problem occurred: how the future rounds should be labeled?
In the end, the labels for the rounds from the
1000
-th to the
1998
-th are decided:
ABD001
,
ABD002
,
...
,
ABD999
.
You are given an integer
N
between
1
and
1998
(inclusive). Print the first three characters of the label of the
N
-th round of AtCoder Beginner Contest.
Constraints
1 \leq N \leq 1998
N
is an integer.
Input
Input is given from Standard Input in the following format:
N
Output
Print the first three characters of the label of the
N
-th round of AtCoder Beginner Contest.
Sample Input 1
999
Sample Output 1
ABC
The
999
-th round of AtCoder Beginner Contest is labeled as
ABC999
.
Sample Input 2
1000
Sample Output 2
ABD
The
1000
-th round of AtCoder Beginner Contest is labeled as
ABD001
.
Sample Input 3
1481
Sample Output 3
ABD
The
1481
-th round of AtCoder Beginner Contest is labeled as
ABD482
.


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
import sys
import math
import itertools
import bisect
from copy import copy
from collections import deque,Counter
from decimal import Decimal
def s(): return input()
def i(): return int(input())
def S(): return input().split()
def I(): return map(int,input().split())
def L(): return list(input().split())
def l(): return list(map(int,input().split()))
def lcm(a,b): return a*b//math.gcd(a,b)
sys.setrecursionlimit(10 ** 9)
mod = 10**9+7

N = i()
if N < 1000:
    print('ABC')
else:
    print('ABD')
```