Voici un énoncé de problème :

Score :
300
points
Problem Statement
You are given an integer
N
.
Find a triple of positive integers
h
,
n
and
w
such that
4/N = 1/h + 1/n + 1/w
.
If there are multiple solutions, any of them will be accepted.
Constraints
It is guaranteed that, for the given integer
N
, there exists a solution such that
h,n,w \leq 3500
.
Inputs
Input is given from Standard Input in the following format:
N
Outputs
Print a triple of positive integers
h
,
n
and
w
that satisfies the condition, in the following format:
h
n
w
Sample Input 1
2
Sample Output 1
1 2 2
4/2 = 1/1 + 1/2 + 1/2
.
Sample Input 2
3485
Sample Output 2
872 1012974 1539173474040
It is allowed to use an integer exceeding
3500
in a solution.
Sample Input 3
4664
Sample Output 3
3498 3498 3498


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
N = int(input())
for h in range(1,3501):
    for n in range(1,3501):
        p = 4*h*n - N*h - N*n
        if p <= 0:
            continue
        else:
            if (h*n) % p == 0:
                print(str(h) + " " + str(n) + " " + str((N*h*n)//p))
                exit()
```