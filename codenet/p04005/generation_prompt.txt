Voici un énoncé de problème :

Score :
200
points
Problem Statement
We have a rectangular parallelepiped of size
A×B×C
, built with blocks of size
1×1×1
. Snuke will paint each of the
A×B×C
blocks either red or blue, so that:
There is at least one red block and at least one blue block.
The union of all red blocks forms a rectangular parallelepiped.
The union of all blue blocks forms a rectangular parallelepiped.
Snuke wants to minimize the difference between the number of red blocks and the number of blue blocks. Find the minimum possible difference.
Constraints
2≤A,B,C≤10^9
Input
The input is given from Standard Input in the following format:
A
B
C
Output
Print the minimum possible difference between the number of red blocks and the number of blue blocks.
Sample Input 1
3 3 3
Sample Output 1
9
For example, Snuke can paint the blocks as shown in the diagram below.
There are
9
red blocks and
18
blue blocks, thus the difference is
9
.
Sample Input 2
2 2 4
Sample Output 2
0
For example, Snuke can paint the blocks as shown in the diagram below.
There are
8
red blocks and
8
blue blocks, thus the difference is
0
.
Sample Input 3
5 3 5
Sample Output 3
15
For example, Snuke can paint the blocks as shown in the diagram below.
There are
45
red blocks and
30
blue blocks, thus the difference is
9
.


En te basant sur cet énoncé, réécris le code suivant tout en conservant exactement sa fonctionnalité.

```python
A, B, C = map(int, input().split())

tmp = max(A, B, C)

if tmp%2 == 0:
    print(0)
    
else:
    print((A*B*C//max(A,B,C)))
```