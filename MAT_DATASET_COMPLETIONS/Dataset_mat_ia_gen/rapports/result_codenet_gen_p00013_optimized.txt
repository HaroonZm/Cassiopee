================================================================================
ANALYSE DES PRÉDICTIONS DE TOKENS
================================================================================

SCRIPT ORIGINAL:
--------------------------------------------------------------------------------
stack = []
try:
    while True:
        x = input()
        if x == '':
            break
        n = int(x)
        if n != 0:
            stack.append(n)
        else:
            print(stack.pop())
except EOFError:
    pass
--------------------------------------------------------------------------------

INFORMATION SUR LA TOKENISATION:
--------------------------------------------------------------------------------
Tokenisation utilisée: tiktoken pour le modèle gpt-4o-mini
Il s'agit de la tokenisation officielle utilisée par les modèles OpenAI.
--------------------------------------------------------------------------------

TOKENS IDENTIFIÉS:
--------------------------------------------------------------------------------
Token 0: 'stack' (ID: 15145)
Token 1: ' =' (ID: 314)
Token 2: ' []\n' (ID: 8911)
Token 3: 'try' (ID: 1806)
Token 4: ':\n' (ID: 734)
Token 5: '   ' (ID: 271)
Token 6: ' while' (ID: 2049)
Token 7: ' True' (ID: 6432)
Token 8: ':\n' (ID: 734)
Token 9: '       ' (ID: 309)
Token 10: ' x' (ID: 1215)
Token 11: ' =' (ID: 314)
Token 12: ' input' (ID: 3422)
Token 13: '()\n' (ID: 1234)
Token 14: '       ' (ID: 309)
Token 15: ' if' (ID: 538)
Token 16: ' x' (ID: 1215)
Token 17: ' ==' (ID: 951)
Token 18: ' '':\n' (ID: 125614)
Token 19: '           ' (ID: 352)
Token 20: ' break' (ID: 2338)
Token 21: '\n' (ID: 198)
Token 22: '       ' (ID: 309)
Token 23: ' n' (ID: 297)
Token 24: ' =' (ID: 314)
Token 25: ' int' (ID: 677)
Token 26: '(x' (ID: 4061)
Token 27: ')\n' (ID: 446)
Token 28: '       ' (ID: 309)
Token 29: ' if' (ID: 538)
Token 30: ' n' (ID: 297)
Token 31: ' !=' (ID: 1666)
Token 32: ' ' (ID: 220)
Token 33: '0' (ID: 15)
Token 34: ':\n' (ID: 734)
Token 35: '           ' (ID: 352)
Token 36: ' stack' (ID: 10825)
Token 37: '.append' (ID: 3709)
Token 38: '(n' (ID: 2406)
Token 39: ')\n' (ID: 446)
Token 40: '       ' (ID: 309)
Token 41: ' else' (ID: 1203)
Token 42: ':\n' (ID: 734)
Token 43: '           ' (ID: 352)
Token 44: ' print' (ID: 2123)
Token 45: '(stack' (ID: 52691)
Token 46: '.pop' (ID: 15746)
Token 47: '())\n' (ID: 4574)
Token 48: 'except' (ID: 25035)
Token 49: ' EOF' (ID: 72412)
Token 50: 'Error' (ID: 2255)
Token 51: ':\n' (ID: 734)
Token 52: '   ' (ID: 271)
Token 53: ' pass' (ID: 1853)
--------------------------------------------------------------------------------

INFORMATIONS SUR LA MATRICE 2D DE LOG PROBABILITÉS:
--------------------------------------------------------------------------------
Dimensions de la matrice: 13 lignes x 7 tokens max
Nombre de tokens par ligne: [3, 2, 4, 5, 5, 3, 6, 7, 5, 3, 5, 4, 2]
Convention de valeurs:
  - Log probabilité normale: Valeur réelle (typiquement entre -1 et -20)
  - Anomalie (token hors top-10): -50
  - Padding (positions vides): 100

Matrice 2D (format texte simplifiée):
[-10.00, -10.00, -10.00, PAD, PAD, PAD, PAD, ]
[ANOM, -0.01, PAD, PAD, PAD, PAD, PAD, ]
[-0.04, -2.06, -0.06, -0.02, PAD, PAD, PAD, ]
[-0.00, -2.85, -0.01, -0.43, -0.75, PAD, PAD, ]
[-0.02, -0.28, -0.14, -0.25, -1.82, PAD, PAD, ]
[-0.00, -0.06, -0.02, PAD, PAD, PAD, PAD, ]
[-0.00, -5.24, -0.10, -0.15, -0.00, -0.08, PAD, ]
[-0.02, -0.75, -0.30, -3.49, -0.05, -0.00, -0.01, ]
[-0.00, -0.04, -0.00, -0.00, -0.01, PAD, PAD, ]
[-0.01, -0.20, -0.01, PAD, PAD, PAD, PAD, ]
[-0.00, -2.83, -0.49, -0.09, -0.46, PAD, PAD, ]
[-0.01, -3.33, -0.00, -0.02, PAD, PAD, PAD, ]
[-0.00, -0.05, PAD, PAD, PAD, PAD, PAD, ]

Note: La matrice a été sauvegardée au format numpy dans 'matrice_logprob.npy'
--------------------------------------------------------------------------------

ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Position 0: 'stack' (ID: 15145) (token d'amorce)
--------------------------------------------------------------------------------

Position 1: ' =' (ID: 314) (token d'amorce)
--------------------------------------------------------------------------------

Position 2: ' []\n' (ID: 8911) (token d'amorce)
--------------------------------------------------------------------------------

Position 3: 'try' (ID: 1806)
Prédiction principale: 'for' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. 'for' (logprob: -1.3041) [Prédiction principale]
  2. '       ' (logprob: -2.4291)
  3. '   ' (logprob: -3.0541)
  4. 'result' (logprob: -3.0541)
  5. '    \n' (logprob: -3.3041)
  6. '``' (logprob: -3.3041)
  7. '        \n' (logprob: -3.5541)
  8. 'current' (logprob: -3.5541)
  9. 'print' (logprob: -3.9291)
  10. 'visited' (logprob: -4.0541)

Le token attendu n'est pas dans le top 10 des prédictions.

--------------------------------------------------------------------------------

Position 4: ':\n' (ID: 734)
Prédiction principale: ':\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ':\n' (logprob: -0.0128) [Prédiction principale]
  2. ':' (logprob: -5.0128)
  3. ' {\n' (logprob: -5.6378)
  4. ':\n\n' (logprob: -7.1378)
  5. ' :\n' (logprob: -7.5128)
  6. '{\n' (logprob: -9.0127)
  7. '\n' (logprob: -9.2627)
  8. ':\r\n' (logprob: -9.3877)
  9. '_to' (logprob: -9.7627)
  10. ' to' (logprob: -10.2627)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 5: '   ' (ID: 271)
Prédiction principale: '   ' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '   ' (logprob: -0.0353) [Prédiction principale]
  2. ' ' (logprob: -4.1603)
  3. 'for' (logprob: -5.5353)
  4. 'while' (logprob: -5.9103)
  5. '  ' (logprob: -6.0353)
  6. '\tfor' (logprob: -6.1603)
  7. '    \n' (logprob: -6.2853)
  8. '#' (logprob: -7.0353)
  9. '\t' (logprob: -7.0353)
  10. '\twhile' (logprob: -7.2853)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 6: ' while' (ID: 2049) [Après tabulation]
Prédiction principale: ' for' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. ' for' (logprob: -0.6847) [Prédiction principale]
  2. ' #' (logprob: -1.6847)
* 3. ' while' (logprob: -2.0597)
  4. ' stack' (logprob: -3.6847)
  5. ' print' (logprob: -3.8097)
  6. ' with' (logprob: -4.0597)
  7. ' result' (logprob: -4.6847)
  8. ' if' (logprob: -5.0597)
  9. ' top' (logprob: -5.1847)
  10. ' x' (logprob: -5.4347)

Le token attendu est à la position 3 dans les prédictions.

--------------------------------------------------------------------------------

Position 7: ' True' (ID: 6432)
Prédiction principale: ' True' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' True' (logprob: -0.0558) [Prédiction principale]
  2. ' len' (logprob: -4.6808)
  3. ' (' (logprob: -5.3058)
  4. ' i' (logprob: -5.3058)
  5. ' stack' (logprob: -5.4308)
  6. ' n' (logprob: -5.9308)
  7. ' index' (logprob: -5.9308)
  8. ' not' (logprob: -6.1808)
  9. ' current' (logprob: -6.5558)
  10. ' line' (logprob: -6.5558)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 8: ':\n' (ID: 734)
Prédiction principale: ':\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ':\n' (logprob: -0.0236) [Prédiction principale]
  2. ':' (logprob: -3.7736)
  3. ':\n\n' (logprob: -8.2736)
  4. ' :\n' (logprob: -9.6486)
  5. ' :' (logprob: -11.3986)
  6. ':#' (logprob: -11.3986)
  7. '\n' (logprob: -11.7736)
  8. ' and' (logprob: -12.7111)
  9. ' or' (logprob: -13.2736)
  10. ':\n\n\n' (logprob: -13.3361)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 9: '       ' (ID: 309)
Prédiction principale: '       ' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '       ' (logprob: -0.0031) [Prédiction principale]
  2. '     ' (logprob: -7.1281)
  3. '        \n' (logprob: -7.3781)
  4. '      ' (logprob: -7.5031)
  5. '    ' (logprob: -8.5031)
  6. '   ' (logprob: -8.5031)
  7. '        ' (logprob: -8.7531)
  8. '           ' (logprob: -9.0031)
  9. ' ' (logprob: -9.3781)
  10. '  ' (logprob: -9.7531)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 10: ' x' (ID: 1215) [Après tabulation]
Prédiction principale: ' #' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. ' #' (logprob: -1.9771) [Prédiction principale]
  2. ' line' (logprob: -2.3521)
  3. ' command' (logprob: -2.4771)
* 4. ' x' (logprob: -2.8521)
  5. ' num' (logprob: -2.8521)
  6. ' stack' (logprob: -3.1021)
  7. ' n' (logprob: -3.2271)
  8. ' value' (logprob: -3.4771)
  9. ' item' (logprob: -3.4771)
  10. ' s' (logprob: -3.6021)

Le token attendu est à la position 4 dans les prédictions.

--------------------------------------------------------------------------------

Position 11: ' =' (ID: 314)
Prédiction principale: ' =' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' =' (logprob: -0.0114) [Prédiction principale]
  2. ',' (logprob: -5.2614)
  3. '=input' (logprob: -6.2614)
  4. '=' (logprob: -7.2614)
  5. '1' (logprob: -7.3864)
  6. ',y' (logprob: -7.6364)
  7. '=int' (logprob: -7.7614)
  8. '_input' (logprob: -8.1364)
  9. ' +=' (logprob: -8.5114)
  10. '_str' (logprob: -8.6364)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 12: ' input' (ID: 3422)
Prédiction principale: ' input' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' input' (logprob: -0.4267) [Prédiction principale]
  2. ' int' (logprob: -1.4267)
  3. ' float' (logprob: -3.6767)
  4. ' stack' (logprob: -4.1767)
  5. ' next' (logprob: -4.3017)
  6. ' eval' (logprob: -4.6767)
  7. ' raw' (logprob: -5.0517)
  8. ' get' (logprob: -5.8017)
  9. ' ' (logprob: -5.9267)
  10. ' (' (logprob: -5.9267)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 13: '()\n' (ID: 1234)
Prédiction principale: '()\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '()\n' (logprob: -0.7498) [Prédiction principale]
  2. '("' (logprob: -1.2498)
  3. '().' (logprob: -1.9998)
  4. '('' (logprob: -2.9998)
  5. '()' (logprob: -3.1248)
  6. '()\n\n' (logprob: -5.9998)
  7. '("")\n' (logprob: -6.2498)
  8. '(f' (logprob: -6.7498)
  9. '('')\n' (logprob: -7.1248)
  10. '(">' (logprob: -7.1248)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 14: '       ' (ID: 309)
Prédiction principale: '       ' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '       ' (logprob: -0.0171) [Prédiction principale]
  2. '        \n' (logprob: -4.3921)
  3. 'except' (logprob: -5.7671)
  4. '   ' (logprob: -7.8921)
  5. '    \n' (logprob: -8.6421)
  6. '      ' (logprob: -9.0171)
  7. ' ' (logprob: -9.1421)
  8. '     ' (logprob: -9.1421)
  9. '    ' (logprob: -9.3921)
  10. '  ' (logprob: -9.5171)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 15: ' if' (ID: 538) [Après tabulation]
Prédiction principale: ' if' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' if' (logprob: -0.2848) [Prédiction principale]
  2. ' stack' (logprob: -2.2848)
  3. ' #' (logprob: -2.6598)
  4. ' x' (logprob: -3.2848)
  5. ' _' (logprob: -6.0348)
  6. ' print' (logprob: -6.0348)
  7. ' y' (logprob: -6.1598)
  8. ' try' (logprob: -6.1598)
  9. ' num' (logprob: -6.1598)
  10. ' command' (logprob: -6.1598)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 16: ' x' (ID: 1215)
Prédiction principale: ' x' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' x' (logprob: -0.1368) [Prédiction principale]
  2. ' not' (logprob: -2.5118)
  3. ' len' (logprob: -3.3868)
  4. ' (' (logprob: -5.3868)
  5. ' '' (logprob: -6.5118)
  6. ' is' (logprob: -6.8868)
  7. '(x' (logprob: -7.0118)
  8. ' "' (logprob: -7.2618)
  9. ' ' (logprob: -7.6368)
  10. ' int' (logprob: -8.0118)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 17: ' ==' (ID: 951)
Prédiction principale: ' ==' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' ==' (logprob: -0.2471) [Prédiction principale]
  2. '.is' (logprob: -2.8721)
  3. ':\n' (logprob: -2.9971)
  4. ' !=' (logprob: -3.3721)
  5. '.strip' (logprob: -3.9971)
  6. ' in' (logprob: -4.2471)
  7. '.startswith' (logprob: -4.2471)
  8. '[' (logprob: -4.7471)
  9. '.lower' (logprob: -5.2471)
  10. ':' (logprob: -5.3721)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 18: ' '':\n' (ID: 125614)
Prédiction principale: ' "":\n' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. ' "":\n' (logprob: -1.1925) [Prédiction principale]
  2. ' '' (logprob: -1.5675)
  3. ' "' (logprob: -1.6925)
* 4. ' '':\n' (logprob: -1.8175)
  5. ' ' (logprob: -3.8175)
  6. ' '.' (logprob: -3.8175)
  7. ' '-' (logprob: -4.1925)
  8. ' "."' (logprob: -4.5675)
  9. ' "+"' (logprob: -4.5675)
  10. ' "-' (logprob: -4.6925)

Le token attendu est à la position 4 dans les prédictions.

--------------------------------------------------------------------------------

Position 19: '           ' (ID: 352)
Prédiction principale: '           ' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '           ' (logprob: -0.0026) [Prédiction principale]
  2. '          ' (logprob: -7.2526)
  3. '         ' (logprob: -7.3776)
  4. '            ' (logprob: -8.1276)
  5. '        ' (logprob: -8.8776)
  6. '       ' (logprob: -9.1276)
  7. '               ' (logprob: -9.1276)
  8. '    ' (logprob: -9.2526)
  9. ' ' (logprob: -9.3776)
  10. '   ' (logprob: -9.3776)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 20: ' break' (ID: 2338) [Après tabulation]
Prédiction principale: ' break' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' break' (logprob: -0.0559) [Prédiction principale]
  2. ' print' (logprob: -4.3059)
  3. ' if' (logprob: -4.5559)
  4. ' #' (logprob: -4.5559)
  5. ' continue' (logprob: -4.9309)
  6. ' raise' (logprob: -4.9309)
  7. ' x' (logprob: -6.6809)
  8. ' stack' (logprob: -6.8059)
  9. ' while' (logprob: -7.1809)
  10. ' result' (logprob: -8.4309)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 21: '\n' (ID: 198)
Prédiction principale: '\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '\n' (logprob: -0.0245) [Prédiction principale]
  2. ' ' (logprob: -4.7745)
  3. '\n\n' (logprob: -5.1495)
  4. '\n        \n' (logprob: -5.1495)
  5. '\n            \n' (logprob: -6.5245)
  6. ' \n' (logprob: -7.1495)
  7. ' #' (logprob: -7.7745)
  8. '  ' (logprob: -8.1495)
  9. ';\n' (logprob: -8.3995)
  10. '  \n' (logprob: -8.3995)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 22: '       ' (ID: 309)
Prédiction principale: '       ' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '       ' (logprob: -0.0019) [Prédiction principale]
  2. 'except' (logprob: -6.8769)
  3. '   ' (logprob: -8.1269)
  4. ' ' (logprob: -9.5019)
  5. '     ' (logprob: -9.5019)
  6. '    ' (logprob: -9.6269)
  7. '      ' (logprob: -9.6269)
  8. '  ' (logprob: -10.0019)
  9. 'else' (logprob: -10.1269)
  10. '          \n' (logprob: -10.1269)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 23: ' n' (ID: 297) [Après tabulation]
Prédiction principale: ' stack' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. ' stack' (logprob: -0.4917) [Prédiction principale]
  2. ' else' (logprob: -1.9917)
  3. ' x' (logprob: -2.2417)
  4. ' #' (logprob: -3.3667)
  5. ' if' (logprob: -3.9917)
  6. ' num' (logprob: -4.2417)
  7. ' _' (logprob: -4.3667)
  8. ' elif' (logprob: -4.7417)
* 9. ' n' (logprob: -5.2417)
  10. ' y' (logprob: -5.3667)

Le token attendu est à la position 9 dans les prédictions.

--------------------------------------------------------------------------------

Position 24: ' =' (ID: 314)
Prédiction principale: ' =' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' =' (logprob: -0.1013) [Prédiction principale]
  2. ',' (logprob: -2.4763)
  3. 'stack' (logprob: -5.2263)
  4. '1' (logprob: -6.7263)
  5. '_stack' (logprob: -7.6013)
  6. '=int' (logprob: -7.6013)
  7. ' +=' (logprob: -7.8513)
  8. '=' (logprob: -7.9763)
  9. 'list' (logprob: -8.2263)
  10. '.append' (logprob: -8.3513)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 25: ' int' (ID: 677)
Prédiction principale: ' int' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' int' (logprob: -0.1495) [Prédiction principale]
  2. ' len' (logprob: -2.7745)
  3. ' x' (logprob: -4.0245)
  4. ' float' (logprob: -4.0245)
  5. ' list' (logprob: -4.1495)
  6. ' ' (logprob: -5.2745)
  7. ' eval' (logprob: -5.8995)
  8. ' str' (logprob: -6.0245)
  9. ' [' (logprob: -6.2745)
  10. ' (' (logprob: -6.3995)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 26: '(x' (ID: 4061)
Prédiction principale: '(x' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '(x' (logprob: -0.0025) [Prédiction principale]
  2. '(input' (logprob: -6.1275)
  3. '(float' (logprob: -9.6275)
  4. '(' (logprob: -10.0025)
  5. '(str' (logprob: -10.3775)
  6. '(s' (logprob: -10.8775)
  7. '(re' (logprob: -10.8775)
  8. '((' (logprob: -11.0025)
  9. ' (' (logprob: -11.1275)
  10. '(n' (logprob: -11.2525)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 27: ')\n' (ID: 446)
Prédiction principale: ')\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ')\n' (logprob: -0.0780) [Prédiction principale]
  2. ')' (logprob: -3.3280)
  3. ')\n\n' (logprob: -4.0780)
  4. '.strip' (logprob: -4.2030)
  5. '.split' (logprob: -5.2030)
  6. '[' (logprob: -6.9530)
  7. '.replace' (logprob: -8.5780)
  8. '[:-' (logprob: -8.8280)
  9. '.rstrip' (logprob: -9.0780)
  10. '[:' (logprob: -9.8280)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 28: '       ' (ID: 309)
Prédiction principale: '       ' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '       ' (logprob: -0.0225) [Prédiction principale]
  2. '        \n' (logprob: -3.8975)
  3. 'except' (logprob: -7.2725)
  4. '   ' (logprob: -8.1475)
  5. '    \n' (logprob: -8.6475)
  6. ' ' (logprob: -9.1475)
  7. '      ' (logprob: -9.1475)
  8. '    ' (logprob: -9.3975)
  9. '  ' (logprob: -9.5225)
  10. '     ' (logprob: -9.5225)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 29: ' if' (ID: 538) [Après tabulation]
Prédiction principale: ' if' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' if' (logprob: -0.7475) [Prédiction principale]
  2. ' stack' (logprob: -1.1225)
  3. ' #' (logprob: -2.4975)
  4. ' while' (logprob: -3.1225)
  5. ' _' (logprob: -3.6225)
  6. ' print' (logprob: -5.3725)
  7. ' my' (logprob: -5.9975)
  8. ' for' (logprob: -6.1225)
  9. ' a' (logprob: -6.2475)
  10. ' heap' (logprob: -6.3725)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 30: ' n' (ID: 297)
Prédiction principale: ' n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' n' (logprob: -0.3043) [Prédiction principale]
  2. ' len' (logprob: -1.6793)
  3. ' not' (logprob: -3.0543)
  4. ' ' (logprob: -5.0543)
  5. ' (' (logprob: -5.1793)
  6. ' x' (logprob: -5.3043)
  7. ' stack' (logprob: -5.4293)
  8. ' is' (logprob: -6.4293)
  9. ' isinstance' (logprob: -7.4293)
  10. ' '' (logprob: -7.9293)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 31: ' !=' (ID: 1666)
Prédiction principale: ' ==' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. ' ==' (logprob: -0.8668) [Prédiction principale]
  2. ' >' (logprob: -1.4918)
  3. ' <' (logprob: -1.8668)
  4. ' >=' (logprob: -2.3668)
* 5. ' !=' (logprob: -3.4918)
  6. ' %' (logprob: -3.7418)
  7. ' <=' (logprob: -3.8668)
  8. ':\n' (logprob: -4.3668)
  9. ' in' (logprob: -4.9918)
  10. ' not' (logprob: -5.3668)

Le token attendu est à la position 5 dans les prédictions.

--------------------------------------------------------------------------------

Position 32: ' ' (ID: 220)
Prédiction principale: ' ' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' ' (logprob: -0.0462) [Prédiction principale]
  2. ' -' (logprob: -3.1712)
  3. '0' (logprob: -6.6712)
  4. ' '' (logprob: -7.5462)
  5. ' '':\n' (logprob: -8.0462)
  6. ' n' (logprob: -9.0462)
  7. ' "":\n' (logprob: -9.1712)
  8. ' ''' (logprob: -9.5462)
  9. ' '-' (logprob: -9.6712)
  10. ' "' (logprob: -9.9212)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 33: '0' (ID: 15)
Prédiction principale: '0' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '0' (logprob: -0.0046) [Prédiction principale]
  2. '1' (logprob: -6.7546)
  3. '42' (logprob: -6.7546)
  4. '999' (logprob: -7.2546)
  5. '2' (logprob: -8.3796)
  6. '5' (logprob: -8.6296)
  7. '4' (logprob: -8.8796)
  8. '3' (logprob: -9.1296)
  9. '99' (logprob: -9.1296)
  10. '100' (logprob: -9.3796)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 34: ':\n' (ID: 734)
Prédiction principale: ':\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ':\n' (logprob: -0.0125) [Prédiction principale]
  2. ':' (logprob: -4.5125)
  3. ' and' (logprob: -6.7625)
  4. ' :\n' (logprob: -8.8875)
  5. ' or' (logprob: -9.5125)
  6. ':\n\n' (logprob: -10.8875)
  7. ' :' (logprob: -11.3875)
  8. '.' (logprob: -12.3875)
  9. '\n' (logprob: -12.5125)
  10. ':#' (logprob: -13.3250)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 35: '           ' (ID: 352)
Prédiction principale: '           ' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '           ' (logprob: -0.0020) [Prédiction principale]
  2. '          ' (logprob: -7.5020)
  3. '         ' (logprob: -7.7520)
  4. '            ' (logprob: -8.5020)
  5. '        ' (logprob: -9.0020)
  6. '    ' (logprob: -9.3770)
  7. '       ' (logprob: -9.3770)
  8. ' ' (logprob: -9.5020)
  9. '   ' (logprob: -9.5020)
  10. '     ' (logprob: -9.5020)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 36: ' stack' (ID: 10825) [Après tabulation]
Prédiction principale: ' stack' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' stack' (logprob: -0.0420) [Prédiction principale]
  2. ' #' (logprob: -4.4170)
  3. ' _' (logprob: -4.4170)
  4. ' my' (logprob: -5.4170)
  5. ' if' (logprob: -6.0420)
  6. ' s' (logprob: -6.2920)
  7. ' num' (logprob: -6.7920)
  8. ' heap' (logprob: -6.7920)
  9. ' lst' (logprob: -7.2920)
  10. ' print' (logprob: -8.0420)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 37: '.append' (ID: 3709)
Prédiction principale: '.append' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '.append' (logprob: -0.0015) [Prédiction principale]
  2. '.push' (logprob: -7.2515)
  3. '.insert' (logprob: -8.0015)
  4. '.ap' (logprob: -8.7515)
  5. ' +=' (logprob: -9.3765)
  6. '.app' (logprob: -9.6265)
  7. ' =' (logprob: -10.1265)
  8. '.extend' (logprob: -10.6265)
  9. '.' (logprob: -10.8765)
  10. '.a' (logprob: -10.8765)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 38: '(n' (ID: 2406)
Prédiction principale: '(n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '(n' (logprob: -0.0020) [Prédiction principale]
  2. '((' (logprob: -8.1270)
  3. '(int' (logprob: -8.1270)
  4. '(x' (logprob: -8.1270)
  5. '(str' (logprob: -8.1270)
  6. '(abs' (logprob: -8.3770)
  7. '(' (logprob: -8.8770)
  8. '(-' (logprob: -8.8770)
  9. '(float' (logprob: -10.2520)
  10. '('' (logprob: -10.5020)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 39: ')\n' (ID: 446)
Prédiction principale: ')\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ')\n' (logprob: -0.0135) [Prédiction principale]
  2. ')' (logprob: -4.5135)
  3. ')\n\n' (logprob: -6.1385)
  4. ' *' (logprob: -9.1385)
  5. ' %' (logprob: -10.3885)
  6. '**' (logprob: -11.0135)
  7. ' if' (logprob: -11.0135)
  8. ')\n\n\n' (logprob: -11.0135)
  9. ' **' (logprob: -11.1385)
  10. ' -' (logprob: -11.2635)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 40: '       ' (ID: 309)
Prédiction principale: '       ' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '       ' (logprob: -0.0095) [Prédiction principale]
  2. '           ' (logprob: -4.8845)
  3. '   ' (logprob: -7.5095)
  4. '        \n' (logprob: -8.2595)
  5. '      ' (logprob: -8.3845)
  6. '            \n' (logprob: -8.5095)
  7. '    ' (logprob: -8.8845)
  8. '     ' (logprob: -8.8845)
  9. '  ' (logprob: -9.0095)
  10. ' ' (logprob: -9.1345)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 41: ' else' (ID: 1203) [Après tabulation]
Prédiction principale: ' else' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' else' (logprob: -0.2037) [Prédiction principale]
  2. ' elif' (logprob: -1.7037)
  3. ' if' (logprob: -6.4537)
  4. ' #' (logprob: -7.8287)
  5. ' el' (logprob: -9.3287)
  6. ' ' (logprob: -9.4537)
  7. ' e' (logprob: -10.0787)
  8. ' while' (logprob: -10.8287)
  9. ' print' (logprob: -11.3287)
  10. ' els' (logprob: -11.3287)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 42: ':\n' (ID: 734)
Prédiction principale: ':\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ':\n' (logprob: -0.0054) [Prédiction principale]
  2. ':' (logprob: -5.2554)
  3. ' if' (logprob: -9.1304)
  4. ' :\n' (logprob: -9.8804)
  5. ':\n\n' (logprob: -11.3804)
  6. '\n' (logprob: -13.2554)
  7. ' :' (logprob: -13.3179)
  8. ' and' (logprob: -13.5054)
  9. ':#' (logprob: -14.1304)
  10. ' ' (logprob: -14.2554)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 43: '           ' (ID: 352)
Prédiction principale: '           ' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '           ' (logprob: -0.0013) [Prédiction principale]
  2. '          ' (logprob: -8.1263)
  3. '         ' (logprob: -8.3763)
  4. '        ' (logprob: -9.1263)
  5. '            ' (logprob: -9.2513)
  6. ' ' (logprob: -9.3763)
  7. '      ' (logprob: -9.3763)
  8. '    ' (logprob: -9.5013)
  9. '       ' (logprob: -9.5013)
  10. '     ' (logprob: -9.5013)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 44: ' print' (ID: 2123) [Après tabulation]
Prédiction principale: ' if' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. ' if' (logprob: -0.2053) [Prédiction principale]
  2. ' stack' (logprob: -2.3303)
* 3. ' print' (logprob: -2.8303)
  4. ' #' (logprob: -4.0803)
  5. ' try' (logprob: -5.8303)
  6. ' sum' (logprob: -6.0803)
  7. ' del' (logprob: -6.9553)
  8. ' popped' (logprob: -6.9553)
  9. ' result' (logprob: -7.4553)
  10. ' last' (logprob: -7.5803)

Le token attendu est à la position 3 dans les prédictions.

--------------------------------------------------------------------------------

Position 45: '(stack' (ID: 52691)
Prédiction principale: '(stack' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '(stack' (logprob: -0.4895) [Prédiction principale]
  2. '(sum' (logprob: -1.2395)
  3. '(' (logprob: -3.9895)
  4. '("' (logprob: -3.9895)
  5. '('' (logprob: -4.1145)
  6. '(f' (logprob: -4.1145)
  7. '(len' (logprob: -4.4895)
  8. '(max' (logprob: -5.3645)
  9. '(str' (logprob: -6.7395)
  10. '(-' (logprob: -6.7395)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 46: '.pop' (ID: 15746)
Prédiction principale: '.pop' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '.pop' (logprob: -0.0893) [Prédiction principale]
  2. '[-' (logprob: -2.4643)
  3. '[len' (logprob: -8.5893)
  4. ')\n' (logprob: -9.2143)
  5. '.po' (logprob: -11.0893)
  6. '[' (logprob: -11.2143)
  7. '.p' (logprob: -11.2143)
  8. '.last' (logprob: -11.3393)
  9. ' and' (logprob: -11.7143)
  10. ')' (logprob: -12.0893)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 47: '())\n' (ID: 4574)
Prédiction principale: '())\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '())\n' (logprob: -0.4645) [Prédiction principale]
  2. '()' (logprob: -1.2145)
  3. '())' (logprob: -2.9645)
  4. '())\n\n' (logprob: -4.0895)
  5. '(-' (logprob: -5.2145)
  6. '(),' (logprob: -7.4645)
  7. '()\n' (logprob: -9.4645)
  8. '(' (logprob: -9.5895)
  9. '())\n\n\n' (logprob: -9.8395)
  10. ' if' (logprob: -10.5895)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 48: 'except' (ID: 25035)
Prédiction principale: 'except' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. 'except' (logprob: -0.0051) [Prédiction principale]
  2. 'finally' (logprob: -6.2551)
  3. '            \n' (logprob: -6.5051)
  4. '        \n' (logprob: -7.5051)
  5. '    \n' (logprob: -7.6301)
  6. '#' (logprob: -8.5051)
  7. '           ' (logprob: -9.0051)
  8. '   ' (logprob: -10.3801)
  9. '                \n' (logprob: -10.3801)
  10. '       ' (logprob: -10.6301)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 49: ' EOF' (ID: 72412)
Prédiction principale: ' Index' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. ' Index' (logprob: -0.2012) [Prédiction principale]
  2. ' (' (logprob: -2.8262)
  3. ' Exception' (logprob: -3.0762)
  4. ':\n' (logprob: -3.3262)
* 5. ' EOF' (logprob: -3.3262)
  6. ' Value' (logprob: -5.8262)
  7. ' Keyboard' (logprob: -7.7012)
  8. ':' (logprob: -7.9512)
  9. '(Index' (logprob: -8.5762)
  10. '(' (logprob: -9.0762)

Le token attendu est à la position 5 dans les prédictions.

--------------------------------------------------------------------------------

Position 50: 'Error' (ID: 2255)
Prédiction principale: 'Error' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. 'Error' (logprob: -0.0000) [Prédiction principale]
  2. 'Er' (logprob: -12.2500)
  3. 'Erro' (logprob: -12.5000)
  4. 'Err' (logprob: -13.2500)
  5. 'E' (logprob: -13.7500)
  6. 'error' (logprob: -15.0000)
  7. 'Exception' (logprob: -15.1250)
  8. ':\n' (logprob: -16.7500)
  9. ' Error' (logprob: -16.8750)
  10. 'Warning' (logprob: -17.3750)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 51: ':\n' (ID: 734)
Prédiction principale: ':\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ':\n' (logprob: -0.0155) [Prédiction principale]
  2. ':' (logprob: -4.7655)
  3. ' as' (logprob: -5.0155)
  4. ' or' (logprob: -8.6405)
  5. ':\n\n' (logprob: -10.8905)
  6. ' :\n' (logprob: -11.1405)
  7. ' and' (logprob: -11.3905)
  8. '():\n' (logprob: -11.5155)
  9. '\n' (logprob: -12.6405)
  10. ' ' (logprob: -13.0155)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 52: '   ' (ID: 271)
Prédiction principale: '   ' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '   ' (logprob: -0.0009) [Prédiction principale]
  2. '  ' (logprob: -8.1259)
  3. ' ' (logprob: -8.6259)
  4. '       ' (logprob: -8.7509)
  5. '    ' (logprob: -9.0009)
  6. '\tpass' (logprob: -10.5009)
  7. '     ' (logprob: -11.0009)
  8. '    \n' (logprob: -11.2509)
  9. '#' (logprob: -11.5009)
  10. '``' (logprob: -11.7509)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 53: ' pass' (ID: 1853) [Après tabulation]
Prédiction principale: ' pass' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' pass' (logprob: -0.0527) [Prédiction principale]
  2. ' print' (logprob: -3.6777)
  3. ' for' (logprob: -4.8027)
  4. ' while' (logprob: -4.9277)
  5. ' #' (logprob: -5.1777)
  6. ' if' (logprob: -6.1777)
  7. ' exit' (logprob: -6.1777)
  8. ' sys' (logprob: -8.3027)
  9. ' ...\n' (logprob: -9.6777)
  10. ' pas' (logprob: -9.9277)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 51
Tokens correctement prédits (1ère position, stricte): 43
Tokens correctement prédits (1ère position, avec adaptation): 43
Tokens correctement prédits (top 10): 50
Précision stricte (1ère position): 84.31%
Précision adaptée (1ère position): 84.31%
Précision (top 10): 98.04%
================================================================================
