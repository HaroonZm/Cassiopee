================================================================================
ANALYSE DES PRÉDICTIONS DE TOKENS
================================================================================

SCRIPT ORIGINAL:
--------------------------------------------------------------------------------
import sys
s=[]
for l in sys.stdin:
    n=int(l)
    if n==0:
        print(s.pop())
    else:
        s.append(n)
--------------------------------------------------------------------------------

INFORMATION SUR LA TOKENISATION:
--------------------------------------------------------------------------------
Tokenisation utilisée: tiktoken pour le modèle gpt-4o-mini
Il s'agit de la tokenisation officielle utilisée par les modèles OpenAI.
--------------------------------------------------------------------------------

TOKENS IDENTIFIÉS:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
Token 1: ' sys' (ID: 12228)
Token 2: '\n' (ID: 198)
Token 3: 's' (ID: 82)
Token 4: '=[]\n' (ID: 63466)
Token 5: 'for' (ID: 1938)
Token 6: ' l' (ID: 305)
Token 7: ' in' (ID: 306)
Token 8: ' sys' (ID: 12228)
Token 9: '.stdin' (ID: 93480)
Token 10: ':\n' (ID: 734)
Token 11: '   ' (ID: 271)
Token 12: ' n' (ID: 297)
Token 13: '=int' (ID: 37431)
Token 14: '(l' (ID: 4179)
Token 15: ')\n' (ID: 446)
Token 16: '   ' (ID: 271)
Token 17: ' if' (ID: 538)
Token 18: ' n' (ID: 297)
Token 19: '==' (ID: 560)
Token 20: '0' (ID: 15)
Token 21: ':\n' (ID: 734)
Token 22: '       ' (ID: 309)
Token 23: ' print' (ID: 2123)
Token 24: '(s' (ID: 1858)
Token 25: '.pop' (ID: 15746)
Token 26: '())\n' (ID: 4574)
Token 27: '   ' (ID: 271)
Token 28: ' else' (ID: 1203)
Token 29: ':\n' (ID: 734)
Token 30: '       ' (ID: 309)
Token 31: ' s' (ID: 265)
Token 32: '.append' (ID: 3709)
Token 33: '(n' (ID: 2406)
Token 34: ')' (ID: 8)
--------------------------------------------------------------------------------

INFORMATIONS SUR LA MATRICE 2D DE LOG PROBABILITÉS:
--------------------------------------------------------------------------------
Dimensions de la matrice: 8 lignes x 6 tokens max
Nombre de tokens par ligne: [3, 2, 6, 5, 6, 5, 3, 5]
Convention de valeurs:
  - Log probabilité normale: Valeur réelle (typiquement entre -1 et -20)
  - Anomalie (token hors top-10): -50
  - Padding (positions vides): 100

Matrice 2D (format texte simplifiée):
[-10.00, -10.00, -10.00, PAD, PAD, PAD, ]
[ANOM, ANOM, PAD, PAD, PAD, PAD, ]
[-0.89, -4.09, -0.00, -0.02, -0.00, -0.12, ]
[-0.14, -4.67, -0.74, -0.00, -0.76, PAD, ]
[-0.01, -0.70, -0.05, -0.41, -0.10, -0.23, ]
[-0.01, -4.52, -2.88, -1.62, -0.15, PAD, ]
[-0.01, -0.03, -0.01, PAD, PAD, PAD, ]
[-0.00, -0.00, -0.00, -0.00, -0.45, PAD, ]

Note: La matrice a été sauvegardée au format numpy dans 'matrice_logprob.npy'
--------------------------------------------------------------------------------

ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Position 0: 'import' (ID: 561) (token d'amorce)
--------------------------------------------------------------------------------

Position 1: ' sys' (ID: 12228) (token d'amorce)
--------------------------------------------------------------------------------

Position 2: '\n' (ID: 198) (token d'amorce)
--------------------------------------------------------------------------------

Position 3: 's' (ID: 82)
Prédiction principale: 'import' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. 'import' (logprob: -0.3205) [Prédiction principale]
  2. 'from' (logprob: -1.4455)
  3. 'sys' (logprob: -3.9455)
  4. 'input' (logprob: -4.8205)
  5. '#' (logprob: -5.8205)
  6. 'def' (logprob: -6.9455)
  7. 'if' (logprob: -7.0705)
  8. 'print' (logprob: -7.0705)
  9. '``' (logprob: -7.4455)
  10. 'try' (logprob: -8.1955)

Le token attendu n'est pas dans le top 10 des prédictions.

--------------------------------------------------------------------------------

Position 4: '=[]\n' (ID: 63466)
Prédiction principale: ' =' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. ' =' (logprob: -0.2264) [Prédiction principale]
  2. '=sys' (logprob: -3.3514)
  3. '=input' (logprob: -3.6014)
  4. '1' (logprob: -3.7264)
  5. '=' (logprob: -3.8514)
  6. '='' (logprob: -4.6014)
  7. '="' (logprob: -5.4764)
  8. ',' (logprob: -5.7264)
  9. 'ys' (logprob: -5.7264)
  10. '=""\n' (logprob: -5.8514)

Le token attendu n'est pas dans le top 10 des prédictions.

--------------------------------------------------------------------------------

Position 5: 'for' (ID: 1938)
Prédiction principale: 'for' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. 'for' (logprob: -0.8884) [Prédiction principale]
  2. 'while' (logprob: -1.5134)
  3. 'n' (logprob: -2.3884)
  4. 'def' (logprob: -2.6384)
  5. 's' (logprob: -3.6384)
  6. 'if' (logprob: -3.7634)
  7. 'try' (logprob: -4.2634)
  8. '#' (logprob: -4.6384)
  9. 'a' (logprob: -4.7634)
  10. 't' (logprob: -4.8884)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 6: ' l' (ID: 305)
Prédiction principale: ' line' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. ' line' (logprob: -0.5890) [Prédiction principale]
  2. ' i' (logprob: -1.0890)
  3. ' arg' (logprob: -3.7140)
  4. ' x' (logprob: -3.8390)
* 5. ' l' (logprob: -4.0890)
  6. ' _' (logprob: -4.8390)
  7. ' a' (logprob: -5.2140)
  8. ' j' (logprob: -5.5890)
  9. ' n' (logprob: -5.7140)
  10. ' lines' (logprob: -5.8390)

Le token attendu est à la position 5 dans les prédictions.

--------------------------------------------------------------------------------

Position 7: ' in' (ID: 306)
Prédiction principale: ' in' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' in' (logprob: -0.0006) [Prédiction principale]
  2. '1' (logprob: -8.8756)
  3. ',' (logprob: -9.3756)
  4. ' ' (logprob: -9.3756)
  5. 'ne' (logprob: -10.1256)
  6. ',line' (logprob: -10.3756)
  7. 'no' (logprob: -10.7506)
  8. 'line' (logprob: -11.1256)
  9. 'num' (logprob: -11.2506)
  10. 'ns' (logprob: -11.3756)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 8: ' sys' (ID: 12228)
Prédiction principale: ' sys' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' sys' (logprob: -0.0152) [Prédiction principale]
  2. ' open' (logprob: -4.5152)
  3. ' range' (logprob: -6.6402)
  4. ' iter' (logprob: -7.7652)
  5. ' map' (logprob: -7.8902)
  6. ' file' (logprob: -8.0152)
  7. ' list' (logprob: -8.3902)
  8. ' ' (logprob: -8.5152)
  9. ' (' (logprob: -8.6402)
  10. ' [' (logprob: -8.6402)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 9: '.stdin' (ID: 93480)
Prédiction principale: '.stdin' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '.stdin' (logprob: -0.0000) [Prédiction principale]
  2. '.stdout' (logprob: -11.1250)
  3. '.argv' (logprob: -11.7500)
  4. '.st' (logprob: -12.6250)
  5. 'stdin' (logprob: -13.0000)
  6. ' stdin' (logprob: -13.1250)
  7. '.std' (logprob: -13.2500)
  8. '.stderr' (logprob: -14.2500)
  9. '.__' (logprob: -15.6250)
  10. '.input' (logprob: -15.6250)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 10: ':\n' (ID: 734)
Prédiction principale: ':\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ':\n' (logprob: -0.1240) [Prédiction principale]
  2. '.readlines' (logprob: -2.6240)
  3. ':' (logprob: -3.4990)
  4. '.read' (logprob: -4.6240)
  5. '.readline' (logprob: -6.8740)
  6. ':\n\n' (logprob: -7.1240)
  7. ' :\n' (logprob: -7.2490)
  8. ':#' (logprob: -7.7490)
  9. '.x' (logprob: -8.4990)
  10. ' :' (logprob: -8.9990)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 11: '   ' (ID: 271)
Prédiction principale: '   ' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '   ' (logprob: -0.1351) [Prédiction principale]
  2. ' ' (logprob: -2.5101)
  3. '  ' (logprob: -4.2601)
  4. '\ts' (logprob: -4.7601)
  5. ' s' (logprob: -5.2601)
  6. '    ' (logprob: -5.3851)
  7. '       ' (logprob: -5.3851)
  8. '\tif' (logprob: -6.3851)
  9. '     ' (logprob: -6.6351)
  10. '\t' (logprob: -7.2601)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 12: ' n' (ID: 297) [Après tabulation]
Prédiction principale: ' s' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. ' s' (logprob: -0.2907) [Prédiction principale]
  2. ' l' (logprob: -2.4157)
  3. ' if' (logprob: -2.7907)
  4. ' a' (logprob: -3.9157)
  5. ' #' (logprob: -4.4157)
* 6. ' n' (logprob: -4.6657)
  7. ' try' (logprob: -5.0407)
  8. ' x' (logprob: -5.1657)
  9. ' for' (logprob: -5.4157)
  10. ' line' (logprob: -5.4157)

Le token attendu est à la position 6 dans les prédictions.

--------------------------------------------------------------------------------

Position 13: '=int' (ID: 37431)
Prédiction principale: '=int' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '=int' (logprob: -0.7378) [Prédiction principale]
  2. ',m' (logprob: -1.7378)
  3. ' =' (logprob: -2.1128)
  4. '=' (logprob: -3.2378)
  5. '=list' (logprob: -3.3628)
  6. ',' (logprob: -3.6128)
  7. ',l' (logprob: -3.8628)
  8. '=len' (logprob: -4.2378)
  9. ',k' (logprob: -4.4878)
  10. '=m' (logprob: -4.4878)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 14: '(l' (ID: 4179)
Prédiction principale: '(l' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '(l' (logprob: -0.0027) [Prédiction principale]
  2. '(sys' (logprob: -7.2527)
  3. '(input' (logprob: -7.3777)
  4. '(s' (logprob: -8.0027)
  5. ' (' (logprob: -8.6277)
  6. '(str' (logprob: -8.7527)
  7. '(' (logprob: -8.8777)
  8. '(float' (logprob: -9.2527)
  9. '((' (logprob: -9.3777)
  10. '(len' (logprob: -9.3777)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 15: ')\n' (ID: 446)
Prédiction principale: ')\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ')\n' (logprob: -0.7618) [Prédiction principale]
  2. '.strip' (logprob: -0.7618)
  3. '[:-' (logprob: -3.8868)
  4. '.rstrip' (logprob: -4.0118)
  5. ')' (logprob: -4.5118)
  6. '.split' (logprob: -4.6368)
  7. '.replace' (logprob: -6.2618)
  8. ')\n\n' (logprob: -6.6368)
  9. '[' (logprob: -7.0118)
  10. ');\n' (logprob: -7.5118)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 16: '   ' (ID: 271)
Prédiction principale: '   ' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '   ' (logprob: -0.0068) [Prédiction principale]
  2. '    \n' (logprob: -5.2568)
  3. '  ' (logprob: -8.2568)
  4. '#' (logprob: -8.5068)
  5. 's' (logprob: -8.7568)
  6. 'for' (logprob: -8.7568)
  7. '   \n' (logprob: -9.0068)
  8. ' ' (logprob: -9.1318)
  9. 'if' (logprob: -9.5068)
  10. 'print' (logprob: -9.6318)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 17: ' if' (ID: 538) [Après tabulation]
Prédiction principale: ' if' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' if' (logprob: -0.7012) [Prédiction principale]
  2. ' s' (logprob: -0.8262)
  3. ' for' (logprob: -4.4512)
  4. ' a' (logprob: -4.7012)
  5. ' #' (logprob: -4.9512)
  6. ' while' (logprob: -5.4512)
  7. ' print' (logprob: -5.7012)
  8. ' m' (logprob: -5.8262)
  9. ' break' (logprob: -5.9512)
  10. ' l' (logprob: -6.0762)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 18: ' n' (ID: 297)
Prédiction principale: ' n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' n' (logprob: -0.0451) [Prédiction principale]
  2. '(n' (logprob: -3.9201)
  3. ' len' (logprob: -4.6701)
  4. ' (' (logprob: -5.0451)
  5. ' not' (logprob: -5.4201)
  6. ' ' (logprob: -6.0451)
  7. ' l' (logprob: -8.1701)
  8. '(' (logprob: -8.4201)
  9. '(len' (logprob: -8.5451)
  10. ' sum' (logprob: -8.7951)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 19: '==' (ID: 560)
Prédiction principale: '==' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '==' (logprob: -0.4134) [Prédiction principale]
  2. '<' (logprob: -2.5384)
  3. ' ==' (logprob: -2.6634)
  4. '==-' (logprob: -2.9134)
  5. '!=' (logprob: -3.2884)
  6. '>' (logprob: -3.7884)
  7. ':\n' (logprob: -3.9134)
  8. '<=' (logprob: -4.5384)
  9. '>=' (logprob: -4.7884)
  10. '%' (logprob: -5.0384)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 20: '0' (ID: 15)
Prédiction principale: '0' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '0' (logprob: -0.0958) [Prédiction principale]
  2. '42' (logprob: -2.7208)
  3. '-' (logprob: -3.9708)
  4. '1' (logprob: -5.9708)
  5. ' ' (logprob: -6.0958)
  6. ' -' (logprob: -8.0958)
  7. '(-' (logprob: -8.0958)
  8. '2' (logprob: -8.3458)
  9. '999' (logprob: -8.5958)
  10. '4' (logprob: -9.2208)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 21: ':\n' (ID: 734)
Prédiction principale: ':\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ':\n' (logprob: -0.2293) [Prédiction principale]
  2. ':' (logprob: -1.6043)
  3. ' :' (logprob: -6.8543)
  4. ':s' (logprob: -6.8543)
  5. ' :\n' (logprob: -7.2293)
  6. ' or' (logprob: -7.7293)
  7. ':return' (logprob: -8.6043)
  8. ' and' (logprob: -9.1043)
  9. ':#' (logprob: -9.8543)
  10. ':\n\n' (logprob: -10.1043)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 22: '       ' (ID: 309)
Prédiction principale: '       ' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '       ' (logprob: -0.0102) [Prédiction principale]
  2. '      ' (logprob: -5.3852)
  3. '     ' (logprob: -5.6352)
  4. '        ' (logprob: -7.1352)
  5. '    ' (logprob: -7.5102)
  6. '           ' (logprob: -8.5102)
  7. '         ' (logprob: -8.8852)
  8. '   ' (logprob: -9.5102)
  9. '        \n' (logprob: -9.7602)
  10. '          ' (logprob: -10.2602)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 23: ' print' (ID: 2123) [Après tabulation]
Prédiction principale: ' break' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. ' break' (logprob: -0.0190) [Prédiction principale]
* 2. ' print' (logprob: -4.5190)
  3. ' if' (logprob: -5.8940)
  4. ' s' (logprob: -6.1440)
  5. ' for' (logprob: -7.2690)
  6. ' continue' (logprob: -7.2690)
  7. ' #' (logprob: -7.8940)
  8. ' b' (logprob: -8.8940)
  9. ' exit' (logprob: -9.1440)
  10. ' a' (logprob: -9.2690)

Le token attendu est à la position 2 dans les prédictions.

--------------------------------------------------------------------------------

Position 24: '(s' (ID: 1858)
Prédiction principale: '(sum' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. '(sum' (logprob: -1.1274) [Prédiction principale]
  2. '("' (logprob: -2.1274)
  3. '(len' (logprob: -2.1274)
  4. '('' (logprob: -2.6274)
  5. '(' (logprob: -2.8774)
* 6. '(s' (logprob: -2.8774)
  7. '(max' (logprob: -3.2524)
  8. '(*' (logprob: -3.3774)
  9. ' sum' (logprob: -3.5024)
  10. '("\\' (logprob: -4.0024)

Le token attendu est à la position 6 dans les prédictions.

--------------------------------------------------------------------------------

Position 25: '.pop' (ID: 15746)
Prédiction principale: ')\n' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. ')\n' (logprob: -0.8692) [Prédiction principale]
  2. '[-' (logprob: -1.4942)
* 3. '.pop' (logprob: -1.6192)
  4. '[' (logprob: -2.2442)
  5. '[len' (logprob: -4.3692)
  6. '[::-' (logprob: -4.3692)
  7. '.count' (logprob: -4.7442)
  8. ')' (logprob: -5.2442)
  9. '.index' (logprob: -5.7442)
  10. '[:' (logprob: -6.1192)

Le token attendu est à la position 3 dans les prédictions.

--------------------------------------------------------------------------------

Position 26: '())\n' (ID: 4574)
Prédiction principale: '())\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '())\n' (logprob: -0.1521) [Prédiction principale]
  2. '()' (logprob: -2.6521)
  3. '())' (logprob: -3.0271)
  4. '(-' (logprob: -4.5271)
  5. '(),' (logprob: -5.0271)
  6. '())\n\n' (logprob: -6.9021)
  7. '(' (logprob: -7.0271)
  8. '().' (logprob: -7.1521)
  9. '()\n' (logprob: -8.0271)
  10. '()[' (logprob: -8.0271)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 27: '   ' (ID: 271)
Prédiction principale: '   ' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '   ' (logprob: -0.0125) [Prédiction principale]
  2. '       ' (logprob: -4.5125)
  3. '        \n' (logprob: -7.0125)
  4. '    \n' (logprob: -8.1375)
  5. '  ' (logprob: -9.8875)
  6. '#' (logprob: -10.6375)
  7. ' ' (logprob: -10.7625)
  8. '    ' (logprob: -10.7625)
  9. '       \n' (logprob: -11.0125)
  10. '     ' (logprob: -11.1375)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 28: ' else' (ID: 1203) [Après tabulation]
Prédiction principale: ' else' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' else' (logprob: -0.0284) [Prédiction principale]
  2. ' elif' (logprob: -3.6534)
  3. ' if' (logprob: -6.7784)
  4. ' s' (logprob: -7.1534)
  5. ' #' (logprob: -9.5284)
  6. ' ' (logprob: -11.2784)
  7. ' print' (logprob: -11.6534)
  8. ' e' (logprob: -11.7784)
  9. ' el' (logprob: -11.9034)
  10. ' els' (logprob: -12.4659)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 29: ':\n' (ID: 734)
Prédiction principale: ':\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ':\n' (logprob: -0.0061) [Prédiction principale]
  2. ':' (logprob: -5.2561)
  3. ':s' (logprob: -7.6311)
  4. ' :\n' (logprob: -8.1311)
  5. ':\n\n' (logprob: -10.0061)
  6. ' :' (logprob: -10.8811)
  7. '\n' (logprob: -11.6311)
  8. ' s' (logprob: -12.0061)
  9. ':n' (logprob: -13.8811)
  10. ':#' (logprob: -14.0061)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 30: '       ' (ID: 309)
Prédiction principale: '       ' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '       ' (logprob: -0.0014) [Prédiction principale]
  2. '      ' (logprob: -7.3764)
  3. '     ' (logprob: -8.2514)
  4. '        ' (logprob: -8.5014)
  5. '    ' (logprob: -8.7514)
  6. '   ' (logprob: -10.1264)
  7. '        \n' (logprob: -10.2514)
  8. '           ' (logprob: -10.8764)
  9. ' ' (logprob: -11.1264)
  10. '  ' (logprob: -11.1264)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 31: ' s' (ID: 265) [Après tabulation]
Prédiction principale: ' s' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' s' (logprob: -0.0015) [Prédiction principale]
  2. ' if' (logprob: -6.7515)
  3. ' print' (logprob: -8.6265)
  4. ' #' (logprob: -9.0015)
  5. ' a' (logprob: -11.6265)
  6. ' ' (logprob: -12.2515)
  7. ' n' (logprob: -13.0015)
  8. ' for' (logprob: -13.2515)
  9. ' while' (logprob: -13.3765)
  10. ' try' (logprob: -13.3765)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 32: '.append' (ID: 3709)
Prédiction principale: '.append' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '.append' (logprob: -0.0001) [Prédiction principale]
  2. '.push' (logprob: -10.5001)
  3. '+=' (logprob: -10.6251)
  4. '+' (logprob: -10.7501)
  5. ' +=' (logprob: -10.7501)
  6. '.app' (logprob: -11.3751)
  7. '.ap' (logprob: -11.5001)
  8. '.insert' (logprob: -12.0001)
  9. '.' (logprob: -12.7501)
  10. '=' (logprob: -12.7501)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 33: '(n' (ID: 2406)
Prédiction principale: '(n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '(n' (logprob: -0.0002) [Prédiction principale]
  2. '(int' (logprob: -8.7502)
  3. '(l' (logprob: -10.0002)
  4. '(' (logprob: -11.1252)
  5. '((' (logprob: -12.0002)
  6. '(str' (logprob: -12.5002)
  7. ' (' (logprob: -12.7502)
  8. '(s' (logprob: -12.7502)
  9. '[n' (logprob: -14.0002)
  10. '(num' (logprob: -14.2502)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 34: ')' (ID: 8)
Prédiction principale: ')' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ')' (logprob: -0.4498) [Prédiction principale]
  2. ')\n' (logprob: -1.1998)
  3. ')\n\n' (logprob: -2.8248)
  4. ')\n\n\n' (logprob: -6.5748)
  5. ')\n\n\n\n' (logprob: -8.5748)
  6. ')\n\n\n\n\n' (logprob: -10.1998)
  7. ')#' (logprob: -11.4498)
  8. ');' (logprob: -11.6998)
  9. ');\n' (logprob: -12.0748)
  10. ')\n\n//' (logprob: -12.3248)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 32
Tokens correctement prédits (1ère position, stricte): 25
Tokens correctement prédits (1ère position, avec adaptation): 25
Tokens correctement prédits (top 10): 30
Précision stricte (1ère position): 78.12%
Précision adaptée (1ère position): 78.12%
Précision (top 10): 93.75%
================================================================================
