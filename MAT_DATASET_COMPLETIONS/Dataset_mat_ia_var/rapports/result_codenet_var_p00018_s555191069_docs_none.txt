================================================================================
ANALYSE DES PRÉDICTIONS DE TOKENS
================================================================================

SCRIPT ORIGINAL:
--------------------------------------------------------------------------------
a = map(int, raw_input().split())
a.sort()
a.reverse()
for i in range(len(a)):
    print a[i],
--------------------------------------------------------------------------------

INFORMATION SUR LA TOKENISATION:
--------------------------------------------------------------------------------
Tokenisation utilisée: tiktoken pour le modèle gpt-4o-mini
Il s'agit de la tokenisation officielle utilisée par les modèles OpenAI.
--------------------------------------------------------------------------------

TOKENS IDENTIFIÉS:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
Token 1: ' =' (ID: 314)
Token 2: ' map' (ID: 4014)
Token 3: '(int' (ID: 2742)
Token 4: ',' (ID: 11)
Token 5: ' raw' (ID: 11428)
Token 6: '_input' (ID: 12507)
Token 7: '().' (ID: 1454)
Token 8: 'split' (ID: 13627)
Token 9: '())\n' (ID: 4574)
Token 10: 'a' (ID: 64)
Token 11: '.sort' (ID: 19551)
Token 12: '()\n' (ID: 1234)
Token 13: 'a' (ID: 64)
Token 14: '.reverse' (ID: 65426)
Token 15: '()\n' (ID: 1234)
Token 16: 'for' (ID: 1938)
Token 17: ' i' (ID: 575)
Token 18: ' in' (ID: 306)
Token 19: ' range' (ID: 3352)
Token 20: '(len' (ID: 14990)
Token 21: '(a' (ID: 6271)
Token 22: ')):\n' (ID: 22530)
Token 23: '   ' (ID: 271)
Token 24: ' print' (ID: 2123)
Token 25: ' a' (ID: 261)
Token 26: '[i' (ID: 1768)
Token 27: '],' (ID: 2155)
--------------------------------------------------------------------------------

INFORMATIONS SUR LA MATRICE 2D DE LOG PROBABILITÉS:
--------------------------------------------------------------------------------
Dimensions de la matrice: 5 lignes x 10 tokens max
Nombre de tokens par ligne: [10, 3, 3, 7, 5]
Convention de valeurs:
  - Log probabilité normale: Valeur réelle (typiquement entre -1 et -20)
  - Anomalie (token hors top-10): -50
  - Padding (positions vides): 100

Matrice 2D (format texte simplifiée):
[-10.00, -10.00, -10.00, -0.29, -0.02, -5.12, -0.00, -0.03, -0.43, -0.27, ]
[-2.74, -0.46, -0.18, PAD, PAD, PAD, PAD, PAD, PAD, PAD, ]
[-3.92, -3.23, -0.12, PAD, PAD, PAD, PAD, PAD, PAD, PAD, ]
[-3.03, -0.26, -0.00, -0.77, -1.58, -0.00, -0.12, PAD, PAD, PAD, ]
[-0.11, -0.24, -0.26, -0.00, -1.53, PAD, PAD, PAD, PAD, PAD, ]

Note: La matrice a été sauvegardée au format numpy dans 'matrice_logprob.npy'
--------------------------------------------------------------------------------

ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Position 0: 'a' (ID: 64) (token d'amorce)
--------------------------------------------------------------------------------

Position 1: ' =' (ID: 314) (token d'amorce)
--------------------------------------------------------------------------------

Position 2: ' map' (ID: 4014) (token d'amorce)
--------------------------------------------------------------------------------

Position 3: '(int' (ID: 2742)
Prédiction principale: '(int' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '(int' (logprob: -0.2929) [Prédiction principale]
  2. '(float' (logprob: -2.6679)
  3. ' (' (logprob: -3.9179)
  4. '(lambda' (logprob: -3.9179)
  5. '.get' (logprob: -4.4179)
  6. '(str' (logprob: -4.5429)
  7. '[int' (logprob: -4.6679)
  8. '[' (logprob: -4.9179)
  9. '(' (logprob: -5.0429)
  10. ' int' (logprob: -5.4179)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 4: ',' (ID: 11)
Prédiction principale: ',' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ',' (logprob: -0.0209) [Prédiction principale]
  2. ',input' (logprob: -4.0209)
  3. ' ,' (logprob: -7.5209)
  4. ',a' (logprob: -8.2709)
  5. ',line' (logprob: -8.5209)
  6. ',s' (logprob: -8.7709)
  7. ',x' (logprob: -8.8959)
  8. ',data' (logprob: -8.8959)
  9. ',(' (logprob: -9.0209)
  10. ',f' (logprob: -9.2709)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 5: ' raw' (ID: 11428)
Prédiction principale: ' input' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. ' input' (logprob: -0.1169) [Prédiction principale]
  2. ' data' (logprob: -3.9919)
  3. ' line' (logprob: -4.3669)
  4. ' sys' (logprob: -4.6169)
  5. ' a' (logprob: -4.8669)
  6. ' str' (logprob: -5.1169)
* 7. ' raw' (logprob: -5.1169)
  8. ' s' (logprob: -5.7419)
  9. ' f' (logprob: -5.7419)
  10. ' lines' (logprob: -5.9919)

Le token attendu est à la position 7 dans les prédictions.

--------------------------------------------------------------------------------

Position 6: '_input' (ID: 12507)
Prédiction principale: '_input' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '_input' (logprob: -0.0024) [Prédiction principale]
  2. '_data' (logprob: -7.2524)
  3. '_in' (logprob: -7.5024)
  4. '.split' (logprob: -8.3774)
  5. 'input' (logprob: -9.1274)
  6. 'Input' (logprob: -9.1274)
  7. '_a' (logprob: -9.1274)
  8. '_string' (logprob: -9.3774)
  9. '_inputs' (logprob: -10.1274)
  10. '[' (logprob: -10.3774)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 7: '().' (ID: 1454)
Prédiction principale: '().' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '().' (logprob: -0.0307) [Prédiction principale]
  2. '("' (logprob: -3.9057)
  3. '('' (logprob: -5.0307)
  4. '("").' (logprob: -7.0307)
  5. '())\n' (logprob: -7.2807)
  6. '('').' (logprob: -7.7807)
  7. '(' (logprob: -8.6557)
  8. '()' (logprob: -8.6557)
  9. '()[' (logprob: -8.6557)
  10. '.split' (logprob: -9.2807)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 8: 'split' (ID: 13627)
Prédiction principale: 'split' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. 'split' (logprob: -0.4308) [Prédiction principale]
  2. 'strip' (logprob: -1.0558)
  3. 'rstrip' (logprob: -6.3058)
  4. ' split' (logprob: -9.3058)
  5. 'replace' (logprob: -10.1808)
  6. 'rs' (logprob: -10.5558)
  7. 's' (logprob: -10.9308)
  8. 'spl' (logprob: -10.9308)
  9. ' strip' (logprob: -11.3058)
  10. 'lower' (logprob: -11.5558)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 9: '())\n' (ID: 4574)
Prédiction principale: '())\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '())\n' (logprob: -0.2730) [Prédiction principale]
  2. '())\r\n' (logprob: -2.3980)
  3. '())\n\n' (logprob: -2.3980)
  4. '())' (logprob: -3.3980)
  5. '('' (logprob: -4.5230)
  6. '("' (logprob: -5.0230)
  7. '(',' (logprob: -6.7730)
  8. '(",' (logprob: -7.1480)
  9. '()),' (logprob: -7.2730)
  10. '())\n\n\n' (logprob: -7.2730)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 10: 'a' (ID: 64)
Prédiction principale: 'b' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. 'b' (logprob: -1.7392) [Prédiction principale]
* 2. 'a' (logprob: -2.7392)
  3. 'print' (logprob: -2.7392)
  4. 'n' (logprob: -2.8642)
  5. 'x' (logprob: -2.8642)
  6. '   ' (logprob: -3.1142)
  7. 's' (logprob: -3.2392)
  8. 'if' (logprob: -3.3642)
  9. 'c' (logprob: -3.6142)
  10. '#' (logprob: -3.7392)

Le token attendu est à la position 2 dans les prédictions.

--------------------------------------------------------------------------------

Position 11: '.sort' (ID: 19551)
Prédiction principale: '.sort' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '.sort' (logprob: -0.4574) [Prédiction principale]
  2. ' =' (logprob: -1.3324)
  3. '[' (logprob: -3.8324)
  4. ',' (logprob: -4.5824)
  5. '1' (logprob: -4.5824)
  6. '=' (logprob: -5.2074)
  7. ' +=' (logprob: -5.2074)
  8. '.remove' (logprob: -5.4574)
  9. '.append' (logprob: -5.8324)
  10. '_list' (logprob: -5.9574)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 12: '()\n' (ID: 1234)
Prédiction principale: '()\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '()\n' (logprob: -0.1772) [Prédiction principale]
  2. '()\n\n' (logprob: -2.3022)
  3. '(reverse' (logprob: -3.3022)
  4. '()' (logprob: -3.8022)
  5. '()\n\n\n' (logprob: -6.8022)
  6. '()\r\n' (logprob: -7.4272)
  7. '(key' (logprob: -8.0522)
  8. '();\n' (logprob: -8.6772)
  9. '()\r\n\r\n' (logprob: -8.8022)
  10. '(' (logprob: -8.9272)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 13: 'a' (ID: 64)
Prédiction principale: 'print' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. 'print' (logprob: -1.0405) [Prédiction principale]
  2. 'if' (logprob: -2.1655)
  3. 'n' (logprob: -2.6655)
  4. 'b' (logprob: -2.9155)
  5. 'x' (logprob: -3.0405)
  6. 'for' (logprob: -3.5405)
  7. 's' (logprob: -3.7905)
  8. 'ans' (logprob: -3.7905)
* 9. 'a' (logprob: -3.9155)
  10. 'result' (logprob: -4.1655)

Le token attendu est à la position 9 dans les prédictions.

--------------------------------------------------------------------------------

Position 14: '.reverse' (ID: 65426)
Prédiction principale: ' =' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. ' =' (logprob: -0.8573) [Prédiction principale]
  2. '[' (logprob: -1.4823)
* 3. '.reverse' (logprob: -3.2323)
  4. '1' (logprob: -3.3573)
  5. '.sort' (logprob: -3.4823)
  6. '.append' (logprob: -3.6073)
  7. '.insert' (logprob: -3.6073)
  8. '.remove' (logprob: -3.7323)
  9. ',' (logprob: -3.9823)
  10. '.pop' (logprob: -4.1073)

Le token attendu est à la position 3 dans les prédictions.

--------------------------------------------------------------------------------

Position 15: '()\n' (ID: 1234)
Prédiction principale: '()\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '()\n' (logprob: -0.1184) [Prédiction principale]
  2. '()\n\n' (logprob: -2.3684)
  3. '()' (logprob: -4.1184)
  4. '()\n\n\n' (logprob: -6.6184)
  5. '();\n' (logprob: -9.2434)
  6. '(' (logprob: -9.4934)
  7. '\n' (logprob: -9.6184)
  8. ' ()\n' (logprob: -9.7434)
  9. '()\n\n\n\n' (logprob: -10.3684)
  10. '();\n\n' (logprob: -10.8684)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 16: 'for' (ID: 1938)
Prédiction principale: 'print' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. 'print' (logprob: -0.7791) [Prédiction principale]
  2. 'if' (logprob: -2.9041)
* 3. 'for' (logprob: -3.0291)
  4. 'b' (logprob: -3.2791)
  5. 'n' (logprob: -3.4041)
  6. 'x' (logprob: -3.4041)
  7. 's' (logprob: -3.5291)
  8. 'ans' (logprob: -3.6541)
  9. 'a' (logprob: -4.1541)
  10. 'result' (logprob: -4.1541)

Le token attendu est à la position 3 dans les prédictions.

--------------------------------------------------------------------------------

Position 17: ' i' (ID: 575)
Prédiction principale: ' i' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' i' (logprob: -0.2551) [Prédiction principale]
  2. ' x' (logprob: -2.5051)
  3. ' b' (logprob: -4.2551)
  4. ' j' (logprob: -4.2551)
  5. ' num' (logprob: -4.3801)
  6. ' n' (logprob: -4.5051)
  7. ' k' (logprob: -4.6301)
  8. ' _' (logprob: -5.0051)
  9. ' c' (logprob: -5.3801)
  10. ' number' (logprob: -5.3801)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 18: ' in' (ID: 306)
Prédiction principale: ' in' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' in' (logprob: -0.0029) [Prédiction principale]
  2. ',' (logprob: -6.1279)
  3. ',j' (logprob: -8.2529)
  4. ' ' (logprob: -9.0029)
  5. ',x' (logprob: -9.6279)
  6. ',v' (logprob: -9.7529)
  7. '1' (logprob: -10.5029)
  8. ',c' (logprob: -11.1279)
  9. ',b' (logprob: -11.3779)
  10. ' ,' (logprob: -11.5029)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 19: ' range' (ID: 3352)
Prédiction principale: ' a' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. ' a' (logprob: -0.6459) [Prédiction principale]
* 2. ' range' (logprob: -0.7709)
  3. ' xrange' (logprob: -4.5209)
  4. ' (' (logprob: -7.7709)
  5. ' ' (logprob: -8.2709)
  6. ' reversed' (logprob: -8.2709)
  7. ' [' (logprob: -8.3959)
  8. ' sorted' (logprob: -8.3959)
  9. ' list' (logprob: -9.3959)
  10. ' itertools' (logprob: -9.5209)

Le token attendu est à la position 2 dans les prédictions.

--------------------------------------------------------------------------------

Position 20: '(len' (ID: 14990)
Prédiction principale: '(' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. '(' (logprob: -0.9530) [Prédiction principale]
  2. '(n' (logprob: -1.3280)
* 3. '(len' (logprob: -1.5780)
  4. '(m' (logprob: -3.4530)
  5. '(a' (logprob: -3.4530)
  6. '(k' (logprob: -3.8280)
  7. ' (' (logprob: -4.5780)
  8. '(b' (logprob: -4.5780)
  9. '(N' (logprob: -4.9530)
  10. '(x' (logprob: -5.4530)

Le token attendu est à la position 3 dans les prédictions.

--------------------------------------------------------------------------------

Position 21: '(a' (ID: 6271)
Prédiction principale: '(a' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '(a' (logprob: -0.0016) [Prédiction principale]
  2. '(b' (logprob: -7.2516)
  3. '(' (logprob: -9.1266)
  4. '(set' (logprob: -9.2516)
  5. ' (' (logprob: -9.7516)
  6. '(c' (logprob: -9.8766)
  7. '(x' (logprob: -9.8766)
  8. '(s' (logprob: -10.1266)
  9. '(str' (logprob: -10.2516)
  10. '(l' (logprob: -10.3766)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 22: ')):\n' (ID: 22530)
Prédiction principale: ')):\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ')):\n' (logprob: -0.1222) [Prédiction principale]
  2. ')-' (logprob: -2.4972)
  3. ')' (logprob: -3.8722)
  4. ')):' (logprob: -5.4972)
  5. ')/' (logprob: -5.6222)
  6. ')//' (logprob: -6.1222)
  7. '))' (logprob: -6.9972)
  8. ')+' (logprob: -8.6222)
  9. '[' (logprob: -8.8722)
  10. '),' (logprob: -9.1222)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 23: '   ' (ID: 271)
Prédiction principale: '   ' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '   ' (logprob: -0.1098) [Prédiction principale]
  2. ' ' (logprob: -2.7348)
  3. '\tif' (logprob: -4.1098)
  4. '\tprint' (logprob: -4.8598)
  5. '  ' (logprob: -5.2348)
  6. '       ' (logprob: -6.1098)
  7. '    ' (logprob: -6.2348)
  8. '\t' (logprob: -7.2348)
  9. '     ' (logprob: -7.2348)
  10. ' if' (logprob: -7.7348)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 24: ' print' (ID: 2123) [Après tabulation]
Prédiction principale: ' print' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' print' (logprob: -0.2435) [Prédiction principale]
  2. ' if' (logprob: -1.7435)
  3. ' a' (logprob: -4.1185)
  4. ' for' (logprob: -4.9935)
  5. ' b' (logprob: -5.7435)
  6. ' #' (logprob: -5.7435)
  7. ' x' (logprob: -6.8685)
  8. ' sys' (logprob: -7.1185)
  9. ' p' (logprob: -7.4935)
  10. ' c' (logprob: -7.6185)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 25: ' a' (ID: 261)
Prédiction principale: ' a' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' a' (logprob: -0.2575) [Prédiction principale]
  2. '(a' (logprob: -1.7575)
  3. ' str' (logprob: -4.1325)
  4. ' (' (logprob: -4.2575)
  5. '(str' (logprob: -5.2575)
  6. ' "%' (logprob: -5.8825)
  7. '("%' (logprob: -6.3825)
  8. ' i' (logprob: -6.7575)
  9. ' "' (logprob: -6.8825)
  10. ' '%' (logprob: -7.0075)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 26: '[i' (ID: 1768)
Prédiction principale: '[i' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '[i' (logprob: -0.0012) [Prédiction principale]
  2. '.pop' (logprob: -8.0012)
  3. '[' (logprob: -8.1262)
  4. '[-' (logprob: -9.5012)
  5. '.index' (logprob: -9.8762)
  6. '[(' (logprob: -9.8762)
  7. ',' (logprob: -10.0012)
  8. '[a' (logprob: -10.0012)
  9. '[len' (logprob: -10.1262)
  10. '[:' (logprob: -10.2512)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 27: '],' (ID: 2155)
Prédiction principale: '],\n' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. '],\n' (logprob: -0.5307) [Prédiction principale]
* 2. '],' (logprob: -1.5307)
  3. ']' (logprob: -2.4057)
  4. ']\n' (logprob: -2.5307)
  5. '],\n\n' (logprob: -4.1557)
  6. ']\n\n' (logprob: -5.1557)
  7. '].' (logprob: -7.2807)
  8. '][' (logprob: -7.4057)
  9. '];' (logprob: -8.0307)
  10. ']-' (logprob: -8.0307)

Le token attendu est à la position 2 dans les prédictions.

--------------------------------------------------------------------------------


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 25
Tokens correctement prédits (1ère position, stricte): 17
Tokens correctement prédits (1ère position, avec adaptation): 17
Tokens correctement prédits (top 10): 25
Précision stricte (1ère position): 68.00%
Précision adaptée (1ère position): 68.00%
Précision (top 10): 100.00%
================================================================================
