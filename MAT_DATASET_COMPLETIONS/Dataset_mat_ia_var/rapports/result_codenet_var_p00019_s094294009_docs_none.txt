================================================================================
ANALYSE DES PRÉDICTIONS DE TOKENS
================================================================================

SCRIPT ORIGINAL:
--------------------------------------------------------------------------------
n = int(input())
ans = 1
for i in range(1, n+1):
    ans *= i
print(ans)
--------------------------------------------------------------------------------

INFORMATION SUR LA TOKENISATION:
--------------------------------------------------------------------------------
Tokenisation utilisée: tiktoken pour le modèle gpt-4o-mini
Il s'agit de la tokenisation officielle utilisée par les modèles OpenAI.
--------------------------------------------------------------------------------

TOKENS IDENTIFIÉS:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
Token 1: ' =' (ID: 314)
Token 2: ' int' (ID: 677)
Token 3: '(input' (ID: 10054)
Token 4: '())\n' (ID: 4574)
Token 5: 'ans' (ID: 616)
Token 6: ' =' (ID: 314)
Token 7: ' ' (ID: 220)
Token 8: '1' (ID: 16)
Token 9: '\n' (ID: 198)
Token 10: 'for' (ID: 1938)
Token 11: ' i' (ID: 575)
Token 12: ' in' (ID: 306)
Token 13: ' range' (ID: 3352)
Token 14: '(' (ID: 7)
Token 15: '1' (ID: 16)
Token 16: ',' (ID: 11)
Token 17: ' n' (ID: 297)
Token 18: '+' (ID: 10)
Token 19: '1' (ID: 16)
Token 20: '):\n' (ID: 1883)
Token 21: '   ' (ID: 271)
Token 22: ' ans' (ID: 3345)
Token 23: ' *=' (ID: 25253)
Token 24: ' i' (ID: 575)
Token 25: '\n' (ID: 198)
Token 26: 'print' (ID: 1598)
Token 27: '(ans' (ID: 70054)
Token 28: ')' (ID: 8)
--------------------------------------------------------------------------------

INFORMATIONS SUR LA MATRICE 2D DE LOG PROBABILITÉS:
--------------------------------------------------------------------------------
Dimensions de la matrice: 5 lignes x 11 tokens max
Nombre de tokens par ligne: [5, 5, 11, 5, 3]
Convention de valeurs:
  - Log probabilité normale: Valeur réelle (typiquement entre -1 et -20)
  - Anomalie (token hors top-10): -50
  - Padding (positions vides): 100

Matrice 2D (format texte simplifiée):
[-10.00, -10.00, -10.00, -0.06, -0.95, PAD, PAD, PAD, PAD, PAD, PAD, ]
[ANOM, -0.02, -0.72, -2.83, -0.28, PAD, PAD, PAD, PAD, PAD, PAD, ]
[-0.14, -0.14, -0.00, -0.00, -0.39, -0.13, -0.18, -0.00, -1.33, -0.00, -0.01, ]
[-0.04, -0.00, -0.10, -0.01, -0.10, PAD, PAD, PAD, PAD, PAD, PAD, ]
[-0.00, -0.01, -0.65, PAD, PAD, PAD, PAD, PAD, PAD, PAD, PAD, ]

Note: La matrice a été sauvegardée au format numpy dans 'matrice_logprob.npy'
--------------------------------------------------------------------------------

ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Position 0: 'n' (ID: 77) (token d'amorce)
--------------------------------------------------------------------------------

Position 1: ' =' (ID: 314) (token d'amorce)
--------------------------------------------------------------------------------

Position 2: ' int' (ID: 677) (token d'amorce)
--------------------------------------------------------------------------------

Position 3: '(input' (ID: 10054)
Prédiction principale: '(input' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '(input' (logprob: -0.0605) [Prédiction principale]
  2. '(sys' (logprob: -4.0605)
  3. '(data' (logprob: -4.8105)
  4. '(n' (logprob: -4.9355)
  5. '(' (logprob: -5.1855)
  6. '(s' (logprob: -6.0605)
  7. '(raw' (logprob: -6.8105)
  8. '(np' (logprob: -6.9355)
  9. '(x' (logprob: -7.1855)
  10. '('' (logprob: -7.3105)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 4: '())\n' (ID: 4574)
Prédiction principale: '("' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. '("' (logprob: -0.8201) [Prédiction principale]
* 2. '())\n' (logprob: -0.9451)
  3. '())\n\n' (logprob: -2.8201)
  4. '().' (logprob: -3.1951)
  5. '())' (logprob: -3.1951)
  6. '('' (logprob: -4.3201)
  7. '())\r\n' (logprob: -4.3201)
  8. '(f' (logprob: -8.1951)
  9. '("\\' (logprob: -8.1951)
  10. '())\n\n\n' (logprob: -8.3201)

Le token attendu est à la position 2 dans les prédictions.

--------------------------------------------------------------------------------

Position 5: 'ans' (ID: 616)
Prédiction principale: 'for' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. 'for' (logprob: -1.9180) [Prédiction principale]
  2. 'arr' (logprob: -2.0430)
  3. 'a' (logprob: -2.2930)
  4. 's' (logprob: -2.7930)
  5. 'print' (logprob: -3.6680)
  6. '#' (logprob: -3.7930)
  7. 'numbers' (logprob: -3.9180)
  8. 'l' (logprob: -4.0430)
  9. 'result' (logprob: -4.1680)
  10. 'nums' (logprob: -4.1680)

Le token attendu n'est pas dans le top 10 des prédictions.

--------------------------------------------------------------------------------

Position 6: ' =' (ID: 314)
Prédiction principale: ' =' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' =' (logprob: -0.0207) [Prédiction principale]
  2. '_list' (logprob: -5.5207)
  3. '1' (logprob: -5.8957)
  4. '=' (logprob: -6.1457)
  5. ',' (logprob: -6.2707)
  6. 'w' (logprob: -6.6457)
  7. '=[]\n' (logprob: -7.2707)
  8. '_lst' (logprob: -7.3957)
  9. 'List' (logprob: -7.5207)
  10. '_arr' (logprob: -7.5207)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 7: ' ' (ID: 220)
Prédiction principale: ' ' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' ' (logprob: -0.7195) [Prédiction principale]
  2. ' []\n' (logprob: -1.4695)
  3. ' [' (logprob: -2.8445)
  4. ' []\n\n' (logprob: -2.8445)
  5. ' list' (logprob: -3.8445)
  6. ' ""\n' (logprob: -3.9695)
  7. ' ''\n' (logprob: -4.0945)
  8. ' '' (logprob: -4.5945)
  9. ' set' (logprob: -4.5945)
  10. ' (' (logprob: -4.8445)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 8: '1' (ID: 16)
Prédiction principale: '0' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. '0' (logprob: -0.0765) [Prédiction principale]
* 2. '1' (logprob: -2.8265)
  3. '2' (logprob: -5.4515)
  4. '10' (logprob: -5.4515)
  5. '100' (logprob: -6.3265)
  6. '3' (logprob: -7.4515)
  7. '999' (logprob: -7.7015)
  8. '4' (logprob: -7.9515)
  9. '5' (logprob: -8.3265)
  10. '9' (logprob: -8.3265)

Le token attendu est à la position 2 dans les prédictions.

--------------------------------------------------------------------------------

Position 9: '\n' (ID: 198)
Prédiction principale: '\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '\n' (logprob: -0.2798) [Prédiction principale]
  2. '\n\n' (logprob: -1.6548)
  3. ' ' (logprob: -4.4048)
  4. ' if' (logprob: -4.5298)
  5. ' <<' (logprob: -5.4048)
  6. ' +' (logprob: -5.6548)
  7. ' \n' (logprob: -5.6548)
  8. ' #' (logprob: -5.6548)
  9. 'e' (logprob: -6.1548)
  10. '.' (logprob: -6.2798)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 10: 'for' (ID: 1938)
Prédiction principale: 'for' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. 'for' (logprob: -0.1395) [Prédiction principale]
  2. 'while' (logprob: -3.0145)
  3. 'if' (logprob: -4.1395)
  4. 'mod' (logprob: -5.0145)
  5. 'i' (logprob: -5.2645)
  6. 'a' (logprob: -5.6395)
  7. '#' (logprob: -5.7645)
  8. 'count' (logprob: -5.7645)
  9. 'x' (logprob: -6.0145)
  10. 'f' (logprob: -6.1395)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 11: ' i' (ID: 575)
Prédiction principale: ' i' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' i' (logprob: -0.1446) [Prédiction principale]
  2. ' _' (logprob: -2.2696)
  3. ' x' (logprob: -4.5196)
  4. ' a' (logprob: -5.3946)
  5. ' k' (logprob: -5.5196)
  6. ' j' (logprob: -5.7696)
  7. ' num' (logprob: -6.6446)
  8. ' p' (logprob: -7.5196)
  9. ' ' (logprob: -7.6446)
  10. ' c' (logprob: -7.6446)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 12: ' in' (ID: 306)
Prédiction principale: ' in' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' in' (logprob: -0.0001) [Prédiction principale]
  2. ' ' (logprob: -9.1251)
  3. ',' (logprob: -11.3751)
  4. ' i' (logprob: -11.5001)
  5. '1' (logprob: -12.8751)
  6. ' range' (logprob: -14.1251)
  7. '2' (logprob: -15.1251)
  8. '_' (logprob: -15.3751)
  9. '0' (logprob: -15.7501)
  10. ' ,' (logprob: -15.8126)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 13: ' range' (ID: 3352)
Prédiction principale: ' range' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' range' (logprob: -0.0017) [Prédiction principale]
  2. ' str' (logprob: -7.8767)
  3. ' ' (logprob: -8.5017)
  4. ' map' (logprob: -8.5017)
  5. ' input' (logprob: -8.7517)
  6. ' reversed' (logprob: -9.0017)
  7. ' ra' (logprob: -9.1267)
  8. ' r' (logprob: -9.2517)
  9. ' rang' (logprob: -9.3767)
  10. ' (' (logprob: -9.5017)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 14: '(' (ID: 7)
Prédiction principale: '(' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '(' (logprob: -0.3904) [Prédiction principale]
  2. '(n' (logprob: -1.1404)
  3. ' (' (logprob: -5.8904)
  4. '(len' (logprob: -8.7654)
  5. '(int' (logprob: -9.0154)
  6. '(-' (logprob: -9.6404)
  7. '((' (logprob: -9.7654)
  8. '(max' (logprob: -10.3904)
  9. '(m' (logprob: -11.0779)
  10. '(min' (logprob: -11.2029)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 15: '1' (ID: 16)
Prédiction principale: '1' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '1' (logprob: -0.1294) [Prédiction principale]
  2. '2' (logprob: -2.2544)
  3. '0' (logprob: -4.2544)
  4. '3' (logprob: -6.7544)
  5. '4' (logprob: -8.6294)
  6. '5' (logprob: -8.7544)
  7. '10' (logprob: -9.0044)
  8. '100' (logprob: -9.5044)
  9. '6' (logprob: -10.1294)
  10. '30' (logprob: -10.1294)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 16: ',' (ID: 11)
Prédiction principale: ',' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ',' (logprob: -0.1811) [Prédiction principale]
  2. ',n' (logprob: -1.8061)
  3. ' ,' (logprob: -6.9311)
  4. ' n' (logprob: -9.8061)
  5. ',(' (logprob: -9.8061)
  6. ' +' (logprob: -10.6811)
  7. 'n' (logprob: -10.8061)
  8. ',int' (logprob: -11.0561)
  9. '+n' (logprob: -11.2436)
  10. ',len' (logprob: -11.3061)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 17: ' n' (ID: 297)
Prédiction principale: ' n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' n' (logprob: -0.0021) [Prédiction principale]
  2. ' ' (logprob: -6.5021)
  3. ' (' (logprob: -8.1271)
  4. ' int' (logprob: -9.1271)
  5. ' min' (logprob: -9.3771)
  6. ' len' (logprob: -11.0021)
  7. 'n' (logprob: -11.2521)
  8. '2' (logprob: -11.8771)
  9. '10' (logprob: -11.8771)
  10. ' abs' (logprob: -11.8771)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 18: '+' (ID: 10)
Prédiction principale: ' +' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. ' +' (logprob: -0.3304) [Prédiction principale]
* 2. '+' (logprob: -1.3304)
  3. '):\n' (logprob: -4.2054)
  4. '//' (logprob: -7.5804)
  5. ' //' (logprob: -7.8304)
  6. '):' (logprob: -8.0804)
  7. ' -' (logprob: -8.5804)
  8. '-' (logprob: -8.9554)
  9. ' *' (logprob: -8.9554)
  10. '*' (logprob: -9.5804)

Le token attendu est à la position 2 dans les prédictions.

--------------------------------------------------------------------------------

Position 19: '1' (ID: 16)
Prédiction principale: '1' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '1' (logprob: -0.0002) [Prédiction principale]
  2. '2' (logprob: -8.8752)
  3. ' ' (logprob: -9.7502)
  4. '3' (logprob: -11.8752)
  5. '0' (logprob: -13.0002)
  6. '4' (logprob: -13.2502)
  7. '5' (logprob: -13.2502)
  8. '10' (logprob: -13.5002)
  9. '11' (logprob: -14.5002)
  10. '6' (logprob: -14.6252)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 20: '):\n' (ID: 1883)
Prédiction principale: '):\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '):\n' (logprob: -0.0109) [Prédiction principale]
  2. '):' (logprob: -4.7609)
  3. ')' (logprob: -6.7609)
  4. ',' (logprob: -7.0109)
  5. '):\n\n' (logprob: -8.7609)
  6. ' ):\n' (logprob: -10.2609)
  7. ')\n' (logprob: -10.7609)
  8. '):\r\n' (logprob: -11.5109)
  9. ')[' (logprob: -12.1359)
  10. '){\n' (logprob: -13.0109)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 21: '   ' (ID: 271)
Prédiction principale: '   ' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '   ' (logprob: -0.0430) [Prédiction principale]
  2. ' ' (logprob: -3.4180)
  3. '\tans' (logprob: -5.2930)
  4. '  ' (logprob: -6.0430)
  5. '    ' (logprob: -7.7930)
  6. ' ans' (logprob: -7.7930)
  7. '       ' (logprob: -7.9180)
  8. '\t' (logprob: -8.0430)
  9. '     ' (logprob: -9.1680)
  10. '\tif' (logprob: -9.1680)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 22: ' ans' (ID: 3345) [Après tabulation]
Prédiction principale: ' ans' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' ans' (logprob: -0.0030) [Prédiction principale]
  2. ' if' (logprob: -6.3780)
  3. ' #' (logprob: -7.8780)
  4. ' a' (logprob: -8.1280)
  5. ' print' (logprob: -8.5030)
  6. ' an' (logprob: -8.7530)
  7. ' ' (logprob: -9.7530)
  8. ' for' (logprob: -10.1280)
  9. ' x' (logprob: -11.0030)
  10. ' answer' (logprob: -12.0030)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 23: ' *=' (ID: 25253)
Prédiction principale: ' *=' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' *=' (logprob: -0.0955) [Prédiction principale]
  2. ' =' (logprob: -2.4705)
  3. ' +=' (logprob: -5.4705)
  4. '*=' (logprob: -6.3455)
  5. ' ' (logprob: -8.7205)
  6. ' *' (logprob: -9.4705)
  7. '=' (logprob: -10.2205)
  8. ' <<=' (logprob: -10.2205)
  9. ' /=' (logprob: -10.3455)
  10. ' ^=' (logprob: -10.3455)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 24: ' i' (ID: 575)
Prédiction principale: ' i' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' i' (logprob: -0.0141) [Prédiction principale]
  2. ' ' (logprob: -5.0141)
  3. ' (' (logprob: -5.0141)
  4. 'i' (logprob: -8.5141)
  5. ' n' (logprob: -9.1391)
  6. ' -' (logprob: -9.3891)
  7. ' pow' (logprob: -9.5141)
  8. ' int' (logprob: -9.8891)
  9. ' ((' (logprob: -10.2641)
  10. ' (-' (logprob: -11.0141)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 25: '\n' (ID: 198)
Prédiction principale: '\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '\n' (logprob: -0.0977) [Prédiction principale]
  2. '\n\n' (logprob: -2.7227)
  3. ' ' (logprob: -4.5977)
  4. '\n    \n' (logprob: -4.9727)
  5. ' \n' (logprob: -5.8477)
  6. ' #' (logprob: -6.0977)
  7. ' %' (logprob: -6.9727)
  8. ' *' (logprob: -7.3477)
  9. '  ' (logprob: -7.4727)
  10. '**' (logprob: -7.9727)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 26: 'print' (ID: 1598)
Prédiction principale: 'print' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. 'print' (logprob: -0.0035) [Prédiction principale]
  2. '   ' (logprob: -6.3786)
  3. 'pr' (logprob: -7.6286)
  4. '#' (logprob: -7.8786)
  5. 'if' (logprob: -8.5035)
  6. 'ans' (logprob: -8.6285)
  7. 'p' (logprob: -9.1285)
  8. '    \n' (logprob: -9.5035)
  9. '``' (logprob: -9.6285)
  10. 'pri' (logprob: -9.6285)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 27: '(ans' (ID: 70054)
Prédiction principale: '(ans' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '(ans' (logprob: -0.0114) [Prédiction principale]
  2. '(f' (logprob: -5.6364)
  3. '("' (logprob: -5.8864)
  4. ' (' (logprob: -6.5114)
  5. ' ans' (logprob: -6.5114)
  6. '(str' (logprob: -7.2614)
  7. '('' (logprob: -8.0114)
  8. '(' (logprob: -8.5114)
  9. '(an' (logprob: -8.6364)
  10. '(a' (logprob: -9.1364)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 28: ')' (ID: 8)
Prédiction principale: ')' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ')' (logprob: -0.6484) [Prédiction principale]
  2. ')\n' (logprob: -0.7734)
  3. ')\n\n' (logprob: -4.2734)
  4. ')\n\n\n' (logprob: -7.3984)
  5. ',' (logprob: -7.8984)
  6. ' %' (logprob: -7.8984)
  7. ' if' (logprob: -9.5234)
  8. ')\n\n\n\n' (logprob: -9.5234)
  9. '%' (logprob: -9.6484)
  10. ' //' (logprob: -10.8984)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 26
Tokens correctement prédits (1ère position, stricte): 22
Tokens correctement prédits (1ère position, avec adaptation): 22
Tokens correctement prédits (top 10): 25
Précision stricte (1ère position): 84.62%
Précision adaptée (1ère position): 84.62%
Précision (top 10): 96.15%
================================================================================
