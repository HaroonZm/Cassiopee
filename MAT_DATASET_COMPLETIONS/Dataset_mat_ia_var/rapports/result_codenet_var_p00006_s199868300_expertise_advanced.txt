================================================================================
ANALYSE DES PRÉDICTIONS DE TOKENS
================================================================================

SCRIPT ORIGINAL:
--------------------------------------------------------------------------------
instr = input()
print(instr[::-1])
--------------------------------------------------------------------------------

INFORMATION SUR LA TOKENISATION:
--------------------------------------------------------------------------------
Tokenisation utilisée: tiktoken pour le modèle gpt-4o-mini
Il s'agit de la tokenisation officielle utilisée par les modèles OpenAI.
--------------------------------------------------------------------------------

TOKENS IDENTIFIÉS:
--------------------------------------------------------------------------------
Token 0: 'instr' (ID: 140259)
Token 1: ' =' (ID: 314)
Token 2: ' input' (ID: 3422)
Token 3: '()\n' (ID: 1234)
Token 4: 'print' (ID: 1598)
Token 5: '(instr' (ID: 196157)
Token 6: '[::-' (ID: 159890)
Token 7: '1' (ID: 16)
Token 8: '])' (ID: 4636)
--------------------------------------------------------------------------------

INFORMATIONS SUR LA MATRICE 2D DE LOG PROBABILITÉS:
--------------------------------------------------------------------------------
Dimensions de la matrice: 2 lignes x 5 tokens max
Nombre de tokens par ligne: [4, 5]
Convention de valeurs:
  - Log probabilité normale: Valeur réelle (typiquement entre -1 et -20)
  - Anomalie (token hors top-10): -50
  - Padding (positions vides): 100

Matrice 2D (format texte simplifiée):
[-10.00, -10.00, -10.00, -3.01, PAD, ]
[-1.73, -2.92, -1.67, -0.00, -0.24, ]

Note: La matrice a été sauvegardée au format numpy dans 'matrice_logprob.npy'
--------------------------------------------------------------------------------

ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Position 0: 'instr' (ID: 140259) (token d'amorce)
--------------------------------------------------------------------------------

Position 1: ' =' (ID: 314) (token d'amorce)
--------------------------------------------------------------------------------

Position 2: ' input' (ID: 3422) (token d'amorce)
--------------------------------------------------------------------------------

Position 3: '()\n' (ID: 1234)
Prédiction principale: '("' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. '("' (logprob: -0.3879) [Prédiction principale]
  2. '('' (logprob: -2.3879)
  3. '().' (logprob: -2.7629)
* 4. '()\n' (logprob: -3.0129)
  5. '()\n\n' (logprob: -4.3879)
  6. '(f' (logprob: -4.6379)
  7. '[' (logprob: -4.7629)
  8. '()' (logprob: -4.7629)
  9. '("\\' (logprob: -4.8879)
  10. '_string' (logprob: -5.3879)

Le token attendu est à la position 4 dans les prédictions.

--------------------------------------------------------------------------------

Position 4: 'print' (ID: 1598)
Prédiction principale: 'print' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. 'print' (logprob: -1.7337) [Prédiction principale]
  2. 'if' (logprob: -2.1087)
  3. 'while' (logprob: -2.6087)
  4. '#' (logprob: -3.1087)
  5. 'n' (logprob: -3.3587)
  6. 'result' (logprob: -3.3587)
  7. 'for' (logprob: -3.7337)
  8. 's' (logprob: -4.1087)
  9. 'num' (logprob: -4.1087)
  10. 'x' (logprob: -4.3587)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 5: '(instr' (ID: 196157)
Prédiction principale: '("' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. '("' (logprob: -2.0446) [Prédiction principale]
  2. '(f' (logprob: -2.4196)
  3. '(' (logprob: -2.6696)
* 4. '(instr' (logprob: -2.9196)
  5. '('' (logprob: -3.0446)
  6. '(in' (logprob: -3.0446)
  7. '(int' (logprob: -3.5446)
  8. '(is' (logprob: -3.5446)
  9. '(eval' (logprob: -3.5446)
  10. '(s' (logprob: -3.6696)

Le token attendu est à la position 4 dans les prédictions.

--------------------------------------------------------------------------------

Position 6: '[::-' (ID: 159890)
Prédiction principale: ')\n' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. ')\n' (logprob: -1.5490) [Prédiction principale]
* 2. '[::-' (logprob: -1.6740)
  3. ')' (logprob: -2.1740)
  4. ')\n\n' (logprob: -2.2990)
  5. '[' (logprob: -2.5490)
  6. '.count' (logprob: -3.1740)
  7. '.replace' (logprob: -3.2990)
  8. '.upper' (logprob: -3.5490)
  9. '.lower' (logprob: -3.6740)
  10. '.is' (logprob: -3.7990)

Le token attendu est à la position 2 dans les prédictions.

--------------------------------------------------------------------------------

Position 7: '1' (ID: 16)
Prédiction principale: '1' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '1' (logprob: -0.0009) [Prédiction principale]
  2. '2' (logprob: -7.2509)
  3. '3' (logprob: -9.3759)
  4. ' ' (logprob: -9.8759)
  5. '4' (logprob: -11.0009)
  6. '5' (logprob: -11.7509)
  7. '10' (logprob: -12.0009)
  8. '0' (logprob: -12.5009)
  9. '6' (logprob: -13.1259)
  10. '11' (logprob: -13.1259)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 8: '])' (ID: 4636)
Prédiction principale: '])' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '])' (logprob: -0.2417) [Prédiction principale]
  2. '])\n' (logprob: -1.7417)
  3. '].' (logprob: -4.1167)
  4. '])\n\n' (logprob: -4.1167)
  5. '],' (logprob: -5.8667)
  6. ']' (logprob: -5.9917)
  7. '])\n\n\n' (logprob: -7.3667)
  8. '][' (logprob: -7.9917)
  9. '][:' (logprob: -8.7417)
  10. ']).' (logprob: -9.7417)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 6
Tokens correctement prédits (1ère position, stricte): 3
Tokens correctement prédits (1ère position, avec adaptation): 3
Tokens correctement prédits (top 10): 6
Précision stricte (1ère position): 50.00%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 100.00%
================================================================================
