================================================================================
ANALYSE DES PRÉDICTIONS DE TOKENS
================================================================================

SCRIPT ORIGINAL:
--------------------------------------------------------------------------------
m=int(input())
while m:
    n,m=''.join(sorted(input())),m-1
    print(int(n[::-1]) - int(n))
--------------------------------------------------------------------------------

INFORMATION SUR LA TOKENISATION:
--------------------------------------------------------------------------------
Tokenisation utilisée: tiktoken pour le modèle gpt-4o-mini
Il s'agit de la tokenisation officielle utilisée par les modèles OpenAI.
--------------------------------------------------------------------------------

TOKENS IDENTIFIÉS:
--------------------------------------------------------------------------------
Token 0: 'm' (ID: 76)
Token 1: '=int' (ID: 37431)
Token 2: '(input' (ID: 10054)
Token 3: '())\n' (ID: 4574)
Token 4: 'while' (ID: 7032)
Token 5: ' m' (ID: 284)
Token 6: ':\n' (ID: 734)
Token 7: '   ' (ID: 271)
Token 8: ' n' (ID: 297)
Token 9: ',m' (ID: 26648)
Token 10: '='' (ID: 2053)
Token 11: ''.' (ID: 6120)
Token 12: 'join' (ID: 10891)
Token 13: '(sorted' (ID: 92488)
Token 14: '(input' (ID: 10054)
Token 15: '()' (ID: 416)
Token 16: ')),' (ID: 12098)
Token 17: 'm' (ID: 76)
Token 18: '-' (ID: 12)
Token 19: '1' (ID: 16)
Token 20: '\n' (ID: 198)
Token 21: '   ' (ID: 271)
Token 22: ' print' (ID: 2123)
Token 23: '(int' (ID: 2742)
Token 24: '(n' (ID: 2406)
Token 25: '[::-' (ID: 159890)
Token 26: '1' (ID: 16)
Token 27: '])' (ID: 4636)
Token 28: ' -' (ID: 533)
Token 29: ' int' (ID: 677)
Token 30: '(n' (ID: 2406)
Token 31: '))' (ID: 915)
--------------------------------------------------------------------------------

INFORMATIONS SUR LA MATRICE 2D DE LOG PROBABILITÉS:
--------------------------------------------------------------------------------
Dimensions de la matrice: 4 lignes x 14 tokens max
Nombre de tokens par ligne: [4, 3, 14, 11]
Convention de valeurs:
  - Log probabilité normale: Valeur réelle (typiquement entre -1 et -20)
  - Anomalie (token hors top-10): -50
  - Padding (positions vides): 100

Matrice 2D (format texte simplifiée):
[-10.00, -10.00, -10.00, -0.87, PAD, PAD, PAD, PAD, PAD, PAD, PAD, PAD, PAD, PAD, ]
[-3.69, -0.24, -2.73, PAD, PAD, PAD, PAD, PAD, PAD, PAD, PAD, PAD, PAD, PAD, ]
[-0.12, -1.26, -2.13, ANOM, -1.64, -0.00, -1.32, -0.29, -0.52, -0.02, -0.40, -0.00, -0.00, -0.03, ]
[-0.02, -0.33, ANOM, -0.14, ANOM, -0.00, -1.84, -0.87, -0.00, -0.00, -0.58, PAD, PAD, PAD, ]

Note: La matrice a été sauvegardée au format numpy dans 'matrice_logprob.npy'
--------------------------------------------------------------------------------

ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Position 0: 'm' (ID: 76) (token d'amorce)
--------------------------------------------------------------------------------

Position 1: '=int' (ID: 37431) (token d'amorce)
--------------------------------------------------------------------------------

Position 2: '(input' (ID: 10054) (token d'amorce)
--------------------------------------------------------------------------------

Position 3: '())\n' (ID: 4574)
Prédiction principale: '())\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '())\n' (logprob: -0.8740) [Prédiction principale]
  2. '("' (logprob: -0.9990)
  3. '())\r\n' (logprob: -2.4990)
  4. '('' (logprob: -2.8740)
  5. '())' (logprob: -2.9990)
  6. '())\n\n' (logprob: -4.2490)
  7. '().' (logprob: -5.3740)
  8. '());' (logprob: -6.6240)
  9. '(f' (logprob: -7.1240)
  10. '("\\' (logprob: -7.4990)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 4: 'while' (ID: 7032)
Prédiction principale: 'for' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. 'for' (logprob: -1.6899) [Prédiction principale]
  2. 'a' (logprob: -2.5649)
  3. 'n' (logprob: -2.5649)
  4. 'l' (logprob: -2.6899)
  5. 'arr' (logprob: -2.9399)
  6. 's' (logprob: -3.0649)
  7. 'if' (logprob: -3.0649)
  8. 'x' (logprob: -3.3149)
  9. 'p' (logprob: -3.5649)
* 10. 'while' (logprob: -3.6899)

Le token attendu est à la position 10 dans les prédictions.

--------------------------------------------------------------------------------

Position 5: ' m' (ID: 284)
Prédiction principale: ' m' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' m' (logprob: -0.2441) [Prédiction principale]
  2. '(m' (logprob: -2.7441)
  3. ' True' (logprob: -2.7441)
  4. ' n' (logprob: -3.4941)
  5. ' (' (logprob: -3.9941)
  6. '(n' (logprob: -4.9941)
  7. ' ' (logprob: -5.4941)
  8. ' t' (logprob: -5.7441)
  9. '(' (logprob: -5.9941)
  10. ' x' (logprob: -6.1191)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 6: ':\n' (ID: 734)
Prédiction principale: '>' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. '>' (logprob: -0.8566) [Prédiction principale]
  2. '!=' (logprob: -1.3566)
* 3. ':\n' (logprob: -2.7316)
  4. '<' (logprob: -2.8566)
  5. ' >' (logprob: -3.2316)
  6. '<=' (logprob: -3.3566)
  7. '%' (logprob: -3.4816)
  8. ' !=' (logprob: -3.6066)
  9. '>=' (logprob: -3.7316)
  10. ' <' (logprob: -4.9816)

Le token attendu est à la position 3 dans les prédictions.

--------------------------------------------------------------------------------

Position 7: '   ' (ID: 271)
Prédiction principale: '   ' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '   ' (logprob: -0.1230) [Prédiction principale]
  2. ' ' (logprob: -2.6230)
  3. '  ' (logprob: -4.7480)
  4. '    \n' (logprob: -5.2480)
  5. '    ' (logprob: -5.7480)
  6. '\tn' (logprob: -5.7480)
  7. '       ' (logprob: -5.8730)
  8. ' n' (logprob: -6.1230)
  9. '\t' (logprob: -6.4980)
  10. '\tm' (logprob: -6.8730)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 8: ' n' (ID: 297) [Après tabulation]
Prédiction principale: ' n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' n' (logprob: -1.2629) [Prédiction principale]
  2. ' m' (logprob: -1.3879)
  3. ' a' (logprob: -2.6379)
  4. ' print' (logprob: -2.8879)
  5. ' s' (logprob: -3.3879)
  6. ' l' (logprob: -3.5129)
  7. ' x' (logprob: -3.7629)
  8. ' p' (logprob: -4.0129)
  9. ' if' (logprob: -4.0129)
  10. ' k' (logprob: -4.1379)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 9: ',m' (ID: 26648)
Prédiction principale: '=int' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. '=int' (logprob: -0.3838) [Prédiction principale]
* 2. ',m' (logprob: -2.1338)
  3. ' =' (logprob: -2.3838)
  4. '=list' (logprob: -3.6338)
  5. '=input' (logprob: -4.0088)
  6. '=' (logprob: -4.2588)
  7. ',' (logprob: -4.6338)
  8. '=m' (logprob: -4.7588)
  9. ',k' (logprob: -5.1338)
  10. '=[' (logprob: -6.0088)

Le token attendu est à la position 2 dans les prédictions.

--------------------------------------------------------------------------------

Position 10: '='' (ID: 2053)
Prédiction principale: '=' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. '=' (logprob: -0.4868) [Prédiction principale]
  2. ' =' (logprob: -1.6118)
  3. '=[' (logprob: -2.8618)
  4. '=m' (logprob: -2.8618)
  5. '=(' (logprob: -3.9868)
  6. '=input' (logprob: -4.6118)
  7. '=list' (logprob: -4.6118)
  8. ',m' (logprob: -4.7368)
  9. '=n' (logprob: -5.2368)
  10. '=a' (logprob: -5.9868)

Le token attendu n'est pas dans le top 10 des prédictions.

--------------------------------------------------------------------------------

Position 11: ''.' (ID: 6120)
Prédiction principale: ' '.' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. ' '.' (logprob: -0.6443) [Prédiction principale]
* 2. ''.' (logprob: -1.6443)
  3. '0' (logprob: -3.2693)
  4. '','' (logprob: -3.5193)
  5. '1' (logprob: -3.6443)
  6. ' ',' (logprob: -4.3943)
  7. '*' (logprob: -4.8943)
  8. '012' (logprob: -5.1443)
  9. '2' (logprob: -5.2693)
  10. '{}' (logprob: -5.2693)

Le token attendu est à la position 2 dans les prédictions.

--------------------------------------------------------------------------------

Position 12: 'join' (ID: 10891)
Prédiction principale: 'join' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. 'join' (logprob: -0.0005) [Prédiction principale]
  2. 'split' (logprob: -9.0005)
  3. ' join' (logprob: -9.1255)
  4. 'z' (logprob: -9.5005)
  5. 'jo' (logprob: -10.5005)
  6. 'count' (logprob: -10.6255)
  7. 'r' (logprob: -10.8755)
  8. 'l' (logprob: -11.2505)
  9. 'format' (logprob: -11.2505)
  10. 'replace' (logprob: -11.2505)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 13: '(sorted' (ID: 92488)
Prédiction principale: '(input' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. '(input' (logprob: -1.1903) [Prédiction principale]
* 2. '(sorted' (logprob: -1.3153)
  3. '(re' (logprob: -2.3153)
  4. '(map' (logprob: -2.6903)
  5. '([' (logprob: -2.9403)
  6. '(list' (logprob: -3.0653)
  7. '(str' (logprob: -3.1903)
  8. '(filter' (logprob: -4.1903)
  9. '(['' (logprob: -4.3153)
  10. '((' (logprob: -4.5653)

Le token attendu est à la position 2 dans les prédictions.

--------------------------------------------------------------------------------

Position 14: '(input' (ID: 10054)
Prédiction principale: '(input' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '(input' (logprob: -0.2850) [Prédiction principale]
  2. '(str' (logprob: -1.7850)
  3. '(list' (logprob: -3.1600)
  4. '(m' (logprob: -4.6600)
  5. '(set' (logprob: -4.9100)
  6. '(map' (logprob: -5.7850)
  7. '((' (logprob: -6.0350)
  8. '('' (logprob: -6.1600)
  9. '([' (logprob: -6.1600)
  10. '(n' (logprob: -6.6600)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 15: '()' (ID: 416)
Prédiction principale: '()' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '()' (logprob: -0.5229) [Prédiction principale]
  2. '().' (logprob: -1.1479)
  3. '()))' (logprob: -2.7729)
  4. '())).' (logprob: -4.1479)
  5. '(),' (logprob: -4.8979)
  6. '()),' (logprob: -7.1479)
  7. '())' (logprob: -7.2729)
  8. '()).' (logprob: -7.7729)
  9. '('' (logprob: -8.5229)
  10. '()[' (logprob: -8.6479)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 16: ')),' (ID: 12098)
Prédiction principale: ')),' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ')),' (logprob: -0.0169) [Prédiction principale]
  2. ' for' (logprob: -4.1419)
  3. 'for' (logprob: -7.6419)
  4. '[:-' (logprob: -9.2669)
  5. '[:' (logprob: -9.7669)
  6. 'split' (logprob: -10.0169)
  7. ' )' (logprob: -10.5169)
  8. ' ' (logprob: -10.6419)
  9. ' ,' (logprob: -10.6419)
  10. ' ))' (logprob: -10.6419)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 17: 'm' (ID: 76)
Prédiction principale: 'm' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. 'm' (logprob: -0.4014) [Prédiction principale]
  2. 'int' (logprob: -1.7764)
  3. ' m' (logprob: -2.2764)
  4. ' int' (logprob: -3.5264)
  5. '0' (logprob: -4.9014)
  6. 'input' (logprob: -5.7764)
  7. '''.' (logprob: -5.7764)
  8. 'n' (logprob: -6.1514)
  9. 'len' (logprob: -6.2764)
  10. '(' (logprob: -6.5264)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 18: '-' (ID: 12)
Prédiction principale: '-' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '-' (logprob: -0.0016) [Prédiction principale]
  2. ' -' (logprob: -7.2516)
  3. '-int' (logprob: -8.1266)
  4. '//' (logprob: -8.5016)
  5. '-l' (logprob: -9.2516)
  6. '\n' (logprob: -9.7516)
  7. '-(' (logprob: -10.2516)
  8. '+' (logprob: -10.6266)
  9. '*' (logprob: -10.7516)
  10. '-=' (logprob: -11.0016)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 19: '1' (ID: 16)
Prédiction principale: '1' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '1' (logprob: -0.0001) [Prédiction principale]
  2. ' ' (logprob: -10.5001)
  3. '2' (logprob: -10.6251)
  4. '3' (logprob: -13.2501)
  5. '0' (logprob: -13.8751)
  6. '10' (logprob: -13.8751)
  7. '4' (logprob: -14.1251)
  8. '5' (logprob: -14.7501)
  9. '11' (logprob: -14.8751)
  10. 'int' (logprob: -15.2501)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 20: '\n' (ID: 198)
Prédiction principale: '\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '\n' (logprob: -0.0342) [Prédiction principale]
  2. '\n\n' (logprob: -4.5342)
  3. ' \n' (logprob: -5.1592)
  4. ' #' (logprob: -5.4092)
  5. '\n    \n' (logprob: -5.5342)
  6. '    \n' (logprob: -6.2842)
  7. ' ' (logprob: -6.5342)
  8. '  \n' (logprob: -7.1592)
  9. '   \n' (logprob: -7.1592)
  10. '  ' (logprob: -7.7842)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 21: '   ' (ID: 271)
Prédiction principale: '   ' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '   ' (logprob: -0.0160) [Prédiction principale]
  2. 'print' (logprob: -4.2660)
  3. '#' (logprob: -8.5160)
  4. '``' (logprob: -8.5160)
  5. '  ' (logprob: -8.8910)
  6. 'if' (logprob: -9.3910)
  7. 'for' (logprob: -9.3910)
  8. ' ' (logprob: -9.5160)
  9. '    ' (logprob: -9.5160)
  10. 'a' (logprob: -10.0160)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 22: ' print' (ID: 2123) [Après tabulation]
Prédiction principale: ' print' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' print' (logprob: -0.3294) [Prédiction principale]
  2. ' if' (logprob: -1.9544)
  3. ' a' (logprob: -4.3294)
  4. ' p' (logprob: -4.4544)
  5. ' n' (logprob: -4.4544)
  6. ' for' (logprob: -4.5794)
  7. ' s' (logprob: -4.8294)
  8. ' c' (logprob: -4.9544)
  9. ' k' (logprob: -5.2044)
  10. ' x' (logprob: -5.2044)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 23: '(int' (ID: 2742)
Prédiction principale: '(n' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. '(n' (logprob: -0.5171) [Prédiction principale]
  2. '('' (logprob: -1.5171)
  3. '("' (logprob: -3.3921)
  4. '(' (logprob: -3.5171)
  5. '(m' (logprob: -3.7671)
  6. '(f' (logprob: -4.2671)
  7. '(['' (logprob: -4.6421)
  8. '(*' (logprob: -4.7671)
  9. ' (' (logprob: -5.0171)
  10. '((' (logprob: -5.0171)

Le token attendu n'est pas dans le top 10 des prédictions.

--------------------------------------------------------------------------------

Position 24: '(n' (ID: 2406)
Prédiction principale: '(n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '(n' (logprob: -0.1384) [Prédiction principale]
  2. '('' (logprob: -2.6384)
  3. '((' (logprob: -4.2634)
  4. '(m' (logprob: -4.7634)
  5. '(all' (logprob: -5.1384)
  6. '("' (logprob: -5.3884)
  7. '(' (logprob: -5.5134)
  8. '(str' (logprob: -6.1384)
  9. '(not' (logprob: -6.1384)
  10. '(sum' (logprob: -6.1384)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 25: '[::-' (ID: 159890)
Prédiction principale: '))\n' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. '))\n' (logprob: -2.0649) [Prédiction principale]
  2. ')-' (logprob: -2.0649)
  3. ')*' (logprob: -2.3149)
  4. ')' (logprob: -2.6899)
  5. '))' (logprob: -2.6899)
  6. '[' (logprob: -3.0649)
  7. ')+' (logprob: -3.0649)
  8. ')%' (logprob: -3.0649)
  9. ',' (logprob: -3.1899)
  10. '==' (logprob: -3.1899)

Le token attendu n'est pas dans le top 10 des prédictions.

--------------------------------------------------------------------------------

Position 26: '1' (ID: 16)
Prédiction principale: '1' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '1' (logprob: -0.0001) [Prédiction principale]
  2. '2' (logprob: -9.5001)
  3. '3' (logprob: -11.5001)
  4. ' ' (logprob: -12.6251)
  5. '4' (logprob: -12.8751)
  6. '0' (logprob: -13.3751)
  7. '10' (logprob: -13.3751)
  8. '5' (logprob: -13.8751)
  9. 'm' (logprob: -14.3751)
  10. 'n' (logprob: -14.3751)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 27: '])' (ID: 4636)
Prédiction principale: '])-' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. '])-' (logprob: -0.4610) [Prédiction principale]
* 2. '])' (logprob: -1.8360)
  3. '])+' (logprob: -2.0860)
  4. ']))' (logprob: -3.0860)
  5. ']))\n' (logprob: -3.5860)
  6. ']))\n\n' (logprob: -5.4610)
  7. '])*' (logprob: -5.7110)
  8. ']),' (logprob: -6.2110)
  9. '].' (logprob: -7.3360)
  10. '],' (logprob: -7.5860)

Le token attendu est à la position 2 dans les prédictions.

--------------------------------------------------------------------------------

Position 28: ' -' (ID: 533)
Prédiction principale: ' -' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' -' (logprob: -0.8709) [Prédiction principale]
  2. '%' (logprob: -1.7459)
  3. ' +' (logprob: -1.7459)
  4. '**' (logprob: -2.6209)
  5. ' if' (logprob: -2.8709)
  6. '//' (logprob: -3.3709)
  7. ' *' (logprob: -4.1209)
  8. ' %' (logprob: -4.2459)
  9. '-(' (logprob: -5.3709)
  10. '==' (logprob: -5.6209)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 29: ' int' (ID: 677)
Prédiction principale: ' int' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' int' (logprob: -0.0047) [Prédiction principale]
  2. ' ' (logprob: -6.2547)
  3. 'int' (logprob: -6.2547)
  4. ' (' (logprob: -7.7547)
  5. ' sum' (logprob: -8.3797)
  6. ' n' (logprob: -8.8797)
  7. ' m' (logprob: -11.1297)
  8. '1' (logprob: -11.2547)
  9. ' len' (logprob: -12.0047)
  10. ' i' (logprob: -12.3797)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 30: '(n' (ID: 2406)
Prédiction principale: '(n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '(n' (logprob: -0.0001) [Prédiction principale]
  2. ' (' (logprob: -10.6251)
  3. '('' (logprob: -10.6251)
  4. '(' (logprob: -11.0001)
  5. '(m' (logprob: -11.2501)
  6. '((' (logprob: -12.0001)
  7. '(int' (logprob: -13.0001)
  8. '("' (logprob: -13.2501)
  9. '(num' (logprob: -13.6251)
  10. '(s' (logprob: -14.0001)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 31: '))' (ID: 915)
Prédiction principale: '))' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '))' (logprob: -0.5764) [Prédiction principale]
  2. '))\n' (logprob: -0.9514)
  3. '))\n\n' (logprob: -3.2014)
  4. '),' (logprob: -4.9514)
  5. ')' (logprob: -6.2014)
  6. '))\n\n\n' (logprob: -7.4514)
  7. ')*' (logprob: -8.3264)
  8. ')+' (logprob: -8.5764)
  9. '))*' (logprob: -8.9514)
  10. '[:' (logprob: -9.2014)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 29
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 26
Précision stricte (1ère position): 68.97%
Précision adaptée (1ère position): 68.97%
Précision (top 10): 89.66%
================================================================================
