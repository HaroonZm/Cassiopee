================================================================================
ANALYSE DES PRÉDICTIONS DE TOKENS
================================================================================

SCRIPT ORIGINAL:
--------------------------------------------------------------------------------
n=int(input())
print(sum([int(input()) for i in range(n)])//n)
--------------------------------------------------------------------------------

INFORMATION SUR LA TOKENISATION:
--------------------------------------------------------------------------------
Tokenisation utilisée: tiktoken pour le modèle gpt-4o-mini
Il s'agit de la tokenisation officielle utilisée par les modèles OpenAI.
--------------------------------------------------------------------------------

TOKENS IDENTIFIÉS:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
Token 1: '=int' (ID: 37431)
Token 2: '(input' (ID: 10054)
Token 3: '())\n' (ID: 4574)
Token 4: 'print' (ID: 1598)
Token 5: '(sum' (ID: 45528)
Token 6: '([' (ID: 5194)
Token 7: 'int' (ID: 491)
Token 8: '(input' (ID: 10054)
Token 9: '())' (ID: 3516)
Token 10: ' for' (ID: 395)
Token 11: ' i' (ID: 575)
Token 12: ' in' (ID: 306)
Token 13: ' range' (ID: 3352)
Token 14: '(n' (ID: 2406)
Token 15: ')])' (ID: 99066)
Token 16: '//' (ID: 393)
Token 17: 'n' (ID: 77)
Token 18: ')' (ID: 8)
--------------------------------------------------------------------------------

INFORMATIONS SUR LA MATRICE 2D DE LOG PROBABILITÉS:
--------------------------------------------------------------------------------
Dimensions de la matrice: 2 lignes x 15 tokens max
Nombre de tokens par ligne: [4, 15]
Convention de valeurs:
  - Log probabilité normale: Valeur réelle (typiquement entre -1 et -20)
  - Anomalie (token hors top-10): -50
  - Padding (positions vides): 100

Matrice 2D (format texte simplifiée):
[-10.00, -10.00, -10.00, -0.52, PAD, PAD, PAD, PAD, PAD, PAD, PAD, PAD, PAD, PAD, PAD, ]
[ANOM, -3.34, -1.51, -1.17, -0.99, -0.05, -0.03, -0.92, -0.00, -0.00, -0.00, -2.35, -1.67, -0.01, -0.24, ]

Note: La matrice a été sauvegardée au format numpy dans 'matrice_logprob.npy'
--------------------------------------------------------------------------------

ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Position 0: 'n' (ID: 77) (token d'amorce)
--------------------------------------------------------------------------------

Position 1: '=int' (ID: 37431) (token d'amorce)
--------------------------------------------------------------------------------

Position 2: '(input' (ID: 10054) (token d'amorce)
--------------------------------------------------------------------------------

Position 3: '())\n' (ID: 4574)
Prédiction principale: '())\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '())\n' (logprob: -0.5166) [Prédiction principale]
  2. '("' (logprob: -1.5166)
  3. '())\r\n' (logprob: -2.3916)
  4. '())' (logprob: -3.1416)
  5. '('' (logprob: -3.8916)
  6. '())\n\n' (logprob: -3.8916)
  7. '().' (logprob: -5.2666)
  8. '(""))\n' (logprob: -7.1416)
  9. '());' (logprob: -7.8916)
  10. '("\\' (logprob: -8.1416)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 4: 'print' (ID: 1598)
Prédiction principale: 'for' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. 'for' (logprob: -1.2425) [Prédiction principale]
  2. 'a' (logprob: -2.1175)
  3. 'arr' (logprob: -2.4925)
  4. 'l' (logprob: -2.6175)
  5. 's' (logprob: -2.8675)
  6. 'while' (logprob: -3.2425)
  7. 'li' (logprob: -3.6175)
  8. 'x' (logprob: -3.7425)
  9. 'p' (logprob: -3.9925)
  10. '#' (logprob: -4.1175)

Le token attendu n'est pas dans le top 10 des prédictions.

--------------------------------------------------------------------------------

Position 5: '(sum' (ID: 45528)
Prédiction principale: '("' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. '("' (logprob: -1.7199) [Prédiction principale]
  2. '(n' (logprob: -1.9699)
  3. '(' (logprob: -2.2199)
  4. '('' (logprob: -2.7199)
  5. '(f' (logprob: -2.9699)
  6. '(int' (logprob: -3.2199)
  7. '((' (logprob: -3.3449)
* 8. '(sum' (logprob: -3.3449)
  9. '(*' (logprob: -3.7199)
  10. '(max' (logprob: -3.9699)

Le token attendu est à la position 8 dans les prédictions.

--------------------------------------------------------------------------------

Position 6: '([' (ID: 5194)
Prédiction principale: '(map' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. '(map' (logprob: -1.1359) [Prédiction principale]
* 2. '([' (logprob: -1.5109)
  3. '(int' (logprob: -1.8859)
  4. '(range' (logprob: -2.6359)
  5. '(list' (logprob: -2.7609)
  6. '(' (logprob: -3.1359)
  7. '(i' (logprob: -3.1359)
  8. '((' (logprob: -3.5109)
  9. '(x' (logprob: -5.0109)
  10. '([(' (logprob: -5.2609)

Le token attendu est à la position 2 dans les prédictions.

--------------------------------------------------------------------------------

Position 7: 'int' (ID: 491)
Prédiction principale: 'i' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. 'i' (logprob: -0.9226) [Prédiction principale]
* 2. 'int' (logprob: -1.1726)
  3. '1' (logprob: -2.5476)
  4. 'x' (logprob: -2.7976)
  5. '2' (logprob: -4.4226)
  6. 'len' (logprob: -4.5476)
  7. 'j' (logprob: -4.6726)
  8. 'k' (logprob: -4.6726)
  9. 'n' (logprob: -4.6726)
  10. '(-' (logprob: -4.6726)

Le token attendu est à la position 2 dans les prédictions.

--------------------------------------------------------------------------------

Position 8: '(input' (ID: 10054)
Prédiction principale: '(input' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '(input' (logprob: -0.9904) [Prédiction principale]
  2. '(i' (logprob: -1.4904)
  3. '(x' (logprob: -1.4904)
  4. '(d' (logprob: -2.9904)
  5. '(n' (logprob: -3.8654)
  6. '(str' (logprob: -4.1154)
  7. '(a' (logprob: -4.2404)
  8. '(num' (logprob: -4.3654)
  9. '(c' (logprob: -4.4904)
  10. '(s' (logprob: -4.8654)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 9: '())' (ID: 3516)
Prédiction principale: '())' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '())' (logprob: -0.0472) [Prédiction principale]
  2. '().' (logprob: -3.1722)
  3. '()' (logprob: -6.7972)
  4. '()[' (logprob: -7.7972)
  5. '(i' (logprob: -7.9222)
  6. '()),' (logprob: -7.9222)
  7. '("' (logprob: -8.0472)
  8. '(' (logprob: -8.7972)
  9. '(),' (logprob: -8.7972)
  10. '())\n' (logprob: -8.7972)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 10: ' for' (ID: 395)
Prédiction principale: ' for' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' for' (logprob: -0.0304) [Prédiction principale]
  2. 'for' (logprob: -3.9054)
  3. '**' (logprob: -5.6554)
  4. '%' (logprob: -6.1554)
  5. ' %' (logprob: -7.1554)
  6. '*' (logprob: -7.4054)
  7. ' ' (logprob: -7.4054)
  8. '*(' (logprob: -7.9054)
  9. ' *' (logprob: -8.0304)
  10. ' if' (logprob: -8.4054)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 11: ' i' (ID: 575)
Prédiction principale: ' _' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. ' _' (logprob: -0.5413) [Prédiction principale]
* 2. ' i' (logprob: -0.9163)
  3. ' x' (logprob: -4.6663)
  4. ' j' (logprob: -5.4163)
  5. ' __' (logprob: -6.6663)
  6. ' k' (logprob: -7.0413)
  7. ' a' (logprob: -7.7913)
  8. ' ' (logprob: -8.2913)
  9. ' n' (logprob: -8.4163)
  10. ' t' (logprob: -9.4163)

Le token attendu est à la position 2 dans les prédictions.

--------------------------------------------------------------------------------

Position 12: ' in' (ID: 306)
Prédiction principale: ' in' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' in' (logprob: -0.0001) [Prédiction principale]
  2. ' ' (logprob: -9.2501)
  3. ' range' (logprob: -11.2501)
  4. '1' (logprob: -13.5001)
  5. ' i' (logprob: -13.7501)
  6. ',' (logprob: -14.1251)
  7. '_' (logprob: -14.3751)
  8. ' _' (logprob: -14.7501)
  9. '0' (logprob: -14.8751)
  10. 'in' (logprob: -15.1876)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 13: ' range' (ID: 3352)
Prédiction principale: ' range' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' range' (logprob: -0.0004) [Prédiction principale]
  2. ' ' (logprob: -9.3753)
  3. ' rang' (logprob: -9.3753)
  4. ' r' (logprob: -9.8753)
  5. ' ra' (logprob: -10.3753)
  6. ' '' (logprob: -10.7503)
  7. ' [' (logprob: -10.8753)
  8. ' list' (logprob: -11.5003)
  9. ' (' (logprob: -11.7503)
  10. ' ran' (logprob: -11.7503)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 14: '(n' (ID: 2406)
Prédiction principale: '(n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '(n' (logprob: -0.0039) [Prédiction principale]
  2. '(' (logprob: -5.8789)
  3. ' (' (logprob: -6.8789)
  4. '(int' (logprob: -10.8789)
  5. '(-' (logprob: -10.8789)
  6. ' n' (logprob: -11.2539)
  7. '(t' (logprob: -11.5039)
  8. '(num' (logprob: -12.0039)
  9. '((' (logprob: -12.1289)
  10. '(abs' (logprob: -12.2539)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 15: ')])' (ID: 99066)
Prédiction principale: ')]' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. ')]' (logprob: -0.1047) [Prédiction principale]
* 2. ')])' (logprob: -2.3547)
  3. ')' (logprob: -5.7297)
  4. '-' (logprob: -7.4797)
  5. '+' (logprob: -8.8547)
  6. ' )' (logprob: -8.8547)
  7. ')],' (logprob: -9.3547)
  8. ')])\n' (logprob: -9.6047)
  9. ')][' (logprob: -9.7297)
  10. ' -' (logprob: -10.7297)

Le token attendu est à la position 2 dans les prédictions.

--------------------------------------------------------------------------------

Position 16: '//' (ID: 393)
Prédiction principale: '%' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. '%' (logprob: -1.1743) [Prédiction principale]
  2. ' %' (logprob: -1.2993)
* 3. '//' (logprob: -1.6743)
  4. ' //' (logprob: -3.2993)
  5. ' -' (logprob: -3.5493)
  6. '-' (logprob: -3.6743)
  7. ' /' (logprob: -3.7993)
  8. ' )' (logprob: -3.7993)
  9. ' )\n' (logprob: -3.7993)
  10. '/' (logprob: -3.9243)

Le token attendu est à la position 3 dans les prédictions.

--------------------------------------------------------------------------------

Position 17: 'n' (ID: 77)
Prédiction principale: 'n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. 'n' (logprob: -0.0103) [Prédiction principale]
  2. '2' (logprob: -5.6353)
  3. '(' (logprob: -6.0103)
  4. ' n' (logprob: -6.5103)
  5. '10' (logprob: -7.0103)
  6. '3' (logprob: -7.3853)
  7. '5' (logprob: -7.8853)
  8. '100' (logprob: -9.2603)
  9. 'len' (logprob: -9.2603)
  10. '4' (logprob: -9.6353)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 18: ')' (ID: 8)
Prédiction principale: ')' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ')' (logprob: -0.2444) [Prédiction principale]
  2. ')\n' (logprob: -1.6194)
  3. ')\n\n' (logprob: -4.2444)
  4. ' )' (logprob: -6.7444)
  5. ')\n\n\n' (logprob: -7.1194)
  6. ' if' (logprob: -8.2444)
  7. ' )\n' (logprob: -8.2444)
  8. ')#' (logprob: -8.3694)
  9. ',' (logprob: -8.4944)
  10. ')\n\n\n\n' (logprob: -8.7444)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 16
Tokens correctement prédits (1ère position, stricte): 9
Tokens correctement prédits (1ère position, avec adaptation): 9
Tokens correctement prédits (top 10): 15
Précision stricte (1ère position): 56.25%
Précision adaptée (1ère position): 56.25%
Précision (top 10): 93.75%
================================================================================
