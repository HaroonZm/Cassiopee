================================================================================
ANALYSE DES PRÉDICTIONS DE TOKENS
================================================================================

SCRIPT ORIGINAL:
--------------------------------------------------------------------------------
a = str(input())
print(str.upper(a))
--------------------------------------------------------------------------------

INFORMATION SUR LA TOKENISATION:
--------------------------------------------------------------------------------
Tokenisation utilisée: tiktoken pour le modèle gpt-4o-mini
Il s'agit de la tokenisation officielle utilisée par les modèles OpenAI.
--------------------------------------------------------------------------------

TOKENS IDENTIFIÉS:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
Token 1: ' =' (ID: 314)
Token 2: ' str' (ID: 989)
Token 3: '(input' (ID: 10054)
Token 4: '())\n' (ID: 4574)
Token 5: 'print' (ID: 1598)
Token 6: '(str' (ID: 7946)
Token 7: '.upper' (ID: 75082)
Token 8: '(a' (ID: 6271)
Token 9: '))' (ID: 915)
--------------------------------------------------------------------------------

INFORMATIONS SUR LA MATRICE 2D DE LOG PROBABILITÉS:
--------------------------------------------------------------------------------
Dimensions de la matrice: 2 lignes x 5 tokens max
Nombre de tokens par ligne: [5, 5]
Convention de valeurs:
  - Log probabilité normale: Valeur réelle (typiquement entre -1 et -20)
  - Anomalie (token hors top-10): -50
  - Padding (positions vides): 100

Matrice 2D (format texte simplifiée):
[-10.00, -10.00, -10.00, -2.26, -1.91, ]
[-2.89, -4.15, -3.96, -0.00, -0.38, ]

Note: La matrice a été sauvegardée au format numpy dans 'matrice_logprob.npy'
--------------------------------------------------------------------------------

ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Position 0: 'a' (ID: 64) (token d'amorce)
--------------------------------------------------------------------------------

Position 1: ' =' (ID: 314) (token d'amorce)
--------------------------------------------------------------------------------

Position 2: ' str' (ID: 989) (token d'amorce)
--------------------------------------------------------------------------------

Position 3: '(input' (ID: 10054)
Prédiction principale: '(a' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. '(a' (logprob: -2.0128) [Prédiction principale]
  2. '2' (logprob: -2.1378)
* 3. '(input' (logprob: -2.2628)
  4. '(' (logprob: -2.6378)
  5. '1' (logprob: -3.5128)
  6. '.split' (logprob: -3.6378)
  7. '(int' (logprob: -3.7628)
  8. '(i' (logprob: -3.8878)
  9. '[' (logprob: -4.0128)
  10. '(x' (logprob: -4.1378)

Le token attendu est à la position 3 dans les prédictions.

--------------------------------------------------------------------------------

Position 4: '())\n' (ID: 4574)
Prédiction principale: '("' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. '("' (logprob: -0.6557) [Prédiction principale]
  2. '('' (logprob: -1.4057)
* 3. '())\n' (logprob: -1.9057)
  4. '())' (logprob: -3.9057)
  5. '())\r\n' (logprob: -4.0307)
  6. '()).' (logprob: -4.5307)
  7. '())\n\n' (logprob: -4.7807)
  8. '(f' (logprob: -5.0307)
  9. '().' (logprob: -5.1557)
  10. '("\\' (logprob: -5.7807)

Le token attendu est à la position 3 dans les prédictions.

--------------------------------------------------------------------------------

Position 5: 'print' (ID: 1598)
Prédiction principale: 'b' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. 'b' (logprob: -0.3902) [Prédiction principale]
  2. 'if' (logprob: -2.8902)
* 3. 'print' (logprob: -2.8902)
  4. 'n' (logprob: -3.7652)
  5. '#' (logprob: -3.8902)
  6. 'a' (logprob: -3.8902)
  7. 's' (logprob: -4.5152)
  8. 'c' (logprob: -4.6402)
  9. 'x' (logprob: -4.6402)
  10. 'for' (logprob: -4.8902)

Le token attendu est à la position 3 dans les prédictions.

--------------------------------------------------------------------------------

Position 6: '(str' (ID: 7946)
Prédiction principale: '(a' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. '(a' (logprob: -0.5206) [Prédiction principale]
  2. '("' (logprob: -2.5206)
  3. '('' (logprob: -2.8956)
  4. ' (' (logprob: -3.3956)
  5. '(f' (logprob: -3.3956)
  6. '(' (logprob: -3.7706)
  7. '(int' (logprob: -3.7706)
  8. '(len' (logprob: -3.8956)
* 9. '(str' (logprob: -4.1456)
  10. '(is' (logprob: -4.6456)

Le token attendu est à la position 9 dans les prédictions.

--------------------------------------------------------------------------------

Position 7: '.upper' (ID: 75082)
Prédiction principale: '(a' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. '(a' (logprob: -0.5878) [Prédiction principale]
  2. '(int' (logprob: -2.0878)
  3. '.is' (logprob: -3.3378)
  4. '(len' (logprob: -3.8378)
  5. '.count' (logprob: -3.9628)
* 6. '.upper' (logprob: -3.9628)
  7. '.capitalize' (logprob: -4.2128)
  8. '.replace' (logprob: -4.4628)
  9. '(' (logprob: -4.5878)
  10. '(float' (logprob: -4.5878)

Le token attendu est à la position 6 dans les prédictions.

--------------------------------------------------------------------------------

Position 8: '(a' (ID: 6271)
Prédiction principale: '(a' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '(a' (logprob: -0.0027) [Prédiction principale]
  2. '(str' (logprob: -7.3777)
  3. '(' (logprob: -8.3777)
  4. ' (' (logprob: -8.3777)
  5. '(b' (logprob: -8.3777)
  6. '('' (logprob: -8.5027)
  7. '("' (logprob: -8.6277)
  8. '((' (logprob: -9.1277)
  9. '(x' (logprob: -9.2527)
  10. '())\n' (logprob: -9.5027)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 9: '))' (ID: 915)
Prédiction principale: '))' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '))' (logprob: -0.3762) [Prédiction principale]
  2. '))\n' (logprob: -1.3762)
  3. '))\n\n' (logprob: -3.1262)
  4. ')' (logprob: -5.6262)
  5. ').' (logprob: -5.6262)
  6. '),' (logprob: -5.6262)
  7. '))\n\n\n' (logprob: -6.0012)
  8. ')[' (logprob: -6.6262)
  9. '[' (logprob: -7.0012)
  10. '[::-' (logprob: -8.5012)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 7
Tokens correctement prédits (1ère position, stricte): 2
Tokens correctement prédits (1ère position, avec adaptation): 2
Tokens correctement prédits (top 10): 7
Précision stricte (1ère position): 28.57%
Précision adaptée (1ère position): 28.57%
Précision (top 10): 100.00%
================================================================================
