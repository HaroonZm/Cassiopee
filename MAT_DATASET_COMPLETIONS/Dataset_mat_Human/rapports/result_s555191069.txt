================================================================================
ANALYSE DES PRÉDICTIONS DE TOKENS
================================================================================

SCRIPT ORIGINAL:
--------------------------------------------------------------------------------
a = map(int,raw_input().split())
a.sort()
a.reverse()
for i in range(len(a)):
  print a[i],
--------------------------------------------------------------------------------

INFORMATION SUR LA TOKENISATION:
--------------------------------------------------------------------------------
Tokenisation utilisée: tiktoken pour le modèle gpt-4o-mini
Il s'agit de la tokenisation officielle utilisée par les modèles OpenAI.
--------------------------------------------------------------------------------

TOKENS IDENTIFIÉS:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
Token 1: ' =' (ID: 314)
Token 2: ' map' (ID: 4014)
Token 3: '(int' (ID: 2742)
Token 4: ',' (ID: 11)
Token 5: 'raw' (ID: 1618)
Token 6: '_input' (ID: 12507)
Token 7: '().' (ID: 1454)
Token 8: 'split' (ID: 13627)
Token 9: '())\n' (ID: 4574)
Token 10: 'a' (ID: 64)
Token 11: '.sort' (ID: 19551)
Token 12: '()\n' (ID: 1234)
Token 13: 'a' (ID: 64)
Token 14: '.reverse' (ID: 65426)
Token 15: '()\n' (ID: 1234)
Token 16: 'for' (ID: 1938)
Token 17: ' i' (ID: 575)
Token 18: ' in' (ID: 306)
Token 19: ' range' (ID: 3352)
Token 20: '(len' (ID: 14990)
Token 21: '(a' (ID: 6271)
Token 22: ')):\n' (ID: 22530)
Token 23: ' ' (ID: 220)
Token 24: ' print' (ID: 2123)
Token 25: ' a' (ID: 261)
Token 26: '[i' (ID: 1768)
Token 27: '],' (ID: 2155)
--------------------------------------------------------------------------------

INFORMATIONS SUR LA MATRICE 2D DE LOG PROBABILITÉS:
--------------------------------------------------------------------------------
Dimensions de la matrice: 5 lignes x 10 tokens max
Nombre de tokens par ligne: [10, 3, 3, 7, 5]
Convention de valeurs:
  - Log probabilité normale: Valeur réelle (typiquement entre -1 et -20)
  - Anomalie (token hors top-10): -50
  - Padding (positions vides): 100

Matrice 2D (format texte simplifiée):
[-10.00, -10.00, -10.00, -0.29, -0.02, ANOM, -0.00, -0.03, -0.39, -0.28, ]
[-2.69, -0.45, -0.12, PAD, PAD, PAD, PAD, PAD, PAD, PAD, ]
[-4.05, -2.95, -0.07, PAD, PAD, PAD, PAD, PAD, PAD, PAD, ]
[-2.85, -0.24, -0.00, -0.84, -1.30, -0.00, -0.16, PAD, PAD, PAD, ]
[-2.40, -0.34, -0.20, -0.00, -1.50, PAD, PAD, PAD, PAD, PAD, ]

Note: La matrice a été sauvegardée au format numpy dans 'matrice_logprob.npy'
--------------------------------------------------------------------------------

ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Position 0: 'a' (ID: 64) (token d'amorce)
--------------------------------------------------------------------------------

Position 1: ' =' (ID: 314) (token d'amorce)
--------------------------------------------------------------------------------

Position 2: ' map' (ID: 4014) (token d'amorce)
--------------------------------------------------------------------------------

Position 3: '(int' (ID: 2742)
Prédiction principale: '(int' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '(int' (logprob: -0.2927) [Prédiction principale]
  2. '(float' (logprob: -2.6677)
  3. ' (' (logprob: -3.9177)
  4. '(lambda' (logprob: -3.9177)
  5. '.get' (logprob: -4.4177)
  6. '(str' (logprob: -4.5427)
  7. '[int' (logprob: -4.6677)
  8. '[' (logprob: -4.9177)
  9. '(' (logprob: -5.0427)
  10. ' int' (logprob: -5.4177)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 4: ',' (ID: 11)
Prédiction principale: ',' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ',' (logprob: -0.0209) [Prédiction principale]
  2. ',input' (logprob: -4.0209)
  3. ' ,' (logprob: -7.3959)
  4. ',a' (logprob: -8.3959)
  5. ',line' (logprob: -8.5209)
  6. ',s' (logprob: -8.7709)
  7. ',x' (logprob: -8.8959)
  8. ',data' (logprob: -8.8959)
  9. ',(' (logprob: -9.0209)
  10. ',f' (logprob: -9.2709)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 5: 'raw' (ID: 1618)
Prédiction principale: ' input' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. ' input' (logprob: -0.1294) [Prédiction principale]
  2. ' data' (logprob: -3.8794)
  3. ' line' (logprob: -4.2544)
  4. ' sys' (logprob: -4.5044)
  5. ' a' (logprob: -4.7544)
  6. ' str' (logprob: -5.1294)
  7. ' raw' (logprob: -5.1294)
  8. ' s' (logprob: -5.6294)
  9. ' f' (logprob: -5.6294)
  10. ' x' (logprob: -5.8794)

Le token attendu n'est pas dans le top 10 des prédictions.

--------------------------------------------------------------------------------

Position 6: '_input' (ID: 12507)
Prédiction principale: '_input' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '_input' (logprob: -0.0003) [Prédiction principale]
  2. '_in' (logprob: -8.5003)
  3. '_data' (logprob: -10.2503)
  4. '.split' (logprob: -10.7503)
  5. 'input' (logprob: -11.1253)
  6. '_inputs' (logprob: -11.6253)
  7. 'Input' (logprob: -11.7503)
  8. '().' (logprob: -12.0003)
  9. '_a' (logprob: -12.2503)
  10. '_split' (logprob: -12.3753)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 7: '().' (ID: 1454)
Prédiction principale: '().' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '().' (logprob: -0.0288) [Prédiction principale]
  2. '("' (logprob: -4.0288)
  3. '('' (logprob: -5.0288)
  4. '("").' (logprob: -6.6538)
  5. '('').' (logprob: -7.2788)
  6. '())\n' (logprob: -7.4038)
  7. '()' (logprob: -8.5288)
  8. '()[' (logprob: -8.5288)
  9. '(' (logprob: -8.7788)
  10. '())' (logprob: -9.2788)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 8: 'split' (ID: 13627)
Prédiction principale: 'split' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. 'split' (logprob: -0.3886) [Prédiction principale]
  2. 'strip' (logprob: -1.1386)
  3. 'rstrip' (logprob: -6.5136)
  4. ' split' (logprob: -9.2636)
  5. 'replace' (logprob: -10.0136)
  6. 'rs' (logprob: -10.6386)
  7. 'spl' (logprob: -11.2636)
  8. 'sp' (logprob: -11.5136)
  9. ' strip' (logprob: -11.5136)
  10. 's' (logprob: -11.6386)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 9: '())\n' (ID: 4574)
Prédiction principale: '())\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '())\n' (logprob: -0.2759) [Prédiction principale]
  2. '())\r\n' (logprob: -2.1509)
  3. '())\n\n' (logprob: -2.7759)
  4. '())' (logprob: -3.2759)
  5. '('' (logprob: -4.5259)
  6. '("' (logprob: -5.0259)
  7. '(',' (logprob: -6.4009)
  8. '(",' (logprob: -6.9009)
  9. '()),' (logprob: -7.1509)
  10. '()' (logprob: -7.4009)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 10: 'a' (ID: 64)
Prédiction principale: 'b' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. 'b' (logprob: -1.5675) [Prédiction principale]
* 2. 'a' (logprob: -2.6925)
  3. 'n' (logprob: -2.8175)
  4. 'x' (logprob: -2.8175)
  5. 'print' (logprob: -2.9425)
  6. 's' (logprob: -3.1925)
  7. 'if' (logprob: -3.3175)
  8. 'c' (logprob: -3.4425)
  9. '   ' (logprob: -3.5675)
  10. 'for' (logprob: -3.5675)

Le token attendu est à la position 2 dans les prédictions.

--------------------------------------------------------------------------------

Position 11: '.sort' (ID: 19551)
Prédiction principale: '.sort' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '.sort' (logprob: -0.4482) [Prédiction principale]
  2. ' =' (logprob: -1.4482)
  3. '[' (logprob: -3.3232)
  4. '=' (logprob: -3.9482)
  5. '1' (logprob: -4.6982)
  6. '=a' (logprob: -5.0732)
  7. '.remove' (logprob: -5.1982)
  8. ',b' (logprob: -5.3232)
  9. ',' (logprob: -5.8232)
  10. '.append' (logprob: -5.9482)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 12: '()\n' (ID: 1234)
Prédiction principale: '()\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '()\n' (logprob: -0.1226) [Prédiction principale]
  2. '()\n\n' (logprob: -2.7476)
  3. '(reverse' (logprob: -3.4976)
  4. '()' (logprob: -3.9976)
  5. '()\n\n\n' (logprob: -6.7476)
  6. '();\n' (logprob: -8.1226)
  7. '(key' (logprob: -8.1226)
  8. '\n' (logprob: -9.2476)
  9. '(' (logprob: -9.3726)
  10. '();' (logprob: -9.4976)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 13: 'a' (ID: 64)
Prédiction principale: 'print' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. 'print' (logprob: -1.1747) [Prédiction principale]
  2. 'if' (logprob: -2.0497)
  3. 'n' (logprob: -2.6747)
  4. 'b' (logprob: -2.7997)
  5. 'x' (logprob: -3.0497)
  6. 'for' (logprob: -3.1747)
  7. 's' (logprob: -3.5497)
  8. 'ans' (logprob: -3.7997)
* 9. 'a' (logprob: -4.0497)
  10. 'c' (logprob: -4.0497)

Le token attendu est à la position 9 dans les prédictions.

--------------------------------------------------------------------------------

Position 14: '.reverse' (ID: 65426)
Prédiction principale: ' =' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. ' =' (logprob: -0.9534) [Prédiction principale]
  2. '[' (logprob: -1.5784)
* 3. '.reverse' (logprob: -2.9534)
  4. '1' (logprob: -3.0784)
  5. '.sort' (logprob: -3.3284)
  6. '.append' (logprob: -3.4534)
  7. '.insert' (logprob: -3.5784)
  8. '.remove' (logprob: -3.8284)
  9. '=' (logprob: -4.0784)
  10. '=a' (logprob: -4.0784)

Le token attendu est à la position 3 dans les prédictions.

--------------------------------------------------------------------------------

Position 15: '()\n' (ID: 1234)
Prédiction principale: '()\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '()\n' (logprob: -0.0740) [Prédiction principale]
  2. '()\n\n' (logprob: -2.8240)
  3. '()' (logprob: -4.5740)
  4. '()\n\n\n' (logprob: -6.6990)
  5. '();\n' (logprob: -8.9490)
  6. '\n' (logprob: -9.3240)
  7. ' ()\n' (logprob: -9.8240)
  8. '(' (logprob: -9.9490)
  9. '()\n\n\n\n' (logprob: -10.3240)
  10. '();\n\n' (logprob: -11.0740)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 16: 'for' (ID: 1938)
Prédiction principale: 'print' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. 'print' (logprob: -0.8526) [Prédiction principale]
  2. 'if' (logprob: -2.7276)
* 3. 'for' (logprob: -2.8526)
  4. 'b' (logprob: -3.1026)
  5. 'n' (logprob: -3.3526)
  6. 's' (logprob: -3.3526)
  7. 'x' (logprob: -3.3526)
  8. 'ans' (logprob: -3.7276)
  9. 'a' (logprob: -4.2276)
  10. 'max' (logprob: -4.2276)

Le token attendu est à la position 3 dans les prédictions.

--------------------------------------------------------------------------------

Position 17: ' i' (ID: 575)
Prédiction principale: ' i' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' i' (logprob: -0.2450) [Prédiction principale]
  2. ' x' (logprob: -2.4950)
  3. ' b' (logprob: -4.1200)
  4. ' j' (logprob: -4.2450)
  5. ' n' (logprob: -4.4950)
  6. ' num' (logprob: -4.4950)
  7. ' k' (logprob: -4.6200)
  8. ' c' (logprob: -5.3700)
  9. ' e' (logprob: -5.4950)
  10. ' _' (logprob: -5.4950)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 18: ' in' (ID: 306)
Prédiction principale: ' in' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' in' (logprob: -0.0016) [Prédiction principale]
  2. ',' (logprob: -7.6266)
  3. ',j' (logprob: -7.7516)
  4. ' ' (logprob: -8.8766)
  5. ',x' (logprob: -8.8766)
  6. ',v' (logprob: -9.1266)
  7. ',b' (logprob: -10.2516)
  8. ',c' (logprob: -10.5016)
  9. '1' (logprob: -10.7516)
  10. ',k' (logprob: -11.0016)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 19: ' range' (ID: 3352)
Prédiction principale: ' a' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. ' a' (logprob: -0.5859) [Prédiction principale]
* 2. ' range' (logprob: -0.8359)
  3. ' xrange' (logprob: -4.8359)
  4. ' (' (logprob: -7.8359)
  5. ' ' (logprob: -8.0859)
  6. ' reversed' (logprob: -8.7109)
  7. ' [' (logprob: -8.8359)
  8. ' sorted' (logprob: -8.8359)
  9. ' list' (logprob: -9.4609)
  10. ' map' (logprob: -9.7109)

Le token attendu est à la position 2 dans les prédictions.

--------------------------------------------------------------------------------

Position 20: '(len' (ID: 14990)
Prédiction principale: '(' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. '(' (logprob: -0.9268) [Prédiction principale]
* 2. '(len' (logprob: -1.3018)
  3. '(n' (logprob: -1.6768)
  4. '(a' (logprob: -2.9268)
  5. '(m' (logprob: -3.8018)
  6. ' (' (logprob: -4.1768)
  7. '(k' (logprob: -4.1768)
  8. '(b' (logprob: -4.5518)
  9. '(N' (logprob: -5.1768)
  10. '(l' (logprob: -5.8018)

Le token attendu est à la position 2 dans les prédictions.

--------------------------------------------------------------------------------

Position 21: '(a' (ID: 6271)
Prédiction principale: '(a' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '(a' (logprob: -0.0012) [Prédiction principale]
  2. '(b' (logprob: -7.3762)
  3. '(' (logprob: -9.5012)
  4. '(set' (logprob: -9.6262)
  5. ' (' (logprob: -9.8762)
  6. '(x' (logprob: -10.0012)
  7. '(c' (logprob: -10.2512)
  8. '(s' (logprob: -10.5012)
  9. '(l' (logprob: -10.6262)
  10. '(str' (logprob: -10.6262)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 22: ')):\n' (ID: 22530)
Prédiction principale: ')):\n' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ')):\n' (logprob: -0.1626) [Prédiction principale]
  2. ')-' (logprob: -2.0376)
  3. ')' (logprob: -5.0376)
  4. ')/' (logprob: -5.1626)
  5. ')):' (logprob: -5.6626)
  6. ')//' (logprob: -6.4126)
  7. '))' (logprob: -6.7876)
  8. ')+' (logprob: -8.2876)
  9. '[' (logprob: -8.6626)
  10. ')-(' (logprob: -8.6626)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 23: ' ' (ID: 220)
Prédiction principale: '   ' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. '   ' (logprob: -0.1498) [Prédiction principale]
* 2. ' ' (logprob: -2.3998)
  3. '\tif' (logprob: -4.1498)
  4. '\tprint' (logprob: -4.5248)
  5. '  ' (logprob: -4.8998)
  6. '       ' (logprob: -5.6498)
  7. '    ' (logprob: -5.8998)
  8. ' print' (logprob: -6.7748)
  9. '     ' (logprob: -6.8998)
  10. '\t' (logprob: -7.0248)

Le token attendu est à la position 2 dans les prédictions.

--------------------------------------------------------------------------------

Position 24: ' print' (ID: 2123)
Prédiction principale: ' print' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' print' (logprob: -0.3439) [Prédiction principale]
  2. ' if' (logprob: -1.4689)
  3. ' a' (logprob: -3.7189)
  4. ' for' (logprob: -4.4689)
  5. ' b' (logprob: -5.0939)
  6. ' #' (logprob: -5.5939)
  7. ' x' (logprob: -6.5939)
  8. ' c' (logprob: -6.8439)
  9. ' p' (logprob: -7.3439)
  10. ' ans' (logprob: -7.3439)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 25: ' a' (ID: 261)
Prédiction principale: ' a' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. ' a' (logprob: -0.2015) [Prédiction principale]
  2. '(a' (logprob: -2.0765)
  3. ' str' (logprob: -3.9515)
  4. ' (' (logprob: -4.0765)
  5. '(str' (logprob: -5.5765)
  6. ' "%' (logprob: -5.8265)
  7. '("%' (logprob: -6.4515)
  8. ' "' (logprob: -6.9515)
  9. ' i' (logprob: -6.9515)
  10. ' '%' (logprob: -6.9515)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 26: '[i' (ID: 1768)
Prédiction principale: '[i' (✓ CORRECT)

Top 10 tokens les plus probables:
* 1. '[i' (logprob: -0.0016) [Prédiction principale]
  2. '[' (logprob: -7.7516)
  3. '.pop' (logprob: -7.7516)
  4. '[-' (logprob: -9.2516)
  5. '[(' (logprob: -9.3766)
  6. '[a' (logprob: -9.6266)
  7. '.index' (logprob: -9.8766)
  8. '[:' (logprob: -10.0016)
  9. '[len' (logprob: -10.0016)
  10. '.count' (logprob: -10.1266)

Le token attendu est à la position 1 dans les prédictions.

--------------------------------------------------------------------------------

Position 27: '],' (ID: 2155)
Prédiction principale: '],\n' (✗ INCORRECT)

Top 10 tokens les plus probables:
  1. '],\n' (logprob: -0.5008) [Prédiction principale]
* 2. '],' (logprob: -1.5008)
  3. ']' (logprob: -2.5008)
  4. ']\n' (logprob: -2.8758)
  5. '],\n\n' (logprob: -3.8758)
  6. ']\n\n' (logprob: -5.1258)
  7. '],"' (logprob: -7.3758)
  8. ']*' (logprob: -7.5008)
  9. ']-' (logprob: -7.5008)
  10. '],'' (logprob: -7.5008)

Le token attendu est à la position 2 dans les prédictions.

--------------------------------------------------------------------------------


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 25
Tokens correctement prédits (1ère position, stricte): 16
Tokens correctement prédits (1ère position, avec adaptation): 16
Tokens correctement prédits (top 10): 24
Précision stricte (1ère position): 64.00%
Précision adaptée (1ère position): 64.00%
Précision (top 10): 96.00%
================================================================================
