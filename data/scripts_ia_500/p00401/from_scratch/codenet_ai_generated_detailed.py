# 入力された数Nに対して、それ以下の最大の2の累乗を求めるプログラム

# アプローチ：
# 1. 2のべき乗は、1, 2, 4, 8, 16, ... と増えていく。
# 2. 入力N以下の最大の2の累乗は、Nを二進数で表現したときに一番左の1ビットの位置を利用すれば簡単に求められる。
# 3. Pythonのビルトイン関数bit_length()を使うと、
#    Nの二進数表現の長さ（ビット数）を取得できる。
# 4. 2 ** (N.bit_length() - 1)が答えになる。

# 例：
# N=54 (2進数で110110)、bit_length=6
# 2 ** (6-1) = 2 ** 5 = 32 （これが54以下の最大の2の累乗）


# 実装

N = int(input())

# Nのビット長を取得
length = N.bit_length()

# その長さに基づいて最大の2の累乗を求める
result = 2 ** (length - 1)

print(result)