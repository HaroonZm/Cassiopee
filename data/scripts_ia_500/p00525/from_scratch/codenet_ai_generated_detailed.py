# 解法の考え方
# 問題は、紙に引かれた縦方向の切り取り線と横方向の切り取り線によって
# 紙がいくつの部分に分割されるかを求める問題である。
#
# 紙の大きさ W×H に対し、
# ・縦方向の線は x = 定数 の形
# ・横方向の線は y = 定数 の形
#
# 各線は直線ではなく線分であり、線分を越えて切れている訳ではないが、
# 縦線同士は共有点を持たず、横線同士も共有点を持たない
# また、縦線と横線は交差しうる。
#
# 紙の周囲も境界となるため、切り分けられる「部分」は
# 縦方向の切り取り線と紙の左右の端の位置をすべて集め、
# 横方向の切り取り線と紙の上下の端の位置をすべて集めることで区画を分割できる。
#
# 具体的には、
# 1. 縦線の x 座標をすべて集める（紙の左端 0、右端 W も含む）
# 2. 横線の y 座標をすべて集める（紙の下端 0、上端 H も含む）
#
# 縦方向に M 本、横方向に K 本の有効な区画線があれば、
# × (M-1)×(K-1) の領域に分けることができる。
#
# しかし、切り取り線は線分で途中までしか引かれていないので交差しない区間では分割されない。
#
# 結論としては次の通り：
# 紙は縦方向の線で M 区間に分けられ、横方向の線で K 区間に分けられるので
# 部品数 = (縦方向の区切りの数) × (横方向の区切りの数) = (M) × (K)
#
# ここで M = （縦線の有効な区切り座標の個数）、
# 横線と縦線に関しては重複位置を除外してソートすれば良い。
#
# つまり、
# ・すべての縦線の x 座標の集合に 0 と W を入れた集合の大きさが M
# ・すべての横線の y 座標の集合に 0 と H を入れた集合の大きさが K
# となる。
#
# なぜ交差判定をせずに良いのかは、問題文の条件より
# ・平行な線分同士は重なることなく、隣接もしない
# ・紙の辺と平行な線分も共有点を持たない
# つまり交差は縦線と横線でのみ発生し、その位置でしか分割されないため、
# それぞれの方向の切り取り線の位置で区間数が単純に決まるためである。
#
# 以上の考え方より、本プログラムでは切り取り線の方向ごとに
# その座標を取得し、重複を除いてソートし、0 と W (H) を追加し、
# それぞれの方向の区間数を求めて、積を計算する。

import sys

def main():
    input = sys.stdin.readline
    W, H, N = map(int, input().split())
    vertical_lines = set()   # x座標
    horizontal_lines = set() # y座標

    for _ in range(N):
        A, B, C, D = map(int, input().split())
        # 線分は縦か横かのどちらか
        if A == C:
            # 縦線 x = A (C)
            vertical_lines.add(A)
        else:
            # 横線 y = B (D)
            horizontal_lines.add(B)

    # 紙の端も切り取り線の区切りとして扱う
    vertical_coords = [0, W] + list(vertical_lines)
    horizontal_coords = [0, H] + list(horizontal_lines)

    # 座標をソートし、重複除去
    vertical_coords = sorted(set(vertical_coords))
    horizontal_coords = sorted(set(horizontal_coords))

    # 区間数 = 座標数 - 1
    # 部品数 = 縦方向の区間数 × 横方向の区間数
    result = (len(vertical_coords) - 1) * (len(horizontal_coords) - 1)
    print(result)


if __name__ == "__main__":
    main()