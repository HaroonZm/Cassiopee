# 入力値を受け取る
A, B, C = map(int, input().split())

# 毎日ログインで得られるコインがA枚
# 7日連続ログインすると追加でB枚のボーナスコイン獲得
# 明日は月曜日で、C枚以上のコインを得るための最小ログイン回数を求める

# アプローチ：
# ログイン回数をnとし、
# 7日連続ログインをk回分だけ行い、その余りをr回分ログインするとする。
# つまり n = 7*k + r (0 <= r < 7)

# 得られるコインの総数は
# A * n + B * k
# = A * (7*k + r) + B * k
# = 7*A*k + A*r + B*k
# = k * (7*A + B) + A * r

# この式でC以上となる最小のnを探す。
# k, rが整数で0 <= r <7

# 解法：
# kをいろいろ増やしていって、その時のrの最小値を求めて、
# n = 7*k + rを計算し、条件を満たす最小の値をもらす。

# 実装ではkを0から適切な範囲まで増やし、rは0から6まで試す。

min_n = 10**9  # 十分大きい値で初期化

for k in range(0, (C // A) // 7 + 2):  # kの上限は充分余裕もって決める
    # k回7日ログインのボーナスを得た場合のコイン数の基礎
    base = k * (7 * A + B)
    if base >= C:
        # r=0で条件を満たすなら、それが最小
        min_n = min(min_n, 7 * k)
        break  # これ以上kを増やす必要なし
    else:
        # r=0..6の範囲で最小のrを見つける
        for r in range(7):
            total = base + A * r
            if total >= C:
                min_n = min(min_n, 7 * k + r)
                break  # これ以上rを増やす必要なし

print(min_n)