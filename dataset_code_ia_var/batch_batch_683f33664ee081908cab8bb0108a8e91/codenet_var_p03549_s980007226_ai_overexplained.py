# インポート文（import statements）
import sys  # sysモジュールは、Pythonインタプリタやその実行環境にアクセスするためのさまざまな関数を提供します。ここでは使われていませんが、標準出力のフラッシュや異常終了など、多くの場面で利用されることがあります。
import itertools  # itertoolsモジュールは、効率的なループ処理のツールを提供します。例えば、繰り返し処理や順列・組み合わせの生成などにも用いられます。このスクリプト内では使用されていませんが、他の場面で役立つでしょう。
import math  # mathモジュールは、数学的な関数や定数を利用できる標準ライブラリです。平方根（sqrt関数）や三角関数、べき乗、指数関数などが含まれます。ここでは使われていません。

# 入力値の受け取り（taking user input）
# input()は、ユーザーからの入力を1行受け取ります。split()メソッドを使うことで、空白で区切られた2つ以上の文字列に分割できます。
N, M = input().split()  # 入力された文字列を空白（スペース）で分割し、NとMという2つの変数に格納します。

# データ型の変換（type conversion）
# input()で受け取った値はデフォルトで文字列（str型）です。そのままでは数値計算ができません。int()関数で整数型（int型）に変換します（キャストともいいます）。
N = int(N)  # Nを整数型に変換して格納します。
M = int(M)  # Mも整数型へ変換して格納します。

# --- ここから先のコードは、他の入出力処理や計算のために使われそうな変数の宣言です ---
i = 0  # 一般的なカウンタ変数として使われることが多い変数 i を初期化しています（ここでは特に使用していません）。
ID_list = []  # ID_listという空リストを用意していますが、今回は使われていません。
ID_sublist = []  # こちらも空リストで、特に使われていません。
gate_possible_list = []  # ゲートの可能性リストといった意味ですが、使われていません。
N_dummy = 0  # ダミー（仮の、予備の）変数として0を代入しています。使われていません。
M_dummy = 0  # 同様にダミー用変数。未使用。
C_dummy = 0  # これも同様です。

# --- コメントアウトされた大きな部分や定義は日本語で説明とともに残された試行錯誤やメモです ---
# 変数定義や入力処理の雛形があり、リストやループの例も記載されています

# 他にもたくさんの変数や処理が定義やコメントアウトとしてありますが、これらは実際には使われていません。
# いくつかの数学的処理を含めたforループ案もコメントとして残っていますが、動くコードは下部だけです。

i = 0  # カウンタ変数の初期化。ここでも使われていません（念のための初期化でしょう）
k = 0  # 同上。ここでは使用していません。
s = 0  # 計算結果格納用変数（sumの略か？）。このまま使用されていません。

# --- 主要な計算式と出力（the main calculation and output） ---
# 指定された式（1900 * M + 100 * (N-M)） * 2 ** M を計算して、結果を出力します
# これは、「2のM乗倍にした、1900×M＋100×(N-M)」を意味します。
# たとえばM問の難しい問題に正解するまでの期待値計算など、競技プログラミングでよく出る式です。

print((1900 * M + 100 * (N - M)) * 2 ** M)  # 計算式：まずMを1900倍、N-Mを100倍して合計し、それを2のM乗倍して結果を出力します。
# print()は、括弧内の値を標準出力（一般的にはコンソール、ターミナル）に表示します。
# ここでの四則演算＋べき乗は優先順位に従って計算され、乗算（*）や加減算（+,-）、べき乗（**）が適切に処理されます。

# まとめ：
# このコードは標準入力からNとMを受け取り、競技プログラミングでよくある期待値や確率的な問題で使う式を計算して出力するものです。
# 多くの定義や下書きがコメントとして残っていますが、実際に動く部分は上記1行（print）です。