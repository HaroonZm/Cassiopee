def calculate_positions_and_weights():
    """
    Main function to compute the minimal number of extra weights (of at most 50000 units) 
    required to balance the system (bring the moment to zero) by placing them at position 1 or -1.

    Inputs:
        l (int): Length of the balance, not used in the calculation but required as per the problem statement.
        n (int): Number of already placed weights.
        Next n lines: Each contains two integers x (position) and w (weight).
    Outputs:
        Prints:
            1. Number of additional weights needed.
            2. For each additional weight, a line containing the position (1 or -1) and weight required at that position.
    """
    # Read the length of the balance (not used here, but input must be consumed)
    l = int(input())
    # Read the number of weights to be placed on the balance
    n = int(input())
    # Initialize the total moment (sum of position*weight for all weights)
    mom = 0
    # Compute the moment generated by the given weights
    for _ in range(n):
        x, w = map(int, input().split())
        mom += x * w

    # This list will store the positions and corresponding extra weights needed to balance the moment
    weight = []
    # Continue adjusting until the moment becomes zero
    while mom:
        # If the moment is negative, add weights at position 1 to increase the moment
        if mom < 0:
            # Calculate how much weight can be added at this turn without exceeding 50000
            add_weight = min(-mom, 50000)
            mom += add_weight  # Since position is 1, effect is +add_weight
            weight.append((1, add_weight))
        # If the moment is positive, add weights at position -1 to decrease the moment
        elif mom > 0:
            # Calculate how much weight can be added at this turn without exceeding 50000
            add_weight = min(mom, 50000)
            mom -= add_weight  # Since position is -1, effect is -add_weight
            weight.append((-1, add_weight))

    # Print the number of additional weights required
    print(len(weight))
    # Print the position and weight for each additional required weight
    for t in weight:
        print(*t)

# Call the function to run the logic
calculate_positions_and_weights()