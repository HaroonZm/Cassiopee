def display_soroban(num):
    # ソロバン1桁の表示パターン（上段4行＋下段5行＋下珠の＝）
    patterns = {
        '0': ['****', '*  *', '****', '****', '*****', '*****', '*****', '=====', '****', '*   ', '*****', '*****', '*****'],
        '1': ['    ', '*   ', '    ', '    ', '    ', '    ', '    ', '=====', '    ', '*   ', '    ', '    ', '    '],
        '2': ['****', '  * ', '****', '****', '*****', '*****', '*****', '=====', '  * ', '    ', '*****', '*****', '*****'],
        '3': ['****', '  * ', '****', '****', '*****', '*****', '*****', '=====', '  * ', '  * ', '*****', '*****', '*****'],
        '4': ['*  *', '*  *', '****', '****', '*****', '*****', '*****', '=====', '****', '  * ', '*****', '*****', '*****'],
        '5': ['****', '*   ', '****', '****', '*****', '*****', '*****', '=====', '****', '  * ', '*****', '*****', '*****'],
        '6': ['****', '*   ', '****', '****', '*****', '*****', '*****', '=====', '****', '* * ', '*****', '*****', '*****'],
        '7': ['****', '  * ', '    ', '    ', '    ', '    ', '    ', '=====', '    ', '*   ', '    ', '    ', '    '],
        '8': ['****', '* * ', '****', '****', '*****', '*****', '*****', '=====', '****', '* * ', '*****', '*****', '*****'],
        '9': ['****', '* * ', '****', '****', '*****', '*****', '*****', '=====', '****', '  * ', '*****', '*****', '*****'],
    }

def soroban_digit(d):
    # 上段4行と下段5行＋下珠の＝を分離して出力
    # しかし問題文の表示方法が不明瞭なので次のサンプルに従い構築
    # 実際の珠の配置は '*'、' '、'=' のみで表示される
    # サンプルから考察して0～9用のリスト構築する方が確実
    # ここではサンプルの実装に合わせ5桁で出力
    pass


# サンプルで確認した珠の配置の実装方針（簡略）
# 0～9の表示パターン（上段4行、下段5行、=1行の計10行で1桁）
# 上段の桁珠4行
upper = [
    "****", # 0
    "*   ", # 1
    "****", # 2
    "****", # 3
    "*  *", # 4
    "****", # 5
    "****", # 6
    "****", # 7
    "****", # 8
    "****", # 9
]
upper2 = [
    "*   ", # 0
    "*   ", # 1
    "  * ", # 2
    "  * ", # 3
    "*  *", # 4
    "*   ", # 5
    "*   ", # 6
    "  * ", # 7
    "* * ", # 8
    "* * ", # 9
]
upper3 = [
    "****", # 0
    "    ", # 1
    "****", # 2
    "****", # 3
    "****", # 4
    "****", # 5
    "****", # 6
    "    ", # 7
    "****", # 8
    "****", # 9
]
upper4 = [
    "****", # 0
    "    ", # 1
    "****", # 2
    "****", # 3
    "****", # 4
    "****", # 5
    "****", # 6
    "    ", # 7
    "****", # 8
    "****", # 9
]
# 下段の桁珠5行
lower = [
    "*****", # 0
    "*****", # 1
    "*****", # 2
    "*****", # 3
    "*****", # 4
    "*****", # 5
    "*****", # 6
    "*****", # 7
    "*****", # 8
    "*****", # 9
]
# 下珠の "=" 1行
eq = "====="

def print_soroban_number(s):
    s = s.rjust(5, '0')
    for i in range(4):
        print(" ".join([upper[i == 0 and 0 or i == 1 and 1 or i == 2 and 2 or 3][int(d)] for d in s]))
    # 上記は間違いなので正しくは：
    for i, line in enumerate([upper, upper2, upper3, upper4]):
        print(" ".join(line[int(d)] for d in s))
    for i in range(5):
        print(" ".join(lower[int(d)] for d in s))
    print(eq + " " + eq + " " + eq + " " + eq + " " + eq)
    # しかしサンプルは5桁分=は1行のみ
    # なので下珠の＝は数字の桁数×"====="を空白区切りで並べるだけ
    # 上段4行 - 上の珠
    for i, lines in enumerate([upper, upper2, upper3, upper4]):
        print(" ".join(line[int(d)] for d in s))
    # 下段5行 - 下の珠
    for _ in range(5):
        print(" ".join(lower[int(d)] for d in s))
    # 下段1行 - '='
    print(" ".join([eq]*5))


# 正しい表示を作成
# サンプルから珠の配置を作るコード
patterns_upper = [
    ["****","*   ","****","****","*  *","****","****","****","****","****"],
    ["*   ","*   ","  * ","  * ","*  *","*   ","*   ","  * ","* * ","* * "],
    ["****","    ","****","****","****","****","****","    ","****","****"],
    ["****","    ","****","****","****","****","****","    ","****","****"],
]
patterns_lower = [
    ["*****"]*10,
    ["*****"]*10,
    ["*****"]*10,
    ["*****"]*10,
    ["*****"]*10,
]

def print_soroban(num):
    num = num.rjust(5, '0')
    for i in range(4):
        print(" ".join(patterns_upper[i][int(d)] for d in num))
    for i in range(5):
        print(" ".join(patterns_lower[i][int(d)] for d in num))
    print(" ".join(["====="]*5))

import sys
for line in sys.stdin:
    line=line.strip()
    if not line:
        continue
    print_soroban(line)
    print()