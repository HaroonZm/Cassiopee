from sys import stdin
import queue

# ??£??\?????????
adjacent =(
    (1,3),     # 0
    (0,2,4),   # 1
    (1,5),     # 2
    (0,4,6),   # 3
    (1,3,5,7), # 4
    (2,4,8),   # 5
    (3,7),     # 6
    (4,6,8),   # 7
    (5,7)      # 8
)

# ?±???¢?????????
class State:
    def __init__(self,board,space,prev):
        self.board = board # ?????¢?????¨?????????
        self.space = space # ?????´????????????(0?????????)
        self.prev = prev   # 1??????????±???¢(State??????????????§??????)

def bf_search(start,end):
    q = queue.Queue()
    q.put(State(start,start.index(0),None)) #item???Q?????\??????
    table = {} # ??????????????????
    table[tuple(start)] = True # ???????±???¢????????§???????????????????????????

    while not q.empty(): # empty()???Q???????????´??????True????????????????????§????????´??????False?????????
        a = q.get() # Q??????item????????????????????????????????????
        for i in adjacent[a.space]: # i????????????0?????????
            b = a.board[:] # ???????????¢???b????????????
            b[a.space] = b[i] # ?¬?????????¢?????????
            b[i] = 0          # ?¬?????????¢?????????
            
            
            key = tuple(b) # b???????????¨??????table????????¨??????????¢??????????
            if key in table:
                continue # ?????¨?????????for?????????????????£?????°???????????¢b?????????

            # table????????¨???????????´????????°???????±???¢c?????????
            # b?????°???????????¢?????¨????????????i????????????0????????????a???1??????????±???¢
            c = State(b,i,a) 

            # b???end????????´?????????printAns()??§???????????°?????¨???
            if b == end:
                return printAns(c)

            # ?????´???????????£??????Q???c????????????
            q.put(c)
            # key????????£???True?????????
            table[key] = True

count = -1
def printAns(c):
    global count
    if c is not None: 
        count += 1
        printAns(c.prev) # c.prev??????????????????????????¨????????£????????°?????°??????
    return count

# ??????????????????????????????
end = [1,2,3,4,5,6,7,8,0]

# ??\???
start = [ int(n) for _ in range(3) for n in stdin.readline().split() ]

if start == end:
    print(0)
else:
    print(bf_search(start,end))