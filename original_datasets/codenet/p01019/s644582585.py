dic = {((0, 0), (0, 1), (0, 2), (0, 3), (0, 4),
        (1, 0), (1, 4),
        (2, 0), (2, 1), (2, 2), (2, 3), (2, 4)):"0",

       ((0, 0), (0, 1), (0, 2), (0, 3), (0, 4)):"1",

       ((0, 0), (0, 2), (0, 3), (0, 4),
        (1, 0), (1, 2), (1, 4),
        (2, 0), (2, 1), (2, 2), (2, 4)):"2",

       ((0, 0), (0, 2), (0, 4),
        (1, 0), (1, 2), (1, 4),
        (2, 0), (2, 1), (2, 2), (2, 3), (2, 4)):"3",

       ((0, 0), (0, 1), (0, 2),
        (1, 2),
        (2, 0), (2, 1), (2, 2), (2, 3), (2, 4)):"4",

       ((0, 0), (0, 1), (0, 2), (0, 4),
        (1, 0), (1, 2), (1, 4),
        (2, 0), (2, 2), (2, 3), (2, 4)):"5",

       ((0, 0), (0, 1), (0, 2), (0, 3), (0, 4),
        (1, 0), (1, 2), (1, 4),
        (2, 0), (2, 2), (2, 3), (2, 4)):"6",

       ((0, 0), 
        (1, 0),
        (2, 0), (2, 1), (2, 2), (2, 3), (2, 4)):"7",

       ((0, 0), (0, 1), (0, 2), (0, 3), (0, 4),
        (1, 0), (1, 2), (1, 4),
        (2, 0), (2, 1), (2, 2), (2, 3), (2, 4)):"8",

       ((0, 0), (0, 1), (0, 2), (0, 4),
        (1, 0), (1, 2), (1, 4),
        (2, 0), (2, 1), (2, 2), (2, 3), (2, 4)):"9",

       ((0, 0),
        (1, -1), (1, 0), (1, 1),
        (2, 0)):"+",

       ((0, 0),
        (1, 0), 
        (2, 0)):"-",

       ((0, 0), ):"*"}

n = int(input())
mp = [[0] * 201 for _ in range(201)]
for _ in range(n):
  x1, y1, x2, y2 = map(int, input().split())
  if x1 == x2:
    y1, y2 = min(y1, y2), max(y1, y2)
    for y in range(y1, y2 + 1):
      mp[y][x1] = 1

  elif y1 == y2:
    x1, x2 = min(x1, x2), max(x1, x2)
    for x in range(x1, x2 + 1):
      mp[y1][x] = 1

checked = [[False] * 201 for _ in range(201)]
vec = ((1, 0), (0, -1), (-1, 0), (0, 1))

def search(x, y, ix, iy, stack):
  for dx, dy in vec:
    if not 0 <= y + dy < 201 or not 0 <= x + dx < 201:continue
    if mp[y + dy][x + dx] == 1 and not checked[y + dy][x + dx]:
      checked[y + dy][x + dx] = True
      stack.append((x + dx - ix, y + dy - iy))
      search(x + dx, y + dy, ix, iy, stack)

s = ""
for x in range(201):
  for y in range(201):
    if mp[y][x] == 1 and not checked[y][x]:
      checked[y][x] = True
      stack = [(0, 0)]
      search(x, y, x, y, stack)
      stack.sort()
      s += dic[tuple(stack)]

print(eval(s))